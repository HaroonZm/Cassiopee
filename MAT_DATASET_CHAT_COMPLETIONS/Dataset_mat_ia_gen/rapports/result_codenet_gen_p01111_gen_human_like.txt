================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:32
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

for line in sys.stdin:
    b = line.strip()
    if b == '0':
        break
    b = int(b)
    max_len = 1
    start_floor = b
    # The length of consecutive floors (k) satisfies k(k+1)/2 <= b + (k-1)*x for some x
    # We try all k from largest possible down to 1
    max_k = int((2*b)**0.5) + 2
    for k in range(max_k, 0, -1):
        # We need to solve for x (lowest floor)
        # sum of k floors starting from x:
        # sum = k*(2x + k -1)/2 = b
        # => 2b = k*(2x + k -1)
        # => 2x + k -1 = 2b/k
        # => 2x = 2b/k - (k-1)
        # x = (2b/k - (k-1)) / 2
        if 2*b % k != 0:
            continue
        val = 2*b//k - (k-1)
        if val <= 0 or val % 2 != 0:
            continue
        x = val // 2
        if x >= 1:
            max_len = k
            start_floor = x
            break
    print(start_floor, max_len)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.20064200460910797
    2. '.' → logprob: -2.4506421089172363
    3. '<|end|>' → logprob: -2.8256421089172363
    4. '\' → logprob: -4.700642108917236
    5. 'newline' → logprob: -5.075642108917236
    6. 'import' → logprob: -5.075642108917236
    7. '
' → logprob: -5.700642108917236
    8. '' → logprob: -5.825642108917236
    9. '<|end|>' → logprob: -5.825642108917236
    10. '\r' → logprob: -6.200642108917236

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00012535012501757592
    2. 'os' → logprob: -9.00012493133545
    3. ' math' → logprob: -13.87512493133545
    4. '"os' → logprob: -15.12512493133545
    5. ' re' → logprob: -15.50012493133545
    6. ' o' → logprob: -15.87512493133545
    7. ' ' → logprob: -16.125125885009766
    8. ' json' → logprob: -16.250125885009766
    9. '	os' → logprob: -16.375125885009766
    10. '_os' → logprob: -17.000125885009766

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2752407193183899
    2. '\n' → logprob: -2.775240659713745
    3. 'import' → logprob: -3.025240659713745
    4. '<|end|>' → logprob: -3.275240659713745
    5. '\' → logprob: -3.400240659713745
    6. '
' → logprob: -3.650240659713745
    7. '```' → logprob: -4.400240898132324
    8. '

' → logprob: -5.275240898132324
    9. '<|end|>' → logprob: -5.275240898132324
    10. ',' → logprob: -5.900240898132324

Token 6: 'for' (ID: 1938)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.22251643240451813
    2. '```' → logprob: -2.9725165367126465
    3. '\' → logprob: -3.0975165367126465
    4. '\n' → logprob: -3.2225165367126465
    5. 'import' → logprob: -3.4725165367126465
    6. ',' → logprob: -4.5975165367126465
    7. 'def' → logprob: -5.7225165367126465
    8. '*' → logprob: -5.8475165367126465
    9. '#' → logprob: -5.8475165367126465
    10. '(' → logprob: -6.2225165367126465

Token 7: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0007032568100839853
    2. '  ' → logprob: -7.37570333480835
    3. ' i' → logprob: -9.625702857971191
    4. ' ```' → logprob: -13.125702857971191
    5. ' space' → logprob: -13.500702857971191
    6. 'space' → logprob: -13.625702857971191
    7. '_' → logprob: -14.125702857971191
    8. ' ‌' → logprob: -14.250702857971191
    9. ' ▁' → logprob: -14.625702857971191
    10. ' s' → logprob: -14.625702857971191

Token 8: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1043541431427002
    2. 'in' → logprob: -2.3543541431427
    3. '[' → logprob: -6.229353904724121
    4. '(' → logprob: -7.729353904724121
    5. ':' → logprob: -7.729353904724121
    6. ' ' → logprob: -8.354353904724121
    7. '.' → logprob: -9.104353904724121
    8. 'import' → logprob: -9.104353904724121
    9. '```' → logprob: -9.354353904724121
    10. '_in' → logprob: -9.479353904724121

Token 9: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.009867997840046883
    2. 'sys' → logprob: -4.634868144989014
    3. '=sys' → logprob: -9.759867668151855
    4. ' iter' → logprob: -11.509867668151855
    5. '	sys' → logprob: -11.634867668151855
    6. '(sys' → logprob: -11.634867668151855
    7. ' ' → logprob: -12.009867668151855
    8. ' file' → logprob: -12.259867668151855
    9. ' open' → logprob: -12.384867668151855
    10. '```' → logprob: -12.634867668151855

Token 10: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.22279712557792664
    2. '.' → logprob: -1.847797155380249
    3. '.argv' → logprob: -3.847797155380249
    4. '.readline' → logprob: -4.22279691696167
    5. ' .' → logprob: -5.47279691696167
    6. '.stdout' → logprob: -6.97279691696167
    7. '.input' → logprob: -7.59779691696167
    8. '.readlines' → logprob: -8.847797393798828
    9. '.import' → logprob: -9.597797393798828
    10. '.stderr' → logprob: -9.847797393798828

Token 11: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001283448887988925
    2. '.readline' → logprob: -7.251283645629883
    3. '.' → logprob: -8.251283645629883
    4. ':
' → logprob: -8.626283645629883
    5. ' :' → logprob: -10.501283645629883
    6. ':**' → logprob: -11.001283645629883
    7. '):' → logprob: -11.126283645629883
    8. '.readlines' → logprob: -11.126283645629883
    9. '[:]' → logprob: -11.626283645629883
    10. '>:' → logprob: -12.251283645629883

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001234399271197617
    2. '    
' → logprob: -7.251234531402588
    3. '    ' → logprob: -8.75123405456543
    4. ' if' → logprob: -9.25123405456543
    5. ' readline' → logprob: -9.62623405456543
    6. ' ' → logprob: -10.12623405456543
    7. '```' → logprob: -10.50123405456543
    8. ' print' → logprob: -10.50123405456543
    9. ' line' → logprob: -11.12623405456543
    10. '   ' → logprob: -11.12623405456543

Token 13: ' b' (ID: 287)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06617355346679688
    2. ' line' → logprob: -2.816173553466797
    3. 'line' → logprob: -6.191173553466797
    4. ' if' → logprob: -7.316173553466797
    5. ' print' → logprob: -7.566173553466797
    6. ' stripped' → logprob: -7.566173553466797
    7. 'print' → logprob: -8.316173553466797
    8. ' data' → logprob: -9.941173553466797
    9. '    ' → logprob: -10.441173553466797
    10. 'data' → logprob: -10.816173553466797

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.978297770023346
    2. '=' → logprob: -1.1032977104187012
    3. 'r' → logprob: -1.8532977104187012
    4. 'u' → logprob: -2.853297710418701
    5. 'e' → logprob: -4.103297710418701
    6. 'y' → logprob: -4.603297710418701
    7. '   ' → logprob: -4.728297710418701
    8. ',' → logprob: -4.728297710418701
    9. 'i' → logprob: -4.853297710418701
    10. 'uffer' → logprob: -4.978297710418701

Token 15: ' line' (ID: 2543)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.6721900701522827
    2. 'float' → logprob: -2.0471901893615723
    3. ' line' → logprob: -2.0471901893615723
    4. ' int' → logprob: -2.1721901893615723
    5. 'int' → logprob: -2.6721901893615723
    6. 'line' → logprob: -3.0471901893615723
    7. ' math' → logprob: -8.172189712524414
    8. ' ' → logprob: -8.422189712524414
    9. '   ' → logprob: -9.922189712524414
    10. 'math' → logprob: -10.922189712524414

Token 16: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.10027913004159927
    2. '.' → logprob: -2.8502790927886963
    3. '.rstrip' → logprob: -3.7252790927886963
    4. '.split' → logprob: -4.350279331207275
    5. ' .' → logprob: -7.725279331207275
    6. '.readline' → logprob: -10.475278854370117
    7. 'strip' → logprob: -11.225278854370117
    8. 'reak' → logprob: -11.350278854370117
    9. '[:-' → logprob: -11.350278854370117
    10. '.replace' → logprob: -11.350278854370117

Token 17: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5861894488334656
    2. '(' → logprob: -0.8361894488334656
    3. '('' → logprob: -5.211189270019531
    4. ''' → logprob: -6.461189270019531
    5. '"' → logprob: -6.711189270019531
    6. '().' → logprob: -7.336189270019531
    7. '("("' → logprob: -8.086189270019531
    8. ')' → logprob: -8.836189270019531
    9. '(
' → logprob: -9.211189270019531
    10. '`' → logprob: -9.836189270019531

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2574272155761719
    2. ' if' → logprob: -1.2574272155761719
    3. '<|end|>' → logprob: -1.8824272155761719
    4. ' ==' → logprob: -2.882427215576172
    5. ' ' → logprob: -3.132427215576172
    6. '.' → logprob: -3.132427215576172
    7. 'if' → logprob: -3.507427215576172
    8. ' =' → logprob: -3.632427215576172
    9. ')' → logprob: -4.507427215576172
    10. '=' → logprob: -4.757427215576172

Token 19: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5045605301856995
    2. 'if' (adapté à ' if') → logprob: -1.0045604705810547
    3. ' ' → logprob: -4.504560470581055
    4. '   ' → logprob: -4.754560470581055
    5. '    ' → logprob: -5.629560470581055
    6. ')' → logprob: -7.129560470581055
    7. '=' → logprob: -7.379560470581055
    8. '`' → logprob: -7.504560470581055
    9. ' =' → logprob: -7.879560470581055
    10. ',' → logprob: -8.004560470581055

Token 20: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.7046200633049011
    2. ' not' → logprob: -0.8296200633049011
    3. ' ' → logprob: -2.954620122909546
    4. 'b' → logprob: -4.204619884490967
    5. 'not' → logprob: -6.329619884490967
    6. ' len' → logprob: -7.579619884490967
    7. ''' → logprob: -9.579620361328125
    8. 'len' → logprob: -10.579620361328125
    9. '  ' → logprob: -10.579620361328125
    10. '"' → logprob: -10.954620361328125

Token 21: ' ==' (ID: 951)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1804039478302002
    2. '==' → logprob: -1.3054039478302002
    3. ' ==' → logprob: -1.3054039478302002
    4. '.startswith' → logprob: -2.8054039478302
    5. '.' → logprob: -3.0554039478302
    6. '.is' → logprob: -4.055403709411621
    7. '>' → logprob: -5.305403709411621
    8. '<|end|>' → logprob: -5.305403709411621
    9. ' .' → logprob: -6.055403709411621
    10. '.endswith' → logprob: -6.180403709411621

Token 22: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.808230459690094
    2. ''' → logprob: -0.933230459690094
    3. '''' → logprob: -2.433230400085449
    4. '""' → logprob: -2.683230400085449
    5. '"":' → logprob: -6.433230400085449
    6. ' '' → logprob: -6.808230400085449
    7. ' ""' → logprob: -7.183230400085449
    8. ' "' → logprob: -7.558230400085449
    9. ' ''' → logprob: -8.05823040008545
    10. ' ' → logprob: -9.18323040008545

Token 23: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17921282351016998
    2. ''' → logprob: -2.304212808609009
    3. '':' → logprob: -3.054212808609009
    4. '''' → logprob: -4.554213047027588
    5. ''end' → logprob: -6.429213047027588
    6. '"' → logprob: -6.929213047027588
    7. ' ' → logprob: -7.679213047027588
    8. ''e' → logprob: -7.804213047027588
    9. '"":' → logprob: -8.05421257019043
    10. 'EOF' → logprob: -8.17921257019043

Token 24: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.16628263890743256
    2. ':' → logprob: -1.9162826538085938
    3. ' ':' → logprob: -6.541282653808594
    4. ''' → logprob: -6.541282653808594
    5. ' :' → logprob: -7.041282653808594
    6. '0' → logprob: -7.666282653808594
    7. '\n' → logprob: -7.791282653808594
    8. ' ' → logprob: -8.166282653808594
    9. '":' → logprob: -8.791282653808594
    10. '':
' → logprob: -8.916282653808594

Token 25: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010326245799660683
    2. '   ' → logprob: -4.760326385498047
    3. ':' → logprob: -7.385326385498047
    4. '    ' → logprob: -7.635326385498047
    5. ' break' → logprob: -8.260326385498047
    6. ' ' → logprob: -9.385326385498047
    7. '     ' → logprob: -9.385326385498047
    8. '      ' → logprob: -9.760326385498047
    9. '\n' → logprob: -10.260326385498047
    10. '	break' → logprob: -11.260326385498047

Token 26: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3197750747203827
    2. ' break' → logprob: -1.319775104522705
    3. '   ' → logprob: -5.444775104522705
    4. 'break' (adapté à ' break') → logprob: -6.444775104522705
    5. '	break' → logprob: -7.694775104522705
    6. '\n' → logprob: -9.444774627685547
    7. '    ' → logprob: -11.194774627685547
    8. ' ' → logprob: -11.694774627685547
    9. '           ' → logprob: -11.819774627685547
    10. '     ' → logprob: -12.444774627685547

Token 27: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.060388874262571335
    2. '    
' → logprob: -2.9353888034820557
    3. '
' → logprob: -6.435389041900635
    4. '   
' → logprob: -6.935389041900635
    5. '```' → logprob: -7.310389041900635
    6. ':' → logprob: -7.310389041900635
    7. '  
' → logprob: -7.685389041900635
    8. '<|end|>' → logprob: -8.560388565063477
    9. '  ' → logprob: -8.685388565063477
    10. ',' → logprob: -8.810388565063477

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1494387984275818
    2. '    
' → logprob: -2.0244388580322266
    3. '
' → logprob: -5.524438858032227
    4. '  
' → logprob: -7.274438858032227
    5. '```' → logprob: -7.649438858032227
    6. '   
' → logprob: -7.774438858032227
    7. '<|end|>' → logprob: -7.774438858032227
    8. '        
' → logprob: -9.024438858032227
    9. '    
    
' → logprob: -9.274438858032227
    10. '     
' → logprob: -9.524438858032227

Token 29: ' b' (ID: 287)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8544342517852783
    2. ' 
' → logprob: -1.1044342517852783
    3. '    
' → logprob: -2.7294342517852783
    4. ',' → logprob: -3.1044342517852783
    5. '  
' → logprob: -3.6044342517852783
    6. '   ' → logprob: -4.229434013366699
    7. '   
' → logprob: -4.229434013366699
    8. 'n' → logprob: -4.354434013366699
    9. ' ,' → logprob: -4.479434013366699
    10. '<|end|>' → logprob: -4.604434013366699

Token 30: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1118561029434204
    2. '.' → logprob: -1.2368561029434204
    3. ' =' → logprob: -1.2368561029434204
    4. '+' → logprob: -3.611855983734131
    5. ' ' → logprob: -3.986855983734131
    6. ')' → logprob: -4.611855983734131
    7. ',' → logprob: -4.861855983734131
    8. '=int' → logprob: -5.611855983734131
    9. 'int' → logprob: -5.736855983734131
    10. '<|end|>' → logprob: -5.861855983734131

Token 31: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5826493501663208
    2. ' int' → logprob: -0.8326493501663208
    3. 'b' → logprob: -5.957649230957031
    4. ' float' → logprob: -6.832649230957031
    5. ' b' → logprob: -7.082649230957031
    6. 'float' → logprob: -7.207649230957031
    7. ' bin' → logprob: -8.082649230957031
    8. 'bin' → logprob: -8.207649230957031
    9. '[int' → logprob: -8.457649230957031
    10. '   ' → logprob: -8.957649230957031

Token 32: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.4741063117980957
    2. '(' → logprob: -0.9741063117980957
    3. '('' → logprob: -11.599105834960938
    4. ' (' → logprob: -11.974105834960938
    5. 'b' → logprob: -12.099105834960938
    6. '(
' → logprob: -13.599105834960938
    7. '(`' → logprob: -14.349105834960938
    8. '(s' → logprob: -14.474105834960938
    9. '(line' → logprob: -14.599105834960938
    10. '(B' → logprob: -14.599105834960938

Token 33: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021914218086749315
    2. ' )' → logprob: -6.752191543579102
    3. '**' → logprob: -7.877191543579102
    4. ',' → logprob: -7.877191543579102
    5. ')
' → logprob: -9.377191543579102
    6. '))' → logprob: -9.877191543579102
    7. '*' → logprob: -10.627191543579102
    8. ')**' → logprob: -10.627191543579102
    9. '   ' → logprob: -11.002191543579102
    10. '+' → logprob: -11.377191543579102

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0090896962210536
    2. '    
' → logprob: -6.384089469909668
    3. ',' → logprob: -6.634089469909668
    4. '    ' → logprob: -6.759089469909668
    5. ' ' → logprob: -6.884089469909668
    6. 'n' → logprob: -6.884089469909668
    7. ' if' → logprob: -7.509089469909668
    8. '  ' → logprob: -7.759089469909668
    9. ' 
' → logprob: -8.509089469909668
    10. '     
' → logprob: -8.634089469909668

Token 35: ' max' (ID: 2999)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3331325948238373
    2. '   ' → logprob: -2.20813250541687
    3. 'n' → logprob: -3.08313250541687
    4. ' 
' → logprob: -3.20813250541687
    5. '    ' → logprob: -4.708132743835449
    6. '_' → logprob: -4.958132743835449
    7. 's' → logprob: -5.083132743835449
    8. '.' → logprob: -5.333132743835449
    9. ' if' → logprob: -5.333132743835449
    10. '    
' → logprob: -5.458132743835449

Token 36: '_len' (ID: 13683)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.6329031586647034
    2. '_' → logprob: -2.2579030990600586
    3. '_value' → logprob: -2.3829030990600586
    4. '_factor' → logprob: -2.8829030990600586
    5. '_div' → logprob: -3.1329030990600586
    6. '_num' → logprob: -3.2579030990600586
    7. '_len' → logprob: -3.8829030990600586
    8. '_s' → logprob: -4.007903099060059
    9. '_length' → logprob: -4.507903099060059
    10. '_sum' → logprob: -4.507903099060059

Token 37: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43008726835250854
    2. ' =' → logprob: -1.1800873279571533
    3. '_' → logprob: -3.1800873279571533
    4. ' ' → logprob: -8.180087089538574
    5. '_=' → logprob: -9.055087089538574
    6. ',' → logprob: -9.180087089538574
    7. '(' → logprob: -10.430087089538574
    8. ')' → logprob: -10.805087089538574
    9. '-' → logprob: -10.930087089538574
    10. '_idx' → logprob: -11.430087089538574

Token 38: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12412499636411667
    2. ' b' → logprob: -3.1241250038146973
    3. '1' → logprob: -3.6241250038146973
    4. '0' → logprob: -3.8741250038146973
    5. ' math' → logprob: -4.124125003814697
    6. ' int' → logprob: -5.624125003814697
    7. 'b' → logprob: -5.749125003814697
    8. 'math' → logprob: -6.749125003814697
    9. 'int' → logprob: -7.624125003814697
    10. ' max' → logprob: -8.374124526977539

Token 39: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9522826671600342
    2. '1' → logprob: -0.9522826671600342
    3. 'int' → logprob: -1.9522826671600342
    4. 'math' → logprob: -2.952282667160034
    5. 'b' → logprob: -3.577282667160034
    6. ' ' → logprob: -6.952282905578613
    7. 'max' → logprob: -7.077282905578613
    8. 'len' → logprob: -7.077282905578613
    9. '2' → logprob: -7.327282905578613
    10. ' math' → logprob: -7.702282905578613

Token 40: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3858968913555145
    2. ' 
' → logprob: -1.510896921157837
    3. '<|end|>' → logprob: -2.760896921157837
    4. ' ' → logprob: -4.260896682739258
    5. '    
' → logprob: -4.885896682739258
    6. '  
' → logprob: -5.510896682739258
    7. '0' → logprob: -5.885896682739258
    8. '     
' → logprob: -6.135896682739258
    9. '<|end|>' → logprob: -6.885896682739258
    10. '   
' → logprob: -7.260896682739258

Token 41: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25439825654029846
    2. ' 
' → logprob: -2.0043983459472656
    3. '<|end|>' → logprob: -2.8793983459472656
    4. '    
' → logprob: -4.379398345947266
    5. '  
' → logprob: -5.004398345947266
    6. ' ' → logprob: -5.629398345947266
    7. '0' → logprob: -5.754398345947266
    8. '   
' → logprob: -6.254398345947266
    9. '\n' → logprob: -7.129398345947266
    10. '     
' → logprob: -7.129398345947266

Token 42: ' start' (ID: 1604)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4845830798149109
    2. ' ' → logprob: -1.9845831394195557
    3. 'for' → logprob: -2.1095831394195557
    4. ' 
' → logprob: -2.3595831394195557
    5. ' max' → logprob: -4.859582901000977
    6. '    
' → logprob: -5.359582901000977
    7. '   ' → logprob: -5.609582901000977
    8. '  
' → logprob: -5.609582901000977
    9. '
' → logprob: -6.984582901000977
    10. '     
' → logprob: -6.984582901000977

Token 43: '_floor' (ID: 152330)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3491751551628113
    2. '_' → logprob: -1.599175214767456
    3. '=' → logprob: -2.474175214767456
    4. '_idx' → logprob: -4.849174976348877
    5. '_index' → logprob: -7.724174976348877
    6. '_=' → logprob: -9.349175453186035
    7. ',' → logprob: -10.724175453186035
    8. 'ing' → logprob: -11.599175453186035
    9. '_pos' → logprob: -11.849175453186035
    10. ' ' → logprob: -11.849175453186035

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1345951110124588
    2. '=' → logprob: -2.1345951557159424
    3. 's' → logprob: -5.259594917297363
    4. ',' → logprob: -6.134594917297363
    5. ' ' → logprob: -8.509594917297363
    6. '_' → logprob: -10.009594917297363
    7. ' ,' → logprob: -11.634594917297363
    8. '_idx' → logprob: -12.259594917297363
    9. '  ' → logprob: -13.384594917297363
    10. '   ' → logprob: -13.509594917297363

Token 45: ' b' (ID: 287)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4448401629924774
    2. '1' → logprob: -1.1948401927947998
    3. '0' → logprob: -2.9448401927948
    4. ' b' → logprob: -6.069839954376221
    5. 'b' → logprob: -7.194839954376221
    6. '2' → logprob: -7.944839954376221
    7. ' math' → logprob: -9.319840431213379
    8. ' -' → logprob: -10.069840431213379
    9. 'math' → logprob: -10.382340431213379
    10. ' None' → logprob: -10.882340431213379

Token 46: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.43518128991127014
    2. '
' → logprob: -1.9351812601089478
    3. '<|end|>' → logprob: -2.1851813793182373
    4. '-' → logprob: -3.0601813793182373
    5. ' +' → logprob: -3.8101813793182373
    6. '<|end|>' → logprob: -5.185181140899658
    7. '   ' → logprob: -5.310181140899658
    8. ' for' → logprob: -5.810181140899658
    9. ' ' → logprob: -5.935181140899658
    10. ' -' → logprob: -6.185181140899658

Token 47: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32099348306655884
    2. '<|end|>' → logprob: -2.320993423461914
    3. '+' → logprob: -2.695993423461914
    4. '   ' → logprob: -3.445993423461914
    5. ' 
' → logprob: -3.820993423461914
    6. '    
' → logprob: -4.320993423461914
    7. ' for' → logprob: -4.695993423461914
    8. ' ' → logprob: -5.070993423461914
    9. '-' → logprob: -5.445993423461914
    10. '  
' → logprob: -5.570993423461914

Token 48: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13675332069396973
    2. ' 
' → logprob: -3.0117533206939697
    3. ' for' → logprob: -3.5117533206939697
    4. 'for' → logprob: -4.386753082275391
    5. '<|end|>' → logprob: -4.761753082275391
    6. '    
' → logprob: -5.136753082275391
    7. ' while' → logprob: -5.761753082275391
    8. '   ' → logprob: -5.886753082275391
    9. '  
' → logprob: -6.261753082275391
    10. '\n' → logprob: -6.386753082275391

Token 49: ' The' (ID: 623)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.21661944687366486
    2. 'for' → logprob: -1.7166194915771484
    3. ' ' → logprob: -5.591619491577148
    4. '   ' → logprob: -5.591619491577148
    5. ' while' → logprob: -6.466619491577148
    6. '<|end|>' → logprob: -6.716619491577148
    7. '```' → logprob: -6.841619491577148
    8. 'range' → logprob: -6.966619491577148
    9. '    ' → logprob: -7.591619491577148
    10. ' range' → logprob: -7.716619491577148

Token 50: ' length' (ID: 5517)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9237906336784363
    2. 're' → logprob: -2.173790693283081
    3. ' rest' → logprob: -2.173790693283081
    4. ' next' → logprob: -2.548790693283081
    5. ' #' → logprob: -2.673790693283081
    6. ' code' → logprob: -2.798790693283081
    7. 'for' → logprob: -3.298790693283081
    8. ' while' → logprob: -4.048790454864502
    9. ' following' → logprob: -4.423790454864502
    10. '#' → logprob: -4.423790454864502

Token 51: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.0283621549606323
    2. '=' → logprob: -1.4033621549606323
    3. ' =' → logprob: -1.4033621549606323
    4. '<|end|>' → logprob: -3.153362274169922
    5. '<|end|>' → logprob: -3.403362274169922
    6. ' ' → logprob: -3.528362274169922
    7. 'of' → logprob: -3.778362274169922
    8. 's' → logprob: -5.028362274169922
    9. '  ' → logprob: -5.653362274169922
    10. 'max' → logprob: -6.153362274169922

Token 52: ' consecutive' (ID: 40840)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.18447953462600708
    2. 'the' → logprob: -2.0594794750213623
    3. ' ' → logprob: -4.434479713439941
    4. ' a' → logprob: -5.059479713439941
    5. ' longest' → logprob: -5.434479713439941
    6. ' sequence' → logprob: -5.684479713439941
    7. 'a' → logprob: -5.934479713439941
    8. ' current' → logprob: -6.559479713439941
    9. ' sequences' → logprob: -6.559479713439941
    10. '1' → logprob: -6.934479713439941

Token 53: ' floors' (ID: 30181)
  Prédit: ' floors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' floors' → logprob: -0.8963733911514282
    2. ' sequence' → logprob: -1.8963733911514282
    3. ' integers' → logprob: -2.1463732719421387
    4. '1' → logprob: -2.8963732719421387
    5. ' numbers' → logprob: -3.2713732719421387
    6. ' ones' → logprob: -3.6463732719421387
    7. '_f' → logprob: -3.7713732719421387
    8. 'flo' → logprob: -3.7713732719421387
    9. 's' → logprob: -3.8963732719421387
    10. 'sequence' → logprob: -4.021373271942139

Token 54: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23189793527126312
    2. '=' → logprob: -2.2318978309631348
    3. '   ' → logprob: -3.6068978309631348
    4. ' is' → logprob: -3.8568978309631348
    5. ' with' → logprob: -4.731897830963135
    6. ',' → logprob: -4.856897830963135
    7. ' that' → logprob: -5.231897830963135
    8. 's' → logprob: -5.231897830963135
    9. ' ' → logprob: -5.356897830963135
    10. 'with' → logprob: -5.606897830963135

Token 55: 'k' (ID: 74)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6366421580314636
    2. ' is' → logprob: -2.6366422176361084
    3. ',' → logprob: -2.7616422176361084
    4. ' with' → logprob: -3.2616422176361084
    5. '=' → logprob: -3.3866422176361084
    6. ' that' → logprob: -3.6366422176361084
    7. ' =' → logprob: -3.7616422176361084
    8. ' )' → logprob: -3.8866422176361084
    9. ' in' → logprob: -4.011641979217529
    10. '   ' → logprob: -4.136641979217529

Token 56: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2023387998342514
    2. ' =' → logprob: -2.577338695526123
    3. ' )' → logprob: -2.952338695526123
    4. '=' → logprob: -3.702338695526123
    5. '+' → logprob: -4.577338695526123
    6. ' is' → logprob: -5.202338695526123
    7. ' >=' → logprob: -5.702338695526123
    8. ',' → logprob: -5.952338695526123
    9. ' +' → logprob: -6.452338695526123
    10. '>=' → logprob: -7.202338695526123

Token 57: ' satisfies' (ID: 126205)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23771779239177704
    2. '=' → logprob: -1.9877177476882935
    3. '<|end|>' → logprob: -3.612717866897583
    4. ' ' → logprob: -4.112717628479004
    5. ' is' → logprob: -4.112717628479004
    6. ',' → logprob: -5.112717628479004
    7. ' for' → logprob: -6.112717628479004
    8. '<|end|>' → logprob: -6.737717628479004
    9. '+' → logprob: -7.112717628479004
    10. '#' → logprob: -7.612717628479004

Token 58: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.232270747423172
    2. 'k' → logprob: -2.2322707176208496
    3. ' (' → logprob: -2.8572707176208496
    4. ' ' → logprob: -3.9822707176208496
    5. ' b' → logprob: -5.48227071762085
    6. ' math' → logprob: -5.48227071762085
    7. ' the' → logprob: -5.60727071762085
    8. '   ' → logprob: -6.60727071762085
    9. ':' → logprob: -6.60727071762085
    10. '1' → logprob: -6.85727071762085

Token 59: '(k' (ID: 12125)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.8006442189216614
    2. '*' → logprob: -1.0506441593170166
    3. '*(' → logprob: -1.8006441593170166
    4. '**' → logprob: -3.4256441593170166
    5. '(k' → logprob: -6.425644397735596
    6. '*k' → logprob: -7.050644397735596
    7. '+' → logprob: -8.300643920898438
    8. '^' → logprob: -8.675643920898438
    9. ' **' → logprob: -8.925643920898438
    10. ' +' → logprob: -9.550643920898438

Token 60: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.048286620527505875
    2. ' +' → logprob: -3.2982866764068604
    3. ')' → logprob: -5.048286437988281
    4. '+k' → logprob: -6.548286437988281
    5. '-' → logprob: -7.673286437988281
    6. ' <=' → logprob: -7.923286437988281
    7. ')<=' → logprob: -7.923286437988281
    8. '<=' → logprob: -7.923286437988281
    9. ')+' → logprob: -8.798286437988281
    10. ' -' → logprob: -8.923286437988281

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018232580623589456
    2. ' ' → logprob: -9.375182151794434
    3. ')' → logprob: -9.500182151794434
    4. '
' → logprob: -11.750182151794434
    5. '

' → logprob: -12.250182151794434
    6. '>' → logprob: -13.125182151794434
    7. '```' → logprob: -13.500182151794434
    8. '<|end|>' → logprob: -14.375182151794434
    9. '=' → logprob: -14.500182151794434
    10. '')' → logprob: -14.750182151794434

Token 62: ')/' (ID: 11876)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27826085686683655
    2. '/' → logprob: -2.5282609462738037
    3. ' <=' → logprob: -2.7782609462738037
    4. ' //' → logprob: -3.6532609462738037
    5. '//' → logprob: -3.9032609462738037
    6. ' )' → logprob: -4.153260707855225
    7. ')<=' → logprob: -4.153260707855225
    8. ' /' → logprob: -4.653260707855225
    9. ')/' → logprob: -4.903260707855225
    10. ')//' → logprob: -6.278260707855225

Token 63: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009983942145481706
    2. ' ' → logprob: -7.000998497009277
    3. '=' → logprob: -9.875998497009277
    4. '>' → logprob: -10.625998497009277
    5. '/' → logprob: -13.375998497009277
    6. '```' → logprob: -13.375998497009277
    7. '  ' → logprob: -13.938498497009277
    8. ')' → logprob: -14.000998497009277
    9. '...' → logprob: -14.250998497009277
    10. '

' → logprob: -14.438498497009277

Token 64: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0657447874546051
    2. '<|end|>' → logprob: -2.9407448768615723
    3. ' >=' → logprob: -5.315744876861572
    4. ' ' → logprob: -5.565744876861572
    5. '<=' → logprob: -7.440744876861572
    6. '  ' → logprob: -8.315744400024414
    7. ')' → logprob: -8.440744400024414
    8. '<|end|>' → logprob: -8.690744400024414
    9. ' *' → logprob: -8.940744400024414
    10. ' +' → logprob: -9.065744400024414

Token 65: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.14346201717853546
    2. 'b' → logprob: -2.0184619426727295
    3. ' ' → logprob: -7.393462181091309
    4. ' start' → logprob: -9.268462181091309
    5. 'start' → logprob: -10.143462181091309
    6. ' floor' → logprob: -11.643462181091309
    7. '<|end|>' → logprob: -11.893462181091309
    8. ' (' → logprob: -12.143462181091309
    9. ' ' → logprob: -13.268462181091309
    10. ' k' → logprob: -13.705962181091309

Token 66: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2397841364145279
    2. '<|end|>' → logprob: -2.4897842407226562
    3. ' ' → logprob: -3.7397842407226562
    4. ',' → logprob: -3.7397842407226562
    5. ' 
' → logprob: -4.114784240722656
    6. '   ' → logprob: -4.489784240722656
    7. ':' → logprob: -4.614784240722656
    8. '<|end|>' → logprob: -4.739784240722656
    9. '  ' → logprob: -5.489784240722656
    10. '  
' → logprob: -5.489784240722656

Token 67: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7406951189041138
    2. ' ' → logprob: -0.9906951189041138
    3. ' start' → logprob: -2.615694999694824
    4. 'start' → logprob: -2.990694999694824
    5. ' k' → logprob: -4.115694999694824
    6. 'k' → logprob: -5.740694999694824
    7. '0' → logprob: -5.990694999694824
    8. ' max' → logprob: -6.240694999694824
    9. ' (' → logprob: -6.490694999694824
    10. ' b' → logprob: -6.490694999694824

Token 68: 'k' (ID: 74)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.9030062556266785
    2. ' start' → logprob: -1.6530063152313232
    3. '1' → logprob: -1.9030063152313232
    4. 'k' → logprob: -2.2780063152313232
    5. ' k' → logprob: -2.9030063152313232
    6. ' max' → logprob: -3.5280063152313232
    7. ' ' → logprob: -3.6530063152313232
    8. 'max' → logprob: -4.278006076812744
    9. '0' → logprob: -4.778006076812744
    10. ' b' → logprob: -4.903006076812744

Token 69: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6343289017677307
    2. ')' → logprob: -1.009328842163086
    3. ' -' → logprob: -2.884328842163086
    4. ' ' → logprob: -4.509328842163086
    5. '<|end|>' → logprob: -5.009328842163086
    6. '*k' → logprob: -5.384328842163086
    7. '1' → logprob: -5.509328842163086
    8. 'k' → logprob: -5.759328842163086
    9. '+' → logprob: -6.384328842163086
    10. '**' → logprob: -6.509328842163086

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031228174921125174
    2. 'start' → logprob: -6.753122806549072
    3. ' ' → logprob: -7.128122806549072
    4. '2' → logprob: -7.878122806549072
    5. '<|end|>' → logprob: -8.12812328338623
    6. ')' → logprob: -8.62812328338623
    7. '   ' → logprob: -10.00312328338623
    8. 'k' → logprob: -10.00312328338623
    9. 'b' → logprob: -10.37812328338623
    10. '<|end|>' → logprob: -11.00312328338623

Token 71: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11751048266887665
    2. ' )' → logprob: -2.2425105571746826
    3. ' ' → logprob: -6.7425103187561035
    4. ')*' → logprob: -6.8675103187561035
    5. '<|end|>' → logprob: -7.3675103187561035
    6. ')
' → logprob: -7.9925103187561035
    7. '   ' → logprob: -8.492510795593262
    8. ' )
' → logprob: -8.867510795593262
    9. '*' → logprob: -8.867510795593262
    10. '  ' → logprob: -8.992510795593262

Token 72: 'x' (ID: 87)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8068963885307312
    2. 'k' → logprob: -1.181896448135376
    3. 'b' → logprob: -2.306896448135376
    4. ' k' → logprob: -2.931896448135376
    5. ' ' → logprob: -3.681896448135376
    6. ' b' → logprob: -3.681896448135376
    7. 'start' → logprob: -4.056896209716797
    8. '2' → logprob: -4.431896209716797
    9. ' start' → logprob: -5.556896209716797
    10. ' math' → logprob: -5.931896209716797

Token 73: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: ' some' (ID: 1236)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.13415198028087616
    2. ' ' → logprob: -2.6341519355773926
    3. 'x' → logprob: -3.5091519355773926
    4. '<|end|>' → logprob: -3.8841519355773926
    5. ' k' → logprob: -6.634151935577393
    6. '<|end|>' → logprob: -7.009151935577393
    7. ' a' → logprob: -8.50915241241455
    8. ' some' → logprob: -8.75915241241455
    9. ' range' → logprob: -9.13415241241455
    10. ' the' → logprob: -9.38415241241455

Token 75: ' x' (ID: 1215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.34885966777801514
    2. '<|end|>' → logprob: -1.8488596677780151
    3. ' x' → logprob: -2.0988597869873047
    4. 'x' → logprob: -5.473859786987305
    5. '  ' → logprob: -5.723859786987305
    6. ' \' → logprob: -6.223859786987305
    7. '    ' → logprob: -6.723859786987305
    8. '<|end|>' → logprob: -7.098859786987305
    9. ' 
' → logprob: -7.348859786987305
    10. '
' → logprob: -7.848859786987305

Token 76: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 77: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8434032201766968
    2. '<|end|>' → logprob: -0.9684032201766968
    3. '   ' → logprob: -2.3434033393859863
    4. ' ' → logprob: -3.4684033393859863
    5. ' 
' → logprob: -4.218403339385986
    6. '\n' → logprob: -4.218403339385986
    7. '<|end|>' → logprob: -5.093403339385986
    8. '    
' → logprob: -5.093403339385986
    9. '  ' → logprob: -5.343403339385986
    10. '  
' → logprob: -5.593403339385986

Token 78: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: ' We' (ID: 1416)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1721283495426178
    2. ' for' → logprob: -2.797128438949585
    3. '<|end|>' → logprob: -3.047128438949585
    4. ' ' → logprob: -3.922128438949585
    5. 'for' → logprob: -3.922128438949585
    6. '  ' → logprob: -6.172128200531006
    7. '<|end|>' → logprob: -6.172128200531006
    8. '```' → logprob: -6.547128200531006
    9. '    ' → logprob: -6.672128200531006
    10. ' while' → logprob: -7.297128200531006

Token 80: ' try' (ID: 2075)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.2875580787658691
    2. ' want' → logprob: -1.2875580787658691
    3. ' continue' → logprob: -2.162558078765869
    4. ' need' → logprob: -2.287558078765869
    5. ''ll' → logprob: -2.412558078765869
    6. 'import' → logprob: -3.287558078765869
    7. ''re' → logprob: -3.912558078765869
    8. 'continue' → logprob: -4.537558078765869
    9. 'def' → logprob: -4.912558078765869
    10. ' will' → logprob: -4.912558078765869

Token 81: ' all' (ID: 722)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.24117009341716766
    2. ' k' → logprob: -2.1161701679229736
    3. 'k' → logprob: -3.3661701679229736
    4. 'to' → logprob: -3.7411701679229736
    5. ' all' → logprob: -4.2411699295043945
    6. ' different' → logprob: -4.3661699295043945
    7. ' for' → logprob: -5.9911699295043945
    8. ' a' → logprob: -6.7411699295043945
    9. 'all' → logprob: -7.2411699295043945
    10. 'for' → logprob: -7.3661699295043945

Token 82: ' k' (ID: 372)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.846879780292511
    2. ' k' → logprob: -0.971879780292511
    3. 'k' → logprob: -1.9718797206878662
    4. 'possible' → logprob: -3.096879720687866
    5. ' values' → logprob: -5.721879959106445
    6. ' x' → logprob: -6.596879959106445
    7. ' possibilities' → logprob: -6.971879959106445
    8. 'b' → logprob: -7.846879959106445
    9. 'x' → logprob: -7.971879959106445
    10. 'values' → logprob: -8.096879959106445

Token 83: ' from' (ID: 591)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.3594995737075806
    2. '   ' → logprob: -1.4844995737075806
    3. ' ' → logprob: -1.7344995737075806
    4. ' in' → logprob: -2.234499454498291
    5. '<|end|>' → logprob: -2.234499454498291
    6. '<|end|>' → logprob: -3.484499454498291
    7. 'for' → logprob: -4.109499454498291
    8. '+' → logprob: -4.484499454498291
    9. '=' → logprob: -4.609499454498291
    10. ' ranging' → logprob: -4.734499454498291

Token 84: ' largest' (ID: 10574)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.44879472255706787
    2. ' ' → logprob: -1.0737947225570679
    3. '2' → logprob: -4.198794841766357
    4. ' b' → logprob: -6.073794841766357
    5. 'b' → logprob: -6.198794841766357
    6. 'int' → logprob: -8.3237943649292
    7. ' int' → logprob: -9.0737943649292
    8. 'max' → logprob: -10.0737943649292
    9. ' max' → logprob: -10.0737943649292
    10. '100' → logprob: -10.9487943649292

Token 85: ' possible' (ID: 4149)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.20314238965511322
    2. ' down' → logprob: -2.8281424045562744
    3. ' possible' → logprob: -3.4531424045562744
    4. 'to' → logprob: -3.4531424045562744
    5. ',' → logprob: -4.078142166137695
    6. 'possible' → logprob: -4.453142166137695
    7. 'down' → logprob: -4.703142166137695
    8. ' ' → logprob: -5.203142166137695
    9. ' k' → logprob: -5.703142166137695
    10. ' b' → logprob: -5.953142166137695

Token 86: ' down' (ID: 1917)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.33385685086250305
    2. ',' → logprob: -2.4588568210601807
    3. ' ' → logprob: -2.5838568210601807
    4. ' ,' → logprob: -3.2088568210601807
    5. ' for' → logprob: -4.08385705947876
    6. 'for' → logprob: -4.70885705947876
    7. 'to' → logprob: -4.70885705947876
    8. 'b' → logprob: -4.83385705947876
    9. ' k' → logprob: -5.33385705947876
    10. 'k' → logprob: -5.33385705947876

Token 87: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6455691456794739
    2. 'to' → logprob: -0.8955691456794739
    3. '   ' → logprob: -2.895569086074829
    4. 'wards' → logprob: -4.520569324493408
    5. '_to' → logprob: -7.520569324493408
    6. '  ' → logprob: -8.64556884765625
    7. '    ' → logprob: -9.39556884765625
    8. ' ' → logprob: -9.52056884765625
    9. '_' → logprob: -10.02056884765625
    10. 'ward' → logprob: -10.39556884765625

Token 88: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08901133388280869
    2. '1' → logprob: -2.4640114307403564
    3. ' k' → logprob: -10.464011192321777
    4. '2' → logprob: -10.589011192321777
    5. ' max' → logprob: -12.589011192321777
    6. ' b' → logprob: -12.714011192321777
    7. 'k' → logprob: -13.214011192321777
    8. '```' → logprob: -13.339011192321777
    9. ' ' → logprob: -13.464011192321777
    10. '0' → logprob: -13.464011192321777

Token 89: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08173926919698715
    2. ' ' → logprob: -2.7067391872406006
    3. '2' → logprob: -4.45673942565918
    4. 'k' → logprob: -9.83173942565918
    5. ' k' → logprob: -9.95673942565918
    6. '0' → logprob: -11.33173942565918
    7. '```' → logprob: -11.45673942565918
    8. '>' → logprob: -13.45673942565918
    9. 'b' → logprob: -13.76923942565918
    10. ' max' → logprob: -13.95673942565918

Token 90: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 92: ' max' (ID: 2999)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3253670036792755
    2. 'for' → logprob: -1.8253669738769531
    3. '   ' → logprob: -3.075366973876953
    4. '<|end|>' → logprob: -3.825366973876953
    5. ' 
' → logprob: -4.450366973876953
    6. '
' → logprob: -4.450366973876953
    7. ' ' → logprob: -4.700366973876953
    8. '```' → logprob: -5.200366973876953
    9. 'k' → logprob: -5.950366973876953
    10. '    
' → logprob: -6.575366973876953

Token 93: '_k' (ID: 11637)
  Prédit: '_len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.2536541521549225
    2. '_k' → logprob: -1.5036541223526
    3. '_' → logprob: -6.8786540031433105
    4. '_length' → logprob: -7.6286540031433105
    5. '_l' → logprob: -9.003654479980469
    6. '_floor' → logprob: -9.753654479980469
    7. '_val' → logprob: -12.378654479980469
    8. 'k' → logprob: -12.628654479980469
    9. '_possible' → logprob: -12.753654479980469
    10. 'len' → logprob: -13.128654479980469

Token 94: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012543906457722187
    2. '=' → logprob: -4.387543678283691
    3. ',' → logprob: -10.637543678283691
    4. ' ' → logprob: -11.762543678283691
    5. ')' → logprob: -14.387543678283691
    6. ' ,' → logprob: -14.512543678283691
    7. ' ' → logprob: -15.387543678283691
    8. '=int' → logprob: -15.387543678283691
    9. '   ' → logprob: -15.637543678283691
    10. 's' → logprob: -16.012544631958008

Token 95: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5920278429985046
    2. ' int' → logprob: -0.8420278429985046
    3. ' b' → logprob: -4.96702766418457
    4. 'b' → logprob: -5.46702766418457
    5. ' math' → logprob: -5.84202766418457
    6. 'math' → logprob: -6.46702766418457
    7. ' ' → logprob: -8.46702766418457
    8. '(int' → logprob: -10.34202766418457
    9. '1' → logprob: -10.71702766418457
    10. '	int' → logprob: -11.46702766418457

Token 96: '((' (ID: 2054)
  Prédit: '(math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.21318066120147705
    2. '((' → logprob: -1.713180661201477
    3. '((-' → logprob: -5.2131805419921875
    4. '(' → logprob: -5.5881805419921875
    5. '(b' → logprob: -6.3381805419921875
    6. '(((' → logprob: -7.5881805419921875
    7. 'math' → logprob: -9.463180541992188
    8. ' (' → logprob: -9.838180541992188
    9. ' ((' → logprob: -10.463180541992188
    10. '((((' → logprob: -10.588180541992188

Token 97: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.49440309405326843
    2. '2' → logprob: -0.9944031238555908
    3. 'math' → logprob: -4.869402885437012
    4. '(math' → logprob: -4.869402885437012
    5. '(-' → logprob: -5.994402885437012
    6. '8' → logprob: -6.744402885437012
    7. '1' → logprob: -8.244402885437012
    8. '((' → logprob: -8.369402885437012
    9. ' math' → logprob: -8.494402885437012
    10. '-' → logprob: -8.494402885437012

Token 98: '*b' (ID: 72162)
  Prédit: '*b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*b' → logprob: -0.010153737850487232
    2. ' *' → logprob: -4.760153770446777
    3. '*' → logprob: -6.760153770446777
    4. '*(' → logprob: -7.885153770446777
    5. 'b' → logprob: -13.385153770446777
    6. '*((' → logprob: -14.760153770446777
    7. ' ' → logprob: -15.885153770446777
    8. '   ' → logprob: -16.01015281677246
    9. '**' → logprob: -16.51015281677246
    10. '*a' → logprob: -16.63515281677246

Token 99: ')**' (ID: 80066)
  Prédit: ')**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.07752004265785217
    2. ')' → logprob: -3.3275201320648193
    3. ' )' → logprob: -3.4525201320648193
    4. ' +' → logprob: -5.20251989364624
    5. '+' → logprob: -6.57751989364624
    6. ' ' → logprob: -10.327520370483398
    7. '   ' → logprob: -10.952520370483398
    8. '+)' → logprob: -10.952520370483398
    9. ')^' → logprob: -11.452520370483398
    10. '+b' → logprob: -11.577520370483398

Token 100: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.017927029868588e-05
    2. '.' → logprob: -9.750080108642578
    3. ' ' → logprob: -10.750080108642578
    4. '(' → logprob: -15.125080108642578
    5. '   ' → logprob: -17.625080108642578
    6. '**' → logprob: -17.750080108642578
    7. ' ' → logprob: -17.750080108642578
    8. ' .' → logprob: -18.375080108642578
    9. '```' → logprob: -18.375080108642578
    10. '

' → logprob: -18.500080108642578

Token 101: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -5.5577775128767826e-06
    2. '5' → logprob: -12.625005722045898
    3. '0' → logprob: -13.500005722045898
    4. ' .' → logprob: -15.125005722045898
    5. '1' → logprob: -15.750005722045898
    6. '```' → logprob: -15.750005722045898
    7. '   ' → logprob: -16.2500057220459
    8. '6' → logprob: -16.8750057220459
    9. ' ' → logprob: -17.1250057220459
    10. '500' → logprob: -17.5000057220459

Token 102: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.9361264946837764e-07
    2. '   ' → logprob: -16.375
    3. '"' → logprob: -17.25
    4. '```' → logprob: -17.25
    5. '**' → logprob: -17.75
    6. '4' → logprob: -18.375
    7. '25' → logprob: -18.375
    8. '.' → logprob: -18.75
    9. '{' → logprob: -19.3125
    10. '

' → logprob: -19.4375

Token 103: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02365037053823471
    2. ')+' → logprob: -3.7736504077911377
    3. ' )' → logprob: -8.023650169372559
    4. '+' → logprob: -10.398650169372559
    5. ')
' → logprob: -10.648650169372559
    6. ' +' → logprob: -11.648650169372559
    7. '))' → logprob: -12.398650169372559
    8. ')-' → logprob: -13.398650169372559
    9. '   ' → logprob: -13.648650169372559
    10. ' ' → logprob: -13.898650169372559

Token 104: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6161392331123352
    2. '+' → logprob: -0.9911392331123352
    3. '   ' → logprob: -2.9911391735076904
    4. '
' → logprob: -3.7411391735076904
    5. '<|end|>' → logprob: -5.2411394119262695
    6. '+
' → logprob: -5.7411394119262695
    7. '    
' → logprob: -6.3661394119262695
    8. ' +
' → logprob: -6.4911394119262695
    9. '  
' → logprob: -7.3661394119262695
    10. ',' → logprob: -7.8661394119262695

Token 105: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.38718393445014954
    2. '1' → logprob: -1.1371839046478271
    3. ' ' → logprob: -8.137184143066406
    4. '10' → logprob: -11.262184143066406
    5. '5' → logprob: -12.387184143066406
    6. '3' → logprob: -13.137184143066406
    7. '   ' → logprob: -14.387184143066406
    8. '  ' → logprob: -14.512184143066406
    9. '100' → logprob: -15.887184143066406
    10. '```' → logprob: -16.637184143066406

Token 106: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5760514140129089
    2. '1' → logprob: -0.8260514140129089
    3. '10' → logprob: -9.451051712036133
    4. '5' → logprob: -10.576051712036133
    5. ' ' → logprob: -12.076051712036133
    6. '3' → logprob: -13.576051712036133
    7. '   ' → logprob: -15.576051712036133
    8. '  ' → logprob: -15.576051712036133
    9. '100' → logprob: -15.576051712036133
    10. '50' → logprob: -16.201051712036133

Token 107: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4406268000602722
    2. '   ' → logprob: -1.940626859664917
    3. '<|end|>' → logprob: -2.190626859664917
    4. '  
' → logprob: -3.315626859664917
    5. ':' → logprob: -3.690626859664917
    6. '    
' → logprob: -3.940626859664917
    7. ' for' → logprob: -4.690626621246338
    8. ':
' → logprob: -5.940626621246338
    9. ' 
' → logprob: -6.440626621246338
    10. '   
' → logprob: -6.565626621246338

Token 108: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9600450396537781
    2. '<|end|>' → logprob: -1.0850450992584229
    3. '
' → logprob: -1.5850450992584229
    4. '   ' → logprob: -3.460045099258423
    5. ' for' → logprob: -4.460044860839844
    6. '  
' → logprob: -4.960044860839844
    7. ':
' → logprob: -5.085044860839844
    8. ' 
' → logprob: -5.335044860839844
    9. '    
' → logprob: -5.585044860839844
    10. ' ' → logprob: -5.960044860839844

Token 109: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7478352189064026
    2. 'for' (adapté à ' for') → logprob: -0.7478352189064026
    3. '
' → logprob: -3.247835159301758
    4. '   ' → logprob: -4.497835159301758
    5. ' 
' → logprob: -6.497835159301758
    6. '    
' → logprob: -6.872835159301758
    7. '  
' → logprob: -8.372835159301758
    8. '\n' → logprob: -8.622835159301758
    9. '   
' → logprob: -9.497835159301758
    10. ':' → logprob: -9.872835159301758

Token 110: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.0024949219077825546
    2. 'k' → logprob: -6.002494812011719
    3. ' ' → logprob: -11.377494812011719
    4. ' x' → logprob: -12.502494812011719
    5. '_k' → logprob: -13.002494812011719
    6. '	k' → logprob: -14.252494812011719
    7. ' ' → logprob: -15.002494812011719
    8. '   ' → logprob: -15.252494812011719
    9. '```' → logprob: -15.502494812011719
    10. '  ' → logprob: -16.00249481201172

Token 111: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001931970240548253
    2. 'in' → logprob: -6.251932144165039
    3. ' ' → logprob: -13.126932144165039
    4. 'range' → logprob: -15.251932144165039
    5. 'n' → logprob: -15.376932144165039
    6. 'k' → logprob: -15.376932144165039
    7. '	in' → logprob: -15.376932144165039
    8. ' =' → logprob: -16.62693214416504
    9. ' k' → logprob: -16.75193214416504
    10. 'space' → logprob: -17.25193214416504

Token 112: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20143750309944153
    2. ' range' → logprob: -1.7014374732971191
    3. ' ' → logprob: -11.326437950134277
    4. '   ' → logprob: -12.326437950134277
    5. 're' → logprob: -12.576437950134277
    6. ' reversed' → logprob: -13.201437950134277
    7. '  ' → logprob: -13.201437950134277
    8. '	range' → logprob: -14.951437950134277
    9. 'reverse' → logprob: -16.45143699645996
    10. '(range' → logprob: -16.95143699645996

Token 113: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -6.051066520740278e-05
    2. '(' → logprob: -9.875060081481934
    3. '(k' → logprob: -12.250060081481934
    4. 'max' → logprob: -12.750060081481934
    5. ' (' → logprob: -14.000060081481934
    6. ' max' → logprob: -14.750060081481934
    7. ',max' → logprob: -16.75006103515625
    8. '=max' → logprob: -16.87506103515625
    9. '(min' → logprob: -17.62506103515625
    10. '[max' → logprob: -18.50006103515625

Token 114: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -1.3856492842023727e-06
    2. '_len' → logprob: -13.875000953674316
    3. '(k' → logprob: -15.875000953674316
    4. ',k' → logprob: -16.250001907348633
    5. ',' → logprob: -17.000001907348633
    6. '_max' → logprob: -18.250001907348633
    7. 'k' → logprob: -18.250001907348633
    8. '(' → logprob: -18.750001907348633
    9. '_i' → logprob: -18.875001907348633
    10. ')' → logprob: -18.875001907348633

Token 115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.960946772480384e-05
    2. ' ,' → logprob: -9.375099182128906
    3. ',k' → logprob: -11.250099182128906
    4. '   ' → logprob: -14.125099182128906
    5. ',b' → logprob: -15.500099182128906
    6. ',-' → logprob: -15.875099182128906
    7. '1' → logprob: -16.125099182128906
    8. '0' → logprob: -16.625099182128906
    9. ',
' → logprob: -16.750099182128906
    10. ',int' → logprob: -16.875099182128906

Token 116: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38690173625946045
    2. ' ' → logprob: -1.1369017362594604
    3. '1' → logprob: -10.88690185546875
    4. ' -' → logprob: -12.13690185546875
    5. '-' → logprob: -13.26190185546875
    6. ' 
' → logprob: -13.76190185546875
    7. '  ' → logprob: -14.26190185546875
    8. '```' → logprob: -14.38690185546875
    9. '  
' → logprob: -14.51190185546875
    10. '
' → logprob: -14.76190185546875

Token 117: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004155925940722227
    2. ' ' → logprob: -5.504156112670898
    3. '-' → logprob: -9.754156112670898
    4. '1' → logprob: -11.629156112670898
    5. ' -' → logprob: -11.754156112670898
    6. 'b' → logprob: -14.254156112670898
    7. '   ' → logprob: -14.379156112670898
    8. '
' → logprob: -14.504156112670898
    9. '  ' → logprob: -15.129156112670898
    10. '

' → logprob: -15.754156112670898

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.9650025428272784e-05
    2. ',-' → logprob: -11.000040054321289
    3. ' ,' → logprob: -11.250040054321289
    4. '-' → logprob: -11.875040054321289
    5. '   ' → logprob: -13.250040054321289
    6. ' -' → logprob: -14.125040054321289
    7. '0' → logprob: -15.500040054321289
    8. '-,' → logprob: -15.750040054321289
    9. ' ,-' → logprob: -16.62504005432129
    10. '  ' → logprob: -17.37504005432129

Token 119: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2014288455247879
    2. ' -' → logprob: -1.7014288902282715
    3. ' ' → logprob: -11.951428413391113
    4. '   ' → logprob: -12.076428413391113
    5. '  ' → logprob: -12.826428413391113
    6. '```' → logprob: -14.451428413391113
    7. '	' → logprob: -17.20142936706543
    8. ')' → logprob: -17.70142936706543
    9. ',-' → logprob: -17.70142936706543
    10. '    ' → logprob: -17.95142936706543

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.338466093642637e-05
    2. '-' → logprob: -9.750073432922363
    3. ' -' → logprob: -11.750073432922363
    4. ' ' → logprob: -11.875073432922363
    5. '   ' → logprob: -16.125072479248047
    6. ')' → logprob: -16.625072479248047
    7. '```' → logprob: -17.375072479248047
    8. '):
' → logprob: -18.000072479248047
    9. '  ' → logprob: -18.500072479248047
    10. ',' → logprob: -19.250072479248047

Token 121: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01850435882806778
    2. ':' → logprob: -4.6435041427612305
    3. '):
' → logprob: -4.7685041427612305
    4. ' ):' → logprob: -9.26850414276123
    5. '   ' → logprob: -9.76850414276123
    6. ')' → logprob: -10.51850414276123
    7. ' :' → logprob: -11.26850414276123
    8. '):
' → logprob: -11.64350414276123
    9. ',' → logprob: -11.64350414276123
    10. ' ):
' → logprob: -13.39350414276123

Token 122: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5456528067588806
    2. '       ' → logprob: -0.9206528067588806
    3. '<|end|>' → logprob: -4.170652866363525
    4. '   ' → logprob: -6.170652866363525
    5. ':
' → logprob: -6.295652866363525
    6. '):' → logprob: -6.795652866363525
    7. '<|end|>' → logprob: -7.420652866363525
    8. '
' → logprob: -8.295652389526367
    9. ',' → logprob: -8.670652389526367
    10. '):
' → logprob: -8.670652389526367

Token 123: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.390560507774353
    2. ' for' → logprob: -1.765560507774353
    3. ' x' → logprob: -2.2655606269836426
    4. ' if' → logprob: -3.6405606269836426
    5. '   ' → logprob: -4.640560626983643
    6. ' s' → logprob: -5.640560626983643
    7. '           ' → logprob: -6.890560626983643
    8. '    ' → logprob: -7.015560626983643
    9. 'for' → logprob: -7.015560626983643
    10. '        ' → logprob: -7.265560626983643

Token 124: ' We' (ID: 1416)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.1309674978256226
    2. 'for' → logprob: -1.3809674978256226
    3. 'lhs' → logprob: -2.005967617034912
    4. 'import' → logprob: -2.505967617034912
    5. 'l' → logprob: -3.255967617034912
    6. 'if' → logprob: -3.505967617034912
    7. ' lhs' → logprob: -3.630967617034912
    8. '   ' → logprob: -3.880967617034912
    9. 'from' → logprob: -4.255967617034912
    10. ' left' → logprob: -4.380967617034912

Token 125: ' need' (ID: 1309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.33700430393219
    2. ' for' → logprob: -2.0870041847229004
    3. '=' → logprob: -2.4620041847229004
    4. ' =' → logprob: -2.5870041847229004
    5. ' try' → logprob: -2.5870041847229004
    6. ' can' → logprob: -2.7120041847229004
    7. ' need' → logprob: -3.0870041847229004
    8. 'import' → logprob: -3.0870041847229004
    9. ' if' → logprob: -3.3370041847229004
    10. 'for' → logprob: -3.5870041847229004

Token 126: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.03671879321336746
    2. 'to' → logprob: -3.5367188453674316
    3. '       ' → logprob: -6.161718845367432
    4. '    ' → logprob: -6.411718845367432
    5. ' for' → logprob: -6.661718845367432
    6. '   ' → logprob: -7.161718845367432
    7. ' x' → logprob: -8.411718368530273
    8. ' a' → logprob: -9.036718368530273
    9. 'for' → logprob: -9.036718368530273
    10. ' ' → logprob: -9.036718368530273

Token 127: ' solve' (ID: 17722)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.3155845105648041
    2. 'find' → logprob: -1.3155845403671265
    3. ' check' → logprob: -6.690584659576416
    4. 'check' → logprob: -7.690584659576416
    5. 'for' → logprob: -8.190584182739258
    6. 'solve' → logprob: -8.815584182739258
    7. ' for' → logprob: -9.690584182739258
    8. 'k' → logprob: -10.315584182739258
    9. 's' → logprob: -11.190584182739258
    10. 'try' → logprob: -11.315584182739258

Token 128: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4422430396080017
    2. 'for' → logprob: -1.0672430992126465
    3. ' the' → logprob: -4.9422430992126465
    4. 'k' → logprob: -6.1922430992126465
    5. 'x' → logprob: -7.3172430992126465
    6. ':' → logprob: -7.3172430992126465
    7. ' k' → logprob: -7.4422430992126465
    8. 'the' → logprob: -7.6922430992126465
    9. '   ' → logprob: -7.9422430992126465
    10. 'a' → logprob: -8.442242622375488

Token 129: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.49123531579971313
    2. ' x' → logprob: -0.9912353157997131
    3. ' k' → logprob: -4.616235256195068
    4. 'k' → logprob: -4.991235256195068
    5. ' the' → logprob: -9.366235733032227
    6. ' ' → logprob: -9.741235733032227
    7. '```' → logprob: -10.491235733032227
    8. ' possible' → logprob: -10.866235733032227
    9. 'possible' → logprob: -11.241235733032227
    10. '<|end|>' → logprob: -11.491235733032227

Token 130: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 131: 'lowest' (ID: 183722)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20213216543197632
    2. ' in' → logprob: -2.327132225036621
    3. '):' → logprob: -3.702132225036621
    4. ':' → logprob: -4.077132225036621
    5. ' )' → logprob: -4.702132225036621
    6. '=' → logprob: -4.827132225036621
    7. '):
' → logprob: -4.952132225036621
    8. ' =' → logprob: -4.952132225036621
    9. ')>=' → logprob: -6.327132225036621
    10. '>=' → logprob: -6.577132225036621

Token 132: ' floor' (ID: 8350)
  Prédit: '_floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_floor' → logprob: -1.7231464385986328
    2. ' )' → logprob: -1.8481464385986328
    3. 'x' → logprob: -2.098146438598633
    4. ')' → logprob: -2.098146438598633
    5. '_' → logprob: -2.473146438598633
    6. ' x' → logprob: -2.598146438598633
    7. '_x' → logprob: -2.848146438598633
    8. '_possible' → logprob: -2.973146438598633
    9. '=' → logprob: -3.098146438598633
    10. ' =' → logprob: -3.223146438598633

Token 133: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7407235503196716
    2. '):' → logprob: -1.1157236099243164
    3. '=' → logprob: -2.9907236099243164
    4. ' =' → logprob: -3.3657236099243164
    5. '):
' → logprob: -3.3657236099243164
    6. ':' → logprob: -3.8657236099243164
    7. ' in' → logprob: -3.9907236099243164
    8. ',' → logprob: -4.365723609924316
    9. '+' → logprob: -4.990723609924316
    10. '<|end|>' → logprob: -5.615723609924316

Token 134: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21490557491779327
    2. '<|end|>' → logprob: -2.0899055004119873
    3. ':' → logprob: -3.3399055004119873
    4. ')' → logprob: -4.839905738830566
    5. '<|end|>' → logprob: -4.964905738830566
    6. ',' → logprob: -5.214905738830566
    7. '   ' → logprob: -5.339905738830566
    8. '):' → logprob: -6.214905738830566
    9. ' =' → logprob: -6.839905738830566
    10. '        
' → logprob: -6.964905738830566

Token 135: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1588783264160156
    2. '<|end|>' → logprob: -1.7838783264160156
    3. '       ' → logprob: -1.9088783264160156
    4. '   ' → logprob: -2.4088783264160156
    5. ' ' → logprob: -2.5338783264160156
    6. ':' → logprob: -2.6588783264160156
    7. '    ' → logprob: -3.5338783264160156
    8. ' x' → logprob: -4.033878326416016
    9. ')' → logprob: -4.158878326416016
    10. 'for' → logprob: -4.408878326416016

Token 136: ' sum' (ID: 4215)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.5763481855392456
    2. 'for' → logprob: -1.9513481855392456
    3. 'import' → logprob: -2.076348304748535
    4. ' for' → logprob: -2.201348304748535
    5. 'x' → logprob: -2.451348304748535
    6. ' numerator' → logprob: -3.076348304748535
    7. ' x' → logprob: -3.201348304748535
    8. ' from' → logprob: -3.451348304748535
    9. ' lhs' → logprob: -3.826348304748535
    10. 'if' → logprob: -3.951348304748535

Token 137: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10189177095890045
    2. '_k' → logprob: -3.2268917560577393
    3. '_floor' → logprob: -3.6018917560577393
    4. '_needed' → logprob: -4.601891994476318
    5. '_=' → logprob: -4.976891994476318
    6. '_of' → logprob: -5.851891994476318
    7. '_n' → logprob: -6.226891994476318
    8. ' =' → logprob: -6.226891994476318
    9. '_val' → logprob: -6.476891994476318
    10. '_x' → logprob: -6.976891994476318

Token 138: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.05233214050531387
    2. ' k' → logprob: -3.4273321628570557
    3. '_k' → logprob: -5.302331924438477
    4. 'ar' → logprob: -5.927331924438477
    5. ' arithmetic' → logprob: -6.052331924438477
    6. ' consecutive' → logprob: -6.302331924438477
    7. 'range' → logprob: -6.427331924438477
    8. ' floors' → logprob: -6.802331924438477
    9. 'con' → logprob: -7.177331924438477
    10. '(k' → logprob: -7.927331924438477

Token 139: ' floors' (ID: 30181)
  Prédit: '*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.8803966641426086
    2. ' =' → logprob: -2.130396604537964
    3. ' *' → logprob: -2.130396604537964
    4. '(i' → logprob: -2.505396604537964
    5. '(k' → logprob: -3.005396604537964
    6. '(range' → logprob: -3.005396604537964
    7. '=' → logprob: -3.255396604537964
    8. '(' → logprob: -3.380396604537964
    9. '_floor' → logprob: -4.380396842956543
    10. '_i' → logprob: -4.755396842956543

Token 140: ' starting' (ID: 8601)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31483960151672363
    2. '=' → logprob: -1.3148396015167236
    3. ':' → logprob: -8.564839363098145
    4. ')' → logprob: -8.564839363098145
    5. ' *' → logprob: -9.189839363098145
    6. ',' → logprob: -9.189839363098145
    7. '*' → logprob: -9.439839363098145
    8. ' >=' → logprob: -9.439839363098145
    9. '=sum' → logprob: -9.439839363098145
    10. '>=' → logprob: -9.564839363098145

Token 141: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3403354585170746
    2. ' from' → logprob: -1.340335488319397
    3. ' at' → logprob: -4.340335369110107
    4. '=' → logprob: -5.215335369110107
    5. '_floor' → logprob: -5.840335369110107
    6. ' =' → logprob: -6.340335369110107
    7. ' with' → logprob: -6.465335369110107
    8. 'floor' → logprob: -7.340335369110107
    9. 'with' → logprob: -7.840335369110107
    10. '_from' → logprob: -7.965335369110107

Token 142: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6410171985626221
    2. 'x' → logprob: -0.8910171985626221
    3. '1' → logprob: -4.141016960144043
    4. ' (' → logprob: -4.266016960144043
    5. 'start' → logprob: -4.391016960144043
    6. ' start' → logprob: -5.266016960144043
    7. ' ' → logprob: -5.516016960144043
    8. '0' → logprob: -5.766016960144043
    9. '(start' → logprob: -6.141016960144043
    10. '(x' → logprob: -6.891016960144043

Token 143: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16569483280181885
    2. '=' → logprob: -1.9156948328018188
    3. ':' → logprob: -5.790694713592529
    4. '+' → logprob: -7.290694713592529
    5. ' +' → logprob: -7.790694713592529
    6. ' ' → logprob: -8.415695190429688
    7. ' x' → logprob: -9.040695190429688
    8. '   ' → logprob: -9.040695190429688
    9. 'x' → logprob: -9.290695190429688
    10. ',' → logprob: -9.290695190429688

Token 144: '       ' (ID: 309)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.7768344879150391
    2. ' (' → logprob: -1.651834487915039
    3. 'x' → logprob: -2.401834487915039
    4. '       ' → logprob: -2.776834487915039
    5. '<|end|>' → logprob: -3.151834487915039
    6. ' =' → logprob: -3.401834487915039
    7. ' for' → logprob: -3.651834487915039
    8. '(' → logprob: -3.901834487915039
    9. ')' → logprob: -4.276834487915039
    10. ' ' → logprob: -4.901834487915039

Token 145: ' #' (ID: 1069)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4462601840496063
    2. 'x' → logprob: -1.6962602138519287
    3. ' s' → logprob: -2.1962602138519287
    4. ' (' → logprob: -4.32125997543335
    5. ' k' → logprob: -4.82125997543335
    6. 's' → logprob: -5.07125997543335
    7. ' sum' → logprob: -5.32125997543335
    8. ' #' → logprob: -5.44625997543335
    9. ' total' → logprob: -5.57125997543335
    10. '#' (adapté à ' #') → logprob: -5.69625997543335

Token 146: ' sum' (ID: 4215)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.7329968810081482
    2. ' s' → logprob: -1.357996940612793
    3. ' sum' → logprob: -2.232996940612793
    4. 'x' → logprob: -2.732996940612793
    5. ' (' → logprob: -3.857996940612793
    6. ' k' → logprob: -4.357996940612793
    7. 'sum' → logprob: -4.357996940612793
    8. ' total' → logprob: -4.357996940612793
    9. 's' → logprob: -5.107996940612793
    10. ' n' → logprob: -5.732996940612793

Token 147: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.43470436334609985
    2. ' =' → logprob: -1.184704303741455
    3. '=' → logprob: -4.309704303741455
    4. '_=' → logprob: -4.309704303741455
    5. '_floor' → logprob: -5.184704303741455
    6. '_of' → logprob: -5.184704303741455
    7. '_x' → logprob: -5.559704303741455
    8. '_k' → logprob: -5.684704303741455
    9. 'from' → logprob: -8.184704780578613
    10. 'of' → logprob: -8.934704780578613

Token 148: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.05456039682030678
    2. '(k' → logprob: -3.054560422897339
    3. ' k' → logprob: -5.30456018447876
    4. ' (' → logprob: -7.17956018447876
    5. 'x' → logprob: -8.929560661315918
    6. '(x' → logprob: -10.054560661315918
    7. '   ' → logprob: -10.429560661315918
    8. 'kx' → logprob: -11.554560661315918
    9. '(' → logprob: -12.554560661315918
    10. ' x' → logprob: -13.054560661315918

Token 149: '*(' (ID: 14793)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.495689332485199
    2. ' *' → logprob: -0.995689332485199
    3. '*(' → logprob: -4.370689392089844
    4. '*x' → logprob: -4.745689392089844
    5. '*k' → logprob: -10.620689392089844
    6. '*((' → logprob: -11.745689392089844
    7. '*b' → logprob: -12.370689392089844
    8. '*i' → logprob: -12.870689392089844
    9. ' *(' → logprob: -13.370689392089844
    10. '**' → logprob: -13.870689392089844

Token 150: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2794730067253113
    2. 'x' → logprob: -1.779473066329956
    3. '(' → logprob: -2.654473066329956
    4. '(x' → logprob: -5.404472827911377
    5. ' (' → logprob: -9.154473304748535
    6. ' x' → logprob: -9.904473304748535
    7. 'k' → logprob: -11.279473304748535
    8. 'start' → logprob: -11.279473304748535
    9. ' ' → logprob: -11.279473304748535
    10. 'first' → logprob: -11.654473304748535

Token 151: 'x' (ID: 87)
  Prédit: '*x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*x' → logprob: -0.016697660088539124
    2. ' *' → logprob: -4.766697883605957
    3. '*' → logprob: -5.516697883605957
    4. '*b' → logprob: -6.016697883605957
    5. 'x' → logprob: -6.516697883605957
    6. '*(' → logprob: -9.391697883605957
    7. ' x' → logprob: -11.516697883605957
    8. 'b' → logprob: -12.516697883605957
    9. '*k' → logprob: -13.141697883605957
    10. '   ' → logprob: -13.141697883605957

Token 152: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.22580720484256744
    2. '+' → logprob: -1.6008071899414062
    3. '+k' → logprob: -8.350807189941406
    4. '+b' → logprob: -9.725807189941406
    5. '+x' → logprob: -10.100807189941406
    6. ')' → logprob: -10.475807189941406
    7. ' +
' → logprob: -12.225807189941406
    8. '<|end|>' → logprob: -12.350807189941406
    9. '+)' → logprob: -12.725807189941406
    10. '+(' → logprob: -12.850807189941406

Token 153: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0052406336180865765
    2. '(k' → logprob: -5.255240440368652
    3. ' k' → logprob: -12.130240440368652
    4. ' (' → logprob: -13.880240440368652
    5. '(' → logprob: -14.755240440368652
    6. '{k' → logprob: -16.63024139404297
    7. '_k' → logprob: -17.88024139404297
    8. '[k' → logprob: -18.13024139404297
    9. '```' → logprob: -18.13024139404297
    10. '	k' → logprob: -18.38024139404297

Token 154: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5759502053260803
    2. ' -' → logprob: -0.8259502053260803
    3. ' ' → logprob: -12.200950622558594
    4. ')' → logprob: -12.325950622558594
    5. '```' → logprob: -14.700950622558594
    6. '1' → logprob: -15.325950622558594
    7. '   ' → logprob: -15.825950622558594
    8. '  ' → logprob: -16.200950622558594
    9. 's' → logprob: -16.888450622558594
    10. '
' → logprob: -17.013450622558594

Token 155: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0048762657679617405
    2. '-' → logprob: -5.504876136779785
    3. ' -' → logprob: -7.379876136779785
    4. ' ' → logprob: -8.754876136779785
    5. ')' → logprob: -11.379876136779785
    6. '```' → logprob: -13.004876136779785
    7. '   ' → logprob: -13.754876136779785
    8. '[' → logprob: -15.379876136779785
    9. '
' → logprob: -15.379876136779785
    10. '=' → logprob: -15.754876136779785

Token 156: ')/' (ID: 11876)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01638295128941536
    2. ')//' → logprob: -4.141383171081543
    3. ' )' → logprob: -8.016383171081543
    4. ')/' → logprob: -11.266383171081543
    5. ')
' → logprob: -13.266383171081543
    6. '//' → logprob: -13.266383171081543
    7. '   ' → logprob: -14.391383171081543
    8. ')#' → logprob: -14.766383171081543
    9. ')**' → logprob: -15.266383171081543
    10. ')...' → logprob: -15.516383171081543

Token 157: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -11.625009536743164
    3. '
' → logprob: -16.250009536743164
    4. '```' → logprob: -17.000009536743164
    5. '   ' → logprob: -17.687509536743164
    6. '

' → logprob: -17.687509536743164
    7. '  ' → logprob: -18.375009536743164
    8. '{' → logprob: -18.500009536743164
    9. '=' → logprob: -18.625009536743164
    10. '202' → logprob: -18.750009536743164

Token 158: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006073960568755865
    2. '<|end|>' → logprob: -6.131073951721191
    3. '
' → logprob: -6.756073951721191
    4. '        
' → logprob: -7.006073951721191
    5. ')' → logprob: -7.631073951721191
    6. '<|end|>' → logprob: -7.756073951721191
    7. ',' → logprob: -8.131073951721191
    8. '   ' → logprob: -8.631073951721191
    9. '  
' → logprob: -9.631073951721191
    10. ' =' → logprob: -9.756073951721191

Token 159: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.575941801071167
    2. ' b' → logprob: -0.825941801071167
    3. ' ' → logprob: -13.950942039489746
    4. '   ' → logprob: -15.075942039489746
    5. '	b' → logprob: -15.200942039489746
    6. '    ' → logprob: -15.950942039489746
    7. ' (' → logprob: -16.07594108581543
    8. ')b' → logprob: -16.45094108581543
    9. '>b' → logprob: -16.51344108581543
    10. '(b' → logprob: -16.63844108581543

Token 160: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.044062528759241104
    2. '<|end|>' → logprob: -4.169062614440918
    3. '
' → logprob: -4.544062614440918
    4. '        
' → logprob: -4.794062614440918
    5. ')' → logprob: -5.544062614440918
    6. '<|end|>' → logprob: -6.294062614440918
    7. ',' → logprob: -7.169062614440918
    8. '   ' → logprob: -7.294062614440918
    9. ' 
' → logprob: -8.044062614440918
    10. '  
' → logprob: -8.544062614440918

Token 161: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6711649298667908
    2. '
' → logprob: -1.7961649894714355
    3. '   ' → logprob: -1.9211649894714355
    4. '<|end|>' → logprob: -2.4211649894714355
    5. '        
' → logprob: -3.6711649894714355
    6. ')' → logprob: -4.4211649894714355
    7. '    
' → logprob: -4.9211649894714355
    8. ' 
' → logprob: -4.9211649894714355
    9. ' if' → logprob: -5.2961649894714355
    10. ' =' → logprob: -5.2961649894714355

Token 162: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01682683266699314
    2. ' x' → logprob: -4.516826629638672
    3. 'x' → logprob: -6.016826629638672
    4. '   ' → logprob: -6.891826629638672
    5. ' if' → logprob: -7.141826629638672
    6. 'if' → logprob: -7.891826629638672
    7. '        
' → logprob: -8.141826629638672
    8. ',' → logprob: -8.766826629638672
    9. ')' → logprob: -9.141826629638672
    10. 'import' → logprob: -9.391826629638672

Token 163: ' =>' (ID: 871)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6660540699958801
    2. '       ' → logprob: -1.5410540103912354
    3. ' x' → logprob: -2.1660540103912354
    4. '   ' → logprob: -2.9160540103912354
    5. 'dis' → logprob: -3.7910540103912354
    6. 'if' → logprob: -3.9160540103912354
    7. ' if' → logprob: -4.2910542488098145
    8. ' numerator' → logprob: -4.7910542488098145
    9. ' discrimin' → logprob: -4.9160542488098145
    10. 'import' → logprob: -5.0410542488098145

Token 164: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2835356593132019
    2. '2' → logprob: -1.5335357189178467
    3. ' (' → logprob: -4.408535480499268
    4. '(' → logprob: -5.033535480499268
    5. ' x' → logprob: -5.033535480499268
    6. 'x' → logprob: -5.158535480499268
    7. '   ' → logprob: -9.908535957336426
    8. '       ' → logprob: -10.408535957336426
    9. '    ' → logprob: -10.908535957336426
    10. '           ' → logprob: -11.533535957336426

Token 165: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06623024493455887
    2. '(' → logprob: -3.566230297088623
    3. 'x' → logprob: -3.691230297088623
    4. ' ' → logprob: -4.941230297088623
    5. ' (' → logprob: -6.191230297088623
    6. ' x' → logprob: -6.441230297088623
    7. '   ' → logprob: -10.816229820251465
    8. '(x' → logprob: -10.816229820251465
    9. '#' → logprob: -11.691229820251465
    10. 'k' → logprob: -11.941229820251465

Token 166: 'b' (ID: 65)
  Prédit: '*b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*b' → logprob: -0.004330064635723829
    2. ' *' → logprob: -5.504330158233643
    3. '*' → logprob: -8.879329681396484
    4. 'b' → logprob: -9.629329681396484
    5. '*x' → logprob: -10.004329681396484
    6. '*k' → logprob: -14.629329681396484
    7. '*a' → logprob: -15.504329681396484
    8. '*(' → logprob: -16.379329681396484
    9. '*r' → logprob: -16.504329681396484
    10. '*w' → logprob: -16.629329681396484

Token 167: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5184178352355957
    2. ' -' → logprob: -1.6434178352355957
    3. '=' → logprob: -2.0184178352355957
    4. '*' → logprob: -3.2684178352355957
    5. ' *' → logprob: -3.5184178352355957
    6. ' >=' → logprob: -5.393417835235596
    7. '-' → logprob: -5.643417835235596
    8. ' ' → logprob: -7.143417835235596
    9. '>=' → logprob: -7.643417835235596
    10. ' -=' → logprob: -8.268417358398438

Token 168: ' k' (ID: 372)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3256683051586151
    2. ' ' → logprob: -1.5756683349609375
    3. ' k' → logprob: -3.0756683349609375
    4. 'k' → logprob: -3.7006683349609375
    5. '   ' → logprob: -8.825668334960938
    6. '    ' → logprob: -10.325668334960938
    7. '  ' → logprob: -11.575668334960938
    8. '```' → logprob: -11.700668334960938
    9. '`' → logprob: -12.700668334960938
    10. '       ' → logprob: -12.825668334960938

Token 169: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.45601585507392883
    2. '*' → logprob: -1.5810158252716064
    3. ' *' → logprob: -1.8310158252716064
    4. '(' → logprob: -9.456015586853027
    5. ' *(' → logprob: -9.706015586853027
    6. '*((' → logprob: -10.956015586853027
    7. ')' → logprob: -12.456015586853027
    8. ')*(' → logprob: -12.581015586853027
    9. '**' → logprob: -12.956015586853027
    10. '```' → logprob: -13.456015586853027

Token 170: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013163764029741287
    2. '2' → logprob: -4.3881635665893555
    3. ' (' → logprob: -7.3881635665893555
    4. '*(' → logprob: -11.013163566589355
    5. ' ' → logprob: -12.013163566589355
    6. ')' → logprob: -12.013163566589355
    7. ')(' → logprob: -13.388163566589355
    8. '*' → logprob: -13.513163566589355
    9. '((' → logprob: -14.138163566589355
    10. '`' → logprob: -14.388163566589355

Token 171: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04001995921134949
    2. ' x' → logprob: -3.290019989013672
    3. '*x' → logprob: -6.415019989013672
    4. ' *' → logprob: -9.290019989013672
    5. 'b' → logprob: -9.415019989013672
    6. '*' → logprob: -10.165019989013672
    7. ' ' → logprob: -10.540019989013672
    8. '(x' → logprob: -10.790019989013672
    9. ')x' → logprob: -11.040019989013672
    10. '```' → logprob: -11.040019989013672

Token 172: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.014167741872370243
    2. '+' → logprob: -4.264167785644531
    3. 'x' → logprob: -13.139167785644531
    4. ' ' → logprob: -14.514167785644531
    5. ' +
' → logprob: -15.139167785644531
    6. ')' → logprob: -15.264167785644531
    7. '+x' → logprob: -15.264167785644531
    8. ' ' → logprob: -15.514167785644531
    9. '```' → logprob: -15.639167785644531
    10. ' plus' → logprob: -16.26416778564453

Token 173: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.1096552237868309
    2. ' k' → logprob: -2.4846551418304443
    3. '(k' → logprob: -4.109655380249023
    4. ' (' → logprob: -5.734655380249023
    5. '(' → logprob: -7.109655380249023
    6. '2' → logprob: -11.359655380249023
    7. ' ' → logprob: -11.984655380249023
    8. '   ' → logprob: -11.984655380249023
    9. '
' → logprob: -12.734655380249023
    10. '	k' → logprob: -13.359655380249023

Token 174: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.31363385915756226
    2. '-' → logprob: -1.313633918762207
    3. ' ' → logprob: -8.563633918762207
    4. ')' → logprob: -8.688633918762207
    5. '```' → logprob: -12.438633918762207
    6. ' )' → logprob: -13.438633918762207
    7. '<|end|>' → logprob: -13.938633918762207
    8. '   ' → logprob: -14.313633918762207
    9. '  ' → logprob: -14.563633918762207
    10. '+' → logprob: -14.626133918762207

Token 175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010862821945920587
    2. ' ' → logprob: -7.376086235046387
    3. '-' → logprob: -8.126086235046387
    4. '0' → logprob: -9.501086235046387
    5. ' -' → logprob: -10.126086235046387
    6. '2' → logprob: -10.126086235046387
    7. ')' → logprob: -12.001086235046387
    8. '```' → logprob: -14.126086235046387
    9. '   ' → logprob: -14.501086235046387
    10. '
' → logprob: -14.626086235046387

Token 176: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16209928691387177
    2. ')
' → logprob: -1.9120992422103882
    3. ' )' → logprob: -7.287099361419678
    4. ')
' → logprob: -7.537099361419678
    5. ' )
' → logprob: -7.662099361419678
    6. '):
' → logprob: -9.66209888458252
    7. '   ' → logprob: -10.53709888458252
    8. ')

' → logprob: -11.41209888458252
    9. '')' → logprob: -11.66209888458252
    10. ')\' → logprob: -11.78709888458252

Token 177: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007109728641808033
    2. '   ' → logprob: -5.757109642028809
    3. '        
' → logprob: -6.257109642028809
    4. ',' → logprob: -8.507109642028809
    5. ' x' → logprob: -8.507109642028809
    6. ')' → logprob: -8.507109642028809
    7. '<|end|>' → logprob: -8.632109642028809
    8. ' ' → logprob: -8.632109642028809
    9. '        ' → logprob: -8.757109642028809
    10. '    ' → logprob: -8.882109642028809

Token 178: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7178130149841309
    2. '       ' → logprob: -1.0928130149841309
    3. ' ' → logprob: -2.967813014984131
    4. ' if' → logprob: -3.217813014984131
    5. 'x' → logprob: -4.217813014984131
    6. ' x' → logprob: -4.592813014984131
    7. '<|end|>' → logprob: -4.717813014984131
    8. ')' → logprob: -4.967813014984131
    9. ' 
' → logprob: -5.092813014984131
    10. '    ' → logprob: -5.092813014984131

Token 179: ' =>' (ID: 871)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4888010323047638
    2. 'if' → logprob: -1.8638010025024414
    3. ' x' → logprob: -2.4888010025024414
    4. 'x' → logprob: -2.9888010025024414
    5. '   ' → logprob: -2.9888010025024414
    6. '2' → logprob: -4.238801002502441
    7. '       ' → logprob: -4.238801002502441
    8. ' ' → logprob: -4.488801002502441
    9. ' for' → logprob: -5.738801002502441
    10. 'for' → logprob: -6.988801002502441

Token 180: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2566513419151306
    2. '2' → logprob: -2.3816514015197754
    3. ' (' → logprob: -2.3816514015197754
    4. '(' → logprob: -3.2566514015197754
    5. ' x' → logprob: -6.256651401519775
    6. 'x' → logprob: -7.256651401519775
    7. '   ' → logprob: -9.006650924682617
    8. ' two' → logprob: -9.256650924682617
    9. ' temp' → logprob: -10.131650924682617
    10. '  ' → logprob: -10.631650924682617

Token 181: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.21522168815135956
    2. '(' → logprob: -1.965221643447876
    3. ' ' → logprob: -3.215221643447876
    4. ' (' → logprob: -4.340221881866455
    5. 'x' → logprob: -9.465221405029297
    6. 'for' → logprob: -9.715221405029297
    7. '   ' → logprob: -9.715221405029297
    8. 'b' → logprob: -10.965221405029297
    9. ' x' → logprob: -10.965221405029297
    10. ' for' → logprob: -11.340221405029297

Token 182: 'x' (ID: 87)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10031256079673767
    2. '*b' → logprob: -2.3503124713897705
    3. ' *' → logprob: -9.850312232971191
    4. '*' → logprob: -10.100312232971191
    5. ' b' → logprob: -11.475312232971191
    6. '_b' → logprob: -14.100312232971191
    7. '*x' → logprob: -15.100312232971191
    8. 'x' → logprob: -15.350312232971191
    9. '	b' → logprob: -15.975312232971191
    10. 'bx' → logprob: -16.225313186645508

Token 183: ' +' (ID: 659)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141518115997314
    2. ' =' → logprob: -1.7014151811599731
    3. '>=' → logprob: -14.076415061950684
    4. ' ' → logprob: -14.326415061950684
    5. '<=' → logprob: -15.826415061950684
    6. ' >=' → logprob: -16.451416015625
    7. '＝' → logprob: -16.576416015625
    8. ')' → logprob: -16.826416015625
    9. ' ' → logprob: -17.576416015625
    10. ',' → logprob: -17.701416015625

Token 184: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.6650542616844177
    2. 'k' → logprob: -0.7900542616844177
    3. '(k' → logprob: -3.9150543212890625
    4. ' (' → logprob: -4.5400543212890625
    5. '(' → logprob: -6.6650543212890625
    6. '1' → logprob: -10.915054321289062
    7. '{k' → logprob: -11.415054321289062
    8. ' ' → logprob: -12.290054321289062
    9. '2' → logprob: -12.415054321289062
    10. '
' → logprob: -13.165054321289062

Token 185: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.16046397387981415
    2. '-' → logprob: -1.9104639291763306
    3. ' ' → logprob: -9.6604642868042
    4. ' ==' → logprob: -10.0354642868042
    5. ' >=' → logprob: -10.5354642868042
    6. '>=' → logprob: -10.5354642868042
    7. ' -=' → logprob: -10.6604642868042
    8. '==' → logprob: -11.2854642868042
    9. ' =' → logprob: -11.5354642868042
    10. '=' → logprob: -11.5354642868042

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.824579784530215e-05
    2. ' ' → logprob: -10.2500581741333
    3. '2' → logprob: -10.7500581741333
    4. '```' → logprob: -14.5000581741333
    5. '   ' → logprob: -14.8750581741333
    6. '
' → logprob: -15.2500581741333
    7. '>' → logprob: -16.500059127807617
    8. '<|end|>' → logprob: -16.625059127807617
    9. '=' → logprob: -17.250059127807617
    10. '<|end|>' → logprob: -17.500059127807617

Token 187: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20156867802143097
    2. '=' → logprob: -1.7015687227249146
    3. ' <=' → logprob: -9.451568603515625
    4. ' >=' → logprob: -10.076568603515625
    5. ')' → logprob: -11.326568603515625
    6. '>=' → logprob: -11.701568603515625
    7. '<=' → logprob: -12.076568603515625
    8. ' ' → logprob: -12.451568603515625
    9. ' ==' → logprob: -13.451568603515625
    10. '<|end|>' → logprob: -13.951568603515625

Token 188: ' ' (ID: 220)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.956291913986206
    2. '(' → logprob: -1.206291913986206
    3. '2' → logprob: -1.831291913986206
    4. ' ' → logprob: -2.206291913986206
    5. ''' → logprob: -4.331292152404785
    6. 'f' → logprob: -4.456292152404785
    7. ' f' → logprob: -4.581292152404785
    8. '"' → logprob: -5.956292152404785
    9. 'str' → logprob: -5.956292152404785
    10. '   ' → logprob: -6.081292152404785

Token 189: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1622098833322525
    2. '2' → logprob: -2.662209987640381
    3. ' (' → logprob: -2.787209987640381
    4. 'str' → logprob: -5.412209987640381
    5. ''' → logprob: -5.537209987640381
    6. 'f' → logprob: -5.537209987640381
    7. ' ' → logprob: -5.662209987640381
    8. '"' → logprob: -7.037209987640381
    9. '   ' → logprob: -8.162209510803223
    10. ' f' → logprob: -8.287209510803223

Token 190: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.21543754637241364
    2. '*b' → logprob: -1.7154375314712524
    3. ' *' → logprob: -4.590437412261963
    4. ' b' → logprob: -5.715437412261963
    5. '*' → logprob: -7.840437412261963
    6. ' ' → logprob: -10.340437889099121
    7. '   ' → logprob: -10.340437889099121
    8. '```' → logprob: -12.590437889099121
    9. '	b' → logprob: -12.840437889099121
    10. ')b' → logprob: -13.215437889099121

Token 191: '/k' (ID: 28096)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.0707629919052124
    2. '//' → logprob: -2.820763111114502
    3. ' ' → logprob: -5.820763111114502
    4. '*' → logprob: -6.070763111114502
    5. ' *' → logprob: -6.320763111114502
    6. ' /' → logprob: -7.195763111114502
    7. '```' → logprob: -8.945762634277344
    8. ' ' → logprob: -8.945762634277344
    9. ')' → logprob: -9.320762634277344
    10. '/' → logprob: -9.320762634277344

Token 192: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23819288611412048
    2. '   ' → logprob: -1.6131929159164429
    3. ')' → logprob: -5.363193035125732
    4. ' if' → logprob: -6.238193035125732
    5. '
' → logprob: -6.363193035125732
    6. '           ' → logprob: -7.113193035125732
    7. '        
' → logprob: -7.363193035125732
    8. '    
' → logprob: -7.863193035125732
    9. 'if' → logprob: -8.113192558288574
    10. ')
' → logprob: -8.363192558288574

Token 193: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18473514914512634
    2. '   ' → logprob: -1.8097351789474487
    3. '<|end|>' → logprob: -6.559735298156738
    4. ')' → logprob: -6.809735298156738
    5. '        
' → logprob: -7.434735298156738
    6. ',' → logprob: -7.809735298156738
    7. '    
' → logprob: -7.809735298156738
    8. '           ' → logprob: -8.809735298156738
    9. '    ' → logprob: -9.184735298156738
    10. ' ' → logprob: -9.434735298156738

Token 194: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03412071242928505
    2. ' ' → logprob: -4.909120559692383
    3. ' if' → logprob: -4.909120559692383
    4. '   ' → logprob: -4.909120559692383
    5. '        
' → logprob: -5.534120559692383
    6. ' 
' → logprob: -6.159120559692383
    7. '<|end|>' → logprob: -6.534120559692383
    8. '  
' → logprob: -7.409120559692383
    9. ' x' → logprob: -7.659120559692383
    10. '    ' → logprob: -7.784120559692383

Token 195: ' =>' (ID: 871)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2808564007282257
    2. '       ' → logprob: -1.6558563709259033
    3. ' x' → logprob: -4.155856609344482
    4. '   ' → logprob: -4.405856609344482
    5. 'if' → logprob: -4.405856609344482
    6. ' ' → logprob: -4.530856609344482
    7. '    ' → logprob: -6.655856609344482
    8. '  ' → logprob: -8.405856132507324
    9. 'x' → logprob: -8.530856132507324
    10. '        ' → logprob: -8.780856132507324

Token 196: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2278408706188202
    2. ' (' → logprob: -1.8528409004211426
    3. ' x' → logprob: -3.8528409004211426
    4. '2' → logprob: -4.352840900421143
    5. 'x' → logprob: -5.102840900421143
    6. '(' → logprob: -5.102840900421143
    7. ' if' → logprob: -7.977840900421143
    8. '    ' → logprob: -9.102840423583984
    9. ' int' → logprob: -9.727840423583984
    10. ' ' → logprob: -9.852840423583984

Token 197: '2' (ID: 17)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.0767830610275269
    2. '(' → logprob: -1.2017830610275269
    3. '2' → logprob: -1.4517830610275269
    4. ' ' → logprob: -2.2017831802368164
    5. ' x' → logprob: -5.076783180236816
    6. 'x' → logprob: -5.326783180236816
    7. ' int' → logprob: -6.701783180236816
    8. 'int' → logprob: -7.076783180236816
    9. '(int' → logprob: -8.951783180236816
    10. 'if' → logprob: -9.076783180236816

Token 198: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03169792890548706
    2. '*x' → logprob: -3.531697988510132
    3. '*b' → logprob: -7.531697750091553
    4. '*' → logprob: -7.656697750091553
    5. 'b' → logprob: -7.656697750091553
    6. ' *' → logprob: -7.781697750091553
    7. ' x' → logprob: -10.031698226928711
    8. '```' → logprob: -14.031698226928711
    9. '#' → logprob: -15.031698226928711
    10. '**' → logprob: -15.656698226928711

Token 199: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6327157616615295
    2. '=' → logprob: -0.7577157616615295
    3. ' <=' → logprob: -10.757716178894043
    4. '>=' → logprob: -10.757716178894043
    5. '<=' → logprob: -11.007716178894043
    6. ' >=' → logprob: -11.007716178894043
    7. ' ' → logprob: -11.132716178894043
    8. ' +=' → logprob: -11.882716178894043
    9. ' +' → logprob: -12.132716178894043
    10. '+=' → logprob: -12.382716178894043

Token 200: ' ' (ID: 220)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8355386257171631
    2. ' int' → logprob: -1.210538625717163
    3. ' ' → logprob: -1.585538625717163
    4. ' f' → logprob: -3.710538625717163
    5. '2' → logprob: -4.210538864135742
    6. '(' → logprob: -4.460538864135742
    7. 'int' → logprob: -4.960538864135742
    8. '(int' → logprob: -5.960538864135742
    9. '"' → logprob: -6.835538864135742
    10. '   ' → logprob: -6.960538864135742

Token 201: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0291552543640137
    2. 'int' → logprob: -1.5291552543640137
    3. '(' → logprob: -1.6541552543640137
    4. ' (' → logprob: -2.2791552543640137
    5. ' int' → logprob: -2.5291552543640137
    6. ' ' → logprob: -3.2791552543640137
    7. '(int' → logprob: -4.529155254364014
    8. 'f' → logprob: -6.654155254364014
    9. ' f' → logprob: -7.029155254364014
    10. '"' → logprob: -7.154155254364014

Token 202: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0032629151828587055
    2. '*b' → logprob: -5.878262996673584
    3. ' b' → logprob: -7.753262996673584
    4. ' *' → logprob: -10.878262519836426
    5. '*' → logprob: -11.628262519836426
    6. '(b' → logprob: -14.378262519836426
    7. ' (' → logprob: -16.253263473510742
    8. '*(' → logprob: -16.753263473510742
    9. 'int' → logprob: -17.378263473510742
    10. '_b' → logprob: -17.378263473510742

Token 203: '/k' (ID: 28096)
  Prédit: '/k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/k' → logprob: -0.4203370213508606
    2. '/' → logprob: -1.1703369617462158
    3. ' /' → logprob: -3.545336961746216
    4. '//' → logprob: -5.670337200164795
    5. ' //' → logprob: -7.670337200164795
    6. '   ' → logprob: -9.920336723327637
    7. ' ' → logprob: -10.045336723327637
    8. '```' → logprob: -11.670336723327637
    9. '`' → logprob: -12.420336723327637
    10. ' ' → logprob: -12.545336723327637

Token 204: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0009305141866207123
    2. '-' → logprob: -7.000930309295654
    3. ' ' → logprob: -11.250930786132812
    4. ')' → logprob: -13.625930786132812
    5. '       ' → logprob: -13.625930786132812
    6. ',' → logprob: -14.125930786132812
    7. ' ' → logprob: -14.375930786132812
    8. '    ' → logprob: -14.750930786132812
    9. '   ' → logprob: -14.875930786132812
    10. '*' → logprob: -15.000930786132812

Token 205: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4356808066368103
    2. '(k' → logprob: -1.060680866241455
    3. '(' → logprob: -5.060680866241455
    4. 'k' → logprob: -8.060680389404297
    5. ' k' → logprob: -8.185680389404297
    6. ' ' → logprob: -11.685680389404297
    7. ' ((' → logprob: -12.185680389404297
    8. '((' → logprob: -12.310680389404297
    9. '(int' → logprob: -14.310680389404297
    10. '   ' → logprob: -15.060680389404297

Token 206: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.14005246758460999
    2. '(k' → logprob: -2.390052556991577
    3. ' (' → logprob: -3.890052556991577
    4. ' k' → logprob: -4.015052318572998
    5. '(' → logprob: -7.515052318572998
    6. ')' → logprob: -11.640052795410156
    7. '	k' → logprob: -12.140052795410156
    8. '   ' → logprob: -12.765052795410156
    9. '{k' → logprob: -12.765052795410156
    10. '
' → logprob: -13.015052795410156

Token 207: '-' (ID: 12)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12942856550216675
    2. '+' → logprob: -2.1294286251068115
    3. '-' → logprob: -6.754428386688232
    4. ' -' → logprob: -6.879428386688232
    5. ' ' → logprob: -8.87942886352539
    6. ')' → logprob: -9.12942886352539
    7. ')+' → logprob: -11.12942886352539
    8. ' *' → logprob: -12.00442886352539
    9. '*' → logprob: -12.00442886352539
    10. '(' → logprob: -12.25442886352539

Token 208: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.848420551046729e-05
    2. ' ' → logprob: -9.7500581741333
    3. '```' → logprob: -16.500059127807617
    4. '   ' → logprob: -17.750059127807617
    5. '(' → logprob: -18.000059127807617
    6. '-' → logprob: -18.250059127807617
    7. ')' → logprob: -19.500059127807617
    8. '  ' → logprob: -19.500059127807617
    9. '۱' → logprob: -19.875059127807617
    10. '{' → logprob: -19.875059127807617

Token 209: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0456085279583931
    2. ' )' → logprob: -3.1706085205078125
    3. ')
' → logprob: -6.4206085205078125
    4. ' )
' → logprob: -7.6706085205078125
    5. '   ' → logprob: -8.045608520507812
    6. ')*' → logprob: -10.295608520507812
    7. '       ' → logprob: -10.295608520507812
    8. '    ' → logprob: -11.045608520507812
    9. '))' → logprob: -11.170608520507812
    10. ')/' → logprob: -11.170608520507812

Token 210: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005010074470192194
    2. '   ' → logprob: -5.88001012802124
    3. '<|end|>' → logprob: -6.75501012802124
    4. ' x' → logprob: -8.880009651184082
    5. '        
' → logprob: -8.880009651184082
    6. ')' → logprob: -9.005009651184082
    7. ',' → logprob: -9.130009651184082
    8. '           ' → logprob: -9.255009651184082
    9. '<|end|>' → logprob: -9.255009651184082
    10. '    ' → logprob: -9.630009651184082

Token 211: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4443734586238861
    2. '   ' → logprob: -1.3193734884262085
    3. ' ' → logprob: -2.944373369216919
    4. '    ' → logprob: -4.569373607635498
    5. ' x' → logprob: -4.819373607635498
    6. ' if' → logprob: -5.819373607635498
    7. ' 
' → logprob: -5.819373607635498
    8. '        
' → logprob: -5.944373607635498
    9. '  ' → logprob: -6.194373607635498
    10. 'x' → logprob: -6.569373607635498

Token 212: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.497170090675354
    2. ' if' → logprob: -1.747170090675354
    3. ' ' → logprob: -1.997170090675354
    4. '   ' → logprob: -2.9971699714660645
    5. 'x' → logprob: -4.1221699714660645
    6. '       ' → logprob: -4.7471699714660645
    7. 'if' → logprob: -5.8721699714660645
    8. '    ' → logprob: -6.8721699714660645
    9. ' 
' → logprob: -7.3721699714660645
    10. '  ' → logprob: -7.7471699714660645

Token 213: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31334057450294495
    2. '=' → logprob: -1.3133405447006226
    3. '=int' → logprob: -10.938340187072754
    4. '_space' → logprob: -11.438340187072754
    5. 'space' → logprob: -11.563340187072754
    6. 's' → logprob: -11.563340187072754
    7. ' ' → logprob: -11.688340187072754
    8. '_' → logprob: -12.688340187072754
    9. '_token' → logprob: -12.938340187072754
    10. ')' → logprob: -13.188340187072754

Token 214: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4821603000164032
    2. '(' → logprob: -1.7321603298187256
    3. ' int' → logprob: -2.3571603298187256
    4. 'int' → logprob: -2.4821603298187256
    5. '(int' → logprob: -3.7321603298187256
    6. ' ((' → logprob: -6.6071600914001465
    7. '((' → logprob: -6.6071600914001465
    8. '(b' → logprob: -8.357160568237305
    9. ' max' → logprob: -9.357160568237305
    10. ' math' → logprob: -9.357160568237305

Token 215: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03518146276473999
    2. '(' → logprob: -3.4101815223693848
    3. ' ' → logprob: -7.035181522369385
    4. ' (' → logprob: -7.660181522369385
    5. 'int' → logprob: -9.035181045532227
    6. 'b' → logprob: -10.660181045532227
    7. '   ' → logprob: -10.910181045532227
    8. '(int' → logprob: -11.410181045532227
    9. ' int' → logprob: -12.660181045532227
    10. '((' → logprob: -12.785181045532227

Token 216: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -6.682846287731081e-05
    2. '*b' → logprob: -9.625066757202148
    3. ' b' → logprob: -14.375066757202148
    4. ' *' → logprob: -15.625066757202148
    5. '*' → logprob: -17.00006675720215
    6. '_b' → logprob: -17.75006675720215
    7. '	b' → logprob: -19.50006675720215
    8. '```' → logprob: -20.37506675720215
    9. 'б' → logprob: -21.00006675720215
    10. ')b' → logprob: -21.00006675720215

Token 217: '/k' (ID: 28096)
  Prédit: '/k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/k' → logprob: -0.5407825112342834
    2. ' /' → logprob: -1.2907824516296387
    3. '//' → logprob: -2.5407824516296387
    4. '/' → logprob: -3.2907824516296387
    5. ' //' → logprob: -3.6657824516296387
    6. '   ' → logprob: -7.790782451629639
    7. ' ' → logprob: -8.165782928466797
    8. ')' → logprob: -8.665782928466797
    9. ' ' → logprob: -10.415782928466797
    10. '  ' → logprob: -10.540782928466797

Token 218: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.010730615817010403
    2. '-' → logprob: -4.760730743408203
    3. ' ' → logprob: -6.885730743408203
    4. ')' → logprob: -6.885730743408203
    5. ' )' → logprob: -10.135730743408203
    6. '   ' → logprob: -12.010730743408203
    7. ' +' → logprob: -12.135730743408203
    8. '  ' → logprob: -12.135730743408203
    9. ' -(' → logprob: -12.510730743408203
    10. '+' → logprob: -12.760730743408203

Token 219: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3485521972179413
    2. '(k' → logprob: -1.2235522270202637
    3. '(' → logprob: -9.223551750183105
    4. '((' → logprob: -12.973551750183105
    5. ' ((' → logprob: -13.223551750183105
    6. 'k' → logprob: -13.348551750183105
    7. ' ' → logprob: -13.973551750183105
    8. '   ' → logprob: -15.098551750183105
    9. ' k' → logprob: -15.098551750183105
    10. ')' → logprob: -15.223551750183105

Token 220: 'k' (ID: 74)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.0200880728662014
    2. ' (' → logprob: -4.145088195800781
    3. 'k' → logprob: -5.520088195800781
    4. '(' → logprob: -10.395088195800781
    5. ' k' → logprob: -11.645088195800781
    6. '{k' → logprob: -14.645088195800781
    7. '   ' → logprob: -16.52008819580078
    8. ')' → logprob: -16.77008819580078
    9. '[k' → logprob: -17.14508819580078
    10. ')(' → logprob: -17.27008819580078

Token 221: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.012815694324672222
    2. ' -' → logprob: -4.762815475463867
    3. '+' → logprob: -6.012815475463867
    4. '1' → logprob: -6.387815475463867
    5. ' +' → logprob: -9.762815475463867
    6. ' ' → logprob: -12.637815475463867
    7. '   ' → logprob: -14.012815475463867
    8. '```' → logprob: -14.762815475463867
    9. '[' → logprob: -15.262815475463867
    10. '  ' → logprob: -15.887815475463867

Token 222: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -17.250003814697266
    4. '(' → logprob: -17.500003814697266
    5. '   ' → logprob: -17.750003814697266
    6. '۱' → logprob: -19.750003814697266
    7. '
' → logprob: -20.000003814697266
    8. ')' → logprob: -20.250003814697266
    9. '{' → logprob: -20.687503814697266
    10. '  ' → logprob: -20.875003814697266

Token 223: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002226979471743107
    2. ' )' → logprob: -6.127226829528809
    3. ')/' → logprob: -10.627226829528809
    4. ')//' → logprob: -11.127226829528809
    5. '+' → logprob: -14.002226829528809
    6. ' +' → logprob: -14.502226829528809
    7. '   ' → logprob: -14.627226829528809
    8. ' ' → logprob: -15.002226829528809
    9. '")' → logprob: -15.752226829528809
    10. '))' → logprob: -15.752226829528809

Token 224: ' /' (ID: 820)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2956168055534363
    2. '   ' → logprob: -1.545616865158081
    3. ')' → logprob: -4.170616626739502
    4. ' +' → logprob: -5.545616626739502
    5. '<|end|>' → logprob: -5.545616626739502
    6. ' /' → logprob: -5.795616626739502
    7. ' =' → logprob: -5.920616626739502
    8. '           ' → logprob: -5.920616626739502
    9. '<|end|>' → logprob: -5.920616626739502
    10. ',' → logprob: -6.420616626739502

Token 225: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0013261953135952353
    2. ' ' → logprob: -6.626326084136963
    3. '   ' → logprob: -15.626326560974121
    4. '```' → logprob: -18.001325607299805
    5. '
' → logprob: -19.501325607299805
    6. '  ' → logprob: -19.626325607299805
    7. '(' → logprob: -19.876325607299805
    8. '    ' → logprob: -20.001325607299805
    9. '۲' → logprob: -20.626325607299805
    10. '２' → logprob: -21.001325607299805

Token 226: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -17.50002098083496
    4. '```' → logprob: -18.25002098083496
    5. '
' → logprob: -20.12502098083496
    6. '۲' → logprob: -20.37502098083496
    7. '  ' → logprob: -20.75002098083496
    8. '    ' → logprob: -21.62502098083496
    9. '(' → logprob: -21.87502098083496
    10. '２' → logprob: -21.87502098083496

Token 227: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1740695834159851
    2. '   ' → logprob: -2.04906964302063
    3. ')' → logprob: -3.92406964302063
    4. '<|end|>' → logprob: -5.424069404602051
    5. ',' → logprob: -6.299069404602051
    6. '        
' → logprob: -6.674069404602051
    7. ' if' → logprob: -7.049069404602051
    8. '<|end|>' → logprob: -7.424069404602051
    9. '    
' → logprob: -7.549069404602051
    10. ' )' → logprob: -8.67406940460205

Token 228: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4062841534614563
    2. '   ' → logprob: -1.1562840938568115
    3. ')' → logprob: -5.031284332275391
    4. '<|end|>' → logprob: -5.281284332275391
    5. '        
' → logprob: -6.906284332275391
    6. ' ' → logprob: -6.906284332275391
    7. ',' → logprob: -7.156284332275391
    8. ' if' → logprob: -7.281284332275391
    9. ' )' → logprob: -7.531284332275391
    10. '    ' → logprob: -7.531284332275391

Token 229: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06919708102941513
    2. ' x' → logprob: -3.569197177886963
    3. ' if' → logprob: -3.694197177886963
    4. 'x' → logprob: -5.444197177886963
    5. '   ' → logprob: -5.819197177886963
    6. 'if' (adapté à ' if') → logprob: -6.194197177886963
    7. ')' → logprob: -6.819197177886963
    8. '        
' → logprob: -7.444197177886963
    9. '    ' → logprob: -7.569197177886963
    10. '        ' → logprob: -7.694197177886963

Token 230: ' ' (ID: 220)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5900832414627075
    2. ' k' → logprob: -1.7150832414627075
    3. '(' → logprob: -2.340083122253418
    4. 'k' → logprob: -2.590083122253418
    5. ' b' → logprob: -3.215083122253418
    6. 'b' → logprob: -3.840083122253418
    7. '(k' → logprob: -3.965083122253418
    8. ' ' → logprob: -4.840083122253418
    9. '(b' → logprob: -5.840083122253418
    10. '2' → logprob: -6.340083122253418

Token 231: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04276005178689957
    2. 'b' → logprob: -3.917760133743286
    3. '(k' → logprob: -5.042759895324707
    4. '2' → logprob: -5.417759895324707
    5. '(b' → logprob: -5.417759895324707
    6. 'k' → logprob: -5.667759895324707
    7. ' (' → logprob: -5.792759895324707
    8. ' ' → logprob: -10.167759895324707
    9. ' b' → logprob: -10.417759895324707
    10. '((' → logprob: -10.542759895324707

Token 232: '*b' (ID: 72162)
  Prédit: '*b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*b' → logprob: -0.10497824102640152
    2. 'b' → logprob: -3.104978322982788
    3. ' *' → logprob: -3.104978322982788
    4. '*' → logprob: -4.604978084564209
    5. ' b' → logprob: -12.854978561401367
    6. '.' → logprob: -16.729978561401367
    7. '*p' → logprob: -17.104978561401367
    8. '**' → logprob: -17.354978561401367
    9. ' ' → logprob: -17.354978561401367
    10. '_b' → logprob: -17.354978561401367

Token 233: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0623045451939106
    2. '%' → logprob: -2.8123044967651367
    3. ' ' → logprob: -9.437304496765137
    4. ')' → logprob: -9.687304496765137
    5. '/k' → logprob: -9.687304496765137
    6. ' >=' → logprob: -9.812304496765137
    7. ' /' → logprob: -10.187304496765137
    8. '>=' → logprob: -11.187304496765137
    9. ' *' → logprob: -12.437304496765137
    10. ' ' → logprob: -12.687304496765137

Token 234: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.000553151941858232
    2. ' k' → logprob: -7.500553131103516
    3. '(k' → logprob: -16.625553131103516
    4. '{k' → logprob: -17.000553131103516
    5. '	k' → logprob: -17.125553131103516
    6. '1' → logprob: -18.250553131103516
    7. '   ' → logprob: -18.375553131103516
    8. '_k' → logprob: -18.500553131103516
    9. '```' → logprob: -19.000553131103516
    10. '=k' → logprob: -19.125553131103516

Token 235: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12694008648395538
    2. ' ==' → logprob: -2.1269400119781494
    3. '=' → logprob: -12.37693977355957
    4. ')==' → logprob: -12.37693977355957
    5. '!=' → logprob: -13.62693977355957
    6. '===' → logprob: -14.12693977355957
    7. '==
' → logprob: -14.25193977355957
    8. ' !=' → logprob: -14.87693977355957
    9. ')' → logprob: -15.12693977355957
    10. ']==' → logprob: -15.87693977355957

Token 236: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -20.875003814697266
    4. '۰' → logprob: -21.250003814697266
    5. '```' → logprob: -21.375003814697266
    6. '  ' → logprob: -22.250003814697266
    7. 'k' → logprob: -22.375003814697266
    8. 'zero' → logprob: -22.750003814697266
    9. '  ' → logprob: -22.750003814697266
    10. '٠' → logprob: -22.875003814697266

Token 237: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '۰' → logprob: -20.500001907348633
    4. '```' → logprob: -20.875001907348633
    5. '   ' → logprob: -21.375001907348633
    6. 'k' → logprob: -22.625001907348633
    7. 'zero' → logprob: -22.625001907348633
    8. '٠' → logprob: -22.750001907348633
    9. '০' → logprob: -23.000001907348633
    10. '  ' → logprob: -23.000001907348633

Token 238: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6875993013381958
    2. ':' → logprob: -0.9375993013381958
    3. ':
' → logprob: -2.3125991821289062
    4. '   ' → logprob: -5.562599182128906
    5. '           ' → logprob: -6.562599182128906
    6. ' or' → logprob: -6.812599182128906
    7. ' continue' → logprob: -9.937599182128906
    8. ' :' → logprob: -9.937599182128906
    9. ' :
' → logprob: -10.062599182128906
    10. '	continue' → logprob: -10.187599182128906

Token 239: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002919945865869522
    2. '           ' → logprob: -5.877920150756836
    3. ' continue' → logprob: -9.252920150756836
    4. 'continue' → logprob: -11.502920150756836
    5. '   ' → logprob: -11.752920150756836
    6. '	continue' → logprob: -15.127920150756836
    7. ' continues' → logprob: -15.252920150756836
    8. '	       ' → logprob: -15.877920150756836
    9. '
' → logprob: -16.002920150756836
    10. '```' → logprob: -16.502920150756836

Token 240: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.16666525602340698
    2. '       ' → logprob: -1.9166653156280518
    3. 'continue' (adapté à ' continue') → logprob: -5.166665077209473
    4. '           ' → logprob: -7.416665077209473
    5. '   ' → logprob: -9.541665077209473
    6. '	continue' → logprob: -11.041665077209473
    7. '               ' → logprob: -11.666665077209473
    8. '    ' → logprob: -12.166665077209473
    9. ' continues' → logprob: -12.166665077209473
    10. ' 
' → logprob: -13.041665077209473

Token 241: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.041579246520996094
    2. '        
' → logprob: -4.166579246520996
    3. '<|end|>' → logprob: -4.291579246520996
    4. '   ' → logprob: -4.666579246520996
    5. '    
' → logprob: -7.916579246520996
    6. '    ' → logprob: -8.166579246520996
    7. '        ' → logprob: -8.166579246520996
    8. '  
' → logprob: -8.791579246520996
    9. '```' → logprob: -8.916579246520996
    10. ' ' → logprob: -9.041579246520996

Token 242: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05538351461291313
    2. '   ' → logprob: -2.9303834438323975
    3. '        
' → logprob: -8.555383682250977
    4. '    
' → logprob: -8.930383682250977
    5. '<|end|>' → logprob: -10.180383682250977
    6. '           ' → logprob: -10.555383682250977
    7. ' x' → logprob: -10.930383682250977
    8. '  
' → logprob: -10.930383682250977
    9. ',' → logprob: -11.555383682250977
    10. '    ' → logprob: -11.805383682250977

Token 243: ' val' (ID: 1459)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1640690118074417
    2. ' x' → logprob: -1.9140690565109253
    3. 'x' → logprob: -6.664069175720215
    4. '        
' → logprob: -6.664069175720215
    5. '   ' → logprob: -7.914069175720215
    6. '        ' → logprob: -8.539069175720215
    7. ' ' → logprob: -8.539069175720215
    8. '
' → logprob: -8.789069175720215
    9. ' 
' → logprob: -8.914069175720215
    10. '    ' → logprob: -9.539069175720215

Token 244: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07890190184116364
    2. '=' → logprob: -2.578902006149292
    3. 's' → logprob: -11.453902244567871
    4. '   ' → logprob: -14.328902244567871
    5. 'x' → logprob: -14.953902244567871
    6. '2' → logprob: -15.078902244567871
    7. ' ' → logprob: -16.328901290893555
    8. ')' → logprob: -16.953901290893555
    9. '```' → logprob: -17.328901290893555
    10. '_' → logprob: -17.453901290893555

Token 245: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3565940260887146
    2. '2' → logprob: -1.2315940856933594
    3. ' (' → logprob: -4.981594085693359
    4. ' ' → logprob: -6.731594085693359
    5. '((' → logprob: -10.60659408569336
    6. '   ' → logprob: -10.73159408569336
    7. 'int' → logprob: -11.73159408569336
    8. '(int' → logprob: -12.48159408569336
    9. '  ' → logprob: -13.73159408569336
    10. '    ' → logprob: -15.35659408569336

Token 246: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.20204907655715942
    2. '(' → logprob: -1.7020490169525146
    3. ' (' → logprob: -7.952049255371094
    4. ' ' → logprob: -8.327049255371094
    5. '((' → logprob: -11.202049255371094
    6. 'int' → logprob: -11.327049255371094
    7. '   ' → logprob: -11.577049255371094
    8. '(int' → logprob: -12.452049255371094
    9. '  ' → logprob: -14.077049255371094
    10. '`' → logprob: -15.202049255371094

Token 247: '*b' (ID: 72162)
  Prédit: '*b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*b' → logprob: -0.0005972352810204029
    2. '*' → logprob: -8.25059700012207
    3. 'b' → logprob: -8.25059700012207
    4. ' *' → logprob: -9.50059700012207
    5. '**' → logprob: -17.75059700012207
    6. ' b' → logprob: -18.12559700012207
    7. '*(' → logprob: -19.12559700012207
    8. '*a' → logprob: -19.25059700012207
    9. '*p' → logprob: -19.62559700012207
    10. '*object' → logprob: -19.75059700012207

Token 248: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.02462390810251236
    2. ' //' → logprob: -3.7746238708496094
    3. '/k' → logprob: -6.649623870849609
    4. '/' → logprob: -10.27462387084961
    5. ' /' → logprob: -11.14962387084961
    6. '
' → logprob: -11.27462387084961
    7. '   ' → logprob: -11.52462387084961
    8. ' ' → logprob: -12.27462387084961
    9. '[k' → logprob: -13.14962387084961
    10. '       ' → logprob: -13.77462387084961

Token 249: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.1008713702030946e-06
    2. ' k' → logprob: -13.125001907348633
    3. '	k' → logprob: -20.000001907348633
    4. '{k' → logprob: -20.125001907348633
    5. ',k' → logprob: -20.750001907348633
    6. '*k' → logprob: -21.500001907348633
    7. '/k' → logprob: -22.125001907348633
    8. '   ' → logprob: -22.250001907348633
    9. '_k' → logprob: -22.250001907348633
    10. '
' → logprob: -22.250001907348633

Token 250: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.016856487840414047
    2. '-' → logprob: -4.141856670379639
    3. '       ' → logprob: -7.641856670379639
    4. ' ' → logprob: -8.89185619354248
    5. '        ' → logprob: -9.26685619354248
    6. '   ' → logprob: -10.39185619354248
    7. '<|end|>' → logprob: -11.14185619354248
    8. ')' → logprob: -11.39185619354248
    9. ' -(' → logprob: -11.76685619354248
    10. '    ' → logprob: -11.89185619354248

Token 251: ' (' (ID: 350)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.00011009939044015482
    2. ' (' → logprob: -9.125109672546387
    3. 'k' → logprob: -13.750109672546387
    4. '(' → logprob: -17.125110626220703
    5. '   ' → logprob: -17.250110626220703
    6. '((' → logprob: -18.000110626220703
    7. '(q' → logprob: -20.375110626220703
    8. '       ' → logprob: -20.500110626220703
    9. '(
' → logprob: -20.625110626220703
    10. ' k' → logprob: -21.000110626220703

Token 252: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0009120595059357584
    2. '(k' → logprob: -7.000912189483643
    3. '{k' → logprob: -14.750911712646484
    4. ' k' → logprob: -15.875911712646484
    5. ' (' → logprob: -17.500911712646484
    6. '	k' → logprob: -18.375911712646484
    7. '(' → logprob: -18.750911712646484
    8. '[k' → logprob: -19.250911712646484
    9. '   ' → logprob: -20.250911712646484
    10. '_k' → logprob: -20.750911712646484

Token 253: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.008992237038910389
    2. ' -' → logprob: -4.7589921951293945
    3. '1' → logprob: -7.8839921951293945
    4. ' ' → logprob: -15.258992195129395
    5. '[' → logprob: -15.633992195129395
    6. ')' → logprob: -16.00899314880371
    7. '```' → logprob: -16.13399314880371
    8. '<|end|>' → logprob: -16.25899314880371
    9. 'k' → logprob: -16.75899314880371
    10. '   ' → logprob: -17.25899314880371

Token 254: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '[' → logprob: -18.750001907348633
    4. '
' → logprob: -19.000001907348633
    5. '```' → logprob: -19.000001907348633
    6. '(' → logprob: -19.375001907348633
    7. '۱' → logprob: -20.000001907348633
    8. '   ' → logprob: -20.250001907348633
    9. '<|end|>' → logprob: -20.250001907348633
    10. '-' → logprob: -20.250001907348633

Token 255: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.357919842004776
    2. '
' → logprob: -1.7329198122024536
    3. ')
' → logprob: -2.107919931411743
    4. '       ' → logprob: -6.982919692993164
    5. '   ' → logprob: -7.357919692993164
    6. '<|end|>' → logprob: -7.607919692993164
    7. '<|end|>' → logprob: -8.982919692993164
    8. ' )' → logprob: -9.232919692993164
    9. '  
' → logprob: -10.357919692993164
    10. ']' → logprob: -10.482919692993164

Token 256: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008259449969045818
    2. '<|end|>' → logprob: -7.500825881958008
    3. '   ' → logprob: -9.375825881958008
    4. '        
' → logprob: -9.500825881958008
    5. ' if' → logprob: -9.500825881958008
    6. '        ' → logprob: -11.750825881958008
    7. '      ' → logprob: -11.875825881958008
    8. 'if' → logprob: -12.375825881958008
    9. '           ' → logprob: -12.375825881958008
    10. '<|end|>' → logprob: -12.500825881958008

Token 257: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6289167404174805
    2. '       ' → logprob: -1.0039167404174805
    3. '   ' → logprob: -2.5039167404174805
    4. 'if' (adapté à ' if') → logprob: -4.0039167404174805
    5. ' ' → logprob: -8.12891674041748
    6. ' x' → logprob: -11.12891674041748
    7. '    ' → logprob: -11.37891674041748
    8. '  ' → logprob: -11.75391674041748
    9. '	if' → logprob: -12.00391674041748
    10. '0' → logprob: -12.00391674041748

Token 258: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.12692894041538239
    2. ' val' → logprob: -2.1269290447235107
    3. '(val' → logprob: -14.25192928314209
    4. '   ' → logprob: -16.126928329467773
    5. '	val' → logprob: -16.251928329467773
    6. ' ' → logprob: -17.626928329467773
    7. '[val' → logprob: -17.626928329467773
    8. '0' → logprob: -18.501928329467773
    9. '_val' → logprob: -18.876928329467773
    10. '  ' → logprob: -18.876928329467773

Token 259: ' <=' (ID: 5017)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.470592200756073
    2. ' <' → logprob: -1.2205922603607178
    3. '%' → logprob: -3.4705922603607178
    4. '>=' → logprob: -3.9705922603607178
    5. '<=' → logprob: -3.9705922603607178
    6. ' %' → logprob: -5.345592021942139
    7. ' <=' → logprob: -5.595592021942139
    8. ' >=' → logprob: -5.845592021942139
    9. '>' → logprob: -9.470592498779297
    10. ' ' → logprob: -11.595592498779297

Token 260: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00026169343618676066
    2. ' ' → logprob: -8.250261306762695
    3. '1' → logprob: -15.625261306762695
    4. '۰' → logprob: -16.750261306762695
    5. '```' → logprob: -17.125261306762695
    6. '   ' → logprob: -17.375261306762695
    7. '<|end|>' → logprob: -17.937761306762695
    8. '  ' → logprob: -18.187761306762695
    9. ')' → logprob: -18.750261306762695
    10. '    ' → logprob: -18.875261306762695

Token 261: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3425219549390022e-05
    2. ' ' → logprob: -11.25001335144043
    3. '1' → logprob: -15.50001335144043
    4. '<|end|>' → logprob: -16.62501335144043
    5. '۰' → logprob: -17.25001335144043
    6. '```' → logprob: -18.37501335144043
    7. 'zero' → logprob: -18.56251335144043
    8. '00' → logprob: -19.31251335144043
    9. '[' → logprob: -19.31251335144043
    10. 's' → logprob: -19.37501335144043

Token 262: ' or' (ID: 503)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2306508719921112
    2. ':' → logprob: -2.2306509017944336
    3. '       ' → logprob: -2.4806509017944336
    4. '           ' → logprob: -4.855650901794434
    5. ' or' → logprob: -4.980650901794434
    6. '   ' → logprob: -9.730650901794434
    7. ' continue' → logprob: -10.105650901794434
    8. 'continue' → logprob: -10.355650901794434
    9. '	continue' → logprob: -11.105650901794434
    10. ':
' → logprob: -11.980650901794434

Token 263: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.3134872317314148
    2. ' val' → logprob: -1.3134872913360596
    3. '           ' → logprob: -8.93848705291748
    4. '(val' → logprob: -9.68848705291748
    5. '       ' → logprob: -10.93848705291748
    6. '          ' → logprob: -11.81348705291748
    7. '	val' → logprob: -13.06348705291748
    8. '        ' → logprob: -13.18848705291748
    9. '_val' → logprob: -14.43848705291748
    10. ' (' → logprob: -14.43848705291748

Token 264: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.043009355664253235
    2. '%' → logprob: -3.1680092811584473
    3. ' ' → logprob: -12.043009757995605
    4. '<|end|>' → logprob: -14.293009757995605
    5. '%x' → logprob: -14.668009757995605
    6. ' %#' → logprob: -14.793009757995605
    7. '   ' → logprob: -14.918009757995605
    8. ' %
' → logprob: -15.043009757995605
    9. ' not' → logprob: -15.293009757995605
    10. ' %=' → logprob: -15.293009757995605

Token 265: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.505351095460355e-05
    2. ' ' → logprob: -9.500075340270996
    3. '```' → logprob: -16.50007438659668
    4. '   ' → logprob: -18.37507438659668
    5. '۲' → logprob: -19.62507438659668
    6. '  ' → logprob: -20.00007438659668
    7. '
' → logprob: -20.25007438659668
    8. '>' → logprob: -20.25007438659668
    9. '<|end|>' → logprob: -20.62507438659668
    10. '{' → logprob: -20.75007438659668

Token 266: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -17.875001907348633
    4. '   ' → logprob: -18.250001907348633
    5. '۲' → logprob: -18.375001907348633
    6. '
' → logprob: -18.875001907348633
    7. '२' → logprob: -20.125001907348633
    8. '২' → logprob: -20.125001907348633
    9. '{' → logprob: -20.250001907348633
    10. '２' → logprob: -20.375001907348633

Token 267: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.002230667509138584
    2. ' !=' → logprob: -6.127230644226074
    3. '==' → logprob: -10.627230644226074
    4. '=' → logprob: -11.502230644226074
    5. '()!=' → logprob: -12.377230644226074
    6. ']!=' → logprob: -13.377230644226074
    7. ')!=' → logprob: -13.502230644226074
    8. '!==' → logprob: -13.502230644226074
    9. '!='' → logprob: -14.502230644226074
    10. '!' → logprob: -14.502230644226074

Token 268: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014489953173324466
    2. ' ' → logprob: -9.375144958496094
    3. '=' → logprob: -9.750144958496094
    4. '1' → logprob: -13.250144958496094
    5. '۰' → logprob: -17.875144958496094
    6. '==' → logprob: -18.250144958496094
    7. '```' → logprob: -18.375144958496094
    8. '   ' → logprob: -18.500144958496094
    9. ' =' → logprob: -19.000144958496094
    10. '  ' → logprob: -19.812644958496094

Token 269: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.9160102712921798e-05
    2. ' ' → logprob: -10.500029563903809
    3. '=' → logprob: -13.750029563903809
    4. '1' → logprob: -14.625029563903809
    5. '۰' → logprob: -17.125028610229492
    6. '```' → logprob: -17.625028610229492
    7. '<|end|>' → logprob: -18.312528610229492
    8. ')' → logprob: -18.437528610229492
    9. '
' → logprob: -18.687528610229492
    10. ' ' → logprob: -18.750028610229492

Token 270: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7054718136787415
    2. '       ' → logprob: -1.0804717540740967
    3. ':' → logprob: -1.8304717540740967
    4. '           ' → logprob: -5.330471992492676
    5. ' continue' → logprob: -7.080471992492676
    6. 'continue' → logprob: -8.330471992492676
    7. '   ' → logprob: -8.455471992492676
    8. '	continue' → logprob: -8.955471992492676
    9. ' continues' → logprob: -10.330471992492676
    10. ' or' → logprob: -11.205471992492676

Token 271: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4316233992576599
    2. '       ' → logprob: -1.0566234588623047
    3. ' continue' → logprob: -5.931623458862305
    4. 'continue' → logprob: -8.931623458862305
    5. '   ' → logprob: -9.306623458862305
    6. '	continue' → logprob: -10.931623458862305
    7. '	       ' → logprob: -11.431623458862305
    8. ' continues' → logprob: -12.431623458862305
    9. '
' → logprob: -13.056623458862305
    10. '_continue' → logprob: -13.681623458862305

Token 272: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5551047325134277
    2. '           ' → logprob: -1.3051047325134277
    3. 'continue' (adapté à ' continue') → logprob: -2.0551047325134277
    4. ' continue' → logprob: -3.8051047325134277
    5. '   ' → logprob: -5.430104732513428
    6. '	continue' → logprob: -9.555105209350586
    7. '               ' → logprob: -9.930105209350586
    8. ' ' → logprob: -12.805105209350586
    9. '	       ' → logprob: -14.555105209350586
    10. '_continue' → logprob: -14.555105209350586

Token 273: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00027468299958854914
    2. '           ' → logprob: -9.375274658203125
    3. ' continue' → logprob: -9.375274658203125
    4. '   ' → logprob: -9.750274658203125
    5. '        
' → logprob: -11.125274658203125
    6. 'continue' → logprob: -11.500274658203125
    7. '
' → logprob: -12.250274658203125
    8. '               ' → logprob: -12.875274658203125
    9. ' x' → logprob: -12.875274658203125
    10. '<|end|>' → logprob: -13.250274658203125

Token 274: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.778209353797138e-05
    2. '   ' → logprob: -10.625067710876465
    3. '        
' → logprob: -10.750067710876465
    4. ' x' → logprob: -12.125067710876465
    5. 'x' → logprob: -12.625067710876465
    6. '           ' → logprob: -12.750067710876465
    7. '```' → logprob: -12.875067710876465
    8. '	   ' → logprob: -14.000067710876465
    9. '<|end|>' → logprob: -14.000067710876465
    10. '
' → logprob: -14.000067710876465

Token 275: ' x' (ID: 1215)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016500094905495644
    2. ' x' → logprob: -4.141499996185303
    3. 'x' (adapté à ' x') → logprob: -8.641500473022461
    4. '
' → logprob: -8.641500473022461
    5. '   ' → logprob: -9.641500473022461
    6. '        
' → logprob: -10.766500473022461
    7. '           ' → logprob: -11.641500473022461
    8. '    ' → logprob: -12.516500473022461
    9. '      ' → logprob: -12.641500473022461
    10. '        ' → logprob: -12.766500473022461

Token 276: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740770161151886
    2. ' =' → logprob: -0.9740769863128662
    3. '＝' → logprob: -17.224077224731445
    4. '=int' → logprob: -18.974077224731445
    5. ' ' → logprob: -19.099077224731445
    6. '=
' → logprob: -19.724077224731445
    7. 'x' → logprob: -20.349077224731445
    8. ',' → logprob: -20.474077224731445
    9. '   ' → logprob: -20.599077224731445
    10. '=}' → logprob: -20.599077224731445

Token 277: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.6931474208831787
    2. ' val' → logprob: -0.6931474208831787
    3. '	val' → logprob: -16.068147659301758
    4. '   ' → logprob: -16.443147659301758
    5. '[val' → logprob: -17.318147659301758
    6. '       ' → logprob: -18.068147659301758
    7. '(val' → logprob: -18.443147659301758
    8. '_val' → logprob: -18.693147659301758
    9. 'int' → logprob: -19.068147659301758
    10. ',val' → logprob: -19.568147659301758

Token 278: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.023402711376547813
    2. ' //' → logprob: -3.773402690887451
    3. '   ' → logprob: -9.64840316772461
    4. ' ' → logprob: -9.64840316772461
    5. '```' → logprob: -11.77340316772461
    6. '       ' → logprob: -12.02340316772461
    7. '//=' → logprob: -12.27340316772461
    8. '  ' → logprob: -12.77340316772461
    9. '#' → logprob: -13.27340316772461
    10. '
' → logprob: -13.39840316772461

Token 279: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '   ' → logprob: -20.5
    4. '۲' → logprob: -21.0
    5. '```' → logprob: -21.375
    6. '２' → logprob: -22.25
    7. '২' → logprob: -23.25
    8. '२' → logprob: -23.375
    9. '<|end|>' → logprob: -24.0
    10. '٢' → logprob: -24.125

Token 280: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '   ' → logprob: -21.0
    4. '۲' → logprob: -21.5
    5. '```' → logprob: -22.375
    6. '２' → logprob: -23.25
    7. '২' → logprob: -24.0
    8. '२' → logprob: -24.25
    9. '<|end|>' → logprob: -24.5
    10. '٢' → logprob: -25.0

Token 281: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20767055451869965
    2. '       ' → logprob: -1.7076705694198608
    3. '
' → logprob: -5.58267068862915
    4. '    
' → logprob: -6.83267068862915
    5. '        
' → logprob: -7.20767068862915
    6. 'start' → logprob: -8.582670211791992
    7. '<|end|>' → logprob: -9.332670211791992
    8. ' if' → logprob: -9.707670211791992
    9. '[start' → logprob: -9.957670211791992
    10. '  
' → logprob: -9.957670211791992

Token 282: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011244339868426323
    2. '   ' → logprob: -4.511244297027588
    3. 'if' → logprob: -9.386244773864746
    4. ' if' → logprob: -9.636244773864746
    5. 'start' → logprob: -10.511244773864746
    6. '        
' → logprob: -11.886244773864746
    7. '    
' → logprob: -12.636244773864746
    8. '```' → logprob: -13.011244773864746
    9. '           ' → logprob: -13.261244773864746
    10. ' start' → logprob: -13.511244773864746

Token 283: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04774068295955658
    2. 'if' (adapté à ' if') → logprob: -3.1727406978607178
    3. '   ' → logprob: -5.547740459442139
    4. ' if' → logprob: -7.297740459442139
    5. 'start' → logprob: -9.422740936279297
    6. 'print' → logprob: -9.547740936279297
    7. '           ' → logprob: -13.297740936279297
    8. '     ' → logprob: -14.672740936279297
    9. 'current' → logprob: -14.797740936279297
    10. '        
' → logprob: -14.797740936279297

Token 284: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6977007985115051
    2. ' x' → logprob: -0.6977007985115051
    3. 'start' → logprob: -6.6977009773254395
    4. ' start' → logprob: -7.4477009773254395
    5. 'b' → logprob: -7.4477009773254395
    6. 'k' → logprob: -7.5727009773254395
    7. ' ' → logprob: -7.9477009773254395
    8. ' k' → logprob: -7.9477009773254395
    9. ' b' → logprob: -8.572700500488281
    10. '1' → logprob: -8.697700500488281

Token 285: ' >=' (ID: 5064)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.32817840576171875
    2. '>' → logprob: -1.5781784057617188
    3. ' <=' → logprob: -3.2031784057617188
    4. '>=' → logprob: -3.7031784057617188
    5. ' >' → logprob: -5.703178405761719
    6. '<' → logprob: -6.078178405761719
    7. '+' → logprob: -6.578178405761719
    8. ' >=' → logprob: -7.578178405761719
    9. '==' → logprob: -7.828178405761719
    10. ' <' → logprob: -9.328178405761719

Token 286: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004102504346519709
    2. '0' → logprob: -5.50410270690918
    3. ' ' → logprob: -10.87910270690918
    4. 'start' → logprob: -12.62910270690918
    5. 'floor' → logprob: -14.00410270690918
    6. '   ' → logprob: -14.25410270690918
    7. 'starting' → logprob: -16.37910270690918
    8. '2' → logprob: -16.50410270690918
    9. '```' → logprob: -16.50410270690918
    10. '  ' → logprob: -17.12910270690918

Token 287: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012627330143004656
    2. '0' → logprob: -6.876262664794922
    3. ' ' → logprob: -9.001262664794922
    4. '2' → logprob: -10.126262664794922
    5. 'start' → logprob: -10.126262664794922
    6. 'floor' → logprob: -11.251262664794922
    7. '   ' → logprob: -12.626262664794922
    8. 'x' → logprob: -13.001262664794922
    9. '100' → logprob: -13.001262664794922
    10. 's' → logprob: -14.001262664794922

Token 288: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7324182987213135
    2. ':
' → logprob: -0.7324182987213135
    3. ':' → logprob: -3.4824182987213135
    4. '       ' → logprob: -5.107418060302734
    5. 'and' → logprob: -6.857418060302734
    6. '           ' → logprob: -7.482418060302734
    7. '):
' → logprob: -9.857418060302734
    8. '   ' → logprob: -10.732418060302734
    9. '():
' → logprob: -11.982418060302734
    10. ':

' → logprob: -12.357418060302734

Token 289: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10054221004247665
    2. '       ' → logprob: -2.6005423069000244
    3. ':' → logprob: -4.225542068481445
    4. ':
' → logprob: -5.225542068481445
    5. ' and' → logprob: -6.850542068481445
    6. '<|end|>' → logprob: -9.350542068481445
    7. ',' → logprob: -9.850542068481445
    8. '	       ' → logprob: -10.100542068481445
    9. '<|end|>' → logprob: -10.225542068481445
    10. '):
' → logprob: -10.600542068481445

Token 290: ' max' (ID: 2999)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7167646884918213
    2. '           ' → logprob: -1.3417646884918213
    3. '   ' → logprob: -2.3417646884918213
    4. ' max' → logprob: -2.5917646884918213
    5. ' if' → logprob: -2.7167646884918213
    6. 'max' (adapté à ' max') → logprob: -5.091764450073242
    7. '               ' → logprob: -5.591764450073242
    8. 'if' → logprob: -6.091764450073242
    9. ' start' → logprob: -7.591764450073242
    10. 'start' → logprob: -8.466764450073242

Token 291: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -4.127333340875339e-06
    2. '_length' → logprob: -13.250003814697266
    3. 'len' → logprob: -13.875003814697266
    4. '_k' → logprob: -13.875003814697266
    5. '\' → logprob: -15.500003814697266
    6. '_' → logprob: -16.375003814697266
    7. '_l' → logprob: -16.500003814697266
    8. 'Len' → logprob: -17.500003814697266
    9. 'k' → logprob: -18.125003814697266
    10. '_le' → logprob: -18.250003814697266

Token 292: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0067156096920371056
    2. '=' → logprob: -5.006715774536133
    3. '=k' → logprob: -16.256715774536133
    4. '=max' → logprob: -16.881715774536133
    5. ' ' → logprob: -17.381715774536133
    6. ',' → logprob: -17.756715774536133
    7. '   ' → logprob: -17.756715774536133
    8. ' +=' → logprob: -18.131715774536133
    9. '<|end|>' → logprob: -18.131715774536133
    10. '>' → logprob: -19.381715774536133

Token 293: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0002964935847558081
    2. ' k' → logprob: -8.125296592712402
    3. '   ' → logprob: -15.000296592712402
    4. 'max' → logprob: -16.500295639038086
    5. '	k' → logprob: -18.375295639038086
    6. '```' → logprob: -18.500295639038086
    7. '       ' → logprob: -18.750295639038086
    8. ' ' → logprob: -19.125295639038086
    9. ' max' → logprob: -19.625295639038086
    10. '           ' → logprob: -19.750295639038086

Token 294: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.1689596148207784e-05
    2. '       ' → logprob: -10.750051498413086
    3. 'start' → logprob: -11.250051498413086
    4. '               ' → logprob: -12.375051498413086
    5. '   ' → logprob: -12.500051498413086
    6. '<|end|>' → logprob: -12.875051498413086
    7. ',' → logprob: -13.250051498413086
    8. ' and' → logprob: -13.750051498413086
    9. '	       ' → logprob: -14.500051498413086
    10. '          ' → logprob: -14.500051498413086

Token 295: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004020933993160725
    2. '       ' → logprob: -5.879021167755127
    3. '   ' → logprob: -7.004021167755127
    4. 'start' → logprob: -8.129020690917969
    5. '               ' → logprob: -11.754020690917969
    6. '	       ' → logprob: -14.129020690917969
    7. ' start' → logprob: -14.379020690917969
    8. '          ' → logprob: -14.379020690917969
    9. '<|end|>' → logprob: -14.504020690917969
    10. '
' → logprob: -14.754020690917969

Token 296: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.0010919966734945774
    2. '           ' → logprob: -7.376091957092285
    3. ' start' → logprob: -7.751091957092285
    4. '   ' → logprob: -11.251091957092285
    5. 'break' → logprob: -11.376091957092285
    6. '       ' → logprob: -12.626091957092285
    7. '
' → logprob: -12.751091957092285
    8. '               ' → logprob: -14.001091957092285
    9. '[start' → logprob: -14.501091957092285
    10. ' ' → logprob: -15.126091957092285

Token 297: '_floor' (ID: 152330)
  Prédit: '_floor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_floor' → logprob: -5.200166469876422e-06
    2. '_' → logprob: -13.000004768371582
    3. 'floor' → logprob: -13.250004768371582
    4. '=' → logprob: -14.000004768371582
    5. '=_' → logprob: -16.5000057220459
    6. '```' → logprob: -16.7500057220459
    7. ' =' → logprob: -16.8750057220459
    8. '_=' → logprob: -16.8750057220459
    9. '_f' → logprob: -17.7500057220459
    10. 'Floor' → logprob: -18.0000057220459

Token 298: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759395360946655
    2. '=' → logprob: -0.8259395360946655
    3. '＝' → logprob: -16.450939178466797
    4. ' ' → logprob: -16.825939178466797
    5. ',' → logprob: -17.700939178466797
    6. '=end' → logprob: -18.075939178466797
    7. '=start' → logprob: -18.325939178466797
    8. '<|end|>' → logprob: -18.825939178466797
    9. '```' → logprob: -19.075939178466797
    10. ')' → logprob: -19.200939178466797

Token 299: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.006715370807796717
    2. ' x' → logprob: -5.006715297698975
    3. '	x' → logprob: -18.006715774536133
    4. '(x' → logprob: -18.006715774536133
    5. 'b' → logprob: -18.631715774536133
    6. '   ' → logprob: -19.256715774536133
    7. ' ' → logprob: -19.381715774536133
    8. '$x' → logprob: -20.131715774536133
    9. 'int' → logprob: -20.256715774536133
    10. '```' → logprob: -20.381715774536133

Token 300: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.8312570318812504e-05
    2. '   ' → logprob: -11.625018119812012
    3. '       ' → logprob: -12.750018119812012
    4. 'print' → logprob: -13.000018119812012
    5. '	       ' → logprob: -13.500018119812012
    6. '		' → logprob: -14.375018119812012
    7. '          ' → logprob: -14.750018119812012
    8. '<|end|>' → logprob: -14.875018119812012
    9. '            
' → logprob: -15.125018119812012
    10. '               ' → logprob: -15.375018119812012

Token 301: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014482192695140839
    2. '   ' → logprob: -4.514482021331787
    3. 'print' → logprob: -5.889482021331787
    4. '       ' → logprob: -7.389482021331787
    5. '```' → logprob: -10.889482498168945
    6. 'break' → logprob: -11.264482498168945
    7. '               ' → logprob: -12.389482498168945
    8. '            
' → logprob: -12.639482498168945
    9. ' print' → logprob: -13.139482498168945
    10. '    
' → logprob: -14.639482498168945

Token 302: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0044544474221765995
    2. 'break' (adapté à ' break') → logprob: -5.504454612731934
    3. '       ' → logprob: -8.129454612731934
    4. 'print' → logprob: -9.629454612731934
    5. '   ' → logprob: -11.879454612731934
    6. ' break' → logprob: -12.129454612731934
    7. '	break' → logprob: -13.629454612731934
    8. '	       ' → logprob: -14.004454612731934
    9. '		' → logprob: -14.879454612731934
    10. '	   ' → logprob: -15.004454612731934

Token 303: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31382834911346436
    2. 'print' → logprob: -1.3138283491134644
    3. ' print' → logprob: -8.188828468322754
    4. '    
' → logprob: -8.313828468322754
    5. '```' → logprob: -10.938828468322754
    6. '
' → logprob: -11.063828468322754
    7. '<|end|>' → logprob: -13.188828468322754
    8. '  
' → logprob: -13.313828468322754
    9. 'for' → logprob: -13.313828468322754
    10. '       ' → logprob: -14.313828468322754

Token 304: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011248825117945671
    2. '   ' → logprob: -4.511248588562012
    3. '    
' → logprob: -9.886248588562012
    4. '
' → logprob: -9.886248588562012
    5. ' print' → logprob: -9.886248588562012
    6. '```' → logprob: -10.011248588562012
    7. 'for' → logprob: -13.636248588562012
    8. '  
' → logprob: -13.886248588562012
    9. '<|end|>' → logprob: -15.136248588562012
    10. 'printf' → logprob: -15.636248588562012

Token 305: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20373660326004028
    2. 'print' (adapté à ' print') → logprob: -1.7037365436553955
    3. ' print' → logprob: -6.078736782073975
    4. '
' → logprob: -11.203736305236816
    5. '    
' → logprob: -11.828736305236816
    6. '```' → logprob: -11.953736305236816
    7. 'for' → logprob: -13.703736305236816
    8. 'import' → logprob: -15.078736305236816
    9. '	print' → logprob: -16.328737258911133
    10. '       ' → logprob: -16.453737258911133

Token 306: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.05221537873148918
    2. '(f' → logprob: -3.052215337753296
    3. '(max' → logprob: -5.802215576171875
    4. '(' → logprob: -7.677215576171875
    5. '('' → logprob: -9.552215576171875
    6. 'start' → logprob: -10.677215576171875
    7. ' (' → logprob: -11.302215576171875
    8. '((' → logprob: -11.427215576171875
    9. '("' → logprob: -11.677215576171875
    10. '()' → logprob: -12.177215576171875

Token 307: '_floor' (ID: 152330)
  Prédit: '_floor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_floor' → logprob: -4.320199877838604e-07
    2. 'floor' → logprob: -14.75
    3. 'Floor' → logprob: -18.625
    4. ' floor' → logprob: -19.5
    5. '_fl' → logprob: -19.875
    6. 'loor' → logprob: -20.875
    7. '_f' → logprob: -21.5
    8. '_' → logprob: -21.625
    9. '.floor' → logprob: -21.75
    10. 'ing' → logprob: -23.125

Token 308: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4751355051994324
    2. ',' → logprob: -0.9751355051994324
    3. ' )' → logprob: -7.600135326385498
    4. ',end' → logprob: -7.725135326385498
    5. ',)' → logprob: -9.850135803222656
    6. ' ,' → logprob: -10.475135803222656
    7. '   ' → logprob: -11.100135803222656
    8. ',max' → logprob: -12.475135803222656
    9. ' +' → logprob: -13.100135803222656
    10. '+' → logprob: -13.225135803222656

Token 309: ' max' (ID: 2999)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.4311926066875458
    2. 'max' → logprob: -1.0561926364898682
    3. ' max' → logprob: -6.431192398071289
    4. ' start' → logprob: -7.056192398071289
    5. '   ' → logprob: -12.181192398071289
    6. ' ' → logprob: -12.556192398071289
    7. '(max' → logprob: -13.181192398071289
    8. '(start' → logprob: -13.931192398071289
    9. '  ' → logprob: -14.306192398071289
    10. ')' → logprob: -14.556192398071289

Token 310: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -4.320199877838604e-07
    2. 'len' → logprob: -14.75
    3. '\' → logprob: -18.25
    4. 'Len' → logprob: -19.0
    5. '_length' → logprob: -19.125
    6. ')_' → logprob: -19.5
    7. '_LEN' → logprob: -19.5
    8. '_k' → logprob: -19.625
    9. ' _' → logprob: -19.75
    10. '_l' → logprob: -19.875

Token 311: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020685292780399323
    2. '<|end|>' → logprob: -3.8956851959228516
    3. ' )' → logprob: -10.020685195922852
    4. '```' → logprob: -10.270685195922852
    5. '<|end|>' → logprob: -10.520685195922852
    6. ')
' → logprob: -11.520685195922852
    7. '')' → logprob: -11.645685195922852
    8. '
' → logprob: -12.395685195922852
    9. '")' → logprob: -13.020685195922852
    10. '#' → logprob: -13.270685195922852


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 309
Tokens correctement prédits (1ère position, stricte): 136
Tokens correctement prédits (1ère position, avec adaptation): 137
Tokens correctement prédits (top 10): 253
Précision stricte (1ère position): 44.01%
Précision adaptée (1ère position): 44.34%
Précision (top 10): 81.88%
================================================================================
