================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:55:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

rectangles = 0
rhombuses = 0

for line in sys.stdin:
    line = line.strip()
    if not line:
        continue
    a, b, c = map(int, line.split(','))
    a2 = a * a
    b2 = b * b
    c2 = c * c
    # For a parallelogram with sides a, b and diagonal c:
    # c^2 = a^2 + b^2 - 2ab*cos(theta)
    # Rectangle => theta = 90° => c^2 = a^2 + b^2
    if c2 == a2 + b2:
        rectangles += 1
    # Rhombus => a == b and diagonal length corresponds to a rhombus diagonal length
    # diagonals in rhombus: d1^2 + d2^2 = 4a^2
    # given only one diagonal c, and sides a,b, with a == b
    # so c < 2a, and c > 0, also given a+b>c always, so check if a == b and c < 2a
    # The problem sample input suggests counting cases where a==b but c2 != a2+b2 as rhombus.
    elif a == b:
        rhombuses += 1

print(rectangles)
print(rhombuses)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'rect' (ID: 4104)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.043228268623352
    2. '.' → logprob: -1.168228268623352
    3. '<|end|>' → logprob: -2.2932281494140625
    4. 'import' → logprob: -2.5432281494140625
    5. '' → logprob: -2.5432281494140625
    6. '#' → logprob: -3.7932281494140625
    7. '\' → logprob: -4.4182281494140625
    8. '
' → logprob: -4.7932281494140625
    9. 'print' → logprob: -5.0432281494140625
    10. ';' → logprob: -5.6682281494140625

Token 4: 'angles' (ID: 34011)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.03917226940393448
    2. '.' → logprob: -3.2891721725463867
    3. 'angular' → logprob: -8.039172172546387
    4. '_' → logprob: -8.039172172546387
    5. '[' → logprob: -9.539172172546387
    6. ' =' → logprob: -9.789172172546387
    7. ')' → logprob: -9.789172172546387
    8. 'angler' → logprob: -9.914172172546387
    9. 'a' → logprob: -10.289172172546387
    10. 'angles' → logprob: -10.414172172546387

Token 5: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.024460598826408386
    2. '[' → logprob: -3.774460554122925
    3. '(' → logprob: -7.649460792541504
    4. '=' → logprob: -7.774460792541504
    5. ' =' → logprob: -9.149460792541504
    6. '_' → logprob: -9.274460792541504
    7. ')' → logprob: -10.774460792541504
    8. '```' → logprob: -10.774460792541504
    9. 's' → logprob: -11.149460792541504
    10. ',' → logprob: -11.524460792541504

Token 6: ' ' (ID: 220)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.06350544095039368
    2. '[]' → logprob: -2.9385054111480713
    3. ' [' → logprob: -5.18850564956665
    4. '[' → logprob: -5.93850564956665
    5. ' [
' → logprob: -8.688505172729492
    6. ' ' → logprob: -8.813505172729492
    7. '[]}' → logprob: -10.938505172729492
    8. '[
' → logprob: -11.438505172729492
    9. ' [

' → logprob: -12.313505172729492
    10. ' {}' → logprob: -12.813505172729492

Token 7: '0' (ID: 15)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.03917548060417175
    2. '[' → logprob: -3.289175510406494
    3. '{}' → logprob: -6.914175510406494
    4. '[]}' → logprob: -9.414175033569336
    5. ' []' → logprob: -10.539175033569336
    6. '[
' → logprob: -11.664175033569336
    7. '{' → logprob: -11.789175033569336
    8. '[(' → logprob: -12.539175033569336
    9. '[]=' → logprob: -13.289175033569336
    10. '[int' → logprob: -13.414175033569336

Token 8: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7557784914970398
    2. ',' → logprob: -1.8807785511016846
    3. '.' → logprob: -1.8807785511016846
    4. '\' → logprob: -2.6307785511016846
    5. '_' → logprob: -3.1307785511016846
    6. '[' → logprob: -3.6307785511016846
    7. ' =' → logprob: -4.3807783126831055
    8. '\n' → logprob: -4.5057783126831055
    9. 'import' → logprob: -4.6307783126831055
    10. '#' → logprob: -4.7557783126831055

Token 9: 'rh' (ID: 80097)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.2926973104476929
    2. '.' → logprob: -1.5426973104476929
    3. '=' → logprob: -1.7926973104476929
    4. '\n' → logprob: -2.0426974296569824
    5. 'for' → logprob: -3.0426974296569824
    6. '```' → logprob: -3.2926974296569824
    7. ',' → logprob: -3.7926974296569824
    8. '#' → logprob: -3.9176974296569824
    9. '<|end|>' → logprob: -4.167697429656982
    10. '
' → logprob: -4.167697429656982

Token 10: 'omb' (ID: 2722)
  Prédit: 'ect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.02731730416417122
    2. 'ects' → logprob: -4.402317523956299
    3. 'e' → logprob: -4.527317523956299
    4. 'ec' → logprob: -6.902317523956299
    5. 'ef' → logprob: -7.777317523956299
    6. 'eg' → logprob: -8.02731704711914
    7. 'et' → logprob: -8.15231704711914
    8. 'ex' → logprob: -8.40231704711914
    9. 'ead' → logprob: -8.40231704711914
    10. 'ecs' → logprob: -8.90231704711914

Token 11: 'uses' (ID: 5977)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.004106658045202494
    2. 'i' → logprob: -5.754106521606445
    3. ' us' → logprob: -7.254106521606445
    4. 'uses' → logprob: -9.254106521606445
    5. 'u' → logprob: -10.754106521606445
    6. '```' → logprob: -11.129106521606445
    7. '	us' → logprob: -11.254106521606445
    8. '_us' → logprob: -12.129106521606445
    9. '_i' → logprob: -12.191606521606445
    10. 'ус' → logprob: -12.254106521606445

Token 12: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023304175585508347
    2. '=' → logprob: -3.7733042240142822
    3. 's' → logprob: -10.398303985595703
    4. ' ' → logprob: -10.898303985595703
    5. '_' → logprob: -12.273303985595703
    6. ' +=' → logprob: -13.398303985595703
    7. ' =
' → logprob: -14.023303985595703
    8. ',' → logprob: -14.523303985595703
    9. ')' → logprob: -15.023303985595703
    10. 'space' → logprob: -15.523303985595703

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.016039647161960602
    2. '0' → logprob: -4.141039848327637
    3. '1' → logprob: -12.516039848327637
    4. ' ' → logprob: -14.016039848327637
    5. '2' → logprob: -15.391039848327637
    6. '3' → logprob: -16.32853889465332
    7. '  ' → logprob: -16.45353889465332
    8. '4' → logprob: -16.70353889465332
    9. '```' → logprob: -17.14103889465332
    10. 's' → logprob: -17.14103889465332

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004137649200856686
    2. ' ' → logprob: -5.5041375160217285
    3. '1' → logprob: -10.004137992858887
    4. '[]' → logprob: -12.254137992858887
    5. '{}' → logprob: -13.129137992858887
    6. '2' → logprob: -13.629137992858887
    7. '3' → logprob: -13.754137992858887
    8. '4' → logprob: -13.879137992858887
    9. '5' → logprob: -14.129137992858887
    10. ' []' → logprob: -14.629137992858887

Token 15: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7494487762451172
    2. '
' → logprob: -1.3744487762451172
    3. '\' → logprob: -1.8744487762451172
    4. '<|end|>' → logprob: -2.624448776245117
    5. '```' → logprob: -3.749448776245117
    6. 'newline' → logprob: -5.249448776245117
    7. 'n' → logprob: -5.624448776245117
    8. 'r' → logprob: -6.374448776245117
    9. '' → logprob: -6.374448776245117
    10. 'for' → logprob: -6.499448776245117

Token 16: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.037268731743097305
    2. 'if' → logprob: -4.16226863861084
    3. 'while' → logprob: -4.78726863861084
    4. '#' → logprob: -6.16226863861084
    5. '.' → logprob: -6.53726863861084
    6. '=' → logprob: -6.53726863861084
    7. '\' → logprob: -7.03726863861084
    8. 'w' → logprob: -7.16226863861084
    9. '```' → logprob: -7.28726863861084
    10. 'f' → logprob: -7.28726863861084

Token 17: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02018609456717968
    2. ' i' → logprob: -4.270185947418213
    3. ' item' → logprob: -5.645185947418213
    4. ' line' → logprob: -7.020185947418213
    5. ' row' → logprob: -7.895185947418213
    6. ' rectangle' → logprob: -8.270186424255371
    7. '  ' → logprob: -8.645186424255371
    8. ' token' → logprob: -9.270186424255371
    9. ' element' → logprob: -9.270186424255371
    10. '_' → logprob: -9.395186424255371

Token 18: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00888766534626484
    2. 'in' → logprob: -4.758887767791748
    3. ' ' → logprob: -8.63388729095459
    4. 's' → logprob: -11.13388729095459
    5. '[' → logprob: -11.25888729095459
    6. ' i' → logprob: -11.38388729095459
    7. '```' → logprob: -11.88388729095459
    8. 'import' → logprob: -12.00888729095459
    9. '  ' → logprob: -12.25888729095459
    10. ' =' → logprob: -12.38388729095459

Token 19: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.16050763428211212
    2. 'sys' → logprob: -1.9105076789855957
    3. ' open' → logprob: -8.785507202148438
    4. ' range' → logprob: -10.535507202148438
    5. ' lines' → logprob: -10.660507202148438
    6. 'open' → logprob: -10.785507202148438
    7. '=sys' → logprob: -10.910507202148438
    8. '	sys' → logprob: -11.785507202148438
    9. '(sys' → logprob: -12.160507202148438
    10. 'range' → logprob: -12.160507202148438

Token 20: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.030114805325865746
    2. '.' → logprob: -4.030114650726318
    3. '.argv' → logprob: -4.655114650726318
    4. '.readline' → logprob: -6.405114650726318
    5. '.stdout' → logprob: -7.905114650726318
    6. ' .' → logprob: -8.280115127563477
    7. '.std' → logprob: -10.780115127563477
    8. '.input' → logprob: -11.030115127563477
    9. '.next' → logprob: -11.280115127563477
    10. '.import' → logprob: -11.655115127563477

Token 21: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0016642312984913588
    2. '.' → logprob: -7.001664161682129
    3. ' :' → logprob: -8.376664161682129
    4. ':
' → logprob: -8.751664161682129
    5. '.readline' → logprob: -8.876664161682129
    6. '[:]' → logprob: -9.876664161682129
    7. ':**' → logprob: -10.001664161682129
    8. '.:' → logprob: -10.376664161682129
    9. '':' → logprob: -10.501664161682129
    10. '):' → logprob: -11.376664161682129

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007590537425130606
    2. ' if' → logprob: -5.5075907707214355
    3. '    
' → logprob: -5.7575907707214355
    4. '    ' → logprob: -9.007590293884277
    5. '```' → logprob: -10.007590293884277
    6. '    
    
' → logprob: -10.757590293884277
    7. ' ' → logprob: -10.757590293884277
    8. 'if' → logprob: -11.007590293884277
    9. '     
' → logprob: -11.132590293884277
    10. ' readline' → logprob: -11.382590293884277

Token 23: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.041896071285009384
    2. '   ' → logprob: -3.666896104812622
    3. ' stripped' → logprob: -4.916895866394043
    4. 'line' (adapté à ' line') → logprob: -5.166895866394043
    5. ' if' → logprob: -7.166895866394043
    6. ' data' → logprob: -7.416895866394043
    7. ' parts' → logprob: -7.791895866394043
    8. ' tokens' → logprob: -8.416895866394043
    9. 'data' → logprob: -9.291895866394043
    10. ' content' → logprob: -9.916895866394043

Token 24: ' =' (ID: 314)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.06266066431999207
    2. '.' → logprob: -3.3126606941223145
    3. '=' → logprob: -4.1876606941223145
    4. ' =' → logprob: -5.5626606941223145
    5. '.rstrip' → logprob: -6.4376606941223145
    6. '.startswith' → logprob: -6.4376606941223145
    7. '.split' → logprob: -6.5626606941223145
    8. 'strip' → logprob: -8.812660217285156
    9. 's' → logprob: -8.937660217285156
    10. 'split' → logprob: -9.312660217285156

Token 25: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.005938159301877022
    2. 'line' → logprob: -5.1309380531311035
    3. '	line' → logprob: -12.255938529968262
    4. '=line' → logprob: -12.630938529968262
    5. '(line' → logprob: -14.505938529968262
    6. '#line' → logprob: -15.005938529968262
    7. '[line' → logprob: -15.630938529968262
    8. ' input' → logprob: -15.880938529968262
    9. ' readline' → logprob: -16.380937576293945
    10. ' ' → logprob: -16.755937576293945

Token 26: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0016629199963063002
    2. '.' → logprob: -6.751662731170654
    3. '.rstrip' → logprob: -7.626662731170654
    4. '.split' → logprob: -12.751663208007812
    5. 'strip' → logprob: -13.626663208007812
    6. ' .' → logprob: -14.126663208007812
    7. '.replace' → logprob: -15.876663208007812
    8. '.readline' → logprob: -16.001663208007812
    9. '.lower' → logprob: -16.501663208007812
    10. 'rstrip' → logprob: -16.751663208007812

Token 27: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0004911953583359718
    2. '(' → logprob: -7.750491142272949
    3. '()`' → logprob: -11.37549114227295
    4. '().' → logprob: -11.50049114227295
    5. ' ()' → logprob: -12.00049114227295
    6. '()
' → logprob: -12.50049114227295
    7. '`()' → logprob: -12.50049114227295
    8. '()(' → logprob: -12.87549114227295
    9. '()"' → logprob: -13.12549114227295
    10. '())' → logprob: -13.12549114227295

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05698965862393379
    2. ' if' → logprob: -3.8069896697998047
    3. 'if' → logprob: -4.056989669799805
    4. '<|end|>' → logprob: -4.556989669799805
    5. '```' → logprob: -5.931989669799805
    6. '
' → logprob: -6.556989669799805
    7. '<|end|>' → logprob: -7.806989669799805
    8. '    
' → logprob: -7.931989669799805
    9. 'tokens' → logprob: -9.681989669799805
    10. '  
' → logprob: -9.806989669799805

Token 29: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.033792540431022644
    2. ' if' → logprob: -3.408792495727539
    3. '   ' → logprob: -9.658792495727539
    4. 'parts' → logprob: -10.283792495727539
    5. 'tokens' → logprob: -11.033792495727539
    6. '```' → logprob: -11.033792495727539
    7. ' parts' → logprob: -12.408792495727539
    8. 'points' → logprob: -13.158792495727539
    9. 'values' → logprob: -13.408792495727539
    10. 'for' → logprob: -13.533792495727539

Token 30: ' not' (ID: 625)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.18590910732746124
    2. ' not' → logprob: -1.9359091520309448
    3. ' len' → logprob: -4.185909271240234
    4. ' ' → logprob: -5.310909271240234
    5. 'line' → logprob: -5.560909271240234
    6. ''' → logprob: -7.560909271240234
    7. ' '' → logprob: -8.435909271240234
    8. 'len' → logprob: -8.435909271240234
    9. 'not' → logprob: -8.810909271240234
    10. '"' → logprob: -9.435909271240234

Token 31: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.03804366663098335
    2. 'line' → logprob: -3.288043737411499
    3. ' ' → logprob: -14.163043975830078
    4. '	line' → logprob: -14.413043975830078
    5. '(line' → logprob: -14.538043975830078
    6. ' lines' → logprob: -15.788043975830078
    7. '[line' → logprob: -16.413043975830078
    8. '#line' → logprob: -17.163043975830078
    9. '=line' → logprob: -17.163043975830078
    10. 'lines' → logprob: -17.413043975830078

Token 32: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03238414600491524
    2. ' or' → logprob: -3.532384157180786
    3. ':
' → logprob: -6.907383918762207
    4. '.startswith' → logprob: -7.032383918762207
    5. '.split' → logprob: -9.032383918762207
    6. ' :' → logprob: -9.282383918762207
    7. ':return' → logprob: -9.282383918762207
    8. ' continue' → logprob: -9.407383918762207
    9. 'continue' → logprob: -9.407383918762207
    10. '<|end|>' → logprob: -9.407383918762207

Token 33: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.046001922339200974
    2. '   ' → logprob: -3.29600191116333
    3. ' continue' → logprob: -4.92100191116333
    4. 'continue' → logprob: -7.92100191116333
    5. '<|end|>' → logprob: -9.296002388000488
    6. '	continue' → logprob: -10.046002388000488
    7. '    ' → logprob: -10.421002388000488
    8. ' break' → logprob: -10.546002388000488
    9. '_continue' → logprob: -11.296002388000488
    10. ' continues' → logprob: -11.296002388000488

Token 34: ' continue' (ID: 4901)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.08242376148700714
    2. ' continue' → logprob: -2.582423686981201
    3. 'break' → logprob: -6.082423686981201
    4. 'continue' (adapté à ' continue') → logprob: -6.707423686981201
    5. '   ' → logprob: -11.08242416381836
    6. '	break' → logprob: -12.70742416381836
    7. ' ' → logprob: -13.83242416381836
    8. '	continue' → logprob: -14.08242416381836
    9. ' continu' → logprob: -14.20742416381836
    10. '```' → logprob: -14.33242416381836

Token 35: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07579044997692108
    2. '    
' → logprob: -2.8257904052734375
    3. '
' → logprob: -4.5757904052734375
    4. '<|end|>' → logprob: -6.0757904052734375
    5. '  
' → logprob: -7.4507904052734375
    6. '   
' → logprob: -8.450790405273438
    7. '```' → logprob: -8.950790405273438
    8. '<|end|>' → logprob: -9.825790405273438
    9. '        
' → logprob: -10.075790405273438
    10. '  ' → logprob: -10.200790405273438

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01527365855872631
    2. '    
' → logprob: -4.390273571014404
    3. '```' → logprob: -7.015273571014404
    4. '   
' → logprob: -8.015274047851562
    5. 'i' → logprob: -8.265274047851562
    6. '
' → logprob: -8.390274047851562
    7. 'n' → logprob: -9.140274047851562
    8. '  
' → logprob: -9.265274047851562
    9. 's' → logprob: -9.390274047851562
    10. 'a' → logprob: -9.640274047851562

Token 37: ' a' (ID: 261)
  Prédit: ' parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.948285698890686
    2. 'parts' → logprob: -1.198285698890686
    3. 'points' → logprob: -2.0732855796813965
    4. 'data' → logprob: -2.9482855796813965
    5. ' points' → logprob: -3.4482855796813965
    6. 'tokens' → logprob: -3.6982855796813965
    7. 'values' → logprob: -3.8232855796813965
    8. 'shape' → logprob: -4.6982855796813965
    9. ' data' → logprob: -4.6982855796813965
    10. '   ' → logprob: -4.9482855796813965

Token 38: ',' (ID: 11)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.06515713781118393
    2. ' =' → logprob: -3.815157175064087
    3. 'rray' → logprob: -3.940157175064087
    4. ' ' → logprob: -5.440156936645508
    5. 'rg' → logprob: -5.690156936645508
    6. 'rr' → logprob: -5.940156936645508
    7. '[' → logprob: -5.940156936645508
    8. '=' → logprob: -6.315156936645508
    9. ',' → logprob: -6.565156936645508
    10. 'd' → logprob: -6.815156936645508

Token 39: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.023356005549430847
    2. ' b' → logprob: -3.7733559608459473
    3. ',' → logprob: -10.148356437683105
    4. '=' → logprob: -10.523356437683105
    5. ',b' → logprob: -10.898356437683105
    6. ' ' → logprob: -11.398356437683105
    7. ' =' → logprob: -12.273356437683105
    8. '*' → logprob: -13.398356437683105
    9. '_' → logprob: -13.648356437683105
    10. 's' → logprob: -13.773356437683105

Token 40: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04633486270904541
    2. ',' → logprob: -3.671334743499756
    3. '=' → logprob: -3.921334743499756
    4. ' ,' → logprob: -11.296335220336914
    5. ' ' → logprob: -12.796335220336914
    6. '<|end|>' → logprob: -13.171335220336914
    7. ')' → logprob: -14.046335220336914
    8. ' =
' → logprob: -14.296335220336914
    9. '  ' → logprob: -14.921335220336914
    10. ' =
' → logprob: -15.421335220336914

Token 41: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6333298683166504
    2. ' c' → logprob: -0.7583298683166504
    3. ' =' → logprob: -7.50832986831665
    4. '<|end|>' → logprob: -9.758329391479492
    5. '=' → logprob: -10.133329391479492
    6. ',c' → logprob: -10.508329391479492
    7. ' ' → logprob: -10.633329391479492
    8. ',' → logprob: -11.383329391479492
    9. '=c' → logprob: -12.883329391479492
    10. '<|end|>' → logprob: -12.883329391479492

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0028166472911834717
    2. '=' → logprob: -6.002816677093506
    3. ',' → logprob: -8.002816200256348
    4. ' ' → logprob: -13.127816200256348
    5. ' ,' → logprob: -13.377816200256348
    6. '<|end|>' → logprob: -14.002816200256348
    7. ' =
' → logprob: -14.252816200256348
    8. ')' → logprob: -14.377816200256348
    9. '  ' → logprob: -15.127816200256348
    10. ' =
' → logprob: -16.127817153930664

Token 43: ' map' (ID: 4014)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.49154603481292725
    2. ' map' → logprob: -0.9915460348129272
    3. 'line' → logprob: -4.491546154022217
    4. 'map' → logprob: -5.116546154022217
    5. ' ' → logprob: -9.866545677185059
    6. '[line' → logprob: -10.741545677185059
    7. ' [' → logprob: -11.241545677185059
    8. '[' → logprob: -12.116545677185059
    9. '	line' → logprob: -12.116545677185059
    10. ' ' → logprob: -12.491545677185059

Token 44: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.640399158000946
    2. '(' → logprob: -0.765399158000946
    3. '(lambda' → logprob: -5.265398979187012
    4. '(str' → logprob: -6.265398979187012
    5. '<|end|>' → logprob: -7.515398979187012
    6. '(float' → logprob: -10.015398979187012
    7. '<int' → logprob: -10.265398979187012
    8. '(
' → logprob: -10.265398979187012
    9. '(line' → logprob: -11.765398979187012
    10. 'int' → logprob: -12.015398979187012

Token 45: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.06492222100496292
    2. ')' → logprob: -2.814922332763672
    3. '(' → logprob: -6.064922332763672
    4. '<|end|>' → logprob: -7.814922332763672
    5. ',line' → logprob: -9.689922332763672
    6. ' line' → logprob: -10.189922332763672
    7. '[line' → logprob: -10.439922332763672
    8. 'line' → logprob: -10.814922332763672
    9. '	line' → logprob: -10.939922332763672
    10. ')(' → logprob: -11.064922332763672

Token 46: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.016093377023935318
    2. 'line' → logprob: -4.1410932540893555
    3. ')' → logprob: -10.266093254089355
    4. '	line' → logprob: -11.891093254089355
    5. '(line' → logprob: -11.891093254089355
    6. '[line' → logprob: -12.016093254089355
    7. '#line' → logprob: -13.766093254089355
    8. ' )' → logprob: -14.016093254089355
    9. ',line' → logprob: -14.141093254089355
    10. '=line' → logprob: -14.141093254089355

Token 47: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.19658447802066803
    2. '.' → logprob: -1.9465844631195068
    3. '.strip' → logprob: -3.446584463119507
    4. ')' → logprob: -5.696584701538086
    5. '.rstrip' → logprob: -8.446584701538086
    6. ').' → logprob: -8.946584701538086
    7. '().' → logprob: -9.696584701538086
    8. ' .' → logprob: -9.946584701538086
    9. '.readline' → logprob: -11.071584701538086
    10. '.s' → logprob: -11.446584701538086

Token 48: '(',' (ID: 30548)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.2798556983470917
    2. '())' → logprob: -1.529855728149414
    3. '()' → logprob: -3.779855728149414
    4. '(' → logprob: -5.529855728149414
    5. ')' → logprob: -8.029855728149414
    6. '(','' → logprob: -8.529855728149414
    7. '()))' → logprob: -9.654855728149414
    8. '("' → logprob: -9.779855728149414
    9. '("("' → logprob: -10.154855728149414
    10. ' ())' → logprob: -11.404855728149414

Token 49: ''))
' (ID: 15277)
  Prédit: ''))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''))' → logprob: -0.6655871868133545
    2. '))' → logprob: -1.4155871868133545
    3. ' ))' → logprob: -1.6655871868133545
    4. ' '' → logprob: -3.2905871868133545
    5. ''' → logprob: -5.165587425231934
    6. ' "))' → logprob: -5.540587425231934
    7. ' ' → logprob: -5.790587425231934
    8. ')' → logprob: -5.790587425231934
    9. ' )' → logprob: -8.165587425231934
    10. '"))' → logprob: -8.290587425231934

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5483445525169373
    2. '<|end|>' → logprob: -1.173344612121582
    3. '
' → logprob: -3.673344612121582
    4. ':' → logprob: -3.923344612121582
    5. '\n' → logprob: -4.048344612121582
    6. ')' → logprob: -4.298344612121582
    7. ' ' → logprob: -4.673344612121582
    8. '    
' → logprob: -4.798344612121582
    9. '<|end|>' → logprob: -5.423344612121582
    10. ' 
' → logprob: -5.548344612121582

Token 51: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24060167372226715
    2. ' ' → logprob: -1.990601658821106
    3. ' 
' → logprob: -2.9906017780303955
    4. '<|end|>' → logprob: -4.865601539611816
    5. '    ' → logprob: -5.240601539611816
    6. ' if' → logprob: -5.365601539611816
    7. '    
' → logprob: -5.865601539611816
    8. '  ' → logprob: -6.365601539611816
    9. '  
' → logprob: -7.240601539611816
    10. '   
' → logprob: -7.240601539611816

Token 52: '2' (ID: 17)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25094062089920044
    2. '+' → logprob: -2.2509405612945557
    3. ' >' → logprob: -3.3759405612945557
    4. ' ==' → logprob: -3.7509405612945557
    5. ' *' → logprob: -3.8759405612945557
    6. ' <=' → logprob: -4.125940799713135
    7. ' ' → logprob: -5.375940799713135
    8. ',' → logprob: -5.375940799713135
    9. ' >=' → logprob: -5.625940799713135
    10. ' ,' → logprob: -5.875940799713135

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6194248199462891
    2. ',' → logprob: -1.244424819946289
    3. ' **' → logprob: -2.619424819946289
    4. '**' → logprob: -3.369424819946289
    5. ' ==' → logprob: -3.994424819946289
    6. ' ,' → logprob: -3.994424819946289
    7. '=' → logprob: -4.369424819946289
    8. ' *' → logprob: -4.619424819946289
    9. ' ' → logprob: -5.869424819946289
    10. '*' → logprob: -6.244424819946289

Token 54: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.055140092968940735
    2. 'a' → logprob: -2.9301400184631348
    3. ' ' → logprob: -8.305140495300293
    4. '	a' → logprob: -12.180140495300293
    5. ' ' → logprob: -13.430140495300293
    6. 'b' → logprob: -14.055140495300293
    7. ' b' → logprob: -14.055140495300293
    8. ' (' → logprob: -14.680140495300293
    9. ' 
' → logprob: -15.430140495300293
    10. '2' → logprob: -15.805140495300293

Token 55: ' *' (ID: 425)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.3563953936100006
    2. ' **' → logprob: -1.4813953638076782
    3. ' *' → logprob: -3.1063954830169678
    4. '*' → logprob: -3.6063954830169678
    5. ' ' → logprob: -7.981395244598389
    6. '2' → logprob: -8.731395721435547
    7. '+' → logprob: -10.981395721435547
    8. '*a' → logprob: -11.481395721435547
    9. ' +' → logprob: -11.731395721435547
    10. ',' → logprob: -12.356395721435547

Token 56: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.22712701559066772
    2. ' a' → logprob: -1.6021270751953125
    3. '2' → logprob: -6.4771270751953125
    4. ' ' → logprob: -8.727127075195312
    5. '	a' → logprob: -11.727127075195312
    6. ' ' → logprob: -14.102127075195312
    7. '1' → logprob: -14.664627075195312
    8. '*a' → logprob: -14.727127075195312
    9. '4' → logprob: -14.852127075195312
    10. '3' → logprob: -15.477127075195312

Token 57: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 58: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5365486145019531
    2. '<|end|>' → logprob: -1.0365486145019531
    3. '   ' → logprob: -3.036548614501953
    4. '    ' → logprob: -5.661548614501953
    5. '  ' → logprob: -5.661548614501953
    6. ' 
' → logprob: -5.911548614501953
    7. '<|end|>' → logprob: -7.286548614501953
    8. '    
' → logprob: -7.286548614501953
    9. '+' → logprob: -8.411548614501953
    10. '  
' → logprob: -8.411548614501953

Token 59: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.4254818260669708
    2. ' b' → logprob: -1.1754817962646484
    3. ' ' → logprob: -3.5504817962646484
    4. '   ' → logprob: -5.550481796264648
    5. ' 
' → logprob: -6.800481796264648
    6. '    ' → logprob: -7.050481796264648
    7. '<|end|>' → logprob: -7.050481796264648
    8. '+' → logprob: -7.675481796264648
    9. ',' → logprob: -7.800481796264648
    10. '  ' → logprob: -7.800481796264648

Token 60: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01904064603149891
    2. ' ' → logprob: -4.644040584564209
    3. ' *' → logprob: -6.019040584564209
    4. '_' → logprob: -6.144040584564209
    5. '²' → logprob: -6.769040584564209
    6. ' =' → logprob: -6.894040584564209
    7. '**' → logprob: -7.019040584564209
    8. '*' → logprob: -7.144040584564209
    9. '<|end|>' → logprob: -8.269041061401367
    10. ' **' → logprob: -8.894041061401367

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0028225891292095184
    2. '=' → logprob: -5.877822399139404
    3. ' ' → logprob: -11.002822875976562
    4. ' ' → logprob: -14.877822875976562
    5. ' =
' → logprob: -15.252822875976562
    6. ' =)' → logprob: -16.377822875976562
    7. ',' → logprob: -16.627822875976562
    8. '_' → logprob: -16.627822875976562
    9. ' ='' → logprob: -16.877822875976562
    10. ')' → logprob: -17.002822875976562

Token 62: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.01817862130701542
    2. 'b' → logprob: -4.018178462982178
    3. ' ' → logprob: -10.518178939819336
    4. '<|end|>' → logprob: -14.268178939819336
    5. ' ' → logprob: -14.518178939819336
    6. '	b' → logprob: -15.768178939819336
    7. ' б' → logprob: -16.018178939819336
    8. '    ' → logprob: -16.143178939819336
    9. '  ' → logprob: -16.643178939819336
    10. ' 
' → logprob: -16.893178939819336

Token 63: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.04455619677901268
    2. '*' → logprob: -3.169556140899658
    3. ' ' → logprob: -6.919556140899658
    4. '**' → logprob: -8.169556617736816
    5. ' **' → logprob: -8.919556617736816
    6. '2' → logprob: -9.169556617736816
    7. '   ' → logprob: -11.169556617736816
    8. '`' → logprob: -12.044556617736816
    9. '  ' → logprob: -12.294556617736816
    10. '    ' → logprob: -12.669556617736816

Token 64: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.009758212603628635
    2. ' b' → logprob: -4.634757995605469
    3. ' ' → logprob: -13.509757995605469
    4. '<|end|>' → logprob: -14.634757995605469
    5. '*b' → logprob: -15.134757995605469
    6. ' ' → logprob: -16.75975799560547
    7. '	b' → logprob: -17.00975799560547
    8. '2' → logprob: -17.50975799560547
    9. ' б' → logprob: -17.88475799560547
    10. '  ' → logprob: -18.38475799560547

Token 65: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49517980217933655
    2. 'c' → logprob: -1.1201797723770142
    3. '<|end|>' → logprob: -3.1201798915863037
    4. '    
' → logprob: -4.620179653167725
    5. '
' → logprob: -5.745179653167725
    6. ' c' → logprob: -6.495179653167725
    7. '  ' → logprob: -6.620179653167725
    8. '```' → logprob: -6.870179653167725
    9. '   
' → logprob: -7.120179653167725
    10. '  
' → logprob: -7.620179653167725

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5596057176589966
    2. 'c' → logprob: -0.9346057176589966
    3. '    
' → logprob: -4.559605598449707
    4. '
' → logprob: -4.684605598449707
    5. '<|end|>' → logprob: -5.059605598449707
    6. ' c' → logprob: -5.809605598449707
    7. '  ' → logprob: -6.559605598449707
    8. '```' → logprob: -6.684605598449707
    9. '  
' → logprob: -7.059605598449707
    10. ' ' → logprob: -7.309605598449707

Token 67: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.10730563849210739
    2. ' c' → logprob: -2.3573055267333984
    3. '   ' → logprob: -4.982305526733398
    4. '```' → logprob: -9.357305526733398
    5. '	c' → logprob: -10.107305526733398
    6. ' ' → logprob: -10.857305526733398
    7. '  ' → logprob: -11.232305526733398
    8. '    
' → logprob: -11.232305526733398
    9. '
' → logprob: -11.732305526733398
    10. ',' → logprob: -12.107305526733398

Token 68: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.014555385336279869
    2. '*' → logprob: -4.88955545425415
    3. ' *' → logprob: -5.76455545425415
    4. ' ' → logprob: -6.63955545425415
    5. '**' → logprob: -6.63955545425415
    6. '²' → logprob: -6.88955545425415
    7. '^' → logprob: -9.514554977416992
    8. ' **' → logprob: -9.889554977416992
    9. ' =' → logprob: -11.764554977416992
    10. '`' → logprob: -12.139554977416992

Token 69: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0015042672166600823
    2. '=' → logprob: -6.501504421234131
    3. ' ' → logprob: -13.501503944396973
    4. ' =
' → logprob: -15.001503944396973
    5. ' =)' → logprob: -16.50150489807129
    6. '<|end|>' → logprob: -16.75150489807129
    7. ' ='' → logprob: -17.87650489807129
    8. ')' → logprob: -18.12650489807129
    9. ' ' → logprob: -18.25150489807129
    10. ',' → logprob: -18.50150489807129

Token 70: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.06197462975978851
    2. 'c' → logprob: -2.81197452545166
    3. ' ' → logprob: -12.93697452545166
    4. ' ' → logprob: -13.18697452545166
    5. '	c' → logprob: -13.56197452545166
    6. '   ' → logprob: -14.31197452545166
    7. '```' → logprob: -15.43697452545166
    8. '  ' → logprob: -16.311975479125977
    9. '<|end|>' → logprob: -16.811975479125977
    10. ')c' → logprob: -16.936975479125977

Token 71: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6953945159912109
    2. ' *' → logprob: -0.6953945159912109
    3. '2' → logprob: -6.820394515991211
    4. ' ' → logprob: -7.195394515991211
    5. '**' → logprob: -8.445394515991211
    6. '`' → logprob: -10.195394515991211
    7. '*c' → logprob: -10.445394515991211
    8. ' ' → logprob: -10.695394515991211
    9. ' *
' → logprob: -10.945394515991211
    10. ' **' → logprob: -10.945394515991211

Token 72: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.005418377462774515
    2. ' c' → logprob: -5.255418300628662
    3. '2' → logprob: -8.75541877746582
    4. ' ' → logprob: -10.75541877746582
    5. '*c' → logprob: -12.75541877746582
    6. '  ' → logprob: -14.38041877746582
    7. '	c' → logprob: -15.00541877746582
    8. 'с' → logprob: -15.13041877746582
    9. '```' → logprob: -15.25541877746582
    10. '1' → logprob: -15.50541877746582

Token 73: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07014671713113785
    2. '
' → logprob: -3.3201467990875244
    3. '    
' → logprob: -4.320146560668945
    4. '<|end|>' → logprob: -4.695146560668945
    5. '\n' → logprob: -5.570146560668945
    6. '  
' → logprob: -6.695146560668945
    7. '```' → logprob: -6.695146560668945
    8. '   
' → logprob: -6.820146560668945
    9. '  ' → logprob: -7.320146560668945
    10. ' 
' → logprob: -7.695146560668945

Token 74: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18093828856945038
    2. '
' → logprob: -2.305938243865967
    3. '    
' → logprob: -3.555938243865967
    4. '\n' → logprob: -4.680938243865967
    5. '   
' → logprob: -4.930938243865967
    6. '<|end|>' → logprob: -5.055938243865967
    7. '```' → logprob: -5.180938243865967
    8. '  
' → logprob: -6.180938243865967
    9. '  ' → logprob: -6.305938243865967
    10. ' 
' → logprob: -6.430938243865967

Token 75: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09721548855304718
    2. '
' → logprob: -3.097215414047241
    3. 'if' → logprob: -4.34721565246582
    4. '    
' → logprob: -4.59721565246582
    5. ' ' → logprob: -5.34721565246582
    6. ' if' → logprob: -5.47221565246582
    7. '   
' → logprob: -5.59721565246582
    8. ' 
' → logprob: -5.84721565246582
    9. '\n' → logprob: -6.09721565246582
    10. '```' → logprob: -6.59721565246582

Token 76: ' For' (ID: 2214)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.23923030495643616
    2. 'if' → logprob: -2.1142303943634033
    3. '   ' → logprob: -2.7392303943634033
    4. ' ' → logprob: -4.239230155944824
    5. ' i' → logprob: -4.614230155944824
    6. 'i' → logprob: -6.614230155944824
    7. '    ' → logprob: -6.989230155944824
    8. '  ' → logprob: -7.739230155944824
    9. '```' → logprob: -9.614230155944824
    10. ' 
' → logprob: -10.114230155944824

Token 77: ' a' (ID: 261)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.6897931098937988
    2. ' rectangles' → logprob: -2.064793109893799
    3. ' a' → logprob: -2.689793109893799
    4. ' equ' → logprob: -2.814793109893799
    5. ' triangles' → logprob: -3.189793109893799
    6. ' ' → logprob: -3.314793109893799
    7. ' the' → logprob: -3.439793109893799
    8. ' if' → logprob: -3.564793109893799
    9. ' rectangle' → logprob: -3.814793109893799
    10. ' triangle' → logprob: -4.189793109893799

Token 78: ' paralle' (ID: 107294)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.48791247606277466
    2. ' triangle' → logprob: -1.8629124164581299
    3. ' right' → logprob: -2.36291241645813
    4. 'n' → logprob: -2.98791241645813
    5. ',' → logprob: -4.237912654876709
    6. '   ' → logprob: -4.362912654876709
    7. '  ' → logprob: -4.487912654876709
    8. ' =' → logprob: -5.237912654876709
    9. ' rectangle' → logprob: -5.237912654876709
    10. ':' → logprob: -5.362912654876709

Token 79: 'log' (ID: 2133)
  Prédit: 'log'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'log' → logprob: -0.0007992653991095722
    2. 'le' → logprob: -7.375799179077148
    3. 'l' → logprob: -9.125799179077148
    4. 'ogram' → logprob: -10.375799179077148
    5. ' log' → logprob: -11.500799179077148
    6. '```' → logprob: -11.500799179077148
    7. 'lep' → logprob: -13.000799179077148
    8. 'el' → logprob: -13.250799179077148
    9. 'gram' → logprob: -13.500799179077148
    10. '_log' → logprob: -13.875799179077148

Token 80: 'ram' (ID: 4829)
  Prédit: 'ram'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ram' → logprob: -0.012764028273522854
    2. 'r' → logprob: -4.512763977050781
    3. '   ' → logprob: -8.137763977050781
    4. 'am' → logprob: -8.262763977050781
    5. '     ' → logprob: -9.012763977050781
    6. '       ' → logprob: -9.012763977050781
    7. 'raph' → logprob: -9.387763977050781
    8. 'ra' → logprob: -9.450263977050781
    9. '```' → logprob: -9.575263977050781
    10. ' ram' → logprob: -9.575263977050781

Token 81: ' with' (ID: 483)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: ' sides' (ID: 18089)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.5952867865562439
    2. ' sides' → logprob: -1.4702868461608887
    3. ' right' → logprob: -2.9702868461608887
    4. ' ' → logprob: -3.4702868461608887
    5. 'all' → logprob: -3.4702868461608887
    6. ' a' → logprob: -3.7202868461608887
    7. ' angles' → logprob: -4.095286846160889
    8. ' the' → logprob: -4.595286846160889
    9. 'a' → logprob: -4.720286846160889
    10. ' rectangular' → logprob: -5.220286846160889

Token 83: ' a' (ID: 261)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3276713490486145
    2. ' a' → logprob: -2.4526712894439697
    3. ' ,' → logprob: -2.8276712894439697
    4. ',' → logprob: -2.9526712894439697
    5. 'a' → logprob: -3.2026712894439697
    6. 'and' → logprob: -3.4526712894439697
    7. ' ' → logprob: -5.827671527862549
    8. ' of' → logprob: -6.077671527862549
    9. ' to' → logprob: -7.077671527862549
    10. ' that' → logprob: -7.827671527862549

Token 84: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5432294011116028
    2. ',' → logprob: -0.9182294011116028
    3. ' ,' → logprob: -4.293229579925537
    4. '   ' → logprob: -6.168229579925537
    5. 'and' → logprob: -6.293229579925537
    6. ' ' → logprob: -6.918229579925537
    7. ':' → logprob: -7.793229579925537
    8. ',
' → logprob: -8.543229103088379
    9. '<|end|>' → logprob: -8.543229103088379
    10. '  ' → logprob: -9.043229103088379

Token 85: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2021155208349228
    2. ' b' → logprob: -1.702115535736084
    3. 'c' → logprob: -8.077115058898926
    4. ' ' → logprob: -8.577115058898926
    5. ' c' → logprob: -8.702115058898926
    6. ' and' → logprob: -11.577115058898926
    7. 'a' → logprob: -11.702115058898926
    8. ',' → logprob: -12.202115058898926
    9. ' a' → logprob: -12.702115058898926
    10. 'and' → logprob: -13.202115058898926

Token 86: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09978578984737396
    2. ' and' → logprob: -2.474785804748535
    3. ' ,' → logprob: -5.224785804748535
    4. ':' → logprob: -5.974785804748535
    5. ',
' → logprob: -6.849785804748535
    6. ' ' → logprob: -7.099785804748535
    7. 'and' → logprob: -7.599785804748535
    8. '   ' → logprob: -8.849785804748535
    9. ',

' → logprob: -10.224785804748535
    10. ' :' → logprob: -10.349785804748535

Token 87: ' diagonal' (ID: 71638)
  Prédit: ' angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' angle' → logprob: -0.7563804388046265
    2. 'c' → logprob: -1.0063804388046265
    3. ' c' → logprob: -3.006380558013916
    4. ' diagonal' → logprob: -3.131380558013916
    5. 'angle' → logprob: -3.256380558013916
    6. ' an' → logprob: -4.256380558013916
    7. 'd' → logprob: -5.381380558013916
    8. 'di' → logprob: -5.756380558013916
    9. ' angles' → logprob: -6.006380558013916
    10. ' ' → logprob: -6.256380558013916

Token 88: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.13718201220035553
    2. 'c' → logprob: -2.6371819972991943
    3. 's' → logprob: -3.2621819972991943
    4. ',' → logprob: -4.887182235717773
    5. '2' → logprob: -5.887182235717773
    6. ' ' → logprob: -6.012182235717773
    7. ' s' → logprob: -6.762182235717773
    8. ' d' → logprob: -7.262182235717773
    9. '=' → logprob: -7.387182235717773
    10. 'd' → logprob: -8.324682235717773

Token 89: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18131345510482788
    2. '   ' → logprob: -2.4313135147094727
    3. ',' → logprob: -3.1813135147094727
    4. '
' → logprob: -4.306313514709473
    5. '\n' → logprob: -4.806313514709473
    6. '    
' → logprob: -5.931313514709473
    7. ':
' → logprob: -6.056313514709473
    8. '<|end|>' → logprob: -6.556313514709473
    9. ' :' → logprob: -6.681313514709473
    10. '\' → logprob: -7.056313514709473

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019279109314084053
    2. '    
' → logprob: -4.7692790031433105
    3. '
' → logprob: -5.0192790031433105
    4. ' 
' → logprob: -6.5192790031433105
    5. '   
' → logprob: -7.5192790031433105
    6. ' if' → logprob: -7.7692790031433105
    7. '  
' → logprob: -7.8942790031433105
    8. '    ' → logprob: -8.144279479980469
    9. '```' → logprob: -8.519279479980469
    10. '     
' → logprob: -8.769279479980469

Token 91: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7587842345237732
    2. '   ' → logprob: -0.8837842345237732
    3. 'if' → logprob: -2.133784294128418
    4. '    ' → logprob: -10.008784294128418
    5. ' ' → logprob: -10.633784294128418
    6. '    
' → logprob: -10.633784294128418
    7. 'If' → logprob: -10.633784294128418
    8. '```' → logprob: -11.508784294128418
    9. '  ' → logprob: -12.008784294128418
    10. ' i' → logprob: -12.383784294128418

Token 92: ' c' (ID: 274)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.28535088896751404
    2. 'if' → logprob: -1.4103509187698364
    3. '   ' → logprob: -6.410350799560547
    4. 'If' → logprob: -6.660350799560547
    5. ' #' → logprob: -7.785350799560547
    6. ' If' → logprob: -7.910350799560547
    7. '#' → logprob: -8.660350799560547
    8. ' i' → logprob: -9.535350799560547
    9. ' is' → logprob: -9.660350799560547
    10. '```' → logprob: -10.660350799560547

Token 93: '^' (ID: 61)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0013096443144604564
    2. '**' → logprob: -7.126309871673584
    3. ' ' → logprob: -8.251309394836426
    4. '²' → logprob: -8.876309394836426
    5. '*' → logprob: -10.126309394836426
    6. '==' → logprob: -10.501309394836426
    7. '^' → logprob: -11.751309394836426
    8. ' ==' → logprob: -12.001309394836426
    9. 's' → logprob: -12.501309394836426
    10. '=' → logprob: -12.626309394836426

Token 94: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.886803359724581e-05
    2. ' ' → logprob: -9.500079154968262
    3. '=' → logprob: -13.375079154968262
    4. '   ' → logprob: -14.375079154968262
    5. '
' → logprob: -14.875079154968262
    6. '²' → logprob: -14.875079154968262
    7. '  ' → logprob: -15.500079154968262
    8. '

' → logprob: -15.875079154968262
    9. '​' → logprob: -16.125078201293945
    10. '
' → logprob: -16.500078201293945

Token 95: ' =' (ID: 314)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.09319909662008286
    2. ' =' → logprob: -2.5931990146636963
    3. '=' → logprob: -4.843199253082275
    4. '==' → logprob: -5.093199253082275
    5. ' <=' → logprob: -9.843198776245117
    6. ' ' → logprob: -10.093198776245117
    7. ' ===' → logprob: -10.468198776245117
    8. ' !=' → logprob: -11.593198776245117
    9. ' >=' → logprob: -11.718198776245117
    10. ' >' → logprob: -12.218198776245117

Token 96: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06267286837100983
    2. ' a' → logprob: -2.8126728534698486
    3. ' ' → logprob: -7.687673091888428
    4. '2' → logprob: -8.68767261505127
    5. ' (' → logprob: -10.56267261505127
    6. '(' → logprob: -10.68767261505127
    7. '(a' → logprob: -11.06267261505127
    8. '4' → logprob: -12.06267261505127
    9. '	a' → logprob: -12.43767261505127
    10. 'b' → logprob: -14.06267261505127

Token 97: '^' (ID: 61)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003075871616601944
    2. '²' → logprob: -6.128076076507568
    3. ' ' → logprob: -7.628076076507568
    4. '`' → logprob: -9.37807559967041
    5. '```' → logprob: -9.50307559967041
    6. '*' → logprob: -9.75307559967041
    7. '**' → logprob: -9.87807559967041
    8. 's' → logprob: -10.12807559967041
    9. '+' → logprob: -11.00307559967041
    10. '1' → logprob: -11.12807559967041

Token 98: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -13.000003814697266
    3. '
' → logprob: -14.875003814697266
    4. '۲' → logprob: -15.375003814697266
    5. '²' → logprob: -15.750003814697266
    6. '+' → logprob: -15.875003814697266
    7. '<|end|>' → logprob: -16.375003814697266
    8. '202' → logprob: -16.625003814697266
    9. '

' → logprob: -16.750003814697266
    10. '```' → logprob: -17.250003814697266

Token 99: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1429537683725357
    2. '+' → logprob: -2.017953872680664
    3. ' ' → logprob: -8.267953872680664
    4. '	' → logprob: -11.892953872680664
    5. ' +
' → logprob: -12.017953872680664
    6. ' plus' → logprob: -13.517953872680664
    7. '＋' → logprob: -13.642953872680664
    8. '2' → logprob: -13.767953872680664
    9. ' +
' → logprob: -14.392953872680664
    10. 'space' → logprob: -14.517953872680664

Token 100: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.38695377111434937
    2. ' b' → logprob: -1.1369538307189941
    3. ' ' → logprob: -9.761953353881836
    4. '2' → logprob: -11.386953353881836
    5. '	b' → logprob: -11.636953353881836
    6. '<|end|>' → logprob: -13.386953353881836
    7. '  ' → logprob: -13.886953353881836
    8. '   ' → logprob: -14.636953353881836
    9. '  
' → logprob: -15.386953353881836
    10. ' б' → logprob: -15.386953353881836

Token 101: '^' (ID: 61)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0026456944178789854
    2. '²' → logprob: -6.502645492553711
    3. '^' → logprob: -7.127645492553711
    4. ' ' → logprob: -8.377645492553711
    5. '<|end|>' → logprob: -9.877645492553711
    6. '**' → logprob: -10.877645492553711
    7. '```' → logprob: -10.877645492553711
    8. '`' → logprob: -11.752645492553711
    9. '
' → logprob: -12.377645492553711
    10. '*' → logprob: -12.627645492553711

Token 102: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.250004768371582
    3. '²' → logprob: -16.0000057220459
    4. '<|end|>' → logprob: -17.3750057220459
    5. '```' → logprob: -17.5000057220459
    6. '۲' → logprob: -17.6250057220459
    7. '**' → logprob: -18.3750057220459
    8. '२' → logprob: -19.5000057220459
    9. '`' → logprob: -19.6250057220459
    10. '-' → logprob: -19.7500057220459

Token 103: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0045983996242284775
    2. ' if' → logprob: -6.129598617553711
    3. '
' → logprob: -6.879598617553711
    4. '    
' → logprob: -7.129598617553711
    5. ' and' → logprob: -8.754598617553711
    6. '       ' → logprob: -9.754598617553711
    7. '<|end|>' → logprob: -9.754598617553711
    8. '\n' → logprob: -9.879598617553711
    9. ',' → logprob: -10.129598617553711
    10. ' or' → logprob: -10.379598617553711

Token 104: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.016159649938344955
    2. ' ' → logprob: -4.141159534454346
    3. '(' → logprob: -9.766160011291504
    4. ' ' → logprob: -10.516160011291504
    5. '   ' → logprob: -11.016160011291504
    6. '  ' → logprob: -11.766160011291504
    7. ' (' → logprob: -12.141160011291504
    8. '	' → logprob: -12.891160011291504
    9. '```' → logprob: -13.828660011291504
    10. '`' → logprob: -14.266160011291504

Token 105: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011392387561500072
    2. ' ' → logprob: -4.511392593383789
    3. '(' → logprob: -8.136392593383789
    4. ' (' → logprob: -11.386392593383789
    5. '   ' → logprob: -11.386392593383789
    6. ' ' → logprob: -11.761392593383789
    7. '  ' → logprob: -11.886392593383789
    8. '	' → logprob: -13.198892593383789
    9. '`' → logprob: -13.573892593383789
    10. '"' → logprob: -13.823892593383789

Token 106: 'ab' (ID: 378)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.009990275837481022
    2. '*' → logprob: -4.634990215301514
    3. '*a' → logprob: -8.509990692138672
    4. ' ' → logprob: -11.884990692138672
    5. ' ' → logprob: -11.884990692138672
    6. '   ' → logprob: -12.134990692138672
    7. '**' → logprob: -12.384990692138672
    8. '```' → logprob: -13.134990692138672
    9. 'a' → logprob: -13.759990692138672
    10. ' a' → logprob: -13.884990692138672

Token 107: '*cos' (ID: 147136)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.029862144961953163
    2. '*' → logprob: -3.52986216545105
    3. '*cos' → logprob: -9.779862403869629
    4. '   ' → logprob: -11.029862403869629
    5. ' ' → logprob: -11.029862403869629
    6. '    ' → logprob: -11.529862403869629
    7. ' ' → logprob: -12.029862403869629
    8. '  ' → logprob: -13.654862403869629
    9. '	' → logprob: -13.904862403869629
    10. '**' → logprob: -14.154862403869629

Token 108: '(theta' (ID: 69139)
  Prédit: '(theta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(theta' → logprob: -0.663517951965332
    2. '(' → logprob: -0.788517951965332
    3. 'θ' → logprob: -4.038517951965332
    4. 'theta' → logprob: -5.038517951965332
    5. '(angle' → logprob: -5.288517951965332
    6. '(C' → logprob: -8.538517951965332
    7. '\' → logprob: -8.663517951965332
    8. '(
' → logprob: -8.663517951965332
    9. '(\' → logprob: -8.663517951965332
    10. '_theta' → logprob: -8.788517951965332

Token 109: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013286342844367027
    2. ' )' → logprob: -4.763286113739014
    3. ' *' → logprob: -6.013286113739014
    4. '*' → logprob: -6.388286113739014
    5. '   ' → logprob: -9.263286590576172
    6. ')
' → logprob: -9.263286590576172
    7. ')*' → logprob: -9.388286590576172
    8. '*cos' → logprob: -9.513286590576172
    9. 'theta' → logprob: -9.888286590576172
    10. '),' → logprob: -10.513286590576172

Token 110: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11003845930099487
    2. '    
' → logprob: -3.2350385189056396
    3. ' ' → logprob: -3.3600385189056396
    4. '     
' → logprob: -4.6100382804870605
    5. '    ' → logprob: -4.7350382804870605
    6. ' 
' → logprob: -5.1100382804870605
    7. '   
' → logprob: -6.6100382804870605
    8. '  
' → logprob: -7.2350382804870605
    9. ',' → logprob: -7.6100382804870605
    10. '<|end|>' → logprob: -7.7350382804870605

Token 111: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13861966133117676
    2. ' ' → logprob: -2.5136196613311768
    3. ' 
' → logprob: -3.7636196613311768
    4. '    ' → logprob: -4.888619422912598
    5. ' if' → logprob: -5.263619422912598
    6. '    
' → logprob: -5.513619422912598
    7. '     
' → logprob: -5.888619422912598
    8. '  
' → logprob: -7.013619422912598
    9. ' ,' → logprob: -7.013619422912598
    10. ',' → logprob: -7.013619422912598

Token 112: ' Rectangle' (ID: 38728)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8338426947593689
    2. ' cos' → logprob: -1.3338427543640137
    3. 'cos' → logprob: -1.8338427543640137
    4. '   ' → logprob: -2.7088427543640137
    5. 'if' → logprob: -3.4588427543640137
    6. ' theta' → logprob: -3.8338427543640137
    7. 'theta' → logprob: -4.458842754364014
    8. ' cosine' → logprob: -5.833842754364014
    9. ' from' → logprob: -6.458842754364014
    10. ' angle' → logprob: -6.708842754364014

Token 113: ' =>' (ID: 871)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21992923319339752
    2. ' if' → logprob: -2.4699292182922363
    3. ':' → logprob: -2.8449292182922363
    4. ' =' → logprob: -4.094929218292236
    5. 'if' → logprob: -4.844929218292236
    6. '<|end|>' → logprob: -5.219929218292236
    7. ',' → logprob: -5.344929218292236
    8. ' ' → logprob: -5.469929218292236
    9. ' and' → logprob: -5.844929218292236
    10. 's' → logprob: -6.094929218292236

Token 114: ' theta' (ID: 43101)
  Prédit: ' cos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cos' → logprob: -1.072229027748108
    2. ' c' → logprob: -1.322229027748108
    3. 'cos' → logprob: -1.947229027748108
    4. ' ' → logprob: -2.1972289085388184
    5. 'c' → logprob: -3.1972289085388184
    6. ' abs' → logprob: -3.8222289085388184
    7. '   ' → logprob: -3.8222289085388184
    8. '2' → logprob: -3.8222289085388184
    9. ' a' → logprob: -5.072228908538818
    10. 'abs' → logprob: -5.322228908538818

Token 115: ' =' (ID: 314)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.050451021641492844
    2. '==' → logprob: -3.0504510402679443
    3. ' =' → logprob: -6.675450801849365
    4. '=' → logprob: -7.550450801849365
    5. ' ' → logprob: -9.800451278686523
    6. '===' → logprob: -11.925451278686523
    7. ' ===' → logprob: -12.550451278686523
    8. ')' → logprob: -13.550451278686523
    9. ' is' → logprob: -13.675451278686523
    10. ' ' → logprob: -13.675451278686523

Token 116: ' ' (ID: 220)
  Prédit: '90'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '90' → logprob: -0.5231305956840515
    2. ' ' → logprob: -0.8981305956840515
    3. '9' → logprob: -13.023130416870117
    4. '   ' → logprob: -13.773130416870117
    5. ' ' → logprob: -13.898130416870117
    6. ' ninety' → logprob: -14.148130416870117
    7. '  ' → logprob: -14.398130416870117
    8. '	' → logprob: -14.523130416870117
    9. '1' → logprob: -15.023130416870117
    10. '0' → logprob: -15.398130416870117

Token 117: '90' (ID: 2744)
  Prédit: '90'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '90' → logprob: -0.0031828247010707855
    2. ' ' → logprob: -5.753182888031006
    3. '9' → logprob: -12.503182411193848
    4. '1' → logprob: -15.003182411193848
    5. '   ' → logprob: -15.503182411193848
    6. ' ninety' → logprob: -15.628182411193848
    7. 'pi' → logprob: -16.128183364868164
    8. '0' → logprob: -16.253183364868164
    9. '```' → logprob: -16.378183364868164
    10. '	' → logprob: -16.628183364868164

Token 118: '°' (ID: 6793)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 119: ' =>' (ID: 871)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10133092105388641
    2. ':' → logprob: -2.8513309955596924
    3. '
' → logprob: -4.476330757141113
    4. '    
' → logprob: -4.726330757141113
    5. ' ' → logprob: -5.101330757141113
    6. ',' → logprob: -5.976330757141113
    7. '    ' → logprob: -5.976330757141113
    8. '       ' → logprob: -6.476330757141113
    9. ' 
' → logprob: -6.851330757141113
    10. '  
' → logprob: -7.226330757141113

Token 120: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07976049184799194
    2. ' c' → logprob: -2.7047605514526367
    3. '   ' → logprob: -4.829760551452637
    4. ' ' → logprob: -7.204760551452637
    5. '2' → logprob: -8.079760551452637
    6. 'if' → logprob: -8.204760551452637
    7. '	c' → logprob: -9.204760551452637
    8. ' if' → logprob: -9.454760551452637
    9. '
' → logprob: -9.579760551452637
    10. '0' → logprob: -9.954760551452637

Token 121: '^' (ID: 61)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02712194249033928
    2. '²' → logprob: -3.9021220207214355
    3. '^' → logprob: -5.2771220207214355
    4. '**' → logprob: -6.6521220207214355
    5. '_squared' → logprob: -10.277121543884277
    6. 's' → logprob: -10.527121543884277
    7. '*' → logprob: -10.527121543884277
    8. ' ' → logprob: -10.527121543884277
    9. '₂' → logprob: -11.777121543884277
    10. '=' → logprob: -11.902121543884277

Token 122: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00017708084487821907
    2. ' ' → logprob: -8.750177383422852
    3. '²' → logprob: -11.625177383422852
    4. '=' → logprob: -12.375177383422852
    5. '`' → logprob: -14.000177383422852
    6. '22' → logprob: -14.375177383422852
    7. ''' → logprob: -14.625177383422852
    8. '"' → logprob: -14.625177383422852
    9. '32' → logprob: -14.750177383422852
    10. '```' → logprob: -14.875177383422852

Token 123: ' =' (ID: 314)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10551537573337555
    2. '==' → logprob: -2.355515480041504
    3. ' =' → logprob: -5.980515480041504
    4. '=' → logprob: -5.980515480041504
    5. ' ' → logprob: -9.105515480041504
    6. '<|end|>' → logprob: -9.605515480041504
    7. '===' → logprob: -10.855515480041504
    8. ' ===' → logprob: -11.355515480041504
    9. ')' → logprob: -11.855515480041504
    10. '==
' → logprob: -12.855515480041504

Token 124: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0046540494076907635
    2. ' a' → logprob: -5.3796539306640625
    3. ' ' → logprob: -10.379653930664062
    4. '(a' → logprob: -14.004653930664062
    5. '	a' → logprob: -14.254653930664062
    6. ' (' → logprob: -15.504653930664062
    7. '_a' → logprob: -15.629653930664062
    8. 'b' → logprob: -15.879653930664062
    9. '   ' → logprob: -15.879653930664062
    10. ''a' → logprob: -15.879653930664062

Token 125: '^' (ID: 61)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00010235115041723475
    2. '²' → logprob: -9.750102043151855
    3. '^' → logprob: -10.375102043151855
    4. ' ' → logprob: -11.875102043151855
    5. 's' → logprob: -13.500102043151855
    6. '```' → logprob: -13.625102043151855
    7. '`' → logprob: -14.000102043151855
    8. '**' → logprob: -14.500102043151855
    9. '_squared' → logprob: -15.000102043151855
    10. '_' → logprob: -15.125102043151855

Token 126: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00021331508469302207
    2. ' ' → logprob: -8.500213623046875
    3. '²' → logprob: -12.000213623046875
    4. '^' → logprob: -13.500213623046875
    5. '۲' → logprob: -14.500213623046875
    6. '**' → logprob: -14.625213623046875
    7. '```' → logprob: -14.875213623046875
    8. '`' → logprob: -15.375213623046875
    9. '+' → logprob: -15.625213623046875
    10. '*' → logprob: -16.000213623046875

Token 127: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.05511843040585518
    2. '+' → logprob: -2.9301183223724365
    3. ' ' → logprob: -8.555118560791016
    4. ' ' → logprob: -11.055118560791016
    5. ' plus' → logprob: -11.555118560791016
    6. ' +
' → logprob: -12.680118560791016
    7. ' *' → logprob: -13.555118560791016
    8. '	' → logprob: -13.555118560791016
    9. '2' → logprob: -13.680118560791016
    10. '[' → logprob: -13.930118560791016

Token 128: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2812342345714569
    2. ' b' → logprob: -1.4062342643737793
    3. ' ' → logprob: -9.781233787536621
    4. '<|end|>' → logprob: -10.656233787536621
    5. '	b' → logprob: -13.031233787536621
    6. '```' → logprob: -15.031233787536621
    7. ' ' → logprob: -15.281233787536621
    8. ' б' → logprob: -15.531233787536621
    9. ' 
' → logprob: -16.031234741210938
    10. ')b' → logprob: -16.156234741210938

Token 129: '^' (ID: 61)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004428931977599859
    2. '*' → logprob: -6.379428863525391
    3. '^' → logprob: -6.379428863525391
    4. '²' → logprob: -7.129428863525391
    5. '**' → logprob: -8.62942886352539
    6. '<|end|>' → logprob: -10.87942886352539
    7. '+' → logprob: -11.62942886352539
    8. ' ' → logprob: -11.75442886352539
    9. '```' → logprob: -12.25442886352539
    10. ')' → logprob: -13.75442886352539

Token 130: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.451116051815916e-05
    2. '<|end|>' → logprob: -10.875024795532227
    3. ' ' → logprob: -13.000024795532227
    4. '²' → logprob: -13.250024795532227
    5. '**' → logprob: -14.500024795532227
    6. '^' → logprob: -15.000024795532227
    7. '*' → logprob: -15.375024795532227
    8. '```' → logprob: -15.875024795532227
    9. '<|end|>' → logprob: -16.750024795532227
    10. '+' → logprob: -17.125024795532227

Token 131: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018946025520563126
    2. '    
' → logprob: -6.626894474029541
    3. ' if' → logprob: -8.3768949508667
    4. 'if' → logprob: -9.2518949508667
    5. ',' → logprob: -10.0018949508667
    6. '<|end|>' → logprob: -10.1268949508667
    7. '    ' → logprob: -10.3768949508667
    8. '
' → logprob: -10.6268949508667
    9. '   
' → logprob: -10.8768949508667
    10. '       ' → logprob: -11.0018949508667

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002572686644271016
    2. 'if' → logprob: -6.752572536468506
    3. ' if' → logprob: -7.252572536468506
    4. '
' → logprob: -8.127573013305664
    5. '    
' → logprob: -8.502573013305664
    6. ',' → logprob: -10.127573013305664
    7. 'elif' → logprob: -10.127573013305664
    8. '<|end|>' → logprob: -10.502573013305664
    9. ' elif' → logprob: -11.377573013305664
    10. '```' → logprob: -11.502573013305664

Token 133: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09020038694143295
    2. 'if' (adapté à ' if') → logprob: -3.090200424194336
    3. ' if' → logprob: -3.215200424194336
    4. '
' → logprob: -8.840200424194336
    5. 'elif' → logprob: -8.840200424194336
    6. '    
' → logprob: -9.090200424194336
    7. ' elif' → logprob: -9.090200424194336
    8. '```' → logprob: -10.340200424194336
    9. '    ' → logprob: -10.840200424194336
    10. ',' → logprob: -11.840200424194336

Token 134: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.41014474630355835
    2. ' a' → logprob: -1.1601448059082031
    3. 'c' → logprob: -4.410144805908203
    4. 'a' → logprob: -4.535144805908203
    5. ' ' → logprob: -9.285144805908203
    6. '   ' → logprob: -11.285144805908203
    7. ' (' → logprob: -11.785144805908203
    8. '(a' → logprob: -12.410144805908203
    9. '    ' → logprob: -12.660144805908203
    10. ' abs' → logprob: -13.535144805908203

Token 135: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04387030750513077
    2. '**' → logprob: -3.293870210647583
    3. '_' → logprob: -5.793870449066162
    4. '²' → logprob: -6.793870449066162
    5. ' ' → logprob: -7.418870449066162
    6. '^' → logprob: -7.543870449066162
    7. '==' → logprob: -8.668869972229004
    8. '*' → logprob: -9.293869972229004
    9. '```' → logprob: -9.543869972229004
    10. ' ==' → logprob: -10.293869972229004

Token 136: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.023287750780582428
    2. '==' → logprob: -3.773287773132324
    3. '=' → logprob: -10.523287773132324
    4. ' =' → logprob: -11.523287773132324
    5. ' ' → logprob: -12.773287773132324
    6. ' ' → logprob: -13.648287773132324
    7. ' >=' → logprob: -15.148287773132324
    8. ')' → logprob: -15.523287773132324
    9. ' ===' → logprob: -15.648287773132324
    10. '>' → logprob: -16.148286819458008

Token 137: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.47410112619400024
    2. ' a' → logprob: -0.9741011261940002
    3. ' ' → logprob: -11.224101066589355
    4. ' (' → logprob: -12.224101066589355
    5. '	a' → logprob: -13.099101066589355
    6. '(a' → logprob: -13.349101066589355
    7. '(' → logprob: -14.224101066589355
    8. '   ' → logprob: -14.849101066589355
    9. '  ' → logprob: -14.974101066589355
    10. ' ' → logprob: -15.474101066589355

Token 138: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.463036435074173e-05
    2. ' ' → logprob: -10.875024795532227
    3. '²' → logprob: -12.375024795532227
    4. '```' → logprob: -14.250024795532227
    5. '**' → logprob: -15.125024795532227
    6. '+' → logprob: -16.125024795532227
    7. '`' → logprob: -16.250024795532227
    8. '^' → logprob: -16.375024795532227
    9. '   ' → logprob: -16.625024795532227
    10. '*' → logprob: -16.875024795532227

Token 139: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.006725079845637083
    2. '+' → logprob: -5.006725311279297
    3. ' ' → logprob: -11.881725311279297
    4. ' ' → logprob: -13.756725311279297
    5. ' plus' → logprob: -14.381725311279297
    6. ' +
' → logprob: -15.131725311279297
    7. '+b' → logprob: -15.131725311279297
    8. '	' → logprob: -16.131725311279297
    9. '  ' → logprob: -16.256725311279297
    10. '[' → logprob: -16.756725311279297

Token 140: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04858794063329697
    2. ' b' → logprob: -3.0485880374908447
    3. ' ' → logprob: -15.298587799072266
    4. '	b' → logprob: -15.548587799072266
    5. '   ' → logprob: -17.673587799072266
    6. ' б' → logprob: -18.423587799072266
    7. ')b' → logprob: -18.548587799072266
    8. '  ' → logprob: -19.173587799072266
    9. '    ' → logprob: -19.298587799072266
    10. '(b' → logprob: -19.548587799072266

Token 141: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1398757123970427e-05
    2. ' ' → logprob: -11.625011444091797
    3. '²' → logprob: -13.875011444091797
    4. '^' → logprob: -14.875011444091797
    5. '**' → logprob: -14.875011444091797
    6. '<|end|>' → logprob: -15.000011444091797
    7. '*' → logprob: -15.375011444091797
    8. '```' → logprob: -16.000011444091797
    9. '۲' → logprob: -17.375011444091797
    10. '  ' → logprob: -17.500011444091797

Token 142: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12746797502040863
    2. ':
' → logprob: -2.1274678707122803
    3. '   ' → logprob: -8.50246810913086
    4. ' :' → logprob: -8.75246810913086
    5. ' :
' → logprob: -9.50246810913086
    6. ':
' → logprob: -9.87746810913086
    7. ' or' → logprob: -10.62746810913086
    8. ' and' → logprob: -11.00246810913086
    9. '       ' → logprob: -12.50246810913086
    10. '):
' → logprob: -13.50246810913086

Token 143: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03818849101662636
    2. ':
' → logprob: -3.7881884574890137
    3. ':' → logprob: -4.413188457489014
    4. '   ' → logprob: -6.663188457489014
    5. '
' → logprob: -6.788188457489014
    6. '        
' → logprob: -10.163188934326172
    7. '):
' → logprob: -10.538188934326172
    8. ' rectangles' → logprob: -10.538188934326172
    9. '    
' → logprob: -10.663188934326172
    10. '+' → logprob: -10.663188934326172

Token 144: ' rectangles' (ID: 164265)
  Prédit: ' rectangles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rectangles' → logprob: -0.7491213083267212
    2. '       ' → logprob: -0.8741213083267212
    3. 'rect' → logprob: -2.2491211891174316
    4. ' rect' → logprob: -6.249121189117432
    5. '   ' → logprob: -6.624121189117432
    6. '           ' → logprob: -7.374121189117432
    7. '	rect' → logprob: -8.24912166595459
    8. '(rect' → logprob: -9.99912166595459
    9. '        
' → logprob: -10.37412166595459
    10. ' rectangular' → logprob: -10.43662166595459

Token 145: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0010474584996700287
    2. '+=' → logprob: -6.876047611236572
    3. '+' → logprob: -11.501047134399414
    4. ' +' → logprob: -12.626047134399414
    5. ' =' → logprob: -14.376047134399414
    6. ' ' → logprob: -14.876047134399414
    7. '   ' → logprob: -17.001047134399414
    8. '=' → logprob: -17.126047134399414
    9. '    ' → logprob: -17.251047134399414
    10. ']+=' → logprob: -17.626047134399414

Token 146: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023059594968799502
    2. ' ' → logprob: -8.37523078918457
    3. '   ' → logprob: -20.00023078918457
    4. '```' → logprob: -20.37523078918457
    5. ' ' → logprob: -21.50023078918457
    6. '１' → logprob: -21.50023078918457
    7. '
' → logprob: -21.62523078918457
    8. '  ' → logprob: -22.00023078918457
    9. '+' → logprob: -22.75023078918457
    10. '۱' → logprob: -22.81273078918457

Token 147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '```' → logprob: -20.375
    4. '   ' → logprob: -20.75
    5. '１' → logprob: -21.875
    6. '۱' → logprob: -22.625
    7. '
' → logprob: -23.0625
    8. '  ' → logprob: -23.25
    9. '१' → logprob: -23.4375
    10. 'a' → logprob: -23.5625

Token 148: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.787061333656311
    2. 'elif' → logprob: -0.912061333656311
    3. '
' → logprob: -2.4120612144470215
    4. '<|end|>' → logprob: -3.9120612144470215
    5. '    
' → logprob: -4.0370612144470215
    6. ' elif' → logprob: -4.5370612144470215
    7. '\n' → logprob: -6.4120612144470215
    8. 'else' → logprob: -7.1620612144470215
    9. ' 
' → logprob: -7.4120612144470215
    10. '  
' → logprob: -7.5370612144470215

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04077959433197975
    2. 'elif' → logprob: -3.4157795906066895
    3. ' elif' → logprob: -5.9157795906066895
    4. '    
' → logprob: -6.5407795906066895
    5. '<|end|>' → logprob: -6.6657795906066895
    6. 'else' → logprob: -7.7907795906066895
    7. '
' → logprob: -7.9157795906066895
    8. ' else' → logprob: -7.9157795906066895
    9. '\n' → logprob: -8.665780067443848
    10. ' ' → logprob: -9.415780067443848

Token 150: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3548433780670166
    2. 'elif' → logprob: -1.2298433780670166
    3. ' elif' → logprob: -5.6048431396484375
    4. 'else' → logprob: -5.9798431396484375
    5. ' else' → logprob: -8.854843139648438
    6. '	elif' → logprob: -11.854843139648438
    7. ' ' → logprob: -11.979843139648438
    8. '<|end|>' → logprob: -12.604843139648438
    9. '  ' → logprob: -12.979843139648438
    10. '    ' → logprob: -13.479843139648438

Token 151: ' Rh' (ID: 22846)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.04671890661120415
    2. ' elif' → logprob: -3.4217188358306885
    3. 'if' → logprob: -5.171719074249268
    4. 'else' → logprob: -5.546719074249268
    5. 'import' → logprob: -6.671719074249268
    6. '#' → logprob: -7.171719074249268
    7. ' if' → logprob: -8.17171859741211
    8. ' else' → logprob: -8.29671859741211
    9. ' rh' → logprob: -8.54671859741211
    10. 'rh' → logprob: -8.79671859741211

Token 152: 'omb' (ID: 2722)
  Prédit: 'omb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omb' → logprob: -0.00404266407713294
    2. '   ' → logprob: -5.879042625427246
    3. 'om' → logprob: -7.629042625427246
    4. 'h' → logprob: -8.004042625427246
    5. 'ombo' → logprob: -9.004042625427246
    6. 'ombs' → logprob: -9.254042625427246
    7. 'ob' → logprob: -9.754042625427246
    8. '       ' → logprob: -10.004042625427246
    9. 'omes' → logprob: -10.754042625427246
    10. 'omh' → logprob: -11.254042625427246

Token 153: 'us' (ID: 385)
  Prédit: 'uses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uses' → logprob: -0.014489595778286457
    2. 'us' → logprob: -4.264489650726318
    3. '   ' → logprob: -8.26448917388916
    4. 'u' → logprob: -11.88948917388916
    5. ' uses' → logprob: -11.88948917388916
    6. 'use' → logprob: -11.88948917388916
    7. ' ' → logprob: -11.88948917388916
    8. 'ouses' → logprob: -12.13948917388916
    9. '       ' → logprob: -12.13948917388916
    10. 'ases' → logprob: -12.26448917388916

Token 154: ' =>' (ID: 871)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.18768936395645142
    2. ' elif' → logprob: -1.8126893043518066
    3. 'else' → logprob: -5.812689304351807
    4. ' =' → logprob: -6.812689304351807
    5. ' else' → logprob: -6.812689304351807
    6. ',' → logprob: -7.437689304351807
    7. ':' → logprob: -7.562689304351807
    8. '=' → logprob: -7.562689304351807
    9. '   ' → logprob: -7.812689304351807
    10. '	elif' → logprob: -7.937689304351807

Token 155: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08942892402410507
    2. ' a' → logprob: -2.4644289016723633
    3. '   ' → logprob: -9.089428901672363
    4. '(a' → logprob: -9.089428901672363
    5. ' (' → logprob: -9.089428901672363
    6. '(' → logprob: -9.339428901672363
    7. ' ' → logprob: -10.339428901672363
    8. '
' → logprob: -11.839428901672363
    9. '	a' → logprob: -12.214428901672363
    10. '  ' → logprob: -12.714428901672363

Token 156: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3869985342025757
    2. '==' → logprob: -1.1369985342025757
    3. '=' → logprob: -9.136998176574707
    4. ' =' → logprob: -11.386998176574707
    5. ' ' → logprob: -13.261998176574707
    6. '===' → logprob: -13.386998176574707
    7. '==
' → logprob: -13.511998176574707
    8. ',' → logprob: -13.761998176574707
    9. 's' → logprob: -14.136998176574707
    10. ' ==
' → logprob: -15.386998176574707

Token 157: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0024768433067947626
    2. ' b' → logprob: -6.002476692199707
    3. '   ' → logprob: -13.877476692199707
    4. ' ' → logprob: -16.252477645874023
    5. '<|end|>' → logprob: -16.502477645874023
    6. '  ' → logprob: -18.252477645874023
    7. '    ' → logprob: -18.252477645874023
    8. '	b' → logprob: -18.502477645874023
    9. '```' → logprob: -20.127477645874023
    10. '    
' → logprob: -20.377477645874023

Token 158: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.24764299392700195
    2. 'and' → logprob: -1.622642993927002
    3. '   ' → logprob: -3.872642993927002
    4. '<|end|>' → logprob: -7.497642993927002
    5. ' or' → logprob: -8.122642517089844
    6. ',' → logprob: -8.497642517089844
    7. '	and' → logprob: -10.247642517089844
    8. '    ' → logprob: -10.872642517089844
    9. ' ' → logprob: -10.872642517089844
    10. '  ' → logprob: -11.122642517089844

Token 159: ' diagonal' (ID: 71638)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4287571907043457
    2. ' c' → logprob: -1.4287571907043457
    3. 'a' → logprob: -2.9287571907043457
    4. ' a' → logprob: -4.053757190704346
    5. ' (' → logprob: -4.178757190704346
    6. '(' → logprob: -4.928757190704346
    7. '(a' → logprob: -5.053757190704346
    8. '(c' → logprob: -5.303757190704346
    9. ' ' → logprob: -7.053757190704346
    10. '((' → logprob: -7.678757190704346

Token 160: ' length' (ID: 5517)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.008328981697559357
    2. '1' → logprob: -5.883328914642334
    3. 'c' → logprob: -6.133328914642334
    4. ' ==' → logprob: -7.133328914642334
    5. '==' → logprob: -7.758328914642334
    6. '<|end|>' → logprob: -8.008329391479492
    7. 'a' → logprob: -8.383329391479492
    8. ' lengths' → logprob: -8.508329391479492
    9. 'length' → logprob: -8.633329391479492
    10. '_lengths' → logprob: -8.633329391479492

Token 161: ' corresponds' (ID: 66938)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8004899621009827
    2. 'c' → logprob: -1.925489902496338
    3. '==' → logprob: -1.925489902496338
    4. ' ==' → logprob: -2.050489902496338
    5. ' <=' → logprob: -3.050489902496338
    6. ' c' → logprob: -3.675489902496338
    7. '<=' → logprob: -3.925489902496338
    8. ' <' → logprob: -4.675489902496338
    9. ' >=' → logprob: -5.175489902496338
    10. ' >' → logprob: -5.800489902496338

Token 162: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.05341626703739166
    2. 'to' → logprob: -3.0534162521362305
    3. 'c' → logprob: -6.5534162521362305
    4. '=' → logprob: -7.3034162521362305
    5. '   ' → logprob: -7.3034162521362305
    6. ' c' → logprob: -7.6784162521362305
    7. ',' → logprob: -7.9284162521362305
    8. ' =' → logprob: -8.55341625213623
    9. '(' → logprob: -9.17841625213623
    10. ')' → logprob: -9.30341625213623

Token 163: ' a' (ID: 261)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.8035688996315002
    2. 'c' → logprob: -1.3035688400268555
    3. ' the' → logprob: -2.3035688400268555
    4. ' ' → logprob: -2.8035688400268555
    5. ' a' → logprob: -3.0535688400268555
    6. 'the' → logprob: -4.5535688400268555
    7. ' an' → logprob: -4.8035688400268555
    8. 'a' → logprob: -4.8035688400268555
    9. ' either' → logprob: -4.9285688400268555
    10. ' int' → logprob: -5.0535688400268555

Token 164: ' rh' (ID: 13613)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6036867499351501
    2. ' and' → logprob: -1.603686809539795
    3. ' or' → logprob: -2.728686809539795
    4. ' ==' → logprob: -3.103686809539795
    5. ' *' → logprob: -3.603686809539795
    6. ' if' → logprob: -3.728686809539795
    7. '*' → logprob: -3.853686809539795
    8. 'and' → logprob: -4.103686809539795
    9. '==' → logprob: -4.353686809539795
    10. ',' → logprob: -5.103686809539795

Token 165: 'omb' (ID: 2722)
  Prédit: 'omb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omb' → logprob: -0.0016919655026867986
    2. 'om' → logprob: -7.126691818237305
    3. 'ombo' → logprob: -8.001691818237305
    4. 'омб' → logprob: -8.626691818237305
    5. 'ombs' → logprob: -9.001691818237305
    6. 'ombi' → logprob: -9.626691818237305
    7. '2' → logprob: -9.751691818237305
    8. 'ombe' → logprob: -11.501691818237305
    9. 'o' → logprob: -11.626691818237305
    10. 'b' → logprob: -11.626691818237305

Token 166: 'us' (ID: 385)
  Prédit: 'us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.0004475924652069807
    2. 'a' → logprob: -9.500447273254395
    3. '   ' → logprob: -9.750447273254395
    4. 'u' → logprob: -10.687947273254395
    5. '#' → logprob: -10.812947273254395
    6. '
' → logprob: -11.187947273254395
    7. '

' → logprob: -11.187947273254395
    8. 'uses' → logprob: -11.250447273254395
    9. '1' → logprob: -11.375447273254395
    10. ' us' → logprob: -11.437947273254395

Token 167: ' diagonal' (ID: 71638)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13962262868881226
    2. ' and' → logprob: -2.139622688293457
    3. 'and' → logprob: -5.014622688293457
    4. ' if' → logprob: -5.639622688293457
    5. ',' → logprob: -6.639622688293457
    6. ' or' → logprob: -8.014622688293457
    7. '    ' → logprob: -9.014622688293457
    8. '<|end|>' → logprob: -9.139622688293457
    9. ' ' → logprob: -9.389622688293457
    10. ':' → logprob: -9.514622688293457

Token 168: ' length' (ID: 5517)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019052810966968536
    2. ' and' → logprob: -4.144052982330322
    3. ',' → logprob: -6.894052982330322
    4. 'and' → logprob: -7.269052982330322
    5. ' if' → logprob: -7.394052982330322
    6. '<|end|>' → logprob: -8.394052505493164
    7. '    ' → logprob: -8.894052505493164
    8. ' or' → logprob: -9.144052505493164
    9. ':' → logprob: -10.144052505493164
    10. '  ' → logprob: -10.644052505493164

Token 169: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03666214644908905
    2. ' and' → logprob: -3.4116621017456055
    3. ',' → logprob: -6.9116621017456055
    4. 'and' → logprob: -7.0366621017456055
    5. ' if' → logprob: -7.6616621017456055
    6. '    ' → logprob: -8.411662101745605
    7. ' or' → logprob: -8.911662101745605
    8. '<|end|>' → logprob: -9.161662101745605
    9. ' elif' → logprob: -9.911662101745605
    10. ' ,' → logprob: -10.036662101745605

Token 170: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05435674637556076
    2. 'elif' → logprob: -4.054356575012207
    3. ' elif' → logprob: -4.054356575012207
    4. ' if' → logprob: -4.679356575012207
    5. ' and' → logprob: -5.304356575012207
    6. ',' → logprob: -6.679356575012207
    7. 'and' → logprob: -7.554356575012207
    8. ' else' → logprob: -7.679356575012207
    9. 'if' → logprob: -7.679356575012207
    10. ' or' → logprob: -8.054356575012207

Token 171: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7733598351478577
    2. ' elif' → logprob: -1.273359775543213
    3. 'elif' → logprob: -1.398359775543213
    4. ' else' → logprob: -5.273359775543213
    5. 'else' → logprob: -5.773359775543213
    6. ' if' → logprob: -6.648359775543213
    7. ' and' → logprob: -6.773359775543213
    8. ',' → logprob: -8.273360252380371
    9. '	elif' → logprob: -8.773360252380371
    10. ' or' → logprob: -9.023360252380371

Token 172: ' diagon' (ID: 146014)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5945053696632385
    2. 'elif' → logprob: -1.0945053100585938
    3. 'import' → logprob: -2.8445053100585938
    4. 'd' → logprob: -3.5945053100585938
    5. 'else' → logprob: -4.219505310058594
    6. '#' → logprob: -5.094505310058594
    7. 'from' → logprob: -5.844505310058594
    8. ' if' → logprob: -6.594505310058594
    9. ' elif' → logprob: -7.094505310058594
    10. 's' → logprob: -7.969505310058594

Token 173: 'als' (ID: 1288)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.20256002247333527
    2. 'als' → logprob: -1.7025600671768188
    3. 'a' → logprob: -8.577560424804688
    4. '   ' → logprob: -8.577560424804688
    5. ' al' → logprob: -8.765060424804688
    6. ' als' → logprob: -9.265060424804688
    7. '#' → logprob: -9.327560424804688
    8. '```' → logprob: -9.577560424804688
    9. ' ' → logprob: -9.827560424804688
    10. 's' → logprob: -10.140060424804688

Token 174: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19486789405345917
    2. 's' → logprob: -3.0698678493499756
    3. '_length' → logprob: -3.1948678493499756
    4. '=' → logprob: -3.5698678493499756
    5. ' are' → logprob: -3.8198678493499756
    6. '_lengths' → logprob: -4.944868087768555
    7. '_diff' → logprob: -5.194868087768555
    8. 'a' → logprob: -5.444868087768555
    9. '_squared' → logprob: -5.944868087768555
    10. ' lengths' → logprob: -6.444868087768555

Token 175: ' rh' (ID: 13613)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14709588885307312
    2. ' a' → logprob: -2.0220959186553955
    3. 'rh' → logprob: -5.897095680236816
    4. ' rh' → logprob: -6.522095680236816
    5. 'r' → logprob: -10.147095680236816
    6. '#' → logprob: -10.647095680236816
    7. '[' → logprob: -10.647095680236816
    8. 'par' → logprob: -10.897095680236816
    9. 'an' → logprob: -11.522095680236816
    10. ' an' → logprob: -11.647095680236816

Token 176: 'omb' (ID: 2722)
  Prédit: 'omb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omb' → logprob: -0.017202680930495262
    2. 'ombi' → logprob: -4.892202854156494
    3. 'ombs' → logprob: -5.517202854156494
    4. 'om' → logprob: -5.642202854156494
    5. 'омб' → logprob: -6.767202854156494
    6. 'ombo' → logprob: -8.517202377319336
    7. 'o' → logprob: -9.017202377319336
    8. 'h' → logprob: -9.142202377319336
    9. 'omes' → logprob: -10.329702377319336
    10. 'ом' → logprob: -10.392202377319336

Token 177: 'us' (ID: 385)
  Prédit: 'us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.022137688472867012
    2. 'uses' → logprob: -4.022137641906738
    3. 'a' → logprob: -6.397137641906738
    4. '   ' → logprob: -7.147137641906738
    5. 'i' → logprob: -7.272137641906738
    6. 'ag' → logprob: -7.897137641906738
    7. 'u' → logprob: -8.897137641906738
    8. ' ' → logprob: -9.897137641906738
    9. 'di' → logprob: -10.272137641906738
    10. 'as' → logprob: -10.272137641906738

Token 178: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6732382774353027
    2. ' =' → logprob: -1.2982382774353027
    3. '=' → logprob: -3.2982382774353027
    4. ' and' → logprob: -3.6732382774353027
    5. '#' → logprob: -3.7982382774353027
    6. ' if' → logprob: -3.9232382774353027
    7. ',' → logprob: -4.173238277435303
    8. 's' → logprob: -4.423238277435303
    9. ' are' → logprob: -4.423238277435303
    10. 'import' → logprob: -4.673238277435303

Token 179: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4918680787086487
    2. ' d' → logprob: -0.9918680787086487
    3. 'import' → logprob: -4.866868019104004
    4. '#' → logprob: -5.241868019104004
    5. ' import' → logprob: -7.116868019104004
    6. ' #' → logprob: -7.866868019104004
    7. ' p' → logprob: -7.866868019104004
    8. '   ' → logprob: -7.866868019104004
    9. ' diagonal' → logprob: -7.866868019104004
    10. '
' → logprob: -8.241868019104004

Token 180: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5451681974809617e-05
    2. ' =' → logprob: -12.125015258789062
    3. '=' → logprob: -12.625015258789062
    4. 'i' → logprob: -13.500015258789062
    5. 'a' → logprob: -13.750015258789062
    6. '

' → logprob: -14.250015258789062
    7. '
' → logprob: -14.375015258789062
    8. '_' → logprob: -14.750015258789062
    9. 's' → logprob: -14.875015258789062
    10. 'ac' → logprob: -15.125015258789062

Token 181: '^' (ID: 61)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08735933899879456
    2. ',' → logprob: -2.8373594284057617
    3. ' =' → logprob: -4.087359428405762
    4. '_' → logprob: -5.337359428405762
    5. '=' → logprob: -6.712359428405762
    6. 's' → logprob: -7.087359428405762
    7. '2' → logprob: -8.337359428405762
    8. ' ,' → logprob: -8.337359428405762
    9. '_squared' → logprob: -8.337359428405762
    10. '_,' → logprob: -9.087359428405762

Token 182: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005552474409341812
    2. '1' → logprob: -5.380552291870117
    3. '=' → logprob: -7.505552291870117
    4. ' =' → logprob: -8.380552291870117
    5. ',' → logprob: -9.380552291870117
    6. ' ' → logprob: -10.505552291870117
    7. '²' → logprob: -11.005552291870117
    8. '12' → logprob: -12.255552291870117
    9. '```' → logprob: -13.130552291870117
    10. '**' → logprob: -13.380552291870117

Token 183: ' +' (ID: 659)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006046231836080551
    2. '=' → logprob: -5.381046295166016
    3. ' ==' → logprob: -7.131046295166016
    4. ' +' → logprob: -7.756046295166016
    5. ',' → logprob: -9.256046295166016
    6. ' ' → logprob: -10.256046295166016
    7. ' ,' → logprob: -10.881046295166016
    8. '1' → logprob: -11.756046295166016
    9. '==' → logprob: -12.256046295166016
    10. ' =
' → logprob: -12.381046295166016

Token 184: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.048964980989694595
    2. ' d' → logprob: -3.0489649772644043
    3. '2' → logprob: -8.423965454101562
    4. ' ' → logprob: -9.173965454101562
    5. '   ' → logprob: -10.048965454101562
    6. '  ' → logprob: -12.673965454101562
    7. '	d' → logprob: -13.548965454101562
    8. '
' → logprob: -13.923965454101562
    9. ' ' → logprob: -14.111465454101562
    10. '(d' → logprob: -14.173965454101562

Token 185: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.264322317088954e-05
    2. '1' → logprob: -10.250052452087402
    3. '[' → logprob: -12.500052452087402
    4. ' ' → logprob: -12.500052452087402
    5. '```' → logprob: -13.000052452087402
    6. 'd' → logprob: -13.750052452087402
    7. '22' → logprob: -14.000052452087402
    8. '**' → logprob: -14.437552452087402
    9. '/' → logprob: -14.437552452087402
    10. '12' → logprob: -14.500052452087402

Token 186: '^' (ID: 61)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.023978643119335175
    2. '^' → logprob: -4.2739787101745605
    3. '=' → logprob: -5.0239787101745605
    4. ' =' → logprob: -6.0239787101745605
    5. ' ' → logprob: -8.148978233337402
    6. 's' → logprob: -8.398978233337402
    7. '²' → logprob: -8.648978233337402
    8. '**' → logprob: -10.023978233337402
    9. '_' → logprob: -11.773978233337402
    10. '_squared' → logprob: -11.898978233337402

Token 187: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003473825636319816
    2. '=' → logprob: -8.375347137451172
    3. ' ' → logprob: -9.625347137451172
    4. ' =' → logprob: -10.000347137451172
    5. '²' → logprob: -14.125347137451172
    6. '^' → logprob: -14.500347137451172
    7. '```' → logprob: -14.625347137451172
    8. '==' → logprob: -14.750347137451172
    9. 'd' → logprob: -14.875347137451172
    10. '
' → logprob: -14.875347137451172

Token 188: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 189: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0187101811170578
    2. '2' → logprob: -4.768710136413574
    3. '(' → logprob: -4.893710136413574
    4. ' ' → logprob: -6.018710136413574
    5. ' (' → logprob: -9.518710136413574
    6. '   ' → logprob: -11.018710136413574
    7. '(a' → logprob: -11.518710136413574
    8. 'a' → logprob: -12.518710136413574
    9. '(s' → logprob: -13.018710136413574
    10. '
' → logprob: -13.143710136413574

Token 190: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.025848152115941048
    2. '2' → logprob: -4.150848388671875
    3. '(' → logprob: -4.650848388671875
    4. ' ' → logprob: -9.400848388671875
    5. '(a' → logprob: -10.400848388671875
    6. ' (' → logprob: -10.775848388671875
    7. '
' → logprob: -11.025848388671875
    8. 'c' → logprob: -11.400848388671875
    9. 'a' → logprob: -11.775848388671875
    10. 'd' → logprob: -11.775848388671875

Token 191: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7359397411346436
    2. '*' → logprob: -1.2359397411346436
    3. ' *' → logprob: -1.7359397411346436
    4. '*a' → logprob: -2.9859397411346436
    5. ' a' → logprob: -5.985939979553223
    6. '*(' → logprob: -7.360939979553223
    7. '   ' → logprob: -8.610939979553223
    8. '(' → logprob: -10.110939979553223
    9. ')' → logprob: -10.235939979553223
    10. ' ' → logprob: -10.235939979553223

Token 192: '^' (ID: 61)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0027203490026295185
    2. 'a' → logprob: -6.752720355987549
    3. '*' → logprob: -7.377720355987549
    4. 's' → logprob: -8.25271987915039
    5. ' ' → logprob: -8.75271987915039
    6. ')' → logprob: -8.75271987915039
    7. '**' → logprob: -9.00271987915039
    8. '<|end|>' → logprob: -9.50271987915039
    9. '^' → logprob: -10.00271987915039
    10. '*a' → logprob: -10.37771987915039

Token 193: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.47757811343763e-05
    2. ' ' → logprob: -10.500044822692871
    3. '4' → logprob: -11.875044822692871
    4. 'a' → logprob: -12.750044822692871
    5. '```' → logprob: -13.375044822692871
    6. ',' → logprob: -13.937544822692871
    7. '²' → logprob: -14.187544822692871
    8. '   ' → logprob: -14.562544822692871
    9. '=' → logprob: -15.125044822692871
    10. '-' → logprob: -15.500044822692871

Token 194: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015327895060181618
    2. '<|end|>' → logprob: -4.8903279304504395
    3. 'elif' → logprob: -6.0153279304504395
    4. ' if' → logprob: -6.0153279304504395
    5. ' and' → logprob: -7.5153279304504395
    6. ' elif' → logprob: -7.6403279304504395
    7. 'if' → logprob: -7.7653279304504395
    8. 'else' → logprob: -8.390327453613281
    9. 'and' → logprob: -8.390327453613281
    10. ',' → logprob: -8.515327453613281

Token 195: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03110426478087902
    2. 'if' → logprob: -4.53110408782959
    3. ' if' → logprob: -5.03110408782959
    4. 'elif' → logprob: -5.15610408782959
    5. '<|end|>' → logprob: -5.15610408782959
    6. 'else' → logprob: -8.28110408782959
    7. ' elif' → logprob: -8.53110408782959
    8. 'continue' → logprob: -8.78110408782959
    9. ')' → logprob: -8.90610408782959
    10. '#' → logprob: -8.90610408782959

Token 196: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6901182532310486
    2. 'elif' → logprob: -0.8151182532310486
    3. '<|end|>' → logprob: -4.065118312835693
    4. 'if' → logprob: -4.190118312835693
    5. 'else' → logprob: -4.940118312835693
    6. ' elif' → logprob: -5.065118312835693
    7. '#' (adapté à ' #') → logprob: -5.565118312835693
    8. ' if' → logprob: -5.940118312835693
    9. '```' → logprob: -6.940118312835693
    10. 'continue' → logprob: -7.690118312835693

Token 197: ' given' (ID: 4335)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.0417228639125824
    2. 'if' → logprob: -3.5417227745056152
    3. '#' → logprob: -5.666722774505615
    4. 'continue' → logprob: -6.166722774505615
    5. 'else' → logprob: -6.166722774505615
    6. '<|end|>' → logprob: -6.791722774505615
    7. ' elif' → logprob: -6.916722774505615
    8. '```' → logprob: -7.166722774505615
    9. ' if' → logprob: -7.916722774505615
    10. '   ' → logprob: -8.041723251342773

Token 198: ' only' (ID: 1606)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7412607073783875
    2. ' c' → logprob: -1.3662607669830322
    3. 'a' → logprob: -1.9912607669830322
    4. ' that' → logprob: -2.7412607669830322
    5. ' the' → logprob: -3.4912607669830322
    6. 'c' → logprob: -3.8662607669830322
    7. 'that' → logprob: -4.741260528564453
    8. 'the' → logprob: -6.741260528564453
    9. ' not' → logprob: -6.866260528564453
    10. ' this' → logprob: -6.991260528564453

Token 199: ' one' (ID: 1001)
  Prédit: ' one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.35266703367233276
    2. ' c' → logprob: -1.8526670932769775
    3. 'c' → logprob: -2.8526670932769775
    4. ' the' → logprob: -3.4776670932769775
    5. ' a' → logprob: -3.8526670932769775
    6. 'one' → logprob: -4.852666854858398
    7. ' d' → logprob: -5.227666854858398
    8. 'a' → logprob: -5.227666854858398
    9. ' sides' → logprob: -5.477666854858398
    10. ' two' → logprob: -6.602666854858398

Token 200: ' diagonal' (ID: 71638)
  Prédit: ' diagonal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diagonal' → logprob: -0.37331199645996094
    2. 'di' → logprob: -1.373311996459961
    3. ')' → logprob: -3.998311996459961
    4. '#' → logprob: -4.748311996459961
    5. '   ' → logprob: -5.248311996459961
    6. '_di' → logprob: -5.248311996459961
    7. 'd' → logprob: -5.998311996459961
    8. ',' → logprob: -6.123311996459961
    9. 'c' → logprob: -6.248311996459961
    10. ')
' → logprob: -6.373311996459961

Token 201: ' c' (ID: 274)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026283692568540573
    2. ' and' → logprob: -4.6512837409973145
    3. ',' → logprob: -4.7762837409973145
    4. ' if' → logprob: -5.9012837409973145
    5. 'and' → logprob: -6.5262837409973145
    6. 'elif' → logprob: -7.2762837409973145
    7. ' elif' → logprob: -7.4012837409973145
    8. ':' → logprob: -8.151283264160156
    9. '<|end|>' → logprob: -8.276283264160156
    10. ' or' → logprob: -8.401283264160156

Token 202: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04198603704571724
    2. ' and' → logprob: -4.291985988616943
    3. ' if' → logprob: -4.666985988616943
    4. ',' → logprob: -5.041985988616943
    5. ' or' → logprob: -6.166985988616943
    6. 'and' → logprob: -6.291985988616943
    7. ' elif' → logprob: -6.416985988616943
    8. 'elif' → logprob: -6.666985988616943
    9. '<|end|>' → logprob: -6.916985988616943
    10. ' else' → logprob: -7.541985988616943

Token 203: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6069316864013672
    2. 'if' → logprob: -1.8569316864013672
    3. 'continue' → logprob: -1.9819316864013672
    4. '#' → logprob: -2.481931686401367
    5. ' continue' → logprob: -3.231931686401367
    6. ' if' → logprob: -3.606931686401367
    7. 'pass' → logprob: -5.481931686401367
    8. '```' → logprob: -7.106931686401367
    9. 'import' → logprob: -7.231931686401367
    10. ' #' → logprob: -7.606931686401367

Token 204: ' sides' (ID: 18089)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7693660259246826
    2. 'c' → logprob: -1.1443660259246826
    3. 'not' → logprob: -2.8943660259246826
    4. ' not' → logprob: -3.2693660259246826
    5. ' c' → logprob: -3.5193660259246826
    6. ' a' → logprob: -3.5193660259246826
    7. 'assuming' → logprob: -4.394366264343262
    8. '(a' → logprob: -4.644366264343262
    9. 'abs' → logprob: -4.644366264343262
    10. ' assuming' → logprob: -4.769366264343262

Token 205: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8162550330162048
    2. ' ==' → logprob: -1.3162550926208496
    3. '==' → logprob: -1.4412550926208496
    4. ',' → logprob: -4.19125509262085
    5. ' a' → logprob: -4.19125509262085
    6. '   ' → logprob: -4.81625509262085
    7. ' are' → logprob: -5.19125509262085
    8. 'are' → logprob: -5.94125509262085
    9. '=' → logprob: -6.19125509262085
    10. ' =' → logprob: -6.56625509262085

Token 206: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8074891567230225
    2. ' ==' → logprob: -1.3074891567230225
    3. '==' → logprob: -1.6824891567230225
    4. ' and' → logprob: -2.5574891567230225
    5. 'and' → logprob: -5.057489395141602
    6. '   ' → logprob: -5.057489395141602
    7. ' ,' → logprob: -6.057489395141602
    8. ':' → logprob: -6.432489395141602
    9. ',
' → logprob: -7.307489395141602
    10. '=' → logprob: -7.682489395141602

Token 207: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024207426235079765
    2. ' and' → logprob: -4.399207592010498
    3. ',' → logprob: -5.399207592010498
    4. ':' → logprob: -6.024207592010498
    5. 'and' → logprob: -6.274207592010498
    6. '       ' → logprob: -7.524207592010498
    7. ' if' → logprob: -8.14920711517334
    8. ' continue' → logprob: -8.14920711517334
    9. 'continue' → logprob: -8.39920711517334
    10. ':
' → logprob: -8.52420711517334

Token 208: ' with' (ID: 483)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3758701980113983
    2. '   ' → logprob: -1.5008702278137207
    3. 'continue' → logprob: -2.8758702278137207
    4. '#' → logprob: -4.375870227813721
    5. ' if' → logprob: -4.375870227813721
    6. ' continue' → logprob: -5.875870227813721
    7. 'elif' → logprob: -6.625870227813721
    8. 'd' → logprob: -7.000870227813721
    9. '
' → logprob: -7.625870227813721
    10. 'else' → logprob: -7.625870227813721

Token 209: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3309485912322998
    2. ' a' → logprob: -1.3309485912322998
    3. 'c' → logprob: -4.705948829650879
    4. ' c' → logprob: -4.830948829650879
    5. ' ' → logprob: -9.455948829650879
    6. 'b' → logprob: -9.580948829650879
    7. ' the' → logprob: -9.830948829650879
    8. 'import' → logprob: -10.205948829650879
    9. ' b' → logprob: -10.643448829650879
    10. '
' → logprob: -10.705948829650879

Token 210: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5237487554550171
    2. '==' → logprob: -0.8987487554550171
    3. '=' → logprob: -7.523748874664307
    4. ' =' → logprob: -10.398748397827148
    5. '==
' → logprob: -10.898748397827148
    6. ' !=' → logprob: -11.523748397827148
    7. ' ==
' → logprob: -12.148748397827148
    8. '2' → logprob: -12.398748397827148
    9. '!=' → logprob: -12.398748397827148
    10. ',' → logprob: -13.398748397827148

Token 211: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -5.8961017202818766e-05
    2. ' b' → logprob: -9.750059127807617
    3. 'a' → logprob: -15.125059127807617
    4. '=' → logprob: -16.750059127807617
    5. '=b' → logprob: -17.125059127807617
    6. '	b' → logprob: -17.500059127807617
    7. 'c' → logprob: -17.625059127807617
    8. ' ' → logprob: -17.750059127807617
    9. ')b' → logprob: -18.000059127807617
    10. '>b' → logprob: -18.125059127807617

Token 212: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1540035456418991
    2. ' and' → logprob: -2.404003620147705
    3. 'and' → logprob: -4.029003620147705
    4. ':' → logprob: -4.029003620147705
    5. ',' → logprob: -4.279003620147705
    6. '       ' → logprob: -6.779003620147705
    7. ':
' → logprob: -7.154003620147705
    8. ',
' → logprob: -8.029003143310547
    9. ' or' → logprob: -8.404003143310547
    10. ' ,' → logprob: -9.654003143310547

Token 213: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031001418828964233
    2. ' and' → logprob: -3.906001329421997
    3. 'and' → logprob: -5.281001567840576
    4. ':' → logprob: -5.406001567840576
    5. ',' → logprob: -8.406001091003418
    6. ' if' → logprob: -8.781001091003418
    7. 'elif' → logprob: -9.031001091003418
    8. '       ' → logprob: -9.531001091003418
    9. ' or' → logprob: -9.781001091003418
    10. ' elif' → logprob: -10.281001091003418

Token 214: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38498708605766296
    2. 'elif' → logprob: -1.3849871158599854
    3. ' elif' → logprob: -3.8849871158599854
    4. 'if' → logprob: -3.8849871158599854
    5. ' if' → logprob: -4.259986877441406
    6. 'else' → logprob: -5.134986877441406
    7. 'continue' → logprob: -6.009986877441406
    8. ' and' → logprob: -6.259986877441406
    9. ' continue' → logprob: -6.759986877441406
    10. ' else' → logprob: -7.134986877441406

Token 215: ' so' (ID: 813)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14712932705879211
    2. 'elif' → logprob: -2.1471292972564697
    3. 'continue' → logprob: -5.272129535675049
    4. '   ' → logprob: -5.397129535675049
    5. ' if' → logprob: -5.647129535675049
    6. 'else' → logprob: -5.772129535675049
    7. 'import' → logprob: -6.147129535675049
    8. '#' → logprob: -7.147129535675049
    9. ' continue' → logprob: -8.27212905883789
    10. ' elif' → logprob: -8.64712905883789

Token 216: ' c' (ID: 274)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6251533031463623
    2. 'if' → logprob: -0.8751533031463623
    3. '   ' → logprob: -3.6251533031463623
    4. ' c' → logprob: -5.250153541564941
    5. 'c' → logprob: -5.750153541564941
    6. ' continue' → logprob: -5.875153541564941
    7. 'elif' → logprob: -5.875153541564941
    8. ':' → logprob: -6.000153541564941
    9. 'continue' → logprob: -6.750153541564941
    10. ',' → logprob: -7.875153541564941

Token 217: ' <' (ID: 464)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.30265572667121887
    2. ' ==' → logprob: -1.5526556968688965
    3. ' <=' → logprob: -3.6776556968688965
    4. '==' → logprob: -3.9276556968688965
    5. '<=' → logprob: -6.1776556968688965
    6. '**' → logprob: -6.6776556968688965
    7. ' >=' → logprob: -8.677656173706055
    8. ' !=' → logprob: -9.302656173706055
    9. ' =' → logprob: -9.302656173706055
    10. ' ' → logprob: -9.427656173706055

Token 218: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28551357984542847
    2. '2' → logprob: -1.4105136394500732
    3. ' ' → logprob: -5.660513401031494
    4. 'a' → logprob: -7.910513401031494
    5. '(' → logprob: -8.160513877868652
    6. '4' → logprob: -9.285513877868652
    7. '=(' → logprob: -9.785513877868652
    8. ' (' → logprob: -10.910513877868652
    9. '=a' → logprob: -11.285513877868652
    10. ' a' → logprob: -12.160513877868652

Token 219: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001130571006797254
    2. '(' → logprob: -7.5011305809021
    3. ' ' → logprob: -8.251130104064941
    4. 'a' → logprob: -8.376130104064941
    5. '=' → logprob: -9.501130104064941
    6. ' (' → logprob: -12.751130104064941
    7. '4' → logprob: -13.251130104064941
    8. '(a' → logprob: -13.501130104064941
    9. '=(' → logprob: -13.626130104064941
    10. '1' → logprob: -14.376130104064941

Token 220: 'a' (ID: 64)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6568072438240051
    2. 'a' → logprob: -1.4068071842193604
    3. '*a' → logprob: -1.6568071842193604
    4. '*' → logprob: -3.1568071842193604
    5. ' a' → logprob: -5.7818074226379395
    6. ' ' → logprob: -9.906806945800781
    7. '*c' → logprob: -10.531806945800781
    8. ' ' → logprob: -11.406806945800781
    9. ' and' → logprob: -11.531806945800781
    10. '2' → logprob: -11.531806945800781

Token 221: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015878571197390556
    2. ' and' → logprob: -4.265878677368164
    3. 'and' → logprob: -6.515878677368164
    4. ' if' → logprob: -8.890878677368164
    5. ',' → logprob: -10.765878677368164
    6. '       ' → logprob: -11.015878677368164
    7. '<|end|>' → logprob: -11.265878677368164
    8. ' or' → logprob: -11.515878677368164
    9. 'if' → logprob: -11.765878677368164
    10. '  ' → logprob: -12.265878677368164

Token 222: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8858978152275085
    2. ' and' → logprob: -1.0108978748321533
    3. 'and' → logprob: -2.2608978748321533
    4. ' if' → logprob: -2.8858978748321533
    5. 'if' → logprob: -3.8858978748321533
    6. 'elif' → logprob: -4.385897636413574
    7. ':' → logprob: -4.760897636413574
    8. ' continue' → logprob: -5.385897636413574
    9. 'continue' → logprob: -5.510897636413574
    10. ' or' → logprob: -5.760897636413574

Token 223: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.15274237096309662
    2. ' c' → logprob: -2.027742385864258
    3. 'a' → logprob: -5.402742385864258
    4. '(c' → logprob: -6.652742385864258
    5. 'abs' → logprob: -7.027742385864258
    6. '(' → logprob: -7.152742385864258
    7. ' a' → logprob: -7.402742385864258
    8. ' (' → logprob: -7.777742385864258
    9. '(a' → logprob: -8.027742385864258
    10. '2' → logprob: -8.152742385864258

Token 224: ' >' (ID: 1424)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2393752932548523
    2. ' >' → logprob: -2.239375352859497
    3. '2' → logprob: -2.864375352859497
    4. '<' → logprob: -3.739375352859497
    5. ' <=' → logprob: -4.364375114440918
    6. '>' → logprob: -5.364375114440918
    7. '**' → logprob: -5.489375114440918
    8. ' >=' → logprob: -6.989375114440918
    9. ' ==' → logprob: -7.239375114440918
    10. '<=' → logprob: -7.489375114440918

Token 225: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0032037352211773396
    2. ' ' → logprob: -6.128203868865967
    3. 'abs' → logprob: -7.253203868865967
    4. ' abs' → logprob: -8.628203392028809
    5. 'a' → logprob: -9.003203392028809
    6. ' a' → logprob: -12.253203392028809
    7. '   ' → logprob: -13.628203392028809
    8. '2' → logprob: -14.378203392028809
    9. '(abs' → logprob: -14.503203392028809
    10. '(' → logprob: -15.503203392028809

Token 226: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004111054353415966
    2. 'abs' → logprob: -5.629111289978027
    3. ' ' → logprob: -8.254111289978027
    4. ' abs' → logprob: -8.504111289978027
    5. 'a' → logprob: -10.129111289978027
    6. '(abs' → logprob: -12.504111289978027
    7. '   ' → logprob: -13.629111289978027
    8. '1' → logprob: -15.004111289978027
    9. '2' → logprob: -15.066611289978027
    10. ' a' → logprob: -15.129111289978027

Token 227: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001466057845391333
    2. ' and' → logprob: -7.001466274261475
    3. ' if' → logprob: -8.626465797424316
    4. 'and' → logprob: -9.251465797424316
    5. 'elif' → logprob: -9.626465797424316
    6. ' elif' → logprob: -9.751465797424316
    7. ',' → logprob: -9.876465797424316
    8. '<|end|>' → logprob: -10.376465797424316
    9. 'if' → logprob: -11.001465797424316
    10. '       ' → logprob: -11.626465797424316

Token 228: ' also' (ID: 1217)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04598552733659744
    2. ' if' → logprob: -3.920985460281372
    3. 'if' → logprob: -3.920985460281372
    4. 'elif' → logprob: -6.170985698699951
    5. 'and' → logprob: -6.545985698699951
    6. ' and' → logprob: -6.795985698699951
    7. '       ' → logprob: -8.295985221862793
    8. ' elif' → logprob: -9.045985221862793
    9. '    
' → logprob: -10.045985221862793
    10. 'else' → logprob: -10.170985221862793

Token 229: ' given' (ID: 4335)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.850273609161377
    2. 'a' → logprob: -0.975273609161377
    3. '   ' → logprob: -2.475273609161377
    4. ' c' → logprob: -2.850273609161377
    5. 'c' → logprob: -4.100273609161377
    6. ' if' → logprob: -4.725273609161377
    7. ' abs' → logprob: -4.975273609161377
    8. 'if' → logprob: -5.100273609161377
    9. ' (' → logprob: -5.725273609161377
    10. 'abs' → logprob: -5.725273609161377

Token 230: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34841522574424744
    2. ' c' → logprob: -2.3484151363372803
    3. ' a' → logprob: -2.4734151363372803
    4. 'a' → logprob: -2.9734151363372803
    5. ' if' → logprob: -3.8484151363372803
    6. 'c' → logprob: -3.9734151363372803
    7. ' not' → logprob: -5.723415374755859
    8. '    
' → logprob: -6.348415374755859
    9. ' (' → logprob: -6.348415374755859
    10. 'b' → logprob: -6.473415374755859

Token 231: '+b' (ID: 76609)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07058704644441605
    2. '==' → logprob: -2.695587158203125
    3. ' >' → logprob: -8.695587158203125
    4. ' >=' → logprob: -9.070587158203125
    5. ' !=' → logprob: -9.070587158203125
    6. '2' → logprob: -9.945587158203125
    7. ' and' → logprob: -10.195587158203125
    8. ',' → logprob: -10.570587158203125
    9. '<|end|>' → logprob: -10.820587158203125
    10. ' ' → logprob: -11.070587158203125

Token 232: '>' (ID: 29)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25543010234832764
    2. '==' → logprob: -2.005430221557617
    3. ' >' → logprob: -2.505430221557617
    4. '>' → logprob: -5.005430221557617
    5. ' !=' → logprob: -7.755430221557617
    6. '+' → logprob: -7.880430221557617
    7. ' +' → logprob: -7.880430221557617
    8. ' >=' → logprob: -8.130430221557617
    9. '2' → logprob: -8.880430221557617
    10. '   ' → logprob: -9.005430221557617

Token 233: 'c' (ID: 66)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.8822034001350403
    2. 'c' → logprob: -1.1322033405303955
    3. '0' → logprob: -1.6322033405303955
    4. ' ' → logprob: -2.8822033405303955
    5. '2' → logprob: -5.007203578948975
    6. '1' → logprob: -6.507203578948975
    7. '=' → logprob: -6.882203578948975
    8. 'a' → logprob: -6.882203578948975
    9. ' a' → logprob: -6.882203578948975
    10. '>' → logprob: -7.757203578948975

Token 234: ' always' (ID: 3324)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007001649355515838
    2. 'elif' → logprob: -7.875699996948242
    3. ' and' → logprob: -9.125699996948242
    4. ' if' → logprob: -10.000699996948242
    5. 'and' → logprob: -10.125699996948242
    6. ' elif' → logprob: -10.250699996948242
    7. '<|end|>' → logprob: -10.500699996948242
    8. 'if' → logprob: -10.750699996948242
    9. '       ' → logprob: -11.375699996948242
    10. 'else' → logprob: -11.750699996948242

Token 235: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014999971725046635
    2. 'elif' → logprob: -4.764999866485596
    3. ' elif' → logprob: -5.139999866485596
    4. ' and' → logprob: -8.515000343322754
    5. '<|end|>' → logprob: -9.265000343322754
    6. 'and' → logprob: -10.140000343322754
    7. 'else' → logprob: -10.140000343322754
    8. ' else' → logprob: -10.640000343322754
    9. ' if' → logprob: -10.765000343322754
    10. ',' → logprob: -10.890000343322754

Token 236: ' so' (ID: 813)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013723143376410007
    2. ' if' → logprob: -5.138723373413086
    3. 'if' → logprob: -6.138723373413086
    4. '       ' → logprob: -6.263723373413086
    5. 'elif' → logprob: -7.013723373413086
    6. 'else' → logprob: -7.388723373413086
    7. 'continue' → logprob: -7.888723373413086
    8. ' continue' → logprob: -8.138723373413086
    9. ' and' → logprob: -8.138723373413086
    10. '    
' → logprob: -8.638723373413086

Token 237: ' check' (ID: 2371)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7128599286079407
    2. ' if' → logprob: -0.8378599286079407
    3. '   ' → logprob: -3.462859869003296
    4. 'a' → logprob: -4.087860107421875
    5. ' a' → logprob: -4.587860107421875
    6. ' c' → logprob: -5.087860107421875
    7. 'c' → logprob: -5.337860107421875
    8. 'abs' → logprob: -5.837860107421875
    9. ' abs' → logprob: -6.712860107421875
    10. ' rh' → logprob: -7.462860107421875

Token 238: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6387922167778015
    2. ' if' → logprob: -1.1387922763824463
    3. 'if' → logprob: -1.8887922763824463
    4. 'elif' → logprob: -8.888792037963867
    5. ' a' → logprob: -9.388792037963867
    6. 'a' → logprob: -9.638792037963867
    7. ' for' → logprob: -9.888792037963867
    8. '	if' → logprob: -10.013792037963867
    9. '  ' → logprob: -10.138792037963867
    10. '    ' → logprob: -10.138792037963867

Token 239: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6108635067939758
    2. ' a' → logprob: -0.9858635067939758
    3. ' c' → logprob: -3.110863447189331
    4. 'c' → logprob: -3.735863447189331
    5. ' ' → logprob: -4.98586368560791
    6. '0' → logprob: -5.48586368560791
    7. '2' → logprob: -6.36086368560791
    8. ' abs' → logprob: -7.11086368560791
    9. '1' → logprob: -7.36086368560791
    10. ' (' → logprob: -7.61086368560791

Token 240: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1273636519908905
    2. '==' → logprob: -2.127363681793213
    3. '=' → logprob: -8.127363204956055
    4. ' =' → logprob: -9.127363204956055
    5. '2' → logprob: -11.877363204956055
    6. '==
' → logprob: -12.502363204956055
    7. 's' → logprob: -12.752363204956055
    8. ' ' → logprob: -12.752363204956055
    9. 'a' → logprob: -13.002363204956055
    10. '*' → logprob: -13.252363204956055

Token 241: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.002476016292348504
    2. ' b' → logprob: -6.002476215362549
    3. '   ' → logprob: -15.62747573852539
    4. ' ' → logprob: -16.12747573852539
    5. '	b' → logprob: -17.50247573852539
    6. ')b' → logprob: -18.25247573852539
    7. '>b' → logprob: -18.25247573852539
    8. '  ' → logprob: -18.50247573852539
    9. '```' → logprob: -18.62747573852539
    10. '<|end|>' → logprob: -18.87747573852539

Token 242: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006749358493834734
    2. 'elif' → logprob: -5.381749153137207
    3. ' and' → logprob: -7.131749153137207
    4. 'and' → logprob: -7.881749153137207
    5. ' elif' → logprob: -8.006749153137207
    6. ' if' → logprob: -8.381749153137207
    7. '       ' → logprob: -9.131749153137207
    8. 'if' → logprob: -9.256749153137207
    9. ',' → logprob: -9.881749153137207
    10. '    
' → logprob: -10.506749153137207

Token 243: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7173233032226562
    2. '0' → logprob: -1.7173233032226562
    3. ' c' → logprob: -1.7173233032226562
    4. 'a' → logprob: -2.4673233032226562
    5. ' ' → logprob: -3.5923233032226562
    6. ' a' → logprob: -3.8423233032226562
    7. '1' → logprob: -5.467323303222656
    8. '(' → logprob: -5.717323303222656
    9. '(a' → logprob: -5.717323303222656
    10. ' (' → logprob: -5.967323303222656

Token 244: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.06338942050933838
    2. '<' → logprob: -3.313389301300049
    3. ' >' → logprob: -3.813389301300049
    4. '>' → logprob: -6.563389301300049
    5. '2' → logprob: -6.813389301300049
    6. ' ' → logprob: -8.938389778137207
    7. '```' → logprob: -9.313389778137207
    8. '**' → logprob: -9.563389778137207
    9. ' !=' → logprob: -10.563389778137207
    10. ' ' → logprob: -10.563389778137207

Token 245: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2254275530576706
    2. ' ' → logprob: -1.600427508354187
    3. '   ' → logprob: -12.350427627563477
    4. '(' → logprob: -12.350427627563477
    5. 'a' → logprob: -13.600427627563477
    6. '=' → logprob: -13.725427627563477
    7. '  ' → logprob: -14.225427627563477
    8. ' ' → logprob: -14.287927627563477
    9. ' (' → logprob: -14.787927627563477
    10. '4' → logprob: -15.287927627563477

Token 246: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004623441956937313
    2. ' ' → logprob: -5.3796234130859375
    3. '(' → logprob: -13.754623413085938
    4. 'a' → logprob: -14.129623413085938
    5. '=' → logprob: -14.629623413085938
    6. '   ' → logprob: -14.754623413085938
    7. ' ' → logprob: -15.879623413085938
    8. '```' → logprob: -16.442123413085938
    9. '  ' → logprob: -16.692123413085938
    10. '20' → logprob: -17.004623413085938

Token 247: 'a' (ID: 64)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2219821810722351
    2. '   ' → logprob: -2.22198224067688
    3. 'and' → logprob: -2.47198224067688
    4. ' if' → logprob: -5.846982002258301
    5. ':' → logprob: -6.721982002258301
    6. 'if' → logprob: -7.221982002258301
    7. '2' → logprob: -7.846982002258301
    8. ' ' → logprob: -8.2219820022583
    9. 'a' → logprob: -8.7219820022583
    10. '    ' → logprob: -8.9719820022583

Token 248: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00358699937351048
    2. 'elif' → logprob: -6.003586769104004
    3. ' elif' → logprob: -7.128586769104004
    4. ' if' → logprob: -8.753586769104004
    5. ' and' → logprob: -9.628586769104004
    6. '	elif' → logprob: -11.003586769104004
    7. '    
' → logprob: -11.128586769104004
    8. ',' → logprob: -11.128586769104004
    9. 'if' → logprob: -11.253586769104004
    10. '       ' → logprob: -12.003586769104004

Token 249: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003473198041319847
    2. 'elif' → logprob: -6.128473281860352
    3. ' elif' → logprob: -6.753473281860352
    4. ' if' → logprob: -9.753473281860352
    5. ' and' → logprob: -10.503473281860352
    6. 'and' → logprob: -11.628473281860352
    7. 'if' → logprob: -11.878473281860352
    8. '	elif' → logprob: -12.003473281860352
    9. ',' → logprob: -12.628473281860352
    10. '<|end|>' → logprob: -12.753473281860352

Token 250: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1657896786928177
    2. 'elif' → logprob: -2.0407896041870117
    3. ' elif' → logprob: -3.7907896041870117
    4. 'if' → logprob: -9.040789604187012
    5. ' if' → logprob: -9.040789604187012
    6. '	elif' → logprob: -11.790789604187012
    7. ' and' → logprob: -11.915789604187012
    8. 'and' → logprob: -11.915789604187012
    9. 'else' → logprob: -12.290789604187012
    10. '  ' → logprob: -13.415789604187012

Token 251: ' The' (ID: 623)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.5012894868850708
    2. '   ' → logprob: -1.1262894868850708
    3. 'if' → logprob: -3.0012893676757812
    4. ' elif' → logprob: -4.251289367675781
    5. ' if' → logprob: -5.126289367675781
    6. 'else' → logprob: -9.251289367675781
    7. '```' → logprob: -12.751289367675781
    8. '       ' → logprob: -13.251289367675781
    9. '	elif' → logprob: -13.376289367675781
    10. ' else' → logprob: -13.626289367675781

Token 252: ' problem' (ID: 4792)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.6267023086547852
    2. 'if' → logprob: -0.8767023086547852
    3. '   ' → logprob: -3.751702308654785
    4. ' if' → logprob: -4.001702308654785
    5. ' elif' → logprob: -5.126702308654785
    6. 'else' → logprob: -7.626702308654785
    7. 'rh' → logprob: -8.501702308654785
    8. ' ' → logprob: -9.001702308654785
    9. '
' → logprob: -9.126702308654785
    10. ' rh' → logprob: -9.126702308654785

Token 253: ' sample' (ID: 10176)
  Prédit: ' continues'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continues' → logprob: -0.5781615972518921
    2. '   ' → logprob: -1.328161597251892
    3. ':' → logprob: -2.4531617164611816
    4. 'continue' → logprob: -4.203161716461182
    5. 'elif' → logprob: -4.953161716461182
    6. ' if' → logprob: -5.078161716461182
    7. ' is' → logprob: -5.203161716461182
    8. '    
' → logprob: -5.328161716461182
    9. ' continue' → logprob: -5.453161716461182
    10. '<|end|>' → logprob: -5.453161716461182

Token 254: ' input' (ID: 3422)
  Prédit: ' continues'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continues' → logprob: -0.48019614815711975
    2. '   ' → logprob: -2.105196237564087
    3. ':' → logprob: -2.730196237564087
    4. '#' → logprob: -3.480196237564087
    5. 'continue' → logprob: -3.730196237564087
    6. 'input' → logprob: -4.230195999145508
    7. ' code' → logprob: -4.480195999145508
    8. ' if' → logprob: -4.605195999145508
    9. 'if' → logprob: -4.730195999145508
    10. ' explains' → logprob: -4.855195999145508

Token 255: ' suggests' (ID: 23379)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23477792739868164
    2. ':' → logprob: -2.2347779273986816
    3. ' and' → logprob: -2.4847779273986816
    4. 'and' → logprob: -4.734777927398682
    5. ',' → logprob: -5.734777927398682
    6. ' continues' → logprob: -6.484777927398682
    7. ':
' → logprob: -6.984777927398682
    8. ' or' → logprob: -7.234777927398682
    9. '    
' → logprob: -7.359777927398682
    10. ' is' → logprob: -7.734777927398682

Token 256: ' counting' (ID: 43276)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.8005834817886353
    2. ' rh' → logprob: -1.3005834817886353
    3. '   ' → logprob: -1.9255834817886353
    4. ' if' → logprob: -3.0505833625793457
    5. 'rh' → logprob: -3.1755833625793457
    6. 'if' → logprob: -4.175583362579346
    7. 'that' → logprob: -4.300583362579346
    8. ' checking' → logprob: -6.050583362579346
    9. ' to' → logprob: -6.050583362579346
    10. ' rectangles' → logprob: -6.175583362579346

Token 257: ' cases' (ID: 7911)
  Prédit: ' rh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rh' → logprob: -0.1444166749715805
    2. ' if' → logprob: -2.269416570663452
    3. 'rh' → logprob: -3.769416570663452
    4. '   ' → logprob: -5.644416809082031
    5. 'if' → logprob: -6.269416809082031
    6. ' the' → logprob: -7.269416809082031
    7. ' a' → logprob: -7.644416809082031
    8. ' elif' → logprob: -7.769416809082031
    9. 'elif' → logprob: -8.394416809082031
    10. 'r' → logprob: -9.019416809082031

Token 258: ' where' (ID: 1919)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034419610165059566
    2. '       ' → logprob: -7.12844181060791
    3. ' if' → logprob: -7.25344181060791
    4. ' that' → logprob: -7.37844181060791
    5. ' where' → logprob: -8.00344181060791
    6. ' and' → logprob: -8.62844181060791
    7. ' of' → logprob: -9.12844181060791
    8. ' for' → logprob: -9.12844181060791
    9. ' elif' → logprob: -9.25344181060791
    10. ' with' → logprob: -9.25344181060791

Token 259: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10022392123937607
    2. ' a' → logprob: -2.350224018096924
    3. 'c' → logprob: -12.225223541259766
    4. ' c' → logprob: -12.975223541259766
    5. '   ' → logprob: -13.350223541259766
    6. '(a' → logprob: -13.475223541259766
    7. ' ' → logprob: -13.600223541259766
    8. '```' → logprob: -13.725223541259766
    9. 'rect' → logprob: -14.100223541259766
    10. 'b' → logprob: -14.100223541259766

Token 260: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25307199358940125
    2. '==' → logprob: -1.5030720233917236
    3. '=' → logprob: -7.1280717849731445
    4. ' =' → logprob: -8.878071784973145
    5. '2' → logprob: -9.503071784973145
    6. '==
' → logprob: -10.378071784973145
    7. ' ' → logprob: -10.878071784973145
    8. ' ==
' → logprob: -11.628071784973145
    9. ' and' → logprob: -11.753071784973145
    10. 's' → logprob: -12.378071784973145

Token 261: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02054317481815815
    2. ' b' → logprob: -3.895543098449707
    3. ' ' → logprob: -14.645543098449707
    4. '   ' → logprob: -15.145543098449707
    5. 'a' → logprob: -16.395544052124023
    6. '=' → logprob: -16.645544052124023
    7. 'c' → logprob: -16.645544052124023
    8. '=b' → logprob: -16.770544052124023
    9. '<|end|>' → logprob: -17.020544052124023
    10. '```' → logprob: -17.208044052124023

Token 262: ' but' (ID: 889)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0058457194827497005
    2. 'if' → logprob: -6.130845546722412
    3. ' if' → logprob: -6.255845546722412
    4. 'elif' → logprob: -6.505845546722412
    5. ' elif' → logprob: -9.38084602355957
    6. ' and' → logprob: -9.75584602355957
    7. 'and' → logprob: -10.63084602355957
    8. '       ' → logprob: -10.75584602355957
    9. ',' → logprob: -11.63084602355957
    10. '    
' → logprob: -11.88084602355957

Token 263: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5857253670692444
    2. ' c' → logprob: -0.8357253670692444
    3. ' not' → logprob: -5.5857253074646
    4. 'a' → logprob: -5.9607253074646
    5. ' a' → logprob: -6.5857253074646
    6. 'not' → logprob: -7.4607253074646
    7. ' abs' → logprob: -8.085725784301758
    8. 'abs' → logprob: -8.210725784301758
    9. ' (' → logprob: -8.835725784301758
    10. 'line' → logprob: -8.835725784301758

Token 264: '2' (ID: 17)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.21069557964801788
    2. ' >' → logprob: -2.585695505142212
    3. '2' → logprob: -2.710695505142212
    4. ' ==' → logprob: -3.835695505142212
    5. '<' → logprob: -4.710695743560791
    6. ' <=' → logprob: -4.960695743560791
    7. '>' → logprob: -5.460695743560791
    8. '==' → logprob: -5.585695743560791
    9. '   ' → logprob: -7.210695743560791
    10. ' ' → logprob: -7.835695743560791

Token 265: ' !=' (ID: 1666)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.13148780167102814
    2. '<' → logprob: -2.7564878463745117
    3. ' >' → logprob: -3.0064878463745117
    4. ' !=' → logprob: -5.381487846374512
    5. '>' → logprob: -5.506487846374512
    6. ' ==' → logprob: -7.506487846374512
    7. '!=' → logprob: -8.131487846374512
    8. ' ' → logprob: -8.381487846374512
    9. '==' → logprob: -8.881487846374512
    10. ' <
' → logprob: -9.006487846374512

Token 266: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.062005553394556046
    2. ' a' → logprob: -2.8120055198669434
    3. '(a' → logprob: -11.187005996704102
    4. ' ' → logprob: -11.812005996704102
    5. '=' → logprob: -12.312005996704102
    6. ' (' → logprob: -12.687005996704102
    7. '```' → logprob: -12.937005996704102
    8. '{' → logprob: -13.312005996704102
    9. '(' → logprob: -13.937005996704102
    10. '1' → logprob: -14.187005996704102

Token 267: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.2855416066013277e-05
    2. ' ' → logprob: -11.375032424926758
    3. 'a' → logprob: -11.875032424926758
    4. '²' → logprob: -13.000032424926758
    5. '+' → logprob: -13.250032424926758
    6. '^' → logprob: -13.500032424926758
    7. 'b' → logprob: -13.625032424926758
    8. '[' → logprob: -13.875032424926758
    9. '```' → logprob: -14.125032424926758
    10. '   ' → logprob: -14.437532424926758

Token 268: '+b' (ID: 76609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023043859750032425
    2. 'elif' → logprob: -4.023043632507324
    3. ' elif' → logprob: -5.398043632507324
    4. ' if' → logprob: -9.023043632507324
    5. '	elif' → logprob: -10.148043632507324
    6. ',' → logprob: -10.273043632507324
    7. ' and' → logprob: -10.273043632507324
    8. '       ' → logprob: -10.523043632507324
    9. 'else' → logprob: -10.648043632507324
    10. 'if' → logprob: -10.773043632507324

Token 269: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06086781248450279
    2. 'else' → logprob: -3.1858677864074707
    3. ' else' → logprob: -4.560867786407471
    4. 'elif' → logprob: -6.310867786407471
    5. '_' → logprob: -7.310867786407471
    6. ':' → logprob: -7.310867786407471
    7. ' and' → logprob: -7.685867786407471
    8. '   ' → logprob: -7.685867786407471
    9. ')' → logprob: -7.685867786407471
    10. '```' → logprob: -7.810867786407471

Token 270: ' as' (ID: 472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6369048357009888
    2. 'elif' → logprob: -0.7619048357009888
    3. ' elif' → logprob: -5.511904716491699
    4. 'if' → logprob: -8.7619047164917
    5. 'else' → logprob: -9.6369047164917
    6. '	elif' → logprob: -11.1369047164917
    7. ' if' → logprob: -11.5119047164917
    8. ',' → logprob: -12.7619047164917
    9. '  ' → logprob: -13.6369047164917
    10. 'and' → logprob: -13.7619047164917

Token 271: ' rh' (ID: 13613)
  Prédit: 'rh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rh' → logprob: -0.20145757496356964
    2. ' rh' → logprob: -1.7014576196670532
    3. '1' → logprob: -10.576457977294922
    4. '.rh' → logprob: -11.701457977294922
    5. 'r' → logprob: -11.826457977294922
    6. '   ' → logprob: -14.076457977294922
    7. ' ' → logprob: -14.201457977294922
    8. 'a' → logprob: -14.826457977294922
    9. 'Rh' → logprob: -15.576457977294922
    10. '0' → logprob: -15.701457977294922

Token 272: 'omb' (ID: 2722)
  Prédit: 'omb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omb' → logprob: -0.0008451257599517703
    2. 'ombs' → logprob: -7.875844955444336
    3. 'ombi' → logprob: -8.250844955444336
    4. 'ombo' → logprob: -9.625844955444336
    5. 'омб' → logprob: -9.875844955444336
    6. 'om' → logprob: -10.750844955444336
    7. 'ombies' → logprob: -11.125844955444336
    8. 'ombe' → logprob: -11.375844955444336
    9. '```' → logprob: -12.125844955444336
    10. 'o' → logprob: -12.375844955444336

Token 273: 'us' (ID: 385)
  Prédit: 'us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.28202781081199646
    2. 'uses' → logprob: -1.4070278406143188
    3. '   ' → logprob: -8.532028198242188
    4. '#' → logprob: -8.907028198242188
    5. '```' → logprob: -8.907028198242188
    6. 'usus' → logprob: -10.282028198242188
    7. '\' → logprob: -10.782028198242188
    8. '       ' → logprob: -10.782028198242188
    9. 'sus' → logprob: -11.219528198242188
    10. 'ases' → logprob: -11.407028198242188

Token 274: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06510195881128311
    2. 'elif' → logprob: -2.8151018619537354
    3. ' elif' → logprob: -5.9401021003723145
    4. 'else' → logprob: -7.6901021003723145
    5. ' else' → logprob: -10.690101623535156
    6. '	elif' → logprob: -12.190101623535156
    7. 'if' → logprob: -12.315101623535156
    8. ' if' → logprob: -13.315101623535156
    9. ',' → logprob: -13.315101623535156
    10. '       ' → logprob: -13.690101623535156

Token 275: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11981149762868881
    2. 'elif' → logprob: -2.244811534881592
    3. ' elif' → logprob: -4.994811534881592
    4. 'else' → logprob: -9.744811058044434
    5. '	elif' → logprob: -9.744811058044434
    6. ',' → logprob: -10.869811058044434
    7. ' if' → logprob: -11.369811058044434
    8. 'if' → logprob: -11.744811058044434
    9. ' else' → logprob: -11.994811058044434
    10. '       ' → logprob: -12.119811058044434

Token 276: ' elif' (ID: 9497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5847582817077637
    2. 'elif' (adapté à ' elif') → logprob: -0.9597582817077637
    3. ' elif' → logprob: -2.8347582817077637
    4. 'else' → logprob: -7.459758281707764
    5. 'if' → logprob: -8.334758758544922
    6. ' if' → logprob: -8.959758758544922
    7. ' else' → logprob: -9.709758758544922
    8. '	elif' → logprob: -10.584758758544922
    9. '    ' → logprob: -12.459758758544922
    10. ',' → logprob: -13.584758758544922

Token 277: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14268745481967926
    2. ' a' → logprob: -2.0176875591278076
    3. '(a' → logprob: -11.892687797546387
    4. '	a' → logprob: -13.267687797546387
    5. '   ' → logprob: -13.767687797546387
    6. 'c' → logprob: -13.767687797546387
    7. ' (' → logprob: -14.267687797546387
    8. ' ' → logprob: -14.517687797546387
    9. '(' → logprob: -15.642687797546387
    10. '_a' → logprob: -16.39268684387207

Token 278: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3133169710636139
    2. ' ==' → logprob: -1.3133169412612915
    3. '=' → logprob: -9.93831729888916
    4. ')==' → logprob: -12.93831729888916
    5. '==
' → logprob: -13.06331729888916
    6. ']==' → logprob: -14.18831729888916
    7. '2' → logprob: -15.06331729888916
    8. '()==' → logprob: -15.18831729888916
    9. ' =' → logprob: -15.31331729888916
    10. ' ' → logprob: -15.68831729888916

Token 279: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -5.836499985889532e-05
    2. ' b' → logprob: -9.7500581741333
    3. '	b' → logprob: -20.250059127807617
    4. '   ' → logprob: -20.750059127807617
    5. ' ' → logprob: -20.750059127807617
    6. ')b' → logprob: -21.250059127807617
    7. '<|end|>' → logprob: -22.625059127807617
    8. '  ' → logprob: -23.500059127807617
    9. ' б' → logprob: -23.625059127807617
    10. '_b' → logprob: -23.625059127807617

Token 280: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.11688686907291412
    2. ':' → logprob: -2.491886854171753
    3. 'and' → logprob: -4.241887092590332
    4. ':
' → logprob: -4.616887092590332
    5. '   ' → logprob: -5.991887092590332
    6. '       ' → logprob: -7.241887092590332
    7. '	and' → logprob: -10.241887092590332
    8. ' ' → logprob: -11.116887092590332
    9. '<|end|>' → logprob: -11.991887092590332
    10. ' :' → logprob: -11.991887092590332

Token 281: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007580481935292482
    2. ' rh' → logprob: -5.007580280303955
    3. '   ' → logprob: -7.382580280303955
    4. 'rh' → logprob: -8.882580757141113
    5. ' and' → logprob: -9.507580757141113
    6. ':' → logprob: -11.632580757141113
    7. ':
' → logprob: -11.632580757141113
    8. '.rh' → logprob: -12.007580757141113
    9. '           ' → logprob: -13.632580757141113
    10. ',' → logprob: -13.757580757141113

Token 282: ' rh' (ID: 13613)
  Prédit: 'rh'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rh' (adapté à ' rh') → logprob: -0.020916707813739777
    2. '       ' → logprob: -4.145916938781738
    3. ' rh' → logprob: -5.395916938781738
    4. '   ' → logprob: -8.145916938781738
    5. '           ' → logprob: -10.645916938781738
    6. '.rh' → logprob: -11.520916938781738
    7. 'r' → logprob: -11.895916938781738
    8. '
' → logprob: -13.270916938781738
    9. 'Rh' → logprob: -14.145916938781738
    10. '     ' → logprob: -14.645916938781738

Token 283: 'omb' (ID: 2722)
  Prédit: 'omb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omb' → logprob: -4.894790981779806e-05
    2. 'om' → logprob: -11.000048637390137
    3. 'mb' → logprob: -11.000048637390137
    4. 'ombs' → logprob: -11.625048637390137
    5. 'омб' → logprob: -13.375048637390137
    6. 'omes' → logprob: -13.375048637390137
    7. 'ob' → logprob: -14.375048637390137
    8. 'ombies' → logprob: -14.375048637390137
    9. 'ombres' → logprob: -14.500048637390137
    10. 'umb' → logprob: -15.000048637390137

Token 284: 'uses' (ID: 5977)
  Prédit: 'uses'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uses' → logprob: -4.656383680412546e-05
    2. 'us' → logprob: -10.125046730041504
    3. ' uses' → logprob: -12.375046730041504
    4. 'ases' → logprob: -14.000046730041504
    5. '   ' → logprob: -14.500046730041504
    6. 'Uses' → logprob: -15.250046730041504
    7. '```' → logprob: -16.000045776367188
    8. 'ouses' → logprob: -16.375045776367188
    9. 'USES' → logprob: -17.000045776367188
    10. '       ' → logprob: -17.250045776367188

Token 285: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1602255403995514
    2. '+=' → logprob: -1.910225510597229
    3. '+' → logprob: -13.660225868225098
    4. '   ' → logprob: -16.41022491455078
    5. ' +' → logprob: -16.41022491455078
    6. '=' → logprob: -17.16022491455078
    7. '    ' → logprob: -17.78522491455078
    8. ']+=' → logprob: -17.91022491455078
    9. ' ' → logprob: -18.91022491455078
    10. ' =' → logprob: -19.41022491455078

Token 286: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -22.500003814697266
    4. '１' → logprob: -22.875003814697266
    5. '۱' → logprob: -23.000003814697266
    6. '```' → logprob: -23.125003814697266
    7. '+' → logprob: -23.250003814697266
    8. '<|end|>' → logprob: -23.375003814697266
    9. '0' → logprob: -24.000003814697266
    10. '
' → logprob: -24.625003814697266

Token 287: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '```' → logprob: -19.375001907348633
    4. '１' → logprob: -20.250001907348633
    5. '۱' → logprob: -20.500001907348633
    6. '   ' → logprob: -20.625001907348633
    7. '१' → logprob: -21.875001907348633
    8. '<|end|>' → logprob: -22.562501907348633
    9. '+' → logprob: -22.625001907348633
    10. '১' → logprob: -22.750001907348633

Token 288: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.017992833629250526
    2. '<|end|>' → logprob: -4.267992973327637
    3. '
' → logprob: -5.642992973327637
    4. ' print' → logprob: -9.267992973327637
    5. '#' → logprob: -9.642992973327637
    6. '```' → logprob: -9.892992973327637
    7. '\n' → logprob: -11.017992973327637
    8. ')' → logprob: -11.767992973327637
    9. '#print' → logprob: -11.892992973327637
    10. '  
' → logprob: -12.017992973327637

Token 289: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00081796565791592
    2. '<|end|>' → logprob: -7.375817775726318
    3. '```' → logprob: -9.250818252563477
    4. ' print' → logprob: -9.750818252563477
    5. '#' → logprob: -10.625818252563477
    6. ')' → logprob: -12.625818252563477
    7. '#print' → logprob: -12.625818252563477
    8. '
' → logprob: -12.750818252563477
    9. 'for' → logprob: -13.625818252563477
    10. '(print' → logprob: -15.125818252563477

Token 290: '(rect' (ID: 68123)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04712552949786186
    2. '(rect' → logprob: -3.1721255779266357
    3. '('' → logprob: -5.922125339508057
    4. '(f' → logprob: -7.422125339508057
    5. '()' → logprob: -7.922125339508057
    6. '("("' → logprob: -7.922125339508057
    7. '(`' → logprob: -10.547125816345215
    8. '("' → logprob: -10.547125816345215
    9. 'rect' → logprob: -11.297125816345215
    10. '(len' → logprob: -11.547125816345215

Token 291: 'angles' (ID: 34011)
  Prédit: 'angles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angles' → logprob: -2.7610454708337784e-05
    2. 'anges' → logprob: -10.875027656555176
    3. 'ang' → logprob: -12.000027656555176
    4. 'les' → logprob: -14.375027656555176
    5. 's' → logprob: -14.500027656555176
    6. 'an' → logprob: -14.625027656555176
    7. 'angle' → logprob: -15.875027656555176
    8. 'gles' → logprob: -16.00002670288086
    9. 'ANGLES' → logprob: -16.12502670288086
    10. 'a' → logprob: -16.37502670288086

Token 292: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1602841466665268
    2. ',' → logprob: -1.910284161567688
    3. '+' → logprob: -10.410284042358398
    4. ' )' → logprob: -11.785284042358398
    5. ',)' → logprob: -12.410284042358398
    6. ' ,' → logprob: -12.410284042358398
    7. '),' → logprob: -12.910284042358398
    8. ' +' → logprob: -13.035284042358398
    9. ')}' → logprob: -13.285284042358398
    10. ')
' → logprob: -13.410284042358398

Token 293: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -18.0
    3. '
' → logprob: -18.375
    4. ' print' → logprob: -20.5
    5. 'prints' → logprob: -21.125
    6. 'println' → logprob: -21.375
    7. 'printf' → logprob: -22.0
    8. '``' → logprob: -22.25
    9. '#print' → logprob: -22.25
    10. '(print' → logprob: -22.5

Token 294: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.25
    3. '(rhs' → logprob: -20.125
    4. 'r' → logprob: -20.5
    5. ' (' → logprob: -21.375
    6. 'rh' → logprob: -22.375
    7. '(
' → logprob: -22.375
    8. '((' → logprob: -22.875
    9. ' rh' → logprob: -23.0
    10. '()' → logprob: -23.375

Token 295: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.8074162653647363e-05
    2. 'hob' → logprob: -11.000018119812012
    3. 'hom' → logprob: -14.375018119812012
    4. 'hamb' → logprob: -14.875018119812012
    5. 'hb' → logprob: -15.750018119812012
    6. '<h' → logprob: -16.500017166137695
    7. 'rh' → logprob: -17.000017166137695
    8. 'hog' → logprob: -17.250017166137695
    9. '	h' → logprob: -17.250017166137695
    10. 'horn' → logprob: -17.375017166137695

Token 296: 'omb' (ID: 2722)
  Prédit: 'omb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omb' → logprob: -8.876193169271573e-05
    2. 'омб' → logprob: -10.250088691711426
    3. 'ombs' → logprob: -10.625088691711426
    4. 'ob' → logprob: -10.875088691711426
    5. 'ombies' → logprob: -12.750088691711426
    6. 'mb' → logprob: -12.875088691711426
    7. 'om' → logprob: -13.750088691711426
    8. 'ombres' → logprob: -13.875088691711426
    9. 'ombo' → logprob: -14.250088691711426
    10. 'ombi' → logprob: -14.250088691711426

Token 297: 'uses' (ID: 5977)
  Prédit: 'uses'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uses' → logprob: -0.0006970656104385853
    2. 'b' → logprob: -7.625697135925293
    3. 'us' → logprob: -9.000697135925293
    4. 'h' → logprob: -10.250697135925293
    5. 'ob' → logprob: -11.125697135925293
    6. 'oses' → logprob: -11.625697135925293
    7. '```' → logprob: -11.750697135925293
    8. ' uses' → logprob: -12.750697135925293
    9. 'ubes' → logprob: -12.750697135925293
    10. 'odes' → logprob: -13.375697135925293

Token 298: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')
' → logprob: -16.125
    3. ' )' → logprob: -16.875
    4. ')`' → logprob: -19.25
    5. '')' → logprob: -19.375
    6. '))' → logprob: -19.5
    7. '()' → logprob: -19.625
    8. '),' → logprob: -19.875
    9. '())' → logprob: -20.0
    10. '）' → logprob: -20.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 296
Tokens correctement prédits (1ère position, stricte): 105
Tokens correctement prédits (1ère position, avec adaptation): 109
Tokens correctement prédits (top 10): 220
Précision stricte (1ère position): 35.47%
Précision adaptée (1ère position): 36.82%
Précision (top 10): 74.32%
================================================================================
