================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:01:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

for line in sys.stdin:
    a = line.strip()
    if not a:
        continue
    a = int(a)
    pos = a % 39
    if pos == 0:
        pos = 39
    print(f"3C{pos:02d}")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'for' (ID: 1938)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18268179893493652
    2. '\n' → logprob: -2.1826817989349365
    3. 'import' → logprob: -3.5576817989349365
    4. '<|end|>' → logprob: -4.932682037353516
    5. '' → logprob: -5.807682037353516
    6. 'newline' → logprob: -5.932682037353516
    7. '\' → logprob: -6.057682037353516
    8. 'print' → logprob: -6.432682037353516
    9. '[' → logprob: -6.557682037353516
    10. '<|end|>' → logprob: -6.807682037353516

Token 4: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0005637573776766658
    2. '  ' → logprob: -7.750563621520996
    3. ' i' → logprob: -9.000563621520996
    4. '_' → logprob: -13.750563621520996
    5. ' space' → logprob: -13.875563621520996
    6. ' ```' → logprob: -14.000563621520996
    7. ' ‌' → logprob: -14.125563621520996
    8. ' )' → logprob: -14.250563621520996
    9. ' ' → logprob: -14.500563621520996
    10. ' ﻿' → logprob: -14.750563621520996

Token 5: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10139565914869308
    2. 'in' → logprob: -2.601395606994629
    3. '[' → logprob: -4.101395606994629
    4. ':' → logprob: -6.226395606994629
    5. ' ' → logprob: -6.851395606994629
    6. '.' → logprob: -7.851395606994629
    7. '[:]' → logprob: -7.976395606994629
    8. '[]' → logprob: -8.476395606994629
    9. '  ' → logprob: -8.601395606994629
    10. '(' → logprob: -8.726395606994629

Token 6: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.0622611939907074
    2. 'sys' → logprob: -2.8122611045837402
    3. '=sys' → logprob: -9.062261581420898
    4. ' ' → logprob: -10.062261581420898
    5. ' iter' → logprob: -10.562261581420898
    6. ' file' → logprob: -10.687261581420898
    7. '	sys' → logprob: -10.812261581420898
    8. '(sys' → logprob: -11.062261581420898
    9. ' open' → logprob: -11.812261581420898
    10. '```' → logprob: -11.937261581420898

Token 7: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04670343175530434
    2. '.stdin' → logprob: -3.421703338623047
    3. '.readline' → logprob: -4.671703338623047
    4. '.argv' → logprob: -6.421703338623047
    5. '.stdout' → logprob: -7.171703338623047
    6. ' .' → logprob: -7.546703338623047
    7. '```' → logprob: -9.046703338623047
    8. '.import' → logprob: -9.296703338623047
    9. '.readlines' → logprob: -9.296703338623047
    10. '.input' → logprob: -9.796703338623047

Token 8: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.457669562427327e-05
    2. ':
' → logprob: -10.50007438659668
    3. ' :' → logprob: -11.37507438659668
    4. '[:]' → logprob: -11.37507438659668
    5. ':**' → logprob: -11.75007438659668
    6. '):' → logprob: -12.62507438659668
    7. '>:' → logprob: -12.87507438659668
    8. '':' → logprob: -13.25007438659668
    9. '():' → logprob: -13.37507438659668
    10. '.readline' → logprob: -13.75007438659668

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00032390307751484215
    2. '    
' → logprob: -8.250324249267578
    3. ' print' → logprob: -10.500324249267578
    4. '   ' → logprob: -11.250324249267578
    5. '```' → logprob: -12.000324249267578
    6. 'print' → logprob: -12.375324249267578
    7. '    ' → logprob: -12.625324249267578
    8. ' if' → logprob: -13.375324249267578
    9. ' ' → logprob: -14.125324249267578
    10. '       ' → logprob: -14.125324249267578

Token 10: ' a' (ID: 261)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6116622686386108
    2. '   ' → logprob: -0.8616622686386108
    3. ' print' → logprob: -3.4866623878479004
    4. '    ' → logprob: -6.1116623878479
    5. 'pass' → logprob: -7.1116623878479
    6. ' line' → logprob: -7.3616623878479
    7. ' pass' → logprob: -7.7366623878479
    8. 'line' → logprob: -8.736661911010742
    9. ' if' → logprob: -10.111661911010742
    10. 'rstrip' → logprob: -10.486661911010742

Token 11: ' =' (ID: 314)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.7360483407974243
    2. 'dd' → logprob: -2.1110482215881348
    3. ' =' → logprob: -2.1110482215881348
    4. '.' → logprob: -2.2360482215881348
    5. 'pp' → logprob: -2.2360482215881348
    6. '=' → logprob: -2.7360482215881348
    7. 'd' → logprob: -2.9860482215881348
    8. ' ' → logprob: -3.1110482215881348
    9. 'r' → logprob: -3.1110482215881348
    10. 'p' → logprob: -3.6110482215881348

Token 12: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.07553217560052872
    2. 'line' → logprob: -3.2005321979522705
    3. ' int' → logprob: -3.7005321979522705
    4. 'int' → logprob: -4.950531959533691
    5. ' float' → logprob: -9.700531959533691
    6. ' ' → logprob: -9.950531959533691
    7. '	line' → logprob: -10.450531959533691
    8. '   ' → logprob: -10.700531959533691
    9. ' a' → logprob: -11.700531959533691
    10. 'a' → logprob: -11.950531959533691

Token 13: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.09078602492809296
    2. '.split' → logprob: -3.0907859802246094
    3. '.' → logprob: -3.7157859802246094
    4. '.rstrip' → logprob: -4.090785980224609
    5. '.readline' → logprob: -9.84078598022461
    6. 'rstrip' → logprob: -9.96578598022461
    7. 'strip' → logprob: -10.46578598022461
    8. ' .' → logprob: -10.96578598022461
    9. 'split' → logprob: -11.09078598022461
    10. '.startswith' → logprob: -11.21578598022461

Token 14: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12714438140392303
    2. '(' → logprob: -2.1271443367004395
    3. '(
' → logprob: -10.252144813537598
    4. '('' → logprob: -10.627144813537598
    5. ' ()' → logprob: -10.877144813537598
    6. '`()' → logprob: -11.252144813537598
    7. ')' → logprob: -11.377144813537598
    8. '().' → logprob: -11.502144813537598
    9. '(

' → logprob: -11.627144813537598
    10. '"' → logprob: -11.752144813537598

Token 15: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 16: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5425220131874084
    2. ' if' → logprob: -1.1675219535827637
    3. '   ' → logprob: -2.6675219535827637
    4. ' ' → logprob: -4.417521953582764
    5. ':' → logprob: -5.167521953582764
    6. 'print' → logprob: -5.667521953582764
    7. '<|end|>' → logprob: -5.792521953582764
    8. '    ' → logprob: -6.417521953582764
    9. '```' → logprob: -6.417521953582764
    10. 'i' → logprob: -6.667521953582764

Token 17: ' not' (ID: 625)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.23186418414115906
    2. ' not' → logprob: -1.9818642139434814
    3. 'a' → logprob: -2.7318642139434814
    4. ' ' → logprob: -5.731863975524902
    5. 'not' → logprob: -7.856863975524902
    6. ' len' → logprob: -9.231863975524902
    7. ''' → logprob: -9.231863975524902
    8. ' '' → logprob: -9.981863975524902
    9. '"' → logprob: -10.231863975524902
    10. '  ' → logprob: -10.356863975524902

Token 18: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.07008560001850128
    2. 'a' → logprob: -2.6950855255126953
    3. ' ' → logprob: -8.820085525512695
    4. ' ' → logprob: -15.070085525512695
    5. '   ' → logprob: -15.070085525512695
    6. '  ' → logprob: -15.195085525512695
    7. '	a' → logprob: -15.445085525512695
    8. ' isinstance' → logprob: -15.820085525512695
    9. '(a' → logprob: -16.320085525512695
    10. '_a' → logprob: -16.820085525512695

Token 19: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005631613312289119
    2. ' :' → logprob: -7.750563144683838
    3. ':
' → logprob: -9.375563621520996
    4. ' or' → logprob: -10.375563621520996
    5. ':return' → logprob: -12.125563621520996
    6. '):' → logprob: -12.625563621520996
    7. ' continue' → logprob: -13.125563621520996
    8. '.' → logprob: -13.750563621520996
    9. 'continue' → logprob: -14.375563621520996
    10. ':

' → logprob: -14.500563621520996

Token 20: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014017757959663868
    2. '   ' → logprob: -4.639017581939697
    3. ' break' → logprob: -5.639017581939697
    4. 'break' → logprob: -8.139018058776855
    5. ' continue' → logprob: -8.639018058776855
    6. 'continue' → logprob: -9.514018058776855
    7. '	break' → logprob: -9.764018058776855
    8. '    ' → logprob: -10.139018058776855
    9. '           ' → logprob: -11.139018058776855
    10. '     ' → logprob: -11.764018058776855

Token 21: ' continue' (ID: 4901)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.22900526225566864
    2. 'break' → logprob: -1.604005217552185
    3. '   ' → logprob: -5.854005336761475
    4. '       ' → logprob: -7.354005336761475
    5. '	break' → logprob: -10.479004859924316
    6. ' continue' → logprob: -11.354004859924316
    7. 'continue' (adapté à ' continue') → logprob: -11.479004859924316
    8. ' ' → logprob: -11.854004859924316
    9. '```' → logprob: -11.979004859924316
    10. '    ' → logprob: -12.979004859924316

Token 22: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004567780997604132
    2. '    
' → logprob: -5.504567623138428
    3. '       ' → logprob: -9.379568099975586
    4. '```' → logprob: -9.629568099975586
    5. 'a' → logprob: -9.754568099975586
    6. '        
' → logprob: -10.004568099975586
    7. '    ' → logprob: -10.254568099975586
    8. '<|end|>' → logprob: -10.379568099975586
    9. '  
' → logprob: -10.629568099975586
    10. '\n' → logprob: -10.629568099975586

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00039944887976162136
    2. 'print' → logprob: -8.375399589538574
    3. '    
' → logprob: -8.750399589538574
    4. ' print' → logprob: -13.000399589538574
    5. '```' → logprob: -13.375399589538574
    6. '<|end|>' → logprob: -13.750399589538574
    7. '       ' → logprob: -14.125399589538574
    8. 'a' → logprob: -14.125399589538574
    9. '    ' → logprob: -14.500399589538574
    10. '        
' → logprob: -14.625399589538574

Token 24: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45335376262664795
    2. 'print' → logprob: -1.078353762626648
    3. 'if' → logprob: -4.3283538818359375
    4. 'try' → logprob: -5.5783538818359375
    5. ' print' → logprob: -6.5783538818359375
    6. 'b' → logprob: -6.7033538818359375
    7. ' if' → logprob: -6.7033538818359375
    8. 'a' (adapté à ' a') → logprob: -6.9533538818359375
    9. '       ' → logprob: -7.9533538818359375
    10. 'result' → logprob: -8.078353881835938

Token 25: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04045611247420311
    2. ' =' → logprob: -4.415456295013428
    3. '.split' → logprob: -4.790456295013428
    4. '.' → logprob: -4.915456295013428
    5. '+' → logprob: -5.790456295013428
    6. '==' → logprob: -6.040456295013428
    7. '+=' → logprob: -6.665456295013428
    8. ',' → logprob: -7.040456295013428
    9. '%' → logprob: -7.290456295013428
    10. '[' → logprob: -7.665456295013428

Token 26: ' int' (ID: 677)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.02964448928833
    2. 'a' → logprob: -1.15464448928833
    3. ' int' → logprob: -1.52964448928833
    4. 'int' → logprob: -2.27964448928833
    5. ' list' → logprob: -5.15464448928833
    6. 'list' → logprob: -6.77964448928833
    7. ' float' → logprob: -7.52964448928833
    8. ' map' → logprob: -8.029644012451172
    9. '   ' → logprob: -8.154644012451172
    10. 'float' → logprob: -8.654644012451172

Token 27: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.10021205991506577
    2. '(' → logprob: -2.3502120971679688
    3. 'a' → logprob: -13.350212097167969
    4. ' (' → logprob: -13.600212097167969
    5. '(
' → logprob: -14.225212097167969
    6. '('' → logprob: -14.350212097167969
    7. '(line' → logprob: -14.600212097167969
    8. '(A' → logprob: -14.725212097167969
    9. '(x' → logprob: -16.47521209716797
    10. '(

' → logprob: -16.47521209716797

Token 28: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8908587662735954e-05
    2. '))' → logprob: -11.750019073486328
    3. '+' → logprob: -12.500019073486328
    4. ')
' → logprob: -12.875019073486328
    5. '   ' → logprob: -13.500019073486328
    6. ' )' → logprob: -13.625019073486328
    7. ')))' → logprob: -15.250019073486328
    8. '#' → logprob: -15.625019073486328
    9. ')a' → logprob: -15.750019073486328
    10. 'a' → logprob: -16.000019073486328

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00934660341590643
    2. '+' → logprob: -5.3843464851379395
    3. '    
' → logprob: -6.3843464851379395
    4. '<|end|>' → logprob: -6.7593464851379395
    5. '
' → logprob: -8.259346961975098
    6. '  ' → logprob: -8.634346961975098
    7. ')' → logprob: -8.759346961975098
    8. '    ' → logprob: -8.759346961975098
    9. '\n' → logprob: -8.884346961975098
    10. ' ' → logprob: -8.884346961975098

Token 30: ' pos' (ID: 1253)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025891030207276344
    2. ' if' → logprob: -4.150890827178955
    3. 'if' → logprob: -5.400890827178955
    4. ' ' → logprob: -6.525890827178955
    5. '+' → logprob: -6.900890827178955
    6. '    
' → logprob: -7.275890827178955
    7. '    ' → logprob: -7.525890827178955
    8. '  ' → logprob: -8.025891304016113
    9. ')' → logprob: -8.775891304016113
    10. ' 
' → logprob: -8.775891304016113

Token 31: ' =' (ID: 314)
  Prédit: 'itive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itive' → logprob: -1.0749679803848267
    2. ' =' → logprob: -1.3249679803848267
    3. 'itions' → logprob: -1.6999679803848267
    4. 'ition' → logprob: -2.574967861175537
    5. 'sible' → logprob: -3.824967861175537
    6. ' +=' → logprob: -3.824967861175537
    7. '_' → logprob: -4.324967861175537
    8. 'itivity' → logprob: -4.324967861175537
    9. 's' → logprob: -4.449967861175537
    10. '=' → logprob: -4.449967861175537

Token 32: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5041614770889282
    2. '0' → logprob: -1.0041614770889282
    3. '[]' → logprob: -4.629161357879639
    4. 'len' → logprob: -5.129161357879639
    5. '-' → logprob: -5.254161357879639
    6. 'max' → logprob: -5.754161357879639
    7. '[a' → logprob: -6.629161357879639
    8. ' a' → logprob: -7.254161357879639
    9. ' ' → logprob: -7.254161357879639
    10. '[' → logprob: -7.254161357879639

Token 33: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6574837565422058
    2. ' +' → logprob: -0.9074837565422058
    3. ' if' → logprob: -3.7824838161468506
    4. '+' → logprob: -3.9074838161468506
    5. '%' → logprob: -4.2824835777282715
    6. ' >' → logprob: -5.1574835777282715
    7. ' ==' → logprob: -5.5324835777282715
    8. ' **' → logprob: -5.6574835777282715
    9. ' -' → logprob: -6.0324835777282715
    10. ' ' → logprob: -6.0324835777282715

Token 34: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5726228356361389
    2. '2' → logprob: -1.8226227760314941
    3. '3' → logprob: -2.322622776031494
    4. ' ' → logprob: -3.197622776031494
    5. '5' → logprob: -3.572622776031494
    6. '4' → logprob: -3.822622776031494
    7. '100' → logprob: -3.947622776031494
    8. '7' → logprob: -4.072622776031494
    9. '42' → logprob: -4.572622776031494
    10. '6' → logprob: -4.947622776031494

Token 35: '39' (ID: 3255)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.8591227531433105
    2. '3' → logprob: -2.1091227531433105
    3. '7' → logprob: -2.1091227531433105
    4. '2' → logprob: -2.7341227531433105
    5. '4' → logprob: -2.8591227531433105
    6. '5' → logprob: -2.9841227531433105
    7. '42' → logprob: -3.2341227531433105
    8. '100' → logprob: -3.7341227531433105
    9. '11' → logprob: -3.9841227531433105
    10. '6' → logprob: -3.9841227531433105

Token 36: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5801803469657898
    2. '
' → logprob: -1.5801804065704346
    3. '<|end|>' → logprob: -1.8301804065704346
    4. ' ' → logprob: -3.7051804065704346
    5. '    
' → logprob: -4.2051801681518555
    6. '\n' → logprob: -4.8301801681518555
    7. ' if' → logprob: -4.9551801681518555
    8. 'print' → logprob: -5.3301801681518555
    9. '+' → logprob: -6.2051801681518555
    10. ')' → logprob: -6.2051801681518555

Token 38: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0156121253967285
    2. ' ' → logprob: -1.2656121253967285
    3. 'print' → logprob: -2.2656121253967285
    4. ' if' → logprob: -2.8906121253967285
    5. 'if' (adapté à ' if') → logprob: -3.2656121253967285
    6. ':' → logprob: -3.5156121253967285
    7. '+' → logprob: -3.7656121253967285
    8. '    ' → logprob: -3.8906121253967285
    9. '.' → logprob: -4.3906121253967285
    10. ')' → logprob: -4.6406121253967285

Token 39: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.009415572509169579
    2. 'pos' → logprob: -4.759415626525879
    3. ' a' → logprob: -7.634415626525879
    4. ' ' → logprob: -8.509415626525879
    5. 'a' → logprob: -9.759415626525879
    6. ' not' → logprob: -10.634415626525879
    7. '(pos' → logprob: -11.134415626525879
    8. ' (' → logprob: -12.634415626525879
    9. '	pos' → logprob: -12.884415626525879
    10. ' ' → logprob: -13.009415626525879

Token 40: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06490669399499893
    2. '==' → logprob: -2.814906597137451
    3. ' !=' → logprob: -7.064906597137451
    4. ' <' → logprob: -7.064906597137451
    5. ':' → logprob: -7.564906597137451
    6. ' >' → logprob: -8.56490707397461
    7. ' ' → logprob: -8.93990707397461
    8. '>' → logprob: -9.31490707397461
    9. ' <=' → logprob: -9.68990707397461
    10. ' in' → logprob: -9.68990707397461

Token 41: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04798341169953346
    2. ' ' → logprob: -3.422983407974243
    3. '1' → logprob: -5.422983646392822
    4. '37' → logprob: -6.797983646392822
    5. '7' → logprob: -7.172983646392822
    6. '3' → logprob: -7.172983646392822
    7. '9' → logprob: -7.297983646392822
    8. '32' → logprob: -7.547983646392822
    9. '4' → logprob: -7.672983646392822
    10. '2' → logprob: -7.672983646392822

Token 42: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01251376885920763
    2. '1' → logprob: -5.887513637542725
    3. ' ' → logprob: -6.137513637542725
    4. '3' → logprob: -7.262513637542725
    5. '7' → logprob: -7.262513637542725
    6. '9' → logprob: -7.387513637542725
    7. '38' → logprob: -7.387513637542725
    8. '37' → logprob: -7.512513637542725
    9. '4' → logprob: -7.762513637542725
    10. '5' → logprob: -7.887513637542725

Token 43: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009425500174984336
    2. ':
' → logprob: -7.000942707061768
    3. '   ' → logprob: -11.62594223022461
    4. ' :' → logprob: -11.87594223022461
    5. '       ' → logprob: -12.25094223022461
    6. ' or' → logprob: -12.75094223022461
    7. ' and' → logprob: -13.50094223022461
    8. ':return' → logprob: -13.50094223022461
    9. ':

' → logprob: -13.87594223022461
    10. '):' → logprob: -14.25094223022461

Token 44: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024807436391711235
    2. '   ' → logprob: -4.024807453155518
    3. ':' → logprob: -5.524807453155518
    4. ' print' → logprob: -7.024807453155518
    5. 'print' → logprob: -7.024807453155518
    6. ':
' → logprob: -9.02480697631836
    7. '           ' → logprob: -9.27480697631836
    8. ' continue' → logprob: -9.64980697631836
    9. '    ' → logprob: -10.14980697631836
    10. '0' → logprob: -10.21230697631836

Token 45: ' pos' (ID: 1253)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3701156973838806
    2. ' print' → logprob: -1.6201157569885254
    3. 'print' → logprob: -2.3701157569885254
    4. ' continue' → logprob: -5.120115756988525
    5. ' break' → logprob: -5.495115756988525
    6. '   ' → logprob: -5.745115756988525
    7. 'continue' → logprob: -6.620115756988525
    8. 'break' → logprob: -6.870115756988525
    9. '    ' → logprob: -8.307615280151367
    10. '           ' → logprob: -8.307615280151367

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6460506916046143
    2. '=' → logprob: -0.7710506916046143
    3. ' +=' → logprob: -4.896050453186035
    4. '+=' → logprob: -5.521050453186035
    5. '   ' → logprob: -7.396050453186035
    6. 'print' → logprob: -7.896050453186035
    7. ':' → logprob: -8.646050453186035
    8. ' ==' → logprob: -8.646050453186035
    9. '==' → logprob: -8.896050453186035
    10. ' ' → logprob: -9.396050453186035

Token 47: ' ' (ID: 220)
  Prédit: '39'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '39' → logprob: -0.002421318320557475
    2. ' ' → logprob: -6.1274213790893555
    3. '1' → logprob: -8.502421379089355
    4. '0' → logprob: -11.939921379089355
    5. 'a' → logprob: -12.252421379089355
    6. 'pos' → logprob: -12.627421379089355
    7. '   ' → logprob: -12.939921379089355
    8. '3' → logprob: -13.064921379089355
    9. '  ' → logprob: -13.564921379089355
    10. '2' → logprob: -13.877421379089355

Token 48: '39' (ID: 3255)
  Prédit: '39'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '39' → logprob: -0.00012356207298580557
    2. '1' → logprob: -9.500123977661133
    3. 'pos' → logprob: -11.000123977661133
    4. ' ' → logprob: -11.125123977661133
    5. 'a' → logprob: -12.000123977661133
    6. '0' → logprob: -12.000123977661133
    7. '3' → logprob: -13.187623977661133
    8. '9' → logprob: -15.000123977661133
    9. '   ' → logprob: -15.375123977661133
    10. '2' → logprob: -15.562623977661133

Token 49: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006533118896186352
    2. 'print' → logprob: -5.381533145904541
    3. '    
' → logprob: -6.881533145904541
    4. '#' → logprob: -8.381532669067383
    5. '+' → logprob: -9.381532669067383
    6. '*' → logprob: -9.631532669067383
    7. ')' → logprob: -9.631532669067383
    8. '```' → logprob: -9.756532669067383
    9. '-' → logprob: -9.881532669067383
    10. '<|end|>' → logprob: -10.131532669067383

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027592763304710388
    2. 'print' → logprob: -4.277592658996582
    3. '#' → logprob: -6.027592658996582
    4. ' ' → logprob: -6.402592658996582
    5. '```' → logprob: -6.402592658996582
    6. '<|end|>' → logprob: -6.527592658996582
    7. '    
' → logprob: -6.902592658996582
    8. ')' → logprob: -7.277592658996582
    9. ' print' → logprob: -7.277592658996582
    10. ':' → logprob: -7.402592658996582

Token 51: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.32528287172317505
    2. '   ' → logprob: -1.3252828121185303
    3. ' print' → logprob: -5.325283050537109
    4. '#' → logprob: -6.450283050537109
    5. ')' → logprob: -6.950283050537109
    6. ':' → logprob: -7.450283050537109
    7. ' ' → logprob: -7.450283050537109
    8. '<|end|>' → logprob: -7.700283050537109
    9. '*' → logprob: -7.825283050537109
    10. 'if' → logprob: -8.07528305053711

Token 52: '(f' (ID: 1526)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.3495791256427765
    2. '(a' → logprob: -1.724579095840454
    3. '(' → logprob: -2.224579095840454
    4. '(chr' → logprob: -5.349579334259033
    5. 'pos' → logprob: -6.224579334259033
    6. '('' → logprob: -7.099579334259033
    7. 'a' → logprob: -8.224578857421875
    8. '("("' → logprob: -8.474578857421875
    9. '((' → logprob: -8.724578857421875
    10. '(f' → logprob: -9.224578857421875

Token 53: '"' (ID: 1)
  Prédit: '"{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.35333251953125
    2. ''{' → logprob: -1.47833251953125
    3. '{' → logprob: -2.85333251953125
    4. '"' → logprob: -4.60333251953125
    5. ''' → logprob: -7.10333251953125
    6. '"%' → logprob: -8.97833251953125
    7. ')' → logprob: -8.97833251953125
    8. 'pos' → logprob: -9.10333251953125
    9. '{})' → logprob: -9.22833251953125
    10. 'a' → logprob: -9.35333251953125

Token 54: '3' (ID: 18)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.20713992416858673
    2. 'pos' → logprob: -2.7071399688720703
    3. 'Pos' → logprob: -3.8321399688720703
    4. 'Day' → logprob: -4.08213996887207
    5. '%' → logprob: -4.70713996887207
    6. 'Position' → logprob: -4.70713996887207
    7. '{'' → logprob: -5.20713996887207
    8. 'a' → logprob: -5.51963996887207
    9. 'position' → logprob: -5.70713996887207
    10. '{"' → logprob: -5.83213996887207

Token 55: 'C' (ID: 34)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.3614257574081421
    2. ' {' → logprob: -1.611425757408142
    3. '*' → logprob: -4.236425876617432
    4. ' ' → logprob: -4.611425876617432
    5. '0' → logprob: -4.736425876617432
    6. '-' → logprob: -5.486425876617432
    7. ':' → logprob: -5.486425876617432
    8. ' *' → logprob: -5.611425876617432
    9. '7' → logprob: -5.736425876617432
    10. '{x' → logprob: -5.861425876617432

Token 56: '{' (ID: 90)
  Prédit: '{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.00538316834717989
    2. 'pos' → logprob: -7.130383014678955
    3. '[{' → logprob: -7.130383014678955
    4. ' {' → logprob: -7.380383014678955
    5. '0' → logprob: -7.755383014678955
    6. '{'' → logprob: -8.130383491516113
    7. '[pos' → logprob: -8.255383491516113
    8. '{x' → logprob: -8.380383491516113
    9. '%' → logprob: -8.630383491516113
    10. 'A' → logprob: -8.880383491516113

Token 57: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.005069618113338947
    2. 'a' → logprob: -5.755069732666016
    3. '{' → logprob: -7.130069732666016
    4. ':' → logprob: -7.880069732666016
    5. 'str' → logprob: -8.130069732666016
    6. ' pos' → logprob: -9.005069732666016
    7. '0' → logprob: -9.380069732666016
    8. 'chr' → logprob: -10.380069732666016
    9. ''{' → logprob: -10.380069732666016
    10. '   ' → logprob: -11.005069732666016

Token 58: ':' (ID: 25)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.0030908435583114624
    2. '}' → logprob: -6.753090858459473
    3. ':' → logprob: -7.003090858459473
    4. '")' → logprob: -8.503090858459473
    5. 'd' → logprob: -8.628090858459473
    6. ' }' → logprob: -9.128090858459473
    7. '-' → logprob: -9.253090858459473
    8. 'D' → logprob: -9.503090858459473
    9. '}",' → logprob: -10.128090858459473
    10. '}")
' → logprob: -10.128090858459473

Token 59: '02' (ID: 3286)
  Prédit: '02'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '02' → logprob: -0.041950151324272156
    2. 'd' → logprob: -3.791950225830078
    3. '03' → logprob: -4.291950225830078
    4. '}' → logprob: -6.041950225830078
    5. '0' → logprob: -6.791950225830078
    6. '}")' → logprob: -7.541950225830078
    7. '2' → logprob: -8.166950225830078
    8. '04' → logprob: -8.916950225830078
    9. '01' → logprob: -9.291950225830078
    10. '}"' → logprob: -9.916950225830078

Token 60: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.21346931159496307
    2. '}")' → logprob: -1.8384692668914795
    3. '}' → logprob: -3.4634692668914795
    4. 'x' → logprob: -6.838469505310059
    5. 'X' → logprob: -7.213469505310059
    6. '}"' → logprob: -12.088469505310059
    7. '}")
' → logprob: -12.088469505310059
    8. '}')' → logprob: -12.213469505310059
    9. 'D' → logprob: -12.713469505310059
    10. '}")

' → logprob: -13.088469505310059

Token 61: '}")' (ID: 122365)
  Prédit: '}")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.000621653685811907
    2. '}' → logprob: -8.125621795654297
    3. ' }' → logprob: -8.875621795654297
    4. '")' → logprob: -9.000621795654297
    5. '}")
' → logprob: -11.625621795654297
    6. '}{' → logprob: -11.625621795654297
    7. 'd' → logprob: -12.250621795654297
    8. '}"' → logprob: -12.250621795654297
    9. '}\"' → logprob: -12.250621795654297
    10. '}')' → logprob: -12.250621795654297


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 59
Tokens correctement prédits (1ère position, stricte): 24
Tokens correctement prédits (1ère position, avec adaptation): 26
Tokens correctement prédits (top 10): 46
Précision stricte (1ère position): 40.68%
Précision adaptée (1ère position): 44.07%
Précision (top 10): 77.97%
================================================================================
