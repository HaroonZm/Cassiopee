================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:55:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    try:
        d = int(input())
        s = 0
        for x in range(d, 600, d):
            s += d * (x ** 2)
        print(s)
    except EOFError:
        break
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06445569545030594
    2. '\n' → logprob: -4.314455509185791
    3. ' ' → logprob: -4.689455509185791
    4. '```' → logprob: -4.814455509185791
    5. '    
' → logprob: -4.939455509185791
    6. ' 
' → logprob: -5.189455509185791
    7. '\' → logprob: -5.314455509185791
    8. '    ' → logprob: -5.439455509185791
    9. ':' → logprob: -5.939455509185791
    10. '<|end|>' → logprob: -6.189455509185791

Token 4: ' try' (ID: 2075)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19517217576503754
    2. '    ' → logprob: -2.695172071456909
    3. ' ' → logprob: -3.070172071456909
    4. '```' → logprob: -3.195172071456909
    5. '       ' → logprob: -5.195172309875488
    6. '    
' → logprob: -5.695172309875488
    7. ' pass' → logprob: -5.945172309875488
    8. '  ' → logprob: -6.445172309875488
    9. 'pass' → logprob: -6.445172309875488
    10. ' ```' → logprob: -6.945172309875488

Token 5: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00039944887976162136
    2. ' :' → logprob: -8.125399589538574
    3. '):' → logprob: -10.625399589538574
    4. '       ' → logprob: -10.625399589538574
    5. '   ' → logprob: -10.875399589538574
    6. ':
' → logprob: -11.625399589538574
    7. '    ' → logprob: -11.875399589538574
    8. '():' → logprob: -12.375399589538574
    9. '':' → logprob: -12.625399589538574
    10. '":' → logprob: -13.625399589538574

Token 6: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003841636935248971
    2. '   ' → logprob: -5.753841400146484
    3. ':' → logprob: -8.128841400146484
    4. '    ' → logprob: -9.378841400146484
    5. ' :' → logprob: -9.378841400146484
    6. ':
' → logprob: -9.753841400146484
    7. ' ' → logprob: -10.378841400146484
    8. '```' → logprob: -10.878841400146484
    9. '           ' → logprob: -11.628841400146484
    10. '     ' → logprob: -11.628841400146484

Token 7: ' d' (ID: 272)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2917356789112091
    2. '       ' → logprob: -2.1667356491088867
    3. '   ' → logprob: -2.2917356491088867
    4. ':' → logprob: -4.291735649108887
    5. ' ' → logprob: -5.416735649108887
    6. '(' → logprob: -5.416735649108887
    7. 'print' → logprob: -5.916735649108887
    8. 'except' → logprob: -6.166735649108887
    9. '        ' → logprob: -6.541735649108887
    10. '          ' → logprob: -6.791735649108887

Token 8: ' =' (ID: 314)
  Prédit: 'ata'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ata' → logprob: -0.6072049140930176
    2. '=' → logprob: -1.7322049140930176
    3. ' =' → logprob: -1.8572049140930176
    4. 'a' → logprob: -3.1072049140930176
    5. 'e' → logprob: -3.2322049140930176
    6. 'ict' → logprob: -4.482204914093018
    7. '[' → logprob: -5.107204914093018
    8. 'ictionary' → logprob: -5.107204914093018
    9. ' ' → logprob: -5.232204914093018
    10. '   ' → logprob: -5.982204914093018

Token 9: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5055263042449951
    2. 'int' → logprob: -2.130526304244995
    3. ' input' → logprob: -2.630526304244995
    4. ' json' → logprob: -2.880526304244995
    5. ' dict' → logprob: -3.130526304244995
    6. 'input' → logprob: -3.755526304244995
    7. ' data' → logprob: -3.755526304244995
    8. 'json' → logprob: -4.380526542663574
    9. 'dict' → logprob: -4.380526542663574
    10. ' open' → logprob: -4.755526542663574

Token 10: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04862665385007858
    2. '(input' → logprob: -3.048626661300659
    3. '('' → logprob: -11.298626899719238
    4. '(
' → logprob: -12.173626899719238
    5. 'input' → logprob: -12.673626899719238
    6. '(user' → logprob: -12.798626899719238
    7. ' (' → logprob: -13.173626899719238
    8. '()' → logprob: -13.423626899719238
    9. '(open' → logprob: -13.423626899719238
    10. '(line' → logprob: -13.548626899719238

Token 11: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07501151412725449
    2. '('' → logprob: -3.0750114917755127
    3. '("("' → logprob: -4.450011730194092
    4. '()' → logprob: -4.700011730194092
    5. ')' → logprob: -5.950011730194092
    6. ''' → logprob: -7.450011730194092
    7. '(""))' → logprob: -7.825011730194092
    8. '(()' → logprob: -8.325011253356934
    9. '(
' → logprob: -8.450011253356934
    10. '())' → logprob: -8.450011253356934

Token 12: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014860451221466064
    2. '       ' → logprob: -4.3898606300354
    3. '   ' → logprob: -7.1398606300354
    4. '\' → logprob: -8.264860153198242
    5. '\n' → logprob: -8.514860153198242
    6. '           ' → logprob: -8.514860153198242
    7. '```' → logprob: -8.639860153198242
    8. ')
' → logprob: -9.139860153198242
    9. '    ' → logprob: -9.389860153198242
    10. ' ' → logprob: -9.764860153198242

Token 13: ' s' (ID: 265)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028893496841192245
    2. ')' → logprob: -3.77889347076416
    3. '           ' → logprob: -6.52889347076416
    4. '   ' → logprob: -6.77889347076416
    5. '        ' → logprob: -7.90389347076416
    6. '\n' → logprob: -8.02889347076416
    7. '        
' → logprob: -8.15389347076416
    8. '\' → logprob: -8.40389347076416
    9. '      ' → logprob: -8.65389347076416
    10. '+' → logprob: -8.65389347076416

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27483564615249634
    2. '=' → logprob: -2.2748355865478516
    3. 'tr' → logprob: -2.8998355865478516
    4. '.' → logprob: -3.6498355865478516
    5. '[' → logprob: -4.274835586547852
    6. 'um' → logprob: -4.274835586547852
    7. ' +=' → logprob: -5.024835586547852
    8. 'trip' → logprob: -5.399835586547852
    9. ' ' → logprob: -5.774835586547852
    10. 't' → logprob: -6.149835586547852

Token 15: ' ' (ID: 220)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.0626392737030983
    2. 'input' → logprob: -2.8126392364501953
    3. ' str' → logprob: -7.937639236450195
    4. ' ' → logprob: -9.187639236450195
    5. 'str' → logprob: -9.812639236450195
    6. ' int' → logprob: -10.187639236450195
    7. '"' → logprob: -10.687639236450195
    8. ''' → logprob: -11.187639236450195
    9. '   ' → logprob: -11.437639236450195
    10. ' "' → logprob: -11.562639236450195

Token 16: '0' (ID: 15)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0024039584677666426
    2. 'str' → logprob: -6.502403736114502
    3. ' input' → logprob: -7.127403736114502
    4. 'int' → logprob: -10.25240421295166
    5. '""' → logprob: -10.87740421295166
    6. '0' → logprob: -12.25240421295166
    7. '   ' → logprob: -12.25240421295166
    8. '(input' → logprob: -12.37740421295166
    9. '"' → logprob: -12.50240421295166
    10. ' str' → logprob: -13.00240421295166

Token 17: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5551726222038269
    2. '<|end|>' → logprob: -1.4301726818084717
    3. '       ' → logprob: -2.0551726818084717
    4. ' ' → logprob: -3.9301726818084717
    5. '<|end|>' → logprob: -4.930172443389893
    6. '   ' → logprob: -4.930172443389893
    7. ')' → logprob: -5.430172443389893
    8. ' +' → logprob: -5.430172443389893
    9. '    ' → logprob: -6.055172443389893
    10. 'while' → logprob: -6.180172443389893

Token 18: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14160864055156708
    2. '<|end|>' → logprob: -2.641608715057373
    3. '+' → logprob: -3.266608715057373
    4. ')' → logprob: -4.516608715057373
    5. '   ' → logprob: -5.641608715057373
    6. '<|end|>' → logprob: -5.891608715057373
    7. ' +' → logprob: -6.516608715057373
    8. ' ' → logprob: -7.641608715057373
    9. '
' → logprob: -8.016608238220215
    10. ',' → logprob: -8.141608238220215

Token 19: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.33006879687309265
    2. 'for' (adapté à ' for') → logprob: -1.330068826675415
    3. ' ' → logprob: -4.580068588256836
    4. '       ' → logprob: -5.955068588256836
    5. '   ' → logprob: -6.580068588256836
    6. 'd' → logprob: -7.830068588256836
    7. '    ' → logprob: -7.830068588256836
    8. '<|end|>' → logprob: -7.955068588256836
    9. '	for' → logprob: -8.205068588256836
    10. ')' → logprob: -8.330068588256836

Token 20: ' x' (ID: 1215)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.19182825088500977
    2. 'i' → logprob: -2.4418282508850098
    3. ' ' → logprob: -2.5668282508850098
    4. ' _' → logprob: -4.94182825088501
    5. '_' → logprob: -5.69182825088501
    6. 'd' → logprob: -9.316827774047852
    7. ' d' → logprob: -10.066827774047852
    8. ')' → logprob: -10.941827774047852
    9. '  ' → logprob: -11.066827774047852
    10. ' range' → logprob: -11.316827774047852

Token 21: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004875788930803537
    2. 'in' → logprob: -5.379875659942627
    3. ' ' → logprob: -8.379876136779785
    4. 'range' → logprob: -12.379876136779785
    5. '  ' → logprob: -12.754876136779785
    6. 's' → logprob: -12.754876136779785
    7. ',' → logprob: -12.879876136779785
    8. ' ,' → logprob: -13.254876136779785
    9. 'import' → logprob: -13.504876136779785
    10. ')' → logprob: -14.004876136779785

Token 22: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3133693337440491
    2. 'range' → logprob: -1.3133692741394043
    3. ' ' → logprob: -10.063369750976562
    4. 'd' → logprob: -10.938369750976562
    5. '	range' → logprob: -11.813369750976562
    6. 'r' → logprob: -12.188369750976562
    7. 'rang' → logprob: -12.438369750976562
    8. ' d' → logprob: -12.563369750976562
    9. '  ' → logprob: -12.563369750976562
    10. '[' → logprob: -12.813369750976562

Token 23: '(d' (ID: 2572)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.576059103012085
    2. '(d' → logprob: -0.826059103012085
    3. '(n' → logprob: -10.451059341430664
    4. ' (' → logprob: -10.576059341430664
    5. '(s' → logprob: -10.951059341430664
    6. '(len' → logprob: -11.326059341430664
    7. '((' → logprob: -11.826059341430664
    8. 'd' → logprob: -12.451059341430664
    9. '(-' → logprob: -12.451059341430664
    10. '(x' → logprob: -12.576059341430664

Token 24: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05186004191637039
    2. '+' → logprob: -3.8018600940704346
    3. ' ):' → logprob: -4.1768598556518555
    4. ',' → logprob: -4.8018598556518555
    5. ')' → logprob: -6.1768598556518555
    6. ' +' → logprob: -6.8018598556518555
    7. '):
' → logprob: -7.6768598556518555
    8. ' ,' → logprob: -7.8018598556518555
    9. ' )' → logprob: -8.676859855651855
    10. ':' → logprob: -9.051859855651855

Token 25: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9210487604141235
    2. ' ' → logprob: -1.1710487604141235
    3. 'd' → logprob: -1.7960487604141235
    4. ' d' → logprob: -2.546048641204834
    5. ' -' → logprob: -3.921048641204834
    6. '-' → logprob: -4.046048641204834
    7. '1' → logprob: -5.546048641204834
    8. '100' → logprob: -5.921048641204834
    9. '10' → logprob: -6.671048641204834
    10. '101' → logprob: -7.671048641204834

Token 26: '600' (ID: 6718)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1560637354850769
    2. '-' → logprob: -2.5310637950897217
    3. 'd' → logprob: -3.4060637950897217
    4. ' ' → logprob: -4.656063556671143
    5. '1' → logprob: -5.031063556671143
    6. ' -' → logprob: -5.031063556671143
    7. '100' → logprob: -6.281063556671143
    8. '10' → logprob: -6.406063556671143
    9. '2' → logprob: -6.781063556671143
    10. '101' → logprob: -7.281063556671143

Token 27: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5439798831939697
    2. '):' → logprob: -1.5439798831939697
    3. '0' → logprob: -2.6689798831939697
    4. ' +' → logprob: -2.7939798831939697
    5. ',' → logprob: -3.6689798831939697
    6. '00' → logprob: -4.293979644775391
    7. '000' → logprob: -4.293979644775391
    8. ' ):' → logprob: -4.418979644775391
    9. '1' → logprob: -6.043979644775391
    10. ')' → logprob: -6.168979644775391

Token 28: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2850295603275299
    2. '1' → logprob: -2.285029649734497
    3. '2' → logprob: -3.535029649734497
    4. '3' → logprob: -3.785029649734497
    5. '10' → logprob: -3.910029649734497
    6. '5' → logprob: -4.410029411315918
    7. '6' → logprob: -4.535029411315918
    8. '7' → logprob: -4.910029411315918
    9. '4' → logprob: -5.035029411315918
    10. ' -' → logprob: -5.410029411315918

Token 29: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005787058267742395
    2. '):
' → logprob: -5.380786895751953
    3. '+' → logprob: -7.505786895751953
    4. ')' → logprob: -7.880786895751953
    5. '):
' → logprob: -9.630786895751953
    6. ' ):' → logprob: -9.880786895751953
    7. ',' → logprob: -10.130786895751953
    8. '   ' → logprob: -10.130786895751953
    9. '       ' → logprob: -11.755786895751953
    10. ':' → logprob: -11.755786895751953

Token 30: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007398976478725672
    2. '+' → logprob: -5.882399082183838
    3. '<|end|>' → logprob: -6.757399082183838
    4. ' ' → logprob: -7.132399082183838
    5. 's' → logprob: -7.507399082183838
    6. '\n' → logprob: -7.757399082183838
    7. '            ' → logprob: -7.757399082183838
    8. ':' → logprob: -8.25739860534668
    9. '               ' → logprob: -8.88239860534668
    10. '       ' → logprob: -9.25739860534668

Token 31: ' s' (ID: 265)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7790784239768982
    2. ' if' → logprob: -1.029078483581543
    3. ' ' → logprob: -2.654078483581543
    4. '            ' → logprob: -3.279078483581543
    5. ' s' → logprob: -3.779078483581543
    6. 's' (adapté à ' s') → logprob: -3.904078483581543
    7. 'if' → logprob: -4.404078483581543
    8. '+' → logprob: -4.654078483581543
    9. '               ' → logprob: -5.779078483581543
    10. ' x' → logprob: -6.654078483581543

Token 32: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5763670206069946
    2. ' +=' → logprob: -0.8263670206069946
    3. '+' → logprob: -7.951366901397705
    4. '=' → logprob: -9.826367378234863
    5. ' =' → logprob: -11.326367378234863
    6. ' +' → logprob: -12.701367378234863
    7. '+=(' → logprob: -13.326367378234863
    8. ']+=' → logprob: -13.701367378234863
    9. '+='' → logprob: -13.951367378234863
    10. '+="' → logprob: -14.201367378234863

Token 33: ' d' (ID: 272)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.281652569770813
    2. ' x' → logprob: -1.406652569770813
    3. '1' → logprob: -7.906652450561523
    4. ' ' → logprob: -10.281652450561523
    5. '600' → logprob: -10.781652450561523
    6. 'd' → logprob: -10.906652450561523
    7. '2' → logprob: -11.281652450561523
    8. 'int' → logprob: -11.531652450561523
    9. '6' → logprob: -12.031652450561523
    10. '10' → logprob: -13.031652450561523

Token 34: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.19315963983535767
    2. '<|end|>' → logprob: -2.568159580230713
    3. '
' → logprob: -3.818159580230713
    4. ' ' → logprob: -4.068159580230713
    5. '+
' → logprob: -4.318159580230713
    6. ' +' → logprob: -4.318159580230713
    7. '\n' → logprob: -5.318159580230713
    8. '*' → logprob: -5.443159580230713
    9. '   ' → logprob: -5.568159580230713
    10. 'x' → logprob: -5.818159580230713

Token 35: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.23921678960323334
    2. '(x' → logprob: -2.6142168045043945
    3. '2' → logprob: -2.7392168045043945
    4. '(' → logprob: -3.8642168045043945
    5. '(d' → logprob: -4.1142168045043945
    6. 'd' → logprob: -4.8642168045043945
    7. '3' → logprob: -5.1142168045043945
    8. '6' → logprob: -5.2392168045043945
    9. '600' → logprob: -5.3642168045043945
    10. ' (' → logprob: -5.7392168045043945

Token 36: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.25472864508628845
    2. '600' → logprob: -2.0047285556793213
    3. ' x' → logprob: -3.2547285556793213
    4. '(' → logprob: -4.3797287940979
    5. '(x' → logprob: -4.3797287940979
    6. ' (' → logprob: -4.5047287940979
    7. 'd' → logprob: -5.3797287940979
    8. ' ' → logprob: -6.0047287940979
    9. '599' → logprob: -6.0047287940979
    10. '(d' → logprob: -7.1297287940979

Token 37: ' **' (ID: 6240)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.2357923537492752
    2. '//' → logprob: -1.6107923984527588
    3. ' <=' → logprob: -5.86079216003418
    4. ')' → logprob: -6.48579216003418
    5. '-' → logprob: -6.73579216003418
    6. ' ' → logprob: -6.98579216003418
    7. '<=' → logprob: -7.48579216003418
    8. '+' → logprob: -7.73579216003418
    9. ' >=' → logprob: -8.11079216003418
    10. ' !=' → logprob: -8.11079216003418

Token 38: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05701285973191261
    2. '0' → logprob: -3.8070127964019775
    3. ' ' → logprob: -4.182013034820557
    4. '-' → logprob: -4.557013034820557
    5. '3' → logprob: -5.432013034820557
    6. '1' → logprob: -6.182013034820557
    7. ' -' → logprob: -7.682013034820557
    8. 'd' → logprob: -9.307012557983398
    9. 'x' → logprob: -9.557012557983398
    10. '(' → logprob: -9.557012557983398

Token 39: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.36074110865592957
    2. '0' → logprob: -1.860741138458252
    3. '-' → logprob: -1.985741138458252
    4. '1' → logprob: -4.985741138458252
    5. '3' → logprob: -6.360741138458252
    6. '(' → logprob: -7.985741138458252
    7. '(-' → logprob: -8.110740661621094
    8. ' ' → logprob: -8.485740661621094
    9. ' -' → logprob: -8.860740661621094
    10. 'd' → logprob: -8.860740661621094

Token 40: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025184655096381903
    2. ' )' → logprob: -6.752518653869629
    3. ')
' → logprob: -7.752518653869629
    4. '+' → logprob: -8.502518653869629
    5. '))' → logprob: -8.627518653869629
    6. '       ' → logprob: -8.877518653869629
    7. '   ' → logprob: -9.002518653869629
    8. ')))' → logprob: -9.252518653869629
    9. '           ' → logprob: -9.627518653869629
    10. ' +' → logprob: -10.252518653869629

Token 41: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4096980392932892
    2. '<|end|>' → logprob: -2.284698009490967
    3. '
' → logprob: -2.409698009490967
    4. '   ' → logprob: -2.909698009490967
    5. '           ' → logprob: -3.409698009490967
    6. '\n' → logprob: -3.909698009490967
    7. ')' → logprob: -4.659698009490967
    8. '<|end|>' → logprob: -5.659698009490967
    9. 'except' → logprob: -5.784698009490967
    10. '
' → logprob: -6.284698009490967

Token 42: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0192844867706299
    2. '
' → logprob: -1.1442844867706299
    3. '   ' → logprob: -2.01928448677063
    4. '\n' → logprob: -2.26928448677063
    5. '<|end|>' → logprob: -3.14428448677063
    6. '\' → logprob: -5.269284248352051
    7. ' ' → logprob: -5.519284248352051
    8. ')' → logprob: -5.519284248352051
    9. '<|end|>' → logprob: -5.644284248352051
    10. '           ' → logprob: -5.769284248352051

Token 43: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.24465365707874298
    2. '(' → logprob: -1.6196537017822266
    3. '()' → logprob: -4.119653701782227
    4. 's' → logprob: -6.119653701782227
    5. '('' → logprob: -7.744653701782227
    6. ' (' → logprob: -9.494653701782227
    7. '(x' → logprob: -11.244653701782227
    8. ' ()' → logprob: -11.244653701782227
    9. '(f' → logprob: -11.494653701782227
    10. '("("' → logprob: -11.494653701782227

Token 44: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3438327843905427e-05
    2. '))' → logprob: -11.12502384185791
    3. ' )' → logprob: -12.75002384185791
    4. '   ' → logprob: -13.12502384185791
    5. '`)' → logprob: -13.50002384185791
    6. ')))' → logprob: -14.25002384185791
    7. ')
' → logprob: -14.50002384185791
    8. '       ' → logprob: -14.62502384185791
    9. ')`' → logprob: -15.37502384185791
    10. '')' → logprob: -15.62502384185791

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15402573347091675
    2. 'except' → logprob: -2.5290257930755615
    3. ' except' → logprob: -3.0290257930755615
    4. '	except' → logprob: -4.279025554656982
    5. '<|end|>' → logprob: -8.15402603149414
    6. '    
' → logprob: -9.27902603149414
    7. '       ' → logprob: -9.27902603149414
    8. '
' → logprob: -9.65402603149414
    9. '<|end|>' → logprob: -10.40402603149414
    10. '    ' → logprob: -10.52902603149414

Token 46: ' except' (ID: 6384)
  Prédit: 'except'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'except' (adapté à ' except') → logprob: -0.3012290894985199
    2. '   ' → logprob: -1.9262291193008423
    3. ' except' → logprob: -2.1762290000915527
    4. '	except' → logprob: -7.426229000091553
    5. '       ' → logprob: -8.551229476928711
    6. 'ex' → logprob: -9.301229476928711
    7. '    
' → logprob: -11.176229476928711
    8. '```' → logprob: -12.176229476928711
    9. '\n' → logprob: -12.301229476928711
    10. '        
' → logprob: -12.801229476928711

Token 47: ' EOF' (ID: 72412)
  Prédit: ' EOF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' EOF' → logprob: -0.32033994793891907
    2. ' Value' → logprob: -2.0703399181365967
    3. ' ' → logprob: -2.4453399181365967
    4. ' Exception' → logprob: -2.9453399181365967
    5. ' Keyboard' → logprob: -5.070340156555176
    6. 'EOF' → logprob: -7.445340156555176
    7. ' ' → logprob: -7.445340156555176
    8. ' (' → logprob: -7.570340156555176
    9. ':' → logprob: -7.945340156555176
    10. '  ' → logprob: -9.695340156555176

Token 48: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -1.9361264946837764e-07
    2. 'rror' → logprob: -16.375
    3. ' Error' → logprob: -18.0
    4. 'error' → logprob: -18.5
    5. ':' → logprob: -20.125
    6. 'Er' → logprob: -20.5
    7. '	Error' → logprob: -20.875
    8. '```' → logprob: -20.875
    9. '   ' → logprob: -21.0
    10. 'Erro' → logprob: -21.25

Token 49: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001341792638413608
    2. '       ' → logprob: -7.251341819763184
    3. ':
' → logprob: -7.376341819763184
    4. '):' → logprob: -13.626341819763184
    5. '   ' → logprob: -13.751341819763184
    6. ' :' → logprob: -14.001341819763184
    7. '():' → logprob: -14.376341819763184
    8. '           ' → logprob: -14.501341819763184
    9. ' as' → logprob: -15.251341819763184
    10. ',' → logprob: -15.626341819763184

Token 50: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003488129877950996
    2. '<|end|>' → logprob: -8.750349044799805
    3. '   ' → logprob: -8.875349044799805
    4. ' break' → logprob: -10.750349044799805
    5. '    ' → logprob: -11.875349044799805
    6. '<|end|>' → logprob: -12.125349044799805
    7. '           ' → logprob: -12.250349044799805
    8. '	break' → logprob: -13.125349044799805
    9. '     ' → logprob: -13.250349044799805
    10. '      ' → logprob: -13.250349044799805

Token 51: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.016338041052222252
    2. 'break' (adapté à ' break') → logprob: -4.266337871551514
    3. '       ' → logprob: -6.391337871551514
    4. '   ' → logprob: -7.641337871551514
    5. '	break' → logprob: -11.266338348388672
    6. '           ' → logprob: -14.016338348388672
    7. '    ' → logprob: -14.516338348388672
    8. 'b' → logprob: -14.766338348388672
    9. '_break' → logprob: -14.766338348388672
    10. ' bre' → logprob: -15.266338348388672


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 49
Tokens correctement prédits (1ère position, stricte): 18
Tokens correctement prédits (1ère position, avec adaptation): 19
Tokens correctement prédits (top 10): 37
Précision stricte (1ère position): 36.73%
Précision adaptée (1ère position): 38.78%
Précision (top 10): 75.51%
================================================================================
