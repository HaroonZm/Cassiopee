================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:07:43
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    n=int(input())
    if n==0:
        break
    taro=[int(input()) for _ in range(n)]
    all_cards = set(range(1,2*n+1))
    hanako = sorted(all_cards - set(taro))
    taro.sort()
    t = taro.copy()
    h = hanako.copy()
    turn = 0  # 0: taro, 1: hanako
    field = []
    while t and h:
        if turn == 0:
            hand = t
        else:
            hand = h
        if not field:
            # can play any card: play the smallest
            card = hand[0]
            hand.pop(0)
            field = [card]
            turn = 1 - turn
        else:
            last = field[-1]
            # find smallest card > last
            idx = 0
            while idx < len(hand) and hand[idx] <= last:
                idx += 1
            if idx == len(hand):
                # no card to put, pass, clear field
                field = []
                turn = 1 - turn
            else:
                card = hand[idx]
                hand.pop(idx)
                field.append(card)
                turn = 1 - turn
    # game over
    print(len(t))
    print(len(h))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11692515015602112
    2. '\n' → logprob: -3.6169252395629883
    3. '    ' → logprob: -4.241925239562988
    4. ' ' → logprob: -4.241925239562988
    5. '    
' → logprob: -4.366925239562988
    6. ' 
' → logprob: -4.491925239562988
    7. '\' → logprob: -4.616925239562988
    8. ':' → logprob: -5.366925239562988
    9. '```' → logprob: -5.616925239562988
    10. '<|end|>' → logprob: -5.741925239562988

Token 4: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4148074984550476
    2. '    ' → logprob: -1.9148075580596924
    3. ' ' → logprob: -2.0398075580596924
    4. '```' → logprob: -3.5398075580596924
    5. '       ' → logprob: -4.914807319641113
    6. '  ' → logprob: -5.289807319641113
    7. '    
' → logprob: -5.789807319641113
    8. 'i' → logprob: -6.414807319641113
    9. '`' → logprob: -6.414807319641113
    10. '        
' → logprob: -6.789807319641113

Token 5: '=int' (ID: 37431)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.1091941595077515
    2. ' ' → logprob: -1.2341941595077515
    3. 'o' → logprob: -2.234194278717041
    4. '=' → logprob: -2.359194278717041
    5. '+' → logprob: -2.859194278717041
    6. '   ' → logprob: -3.234194278717041
    7. '_' → logprob: -4.359194278717041
    8. '.' → logprob: -4.359194278717041
    9. 'e' → logprob: -4.859194278717041
    10. '%' → logprob: -4.984194278717041

Token 6: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02056735008955002
    2. '(input' → logprob: -3.8955674171447754
    3. '(code' → logprob: -12.395566940307617
    4. ' (' → logprob: -12.520566940307617
    5. '(user' → logprob: -12.645566940307617
    6. '(n' → logprob: -12.770566940307617
    7. '(raw' → logprob: -13.270566940307617
    8. '()' → logprob: -13.270566940307617
    9. '(
' → logprob: -13.645566940307617
    10. '('' → logprob: -14.395566940307617

Token 7: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15534478425979614
    2. '()' → logprob: -2.6553447246551514
    3. ')' → logprob: -2.7803447246551514
    4. '())' → logprob: -4.7803449630737305
    5. '('' → logprob: -6.5303449630737305
    6. '("("' → logprob: -8.03034496307373
    7. '(""))' → logprob: -8.65534496307373
    8. ' ' → logprob: -8.78034496307373
    9. '(
' → logprob: -8.78034496307373
    10. '))' → logprob: -8.90534496307373

Token 8: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0315721035003662
    2. ' ' → logprob: -1.5315721035003662
    3. ':' → logprob: -2.031572103500366
    4. '<|end|>' → logprob: -2.031572103500366
    5. ')' → logprob: -2.906572103500366
    6. ' if' → logprob: -3.031572103500366
    7. '  ' → logprob: -4.031572341918945
    8. '    ' → logprob: -4.781572341918945
    9. '%' → logprob: -4.906572341918945
    10. ',' → logprob: -5.406572341918945

Token 9: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4077613353729248
    2. '   ' → logprob: -1.4077613353729248
    3. ' if' → logprob: -1.4077613353729248
    4. '<|end|>' → logprob: -2.282761335372925
    5. '    ' → logprob: -2.407761335372925
    6. '  ' → logprob: -3.657761335372925
    7. 'if' (adapté à ' if') → logprob: -3.782761335372925
    8. ')' → logprob: -5.157761573791504
    9. '>' → logprob: -5.782761573791504
    10. ' >' → logprob: -6.032761573791504

Token 10: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0029675960540771484
    2. 'n' → logprob: -6.252967834472656
    3. ' ' → logprob: -7.127967834472656
    4. ' not' → logprob: -8.377967834472656
    5. ' ' → logprob: -12.627967834472656
    6. '  ' → logprob: -14.127967834472656
    7. 'not' → logprob: -14.252967834472656
    8. '(n' → logprob: -15.127967834472656
    9. ')' → logprob: -15.502967834472656
    10. ' (' → logprob: -15.502967834472656

Token 11: '==' (ID: 560)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3879700303077698
    2. '>' → logprob: -2.262969970703125
    3. ' ==' → logprob: -2.262969970703125
    4. ' <' → logprob: -2.887969970703125
    5. ' <=' → logprob: -4.012969970703125
    6. '==' → logprob: -4.012969970703125
    7. '<' → logprob: -4.512969970703125
    8. ' ' → logprob: -5.512969970703125
    9. ' >=' → logprob: -5.887969970703125
    10. '<=' → logprob: -6.637969970703125

Token 12: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38709285855293274
    2. ' ' → logprob: -1.1370928287506104
    3. '1' → logprob: -9.137092590332031
    4. '10' → logprob: -10.012092590332031
    5. '100' → logprob: -11.137092590332031
    6. '32' → logprob: -12.137092590332031
    7. '42' → logprob: -12.137092590332031
    8. '4' → logprob: -12.387092590332031
    9. '9' → logprob: -12.387092590332031
    10. ' -' → logprob: -12.762092590332031

Token 13: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008451257599517703
    2. ' :' → logprob: -8.250844955444336
    3. ':
' → logprob: -8.375844955444336
    4. '       ' → logprob: -8.500844955444336
    5. '   ' → logprob: -9.250844955444336
    6. '    ' → logprob: -10.375844955444336
    7. ':return' → logprob: -11.625844955444336
    8. ':\' → logprob: -12.625844955444336
    9. '      ' → logprob: -13.000844955444336
    10. ' :
' → logprob: -13.375844955444336

Token 14: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006489329971373081
    2. '   ' → logprob: -7.8756489753723145
    3. ' break' → logprob: -9.750648498535156
    4. '    ' → logprob: -10.125648498535156
    5. ':' → logprob: -10.625648498535156
    6. ' ' → logprob: -10.875648498535156
    7. ' ' → logprob: -11.000648498535156
    8. '     ' → logprob: -11.000648498535156
    9. '<|end|>' → logprob: -11.000648498535156
    10. '\n' → logprob: -11.250648498535156

Token 15: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.007524051237851381
    2. '       ' → logprob: -5.382524013519287
    3. '\n' → logprob: -6.257524013519287
    4. 'break' (adapté à ' break') → logprob: -7.882524013519287
    5. ' \' → logprob: -8.507524490356445
    6. '```' → logprob: -9.632524490356445
    7. ' 
' → logprob: -10.007524490356445
    8. '    ' → logprob: -10.007524490356445
    9. '        ' → logprob: -10.007524490356445
    10. ' ' → logprob: -10.257524490356445

Token 16: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.332293152809143
    2. '   ' → logprob: -1.457293152809143
    3. '<|end|>' → logprob: -1.582293152809143
    4. '\n' → logprob: -1.707293152809143
    5. '    
' → logprob: -2.7072930335998535
    6. '\' → logprob: -4.5822930335998535
    7. ':' → logprob: -4.5822930335998535
    8. '  
' → logprob: -5.2072930335998535
    9. ')' → logprob: -5.3322930335998535
    10. '```' → logprob: -5.4572930335998535

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14948377013206482
    2. '
' → logprob: -2.8994836807250977
    3. '    
' → logprob: -2.8994836807250977
    4. '```' → logprob: -4.149483680725098
    5. '<|end|>' → logprob: -5.024483680725098
    6. '  
' → logprob: -5.774483680725098
    7. '\n' → logprob: -6.399483680725098
    8. '   
' → logprob: -8.149483680725098
    9. 'print' → logprob: -8.524483680725098
    10. 'n' → logprob: -8.524483680725098

Token 18: ' tar' (ID: 7057)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06412268429994583
    2. '       ' → logprob: -3.3141226768493652
    3. 'print' → logprob: -5.064122676849365
    4. '    ' → logprob: -5.439122676849365
    5. '```' → logprob: -5.689122676849365
    6. '\' → logprob: -6.064122676849365
    7. ' ' → logprob: -6.064122676849365
    8. '    
' → logprob: -6.314122676849365
    9. '\n' → logprob: -7.064122676849365
    10. ' print' → logprob: -7.314122676849365

Token 19: 'o' (ID: 78)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.0005519599071703851
    2. 'gets' → logprob: -7.875552177429199
    3. 'g' → logprob: -9.5005521774292
    4. 'ge' → logprob: -10.7505521774292
    5. '   ' → logprob: -10.8755521774292
    6. '	get' → logprob: -11.3755521774292
    7. '```' → logprob: -11.3755521774292
    8. '=' → logprob: -12.1255521774292
    9. '	' → logprob: -12.2505521774292
    10. 'GET' → logprob: -12.3755521774292

Token 20: '=[' (ID: 13370)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.1087987422943115
    2. ' ' → logprob: -1.1087987422943115
    3. ' =' → logprob: -1.9837987422943115
    4. '   ' → logprob: -2.7337987422943115
    5. '=' → logprob: -3.4837987422943115
    6. ''s' → logprob: -3.7337987422943115
    7. '.append' → logprob: -3.9837987422943115
    8. '  ' → logprob: -5.108798980712891
    9. ' .' → logprob: -5.233798980712891
    10. ':' → logprob: -5.233798980712891

Token 21: 'int' (ID: 491)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016193903982639313
    2. 'int' → logprob: -4.391193866729736
    3. ' int' → logprob: -6.641193866729736
    4. ']' → logprob: -6.891193866729736
    5. ' ' → logprob: -7.141193866729736
    6. ']int' → logprob: -9.016194343566895
    7. ' ]' → logprob: -9.141194343566895
    8. '   ' → logprob: -9.641194343566895
    9. '(int' → logprob: -10.016194343566895
    10. 'list' → logprob: -10.141194343566895

Token 22: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1984413117170334
    2. '(input' → logprob: -1.8234412670135498
    3. '()]' → logprob: -4.823441505432129
    4. '()' → logprob: -5.323441505432129
    5. '(x' → logprob: -5.573441505432129
    6. '(i' → logprob: -6.698441505432129
    7. ']' → logprob: -8.073441505432129
    8. '(
' → logprob: -9.948441505432129
    9. '(

' → logprob: -9.948441505432129
    10. '(a' → logprob: -10.573441505432129

Token 23: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0012679706560447812
    2. '()' → logprob: -7.126267910003662
    3. '()]' → logprob: -7.751267910003662
    4. '()))' → logprob: -11.37626838684082
    5. '()),' → logprob: -11.37626838684082
    6. ' ())' → logprob: -12.25126838684082
    7. '())
' → logprob: -13.62626838684082
    8. '().' → logprob: -14.50126838684082
    9. '());' → logprob: -14.50126838684082
    10. '(' → logprob: -14.62626838684082

Token 24: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5329832434654236
    2. ')' → logprob: -1.0329833030700684
    3. ' for' → logprob: -3.2829833030700684
    4. 'for' → logprob: -4.282983303070068
    5. '   ' → logprob: -6.657983303070068
    6. ' ()' → logprob: -7.157983303070068
    7. '(' → logprob: -7.157983303070068
    8. ')]' → logprob: -7.157983303070068
    9. '())' → logprob: -7.532983303070068
    10. ']' → logprob: -7.782983303070068

Token 25: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -4.060365608893335e-05
    2. ' ' → logprob: -10.500041007995605
    3. 'range' → logprob: -12.000041007995605
    4. '	range' → logprob: -12.625041007995605
    5. ' _' → logprob: -13.500041007995605
    6. '(range' → logprob: -13.875041007995605
    7. ' xrange' → logprob: -14.250041007995605
    8. '_' → logprob: -15.000041007995605
    9. '_range' → logprob: -15.625041007995605
    10. ' i' → logprob: -16.00004005432129

Token 26: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.48035362362861633
    2. ' range' → logprob: -1.230353593826294
    3. 'range' → logprob: -2.480353593826294
    4. 'in' → logprob: -5.480353832244873
    5. ' ' → logprob: -6.730353832244873
    6. '  ' → logprob: -9.605353355407715
    7. '	range' → logprob: -9.980353355407715
    8. '(range' → logprob: -10.355353355407715
    9. ' xrange' → logprob: -11.855353355407715
    10. '   ' → logprob: -12.730353355407715

Token 27: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018193138763308525
    2. ' range' → logprob: -4.018193244934082
    3. ' ' → logprob: -11.518193244934082
    4. 'ran' → logprob: -12.018193244934082
    5. '[' → logprob: -12.143193244934082
    6. 'r' → logprob: -12.393193244934082
    7. 'rang' → logprob: -12.393193244934082
    8. '   ' → logprob: -12.893193244934082
    9. '	range' → logprob: -13.143193244934082
    10. '(range' → logprob: -13.393193244934082

Token 28: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.006774930749088526
    2. '(' → logprob: -5.00677490234375
    3. ' (' → logprob: -10.00677490234375
    4. 'n' → logprob: -11.75677490234375
    5. '(t' → logprob: -13.13177490234375
    6. ' n' → logprob: -13.38177490234375
    7. ' ' → logprob: -14.25677490234375
    8. '((' → logprob: -14.63177490234375
    9. '(len' → logprob: -15.13177490234375
    10. ')n' → logprob: -15.50677490234375

Token 29: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00021712594025302678
    2. ')])' → logprob: -9.12521743774414
    3. ')' → logprob: -10.00021743774414
    4. ')]
' → logprob: -11.12521743774414
    5. '])]' → logprob: -11.37521743774414
    6. '   ' → logprob: -11.37521743774414
    7. ']' → logprob: -12.00021743774414
    8. ' )' → logprob: -12.25021743774414
    9. '')]' → logprob: -12.75021743774414
    10. '+' → logprob: -12.87521743774414

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05826926603913307
    2. 's' → logprob: -4.558269500732422
    3. '[' → logprob: -4.683269500732422
    4. '    
' → logprob: -4.933269500732422
    5. '<|end|>' → logprob: -5.558269500732422
    6. '    ' → logprob: -5.683269500732422
    7. 'tar' → logprob: -6.058269500732422
    8. 't' → logprob: -6.620769500732422
    9. ' ' → logprob: -6.683269500732422
    10. '```' → logprob: -6.808269500732422

Token 31: ' all' (ID: 722)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.417898178100586
    2. '   ' → logprob: -1.417898178100586
    3. 's' → logprob: -1.792898178100586
    4. 't' → logprob: -2.792898178100586
    5. 'sh' → logprob: -3.042898178100586
    6. 'm' → logprob: -3.292898178100586
    7. 'hana' → logprob: -4.042898178100586
    8. 'y' → logprob: -4.167898178100586
    9. ' ' → logprob: -4.667898178100586
    10. '  ' → logprob: -4.667898178100586

Token 32: '_cards' (ID: 101651)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6495818495750427
    2. '_sum' → logprob: -2.2745819091796875
    3. '_s' → logprob: -2.5245819091796875
    4. '_per' → logprob: -2.7745819091796875
    5. 'sum' → logprob: -3.1495819091796875
    6. '=' → logprob: -3.3995819091796875
    7. '_cards' → logprob: -4.1495819091796875
    8. '_t' → logprob: -4.3995819091796875
    9. 's' → logprob: -4.7745819091796875
    10. 'o' → logprob: -4.7745819091796875

Token 33: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6754631996154785
    2. ' =' → logprob: -0.8004631996154785
    3. '=[]' → logprob: -3.9254631996154785
    4. '=set' → logprob: -3.9254631996154785
    5. '_' → logprob: -7.6754631996154785
    6. '=[' → logprob: -7.9254631996154785
    7. '=sum' → logprob: -8.17546272277832
    8. '_set' → logprob: -8.30046272277832
    9. '[' → logprob: -9.05046272277832
    10. ')' → logprob: -9.17546272277832

Token 34: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.7643269300460815
    2. ' set' → logprob: -1.3893269300460815
    3. ' list' → logprob: -2.639327049255371
    4. 'list' → logprob: -2.764327049255371
    5. 'sorted' → logprob: -3.139327049255371
    6. '[' → logprob: -3.764327049255371
    7. ' sorted' → logprob: -4.014327049255371
    8. 'sum' → logprob: -4.139327049255371
    9. ' [' → logprob: -4.389327049255371
    10. '[t' → logprob: -4.764327049255371

Token 35: '(range' (ID: 50017)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7473504543304443
    2. '(t' → logprob: -1.3723504543304443
    3. '(range' → logprob: -1.3723504543304443
    4. '(' → logprob: -3.9973504543304443
    5. ' ()' → logprob: -8.497350692749023
    6. '([' → logprob: -8.497350692749023
    7. '((' → logprob: -8.622350692749023
    8. '(()' → logprob: -8.997350692749023
    9. '([]' → logprob: -9.247350692749023
    10. 'range' → logprob: -10.622350692749023

Token 36: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.93710636976175e-05
    2. '(n' → logprob: -9.250099182128906
    3. ' (' → logprob: -13.000099182128906
    4. '(len' → logprob: -15.500099182128906
    5. '   ' → logprob: -15.625099182128906
    6. '1' → logprob: -16.125099182128906
    7. ' ' → logprob: -16.250099182128906
    8. '(t' → logprob: -16.250099182128906
    9. '((' → logprob: -16.625099182128906
    10. ')' → logprob: -16.625099182128906

Token 37: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4811280071735382
    2. '1' → logprob: -0.9811279773712158
    3. '(n' → logprob: -5.231128215789795
    4. 'n' → logprob: -6.981128215789795
    5. ' ' → logprob: -7.856128215789795
    6. '2' → logprob: -9.356127738952637
    7. ' (' → logprob: -9.481127738952637
    8. '   ' → logprob: -10.231127738952637
    9. '10' → logprob: -11.106127738952637
    10. '(len' → logprob: -11.293627738952637

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010950665920972824
    2. ',n' → logprob: -4.635950565338135
    3. ' ,' → logprob: -6.760950565338135
    4. '   ' → logprob: -11.010951042175293
    5. ' ' → logprob: -11.885951042175293
    6. 'n' → logprob: -12.885951042175293
    7. '    ' → logprob: -13.135951042175293
    8. '(n' → logprob: -13.635951042175293
    9. ' n' → logprob: -13.885951042175293
    10. '，' → logprob: -14.385951042175293

Token 39: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07356484979391098
    2. ' ' → logprob: -2.9485647678375244
    3. 'n' → logprob: -4.9485650062561035
    4. '13' → logprob: -6.0735650062561035
    5. '14' → logprob: -6.3235650062561035
    6. '10' → logprob: -6.5735650062561035
    7. '49' → logprob: -6.6985650062561035
    8. ' n' → logprob: -6.8235650062561035
    9. '53' → logprob: -7.3235650062561035
    10. '5' → logprob: -7.9485650062561035

Token 40: '*n' (ID: 58470)
  Prédit: '*n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*n' → logprob: -0.032052181661129
    2. '*' → logprob: -3.7820522785186768
    3. ' *' → logprob: -4.782052040100098
    4. 'n' → logprob: -8.032052040100098
    5. '**' → logprob: -10.782052040100098
    6. '0' → logprob: -12.282052040100098
    7. ' n' → logprob: -12.282052040100098
    8. '1' → logprob: -12.407052040100098
    9. ' ' → logprob: -12.657052040100098
    10. '*(' → logprob: -12.782052040100098

Token 41: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004085878375917673
    2. ' +' → logprob: -5.504086017608643
    3. '))' → logprob: -12.379085540771484
    4. '+n' → logprob: -13.504085540771484
    5. '＋' → logprob: -15.504085540771484
    6. ')))' → logprob: -15.504085540771484
    7. ' ' → logprob: -15.754085540771484
    8. ')' → logprob: -15.754085540771484
    9. '1' → logprob: -15.879085540771484
    10. ')+' → logprob: -16.191585540771484

Token 42: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015586259542033076
    2. '+' → logprob: -9.250155448913574
    3. ' ' → logprob: -9.875155448913574
    4. '2' → logprob: -12.500155448913574
    5. ' +' → logprob: -12.500155448913574
    6. ')' → logprob: -15.812655448913574
    7. '   ' → logprob: -16.00015640258789
    8. '```' → logprob: -16.43765640258789
    9. '))' → logprob: -16.50015640258789
    10. ' ' → logprob: -16.75015640258789

Token 43: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.01847497746348381
    2. ')' → logprob: -4.01847505569458
    3. ' ))' → logprob: -8.768474578857422
    4. '))
' → logprob: -9.143474578857422
    5. ')))' → logprob: -10.643474578857422
    6. ' )' → logprob: -11.393474578857422
    7. '})' → logprob: -11.893474578857422
    8. '+' → logprob: -13.018474578857422
    9. '}' → logprob: -13.018474578857422
    10. '))

' → logprob: -13.143474578857422

Token 44: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6291118264198303
    2. '   ' → logprob: -1.0041117668151855
    3. '    
' → logprob: -2.7541117668151855
    4. '<|end|>' → logprob: -4.1291117668151855
    5. '
' → logprob: -5.2541117668151855
    6. '  
' → logprob: -5.6291117668151855
    7. ' 
' → logprob: -6.2541117668151855
    8. '   
' → logprob: -6.3791117668151855
    9. ')' → logprob: -6.7541117668151855
    10. '<|end|>' → logprob: -6.8791117668151855

Token 45: ' han' (ID: 6648)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4660012125968933
    2. '    
' → logprob: -1.216001272201538
    3. 'k' → logprob: -4.091001033782959
    4. 'm' → logprob: -4.966001033782959
    5. ' tak' → logprob: -5.341001033782959
    6. ' hana' → logprob: -5.466001033782959
    7. 's' → logprob: -5.841001033782959
    8. ' ur' → logprob: -5.841001033782959
    9. ' k' → logprob: -5.966001033782959
    10. 'hiro' → logprob: -6.091001033782959

Token 46: 'ako' (ID: 5938)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.026555603370070457
    2. 'd' → logprob: -4.52655553817749
    3. 'ako' → logprob: -5.02655553817749
    4. 'abi' → logprob: -5.15155553817749
    5. 'da' → logprob: -7.52655553817749
    6. 'aji' → logprob: -8.026556015014648
    7. 'ak' → logprob: -8.151556015014648
    8. '```' → logprob: -8.276556015014648
    9. 'ami' → logprob: -8.526556015014648
    10. 'ab' → logprob: -9.026556015014648

Token 47: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2781704068183899
    2. ' =' → logprob: -2.028170347213745
    3. '=[' → logprob: -2.778170347213745
    4. '_cards' → logprob: -3.403170347213745
    5. '_' → logprob: -5.028170585632324
    6. '=[]' → logprob: -6.153170585632324
    7. '=set' → logprob: -6.278170585632324
    8. ' =[' → logprob: -6.403170585632324
    9. '[' → logprob: -6.903170585632324
    10. '=_' → logprob: -7.653170585632324

Token 48: ' sorted' (ID: 20099)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -1.3184622526168823
    2. ' list' → logprob: -1.3184622526168823
    3. ' all' → logprob: -1.4434622526168823
    4. 'list' → logprob: -1.5684622526168823
    5. ' sorted' → logprob: -5.068462371826172
    6. '[' → logprob: -5.568462371826172
    7. ' [' → logprob: -5.568462371826172
    8. 'sorted' → logprob: -5.818462371826172
    9. ' ' → logprob: -6.568462371826172
    10. '   ' → logprob: -7.693462371826172

Token 49: '(all' (ID: 34727)
  Prédit: '(all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(all' → logprob: -0.9246062636375427
    2. '([' → logprob: -1.1746063232421875
    3. '(list' → logprob: -1.2996063232421875
    4. '(' → logprob: -4.4246063232421875
    5. '(set' → logprob: -5.0496063232421875
    6. '(t' → logprob: -5.9246063232421875
    7. '((' → logprob: -7.6746063232421875
    8. '([(' → logprob: -9.799606323242188
    9. '({' → logprob: -9.924606323242188
    10. '([]' → logprob: -10.674606323242188

Token 50: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.0011653418187052011
    2. '_card' → logprob: -7.876165390014648
    3. '_all' → logprob: -8.251165390014648
    4. '(all' → logprob: -8.251165390014648
    5. 'all' → logprob: -10.001165390014648
    6. ')' → logprob: -10.251165390014648
    7. '(' → logprob: -10.376165390014648
    8. '(card' → logprob: -11.001165390014648
    9. '(cards' → logprob: -11.001165390014648
    10. 'Cards' → logprob: -11.251165390014648

Token 51: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2520264685153961
    2. '-' → logprob: -1.5020264387130737
    3. '.d' → logprob: -9.627026557922363
    4. ' ' → logprob: -11.252026557922363
    5. '   ' → logprob: -11.752026557922363
    6. '-d' → logprob: -12.127026557922363
    7. ' ' → logprob: -12.877026557922363
    8. ')' → logprob: -13.877026557922363
    9. '-set' → logprob: -14.377026557922363
    10. '  ' → logprob: -15.377026557922363

Token 52: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.054944343864917755
    2. ' set' → logprob: -2.9299442768096924
    3. '{' → logprob: -10.054944038391113
    4. '   ' → logprob: -12.304944038391113
    5. '	set' → logprob: -12.304944038391113
    6. ' {' → logprob: -12.554944038391113
    7. ' ' → logprob: -12.804944038391113
    8. '=set' → logprob: -13.429944038391113
    9. '(set' → logprob: -14.304944038391113
    10. ')set' → logprob: -14.304944038391113

Token 53: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0017037445213645697
    2. '(' → logprob: -6.37670373916626
    3. ' (' → logprob: -14.001704216003418
    4. ')' → logprob: -15.126704216003418
    5. ' ' → logprob: -15.876704216003418
    6. 't' → logprob: -16.0017032623291
    7. '(T' → logprob: -16.3767032623291
    8. '(s' → logprob: -16.7517032623291
    9. '(
' → logprob: -17.2517032623291
    10. '((' → logprob: -17.8767032623291

Token 54: 'aro' (ID: 8421)
  Prédit: 'aro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aro' → logprob: -0.00011403311509639025
    2. 't' → logprob: -9.125114440917969
    3. 'аро' → logprob: -13.375114440917969
    4. 'a' → logprob: -13.625114440917969
    5. ')' → logprob: -15.000114440917969
    6. 'ar' → logprob: -15.125114440917969
    7. 'ro' → logprob: -15.125114440917969
    8. '   ' → logprob: -15.375114440917969
    9. 'h' → logprob: -15.750114440917969
    10. '(t' → logprob: -16.12511444091797

Token 55: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00477899145334959
    2. ')' → logprob: -5.379778861999512
    3. '))
' → logprob: -9.629778861999512
    4. ')))' → logprob: -9.754778861999512
    5. ' ))' → logprob: -10.879778861999512
    6. '),' → logprob: -12.129778861999512
    7. '()))' → logprob: -12.504778861999512
    8. '))

' → logprob: -13.379778861999512
    9. '   ' → logprob: -13.504778861999512
    10. ')
' → logprob: -14.004778861999512

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23353776335716248
    2. 'print' → logprob: -2.1085376739501953
    3. '<|end|>' → logprob: -2.9835376739501953
    4. ' print' → logprob: -4.358537673950195
    5. ')' → logprob: -4.483537673950195
    6. '```' → logprob: -5.483537673950195
    7. '[' → logprob: -6.608537673950195
    8. ' for' → logprob: -6.733537673950195
    9. '#' → logprob: -6.858537673950195
    10. '    
' → logprob: -7.233537673950195

Token 57: ' tar' (ID: 7057)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.17430685460567474
    2. 'for' → logprob: -2.174306869506836
    3. '   ' → logprob: -3.549306869506836
    4. ' for' → logprob: -4.799306869506836
    5. ' print' → logprob: -5.799306869506836
    6. 'if' → logprob: -5.924306869506836
    7. '    
' → logprob: -6.549306869506836
    8. '
' → logprob: -7.549306869506836
    9. ' 
' → logprob: -7.674306869506836
    10. ' if' → logprob: -8.549306869506836

Token 58: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -1.9361264946837764e-07
    2. 'о' → logprob: -17.375
    3. 'ō' → logprob: -18.625
    4. '	o' → logprob: -18.75
    5. ' o' → logprob: -18.875
    6. '[o' → logprob: -18.875
    7. '   ' → logprob: -19.0
    8. 'ο' → logprob: -19.5
    9. '```' → logprob: -20.0
    10. 'O' → logprob: -20.625

Token 59: '.sort' (ID: 19551)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.180879816180095e-05
    2. '(' → logprob: -10.000051498413086
    3. '()
' → logprob: -12.750051498413086
    4. ' ()' → logprob: -13.875051498413086
    5. '())' → logprob: -14.625051498413086
    6. '()>' → logprob: -14.750051498413086
    7. '()]' → logprob: -15.125051498413086
    8. '()

' → logprob: -15.125051498413086
    9. '()<' → logprob: -15.250051498413086
    10. '()`' → logprob: -15.375051498413086

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00358451041392982
    2. ' for' → logprob: -6.753584384918213
    3. '    
' → logprob: -7.253584384918213
    4. '
' → logprob: -7.378584384918213
    5. '<|end|>' → logprob: -8.003584861755371
    6. 'for' → logprob: -8.128584861755371
    7. '```' → logprob: -8.753584861755371
    8. 'print' → logprob: -10.003584861755371
    9. ' print' → logprob: -10.503584861755371
    10. 'n' → logprob: -10.503584861755371

Token 62: ' t' (ID: 260)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6700029373168945
    2. 'for' → logprob: -2.0450029373168945
    3. 'i' → logprob: -2.4200029373168945
    4. ' for' → logprob: -2.5450029373168945
    5. 'if' → logprob: -2.9200029373168945
    6. '
' → logprob: -3.1700029373168945
    7. ' i' → logprob: -3.5450029373168945
    8. 'print' → logprob: -3.9200029373168945
    9. ' if' → logprob: -4.2950029373168945
    10. 'idx' → logprob: -5.1700029373168945

Token 63: ' =' (ID: 314)
  Prédit: 'aro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aro' → logprob: -0.6127315163612366
    2. 'for' → logprob: -1.8627314567565918
    3. 'print' → logprob: -2.487731456756592
    4. 'r' → logprob: -3.237731456756592
    5. '   ' → logprob: -3.362731456756592
    6. 'i' → logprob: -3.862731456756592
    7. 'o' → logprob: -3.987731456756592
    8. 'ar' → logprob: -3.987731456756592
    9. 'a' → logprob: -4.237731456756592
    10. ' for' → logprob: -4.612731456756592

Token 64: ' tar' (ID: 7057)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009044447913765907
    2. ' ' → logprob: -5.259044647216797
    3. 'len' → logprob: -6.009044647216797
    4. '[]' → logprob: -7.759044647216797
    5. 'h' → logprob: -8.134044647216797
    6. 'i' → logprob: -9.009044647216797
    7. 'han' → logprob: -9.259044647216797
    8. '1' → logprob: -9.384044647216797
    9. '[' → logprob: -9.509044647216797
    10. 'j' → logprob: -9.759044647216797

Token 65: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -8.244413766078651e-05
    2. '[' → logprob: -10.500082015991211
    3. 'O' → logprob: -11.250082015991211
    4. '[o' → logprob: -11.375082015991211
    5. 'о' → logprob: -12.500082015991211
    6. '0' → logprob: -12.625082015991211
    7. '	o' → logprob: -12.625082015991211
    8. ' o' → logprob: -12.875082015991211
    9. ''o' → logprob: -13.125082015991211
    10. ' ' → logprob: -13.625082015991211

Token 66: '.copy' (ID: 22925)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.5543175935745239
    2. '+' → logprob: -1.304317593574524
    3. '[::-' → logprob: -2.4293174743652344
    4. '[' → logprob: -3.8043174743652344
    5. '.copy' → logprob: -3.9293174743652344
    6. '[:' → logprob: -4.179317474365234
    7. ' +' → logprob: -5.554317474365234
    8. '<|end|>' → logprob: -6.429317474365234
    9. '_copy' → logprob: -7.304317474365234
    10. '[]' → logprob: -7.679317474365234

Token 67: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.668304245569743e-05
    2. '()
' → logprob: -10.500046730041504
    3. '(' → logprob: -11.500046730041504
    4. '()
' → logprob: -12.750046730041504
    5. '()

' → logprob: -13.500046730041504
    6. '()`' → logprob: -13.750046730041504
    7. '()]' → logprob: -14.000046730041504
    8. '()[' → logprob: -14.375046730041504
    9. ' ()' → logprob: -14.500046730041504
    10. '[]' → logprob: -15.000046730041504

Token 68: '   ' (ID: 271)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.5530642867088318
    2. '.' → logprob: -1.6780643463134766
    3. '   ' → logprob: -3.0530643463134766
    4. '=' → logprob: -3.5530643463134766
    5. '<|end|>' → logprob: -3.6780643463134766
    6. '.remove' → logprob: -3.9280643463134766
    7. ' =' → logprob: -3.9280643463134766
    8. '.reverse' → logprob: -4.053064346313477
    9. '.append' → logprob: -4.428064346313477
    10. 'while' → logprob: -5.053064346313477

Token 69: ' h' (ID: 312)
  Prédit: 'han'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'han' → logprob: -1.0746536254882812
    2. 'while' → logprob: -1.5746536254882812
    3. 't' → logprob: -1.8246536254882812
    4. 'h' (adapté à ' h') → logprob: -2.5746536254882812
    5. 'for' → logprob: -3.0746536254882812
    6. '   ' → logprob: -3.1996536254882812
    7. ' while' → logprob: -3.1996536254882812
    8. 'tar' → logprob: -4.074653625488281
    9. 's' → logprob: -4.699653625488281
    10. 'hile' → logprob: -4.699653625488281

Token 70: ' =' (ID: 314)
  Prédit: 'an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.0003855093673337251
    2. '   ' → logprob: -9.375385284423828
    3. 'anayo' → logprob: -9.375385284423828
    4. ' =' → logprob: -9.625385284423828
    5. '=' → logprob: -10.375385284423828
    6. 'a' → logprob: -10.750385284423828
    7. '[' → logprob: -11.250385284423828
    8. '    ' → logprob: -11.375385284423828
    9. '	an' → logprob: -11.375385284423828
    10. 'anato' → logprob: -11.875385284423828

Token 71: ' han' (ID: 6648)
  Prédit: 'han'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'han' → logprob: -0.16026617586612701
    2. ' han' → logprob: -1.9102661609649658
    3. ' ' → logprob: -11.660265922546387
    4. '[]' → logprob: -11.785265922546387
    5. 'hen' → logprob: -11.910265922546387
    6. 'Han' → logprob: -13.160265922546387
    7. 'h' → logprob: -13.410265922546387
    8. '   ' → logprob: -13.472765922546387
    9. ' hen' → logprob: -13.535265922546387
    10. 'hana' → logprob: -13.597765922546387

Token 72: 'ako' (ID: 5938)
  Prédit: 'ako'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ako' → logprob: -2.629921436891891e-05
    2. 'a' → logprob: -11.25002670288086
    3. 'ak' → logprob: -12.00002670288086
    4. 'ko' → logprob: -13.12502670288086
    5. '   ' → logprob: -13.37502670288086
    6. 'oko' → logprob: -14.37502670288086
    7. 'ако' → logprob: -14.50002670288086
    8. 'an' → logprob: -15.00002670288086
    9. '[' → logprob: -15.00002670288086
    10. 'ano' → logprob: -15.00002670288086

Token 73: '.copy' (ID: 22925)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -6.229872087715194e-05
    2. '()
' → logprob: -9.875061988830566
    3. '(' → logprob: -12.500061988830566
    4. '()
' → logprob: -13.125061988830566
    5. '())' → logprob: -13.750061988830566
    6. ')' → logprob: -13.750061988830566
    7. ' ()' → logprob: -14.125061988830566
    8. '()]' → logprob: -14.375061988830566
    9. '()

' → logprob: -14.750061988830566
    10. '   ' → logprob: -15.250061988830566

Token 75: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7299521565437317
    2. '   ' → logprob: -0.8549521565437317
    3. '<|end|>' → logprob: -2.854952096939087
    4. 'while' → logprob: -4.229952335357666
    5. ' while' → logprob: -4.604952335357666
    6. '    
' → logprob: -5.729952335357666
    7. 'n' → logprob: -6.354952335357666
    8. '```' → logprob: -7.104952335357666
    9. '  
' → logprob: -7.104952335357666
    10. '\n' → logprob: -7.604952335357666

Token 76: ' turn' (ID: 3716)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7871899604797363
    2. 'i' → logprob: -1.6621899604797363
    3. 'while' → logprob: -2.2871899604797363
    4. 'if' → logprob: -3.5371899604797363
    5. 'for' → logprob: -3.6621899604797363
    6. 'n' → logprob: -3.6621899604797363
    7. ' i' → logprob: -3.7871899604797363
    8. 't' → logprob: -3.9121899604797363
    9. ' while' → logprob: -4.162189960479736
    10. 's' → logprob: -4.412189960479736

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18363742530345917
    2. '=' → logprob: -1.8086373805999756
    3. '_' → logprob: -5.933637619018555
    4. ' ' → logprob: -6.933637619018555
    5. ' ==' → logprob: -8.808637619018555
    6. 's' → logprob: -10.058637619018555
    7. ',' → logprob: -11.183637619018555
    8. '='' → logprob: -11.558637619018555
    9. ')' → logprob: -12.058637619018555
    10. ' ='' → logprob: -12.183637619018555

Token 78: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.37450408935546875
    2. ' ' → logprob: -1.2495040893554688
    3. ' True' → logprob: -4.499504089355469
    4. '1' → logprob: -4.624504089355469
    5. 'True' → logprob: -5.374504089355469
    6. 'False' → logprob: -10.124504089355469
    7. ' False' → logprob: -10.374504089355469
    8. '"' → logprob: -10.374504089355469
    9. ''' → logprob: -11.249504089355469
    10. ''s' → logprob: -11.499504089355469

Token 79: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05998760461807251
    2. 'True' → logprob: -3.3099875450134277
    3. '1' → logprob: -4.059987545013428
    4. ''' → logprob: -6.809987545013428
    5. ' ' → logprob: -7.059987545013428
    6. '"' → logprob: -7.184987545013428
    7. 'False' → logprob: -7.434987545013428
    8. ' True' → logprob: -7.809987545013428
    9. ''t' → logprob: -8.434988021850586
    10. ''T' → logprob: -8.434988021850586

Token 80: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.332210510969162
    2. '
' → logprob: -1.7072105407714844
    3. ':' → logprob: -3.3322105407714844
    4. '<|end|>' → logprob: -3.7072105407714844
    5. ' ' → logprob: -5.082210540771484
    6. ' while' → logprob: -5.207210540771484
    7. '    
' → logprob: -5.332210540771484
    8. 'while' → logprob: -5.332210540771484
    9. ' 
' → logprob: -5.582210540771484
    10. ' if' → logprob: -5.582210540771484

Token 81: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2246629297733307
    2. '<|end|>' → logprob: -2.099663019180298
    3. '   ' → logprob: -3.099663019180298
    4. ' 
' → logprob: -4.224662780761719
    5. '    
' → logprob: -5.599662780761719
    6. '  
' → logprob: -5.974662780761719
    7. ' while' → logprob: -6.099662780761719
    8. '\n' → logprob: -6.224662780761719
    9. 'while' → logprob: -6.599662780761719
    10. ' if' → logprob: -6.599662780761719

Token 82: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4928308427333832
    2. 't' → logprob: -1.8678308725357056
    3. ' #' → logprob: -2.617830753326416
    4. '#' → logprob: -2.617830753326416
    5. '0' → logprob: -2.867830753326416
    6. ' t' → logprob: -4.367830753326416
    7. 'T' → logprob: -5.117830753326416
    8. '1' → logprob: -5.242830753326416
    9. ' while' → logprob: -6.617830753326416
    10. ' T' → logprob: -6.742830753326416

Token 83: '0' (ID: 15)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.49118101596832275
    2. '#' → logprob: -1.3661810159683228
    3. '0' → logprob: -2.366180896759033
    4. 'T' → logprob: -3.866180896759033
    5. 'True' → logprob: -4.366180896759033
    6. '1' → logprob: -6.116180896759033
    7. 'tar' → logprob: -7.366180896759033
    8. 'False' → logprob: -7.491180896759033
    9. 'true' → logprob: -7.741180896759033
    10. ' ' → logprob: -7.866180896759033

Token 84: ':' (ID: 25)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6589076519012451
    2. ' ' → logprob: -1.5339076519012451
    3. '#' → logprob: -2.908907651901245
    4. ':' → logprob: -3.033907651901245
    5. '=' → logprob: -3.283907651901245
    6. ' #' → logprob: -3.533907651901245
    7. '<|end|>' → logprob: -3.658907651901245
    8. ' represents' → logprob: -4.033907890319824
    9. ' is' → logprob: -4.408907890319824
    10. 'for' → logprob: -4.658907890319824

Token 85: ' tar' (ID: 7057)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.27504804730415344
    2. 'T' → logprob: -1.900048017501831
    3. ' T' → logprob: -3.275048017501831
    4. 'tar' → logprob: -3.775048017501831
    5. ' tar' → logprob: -4.15004825592041
    6. ' t' → logprob: -4.65004825592041
    7. ' ' → logprob: -6.77504825592041
    8. ''' → logprob: -7.02504825592041
    9. ' '' → logprob: -7.52504825592041
    10. ''t' → logprob: -7.65004825592041

Token 86: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -1.1398757123970427e-05
    2. 'о' → logprob: -11.500011444091797
    3. ' ' → logprob: -14.250011444091797
    4. 'ō' → logprob: -15.500011444091797
    5. 'ο' → logprob: -15.750011444091797
    6. '   ' → logprob: -16.000011444091797
    7. '	o' → logprob: -16.875011444091797
    8. 'お' → logprob: -17.125011444091797
    9. 'O' → logprob: -17.250011444091797
    10. '0' → logprob: -17.625011444091797

Token 87: ',' (ID: 11)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.2948589622974396
    2. ',' → logprob: -1.4198589324951172
    3. ' ' → logprob: -5.544858932495117
    4. ' ,' → logprob: -5.544858932495117
    5. '   ' → logprob: -6.419858932495117
    6. ' (' → logprob: -7.044858932495117
    7. ''' → logprob: -7.169858932495117
    8. 'turn' → logprob: -7.669858932495117
    9. '
' → logprob: -7.794858932495117
    10. ' turn' → logprob: -8.044858932495117

Token 88: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5760055184364319
    2. '1' → logprob: -0.8260055184364319
    3. '    ' → logprob: -10.701005935668945
    4. '  ' → logprob: -10.951005935668945
    5. '   ' → logprob: -11.576005935668945
    6. ' #' → logprob: -11.826005935668945
    7. ' ' → logprob: -12.201005935668945
    8. '#' → logprob: -13.701005935668945
    9. ' 
' → logprob: -13.951005935668945
    10. '```' → logprob: -14.576005935668945

Token 89: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002271343255415559
    2. ' ' → logprob: -6.1272711753845215
    3. '   ' → logprob: -10.25227165222168
    4. '  ' → logprob: -10.62727165222168
    5. '#' → logprob: -11.25227165222168
    6. '    ' → logprob: -11.75227165222168
    7. '     ' → logprob: -13.12727165222168
    8. '```' → logprob: -13.75227165222168
    9. ' #' → logprob: -14.12727165222168
    10. '      ' → logprob: -14.62727165222168

Token 90: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00486251525580883
    2. ' :' → logprob: -5.379862308502197
    3. ' ' → logprob: -9.754862785339355
    4. ':#' → logprob: -10.129862785339355
    5. '<|end|>' → logprob: -10.254862785339355
    6. '=' → logprob: -10.379862785339355
    7. ' #' → logprob: -10.504862785339355
    8. '#' → logprob: -10.754862785339355
    9. ',' → logprob: -11.629862785339355
    10. ')' → logprob: -12.879862785339355

Token 91: ' han' (ID: 6648)
  Prédit: ' han'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' han' → logprob: -0.584120512008667
    2. 'han' → logprob: -0.834120512008667
    3. '1' → logprob: -5.709120750427246
    4. ' ' → logprob: -5.959120750427246
    5. '0' → logprob: -6.584120750427246
    6. 'h' → logprob: -7.834120750427246
    7. 'hana' → logprob: -9.459120750427246
    8. ' hans' → logprob: -9.584120750427246
    9. ' hana' → logprob: -10.084120750427246
    10. ' h' → logprob: -10.334120750427246

Token 92: 'ako' (ID: 5938)
  Prédit: 'ko'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ko' → logprob: -0.33016958832740784
    2. 'ako' → logprob: -1.3301695585250854
    3. 'o' → logprob: -5.205169677734375
    4. '0' → logprob: -5.830169677734375
    5. '   ' → logprob: -6.330169677734375
    6. 'a' → logprob: -6.580169677734375
    7. 'ak' → logprob: -6.830169677734375
    8. 'oko' → logprob: -7.205169677734375
    9. ' ' → logprob: -7.955169677734375
    10. '1' → logprob: -7.955169677734375

Token 93: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5851554274559021
    2. 'while' → logprob: -1.0851554870605469
    3. ' while' → logprob: -2.960155487060547
    4. '
' → logprob: -3.835155487060547
    5. '<|end|>' → logprob: -4.585155487060547
    6. 'if' → logprob: -5.085155487060547
    7. '```' → logprob: -6.085155487060547
    8. '    
' → logprob: -6.210155487060547
    9. ':' → logprob: -6.335155487060547
    10. '	while' → logprob: -6.585155487060547

Token 94: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15317204594612122
    2. 'while' → logprob: -2.403172016143799
    3. ' while' → logprob: -3.528172016143799
    4. '```' → logprob: -5.153172016143799
    5. 'if' → logprob: -5.778172016143799
    6. '<|end|>' → logprob: -6.278172016143799
    7. '    
' → logprob: -6.403172016143799
    8. '
' → logprob: -6.528172016143799
    9. 'i' → logprob: -6.653172016143799
    10. ' ' → logprob: -6.778172016143799

Token 95: ' field' (ID: 3259)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.07018183916807175
    2. ' while' → logprob: -3.0701818466186523
    3. '   ' → logprob: -4.320181846618652
    4. 'i' → logprob: -5.945181846618652
    5. 'for' → logprob: -6.445181846618652
    6. ' ' → logprob: -7.195181846618652
    7. 'if' → logprob: -7.695181846618652
    8. 'n' → logprob: -7.820181846618652
    9. '<|end|>' → logprob: -7.945181846618652
    10. ' 
' → logprob: -8.320181846618652

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48680850863456726
    2. '=' → logprob: -0.9868085384368896
    3. '=[]' → logprob: -4.4868083000183105
    4. '_cards' → logprob: -6.8618083000183105
    5. '_' → logprob: -8.736808776855469
    6. ',' → logprob: -9.861808776855469
    7. '=[]
' → logprob: -10.361808776855469
    8. ' ' → logprob: -10.361808776855469
    9. ':' → logprob: -11.861808776855469
    10. '[]' → logprob: -12.236808776855469

Token 97: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.012760612182319164
    2. ' []' → logprob: -4.637760639190674
    3. 'set' → logprob: -6.387760639190674
    4. '-' → logprob: -7.137760639190674
    5. '0' → logprob: -8.512760162353516
    6. '[]
' → logprob: -9.387760162353516
    7. ' set' → logprob: -9.762760162353516
    8. '{}' → logprob: -10.262760162353516
    9. '[' → logprob: -10.387760162353516
    10. ' ' → logprob: -10.637760162353516

Token 98: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2101822942495346
    2. '<|end|>' → logprob: -1.9601823091506958
    3. 'while' → logprob: -3.7101821899414062
    4. '
' → logprob: -5.335182189941406
    5. ' 
' → logprob: -5.710182189941406
    6. '    
' → logprob: -5.835182189941406
    7. ' while' → logprob: -5.960182189941406
    8. '\n' → logprob: -6.585182189941406
    9. '  
' → logprob: -6.585182189941406
    10. '<|end|>' → logprob: -6.710182189941406

Token 99: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.35946574807167053
    2. '   ' → logprob: -1.6094657182693481
    3. 'if' → logprob: -2.9844658374786377
    4. ' while' → logprob: -3.2344658374786377
    5. ' if' → logprob: -6.234465599060059
    6. 'for' → logprob: -6.234465599060059
    7. ' ' → logprob: -6.234465599060059
    8. 'i' → logprob: -6.734465599060059
    9. '<|end|>' → logprob: -6.859465599060059
    10. ':' → logprob: -7.109465599060059

Token 100: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.8527358174324036
    2. ' True' → logprob: -1.6027357578277588
    3. ' len' → logprob: -1.6027357578277588
    4. ' field' → logprob: -2.602735757827759
    5. ' tar' → logprob: -3.477735757827759
    6. 'True' → logprob: -3.727735757827759
    7. ' h' → logprob: -4.477735996246338
    8. ' not' → logprob: -4.602735996246338
    9. 't' → logprob: -4.852735996246338
    10. 'len' → logprob: -5.852735996246338

Token 101: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1275734305381775
    2. 'and' → logprob: -2.1275734901428223
    3. '>' → logprob: -8.252573013305664
    4. ' or' → logprob: -8.252573013305664
    5. '[' → logprob: -10.252573013305664
    6. ' ' → logprob: -11.127573013305664
    7. '.' → logprob: -11.252573013305664
    8. '<|end|>' → logprob: -11.252573013305664
    9. ':' → logprob: -11.377573013305664
    10. '[]' → logprob: -12.002573013305664

Token 102: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.07161103934049606
    2. 'h' → logprob: -2.696610927581787
    3. ' (' → logprob: -6.821610927581787
    4. '(' → logprob: -8.071611404418945
    5. '(h' → logprob: -9.071611404418945
    6. ' ' → logprob: -9.821611404418945
    7. ' True' → logprob: -10.446611404418945
    8. ' t' → logprob: -11.071611404418945
    9. 'True' → logprob: -11.071611404418945
    10. '(True' → logprob: -12.259111404418945

Token 103: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03253867104649544
    2. ' and' → logprob: -3.532538652420044
    3. 'and' → logprob: -6.032538890838623
    4. ':
' → logprob: -8.032538414001465
    5. '[' → logprob: -10.407538414001465
    6. '>' → logprob: -11.657538414001465
    7. ' :' → logprob: -12.032538414001465
    8. '=' → logprob: -12.782538414001465
    9. ',' → logprob: -13.157538414001465
    10. '.' → logprob: -13.282538414001465

Token 104: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8307904601097107
    2. '<|end|>' → logprob: -0.9557904601097107
    3. '   ' → logprob: -1.9557905197143555
    4. ':' → logprob: -4.0807905197143555
    5. ' if' → logprob: -4.7057905197143555
    6. '<|end|>' → logprob: -5.8307905197143555
    7. ':
' → logprob: -5.9557905197143555
    8. ' 
' → logprob: -6.4557905197143555
    9. '    ' → logprob: -6.5807905197143555
    10. ' ' → logprob: -6.9557905197143555

Token 105: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03210758790373802
    2. 'if' (adapté à ' if') → logprob: -3.6571075916290283
    3. '       ' → logprob: -5.657107353210449
    4. '    ' → logprob: -6.782107353210449
    5. '   ' → logprob: -7.157107353210449
    6. ' ' → logprob: -8.40710735321045
    7. '        ' → logprob: -9.40710735321045
    8. ' turn' → logprob: -10.65710735321045
    9. '<|end|>' → logprob: -11.28210735321045
    10. '	if' → logprob: -11.53210735321045

Token 106: ' turn' (ID: 3716)
  Prédit: ' turn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' turn' → logprob: -0.12866495549678802
    2. 'turn' → logprob: -2.128664970397949
    3. ' not' → logprob: -7.128664970397949
    4. '(turn' → logprob: -7.878664970397949
    5. ' ' → logprob: -9.00366497039795
    6. ' field' → logprob: -9.12866497039795
    7. 'field' → logprob: -9.37866497039795
    8. 't' → logprob: -9.75366497039795
    9. ' t' → logprob: -9.87866497039795
    10. 'not' → logprob: -10.00366497039795

Token 107: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.02330569177865982
    2. '==' → logprob: -3.773305654525757
    3. ' ' → logprob: -10.023305892944336
    4. ' %' → logprob: -11.898305892944336
    5. '%' → logprob: -12.148305892944336
    6. '=' → logprob: -13.898305892944336
    7. ' =' → logprob: -14.148305892944336
    8. ' ' → logprob: -14.273305892944336
    9. '0' → logprob: -14.898305892944336
    10. '()==' → logprob: -14.898305892944336

Token 108: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009757150895893574
    2. ' ' → logprob: -4.634757041931152
    3. '   ' → logprob: -14.259757041931152
    4. '1' → logprob: -14.884757041931152
    5. 't' → logprob: -16.32225799560547
    6. '  ' → logprob: -16.88475799560547
    7. '    ' → logprob: -17.88475799560547
    8. '=' → logprob: -18.19725799560547
    9. ' ' → logprob: -18.19725799560547
    10. '۰' → logprob: -18.75975799560547

Token 109: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.106736039626412e-05
    2. ' ' → logprob: -10.500031471252441
    3. '1' → logprob: -12.625031471252441
    4. '   ' → logprob: -16.125030517578125
    5. '=' → logprob: -17.375030517578125
    6. 't' → logprob: -18.000030517578125
    7. '۰' → logprob: -18.562530517578125
    8. '  ' → logprob: -18.687530517578125
    9. '...' → logprob: -19.312530517578125
    10. '０' → logprob: -19.375030517578125

Token 110: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005024779122322798
    2. ':
' → logprob: -5.3800249099731445
    3. ' and' → logprob: -7.8800249099731445
    4. 'and' → logprob: -11.380024909973145
    5. '):' → logprob: -12.255024909973145
    6. '<|end|>' → logprob: -12.505024909973145
    7. ' :' → logprob: -12.755024909973145
    8. ':

' → logprob: -13.505024909973145
    9. '<|end|>' → logprob: -14.880024909973145
    10. '):
' → logprob: -15.255024909973145

Token 111: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08429548144340515
    2. ':' → logprob: -2.7092955112457275
    3. '   ' → logprob: -5.584295272827148
    4. ':
' → logprob: -6.084295272827148
    5. '<|end|>' → logprob: -6.084295272827148
    6. '           ' → logprob: -6.334295272827148
    7. 'field' → logprob: -6.709295272827148
    8. ' if' → logprob: -7.334295272827148
    9. ' and' → logprob: -7.459295272827148
    10. ' field' → logprob: -8.209295272827148

Token 112: ' hand' (ID: 1803)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.23929432034492493
    2. 'for' → logprob: -3.1142942905426025
    3. 'field' → logprob: -3.2392942905426025
    4. 'idx' → logprob: -3.6142942905426025
    5. 'card' → logprob: -3.8642942905426025
    6. '#' → logprob: -4.364294528961182
    7. 'while' → logprob: -4.614294528961182
    8. ' if' → logprob: -4.989294528961182
    9. '   ' → logprob: -5.114294528961182
    10. 'play' → logprob: -5.239294528961182

Token 113: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14551357924938202
    2. '=' → logprob: -2.5205135345458984
    3. '_card' → logprob: -3.2705135345458984
    4. '.append' → logprob: -5.520513534545898
    5. '.pop' → logprob: -5.770513534545898
    6. '_cards' → logprob: -6.020513534545898
    7. '_hand' → logprob: -6.395513534545898
    8. '.remove' → logprob: -6.395513534545898
    9. '.' → logprob: -6.645513534545898
    10. '_' → logprob: -7.395513534545898

Token 114: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.22556179761886597
    2. ' t' → logprob: -1.6005618572235107
    3. ' ' → logprob: -9.47556209564209
    4. 'tar' → logprob: -10.97556209564209
    5. 'h' → logprob: -11.22556209564209
    6. '   ' → logprob: -11.35056209564209
    7. '	t' → logprob: -11.35056209564209
    8. '[t' → logprob: -12.35056209564209
    9. '  ' → logprob: -12.97556209564209
    10. ' h' → logprob: -13.28806209564209

Token 115: '
' (ID: 198)
  Prédit: '.pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.03506866842508316
    2. '
' → logprob: -3.5350687503814697
    3. 'pop' → logprob: -6.785068511962891
    4. 'if' → logprob: -7.035068511962891
    5. '[' → logprob: -7.160068511962891
    6. '<|end|>' → logprob: -7.410068511962891
    7. '[-' → logprob: -7.535068511962891
    8. ' if' → logprob: -7.785068511962891
    9. 'else' → logprob: -7.910068511962891
    10. 'elif' → logprob: -9.03506851196289

Token 116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8468798398971558
    2. '[' → logprob: -2.0968799591064453
    3. '.pop' → logprob: -2.2218799591064453
    4. '   ' → logprob: -2.4718799591064453
    5. '<|end|>' → logprob: -2.5968799591064453
    6. '
' → logprob: -3.0968799591064453
    7. ' if' → logprob: -3.7218799591064453
    8. '           ' → logprob: -3.7218799591064453
    9. '[:]' → logprob: -3.9718799591064453
    10. '<|end|>' → logprob: -4.221879959106445

Token 117: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.9788550734519958
    2. '       ' → logprob: -1.1038551330566406
    3. ' else' → logprob: -1.2288551330566406
    4. '	else' → logprob: -10.97885513305664
    5. 'elif' → logprob: -11.72885513305664
    6. '<|end|>' → logprob: -12.10385513305664
    7. '        ' → logprob: -12.60385513305664
    8. ':
' → logprob: -13.97885513305664
    9. ' elif' → logprob: -14.10385513305664
    10. ':' → logprob: -14.10385513305664

Token 118: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12907575070858002
    2. '           ' → logprob: -2.754075765609741
    3. ':
' → logprob: -2.879075765609741
    4. ' :' → logprob: -7.629075527191162
    5. '          ' → logprob: -8.37907600402832
    6. ' :
' → logprob: -9.50407600402832
    7. ' hand' → logprob: -9.62907600402832
    8. '   ' → logprob: -9.62907600402832
    9. '       ' → logprob: -9.75407600402832
    10. '            ' → logprob: -9.87907600402832

Token 119: '           ' (ID: 352)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.02009846456348896
    2. 'h' → logprob: -4.145098686218262
    3. '           ' → logprob: -5.520098686218262
    4. '	h' → logprob: -10.395098686218262
    5. '   ' → logprob: -11.770098686218262
    6. '            ' → logprob: -12.895098686218262
    7. '          ' → logprob: -13.020098686218262
    8. '    ' → logprob: -13.270098686218262
    9. ' ' → logprob: -14.145098686218262
    10. ' ' → logprob: -14.270098686218262

Token 120: ' hand' (ID: 1803)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.16135717928409576
    2. 'h' → logprob: -1.9113571643829346
    3. '           ' → logprob: -6.911357402801514
    4. '	h' → logprob: -9.911356925964355
    5. 'hand' (adapté à ' hand') → logprob: -10.161356925964355
    6. ' hand' → logprob: -10.411356925964355
    7. '       ' → logprob: -12.286356925964355
    8. '   ' → logprob: -12.661356925964355
    9. '               ' → logprob: -13.411356925964355
    10. 'han' → logprob: -13.536356925964355

Token 121: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011047935113310814
    2. ' =' → logprob: -4.511047840118408
    3. '=

' → logprob: -15.761048316955566
    4. '==' → logprob: -17.01104736328125
    5. '=
' → logprob: -18.63604736328125
    6. 'if' → logprob: -18.76104736328125
    7. '＝' → logprob: -19.01104736328125
    8. ')' → logprob: -19.38604736328125
    9. ' ==' → logprob: -20.26104736328125
    10. ' ' → logprob: -20.26104736328125

Token 122: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.029751179739832878
    2. 'h' → logprob: -3.5297510623931885
    3. '	h' → logprob: -14.40475082397461
    4. '[h' → logprob: -16.65475082397461
    5. ' ' → logprob: -17.02975082397461
    6. '<h' → logprob: -17.40475082397461
    7. ' han' → logprob: -17.40475082397461
    8. '_h' → logprob: -17.90475082397461
    9. '(h' → logprob: -17.90475082397461
    10. 'han' → logprob: -18.27975082397461

Token 123: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15037299692630768
    2. '
' → logprob: -2.2753729820251465
    3. '   ' → logprob: -4.5253729820251465
    4. '        
' → logprob: -5.0253729820251465
    5. ' if' → logprob: -5.5253729820251465
    6. 'if' → logprob: -5.7753729820251465
    7. '    
' → logprob: -6.0253729820251465
    8. '[' → logprob: -6.2753729820251465
    9. '<|end|>' → logprob: -6.2753729820251465
    10. '#' → logprob: -6.9003729820251465

Token 124: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2804864645004272
    2. '   ' → logprob: -1.4054864645004272
    3. 'if' → logprob: -1.5304864645004272
    4. ' if' → logprob: -1.7804864645004272
    5. '
' → logprob: -3.280486583709717
    6. '    
' → logprob: -4.405486583709717
    7. 'max' → logprob: -5.280486583709717
    8. 'idx' → logprob: -5.405486583709717
    9. '        
' → logprob: -5.530486583709717
    10. '#' → logprob: -5.655486583709717

Token 125: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.690385639667511
    2. 'card' → logprob: -1.6903855800628662
    3. 'last' → logprob: -2.690385580062866
    4. 'field' → logprob: -2.690385580062866
    5. 'top' → logprob: -2.815385580062866
    6. 'play' → logprob: -3.690385580062866
    7. ' if' → logprob: -4.440385818481445
    8. 'idx' → logprob: -4.440385818481445
    9. 'current' → logprob: -4.815385818481445
    10. 'for' → logprob: -4.815385818481445

Token 126: ' not' (ID: 625)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'field' → logprob: -0.17072926461696625
    2. ' not' → logprob: -2.920729160308838
    3. ' field' → logprob: -3.045729160308838
    4. 'hand' → logprob: -3.670729160308838
    5. 'not' → logprob: -3.920729160308838
    6. 'len' → logprob: -5.045729160308838
    7. ' hand' → logprob: -6.295729160308838
    8. ' len' → logprob: -6.795729160308838
    9. ' ' → logprob: -9.045729637145996
    10. 'any' → logprob: -9.358229637145996

Token 127: ' field' (ID: 3259)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'field' → logprob: -0.07153868675231934
    2. ' field' → logprob: -2.6965386867523193
    3. 'hand' → logprob: -6.571538925170898
    4. ' hand' → logprob: -8.946538925170898
    5. '(field' → logprob: -11.196538925170898
    6. ' ' → logprob: -11.571538925170898
    7. '	field' → logprob: -11.571538925170898
    8. 'any' → logprob: -11.884038925170898
    9. '   ' → logprob: -12.571538925170898
    10. ' any' → logprob: -12.571538925170898

Token 128: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.2519533634185791
    2. 'or' → logprob: -1.501953363418579
    3. '	or' → logprob: -10.876953125
    4. ':' → logprob: -12.876953125
    5. ' ' → logprob: -14.001953125
    6. 'and' → logprob: -14.751953125
    7. '   ' → logprob: -15.001953125
    8. ' and' → logprob: -15.501953125
    9. ':
' → logprob: -15.876953125
    10. '<|end|>' → logprob: -16.251953125

Token 129: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22901086509227753
    2. ':
' → logprob: -1.854010820388794
    3. ' or' → logprob: -3.729010820388794
    4. '           ' → logprob: -3.979010820388794
    5. ' and' → logprob: -6.229011058807373
    6. ',' → logprob: -6.854011058807373
    7. '       ' → logprob: -7.104011058807373
    8. ' :' → logprob: -8.104010581970215
    9. '<|end|>' → logprob: -8.479010581970215
    10. 'and' → logprob: -8.604010581970215

Token 130: ' #' (ID: 1069)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'field' → logprob: -0.2790672183036804
    2. ' field' → logprob: -2.279067277908325
    3. 'card' → logprob: -2.904067277908325
    4. 'if' → logprob: -3.279067277908325
    5. ' if' → logprob: -3.904067277908325
    6. 'hand' → logprob: -4.529067039489746
    7. ' hand' → logprob: -5.404067039489746
    8. ' card' → logprob: -5.529067039489746
    9. '           ' → logprob: -5.779067039489746
    10. '   ' → logprob: -6.154067039489746

Token 131: ' can' (ID: 665)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'field' → logprob: -0.12694701552391052
    2. 'card' → logprob: -2.3769469261169434
    3. ' field' → logprob: -5.001946926116943
    4. 'hand' → logprob: -5.126946926116943
    5. 'if' → logprob: -5.251946926116943
    6. '#' → logprob: -6.126946926116943
    7. ' card' → logprob: -6.376946926116943
    8. '   ' → logprob: -6.501946926116943
    9. 'play' → logprob: -7.376946926116943
    10. ' if' → logprob: -7.876946926116943

Token 132: ' play' (ID: 2107)
  Prédit: 'play'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'play' → logprob: -0.2929810881614685
    2. ' play' → logprob: -1.6679811477661133
    3. 'hand' → logprob: -4.042981147766113
    4. ' hand' → logprob: -4.542981147766113
    5. 'put' → logprob: -4.667981147766113
    6. 'place' → logprob: -5.167981147766113
    7. 'pick' → logprob: -5.417981147766113
    8. ' place' → logprob: -5.542981147766113
    9. ' put' → logprob: -6.042981147766113
    10. ' pick' → logprob: -6.167981147766113

Token 133: ' any' (ID: 1062)
  Prédit: 'hand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hand' → logprob: -0.66634202003479
    2. 'card' → logprob: -1.91634202003479
    3. ' hand' → logprob: -2.04134202003479
    4. '           ' → logprob: -2.04134202003479
    5. ' card' → logprob: -3.16634202003479
    6. '       ' → logprob: -4.291341781616211
    7. 'field' → logprob: -5.291341781616211
    8. '   ' → logprob: -5.666341781616211
    9. ' a' → logprob: -6.166341781616211
    10. 'token' → logprob: -6.291341781616211

Token 134: ' card' (ID: 4766)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.47735705971717834
    2. ' card' → logprob: -0.977357029914856
    3. 'hand' → logprob: -6.102356910705566
    4. ' hand' → logprob: -7.852356910705566
    5. '_card' → logprob: -7.977356910705566
    6. '(card' → logprob: -8.977356910705566
    7. '	card' → logprob: -9.352356910705566
    8. '   ' → logprob: -10.727356910705566
    9. 'number' → logprob: -10.852356910705566
    10. '(hand' → logprob: -11.977356910705566

Token 135: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23594507575035095
    2. ':' → logprob: -2.485944986343384
    3. '       ' → logprob: -3.485944986343384
    4. '<|end|>' → logprob: -3.610944986343384
    5. ' hand' → logprob: -4.235945224761963
    6. ',' → logprob: -4.235945224761963
    7. ':
' → logprob: -4.610945224761963
    8. '            
' → logprob: -5.485945224761963
    9. '               ' → logprob: -5.735945224761963
    10. '
' → logprob: -5.735945224761963

Token 136: ' play' (ID: 2107)
  Prédit: ' hand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' hand' → logprob: -0.9861705899238586
    2. ' card' → logprob: -1.1111705303192139
    3. 'card' → logprob: -1.8611705303192139
    4. '           ' → logprob: -2.861170530319214
    5. 'hand' → logprob: -3.861170530319214
    6. '       ' → logprob: -3.986170530319214
    7. ' if' → logprob: -4.111170768737793
    8. ' field' → logprob: -5.111170768737793
    9. '   ' → logprob: -5.361170768737793
    10. 'field' → logprob: -5.486170768737793

Token 137: ' the' (ID: 290)
  Prédit: 'hand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hand' → logprob: -0.5253944993019104
    2. ' hand' → logprob: -0.9003944993019104
    3. 'min' → logprob: -6.525394439697266
    4. ' min' → logprob: -7.525394439697266
    5. '   ' → logprob: -8.775394439697266
    6. 'max' → logprob: -9.775394439697266
    7. '(hand' → logprob: -10.525394439697266
    8. ' max' → logprob: -11.650394439697266
    9. ' ' → logprob: -12.775394439697266
    10. '    ' → logprob: -12.900394439697266

Token 138: ' smallest' (ID: 42173)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.29828786849975586
    2. 'hand' → logprob: -1.6732878684997559
    3. ' min' → logprob: -3.673287868499756
    4. ' hand' → logprob: -3.923287868499756
    5. 'max' → logprob: -4.298287868499756
    6. 'lowest' → logprob: -4.673287868499756
    7. 'minimum' → logprob: -7.048287868499756
    8. ' max' → logprob: -7.798287868499756
    9. ' lowest' → logprob: -7.798287868499756
    10. 'highest' → logprob: -9.298288345336914

Token 139: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7483742237091064
    2. ' hand' → logprob: -1.4983742237091064
    3. 'hand' → logprob: -2.1233742237091064
    4. ' card' → logprob: -3.2483742237091064
    5. '<|end|>' → logprob: -3.2483742237091064
    6. 'card' → logprob: -3.4983742237091064
    7. '(hand' → logprob: -4.248373985290527
    8. ',' → logprob: -4.373373985290527
    9. '_hand' → logprob: -4.373373985290527
    10. '_card' → logprob: -4.873373985290527

Token 140: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.548517644405365
    2. '           ' → logprob: -1.4235177040100098
    3. '<|end|>' → logprob: -2.0485177040100098
    4. ' hand' → logprob: -3.5485177040100098
    5. '               ' → logprob: -4.79851770401001
    6. '        
' → logprob: -5.67351770401001
    7. ')' → logprob: -6.29851770401001
    8. ',' → logprob: -6.42351770401001
    9. '   ' → logprob: -6.67351770401001
    10. '(hand' → logprob: -6.79851770401001

Token 141: ' card' (ID: 4766)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' (adapté à ' card') → logprob: -0.6098180413246155
    2. 'hand' → logprob: -1.6098179817199707
    3. 'field' → logprob: -2.3598179817199707
    4. ' hand' → logprob: -2.6098179817199707
    5. ' card' → logprob: -3.3598179817199707
    6. '   ' → logprob: -3.6098179817199707
    7. ' field' → logprob: -4.734817981719971
    8. '       ' → logprob: -4.984817981719971
    9. '           ' → logprob: -5.109817981719971
    10. 'play' → logprob: -5.734817981719971

Token 142: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00410867715254426
    2. '=' → logprob: -5.504108905792236
    3. ' =
' → logprob: -10.754108428955078
    4. ' ' → logprob: -12.379108428955078
    5. '_' → logprob: -14.254108428955078
    6. ')' → logprob: -14.254108428955078
    7. '_hand' → logprob: -14.379108428955078
    8. 's' → logprob: -14.629108428955078
    9. '<|end|>' → logprob: -14.629108428955078
    10. '_to' → logprob: -15.004108428955078

Token 143: ' hand' (ID: 1803)
  Prédit: ' hand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hand' → logprob: -0.5233339071273804
    2. 'hand' → logprob: -0.8983339071273804
    3. ' min' → logprob: -8.773333549499512
    4. 'min' → logprob: -10.773333549499512
    5. ' ' → logprob: -11.523333549499512
    6. '(hand' → logprob: -11.648333549499512
    7. '   ' → logprob: -12.023333549499512
    8. 'hands' → logprob: -13.710833549499512
    9. ' ' → logprob: -13.835833549499512
    10. 'Hand' → logprob: -14.148333549499512

Token 144: '[' (ID: 58)
  Prédit: '.pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.008630638010799885
    2. '[' → logprob: -4.758630752563477
    3. 'pop' → logprob: -11.633630752563477
    4. '.' → logprob: -11.883630752563477
    5. ' .' → logprob: -15.133630752563477
    6. '	pop' → logprob: -17.008630752563477
    7. '   ' → logprob: -17.633630752563477
    8. ' pop' → logprob: -18.133630752563477
    9. '```' → logprob: -18.258630752563477
    10. 'Pop' → logprob: -18.508630752563477

Token 145: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4259644558478612e-05
    2. ' ' → logprob: -11.375014305114746
    3. ':' → logprob: -14.125014305114746
    4. '
' → logprob: -14.500014305114746
    5. '-' → logprob: -14.750014305114746
    6. '[' → logprob: -15.125014305114746
    7. '   ' → logprob: -15.187514305114746
    8. '```' → logprob: -16.37501335144043
    9. '1' → logprob: -16.50001335144043
    10. '

' → logprob: -17.06251335144043

Token 146: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0023205799516290426
    2. ']
' → logprob: -6.502320766448975
    3. '<|end|>' → logprob: -7.752320766448975
    4. ')' → logprob: -8.252320289611816
    5. ' ]' → logprob: -9.752320289611816
    6. '])' → logprob: -10.627320289611816
    7. ')]' → logprob: -10.752320289611816
    8. '<|end|>' → logprob: -11.877320289611816
    9. ']

' → logprob: -12.002320289611816
    10. '()]' → logprob: -13.752320289611816

Token 147: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5378459692001343
    2. '\n' → logprob: -0.9128459692001343
    3. '<|end|>' → logprob: -5.412846088409424
    4. '       ' → logprob: -5.537846088409424
    5. 'elif' → logprob: -6.787846088409424
    6. '
' → logprob: -7.037846088409424
    7. ')' → logprob: -7.037846088409424
    8. '    
' → logprob: -7.537846088409424
    9. ' 
' → logprob: -7.787846088409424
    10. '' → logprob: -7.787846088409424

Token 148: ' hand' (ID: 1803)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'field' → logprob: -0.24326054751873016
    2. '       ' → logprob: -2.493260622024536
    3. ' field' → logprob: -2.493260622024536
    4. '           ' → logprob: -3.368260622024536
    5. 'if' → logprob: -5.493260383605957
    6. 'hand' (adapté à ' hand') → logprob: -5.493260383605957
    7. ' if' → logprob: -5.993260383605957
    8. '   ' → logprob: -6.243260383605957
    9. ' hand' → logprob: -6.493260383605957
    10. '
' → logprob: -7.368260383605957

Token 149: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.0004809585225302726
    2. '.' → logprob: -7.875481128692627
    3. '.remove' → logprob: -9.500480651855469
    4. 'pop' → logprob: -10.625480651855469
    5. '=' → logprob: -13.500480651855469
    6. ' =' → logprob: -15.500480651855469
    7. '	pop' → logprob: -16.25048065185547
    8. ' .' → logprob: -17.00048065185547
    9. '_pop' → logprob: -17.25048065185547
    10. ' pop' → logprob: -18.12548065185547

Token 150: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.107425062713446e-06
    2. '0' → logprob: -11.875006675720215
    3. '(
' → logprob: -16.62500762939453
    4. '()' → logprob: -18.50000762939453
    5. '(

' → logprob: -19.37500762939453
    6. 'index' → logprob: -21.37500762939453
    7. '```' → logprob: -21.50000762939453
    8. '[' → logprob: -21.62500762939453
    9. '(-' → logprob: -21.87500762939453
    10. 'a' → logprob: -21.87500762939453

Token 151: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.25000286102295
    3. '(' → logprob: -14.25000286102295
    4. ')' → logprob: -15.12500286102295
    5. '1' → logprob: -19.375001907348633
    6. '[' → logprob: -19.750001907348633
    7. '
' → logprob: -20.000001907348633
    8. '   ' → logprob: -20.250001907348633
    9. '.' → logprob: -20.625001907348633
    10. '  ' → logprob: -20.750001907348633

Token 152: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00672211404889822
    2. ')
' → logprob: -5.0067219734191895
    3. '<|end|>' → logprob: -13.131722450256348
    4. '       ' → logprob: -13.256722450256348
    5. ' )' → logprob: -14.131722450256348
    6. '           ' → logprob: -14.756722450256348
    7. '   ' → logprob: -15.131722450256348
    8. ')
' → logprob: -15.381722450256348
    9. ')return' → logprob: -15.631722450256348
    10. '),' → logprob: -15.631722450256348

Token 153: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0319874286651611
    2. '
' → logprob: -1.2819874286651611
    3. 'else' → logprob: -1.7819874286651611
    4. 'elif' → logprob: -2.531987428665161
    5. ' else' → logprob: -2.781987428665161
    6. '\n' → logprob: -3.531987428665161
    7. '<|end|>' → logprob: -4.906987190246582
    8. '   ' → logprob: -5.281987190246582
    9. ' elif' → logprob: -5.281987190246582
    10. ' 
' → logprob: -5.781987190246582

Token 154: ' field' (ID: 3259)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'field' (adapté à ' field') → logprob: -0.00015335931675508618
    2. ' field' → logprob: -8.875153541564941
    3. '   ' → logprob: -11.875153541564941
    4. '           ' → logprob: -12.500153541564941
    5. '       ' → logprob: -13.250153541564941
    6. '
' → logprob: -15.125153541564941
    7. 'if' → logprob: -15.375153541564941
    8. '	field' → logprob: -15.375153541564941
    9. ' ' → logprob: -16.750152587890625
    10. 'card' → logprob: -17.375152587890625

Token 155: ' =' (ID: 314)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004082197323441505
    2. '.' → logprob: -5.504082202911377
    3. '=' → logprob: -13.629081726074219
    4. 'append' → logprob: -13.754081726074219
    5. ' .' → logprob: -14.254081726074219
    6. '.app' → logprob: -14.754081726074219
    7. '.insert' → logprob: -15.004081726074219
    8. '.extend' → logprob: -16.00408172607422
    9. '_append' → logprob: -17.50408172607422
    10. '.ap' → logprob: -18.25408172607422

Token 156: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00020771251001860946
    2. ' [' → logprob: -8.500207901000977
    3. '[c' → logprob: -14.000207901000977
    4. '[str' → logprob: -14.500207901000977
    5. '[cell' → logprob: -14.500207901000977
    6. '[int' → logprob: -14.875207901000977
    7. '   ' → logprob: -15.250207901000977
    8. '[player' → logprob: -15.625207901000977
    9. '(card' → logprob: -15.750207901000977
    10. ' ' → logprob: -15.750207901000977

Token 157: 'card' (ID: 7687)
  Prédit: 'card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -8.061054359131958e-06
    2. ' card' → logprob: -11.750007629394531
    3. '(card' → logprob: -17.12500762939453
    4. '   ' → logprob: -17.62500762939453
    5. '	card' → logprob: -17.87500762939453
    6. 'car' → logprob: -17.87500762939453
    7. ' ' → logprob: -18.87500762939453
    8. 'cart' → logprob: -20.75000762939453
    9. 'code' → logprob: -20.87500762939453
    10. '.card' → logprob: -20.87500762939453

Token 158: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.018257638439536095
    2. ']
' → logprob: -4.0182576179504395
    3. ')' → logprob: -9.893258094787598
    4. ' ]' → logprob: -10.393258094787598
    5. ']
' → logprob: -11.518258094787598
    6. ']

' → logprob: -11.643258094787598
    7. ',' → logprob: -13.268258094787598
    8. ')]' → logprob: -13.518258094787598
    9. '   ' → logprob: -14.018258094787598
    10. ' ]
' → logprob: -14.268258094787598

Token 159: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1470380574464798
    2. 'else' → logprob: -2.022037982940674
    3. ' else' → logprob: -6.147037982940674
    4. 'elif' → logprob: -6.272037982940674
    5. '   ' → logprob: -8.647038459777832
    6. '\n' → logprob: -10.397038459777832
    7. '           ' → logprob: -10.397038459777832
    8. '
' → logprob: -11.022038459777832
    9. 'continue' → logprob: -11.147038459777832
    10. ')' → logprob: -11.397038459777832

Token 160: ' turn' (ID: 3716)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' (adapté à ' turn') → logprob: -0.09436426311731339
    2. '       ' → logprob: -3.2193641662597656
    3. '           ' → logprob: -3.2193641662597656
    4. ' turn' → logprob: -4.969364166259766
    5. 'else' → logprob: -5.844364166259766
    6. '   ' → logprob: -9.219364166259766
    7. 'elif' → logprob: -9.969364166259766
    8. 'print' → logprob: -10.719364166259766
    9. ' else' → logprob: -11.344364166259766
    10. '
' → logprob: -11.844364166259766

Token 161: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06572994589805603
    2. '=' → logprob: -2.815729856491089
    3. ' ^=' → logprob: -5.690730094909668
    4. ' +=' → logprob: -7.940730094909668
    5. ' ' → logprob: -11.065730094909668
    6. '+=' → logprob: -12.065730094909668
    7. ' |=' → logprob: -14.815730094909668
    8. ' =)' → logprob: -15.940730094909668
    9. ' ' → logprob: -16.44072914123535
    10. ' =(' → logprob: -16.81572914123535

Token 162: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016615817323327065
    2. ' ' → logprob: -4.141615867614746
    3. ' (' → logprob: -7.891615867614746
    4. '(' → logprob: -8.641615867614746
    5. '   ' → logprob: -11.266615867614746
    6. '(not' → logprob: -11.766615867614746
    7. '```' → logprob: -13.016615867614746
    8. ' ' → logprob: -13.266615867614746
    9. '(turn' → logprob: -13.391615867614746
    10. '0' → logprob: -13.954115867614746

Token 163: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0020699677988886833
    2. '(' → logprob: -6.75206995010376
    3. ' ' → logprob: -7.12706995010376
    4. ' (' → logprob: -9.502070426940918
    5. '(not' → logprob: -11.752070426940918
    6. '   ' → logprob: -12.252070426940918
    7. '0' → logprob: -12.377070426940918
    8. '(turn' → logprob: -13.252070426940918
    9. '```' → logprob: -14.377070426940918
    10. 'not' → logprob: -14.752070426940918

Token 164: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023520786315202713
    2. 'else' → logprob: -4.5235209465026855
    3. '   ' → logprob: -4.8985209465026855
    4. ' else' → logprob: -6.0235209465026855
    5. '           ' → logprob: -6.2735209465026855
    6. 'continue' → logprob: -8.398520469665527
    7. 'elif' → logprob: -9.148520469665527
    8. '	continue' → logprob: -9.398520469665527
    9. '<|end|>' → logprob: -9.773520469665527
    10. '
' → logprob: -9.898520469665527

Token 165: ' turn' (ID: 3716)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -7.493430894101039e-05
    2. ' turn' → logprob: -9.500075340270996
    3. '(turn' → logprob: -17.50007438659668
    4. '0' → logprob: -17.87507438659668
    5. ' ' → logprob: -18.50007438659668
    6. '   ' → logprob: -18.62507438659668
    7. '  ' → logprob: -19.37507438659668
    8. '.turn' → logprob: -19.62507438659668
    9. 'tur' → logprob: -20.00007438659668
    10. 'token' → logprob: -20.25007438659668

Token 166: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005567651707679033
    2. '           ' → logprob: -5.75556755065918
    3. 'else' → logprob: -6.38056755065918
    4. 'continue' → logprob: -8.50556755065918
    5. 'elif' → logprob: -8.75556755065918
    6. '<|end|>' → logprob: -8.75556755065918
    7. '   ' → logprob: -9.50556755065918
    8. ' else' → logprob: -9.63056755065918
    9. ' continue' → logprob: -11.38056755065918
    10. '<|end|>' → logprob: -11.50556755065918

Token 167: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10299766063690186
    2. 'else' → logprob: -2.3529977798461914
    3. 'continue' → logprob: -6.352997779846191
    4. '   ' → logprob: -7.852997779846191
    5. ' else' → logprob: -8.477997779846191
    6. 'elif' → logprob: -8.477997779846191
    7. '           ' → logprob: -8.477997779846191
    8. ' continue' → logprob: -11.602997779846191
    9. '<|end|>' → logprob: -11.602997779846191
    10. '```' → logprob: -11.727997779846191

Token 168: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.1085330918431282
    2. '       ' → logprob: -2.3585331439971924
    3. 'elif' → logprob: -5.233532905578613
    4. ' else' → logprob: -6.108532905578613
    5. '   ' → logprob: -7.233532905578613
    6. ' elif' → logprob: -11.733532905578613
    7. 'continue' → logprob: -13.483532905578613
    8. '           ' → logprob: -14.358532905578613
    9. '	else' → logprob: -14.983532905578613
    10. '```' → logprob: -15.233532905578613

Token 169: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2868838310241699
    2. ':' → logprob: -1.41188383102417
    3. ' if' → logprob: -5.53688383102417
    4. '           ' → logprob: -7.03688383102417
    5. '<|end|>' → logprob: -8.536884307861328
    6. 'if' → logprob: -8.661884307861328
    7. ' :
' → logprob: -8.911884307861328
    8. '       ' → logprob: -8.911884307861328
    9. ':

' → logprob: -9.411884307861328
    10. ',' → logprob: -9.911884307861328

Token 170: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.856845498085022
    2. 'if' → logprob: -0.981845498085022
    3. '       ' → logprob: -1.981845498085022
    4. '   ' → logprob: -3.1068453788757324
    5. '           ' → logprob: -5.231845378875732
    6. 'card' → logprob: -5.481845378875732
    7. ' last' → logprob: -6.231845378875732
    8. 'last' → logprob: -6.481845378875732
    9. 'prev' → logprob: -6.981845378875732
    10. 'elif' → logprob: -7.231845378875732

Token 171: ' last' (ID: 2174)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0528852939605713
    2. 'played' → logprob: -1.4278852939605713
    3. 'card' → logprob: -2.1778852939605713
    4. '#' → logprob: -2.4278852939605713
    5. 'last' (adapté à ' last') → logprob: -2.8028852939605713
    6. '   ' → logprob: -3.8028852939605713
    7. 'idx' → logprob: -3.9278852939605713
    8. 'possible' → logprob: -4.052885055541992
    9. ' played' → logprob: -4.177885055541992
    10. 'c' → logprob: -4.552885055541992

Token 172: ' =' (ID: 314)
  Prédit: '_card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_card' → logprob: -0.005469013471156359
    2. '_' → logprob: -6.005468845367432
    3. '_val' → logprob: -6.380468845367432
    4. ' =' → logprob: -7.630468845367432
    5. '_value' → logprob: -8.00546932220459
    6. '=' → logprob: -8.13046932220459
    7. 'card' → logprob: -9.38046932220459
    8. '_field' → logprob: -10.25546932220459
    9. '_num' → logprob: -11.00546932220459
    10. '_rank' → logprob: -11.38046932220459

Token 173: ' field' (ID: 3259)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'field' → logprob: -0.2519298195838928
    2. ' field' → logprob: -1.501929759979248
    3. '	field' → logprob: -14.751930236816406
    4. '(field' → logprob: -16.376930236816406
    5. ' ' → logprob: -16.876930236816406
    6. ' ' → logprob: -17.126930236816406
    7. '$field' → logprob: -17.126930236816406
    8. '[field' → logprob: -17.376930236816406
    9. '   ' → logprob: -17.876930236816406
    10. '.field' → logprob: -18.126930236816406

Token 174: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -16.0
    3. '-' → logprob: -16.25
    4. '[
' → logprob: -20.625
    5. '   ' → logprob: -20.75
    6. ' [-' → logprob: -21.25
    7. '=' → logprob: -22.25
    8. '][-' → logprob: -22.25
    9. '.' → logprob: -22.625
    10. '−' → logprob: -22.875

Token 175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. ']' → logprob: -19.125
    4. '
' → logprob: -19.75
    5. '   ' → logprob: -20.4375
    6. ')' → logprob: -20.4375
    7. '  ' → logprob: -20.625
    8. '１' → logprob: -20.625
    9. 'len' → logprob: -20.625
    10. '2' → logprob: -20.6875

Token 176: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.20156069099903107
    2. ']' → logprob: -1.7015607357025146
    3. ')' → logprob: -9.951560974121094
    4. ')
' → logprob: -10.076560974121094
    5. ']

' → logprob: -10.701560974121094
    6. ']
' → logprob: -11.076560974121094
    7. ' ]
' → logprob: -11.326560974121094
    8. ' ]' → logprob: -12.451560974121094
    9. '])' → logprob: -14.576560974121094
    10. ']+' → logprob: -14.701560974121094

Token 177: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2671284675598145
    2. 'if' → logprob: -1.3921284675598145
    3. '           ' → logprob: -1.5171284675598145
    4. 'idx' → logprob: -1.8921284675598145
    5. '#' → logprob: -3.1421284675598145
    6. 'possible' → logprob: -3.8921284675598145
    7. 'import' → logprob: -4.3921284675598145
    8. 'next' → logprob: -5.3921284675598145
    9. 'index' → logprob: -5.8921284675598145
    10. ' if' → logprob: -5.8921284675598145

Token 178: ' #' (ID: 1069)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.6724215149879456
    2. 'if' → logprob: -1.6724214553833008
    3. '           ' → logprob: -2.797421455383301
    4. '#' (adapté à ' #') → logprob: -2.797421455383301
    5. 'card' → logprob: -3.422421455383301
    6. 'import' → logprob: -3.422421455383301
    7. 'found' → logprob: -3.672421455383301
    8. 'played' → logprob: -3.672421455383301
    9. 'possible' → logprob: -3.797421455383301
    10. 'play' → logprob: -4.547421455383301

Token 179: ' find' (ID: 1646)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.7812945246696472
    2. 'c' → logprob: -1.281294584274292
    3. 'possible' → logprob: -2.781294584274292
    4. '#' → logprob: -2.906294584274292
    5. 'if' → logprob: -3.156294584274292
    6. 'import' → logprob: -3.656294584274292
    7. 'play' → logprob: -4.406294345855713
    8. 'pos' → logprob: -4.406294345855713
    9. 'valid' → logprob: -4.406294345855713
    10. 'candidate' → logprob: -5.156294345855713

Token 180: ' smallest' (ID: 42173)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.41893470287323
    2. 'import' → logprob: -1.79393470287323
    3. ' idx' → logprob: -2.9189348220825195
    4. 'i' → logprob: -3.4189348220825195
    5. 'next' → logprob: -3.9189348220825195
    6. '           ' → logprob: -4.1689348220825195
    7. 'index' → logprob: -4.1689348220825195
    8. ' i' → logprob: -4.5439348220825195
    9. ' next' → logprob: -5.2939348220825195
    10. 'card' → logprob: -5.2939348220825195

Token 181: ' card' (ID: 4766)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.24808499217033386
    2. ' card' → logprob: -1.9980850219726562
    3. 'idx' → logprob: -3.3730850219726562
    4. '<|end|>' → logprob: -4.498085021972656
    5. 'larg' → logprob: -5.123085021972656
    6. 'index' → logprob: -5.248085021972656
    7. 'possible' → logprob: -5.623085021972656
    8. 'valid' → logprob: -5.873085021972656
    9. 'greater' → logprob: -5.873085021972656
    10. '(card' → logprob: -5.998085021972656

Token 182: ' >' (ID: 1424)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.3747808635234833
    2. ' larger' → logprob: -1.8747808933258057
    3. 'that' → logprob: -3.6247808933258057
    4. 'idx' → logprob: -3.8747808933258057
    5. '<|end|>' → logprob: -3.8747808933258057
    6. '           ' → logprob: -3.9997808933258057
    7. ' in' → logprob: -3.9997808933258057
    8. ' idx' → logprob: -4.499780654907227
    9. ' =' → logprob: -4.624780654907227
    10. ' with' → logprob: -5.624780654907227

Token 183: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.10021130740642548
    2. ' last' → logprob: -2.3502113819122314
    3. '(last' → logprob: -13.350211143493652
    4. '[last' → logprob: -13.475211143493652
    5. '_last' → logprob: -14.225211143493652
    6. '	last' → logprob: -14.725211143493652
    7. ' ' → logprob: -15.475211143493652
    8. '<|end|>' → logprob: -15.475211143493652
    9. ':last' → logprob: -16.47521209716797
    10. 'field' → logprob: -16.97521209716797

Token 184: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 185: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4637191891670227
    2. '           ' → logprob: -1.213719129562378
    3. 'import' → logprob: -3.338719129562378
    4. 'idx' → logprob: -3.963719129562378
    5. 'index' → logprob: -5.713719367980957
    6. 'for' → logprob: -6.213719367980957
    7. ' for' → logprob: -6.338719367980957
    8. ' idx' → logprob: -6.463719367980957
    9. ',' → logprob: -6.713719367980957
    10. '   ' → logprob: -6.838719367980957

Token 186: ' idx' (ID: 14016)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.12394923716783524
    2. 'idx' (adapté à ' idx') → logprob: -2.4989492893218994
    3. 'i' → logprob: -3.8739492893218994
    4. 'index' → logprob: -4.74894905090332
    5. 'from' → logprob: -6.37394905090332
    6. 'pos' → logprob: -6.49894905090332
    7. ' import' → logprob: -7.74894905090332
    8. '           ' → logprob: -7.87394905090332
    9. 'found' → logprob: -8.49894905090332
    10. 'next' → logprob: -8.74894905090332

Token 187: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0045499843545258045
    2. '=' → logprob: -5.504549980163574
    3. '<|end|>' → logprob: -8.129549980163574
    4. ' ' → logprob: -8.754549980163574
    5. '<|end|>' → logprob: -12.004549980163574
    6. ')' → logprob: -12.254549980163574
    7. 'import' → logprob: -12.879549980163574
    8. ',' → logprob: -13.504549980163574
    9. ' =)' → logprob: -14.504549980163574
    10. ' =
' → logprob: -14.629549980163574

Token 188: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07645714282989502
    2. 'next' → logprob: -3.0764570236206055
    3. ' ' → logprob: -3.8264570236206055
    4. ' next' → logprob: -6.0764570236206055
    5. '-' → logprob: -6.4514570236206055
    6. 'len' → logprob: -6.8264570236206055
    7. 'None' → logprob: -7.8264570236206055
    8. 'bis' → logprob: -9.201457023620605
    9. '[next' → logprob: -9.451457023620605
    10. '[' → logprob: -9.951457023620605

Token 189: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03679750859737396
    2. 'next' → logprob: -3.411797523498535
    3. '-' → logprob: -6.536797523498535
    4. 'len' → logprob: -7.036797523498535
    5. ' ' → logprob: -7.911797523498535
    6. 'bis' → logprob: -8.661797523498535
    7. ' next' → logprob: -9.411797523498535
    8. '[' → logprob: -9.661797523498535
    9. 'None' → logprob: -9.661797523498535
    10. '[next' → logprob: -10.161797523498535

Token 190: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 191: '           ' (ID: 352)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.017803724855184555
    2. '
' → logprob: -4.64280366897583
    3. ' while' → logprob: -5.14280366897583
    4. '           ' → logprob: -7.01780366897583
    5. '<|end|>' → logprob: -7.26780366897583
    6. '       ' → logprob: -8.517804145812988
    7. 'for' → logprob: -8.892804145812988
    8. 'len' → logprob: -9.767804145812988
    9. '	while' → logprob: -10.017804145812988
    10. 'While' → logprob: -10.517804145812988

Token 192: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.026042716577649117
    2. 'len' → logprob: -4.026042938232422
    3. '-' → logprob: -5.401042938232422
    4. 'None' → logprob: -6.401042938232422
    5. 'for' → logprob: -6.651042938232422
    6. ' while' → logprob: -8.276042938232422
    7. '
' → logprob: -9.651042938232422
    8. '           ' → logprob: -10.651042938232422
    9. 'found' → logprob: -11.526042938232422
    10. '0' → logprob: -11.776042938232422

Token 193: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -3.2378600735682994e-05
    2. ' idx' → logprob: -10.375032424926758
    3. '	idx' → logprob: -13.875032424926758
    4. '(idx' → logprob: -15.750032424926758
    5. 'hand' → logprob: -17.250032424926758
    6. 'index' → logprob: -17.375032424926758
    7. '_idx' → logprob: -17.875032424926758
    8. '
' → logprob: -18.750032424926758
    9. 'len' → logprob: -19.000032424926758
    10. '```' → logprob: -19.125032424926758

Token 194: ' <' (ID: 464)
  Prédit: '<len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<len' → logprob: -0.08439025282859802
    2. '<' → logprob: -2.584390163421631
    3. ' <' → logprob: -5.209390163421631
    4. 'len' → logprob: -11.209390640258789
    5. '<size' → logprob: -12.834390640258789
    6. '<n' → logprob: -13.084390640258789
    7. '<num' → logprob: -14.459390640258789
    8. '<ll' → logprob: -14.959390640258789
    9. '<th' → logprob: -15.459390640258789
    10. '<src' → logprob: -15.709390640258789

Token 195: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -5.955703818472102e-05
    2. ' len' → logprob: -9.750059127807617
    3. '(len' → logprob: -13.750059127807617
    4. '	len' → logprob: -17.125059127807617
    5. '<len' → logprob: -17.875059127807617
    6. '   ' → logprob: -18.250059127807617
    7. '=len' → logprob: -18.250059127807617
    8. ',len' → logprob: -18.875059127807617
    9. '[len' → logprob: -19.875059127807617
    10. '
' → logprob: -20.000059127807617

Token 196: '(hand' (ID: 154311)
  Prédit: '(hand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(hand' → logprob: -0.011149805039167404
    2. 'hand' → logprob: -4.511149883270264
    3. '(' → logprob: -9.511149406433105
    4. ' hand' → logprob: -10.511149406433105
    5. '(h' → logprob: -14.636149406433105
    6. '_hand' → logprob: -16.261150360107422
    7. 'Hand' → logprob: -16.261150360107422
    8. '.hand' → logprob: -17.636150360107422
    9. '(
' → logprob: -18.511150360107422
    10. 'of' → logprob: -18.886150360107422

Token 197: ')' (ID: 8)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20146137475967407
    2. 'and' → logprob: -1.7014613151550293
    3. ')' → logprob: -10.076461791992188
    4. ' и' → logprob: -13.326461791992188
    5. '	and' → logprob: -13.576461791992188
    6. ' ' → logprob: -14.326461791992188
    7. '):
' → logprob: -14.951461791992188
    8. '   ' → logprob: -15.076461791992188
    9. '           ' → logprob: -15.076461791992188
    10. ' và' → logprob: -16.076461791992188

Token 198: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.03804241120815277
    2. ' and' → logprob: -3.2880423069000244
    3. ' ' → logprob: -14.163042068481445
    4. '   ' → logprob: -16.163042068481445
    5. '	and' → logprob: -16.288042068481445
    6. '           ' → logprob: -16.538042068481445
    7. '```' → logprob: -17.538042068481445
    8. ' и' → logprob: -17.788042068481445
    9. '       ' → logprob: -18.163042068481445
    10. '  ' → logprob: -18.288042068481445

Token 199: ' hand' (ID: 1803)
  Prédit: 'hand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hand' → logprob: -0.00017994173686020076
    2. ' hand' → logprob: -8.6251802444458
    3. '   ' → logprob: -16.250179290771484
    4. '(hand' → logprob: -16.250179290771484
    5. 'hands' → logprob: -16.750179290771484
    6. 'hando' → logprob: -16.875179290771484
    7. ' ' → logprob: -18.375179290771484
    8. '  ' → logprob: -18.750179290771484
    9. 'hang' → logprob: -19.000179290771484
    10. 'han' → logprob: -19.125179290771484

Token 200: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.7432603272027336e-06
    2. '[' → logprob: -13.625001907348633
    3. 'idx' → logprob: -15.000001907348633
    4. ' idx' → logprob: -17.000001907348633
    5. '	idx' → logprob: -18.000001907348633
    6. ' [' → logprob: -18.500001907348633
    7. '[id' → logprob: -18.625001907348633
    8. '[index' → logprob: -19.625001907348633
    9. '[
' → logprob: -20.000001907348633
    10. '(idx' → logprob: -20.000001907348633

Token 201: ']' (ID: 60)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.0038903378881514072
    2. ' <=' → logprob: -6.253890514373779
    3. ']' → logprob: -6.628890514373779
    4. ']<=' → logprob: -7.378890514373779
    5. ')<=' → logprob: -12.503890037536621
    6. '[' → logprob: -12.753890037536621
    7. '"' → logprob: -13.378890037536621
    8. '```' → logprob: -13.628890037536621
    9. '}' → logprob: -13.878890037536621
    10. ' ' → logprob: -14.503890037536621

Token 202: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.00408397801220417
    2. ' <=' → logprob: -5.50408411026001
    3. ')<=' → logprob: -12.879083633422852
    4. ']<=' → logprob: -13.504083633422852
    5. ')' → logprob: -14.254083633422852
    6. '[' → logprob: -15.254083633422852
    7. '```' → logprob: -15.754083633422852
    8. '<' → logprob: -15.879083633422852
    9. 'le' → logprob: -16.50408363342285
    10. '>' → logprob: -16.62908363342285

Token 203: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.10020796209573746
    2. ' last' → logprob: -2.350208044052124
    3. '	last' → logprob: -14.850208282470703
    4. ' ' → logprob: -15.100208282470703
    5. 'field' → logprob: -15.600208282470703
    6. '[last' → logprob: -15.975208282470703
    7. '(last' → logprob: -16.350208282470703
    8. '_last' → logprob: -16.725208282470703
    9. ':last' → logprob: -17.350208282470703
    10. ' field' → logprob: -17.350208282470703

Token 204: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3872140347957611
    2. ':' → logprob: -1.1372140645980835
    3. '):
' → logprob: -9.012213706970215
    4. '   ' → logprob: -9.512213706970215
    5. 'idx' → logprob: -9.637213706970215
    6. ' idx' → logprob: -10.387213706970215
    7. '       ' → logprob: -10.762213706970215
    8. ' :
' → logprob: -11.512213706970215
    9. '           ' → logprob: -12.512213706970215
    10. '	idx' → logprob: -12.762213706970215

Token 205: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.717696487903595
    2. ':
' → logprob: -1.2176964282989502
    3. '   ' → logprob: -2.34269642829895
    4. ':' → logprob: -2.59269642829895
    5. '           ' → logprob: -3.59269642829895
    6. 'idx' → logprob: -4.467696666717529
    7. ' idx' → logprob: -6.342696666717529
    8. '++' → logprob: -6.967696666717529
    9. '):
' → logprob: -6.967696666717529
    10. '+' → logprob: -7.592696666717529

Token 206: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.1270144134759903
    2. ' idx' → logprob: -2.127014398574829
    3. '   ' → logprob: -9.87701416015625
    4. '	idx' → logprob: -10.37701416015625
    5. '           ' → logprob: -12.87701416015625
    6. '               ' → logprob: -15.00201416015625
    7. '[idx' → logprob: -15.00201416015625
    8. '
' → logprob: -15.37701416015625
    9. '(idx' → logprob: -15.87701416015625
    10. '_idx' → logprob: -16.00201416015625

Token 207: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3142661154270172
    2. ' +=' → logprob: -1.3142660856246948
    3. '+' → logprob: -6.939266204833984
    4. '   ' → logprob: -11.064266204833984
    5. '=' → logprob: -12.064266204833984
    6. ']+=' → logprob: -12.439266204833984
    7. ' +' → logprob: -12.814266204833984
    8. '    ' → logprob: -13.189266204833984
    9. '1' → logprob: -13.439266204833984
    10. '+='' → logprob: -14.189266204833984

Token 208: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -17.625085830688477
    4. '
' → logprob: -19.000085830688477
    5. '１' → logprob: -19.375085830688477
    6. '```' → logprob: -19.437585830688477
    7. '  ' → logprob: -19.625085830688477
    8. '۱' → logprob: -20.250085830688477
    9. '+' → logprob: -20.937585830688477
    10. '0' → logprob: -21.000085830688477

Token 209: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -17.500019073486328
    4. '```' → logprob: -18.437519073486328
    5. '１' → logprob: -19.125019073486328
    6. '0' → logprob: -19.187519073486328
    7. '  ' → logprob: -19.437519073486328
    8. '
' → logprob: -19.812519073486328
    9. '۱' → logprob: -20.000019073486328
    10. '১' → logprob: -20.875019073486328

Token 210: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02138928882777691
    2. 'if' → logprob: -4.021389484405518
    3. ' if' → logprob: -6.271389484405518
    4. '           ' → logprob: -6.771389484405518
    5. '   ' → logprob: -9.77138900756836
    6. '<|end|>' → logprob: -10.14638900756836
    7. '        
' → logprob: -10.27138900756836
    8. '
' → logprob: -11.64638900756836
    9. '```' → logprob: -11.77138900756836
    10. '        ' → logprob: -11.77138900756836

Token 211: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18285338580608368
    2. 'if' → logprob: -2.1828534603118896
    3. ' if' → logprob: -2.9328534603118896
    4. '<|end|>' → logprob: -7.5578532218933105
    5. '   ' → logprob: -8.432853698730469
    6. '           ' → logprob: -8.807853698730469
    7. '	if' → logprob: -9.557853698730469
    8. '        
' → logprob: -9.932853698730469
    9. '<|end|>' → logprob: -10.432853698730469
    10. ';if' → logprob: -11.182853698730469

Token 212: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.002512166043743491
    2. '       ' → logprob: -6.627511978149414
    3. ' if' → logprob: -6.752511978149414
    4. '   ' → logprob: -11.502511978149414
    5. '           ' → logprob: -12.002511978149414
    6. '	if' → logprob: -14.002511978149414
    7. 'If' → logprob: -15.502511978149414
    8. '```' → logprob: -15.627511978149414
    9. ' ' → logprob: -17.002511978149414
    10. '    ' → logprob: -17.627511978149414

Token 213: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.16022808849811554
    2. ' idx' → logprob: -1.9102281332015991
    3. '   ' → logprob: -13.28522777557373
    4. '	idx' → logprob: -13.66022777557373
    5. '(idx' → logprob: -14.41022777557373
    6. ' ' → logprob: -15.66022777557373
    7. '[idx' → logprob: -16.035228729248047
    8. '           ' → logprob: -16.410228729248047
    9. 'index' → logprob: -16.910228729248047
    10. '_idx' → logprob: -17.285228729248047

Token 214: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6709144711494446
    2. '==' → logprob: -0.9209144711494446
    3. '<' → logprob: -3.0459144115448
    4. ' <' → logprob: -3.1709144115448
    5. '<len' → logprob: -7.420914649963379
    6. '>=' → logprob: -8.545914649963379
    7. '<|end|>' → logprob: -8.795914649963379
    8. ' >=' → logprob: -9.545914649963379
    9. '=' → logprob: -10.795914649963379
    10. ' ' → logprob: -11.920914649963379

Token 215: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.8921695047756657e-05
    2. ' len' → logprob: -10.500028610229492
    3. '0' → logprob: -14.750028610229492
    4. '   ' → logprob: -14.750028610229492
    5. '	len' → logprob: -14.875028610229492
    6. '(len' → logprob: -16.875028610229492
    7. ' ' → logprob: -16.875028610229492
    8. '=len' → logprob: -17.000028610229492
    9. '<len' → logprob: -17.250028610229492
    10. '[len' → logprob: -17.875028610229492

Token 216: '(hand' (ID: 154311)
  Prédit: '(hand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(hand' → logprob: -5.836499985889532e-05
    2. 'hand' → logprob: -9.7500581741333
    3. '(' → logprob: -17.125059127807617
    4. 'Hand' → logprob: -17.250059127807617
    5. '_hand' → logprob: -17.250059127807617
    6. ' hand' → logprob: -17.875059127807617
    7. '(h' → logprob: -19.000059127807617
    8. '.hand' → logprob: -20.500059127807617
    9. '手' → logprob: -21.875059127807617
    10. '```' → logprob: -23.125059127807617

Token 217: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.15606720745563507
    2. '):
' → logprob: -2.031067132949829
    3. ':' → logprob: -4.406067371368408
    4. ':
' → logprob: -7.031067371368408
    5. ' or' → logprob: -9.28106689453125
    6. ')' → logprob: -9.78106689453125
    7. '       ' → logprob: -11.65606689453125
    8. '):

' → logprob: -11.65606689453125
    9. ']:' → logprob: -11.65606689453125
    10. '           ' → logprob: -11.78106689453125

Token 218: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8498002886772156
    2. 'card' → logprob: -0.9748002886772156
    3. 'field' → logprob: -2.0998003482818604
    4. '#' → logprob: -3.0998003482818604
    5. '   ' → logprob: -4.474800109863281
    6. 'if' → logprob: -5.224800109863281
    7. '               ' → logprob: -5.474800109863281
    8. '
' → logprob: -6.974800109863281
    9. ' field' → logprob: -7.349800109863281
    10. ' card' → logprob: -7.474800109863281

Token 219: ' #' (ID: 1069)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'field' → logprob: -0.27992498874664307
    2. 'card' → logprob: -1.904924988746643
    3. 'if' → logprob: -2.6549248695373535
    4. 'last' → logprob: -4.6549248695373535
    5. '#' (adapté à ' #') → logprob: -5.0299248695373535
    6. '               ' → logprob: -5.9049248695373535
    7. '   ' → logprob: -6.2799248695373535
    8. 'hand' → logprob: -6.9049248695373535
    9. 'top' → logprob: -7.7799248695373535
    10. 'played' → logprob: -8.279925346374512

Token 220: ' no' (ID: 860)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'field' → logprob: -0.2985370457172394
    2. 'if' → logprob: -1.798537015914917
    3. 'card' → logprob: -2.923537015914917
    4. '#' → logprob: -3.548537015914917
    5. '   ' → logprob: -5.423537254333496
    6. 'hand' → logprob: -6.298537254333496
    7. 'last' → logprob: -6.923537254333496
    8. '
' → logprob: -7.673537254333496
    9. 'player' → logprob: -8.048537254333496
    10. 'played' → logprob: -8.673537254333496

Token 221: ' card' (ID: 4766)
  Prédit: ' card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' card' → logprob: -0.4720653295516968
    2. ' cards' → logprob: -2.3470654487609863
    3. 'cards' → logprob: -2.3470654487609863
    4. 'card' → logprob: -2.5970654487609863
    5. ' valid' → logprob: -2.7220654487609863
    6. 'valid' → logprob: -4.222065448760986
    7. ' more' → logprob: -4.597065448760986
    8. 'choice' → logprob: -5.597065448760986
    9. 'more' → logprob: -5.972065448760986
    10. ' hand' → logprob: -6.222065448760986

Token 222: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5049266815185547
    2. ':
' → logprob: -2.5049266815185547
    3. '   ' → logprob: -2.7549266815185547
    4. ' to' → logprob: -3.1299266815185547
    5. '               ' → logprob: -3.2549266815185547
    6. ':' → logprob: -3.5049266815185547
    7. ' =' → logprob: -3.7549266815185547
    8. '       ' → logprob: -4.129926681518555
    9. 'play' → logprob: -4.379926681518555
    10. ' can' → logprob: -4.754926681518555

Token 223: ' put' (ID: 3006)
  Prédit: 'play'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'play' → logprob: -0.004783138167113066
    2. ' play' → logprob: -5.5047831535339355
    3. 'place' → logprob: -8.629782676696777
    4. 'field' → logprob: -8.629782676696777
    5. 'put' → logprob: -9.379782676696777
    6. 'beat' → logprob: -9.754782676696777
    7. 'continue' → logprob: -9.754782676696777
    8. ' ' → logprob: -11.004782676696777
    9. 'throw' → logprob: -11.004782676696777
    10. ' field' → logprob: -11.379782676696777

Token 224: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4362374544143677
    2. '               ' → logprob: -1.4362374544143677
    3. 'field' → logprob: -1.9362374544143677
    4. '           ' → logprob: -2.436237335205078
    5. 'print' → logprob: -2.561237335205078
    6. 'if' → logprob: -3.061237335205078
    7. '#' → logprob: -3.311237335205078
    8. ' if' → logprob: -3.561237335205078
    9. ' field' → logprob: -3.561237335205078
    10. ' last' → logprob: -4.561237335205078

Token 225: ' pass' (ID: 1853)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'field' → logprob: -0.14441139996051788
    2. 'if' → logprob: -2.644411325454712
    3. '#' → logprob: -3.644411325454712
    4. 'card' → logprob: -4.269411563873291
    5. '   ' → logprob: -5.019411563873291
    6. 'last' → logprob: -5.519411563873291
    7. 'picked' → logprob: -6.269411563873291
    8. 'taken' → logprob: -6.644411563873291
    9. ' field' → logprob: -7.019411563873291
    10. '               ' → logprob: -7.019411563873291

Token 226: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016040585935115814
    2. '       ' → logprob: -5.266040802001953
    3. 'turn' → logprob: -5.891040802001953
    4. ' if' → logprob: -5.891040802001953
    5. ' turn' → logprob: -6.391040802001953
    6. 'field' → logprob: -7.391040802001953
    7. '   ' → logprob: -7.516040802001953
    8. 'if' → logprob: -7.516040802001953
    9. ',' → logprob: -7.891040802001953
    10. '
' → logprob: -8.016040802001953

Token 227: ' clear' (ID: 5364)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'field' → logprob: -0.10759855806827545
    2. ' field' → logprob: -3.6075985431671143
    3. 'if' → logprob: -4.107598781585693
    4. 'turn' → logprob: -4.107598781585693
    5. '   ' → logprob: -4.607598781585693
    6. 'break' → logprob: -4.732598781585693
    7. '#' → logprob: -5.232598781585693
    8. 'last' → logprob: -5.232598781585693
    9. 'card' → logprob: -6.107598781585693
    10. ' if' → logprob: -6.232598781585693

Token 228: ' field' (ID: 3259)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'field' → logprob: -0.018228961154818535
    2. ' field' → logprob: -4.018229007720947
    3. '   ' → logprob: -9.768228530883789
    4. '(field' → logprob: -11.393228530883789
    5. '	field' → logprob: -13.143228530883789
    6. '           ' → logprob: -13.268228530883789
    7. '
' → logprob: -13.893228530883789
    8. '               ' → logprob: -14.018228530883789
    9. '```' → logprob: -14.018228530883789
    10. '.field' → logprob: -14.393228530883789

Token 229: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01797526702284813
    2. '               ' → logprob: -5.017975330352783
    3. ',' → logprob: -5.517975330352783
    4. '       ' → logprob: -5.892975330352783
    5. '
' → logprob: -5.892975330352783
    6. '()
' → logprob: -8.142974853515625
    7. ',
' → logprob: -8.267974853515625
    8. '                   ' → logprob: -8.767974853515625
    9. '<|end|>' → logprob: -9.017974853515625
    10. '()' → logprob: -9.267974853515625

Token 230: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04929151013493538
    2. '               ' → logprob: -3.4242916107177734
    3. 'field' → logprob: -4.549291610717773
    4. ' field' → logprob: -5.799291610717773
    5. '   ' → logprob: -7.049291610717773
    6. '       ' → logprob: -7.424291610717773
    7. '
' → logprob: -8.299291610717773
    8. '```' → logprob: -10.174291610717773
    9. ',' → logprob: -10.299291610717773
    10. '(field' → logprob: -10.424291610717773

Token 231: ' field' (ID: 3259)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'field' (adapté à ' field') → logprob: -0.0008210649830289185
    2. ' field' → logprob: -7.750821113586426
    3. '               ' → logprob: -8.500821113586426
    4. '   ' → logprob: -9.375821113586426
    5. 'turn' → logprob: -9.750821113586426
    6. 'if' → logprob: -10.625821113586426
    7. '           ' → logprob: -11.500821113586426
    8. '                   ' → logprob: -12.250821113586426
    9. '	field' → logprob: -14.000821113586426
    10. 'print' → logprob: -14.625821113586426

Token 232: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0045712231658399105
    2. ' =' → logprob: -5.504571437835693
    3. '=[]' → logprob: -8.004570960998535
    4. '.clear' → logprob: -8.754570960998535
    5. '[:]' → logprob: -14.379570960998535
    6. '.=' → logprob: -15.629570960998535
    7. '＝' → logprob: -15.879570960998535
    8. 'clear' → logprob: -16.50457191467285
    9. '=[]
' → logprob: -16.62957191467285
    10. '==' → logprob: -18.12957191467285

Token 233: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00043162284418940544
    2. '[]
' → logprob: -7.750431537628174
    3. ' []' → logprob: -14.250432014465332
    4. '[' → logprob: -15.125432014465332
    5. '[]

' → logprob: -16.000431060791016
    6. '[]}' → logprob: -18.250431060791016
    7. '[],' → logprob: -19.250431060791016
    8. '[]"' → logprob: -20.000431060791016
    9. '[])' → logprob: -20.500431060791016
    10. '[]>' → logprob: -20.750431060791016

Token 234: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0244198776781559
    2. '       ' → logprob: -4.024419784545898
    3. '               ' → logprob: -5.524419784545898
    4. 'turn' → logprob: -6.399419784545898
    5. ' turn' → logprob: -7.524419784545898
    6. '   ' → logprob: -9.774419784545898
    7. '(turn' → logprob: -13.899419784545898
    8. ',' → logprob: -15.024419784545898
    9. '```' → logprob: -15.149419784545898
    10. '            
' → logprob: -15.399419784545898

Token 235: ' turn' (ID: 3716)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' (adapté à ' turn') → logprob: -0.007404299918562174
    2. '           ' → logprob: -5.382404327392578
    3. '               ' → logprob: -6.257404327392578
    4. '       ' → logprob: -7.632404327392578
    5. ' turn' → logprob: -8.007404327392578
    6. '   ' → logprob: -10.507404327392578
    7. '(turn' → logprob: -11.132404327392578
    8. 'hand' → logprob: -13.632404327392578
    9. 't' → logprob: -13.882404327392578
    10. '.turn' → logprob: -14.757404327392578

Token 236: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014165159314870834
    2. ' =' → logprob: -4.264164924621582
    3. '+=' → logprob: -13.389164924621582
    4. ' +=' → logprob: -15.639164924621582
    5. ' ^=' → logprob: -17.6391658782959
    6. ' ' → logprob: -17.7641658782959
    7. '0' → logprob: -18.5141658782959
    8. '   ' → logprob: -19.0141658782959
    9. '1' → logprob: -19.3891658782959
    10. '.=' → logprob: -19.6391658782959

Token 237: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006822643335908651
    2. ' ' → logprob: -5.00682258605957
    3. '0' → logprob: -9.25682258605957
    4. '(' → logprob: -12.25682258605957
    5. ' (' → logprob: -12.25682258605957
    6. '   ' → logprob: -13.63182258605957
    7. 't' → logprob: -15.00682258605957
    8. '  ' → logprob: -15.94432258605957
    9. 'not' → logprob: -16.19432258605957
    10. 'the' → logprob: -17.06932258605957

Token 238: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000891332805622369
    2. ' ' → logprob: -7.125891208648682
    3. '0' → logprob: -9.62589168548584
    4. '(' → logprob: -11.00089168548584
    5. ' (' → logprob: -13.12589168548584
    6. '   ' → logprob: -14.00089168548584
    7. 't' → logprob: -15.12589168548584
    8. 'turn' → logprob: -15.25089168548584
    9. '```' → logprob: -16.125890731811523
    10. '(turn' → logprob: -16.250890731811523

Token 239: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16022931039333344
    2. ' -' → logprob: -1.9102293252944946
    3. '-turn' → logprob: -12.285229682922363
    4. ' ' → logprob: -15.660229682922363
    5. '   ' → logprob: -15.785229682922363
    6. '-ex' → logprob: -17.285228729248047
    7. '-
' → logprob: -17.410228729248047
    8. '-token' → logprob: -17.660228729248047
    9. '+' → logprob: -17.910228729248047
    10. '‌' → logprob: -18.035228729248047

Token 240: ' turn' (ID: 3716)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.00038038729690015316
    2. ' turn' → logprob: -7.875380516052246
    3. '(turn' → logprob: -15.625380516052246
    4. '   ' → logprob: -17.37537956237793
    5. ' ' → logprob: -18.37537956237793
    6. 'token' → logprob: -19.37537956237793
    7. '.turn' → logprob: -19.37537956237793
    8. '  ' → logprob: -19.62537956237793
    9. '
' → logprob: -20.00037956237793
    10. 'turned' → logprob: -20.12537956237793

Token 241: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006721536163240671
    2. '       ' → logprob: -5.881721496582031
    3. '               ' → logprob: -6.131721496582031
    4. 'else' → logprob: -6.881721496582031
    5. ' else' → logprob: -8.256721496582031
    6. '
' → logprob: -8.381721496582031
    7. '<|end|>' → logprob: -9.006721496582031
    8. '   ' → logprob: -10.756721496582031
    9. 'continue' → logprob: -11.131721496582031
    10. '<|end|>' → logprob: -11.756721496582031

Token 242: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02427537553012371
    2. '       ' → logprob: -3.899275302886963
    3. '               ' → logprob: -6.149275302886963
    4. 'else' → logprob: -6.524275302886963
    5. 'continue' → logprob: -9.399275779724121
    6. ' else' → logprob: -10.649275779724121
    7. '   ' → logprob: -11.399275779724121
    8. ' continue' → logprob: -13.524275779724121
    9. '```' → logprob: -13.774275779724121
    10. '		' → logprob: -14.274275779724121

Token 243: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3152867555618286
    2. 'else' (adapté à ' else') → logprob: -1.3152867555618286
    3. '           ' → logprob: -6.690286636352539
    4. ' else' → logprob: -7.190286636352539
    5. '   ' → logprob: -11.065286636352539
    6. 'elif' → logprob: -12.065286636352539
    7. 'continue' → logprob: -13.315286636352539
    8. '	else' → logprob: -13.440286636352539
    9. '	' → logprob: -14.690286636352539
    10. '               ' → logprob: -15.440286636352539

Token 244: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.051712773740291595
    2. ':
' → logprob: -3.42671275138855
    3. ':' → logprob: -4.176712989807129
    4. '           ' → logprob: -6.051712989807129
    5. ' :
' → logprob: -10.301712989807129
    6. '                   ' → logprob: -10.426712989807129
    7. ' :' → logprob: -10.551712989807129
    8. '   ' → logprob: -11.176712989807129
    9. '                
' → logprob: -11.301712989807129
    10. '):
' → logprob: -11.551712989807129

Token 245: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10487767308950424
    2. 'card' → logprob: -3.2298777103424072
    3. '           ' → logprob: -3.3548777103424072
    4. ' card' → logprob: -3.7298777103424072
    5. ' hand' → logprob: -8.604877471923828
    6. ' field' → logprob: -8.604877471923828
    7. 'field' → logprob: -8.854877471923828
    8. '```' → logprob: -9.104877471923828
    9. '	card' → logprob: -9.104877471923828
    10. 'hand' → logprob: -9.604877471923828

Token 246: ' card' (ID: 4766)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' (adapté à ' card') → logprob: -0.062315523624420166
    2. ' card' → logprob: -2.8123154640197754
    3. '               ' → logprob: -8.187315940856934
    4. '	card' → logprob: -10.187315940856934
    5. 'field' → logprob: -11.062315940856934
    6. '   ' → logprob: -11.937315940856934
    7. '           ' → logprob: -13.437315940856934
    8. 'hand' → logprob: -13.437315940856934
    9. ' ' → logprob: -13.562315940856934
    10. ' field' → logprob: -13.812315940856934

Token 247: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740770161151886
    2. '=' → logprob: -0.9740769863128662
    3. ' ' → logprob: -17.224077224731445
    4. '=

' → logprob: -19.224077224731445
    5. '＝' → logprob: -19.224077224731445
    6. '   ' → logprob: -19.349077224731445
    7. ' =
' → logprob: -19.474077224731445
    8. ')' → logprob: -19.599077224731445
    9. '=
' → logprob: -19.849077224731445
    10. '=}' → logprob: -20.474077224731445

Token 248: ' hand' (ID: 1803)
  Prédit: 'hand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hand' → logprob: -0.01416350994259119
    2. ' hand' → logprob: -4.264163494110107
    3. 'hands' → logprob: -18.139163970947266
    4. 'Hand' → logprob: -18.389163970947266
    5. 'head' → logprob: -18.514163970947266
    6. '   ' → logprob: -18.889163970947266
    7. '(hand' → logprob: -18.889163970947266
    8. ' ' → logprob: -20.264163970947266
    9. '手' → logprob: -20.264163970947266
    10. '_hand' → logprob: -20.639163970947266

Token 249: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0788925439119339
    2. '.pop' → logprob: -2.578892469406128
    3. 'pop' → logprob: -13.203892707824707
    4. 'idx' → logprob: -14.078892707824707
    5. '.' → logprob: -16.82889175415039
    6. '(idx' → logprob: -17.07889175415039
    7. ' idx' → logprob: -18.20389175415039
    8. '[pos' → logprob: -18.20389175415039
    9. '[index' → logprob: -18.32889175415039
    10. ' pop' → logprob: -18.70389175415039

Token 250: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2519764304161072
    2. ']
' → logprob: -1.501976490020752
    3. ')' → logprob: -11.126976013183594
    4. ']

' → logprob: -11.376976013183594
    5. ')
' → logprob: -11.751976013183594
    6. ' ]' → logprob: -12.001976013183594
    7. ']
' → logprob: -12.501976013183594
    8. ' ]
' → logprob: -14.001976013183594
    9. '])' → logprob: -14.876976013183594
    10. ')]' → logprob: -15.251976013183594

Token 251: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005402852548286319
    2. 'hand' → logprob: -8.250540733337402
    3. '           ' → logprob: -8.500540733337402
    4. ' hand' → logprob: -9.875540733337402
    5. '                
' → logprob: -11.875540733337402
    6. '       ' → logprob: -12.500540733337402
    7. '                   ' → logprob: -13.125540733337402
    8. '
' → logprob: -13.250540733337402
    9. '```' → logprob: -13.250540733337402
    10. '              ' → logprob: -13.250540733337402

Token 252: ' hand' (ID: 1803)
  Prédit: 'hand'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hand' (adapté à ' hand') → logprob: -0.000992199289612472
    2. ' hand' → logprob: -7.125992298126221
    3. 'field' → logprob: -9.000991821289062
    4. '               ' → logprob: -9.875991821289062
    5. 'del' → logprob: -12.625991821289062
    6. '           ' → logprob: -13.125991821289062
    7. '                   ' → logprob: -13.125991821289062
    8. 'card' → logprob: -13.125991821289062
    9. '   ' → logprob: -13.375991821289062
    10. ' del' → logprob: -14.250991821289062

Token 253: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.0007311395602300763
    2. '.' → logprob: -7.250730991363525
    3. '.remove' → logprob: -11.250731468200684
    4. 'pop' → logprob: -11.750731468200684
    5. '```' → logprob: -16.375730514526367
    6. '   ' → logprob: -17.125730514526367
    7. ' .' → logprob: -17.250730514526367
    8. '=' → logprob: -17.500730514526367
    9. '[idx' → logprob: -17.500730514526367
    10. '	pop' → logprob: -17.625730514526367

Token 254: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.0006581080378964543
    2. '(' → logprob: -7.37565803527832
    3. '(
' → logprob: -10.75065803527832
    4. '(index' → logprob: -11.75065803527832
    5. ' (' → logprob: -14.00065803527832
    6. 'idx' → logprob: -14.37565803527832
    7. '(id' → logprob: -15.12565803527832
    8. '(i' → logprob: -16.00065803527832
    9. '(ii' → logprob: -16.00065803527832
    10. '0' → logprob: -16.25065803527832

Token 255: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07889661937952042
    2. ')
' → logprob: -2.5788965225219727
    3. ')

' → logprob: -13.328896522521973
    4. ')
' → logprob: -13.328896522521973
    5. '<|end|>' → logprob: -13.953896522521973
    6. '()' → logprob: -15.078896522521973
    7. '               ' → logprob: -15.203896522521973
    8. ' )' → logprob: -15.328896522521973
    9. ')#' → logprob: -15.453896522521973
    10. '),' → logprob: -15.578896522521973

Token 256: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0023364010266959667
    2. '
' → logprob: -6.377336502075195
    3. 'field' → logprob: -8.002336502075195
    4. '                
' → logprob: -9.502336502075195
    5. '           ' → logprob: -9.752336502075195
    6. '```' → logprob: -10.002336502075195
    7. '<|end|>' → logprob: -10.627336502075195
    8. ' field' → logprob: -11.252336502075195
    9. '       ' → logprob: -11.502336502075195
    10. '  
' → logprob: -11.752336502075195

Token 257: ' field' (ID: 3259)
  Prédit: 'field'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'field' (adapté à ' field') → logprob: -0.00010390079842181876
    2. ' field' → logprob: -9.250103950500488
    3. '               ' → logprob: -11.875103950500488
    4. '   ' → logprob: -15.375103950500488
    5. '           ' → logprob: -15.750103950500488
    6. '                   ' → logprob: -15.875103950500488
    7. 'turn' → logprob: -16.750102996826172
    8. 'if' → logprob: -17.000102996826172
    9. '	field' → logprob: -17.250102996826172
    10. ' ' → logprob: -17.625102996826172

Token 258: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00671940203756094
    2. '.' → logprob: -5.006719589233398
    3. ' .' → logprob: -12.881719589233398
    4. '=' → logprob: -14.006719589233398
    5. '.=' → logprob: -15.006719589233398
    6. '+=' → logprob: -15.506719589233398
    7. ' +=' → logprob: -16.3817195892334
    8. 'append' → logprob: -17.3817195892334
    9. '.app' → logprob: -17.5067195892334
    10. ' =' → logprob: -17.7567195892334

Token 259: '(card' (ID: 51112)
  Prédit: '(card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(card' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.000000953674316
    3. 'card' → logprob: -18.25
    4. '(code' → logprob: -20.875
    5. '(car' → logprob: -21.25
    6. '(Card' → logprob: -21.375
    7. '(cards' → logprob: -21.875
    8. ' card' → logprob: -22.5
    9. '(
' → logprob: -22.5
    10. '(cart' → logprob: -22.75

Token 260: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5777965188026428
    2. ')' → logprob: -0.8277965188026428
    3. '               ' → logprob: -6.327796459197998
    4. '<|end|>' → logprob: -10.202796936035156
    5. ')
' → logprob: -11.577796936035156
    6. '           ' → logprob: -12.077796936035156
    7. '       ' → logprob: -12.202796936035156
    8. '<|end|>' → logprob: -12.952796936035156
    9. '[' → logprob: -13.577796936035156
    10. '
' → logprob: -13.702796936035156

Token 261: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06509815901517868
    2. '
' → logprob: -3.3150980472564697
    3. '<|end|>' → logprob: -4.440098285675049
    4. '\n' → logprob: -4.690098285675049
    5. '       ' → logprob: -5.690098285675049
    6. '```' → logprob: -7.690098285675049
    7. '   ' → logprob: -7.815098285675049
    8. '           ' → logprob: -8.06509780883789
    9. '                
' → logprob: -8.06509780883789
    10. '<|end|>' → logprob: -8.81509780883789

Token 262: ' turn' (ID: 3716)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' (adapté à ' turn') → logprob: -0.0004257892433088273
    2. ' turn' → logprob: -7.875425815582275
    3. '               ' → logprob: -11.000425338745117
    4. '   ' → logprob: -11.625425338745117
    5. '           ' → logprob: -11.750425338745117
    6. '#' → logprob: -12.250425338745117
    7. '       ' → logprob: -13.000425338745117
    8. 'continue' → logprob: -13.375425338745117
    9. 'pass' → logprob: -13.875425338745117
    10. 'print' → logprob: -14.000425338745117

Token 263: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020678490400314
    2. ' =' → logprob: -2.3502068519592285
    3. ' ^=' → logprob: -15.97520637512207
    4. '＝' → logprob: -17.35020637512207
    5. ' ' → logprob: -18.35020637512207
    6. '.=' → logprob: -19.22520637512207
    7. '=}' → logprob: -19.85020637512207
    8. '+=' → logprob: -20.47520637512207
    9. '	' → logprob: -20.85020637512207
    10. '1' → logprob: -21.22520637512207

Token 264: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010355490958318114
    2. ' ' → logprob: -6.876035690307617
    3. '0' → logprob: -12.876035690307617
    4. '   ' → logprob: -17.126035690307617
    5. '```' → logprob: -17.126035690307617
    6. '(' → logprob: -17.501035690307617
    7. '`' → logprob: -17.938535690307617
    8. '  ' → logprob: -18.938535690307617
    9. 't' → logprob: -19.126035690307617
    10. '１' → logprob: -19.376035690307617

Token 265: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002457238151691854
    2. ' ' → logprob: -8.375246047973633
    3. '0' → logprob: -11.125246047973633
    4. '   ' → logprob: -15.875246047973633
    5. '(' → logprob: -16.062746047973633
    6. '```' → logprob: -16.937746047973633
    7. '`' → logprob: -18.125246047973633
    8. '  ' → logprob: -18.250246047973633
    9. 't' → logprob: -18.500246047973633
    10. '１' → logprob: -18.562746047973633

Token 266: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.38691338896751404
    2. '-' → logprob: -1.1369134187698364
    3. '-turn' → logprob: -10.136913299560547
    4. ' ' → logprob: -14.511913299560547
    5. '-ex' → logprob: -14.511913299560547
    6. '+' → logprob: -14.761913299560547
    7. '-token' → logprob: -15.261913299560547
    8. '-code' → logprob: -16.011913299560547
    9. ' ' → logprob: -16.136913299560547
    10. '   ' → logprob: -16.386913299560547

Token 267: ' turn' (ID: 3716)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.00043102685594931245
    2. ' turn' → logprob: -7.750431060791016
    3. '(turn' → logprob: -14.875431060791016
    4. '   ' → logprob: -17.375431060791016
    5. ' ' → logprob: -18.000431060791016
    6. 'token' → logprob: -18.625431060791016
    7. '.turn' → logprob: -18.750431060791016
    8. 'turned' → logprob: -19.250431060791016
    9. 'tur' → logprob: -19.375431060791016
    10. '1' → logprob: -19.375431060791016

Token 268: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18124662339687347
    2. '
' → logprob: -2.556246519088745
    3. '<|end|>' → logprob: -3.056246519088745
    4. 'if' → logprob: -3.931246519088745
    5. 'print' → logprob: -4.556246757507324
    6. ' if' → logprob: -4.931246757507324
    7. '    
' → logprob: -7.306246757507324
    8. '       ' → logprob: -7.431246757507324
    9. '#' → logprob: -7.556246757507324
    10. 'while' → logprob: -7.931246757507324

Token 269: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024849306792020798
    2. 'if' → logprob: -6.7524847984313965
    3. 'print' → logprob: -6.8774847984313965
    4. ' if' → logprob: -8.627485275268555
    5. '       ' → logprob: -9.752485275268555
    6. '
' → logprob: -11.502485275268555
    7. '    
' → logprob: -11.627485275268555
    8. '#' → logprob: -12.127485275268555
    9. ' print' → logprob: -12.377485275268555
    10. '```' → logprob: -12.627485275268555

Token 270: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.355340838432312
    2. 'print' → logprob: -1.355340838432312
    3. ' if' → logprob: -3.3553409576416016
    4. '   ' → logprob: -5.980340957641602
    5. 'while' → logprob: -6.480340957641602
    6. ' print' → logprob: -6.980340957641602
    7. 'for' → logprob: -7.230340957641602
    8. '#' (adapté à ' #') → logprob: -8.480340957641602
    9. 'result' → logprob: -9.355340957641602
    10. ' while' → logprob: -9.480340957641602

Token 271: ' game' (ID: 2813)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2551850974559784
    2. 'print' → logprob: -1.6301851272583008
    3. ' if' → logprob: -3.880185127258301
    4. '   ' → logprob: -5.255185127258301
    5. ' print' → logprob: -6.130185127258301
    6. 'result' → logprob: -7.630185127258301
    7. 'winner' → logprob: -9.0051851272583
    8. '#' → logprob: -9.1301851272583
    9. 'for' → logprob: -9.2551851272583
    10. 't' → logprob: -9.5051851272583

Token 272: ' over' (ID: 1072)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038254350423812866
    2. ' ' → logprob: -4.163254261016846
    3. ' if' → logprob: -4.538254261016846
    4. '    ' → logprob: -5.663254261016846
    5. 'print' → logprob: -6.663254261016846
    6. '<|end|>' → logprob: -6.663254261016846
    7. '       ' → logprob: -6.788254261016846
    8. ' print' → logprob: -7.413254261016846
    9. '#' → logprob: -7.663254261016846
    10. '
' → logprob: -7.788254261016846

Token 273: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04525381699204445
    2. ' if' → logprob: -3.7952537536621094
    3. 'if' → logprob: -3.9202537536621094
    4. 'print' → logprob: -6.545253753662109
    5. 't' → logprob: -8.79525375366211
    6. '    
' → logprob: -9.42025375366211
    7. ' print' → logprob: -9.92025375366211
    8. 'result' → logprob: -10.42025375366211
    9. '<|end|>' → logprob: -10.54525375366211
    10. '```' → logprob: -10.79525375366211

Token 274: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47009944915771484
    2. 'if' → logprob: -1.3450994491577148
    3. ' if' → logprob: -2.220099449157715
    4. 'print' → logprob: -5.220099449157715
    5. 't' → logprob: -8.720099449157715
    6. ' print' → logprob: -9.220099449157715
    7. '    
' → logprob: -9.220099449157715
    8. '
' → logprob: -9.970099449157715
    9. 'result' → logprob: -10.595099449157715
    10. '#' → logprob: -11.345099449157715

Token 275: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.483035147190094
    2. 'if' → logprob: -0.983035147190094
    3. 't' → logprob: -5.858035087585449
    4. '   ' → logprob: -5.983035087585449
    5. 'for' → logprob: -6.233035087585449
    6. ' if' → logprob: -7.983035087585449
    7. 'tar' → logprob: -8.35803508758545
    8. 'while' → logprob: -8.60803508758545
    9. 'result' → logprob: -8.73303508758545
    10. 'res' → logprob: -8.98303508758545

Token 276: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.08290984481573105
    2. '(min' → logprob: -3.4579098224639893
    3. '(sum' → logprob: -4.332910060882568
    4. '(t' → logprob: -4.707910060882568
    5. '(max' → logprob: -4.707910060882568
    6. '(sorted' → logprob: -5.207910060882568
    7. '(' → logprob: -5.332910060882568
    8. '('' → logprob: -5.832910060882568
    9. '("' → logprob: -6.457910060882568
    10. '(n' → logprob: -6.957910060882568

Token 277: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.03204894810914993
    2. '(h' → logprob: -3.5320489406585693
    3. '(field' → logprob: -6.157049179077148
    4. 't' → logprob: -9.907049179077148
    5. '(hand' → logprob: -10.157049179077148
    6. '(' → logprob: -10.407049179077148
    7. '([' → logprob: -10.407049179077148
    8. 'h' → logprob: -11.907049179077148
    9. ' (' → logprob: -12.282049179077148
    10. '(s' → logprob: -12.532049179077148

Token 278: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.209055095911026
    2. ')' → logprob: -1.7090550661087036
    3. 'ar' → logprob: -6.084054946899414
    4. 'o' → logprob: -6.959054946899414
    5. '),' → logprob: -6.959054946899414
    6. ')+' → logprob: -7.334054946899414
    7. '))
' → logprob: -7.334054946899414
    8. '(t' → logprob: -7.459054946899414
    9. '(h' → logprob: -7.834054946899414
    10. '[' → logprob: -7.834054946899414

Token 279: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09122028201818466
    2. '<|end|>' → logprob: -2.7162203788757324
    3. '
' → logprob: -5.341220378875732
    4. ',' → logprob: -5.466220378875732
    5. ' if' → logprob: -6.216220378875732
    6. ' )' → logprob: -6.466220378875732
    7. ' ' → logprob: -6.716220378875732
    8. '[' → logprob: -6.966220378875732
    9. '+' → logprob: -6.966220378875732
    10. '   ' → logprob: -7.216220378875732

Token 280: ' print' (ID: 2123)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 281: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -2.696889623621246e-06
    2. 'len' → logprob: -13.00000286102295
    3. '(' → logprob: -15.50000286102295
    4. '('' → logprob: -16.125001907348633
    5. '[len' → logprob: -17.625001907348633
    6. '()' → logprob: -17.625001907348633
    7. '((' → logprob: -18.000001907348633
    8. '=len' → logprob: -18.625001907348633
    9. ',len' → logprob: -19.500001907348633
    10. ' (' → logprob: -19.625001907348633

Token 282: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -6.704273118884885e-07
    2. 'h' → logprob: -15.000000953674316
    3. '(t' → logprob: -15.750000953674316
    4. '(' → logprob: -16.0
    5. '((' → logprob: -18.875
    6. '(H' → logprob: -19.125
    7. '(hand' → logprob: -19.5
    8. ' (' → logprob: -20.0
    9. '	h' → logprob: -20.125
    10. '(s' → logprob: -20.125

Token 283: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5759548544883728
    2. ')' → logprob: -0.8259548544883728
    3. '())' → logprob: -12.20095443725586
    4. '))
' → logprob: -12.32595443725586
    5. ')
' → logprob: -13.20095443725586
    6. '()' → logprob: -13.82595443725586
    7. ')))' → logprob: -13.82595443725586
    8. '])' → logprob: -14.32595443725586
    9. '})' → logprob: -14.70095443725586
    10. ')}' → logprob: -14.95095443725586


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 281
Tokens correctement prédits (1ère position, stricte): 96
Tokens correctement prédits (1ère position, avec adaptation): 113
Tokens correctement prédits (top 10): 234
Précision stricte (1ère position): 34.16%
Précision adaptée (1ère position): 40.21%
Précision (top 10): 83.27%
================================================================================
