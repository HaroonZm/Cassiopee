================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:22:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
c = list(map(int, input().split()))
coins = [1, 5, 10, 50, 100, 500]
total = sum(c[i]*coins[i] for i in range(6))
print(1 if total >= 1000 else 0)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'c' (ID: 66)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' list' (ID: 1562)
  → Token d'amorce (pas de prédiction)

Token 3: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14537154138088226
    2. '[' → logprob: -2.020371437072754
    3. '(c' → logprob: -6.770371437072754
    4. '[(' → logprob: -7.895371437072754
    5. '```' → logprob: -8.270371437072754
    6. 'c' → logprob: -9.020371437072754
    7. '[c' → logprob: -9.020371437072754
    8. '(
' → logprob: -9.395371437072754
    9. '_' → logprob: -9.520371437072754
    10. ' (' → logprob: -9.645371437072754

Token 4: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.32202282547950745
    2. '(lambda' → logprob: -1.322022795677185
    3. '(str' → logprob: -5.197022914886475
    4. '(int' → logprob: -6.572022914886475
    5. '(eval' → logprob: -8.072022438049316
    6. '(()' → logprob: -8.197022438049316
    7. ')' → logprob: -8.447022438049316
    8. '```' → logprob: -8.822022438049316
    9. '(`' → logprob: -9.697022438049316
    10. '(ord' → logprob: -9.822022438049316

Token 5: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09904269874095917
    2. '(input' → logprob: -3.7240426540374756
    3. ')' → logprob: -3.9740426540374756
    4. '))' → logprob: -4.099042892456055
    5. '(c' → logprob: -4.724042892456055
    6. '(user' → logprob: -5.099042892456055
    7. '```' → logprob: -5.724042892456055
    8. '('' → logprob: -6.349042892456055
    9. '`' → logprob: -6.349042892456055
    10. '(range' → logprob: -6.474042892456055

Token 6: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.018901444971561432
    2. ' input' → logprob: -4.143901348114014
    3. '(input' → logprob: -5.893901348114014
    4. ')' → logprob: -11.143901824951172
    5. 'range' → logprob: -11.143901824951172
    6. 'c' → logprob: -11.143901824951172
    7. 'user' → logprob: -11.143901824951172
    8. 's' → logprob: -11.643901824951172
    9. ',input' → logprob: -11.768901824951172
    10. 'a' → logprob: -11.893901824951172

Token 7: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.26094546914100647
    2. '()))' → logprob: -2.7609455585479736
    3. '())' → logprob: -2.8859455585479736
    4. '()' → logprob: -3.5109455585479736
    5. '()));' → logprob: -4.0109453201293945
    6. '(""))' → logprob: -4.5109453201293945
    7. ')' → logprob: -4.5109453201293945
    8. '(()' → logprob: -5.1359453201293945
    9. '())))' → logprob: -5.1359453201293945
    10. '('' → logprob: -5.1359453201293945

Token 8: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015309321461245418
    2. 'strip' → logprob: -6.50153112411499
    3. 'rstrip' → logprob: -11.001530647277832
    4. ' split' → logprob: -11.376530647277832
    5. 'spl' → logprob: -16.00153160095215
    6. ')' → logprob: -16.37653160095215
    7. '(split' → logprob: -16.37653160095215
    8. 's' → logprob: -16.50153160095215
    9. 'read' → logprob: -16.75153160095215
    10. 'replace' → logprob: -17.50153160095215

Token 9: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.17642030119895935
    2. '())' → logprob: -2.301420211791992
    3. '(' → logprob: -3.801420211791992
    4. '))' → logprob: -3.926420211791992
    5. '()' → logprob: -4.176420211791992
    6. ')' → logprob: -6.426420211791992
    7. '())))' → logprob: -6.426420211791992
    8. ')))' → logprob: -8.176420211791992
    9. '()));' → logprob: -8.426420211791992
    10. '(
' → logprob: -9.551420211791992

Token 10: 'coins' (ID: 48264)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.27152296900749207
    2. '[' → logprob: -1.7715229988098145
    3. '#' → logprob: -3.6465229988098145
    4. 'if' → logprob: -5.0215229988098145
    5. 'print' → logprob: -5.1465229988098145
    6. '`' → logprob: -5.2715229988098145
    7. ')' → logprob: -5.2715229988098145
    8. '+' → logprob: -5.5215229988098145
    9. '```' → logprob: -5.8965229988098145
    10. 'c' → logprob: -6.1465229988098145

Token 11: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9589124917984009
    2. '=' → logprob: -1.2089124917984009
    3. '[' → logprob: -1.7089124917984009
    4. ' =' → logprob: -3.0839123725891113
    5. '```' → logprob: -4.333912372589111
    6. '_counts' → logprob: -4.458912372589111
    7. '_' → logprob: -4.583912372589111
    8. ')' → logprob: -4.708912372589111
    9. '[:]' → logprob: -4.833912372589111
    10. '.count' → logprob: -4.958912372589111

Token 12: ' [' (ID: 723)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.9424513578414917
    2. ' [' → logprob: -0.9424513578414917
    3. '[' → logprob: -2.3174514770507812
    4. 'c' → logprob: -2.6924514770507812
    5. '[]' → logprob: -3.1924514770507812
    6. ' []' → logprob: -4.692451477050781
    7. '[c' → logprob: -5.567451477050781
    8. ' ' → logprob: -8.442451477050781
    9. ' sorted' → logprob: -9.942451477050781
    10. 'sorted' → logprob: -10.192451477050781

Token 13: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0292659942060709
    2. '25' → logprob: -4.279265880584717
    3. 'c' → logprob: -5.404265880584717
    4. '0' → logprob: -5.654265880584717
    5. '50' → logprob: -5.654265880584717
    6. '100' → logprob: -6.904265880584717
    7. ' ' → logprob: -7.154265880584717
    8. ']' → logprob: -7.529265880584717
    9. '10' → logprob: -8.404266357421875
    10. '])' → logprob: -8.404266357421875

Token 14: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034356804098933935
    2. ' ,' → logprob: -8.125343322753906
    3. '2' → logprob: -11.625343322753906
    4. '0' → logprob: -11.625343322753906
    5. ')' → logprob: -12.000343322753906
    6. '7' → logprob: -12.375343322753906
    7. '6' → logprob: -12.500343322753906
    8. ',
' → logprob: -12.875343322753906
    9. ']' → logprob: -12.875343322753906
    10. ' ' → logprob: -13.125343322753906

Token 15: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.9057692885398865
    2. '5' → logprob: -1.1557693481445312
    3. ' ' → logprob: -1.2807693481445312
    4. '3' → logprob: -5.905769348144531
    5. '10' → logprob: -8.530769348144531
    6. '4' → logprob: -9.280769348144531
    7. '50' → logprob: -10.155769348144531
    8. '1' → logprob: -10.655769348144531
    9. '25' → logprob: -11.155769348144531
    10. '100' → logprob: -11.280769348144531

Token 16: '5' (ID: 20)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7053200006484985
    2. '5' → logprob: -0.7053200006484985
    3. ' ' → logprob: -4.955319881439209
    4. '3' → logprob: -5.455319881439209
    5. '1' → logprob: -8.455320358276367
    6. '10' → logprob: -8.580320358276367
    7. '4' → logprob: -8.830320358276367
    8. '50' → logprob: -9.580320358276367
    9. '25' → logprob: -9.705320358276367
    10. '7' → logprob: -9.955320358276367

Token 17: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1756367712223437e-05
    2. ' ,' → logprob: -11.500011444091797
    3. '`,' → logprob: -14.750011444091797
    4. '2' → logprob: -15.625011444091797
    5. '1' → logprob: -15.750011444091797
    6. ',
' → logprob: -15.875011444091797
    7. '6' → logprob: -16.375011444091797
    8. '0' → logprob: -16.375011444091797
    9. '```' → logprob: -16.625011444091797
    10. '4' → logprob: -16.625011444091797

Token 18: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3135305941104889
    2. '10' → logprob: -1.3135305643081665
    3. '20' → logprob: -8.438530921936035
    4. '25' → logprob: -11.063530921936035
    5. '15' → logprob: -12.188530921936035
    6. '1' → logprob: -12.188530921936035
    7. ' ,' → logprob: -12.438530921936035
    8. ',' → logprob: -12.688530921936035
    9. '19' → logprob: -13.001030921936035
    10. '```' → logprob: -13.251030921936035

Token 19: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0021893989760428667
    2. ' ' → logprob: -6.252189636230469
    3. '7' → logprob: -9.627189636230469
    4. '25' → logprob: -9.877189636230469
    5. '15' → logprob: -10.002189636230469
    6. '20' → logprob: -10.377189636230469
    7. '11' → logprob: -11.002189636230469
    8. '12' → logprob: -11.127189636230469
    9. '1' → logprob: -11.377189636230469
    10. '100' → logprob: -12.752189636230469

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.623244553338736e-05
    2. ']' → logprob: -10.625065803527832
    3. ')' → logprob: -11.125065803527832
    4. ')]' → logprob: -11.250065803527832
    5. ' ,' → logprob: -11.500065803527832
    6. ',
' → logprob: -13.125065803527832
    7. '```' → logprob: -14.375065803527832
    8. '])' → logprob: -14.875065803527832
    9. '`,' → logprob: -15.375065803527832
    10. ' ' → logprob: -15.750065803527832

Token 21: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07248655706644058
    2. '20' → logprob: -2.947486639022827
    3. '25' → logprob: -4.572486400604248
    4. '50' → logprob: -4.947486400604248
    5. '100' → logprob: -11.947486877441406
    6. '2' → logprob: -13.072486877441406
    7. '21' → logprob: -13.759986877441406
    8. '```' → logprob: -13.947486877441406
    9. '1' → logprob: -14.197486877441406
    10. '   ' → logprob: -14.259986877441406

Token 22: '50' (ID: 1434)
  Prédit: '25'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '25' → logprob: -0.23841165006160736
    2. '50' → logprob: -1.6134116649627686
    3. ' ' → logprob: -4.3634114265441895
    4. '20' → logprob: -9.613411903381348
    5. '2' → logprob: -10.113411903381348
    6. '100' → logprob: -10.988411903381348
    7. '5' → logprob: -11.238411903381348
    8. '   ' → logprob: -11.988411903381348
    9. '	' → logprob: -12.238411903381348
    10. '500' → logprob: -12.488411903381348

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001290454383706674
    2. ']' → logprob: -9.500128746032715
    3. ')' → logprob: -10.625128746032715
    4. ')]' → logprob: -10.625128746032715
    5. '])' → logprob: -13.125128746032715
    6. ' ,' → logprob: -13.250128746032715
    7. ',
' → logprob: -14.625128746032715
    8. '`,' → logprob: -15.125128746032715
    9. '```' → logprob: -15.500128746032715
    10. '`]' → logprob: -15.875128746032715

Token 24: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.5231464505195618
    2. ' ' → logprob: -0.8981464505195618
    3. '1' → logprob: -11.398146629333496
    4. '10' → logprob: -12.398146629333496
    5. '500' → logprob: -13.460646629333496
    6. '200' → logprob: -13.648146629333496
    7. '0' → logprob: -14.398146629333496
    8. '20' → logprob: -14.398146629333496
    9. '50' → logprob: -14.585646629333496
    10. 's' → logprob: -14.710646629333496

Token 25: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0006996880983933806
    2. ' ' → logprob: -7.750699520111084
    3. '10' → logprob: -8.375699996948242
    4. '1' → logprob: -10.250699996948242
    5. '500' → logprob: -13.375699996948242
    6. '１００' → logprob: -14.500699996948242
    7. '0' → logprob: -15.375699996948242
    8. '-' → logprob: -16.375699996948242
    9. '5' → logprob: -16.438199996948242
    10. 's' → logprob: -16.563199996948242

Token 26: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.690834273584187e-05
    2. ']' → logprob: -10.62503719329834
    3. ')' → logprob: -11.62503719329834
    4. ')]' → logprob: -13.25003719329834
    5. '])' → logprob: -13.75003719329834
    6. ' ,' → logprob: -15.37503719329834
    7. ',
' → logprob: -15.62503719329834
    8. ',)' → logprob: -16.000036239624023
    9. '`,' → logprob: -17.000036239624023
    10. '],' → logprob: -17.125036239624023

Token 27: ' ' (ID: 220)
  Prédit: '500'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.02976194955408573
    2. ' ' → logprob: -3.529762029647827
    3. '100' → logprob: -11.779762268066406
    4. '200' → logprob: -13.404762268066406
    5. '5' → logprob: -14.154762268066406
    6. '250' → logprob: -14.654762268066406
    7. '_' → logprob: -15.404762268066406
    8. '300' → logprob: -15.529762268066406
    9. 's' → logprob: -16.154762268066406
    10. '1' → logprob: -16.779762268066406

Token 28: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -2.6776029699249193e-05
    2. ' ' → logprob: -11.12502670288086
    3. '5' → logprob: -11.37502670288086
    4. 'k' → logprob: -16.50002670288086
    5. '```' → logprob: -16.50002670288086
    6. 's' → logprob: -17.00002670288086
    7. '50' → logprob: -17.25002670288086
    8. '}' → logprob: -17.62502670288086
    9. '(' → logprob: -17.62502670288086
    10. '_' → logprob: -17.75002670288086

Token 29: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.020483724772930145
    2. ')' → logprob: -4.145483493804932
    3. '])' → logprob: -5.520483493804932
    4. ')]' → logprob: -7.770483493804932
    5. ',' → logprob: -12.39548397064209
    6. '])]' → logprob: -12.77048397064209
    7. ')])' → logprob: -13.27048397064209
    8. ' ]' → logprob: -13.52048397064209
    9. '`]' → logprob: -13.89548397064209
    10. '）' → logprob: -14.02048397064209

Token 30: 'total' (ID: 9577)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.9548603296279907
    2. 'answer' → logprob: -1.5798603296279907
    3. 'result' → logprob: -2.329860210418701
    4. 'ans' → logprob: -2.454860210418701
    5. 'for' → logprob: -3.079860210418701
    6. 'dp' → logprob: -3.079860210418701
    7. 'res' → logprob: -3.454860210418701
    8. 'change' → logprob: -3.704860210418701
    9. 'total' → logprob: -3.704860210418701
    10. 'counts' → logprob: -3.954860210418701

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7045066952705383
    2. ' +=' → logprob: -1.0795066356658936
    3. ' ' → logprob: -2.4545066356658936
    4. '=' → logprob: -3.0795066356658936
    5. '_' → logprob: -3.8295066356658936
    6. ')' → logprob: -5.579506874084473
    7. '[' → logprob: -6.079506874084473
    8. '+=' → logprob: -6.579506874084473
    9. '  ' → logprob: -6.954506874084473
    10. '+' → logprob: -7.954506874084473

Token 32: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6528409123420715
    2. ' ' → logprob: -0.7778409123420715
    3. ' sum' → logprob: -4.652841091156006
    4. ' c' → logprob: -5.027841091156006
    5. 'sum' → logprob: -5.652841091156006
    6. 'c' → logprob: -7.902841091156006
    7. '100' → logprob: -10.652840614318848
    8. ' max' → logprob: -11.652840614318848
    9. ' len' → logprob: -11.777840614318848
    10. ' ' → logprob: -12.027840614318848

Token 33: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.2031947374343872
    2. '(' → logprob: -1.7031947374343872
    3. '(co' → logprob: -6.453194618225098
    4. '(total' → logprob: -9.328194618225098
    5. '((' → logprob: -10.328194618225098
    6. '(
' → logprob: -11.328194618225098
    7. '(count' → logprob: -11.453194618225098
    8. '()' → logprob: -11.953194618225098
    9. '([' → logprob: -12.078194618225098
    10. 'c' → logprob: -12.078194618225098

Token 34: '[i' (ID: 1768)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009480224689468741
    2. '*' → logprob: -7.875947952270508
    3. '[' → logprob: -8.375947952270508
    4. ' )' → logprob: -8.750947952270508
    5. '[c' → logprob: -9.500947952270508
    6. '[i' → logprob: -9.875947952270508
    7. ' *' → logprob: -11.000947952270508
    8. '))' → logprob: -11.750947952270508
    9. '`)' → logprob: -13.000947952270508
    10. ']' → logprob: -13.125947952270508

Token 35: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007110013975761831
    2. ']*' → logprob: -7.625710964202881
    3. ' ]' → logprob: -9.250711441040039
    4. '*' → logprob: -9.500711441040039
    5. ' *' → logprob: -10.000711441040039
    6. ')' → logprob: -12.125711441040039
    7. '])' → logprob: -14.250711441040039
    8. ' ' → logprob: -15.375711441040039
    9. ']*(' → logprob: -15.875711441040039
    10. '-' → logprob: -16.62571144104004

Token 36: 'coins' (ID: 48264)
  Prédit: 'coins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.011051355861127377
    2. ' coins' → logprob: -4.511051177978516
    3. 'coin' → logprob: -13.386051177978516
    4. 'co' → logprob: -13.886051177978516
    5. ')' → logprob: -14.886051177978516
    6. ' ' → logprob: -15.761051177978516
    7. 'Coins' → logprob: -15.886051177978516
    8. 'c' → logprob: -16.011051177978516
    9. '	' → logprob: -16.386051177978516
    10. '   ' → logprob: -16.636051177978516

Token 37: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.029779309406876564
    2. '[' → logprob: -3.5297791957855225
    3. '[
' → logprob: -10.904779434204102
    4. ')' → logprob: -12.154779434204102
    5. ' [' → logprob: -12.529779434204102
    6. '[I' → logprob: -14.529779434204102
    7. ']' → logprob: -15.529779434204102
    8. '[s' → logprob: -15.904779434204102
    9. '[len' → logprob: -16.0297794342041
    10. ')i' → logprob: -16.2797794342041

Token 38: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20449894666671753
    2. ']' → logprob: -1.7044990062713623
    3. '])' → logprob: -5.954498767852783
    4. 'for' → logprob: -8.329499244689941
    5. ' for' → logprob: -8.579499244689941
    6. ' )' → logprob: -10.329499244689941
    7. ' ]' → logprob: -11.579499244689941
    8. '）' → logprob: -12.329499244689941
    9. ' ' → logprob: -12.954499244689941
    10. ' ])' → logprob: -12.954499244689941

Token 39: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017489833757281303
    2. ' )' → logprob: -4.767489910125732
    3. ' for' → logprob: -4.892489910125732
    4. 'for' → logprob: -6.642489910125732
    5. ' ' → logprob: -11.392489433288574
    6. '))' → logprob: -11.892489433288574
    7. '`)' → logprob: -12.017489433288574
    8. ' ' → logprob: -14.267489433288574
    9. ')`' → logprob: -14.517489433288574
    10. '')' → logprob: -14.642489433288574

Token 40: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3158458173274994
    2. ' range' → logprob: -1.3158458471298218
    3. 'range' → logprob: -6.315845966339111
    4. 'i' → logprob: -7.190845966339111
    5. ' in' → logprob: -11.690845489501953
    6. ' ' → logprob: -12.565845489501953
    7. '(range' → logprob: -13.065845489501953
    8. '	range' → logprob: -13.315845489501953
    9. '  ' → logprob: -14.315845489501953
    10. '(i' → logprob: -14.315845489501953

Token 41: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03844042494893074
    2. ' range' → logprob: -3.413440465927124
    3. 'range' → logprob: -5.913440227508545
    4. ' i' → logprob: -7.288440227508545
    5. ')' → logprob: -7.663440227508545
    6. ' ' → logprob: -7.788440227508545
    7. 'in' → logprob: -8.038440704345703
    8. ' )' → logprob: -9.413440704345703
    9. '<|end|>' → logprob: -9.538440704345703
    10. ' len' → logprob: -12.038440704345703

Token 42: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029750604182481766
    2. ' range' → logprob: -3.5297505855560303
    3. '(range' → logprob: -16.40475082397461
    4. 'len' → logprob: -17.52975082397461
    5. '	range' → logprob: -17.65475082397461
    6. ' ' → logprob: -20.15475082397461
    7. ' len' → logprob: -20.65475082397461
    8. ')' → logprob: -20.65475082397461
    9. ' xrange' → logprob: -21.40475082397461
    10. '.range' → logprob: -21.77975082397461

Token 43: '(' (ID: 7)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.011056310497224331
    2. '(' → logprob: -4.511056423187256
    3. 'len' → logprob: -11.886055946350098
    4. ' len' → logprob: -13.636055946350098
    5. ' (' → logprob: -16.261056900024414
    6. '6' → logprob: -16.386056900024414
    7. '(
' → logprob: -16.636056900024414
    8. '<len' → logprob: -17.511056900024414
    9. '[len' → logprob: -18.011056900024414
    10. ')' → logprob: -18.261056900024414

Token 44: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.10064397007226944
    2. 'len' → logprob: -2.3506438732147217
    3. ' len' → logprob: -7.850644111633301
    4. ' ' → logprob: -10.3506441116333
    5. '(len' → logprob: -11.9756441116333
    6. '7' → logprob: -12.1006441116333
    7. '```' → logprob: -13.9756441116333
    8. '5' → logprob: -14.4756441116333
    9. ')' → logprob: -14.7256441116333
    10. '3' → logprob: -14.8506441116333

Token 45: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06200386956334114
    2. ')' → logprob: -2.8120038509368896
    3. ')))' → logprob: -10.437004089355469
    4. '),' → logprob: -13.312004089355469
    5. ' ))' → logprob: -13.437004089355469
    6. '))
' → logprob: -14.062004089355469
    7. ')
' → logprob: -14.312004089355469
    8. ' )' → logprob: -15.062004089355469
    9. '+' → logprob: -15.187004089355469
    10. ')+' → logprob: -15.437004089355469

Token 46: 'print' (ID: 1598)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22310616075992584
    2. 'n' → logprob: -2.7231061458587646
    3. '\n' → logprob: -2.8481061458587646
    4. 'if' → logprob: -3.9731061458587646
    5. '500' → logprob: -4.723106384277344
    6. '100' → logprob: -4.973106384277344
    7. '
' → logprob: -5.348106384277344
    8. 'x' → logprob: -5.598106384277344
    9. '10' → logprob: -5.973106384277344
    10. 'print' → logprob: -5.973106384277344

Token 47: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014424506574869156
    2. '(total' → logprob: -4.2644243240356445
    3. '('' → logprob: -9.014424324035645
    4. '((' → logprob: -9.764424324035645
    5. '("("' → logprob: -10.639424324035645
    6. '()' → logprob: -10.889424324035645
    7. ' (' → logprob: -11.264424324035645
    8. '("' → logprob: -11.764424324035645
    9. '(max' → logprob: -12.014424324035645
    10. '(sum' → logprob: -12.639424324035645

Token 48: '1' (ID: 16)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.34113359451293945
    2. '100' → logprob: -1.5911335945129395
    3. '500' → logprob: -2.8411335945129395
    4. 'max' → logprob: -4.5911335945129395
    5. '(total' → logprob: -5.0911335945129395
    6. '300' → logprob: -6.0911335945129395
    7. ' total' → logprob: -6.2161335945129395
    8. ' ' → logprob: -6.5911335945129395
    9. '10' → logprob: -6.9661335945129395
    10. '"' → logprob: -7.3411335945129395

Token 49: ' if' (ID: 538)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16680671274662018
    2. '000' → logprob: -3.041806697845459
    3. '00' → logprob: -3.291806697845459
    4. ')' → logprob: -3.541806697845459
    5. '+)' → logprob: -4.416806697845459
    6. '2' → logprob: -5.291806697845459
    7. '8' → logprob: -5.291806697845459
    8. ' )' → logprob: -5.416806697845459
    9. ' +' → logprob: -6.166806697845459
    10. '1' → logprob: -6.166806697845459

Token 50: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.3498404622077942
    2. 'total' → logprob: -1.2248404026031494
    3. '500' → logprob: -7.4748406410217285
    4. ' ' → logprob: -7.7248406410217285
    5. '50' → logprob: -8.72484016418457
    6. '100' → logprob: -8.97484016418457
    7. '(total' → logprob: -11.09984016418457
    8. ' c' → logprob: -11.47484016418457
    9. '10' → logprob: -11.72484016418457
    10. '0' → logprob: -11.84984016418457

Token 51: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.44871392846107483
    2. ' >=' → logprob: -1.0737138986587524
    3. '==' → logprob: -5.073713779449463
    4. '%' → logprob: -5.073713779449463
    5. ' ==' → logprob: -6.073713779449463
    6. '<' → logprob: -6.198713779449463
    7. '>' → logprob: -6.573713779449463
    8. ' <' → logprob: -7.698713779449463
    9. ' %' → logprob: -7.948713779449463
    10. ' ' → logprob: -7.948713779449463

Token 52: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.007838239893317223
    2. '500' → logprob: -5.882838249206543
    3. ' ' → logprob: -6.007838249206543
    4. '10' → logprob: -6.382838249206543
    5. '200' → logprob: -8.132838249206543
    6. '1' → logprob: -9.132838249206543
    7. '300' → logprob: -9.382838249206543
    8. '135' → logprob: -9.507838249206543
    9. '  ' → logprob: -9.757838249206543
    10. 'X' → logprob: -10.257838249206543

Token 53: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.02804955281317234
    2. '500' → logprob: -3.9030494689941406
    3. ' ' → logprob: -5.653049468994141
    4. '200' → logprob: -6.403049468994141
    5. '10' → logprob: -6.778049468994141
    6. '1' → logprob: -8.02804946899414
    7. '  ' → logprob: -8.52804946899414
    8. '5' → logprob: -8.77804946899414
    9. '   ' → logprob: -9.15304946899414
    10. '300' → logprob: -9.40304946899414

Token 54: '0' (ID: 15)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.012535318732261658
    2. 'else' → logprob: -4.387535095214844
    3. '0' → logprob: -11.012535095214844
    4. ')' → logprob: -12.762535095214844
    5. ' ' → logprob: -12.887535095214844
    6. '-' → logprob: -13.887535095214844
    7. '+' → logprob: -13.887535095214844
    8. '	else' → logprob: -14.887535095214844
    9. ' ' → logprob: -15.012535095214844
    10. '```' → logprob: -15.137535095214844

Token 55: ' else' (ID: 1203)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5048308968544006
    2. ' else' → logprob: -1.0048308372497559
    3. 'else' → logprob: -3.504830837249756
    4. ' )' → logprob: -9.004831314086914
    5. ' ' → logprob: -9.879831314086914
    6. ',' → logprob: -11.004831314086914
    7. '	else' → logprob: -11.254831314086914
    8. '*' → logprob: -11.879831314086914
    9. '0' → logprob: -11.879831314086914
    10. '))' → logprob: -12.754831314086914

Token 56: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08894437551498413
    2. ' ' → logprob: -2.463944435119629
    3. ')' → logprob: -13.963944435119629
    4. '1' → logprob: -13.963944435119629
    5. '  ' → logprob: -14.213944435119629
    6. '2' → logprob: -14.338944435119629
    7. '(' → logprob: -15.088944435119629
    8. '   ' → logprob: -15.213944435119629
    9. ' )' → logprob: -15.276444435119629
    10. '    ' → logprob: -15.651444435119629

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.553032628493384e-05
    2. ' ' → logprob: -9.500075340270996
    3. '1' → logprob: -15.125075340270996
    4. '2' → logprob: -16.250076293945312
    5. ')' → logprob: -16.375076293945312
    6. '-' → logprob: -17.437576293945312
    7. '   ' → logprob: -17.625076293945312
    8. '  ' → logprob: -18.000076293945312
    9. '(' → logprob: -18.187576293945312
    10. '    ' → logprob: -18.812576293945312

Token 58: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. '))' → logprob: -16.375
    3. ' )' → logprob: -16.5
    4. ')
' → logprob: -17.0
    5. '`)' → logprob: -17.0
    6. ')`' → logprob: -17.25
    7. '')' → logprob: -19.75
    8. '）' → logprob: -19.875
    9. '```' → logprob: -20.375
    10. '),' → logprob: -20.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 56
Tokens correctement prédits (1ère position, stricte): 24
Tokens correctement prédits (1ère position, avec adaptation): 24
Tokens correctement prédits (top 10): 48
Précision stricte (1ère position): 42.86%
Précision adaptée (1ère position): 42.86%
Précision (top 10): 85.71%
================================================================================
