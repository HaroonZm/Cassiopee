================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:19:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

def main():
    input = sys.stdin.readline
    while True:
        n = input()
        if not n:
            break
        n = n.strip()
        if n == '0':
            break
        n = int(n)
        L = []
        V = []
        for _ in range(n):
            d,v = map(int,input().split())
            L.append(d)
            V.append(v)
        times = [L[i]/V[i] for i in range(n)]
        # find lcm of fractions = lcm of numerators / gcd of denominators
        # represent fractions as times[i] = p_i / q_i
        # We want T = LCM(p_i)/GCD(q_i)
        # but fractions are float, transform to fractions of integers
        # Since all L[i], V[i] are integers, times[i] = L[i]/V[i] rational
        # numerator = L[i], denominator= V[i]

        # To find common time T so that T / times[i] = integer
        # => T / (Li/Vi) = T * Vi / Li integer
        # So T*(Vi)/Li integer for all i
        # Let T = X / Y in reduced form
        # Then X / Y * Vi / Li integer
        # => (X * Vi) / (Y * Li) integer
        # Set Y = 1 as any scaling factor
        # find T such that T * Vi / Li integer
        # Minimal T is lcm of fractions Li / Vi
        # Another method:
        # Let’s find LCM of all times: LCM of fractions = lcm of numerators / gcd of denominators
        # numerators = L[i], denominators = V[i]

        def gcd(a,b):
            while b:
                a,b=b,a%b
            return a
        def lcm(a,b):
            return a*b//gcd(a,b)

        # first compute gcd of denominators (V)
        gcd_d = V[0]
        for v in V[1:]:
            gcd_d = gcd(gcd_d,v)
        # compute lcm of numerators (L)
        lcm_n = L[0]
        for l in L[1:]:
            lcm_n = lcm(lcm_n,l)
        # T = lcm_n / gcd_d

        # Now for each i, rounds = T / times[i] = (lcm_n / gcd_d) / (L[i]/V[i]) = (lcm_n / gcd_d) * (V[i]/L[i])
        # = (lcm_n * V[i]) / (gcd_d * L[i])

        # compute rounds: integer per constraint

        for i in range(n):
            res = (lcm_n * V[i]) // (gcd_d * L[i])
            print(res)

if __name__=="__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3205606937408447
    2. '.' → logprob: -1.4455606937408447
    3. 'import' → logprob: -4.570560455322266
    4. '\' → logprob: -4.570560455322266
    5. 'newline' → logprob: -5.195560455322266
    6. '<|end|>' → logprob: -5.320560455322266
    7. '
' → logprob: -6.570560455322266
    8. '```' → logprob: -7.070560455322266
    9. '<|end|>' → logprob: -7.195560455322266
    10. '\r' → logprob: -7.195560455322266

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -7.755678961984813e-05
    2. 'os' → logprob: -9.500077247619629
    3. ' math' → logprob: -13.625077247619629
    4. ' re' → logprob: -14.500077247619629
    5. ' json' → logprob: -15.125077247619629
    6. '"os' → logprob: -15.375077247619629
    7. '_os' → logprob: -16.125078201293945
    8. ' io' → logprob: -16.375078201293945
    9. ' ' → logprob: -16.375078201293945
    10. '	os' → logprob: -17.000078201293945

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4576877951622009
    2. '\n' → logprob: -1.8326878547668457
    3. '\' → logprob: -2.3326878547668457
    4. 'import' → logprob: -3.0826878547668457
    5. '```' → logprob: -3.8326878547668457
    6. '
' → logprob: -4.207687854766846
    7. '<|end|>' → logprob: -4.207687854766846
    8. ',' → logprob: -5.582687854766846
    9. '

' → logprob: -5.832687854766846
    10. '<|end|>' → logprob: -6.582687854766846

Token 6: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06968530267477036
    2. '\' → logprob: -3.444685220718384
    3. '\n' → logprob: -4.194685459136963
    4. '```' → logprob: -4.319685459136963
    5. 'import' → logprob: -5.944685459136963
    6. ',' → logprob: -6.694685459136963
    7. 'def' → logprob: -7.319685459136963
    8. '.
' → logprob: -7.569685459136963
    9. '
' → logprob: -7.944685459136963
    10. '`' → logprob: -8.069684982299805

Token 7: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.022814787924289703
    2. ' calculate' → logprob: -4.272814750671387
    3. ' factorial' → logprob: -5.897814750671387
    4. ' space' → logprob: -6.147814750671387
    5. '_' → logprob: -7.022814750671387
    6. ' math' → logprob: -7.647814750671387
    7. ' e' → logprob: -7.897814750671387
    8. ' compute' → logprob: -7.897814750671387
    9. ' my' → logprob: -8.897814750671387
    10. ' calc' → logprob: -9.022814750671387

Token 8: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000526107382029295
    2. '():' → logprob: -8.250526428222656
    3. ':' → logprob: -8.875526428222656
    4. '(:' → logprob: -9.625526428222656
    5. '(
' → logprob: -11.000526428222656
    6. ' (' → logprob: -11.250526428222656
    7. '):' → logprob: -12.125526428222656
    8. '(":' → logprob: -12.625526428222656
    9. '(`' → logprob: -12.625526428222656
    10. ')' → logprob: -12.750526428222656

Token 9: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.1872273087501526
    2. '   ' → logprob: -2.312227249145508
    3. ':' → logprob: -3.062227249145508
    4. '(' → logprob: -3.937227249145508
    5. '()' → logprob: -6.812227249145508
    6. ' ():' → logprob: -6.937227249145508
    7. ' :' → logprob: -7.187227249145508
    8. '):' → logprob: -7.312227249145508
    9. ' ' → logprob: -7.312227249145508
    10. '    ' → logprob: -7.812227249145508

Token 10: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7366034984588623
    2. '   ' → logprob: -1.3616034984588623
    3. 'n' → logprob: -2.6116034984588623
    4. '    ' → logprob: -2.8616034984588623
    5. 'x' → logprob: -3.4866034984588623
    6. 'print' → logprob: -3.8616034984588623
    7. 'i' → logprob: -4.236603736877441
    8. '(' → logprob: -4.236603736877441
    9. 'a' → logprob: -4.486603736877441
    10. 'p' → logprob: -4.986603736877441

Token 11: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14600610733032227
    2. '_line' → logprob: -2.7710061073303223
    3. '_' → logprob: -3.6460061073303223
    4. '_data' → logprob: -4.021006107330322
    5. '_text' → logprob: -4.896006107330322
    6. '()' → logprob: -4.896006107330322
    7. '_str' → logprob: -5.271006107330322
    8. '_string' → logprob: -6.146006107330322
    9. '_value' → logprob: -7.021006107330322
    10. '_token' → logprob: -7.271006107330322

Token 12: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.4834152162075043
    2. ' input' → logprob: -0.9834152460098267
    3. 'input' → logprob: -4.983415126800537
    4. 'sys' → logprob: -6.608415126800537
    5. ' ' → logprob: -6.858415126800537
    6. '(sys' → logprob: -10.858415603637695
    7. '	sys' → logprob: -12.233415603637695
    8. '(input' → logprob: -12.358415603637695
    9. '   ' → logprob: -12.608415603637695
    10. '=sys' → logprob: -12.733415603637695

Token 13: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.2611408531665802
    2. '.' → logprob: -1.5111408233642578
    3. ' .' → logprob: -4.886140823364258
    4. '.argv' → logprob: -7.011140823364258
    5. '.stdout' → logprob: -7.761140823364258
    6. '.readline' → logprob: -8.886140823364258
    7. '.input' → logprob: -9.636140823364258
    8. '.std' → logprob: -10.011140823364258
    9. '.exit' → logprob: -11.511140823364258
    10. '.import' → logprob: -12.011140823364258

Token 14: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.015303132124245167
    2. '.' → logprob: -4.765303134918213
    3. '.read' → logprob: -5.015303134918213
    4. '.readlines' → logprob: -10.765302658081055
    5. '.Read' → logprob: -12.515302658081055
    6. '.write' → logprob: -13.640302658081055
    7. ' readline' → logprob: -13.890302658081055
    8. ' .' → logprob: -14.140302658081055
    9. '```' → logprob: -14.390302658081055
    10. 'read' → logprob: -14.640302658081055

Token 15: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004842815455049276
    2. '(' → logprob: -5.879842758178711
    3. '()
' → logprob: -6.379842758178711
    4. '().' → logprob: -8.754842758178711
    5. '(
' → logprob: -9.379842758178711
    6. '()

' → logprob: -10.629842758178711
    7. ' ()' → logprob: -10.879842758178711
    8. '()\' → logprob: -11.004842758178711
    9. ')' → logprob: -11.629842758178711
    10. '   ' → logprob: -12.004842758178711

Token 16: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11060470342636108
    2. '   ' → logprob: -2.610604763031006
    3. '(' → logprob: -3.610604763031006
    4. '    
' → logprob: -6.360604763031006
    5. '()
' → logprob: -6.485604763031006
    6. '(
' → logprob: -8.485604286193848
    7. ' ()' → logprob: -8.985604286193848
    8. '()

' → logprob: -9.110604286193848
    9. '
' → logprob: -9.735604286193848
    10. ')' → logprob: -10.110604286193848

Token 17: ' while' (ID: 2049)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2675357162952423
    2. '()' → logprob: -1.64253568649292
    3. '   ' → logprob: -4.01753568649292
    4. 'data' → logprob: -4.76753568649292
    5. 'user' → logprob: -5.76753568649292
    6. 'x' → logprob: -5.89253568649292
    7. 'n' → logprob: -6.39253568649292
    8. 's' → logprob: -6.76753568649292
    9. ' ' → logprob: -6.89253568649292
    10. '(n' → logprob: -7.14253568649292

Token 18: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.006097892764955759
    2. ' ' → logprob: -5.256097793579102
    3. 'True' → logprob: -7.881097793579102
    4. '(True' → logprob: -8.506097793579102
    5. ' (' → logprob: -9.006097793579102
    6. ' not' → logprob: -9.381097793579102
    7. '(' → logprob: -9.881097793579102
    8. '    ' → logprob: -11.506097793579102
    9. '  ' → logprob: -11.756097793579102
    10. ' ()' → logprob: -13.506097793579102

Token 19: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003364146687090397
    2. '():' → logprob: -5.878364086151123
    3. ' :' → logprob: -7.753364086151123
    4. ':**' → logprob: -9.503364562988281
    5. '):' → logprob: -10.753364562988281
    6. '   ' → logprob: -11.878364562988281
    7. ' ():' → logprob: -12.128364562988281
    8. ':
' → logprob: -12.378364562988281
    9. '       ' → logprob: -12.503364562988281
    10. '(:' → logprob: -12.753364562988281

Token 20: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00034261439577676356
    2. '    ' → logprob: -9.25034236907959
    3. '        
' → logprob: -9.62534236907959
    4. '   ' → logprob: -9.87534236907959
    5. '      ' → logprob: -10.62534236907959
    6. '(' → logprob: -10.75034236907959
    7. '()' → logprob: -11.75034236907959
    8. '     ' → logprob: -11.75034236907959
    9. ' ' → logprob: -12.12534236907959
    10. '```' → logprob: -12.12534236907959

Token 21: ' n' (ID: 297)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.20958225429058075
    2. 'line' → logprob: -2.7095823287963867
    3. '   ' → logprob: -3.2095823287963867
    4. '       ' → logprob: -3.3345823287963867
    5. '    ' → logprob: -3.5845823287963867
    6. ' ' → logprob: -5.459582328796387
    7. 's' → logprob: -5.834582328796387
    8. 'data' → logprob: -6.209582328796387
    9. ' try' → logprob: -6.459582328796387
    10. '        ' → logprob: -6.584582328796387

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12784400582313538
    2. ' ==' → logprob: -2.2528440952301025
    3. '=' → logprob: -4.627843856811523
    4. ' >' → logprob: -6.127843856811523
    5. ' ' → logprob: -6.377843856811523
    6. '==' → logprob: -7.502843856811523
    7. ' <=' → logprob: -8.377843856811523
    8. ' <' → logprob: -8.752843856811523
    9. ' !=' → logprob: -9.502843856811523
    10. ' :=' → logprob: -9.502843856811523

Token 23: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3788803815841675
    2. ' int' → logprob: -1.7538803815841675
    3. 'input' → logprob: -2.378880500793457
    4. 'int' → logprob: -3.003880500793457
    5. ' ' → logprob: -12.253880500793457
    6. '=input' → logprob: -12.753880500793457
    7. '=int' → logprob: -12.878880500793457
    8. ' sys' → logprob: -13.253880500793457
    9. '   ' → logprob: -13.753880500793457
    10. ' n' → logprob: -13.878880500793457

Token 24: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1602783501148224
    2. '().' → logprob: -1.9102783203125
    3. '(' → logprob: -10.4102783203125
    4. '())' → logprob: -11.2852783203125
    5. '()
' → logprob: -12.1602783203125
    6. '()

' → logprob: -12.7852783203125
    7. '()<' → logprob: -14.7852783203125
    8. '();' → logprob: -14.9102783203125
    9. '()).' → logprob: -15.0352783203125
    10. ')' → logprob: -15.1602783203125

Token 25: '       ' (ID: 309)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.020160863175988197
    2. '.rstrip' → logprob: -4.270160675048828
    3. '       ' → logprob: -5.270160675048828
    4. '   ' → logprob: -8.270160675048828
    5. 'rstrip' → logprob: -9.145160675048828
    6. '.' → logprob: -9.520160675048828
    7. 'strip' → logprob: -9.520160675048828
    8. '<|end|>' → logprob: -9.645160675048828
    9. ' if' → logprob: -9.770160675048828
    10. ' strip' → logprob: -9.895160675048828

Token 26: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4328186810016632
    2. ' if' → logprob: -1.4328186511993408
    3. '.strip' → logprob: -2.807818651199341
    4. 'if' (adapté à ' if') → logprob: -3.432818651199341
    5. ' ' → logprob: -5.30781888961792
    6. '   ' → logprob: -5.68281888961792
    7. '.rstrip' → logprob: -5.80781888961792
    8. '<|end|>' → logprob: -5.93281888961792
    9. '
' → logprob: -6.68281888961792
    10. '        
' → logprob: -6.93281888961792

Token 27: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.00035572313936427236
    2. 'not' → logprob: -8.00035572052002
    3. ' n' → logprob: -10.87535572052002
    4. 'n' → logprob: -13.62535572052002
    5. ' ' → logprob: -16.375356674194336
    6. '	not' → logprob: -16.875356674194336
    7. ' ' → logprob: -17.750356674194336
    8. 'n't' → logprob: -18.500356674194336
    9. ' n't' → logprob: -18.625356674194336
    10. '(not' → logprob: -20.125356674194336

Token 28: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.011071168817579746
    2. 'n' → logprob: -4.51107120513916
    3. ' ' → logprob: -10.76107120513916
    4. '	n' → logprob: -13.51107120513916
    5. ' ' → logprob: -14.13607120513916
    6. ')n' → logprob: -17.386070251464844
    7. ' н' → logprob: -17.636070251464844
    8. '(n' → logprob: -18.386070251464844
    9. '<|end|>' → logprob: -18.511070251464844
    10. '<n' → logprob: -19.636070251464844

Token 29: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04707776755094528
    2. '.strip' → logprob: -3.1720776557922363
    3. ':
' → logprob: -6.297077655792236
    4. '.' → logprob: -6.422077655792236
    5. '.rstrip' → logprob: -7.797077655792236
    6. ' :' → logprob: -9.172078132629395
    7. ' or' → logprob: -9.922078132629395
    8. ':return' → logprob: -11.297078132629395
    9. '.readline' → logprob: -11.797078132629395
    10. '：' → logprob: -13.047078132629395

Token 30: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01099429838359356
    2. '       ' → logprob: -4.6359944343566895
    3. ' break' → logprob: -7.1359944343566895
    4. '   ' → logprob: -8.385993957519531
    5. ' ' → logprob: -9.510993957519531
    6. 'break' → logprob: -10.385993957519531
    7. '     ' → logprob: -10.885993957519531
    8. '    ' → logprob: -11.135993957519531
    9. '	break' → logprob: -11.635993957519531
    10. ' or' → logprob: -11.760993957519531

Token 31: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.41898807883262634
    2. ' break' → logprob: -1.1689881086349487
    3. '       ' → logprob: -4.168988227844238
    4. 'break' (adapté à ' break') → logprob: -4.293988227844238
    5. ' ' → logprob: -7.043988227844238
    6. '               ' → logprob: -7.168988227844238
    7. '   ' → logprob: -7.418988227844238
    8. '	break' → logprob: -9.043988227844238
    9. '```' → logprob: -10.668988227844238
    10. '  ' → logprob: -11.293988227844238

Token 32: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002671768015716225
    2. '   ' → logprob: -9.125267028808594
    3. '        
' → logprob: -9.750267028808594
    4. '<|end|>' → logprob: -10.250267028808594
    5. '
' → logprob: -10.500267028808594
    6. '    ' → logprob: -12.500267028808594
    7. '\n' → logprob: -12.625267028808594
    8. '           ' → logprob: -12.625267028808594
    9. 'n' → logprob: -12.625267028808594
    10. ' n' → logprob: -12.750267028808594

Token 33: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006392885115928948
    2. '        
' → logprob: -8.125638961791992
    3. '<|end|>' → logprob: -9.000638961791992
    4. '
' → logprob: -9.250638961791992
    5. '   ' → logprob: -10.500638961791992
    6. '        ' → logprob: -11.125638961791992
    7. '    ' → logprob: -11.500638961791992
    8. '\' → logprob: -11.625638961791992
    9. '\n' → logprob: -11.625638961791992
    10. ',' → logprob: -11.625638961791992

Token 34: ' n' (ID: 297)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.495027095079422
    2. 'n' (adapté à ' n') → logprob: -1.7450270652770996
    3. ' n' → logprob: -1.7450270652770996
    4. ' =' → logprob: -3.3700270652770996
    5. '=' → logprob: -5.8700270652771
    6. '   ' → logprob: -6.2450270652771
    7. '        
' → logprob: -7.9950270652771
    8. '    ' → logprob: -8.495027542114258
    9. '	n' → logprob: -8.495027542114258
    10. '=n' → logprob: -8.745027542114258

Token 35: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02325945533812046
    2. ' =' → logprob: -3.773259401321411
    3. '=int' → logprob: -11.523259162902832
    4. '.strip' → logprob: -12.898259162902832
    5. '.' → logprob: -14.273259162902832
    6. '＝' → logprob: -15.648259162902832
    7. '.rstrip' → logprob: -15.773259162902832
    8. ')' → logprob: -16.52326011657715
    9. '=

' → logprob: -16.77326011657715
    10. 'rstrip' → logprob: -16.89826011657715

Token 36: ' n' (ID: 297)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.19500485062599182
    2. ' n' → logprob: -2.195004940032959
    3. 'int' → logprob: -3.070004940032959
    4. 'n' → logprob: -3.945004940032959
    5. ' in' → logprob: -11.0700044631958
    6. '=int' → logprob: -11.3200044631958
    7. ' ' → logprob: -12.0700044631958
    8. 'in' → logprob: -13.5700044631958
    9. '(int' → logprob: -13.8200044631958
    10. ' ' → logprob: -14.0700044631958

Token 37: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.07539554685354233
    2. '.rstrip' → logprob: -2.8253955841064453
    3. '.' → logprob: -4.325395584106445
    4. 'strip' → logprob: -10.075395584106445
    5. 'rstrip' → logprob: -10.325395584106445
    6. '[:-' → logprob: -10.700395584106445
    7. ' .' → logprob: -11.700395584106445
    8. ' strip' → logprob: -12.950395584106445
    9. '.split' → logprob: -14.450395584106445
    10. '.readline' → logprob: -14.450395584106445

Token 38: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003957608714699745
    2. '(' → logprob: -8.000395774841309
    3. '('' → logprob: -10.500395774841309
    4. '()`' → logprob: -12.375395774841309
    5. '().' → logprob: -12.500395774841309
    6. '()
' → logprob: -12.500395774841309
    7. ')' → logprob: -12.625395774841309
    8. '())' → logprob: -12.750395774841309
    9. '()"' → logprob: -13.125395774841309
    10. ''' → logprob: -13.250395774841309

Token 39: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.583029568195343
    2. '       ' → logprob: -2.0830295085906982
    3. '<|end|>' → logprob: -2.3330295085906982
    4. '   ' → logprob: -2.4580295085906982
    5. 'if' → logprob: -3.0830295085906982
    6. ' =' → logprob: -3.7080295085906982
    7. ')' → logprob: -4.208029747009277
    8. '<|end|>' → logprob: -4.458029747009277
    9. ',' → logprob: -5.083029747009277
    10. '()' → logprob: -5.208029747009277

Token 40: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.08550836890935898
    2. ' if' → logprob: -2.585508346557617
    3. 'n' → logprob: -5.585508346557617
    4. '       ' → logprob: -6.585508346557617
    5. 'num' → logprob: -6.960508346557617
    6. 'k' → logprob: -9.335508346557617
    7. 'm' → logprob: -9.335508346557617
    8. '   ' → logprob: -9.835508346557617
    9. '```' → logprob: -9.960508346557617
    10. 'number' → logprob: -10.085508346557617

Token 41: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3883124887943268
    2. ' not' → logprob: -1.1383124589920044
    3. 'n' → logprob: -6.763312339782715
    4. 'not' → logprob: -9.013312339782715
    5. ' ' → logprob: -9.263312339782715
    6. ' len' → logprob: -9.763312339782715
    7. ' int' → logprob: -12.138312339782715
    8. ' ' → logprob: -13.388312339782715
    9. 'n't' → logprob: -13.638312339782715
    10. 'len' → logprob: -14.138312339782715

Token 42: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03857853636145592
    2. '==' → logprob: -3.288578510284424
    3. '.is' → logprob: -8.163578987121582
    4. ' ' → logprob: -9.288578987121582
    5. '.' → logprob: -9.663578987121582
    6. '=='' → logprob: -11.288578987121582
    7. ')' → logprob: -11.538578987121582
    8. ' =='' → logprob: -11.538578987121582
    9. ' .' → logprob: -11.663578987121582
    10. '=' → logprob: -11.663578987121582

Token 43: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.055942680686712265
    2. '"' → logprob: -2.9309427738189697
    3. ' '' → logprob: -7.305942535400391
    4. '0' → logprob: -8.55594253540039
    5. '''' → logprob: -10.05594253540039
    6. ''end' → logprob: -10.05594253540039
    7. ''O' → logprob: -11.30594253540039
    8. ' "' → logprob: -11.30594253540039
    9. ''A' → logprob: -11.55594253540039
    10. ' ' → logprob: -11.55594253540039

Token 44: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004784680437296629
    2. ''' → logprob: -5.37978458404541
    3. '':' → logprob: -9.62978458404541
    4. '"' → logprob: -9.87978458404541
    5. 'END' → logprob: -11.12978458404541
    6. ' ' → logprob: -12.25478458404541
    7. '''' → logprob: -12.50478458404541
    8. '#' → logprob: -12.75478458404541
    9. 'EOF' → logprob: -12.75478458404541
    10. '1' → logprob: -13.37978458404541

Token 45: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.104144386947155
    2. '':
' → logprob: -2.979144334793091
    3. '\n' → logprob: -3.104144334793091
    4. ''' → logprob: -6.35414457321167
    5. '':
' → logprob: -6.72914457321167
    6. ':' → logprob: -8.604144096374512
    7. '\r' → logprob: -11.104144096374512
    8. ' ':' → logprob: -11.229144096374512
    9. '0' → logprob: -11.479144096374512
    10. ''):
' → logprob: -11.479144096374512

Token 46: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5298588871955872
    2. '       ' → logprob: -0.9048588871955872
    3. ':' → logprob: -5.4048590660095215
    4. '   ' → logprob: -7.1548590660095215
    5. ' break' → logprob: -7.4048590660095215
    6. '<|end|>' → logprob: -8.279858589172363
    7. ':
' → logprob: -8.904858589172363
    8. ' ' → logprob: -9.154858589172363
    9. '<|end|>' → logprob: -9.779858589172363
    10. '      ' → logprob: -10.279858589172363

Token 47: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.05886613205075264
    2. 'break' (adapté à ' break') → logprob: -3.558866024017334
    3. '           ' → logprob: -3.933866024017334
    4. '       ' → logprob: -4.808866024017334
    5. ' ' → logprob: -7.433866024017334
    6. ' return' → logprob: -9.058866500854492
    7. '   ' → logprob: -9.183866500854492
    8. '	break' → logprob: -9.558866500854492
    9. 'return' → logprob: -10.058866500854492
    10. '        ' → logprob: -11.433866500854492

Token 48: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13167016208171844
    2. '
' → logprob: -2.7566702365875244
    3. '<|end|>' → logprob: -3.2566702365875244
    4. '        
' → logprob: -4.131669998168945
    5. '\n' → logprob: -6.381669998168945
    6. '\' → logprob: -7.381669998168945
    7. '   ' → logprob: -7.506669998168945
    8. '<|end|>' → logprob: -7.631669998168945
    9. ',' → logprob: -8.006669998168945
    10. ')' → logprob: -8.006669998168945

Token 49: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017097337171435356
    2. '
' → logprob: -4.642097473144531
    3. '<|end|>' → logprob: -5.642097473144531
    4. '        
' → logprob: -5.767097473144531
    5. '   ' → logprob: -9.267097473144531
    6. '\' → logprob: -9.517097473144531
    7. '```' → logprob: -9.517097473144531
    8. '\n' → logprob: -9.767097473144531
    9. '<|end|>' → logprob: -9.767097473144531
    10. ',' → logprob: -9.767097473144531

Token 50: ' n' (ID: 297)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22265002131462097
    2. '        
' → logprob: -2.8476500511169434
    3. ' n' → logprob: -2.9726500511169434
    4. 'n' (adapté à ' n') → logprob: -3.4726500511169434
    5. ' 
' → logprob: -4.222650051116943
    6. '
' → logprob: -4.722650051116943
    7. '   ' → logprob: -4.722650051116943
    8. '    
' → logprob: -5.097650051116943
    9. '    ' → logprob: -5.597650051116943
    10. ' ' → logprob: -5.972650051116943

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1275995522737503
    2. '=' → logprob: -2.1275994777679443
    3. ',' → logprob: -8.127599716186523
    4. '=int' → logprob: -8.502599716186523
    5. ' ' → logprob: -10.377599716186523
    6. '_int' → logprob: -11.002599716186523
    7. 'int' → logprob: -11.002599716186523
    8. ')' → logprob: -11.252599716186523
    9. '.' → logprob: -11.377599716186523
    10. '_' → logprob: -11.377599716186523

Token 52: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.10510144382715225
    2. 'int' → logprob: -2.3551013469696045
    3. ' float' → logprob: -6.605101585388184
    4. ' list' → logprob: -6.730101585388184
    5. ' math' → logprob: -6.980101585388184
    6. ' len' → logprob: -7.855101585388184
    7. '[int' → logprob: -8.605101585388184
    8. ' ' → logprob: -8.605101585388184
    9. 'len' → logprob: -8.855101585388184
    10. 'float' → logprob: -8.980101585388184

Token 53: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.04858827963471413
    2. '(' → logprob: -3.048588275909424
    3. '()' → logprob: -15.423588752746582
    4. '(nn' → logprob: -15.673588752746582
    5. '(
' → logprob: -15.923588752746582
    6. '('' → logprob: -16.173587799072266
    7. ' (' → logprob: -16.298587799072266
    8. 'n' → logprob: -17.298587799072266
    9. '(

' → logprob: -17.548587799072266
    10. ')' → logprob: -17.923587799072266

Token 54: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00047202190035022795
    2. ' )' → logprob: -8.125472068786621
    3. '**' → logprob: -9.875472068786621
    4. ')
' → logprob: -9.875472068786621
    5. '+' → logprob: -10.375472068786621
    6. '*' → logprob: -10.500472068786621
    7. '))' → logprob: -13.125472068786621
    8. ' +' → logprob: -13.125472068786621
    9. '-' → logprob: -13.750472068786621
    10. '   ' → logprob: -14.000472068786621

Token 55: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05758628621697426
    2. '        ' → logprob: -3.182586193084717
    3. '        
' → logprob: -4.557586193084717
    4. ' ' → logprob: -6.557586193084717
    5. '<|end|>' → logprob: -6.807586193084717
    6. '    ' → logprob: -7.432586193084717
    7. '   ' → logprob: -8.682586669921875
    8. '      ' → logprob: -8.807586669921875
    9. ' 
' → logprob: -9.682586669921875
    10. '         
' → logprob: -9.807586669921875

Token 56: ' L' (ID: 451)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.3531681299209595
    2. 's' → logprob: -1.8531681299209595
    3. ' result' → logprob: -2.47816801071167
    4. '       ' → logprob: -2.60316801071167
    5. '   ' → logprob: -3.10316801071167
    6. 'r' → logprob: -3.10316801071167
    7. 'res' → logprob: -3.35316801071167
    8. 'for' → logprob: -3.47816801071167
    9. 'a' → logprob: -3.60316801071167
    10. 'x' → logprob: -3.85316801071167

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1622452437877655
    2. '=' → logprob: -1.912245273590088
    3. 'ine' → logprob: -7.537245273590088
    4. 'ength' → logprob: -8.16224479675293
    5. ',' → logprob: -8.53724479675293
    6. '   ' → logprob: -8.66224479675293
    7. 'og' → logprob: -8.78724479675293
    8. 'ist' → logprob: -9.28724479675293
    9. 'ines' → logprob: -9.41224479675293
    10. 'en' → logprob: -9.53724479675293

Token 58: ' []
' (ID: 8911)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.2634477913379669
    2. ' int' → logprob: -2.2634477615356445
    3. ' [' → logprob: -2.6384477615356445
    4. 'math' → logprob: -3.7634477615356445
    5. ' []' → logprob: -4.8884477615356445
    6. ' n' → logprob: -5.0134477615356445
    7. '[' → logprob: -5.2634477615356445
    8. 'int' → logprob: -5.2634477615356445
    9. ' ' → logprob: -6.0134477615356445
    10. '[]' → logprob: -6.7634477615356445

Token 59: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23234181106090546
    2. '<|end|>' → logprob: -2.607341766357422
    3. ' ' → logprob: -2.857341766357422
    4. '   ' → logprob: -3.607341766357422
    5. ' for' → logprob: -3.857341766357422
    6. 'for' → logprob: -4.357341766357422
    7. '        
' → logprob: -5.857341766357422
    8. ' 
' → logprob: -5.982341766357422
    9. '<|end|>' → logprob: -6.482341766357422
    10. '    ' → logprob: -6.482341766357422

Token 60: ' V' (ID: 631)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20273445546627045
    2. ' for' → logprob: -1.7027344703674316
    3. '       ' → logprob: -6.952734470367432
    4. '   ' → logprob: -8.202733993530273
    5. 'while' → logprob: -10.952733993530273
    6. ' ' → logprob: -11.702733993530273
    7. 'if' → logprob: -11.827733993530273
    8. ' while' → logprob: -11.827733993530273
    9. '	for' → logprob: -12.077733993530273
    10. 'f' → logprob: -12.327733993530273

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2814009487628937
    2. '=' → logprob: -1.4064009189605713
    3. ',' → logprob: -9.656400680541992
    4. '=[]' → logprob: -10.406400680541992
    5. 'al' → logprob: -10.906400680541992
    6. '.' → logprob: -11.031400680541992
    7. 'ariable' → logprob: -11.031400680541992
    8. 'alid' → logprob: -11.031400680541992
    9. 'for' → logprob: -11.281400680541992
    10. '=[]
' → logprob: -11.281400680541992

Token 62: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.6500236988067627
    2. ' [' → logprob: -1.2750236988067627
    3. '[]' → logprob: -2.4000236988067627
    4. '[' → logprob: -2.5250236988067627
    5. '[int' → logprob: -4.275023460388184
    6. ' math' → logprob: -5.775023460388184
    7. '[n' → logprob: -5.775023460388184
    8. '0' → logprob: -6.400023460388184
    9. ' ' → logprob: -6.650023460388184
    10. ' list' → logprob: -6.900023460388184

Token 63: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27627113461494446
    2. ' for' → logprob: -1.901271104812622
    3. 'for' → logprob: -2.526271104812622
    4. '<|end|>' → logprob: -4.526271343231201
    5. '   ' → logprob: -7.526271343231201
    6. ' ' → logprob: -7.901271343231201
    7. '<|end|>' → logprob: -9.401270866394043
    8. '	for' → logprob: -10.151270866394043
    9. '
' → logprob: -10.401270866394043
    10. ' ' → logprob: -10.651270866394043

Token 64: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.42898669838905334
    2. ' for' → logprob: -1.053986668586731
    3. '	for' → logprob: -8.678986549377441
    4. '   ' → logprob: -9.803986549377441
    5. '\t' → logprob: -11.053986549377441
    6. '       ' → logprob: -11.053986549377441
    7. ' ' → logprob: -11.553986549377441
    8. '    ' → logprob: -11.928986549377441
    9. '[' → logprob: -13.553986549377441
    10. ' ' → logprob: -13.553986549377441

Token 65: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.20004568994045258
    2. ' i' → logprob: -1.8250457048416138
    3. '_' → logprob: -4.075045585632324
    4. 'i' → logprob: -6.200045585632324
    5. ' ' → logprob: -6.950045585632324
    6. '_i' → logprob: -9.200045585632324
    7. ' ' → logprob: -12.200045585632324
    8. '	i' → logprob: -12.575045585632324
    9. 'I' → logprob: -13.450045585632324
    10. ' I' → logprob: -13.575045585632324

Token 66: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04722582921385765
    2. 'in' → logprob: -3.1722257137298584
    3. ' ' → logprob: -5.7972259521484375
    4. 'i' → logprob: -7.1722259521484375
    5. ' i' → logprob: -8.547225952148438
    6. '  ' → logprob: -9.672225952148438
    7. ' _' → logprob: -9.922225952148438
    8. 'n' → logprob: -10.172225952148438
    9. 'range' → logprob: -10.297225952148438
    10. '	in' → logprob: -11.797225952148438

Token 67: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.020559990778565407
    2. ' range' → logprob: -3.8955600261688232
    3. '	range' → logprob: -12.395560264587402
    4. '(range' → logprob: -12.520560264587402
    5. ' ' → logprob: -13.020560264587402
    6. 'rang' → logprob: -13.270560264587402
    7. 'ran' → logprob: -14.020560264587402
    8. ')' → logprob: -14.145560264587402
    9. 'ange' → logprob: -14.395560264587402
    10. '  ' → logprob: -14.520560264587402

Token 68: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.17382745444774628
    2. '(' → logprob: -1.9238274097442627
    3. ' n' → logprob: -4.673827648162842
    4. ' (' → logprob: -5.673827648162842
    5. 'n' → logprob: -7.298827648162842
    6. ' ' → logprob: -10.548827171325684
    7. '	n' → logprob: -11.923827171325684
    8. ' range' → logprob: -12.048827171325684
    9. '(range' → logprob: -12.173827171325684
    10. ')' → logprob: -12.423827171325684

Token 69: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0021689364220947027
    2. '):
' → logprob: -6.752169132232666
    3. ' ):' → logprob: -7.002169132232666
    4. ')' → logprob: -9.752168655395508
    5. ':' → logprob: -11.627168655395508
    6. '):
' → logprob: -11.877168655395508
    7. ',' → logprob: -12.502168655395508
    8. '   ' → logprob: -12.752168655395508
    9. ' )' → logprob: -13.502168655395508
    10. ' ):
' → logprob: -13.752168655395508

Token 70: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3897768259048462
    2. '   ' → logprob: -2.2647767066955566
    3. '    ' → logprob: -2.6397767066955566
    4. ' ' → logprob: -3.0147767066955566
    5. '<|end|>' → logprob: -3.3897767066955566
    6. '           ' → logprob: -4.389776706695557
    7. '	   ' → logprob: -4.389776706695557
    8. '        ' → logprob: -4.639776706695557
    9. '	' → logprob: -5.139776706695557
    10. ':' → logprob: -5.264776706695557

Token 71: ' d' (ID: 272)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.0210037231445312
    2. ' line' → logprob: -1.8960037231445312
    3. ' s' → logprob: -2.0210037231445312
    4. ' a' → logprob: -2.3960037231445312
    5. ' l' → logprob: -2.5210037231445312
    6. ' L' → logprob: -3.2710037231445312
    7. ' v' → logprob: -3.2710037231445312
    8. 'a' → logprob: -3.8960037231445312
    9. 'x' → logprob: -3.8960037231445312
    10. ' ' → logprob: -4.146003723144531

Token 72: ',v' (ID: 30680)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5209043622016907
    2. ',' → logprob: -1.145904302597046
    3. ' ,' → logprob: -2.770904302597046
    4. '=' → logprob: -4.270904541015625
    5. 'ata' → logprob: -5.520904541015625
    6. ',i' → logprob: -5.895904541015625
    7. ' ' → logprob: -6.520904541015625
    8. ',a' → logprob: -7.395904541015625
    9. ',e' → logprob: -7.645904541015625
    10. 'i' → logprob: -8.395904541015625

Token 73: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25234559178352356
    2. '=' → logprob: -1.5023455619812012
    3. ',' → logprob: -8.62734603881836
    4. ' ' → logprob: -8.75234603881836
    5. '=int' → logprob: -10.87734603881836
    6. 'al' → logprob: -10.87734603881836
    7. ' ,' → logprob: -11.50234603881836
    8. '=input' → logprob: -12.62734603881836
    9. 'a' → logprob: -12.87734603881836
    10. 'alue' → logprob: -13.37734603881836

Token 74: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.013952989131212234
    2. ' input' → logprob: -4.38895320892334
    3. 'map' → logprob: -7.13895320892334
    4. ' ' → logprob: -7.88895320892334
    5. ' list' → logprob: -9.01395320892334
    6. 'input' → logprob: -9.38895320892334
    7. ' ' → logprob: -10.76395320892334
    8. ' [' → logprob: -10.76395320892334
    9. ' sys' → logprob: -11.51395320892334
    10. '[' → logprob: -12.26395320892334

Token 75: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.010469590313732624
    2. '(' → logprob: -4.635469436645508
    3. '(lambda' → logprob: -7.510469436645508
    4. '(str' → logprob: -9.010469436645508
    5. '<|end|>' → logprob: -11.260469436645508
    6. '(float' → logprob: -11.760469436645508
    7. '[int' → logprob: -11.885469436645508
    8. '<int' → logprob: -12.010469436645508
    9. 'int' → logprob: -13.010469436645508
    10. ' (' → logprob: -13.510469436645508

Token 76: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.30878975987434387
    2. ',' → logprob: -1.5587897300720215
    3. '(input' → logprob: -2.9337897300720215
    4. 'input' → logprob: -7.0587897300720215
    5. '(' → logprob: -7.3087897300720215
    6. ')' → logprob: -7.8087897300720215
    7. ' input' → logprob: -9.55879020690918
    8. ' ,' → logprob: -10.43379020690918
    9. '(),' → logprob: -12.18379020690918
    10. '=input' → logprob: -12.55879020690918

Token 77: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.511406809295295e-06
    2. '()' → logprob: -12.000006675720215
    3. ' ().' → logprob: -16.0000057220459
    4. '(' → logprob: -16.6250057220459
    5. ')' → logprob: -18.3750057220459
    6. '.' → logprob: -18.6250057220459
    7. '()
' → logprob: -18.7500057220459
    8. '.readline' → logprob: -18.8750057220459
    9. '().'' → logprob: -19.7500057220459
    10. '.split' → logprob: -19.7500057220459

Token 78: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0025974188465625048
    2. 'strip' → logprob: -6.002597332000732
    3. 'rstrip' → logprob: -9.12759780883789
    4. '(split' → logprob: -12.12759780883789
    5. ' split' → logprob: -12.12759780883789
    6. '().' → logprob: -13.62759780883789
    7. 'rs' → logprob: -15.37759780883789
    8. 'spl' → logprob: -15.50259780883789
    9. 's' → logprob: -15.62759780883789
    10. ')' → logprob: -15.75259780883789

Token 79: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2684849500656128
    2. ')' → logprob: -1.5184849500656128
    3. '()' → logprob: -4.143485069274902
    4. '))' → logprob: -8.143485069274902
    5. '()))' → logprob: -9.143485069274902
    6. '())
' → logprob: -9.393485069274902
    7. '(' → logprob: -9.893485069274902
    8. ')
' → logprob: -12.393485069274902
    9. ' ())' → logprob: -12.643485069274902
    10. '()
' → logprob: -12.893485069274902

Token 80: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5809541940689087
    2. ')' → logprob: -1.2059541940689087
    3. '<|end|>' → logprob: -2.580954074859619
    4. '        
' → logprob: -3.580954074859619
    5. '
' → logprob: -3.955954074859619
    6. ')
' → logprob: -5.580954074859619
    7. ' ' → logprob: -5.705954074859619
    8. '   ' → logprob: -6.080954074859619
    9. '	' → logprob: -6.830954074859619
    10. '<|end|>' → logprob: -7.205954074859619

Token 81: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' (adapté à ' L') → logprob: -0.17362825572490692
    2. ' L' → logprob: -2.548628330230713
    3. 'V' → logprob: -3.798628330230713
    4. '<|end|>' → logprob: -3.923628330230713
    5. '       ' → logprob: -4.423628330230713
    6. ' ' → logprob: -5.048628330230713
    7. '    ' → logprob: -5.798628330230713
    8. 'd' → logprob: -5.923628330230713
    9. '   ' → logprob: -6.173628330230713
    10. '        ' → logprob: -6.173628330230713

Token 82: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.06220429390668869
    2. '.' → logprob: -2.812204360961914
    3. '.app' → logprob: -8.687204360961914
    4. '.ap' → logprob: -9.687204360961914
    5. '.add' → logprob: -13.562204360961914
    6. '.extend' → logprob: -13.687204360961914
    7. ' .' → logprob: -13.812204360961914
    8. '.push' → logprob: -14.312204360961914
    9. '.Append' → logprob: -14.687204360961914
    10. '​.' → logprob: -15.062204360961914

Token 83: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0004307884373702109
    2. '(' → logprob: -7.750430583953857
    3. '((' → logprob: -16.500431060791016
    4. '(
' → logprob: -17.125431060791016
    5. ')d' → logprob: -18.500431060791016
    6. 'd' → logprob: -18.750431060791016
    7. ' (' → logprob: -18.750431060791016
    8. '(v' → logprob: -18.875431060791016
    9. '(D' → logprob: -19.375431060791016
    10. ',d' → logprob: -19.500431060791016

Token 84: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018058452988043427
    2. ' )' → logprob: -6.376805782318115
    3. ')
' → logprob: -9.876806259155273
    4. ')v' → logprob: -10.626806259155273
    5. ')d' → logprob: -11.501806259155273
    6. '-' → logprob: -11.751806259155273
    7. ')

' → logprob: -13.126806259155273
    8. '+' → logprob: -13.626806259155273
    9. ')V' → logprob: -13.751806259155273
    10. ' )
' → logprob: -13.876806259155273

Token 85: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' (adapté à ' V') → logprob: -0.004120430909097195
    2. ' V' → logprob: -5.504120349884033
    3. 'v' → logprob: -10.129120826721191
    4. '   ' → logprob: -14.504120826721191
    5. '           ' → logprob: -15.129120826721191
    6. ' v' → logprob: -15.254120826721191
    7. ' ' → logprob: -15.254120826721191
    8. '	V' → logprob: -15.629120826721191
    9. '    ' → logprob: -15.754120826721191
    10. ' ' → logprob: -15.879120826721191

Token 87: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.20144960284233093
    2. '.' → logprob: -1.7014496326446533
    3. '.app' → logprob: -10.701449394226074
    4. '.extend' → logprob: -12.326449394226074
    5. '.ap' → logprob: -13.201449394226074
    6. ' .' → logprob: -13.576449394226074
    7. '<|end|>' → logprob: -13.576449394226074
    8. '.push' → logprob: -13.701449394226074
    9. '.setdefault' → logprob: -13.951449394226074
    10. '.add' → logprob: -13.951449394226074

Token 88: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0007366081699728966
    2. '(' → logprob: -7.250736713409424
    3. 'v' → logprob: -11.125736236572266
    4. ' (' → logprob: -11.625736236572266
    5. '(
' → logprob: -13.000736236572266
    6. ' v' → logprob: -14.625736236572266
    7. '(int' → logprob: -16.625736236572266
    8. '((' → logprob: -16.750736236572266
    9. '(

' → logprob: -17.250736236572266
    10. '(s' → logprob: -17.625736236572266

Token 89: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4498052223643754e-05
    2. ')
' → logprob: -11.625014305114746
    3. ' )' → logprob: -12.250014305114746
    4. ')return' → logprob: -15.625014305114746
    5. ')

' → logprob: -16.250015258789062
    6. '))' → logprob: -16.500015258789062
    7. ')n' → logprob: -16.625015258789062
    8. '
' → logprob: -17.250015258789062
    9. '#' → logprob: -17.750015258789062
    10. '       ' → logprob: -17.875015258789062

Token 90: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15988200902938843
    2. 'result' → logprob: -3.909882068634033
    3. '
' → logprob: -4.159882068634033
    4. '   ' → logprob: -4.409882068634033
    5. 'max' → logprob: -4.409882068634033
    6. 's' → logprob: -4.534882068634033
    7. 'dp' → logprob: -4.659882068634033
    8. '<|end|>' → logprob: -4.659882068634033
    9. '        
' → logprob: -5.034882068634033
    10. 'n' → logprob: -5.409882068634033

Token 91: ' times' (ID: 4238)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.16317911446094513
    2. 'max' → logprob: -3.1631791591644287
    3. ' dp' → logprob: -3.7881791591644287
    4. ' max' → logprob: -4.16317892074585
    5. '       ' → logprob: -4.66317892074585
    6. '#' → logprob: -5.41317892074585
    7. 'def' → logprob: -5.78817892074585
    8. 'm' → logprob: -5.91317892074585
    9. 'l' → logprob: -5.91317892074585
    10. 'dist' → logprob: -6.03817892074585

Token 92: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08091942220926285
    2. '=' → logprob: -2.5809195041656494
    3. '=[]' → logprob: -6.33091926574707
    4. ',' → logprob: -9.95591926574707
    5. 's' → logprob: -10.33091926574707
    6. '<|end|>' → logprob: -10.58091926574707
    7. '[' → logprob: -10.95591926574707
    8. '[]' → logprob: -10.95591926574707
    9. '.' → logprob: -10.95591926574707
    10. '=[' → logprob: -11.45591926574707

Token 93: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.5843653082847595
    2. ' []' → logprob: -1.3343653678894043
    3. '[]' → logprob: -2.2093653678894043
    4. '[' → logprob: -3.2093653678894043
    5. '[max' → logprob: -5.084365367889404
    6. ' sorted' → logprob: -5.834365367889404
    7. ' ' → logprob: -6.084365367889404
    8. '0' → logprob: -6.084365367889404
    9. '[L' → logprob: -6.209365367889404
    10. ' [(' → logprob: -6.459365367889404

Token 94: 'L' (ID: 43)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2199440598487854
    2. 'L' → logprob: -2.3449440002441406
    3. 'V' → logprob: -3.7199440002441406
    4. '(' → logprob: -3.9699440002441406
    5. '(L' → logprob: -4.094944000244141
    6. 'float' → logprob: -4.344944000244141
    7. 'math' → logprob: -4.719944000244141
    8. '(V' → logprob: -5.344944000244141
    9. '-' → logprob: -5.719944000244141
    10. '1' → logprob: -6.219944000244141

Token 95: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0037784588057547808
    2. '[' → logprob: -6.003778457641602
    3. '[-' → logprob: -7.253778457641602
    4. '[j' → logprob: -8.628778457641602
    5. '/' → logprob: -9.128778457641602
    6. ' /' → logprob: -9.253778457641602
    7. '-' → logprob: -10.253778457641602
    8. '[v' → logprob: -10.378778457641602
    9. '[x' → logprob: -10.503778457641602
    10. ']' → logprob: -10.628778457641602

Token 96: ']/' (ID: 18500)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11596427112817764
    2. ']/' → logprob: -2.24096417427063
    3. '-' → logprob: -6.865964412689209
    4. '/' → logprob: -7.240964412689209
    5. ' ]' → logprob: -8.11596393585205
    6. ']+' → logprob: -8.49096393585205
    7. ']*' → logprob: -8.61596393585205
    8. ' /' → logprob: -8.74096393585205
    9. ']-' → logprob: -9.36596393585205
    10. '[' → logprob: -9.61596393585205

Token 97: 'V' (ID: 53)
  Prédit: 'V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.0009398083784617484
    2. '(' → logprob: -7.625939846038818
    3. ' V' → logprob: -8.87593936920166
    4. '(V' → logprob: -9.12593936920166
    5. 'math' → logprob: -9.87593936920166
    6. 'v' → logprob: -10.50093936920166
    7. '2' → logprob: -11.00093936920166
    8. 'float' → logprob: -11.12593936920166
    9. 'max' → logprob: -11.50093936920166
    10. '(math' → logprob: -11.50093936920166

Token 98: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.60414821645827e-06
    2. '[' → logprob: -12.500004768371582
    3. 'i' → logprob: -14.375004768371582
    4. ')' → logprob: -16.250003814697266
    5. '(i' → logprob: -16.875003814697266
    6. '[
' → logprob: -17.125003814697266
    7. '[I' → logprob: -17.375003814697266
    8. '```' → logprob: -17.625003814697266
    9. '<|end|>' → logprob: -17.750003814697266
    10. ']' → logprob: -17.750003814697266

Token 99: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.01179431937634945
    2. 'for' → logprob: -4.761794090270996
    3. ' ' → logprob: -6.136794090270996
    4. ']' → logprob: -7.636794090270996
    5. ')' → logprob: -8.011794090270996
    6. '	for' → logprob: -9.761794090270996
    7. ' ]' → logprob: -9.886794090270996
    8. ' if' → logprob: -10.386794090270996
    9. ' )' → logprob: -10.636794090270996
    10. '  ' → logprob: -11.636794090270996

Token 100: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.006744031794369221
    2. 'for' → logprob: -5.131743907928467
    3. ' ' → logprob: -7.506743907928467
    4. '	for' → logprob: -8.381744384765625
    5. '   ' → logprob: -11.131744384765625
    6. '<|end|>' → logprob: -12.006744384765625
    7. ' if' → logprob: -12.506744384765625
    8. '  ' → logprob: -12.881744384765625
    9. '    ' → logprob: -13.131744384765625
    10. ')' → logprob: -13.256744384765625

Token 101: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.01815146580338478
    2. 'i' → logprob: -4.01815128326416
    3. '	i' → logprob: -14.14315128326416
    4. 'range' → logprob: -14.39315128326416
    5. ' range' → logprob: -15.14315128326416
    6. ' ' → logprob: -16.893152236938477
    7. ' in' → logprob: -18.518152236938477
    8. '_i' → logprob: -18.643152236938477
    9. ' ' → logprob: -19.518152236938477
    10. ')i' → logprob: -20.268152236938477

Token 102: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004129691980779171
    2. 'in' → logprob: -5.504129886627197
    3. ' ' → logprob: -10.879129409790039
    4. 'range' → logprob: -10.879129409790039
    5. '<|end|>' → logprob: -12.254129409790039
    6. ' range' → logprob: -12.504129409790039
    7. ' i' → logprob: -13.754129409790039
    8. '	in' → logprob: -14.004129409790039
    9. ',' → logprob: -14.504129409790039
    10. 'i' → logprob: -14.879129409790039

Token 103: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.061967913061380386
    2. ' range' → logprob: -2.8119678497314453
    3. '(range' → logprob: -15.686967849731445
    4. ' ' → logprob: -16.311967849731445
    5. '	range' → logprob: -17.311967849731445
    6. '  ' → logprob: -18.561967849731445
    7. ' xrange' → logprob: -18.561967849731445
    8. '   ' → logprob: -18.561967849731445
    9. 'r' → logprob: -19.811967849731445
    10. '```' → logprob: -19.936967849731445

Token 104: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.000505730917211622
    2. '(' → logprob: -7.7505059242248535
    3. '(len' → logprob: -9.625505447387695
    4. ' (' → logprob: -11.750505447387695
    5. 'n' → logprob: -13.875505447387695
    6. '(
' → logprob: -16.625505447387695
    7. ' n' → logprob: -17.500505447387695
    8. 'len' → logprob: -18.500505447387695
    9. '((' → logprob: -18.500505447387695
    10. ']' → logprob: -18.625505447387695

Token 105: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.012366493232548237
    2. ')' → logprob: -4.63736629486084
    3. ']' → logprob: -6.01236629486084
    4. ' )' → logprob: -9.26236629486084
    5. ')])' → logprob: -10.38736629486084
    6. ' ]' → logprob: -11.51236629486084
    7. ' ' → logprob: -12.63736629486084
    8. ')],' → logprob: -12.76236629486084
    9. '       ' → logprob: -13.01236629486084
    10. '])]' → logprob: -13.13736629486084

Token 106: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3224726617336273
    2. '
' → logprob: -1.3224726915359497
    3. '<|end|>' → logprob: -4.94747257232666
    4. '        
' → logprob: -6.57247257232666
    5. '<|end|>' → logprob: -9.07247257232666
    6. '   ' → logprob: -9.19747257232666
    7. ' ' → logprob: -9.32247257232666
    8. '
' → logprob: -9.32247257232666
    9. ' 
' → logprob: -10.32247257232666
    10. '```' → logprob: -10.32247257232666

Token 107: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.0577855110168457
    2. 'times' → logprob: -1.6827855110168457
    3. 'low' → logprob: -2.4327855110168457
    4. 'left' → logprob: -2.8077855110168457
    5. 'min' → logprob: -3.1827855110168457
    6. 'ans' → logprob: -3.3077855110168457
    7. 'total' → logprob: -3.5577855110168457
    8. 'answer' → logprob: -3.6827855110168457
    9. 'res' → logprob: -3.8077855110168457
    10. 'result' → logprob: -4.057785511016846

Token 108: ' find' (ID: 1646)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.7230880856513977
    2. 'max' → logprob: -1.473088026046753
    3. ' times' → logprob: -2.848088026046753
    4. ' min' → logprob: -3.473088026046753
    5. 'times' → logprob: -3.973088026046753
    6. ' ans' → logprob: -4.348088264465332
    7. 'min' → logprob: -4.348088264465332
    8. ' for' → logprob: -4.723088264465332
    9. ' idx' → logprob: -4.723088264465332
    10. ' if' → logprob: -4.723088264465332

Token 109: ' l' (ID: 305)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.2435327023267746
    2. ' min' → logprob: -2.493532657623291
    3. ' the' → logprob: -3.118532657623291
    4. ' minimal' → logprob: -3.618532657623291
    5. 'max' → logprob: -3.743532657623291
    6. ' minimum' → logprob: -4.618532657623291
    7. ' maximum' → logprob: -4.868532657623291
    8. ' idx' → logprob: -5.243532657623291
    9. ' index' → logprob: -5.243532657623291
    10. 'min' → logprob: -5.493532657623291

Token 110: 'cm' (ID: 7871)
  Prédit: 'eft'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eft' → logprob: -0.03644561022520065
    2. 'ow' → logprob: -3.5364456176757812
    3. 'e' → logprob: -5.411445617675781
    4. 'max' → logprob: -7.911445617675781
    5. 'ef' → logprob: -7.911445617675781
    6. 'o' → logprob: -8.286445617675781
    7. 'min' → logprob: -8.536445617675781
    8. 'ower' → logprob: -8.661445617675781
    9. 'ong' → logprob: -8.911445617675781
    10. ' eft' → logprob: -8.911445617675781

Token 111: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8110390901565552
    2. 'def' → logprob: -1.8110390901565552
    3. '       ' → logprob: -2.4360389709472656
    4. '=' → logprob: -2.6860389709472656
    5. '(' → logprob: -2.8110389709472656
    6. '   ' → logprob: -3.3110389709472656
    7. '_' → logprob: -3.4360389709472656
    8. ' of' → logprob: -4.186038970947266
    9. 'import' → logprob: -4.311038970947266
    10. '_times' → logprob: -4.686038970947266

Token 112: ' fractions' (ID: 110523)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.5563180446624756
    2. ' times' → logprob: -0.9313180446624756
    3. ' the' → logprob: -4.181318283081055
    4. 'the' → logprob: -4.681318283081055
    5. ' all' → logprob: -6.056318283081055
    6. '[' → logprob: -6.181318283081055
    7. 'all' → logprob: -6.806318283081055
    8. ' [' → logprob: -7.306318283081055
    9. '[V' → logprob: -7.681318283081055
    10. ' V' → logprob: -8.556318283081055

Token 113: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5811604857444763
    2. '
' → logprob: -1.956160545349121
    3. ' 
' → logprob: -2.956160545349121
    4. 'def' → logprob: -2.956160545349121
    5. 'import' → logprob: -3.456160545349121
    6. 'from' → logprob: -3.581160545349121
    7. '   ' → logprob: -3.581160545349121
    8. ' ' → logprob: -3.706160545349121
    9. '        
' → logprob: -3.706160545349121
    10. ' from' → logprob: -4.331160545349121

Token 114: ' l' (ID: 305)
  Prédit: ' times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' times' → logprob: -0.8617901802062988
    2. 'times' → logprob: -1.1117901802062988
    3. '1' → logprob: -1.6117901802062988
    4. ' ' → logprob: -3.861790180206299
    5. 'math' → logprob: -4.361790180206299
    6. ' math' → logprob: -4.861790180206299
    7. ' fractions' → logprob: -6.361790180206299
    8. ' L' → logprob: -6.986790180206299
    9. 'from' → logprob: -7.111790180206299
    10. '(times' → logprob: -7.611790180206299

Token 115: 'cm' (ID: 7871)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1948453187942505
    2. 'from' → logprob: -1.5698453187942505
    3. ' l' → logprob: -2.194845199584961
    4. ' from' → logprob: -2.319845199584961
    5. 'import' → logprob: -2.694845199584961
    6. ' times' → logprob: -2.819845199584961
    7. '1' → logprob: -3.319845199584961
    8. 'def' → logprob: -3.694845199584961
    9. 'times' → logprob: -4.319845199584961
    10. ' /' → logprob: -4.819845199584961

Token 116: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.449066698551178
    2. '_times' → logprob: -1.9490666389465332
    3. '_' → logprob: -2.699066638946533
    4. '<|end|>' → logprob: -2.949066638946533
    5. 'times' → logprob: -3.449066638946533
    6. ' =' → logprob: -4.074066638946533
    7. ' times' → logprob: -4.324066638946533
    8. ' (' → logprob: -4.699066638946533
    9. '_time' → logprob: -5.199066638946533
    10. '([' → logprob: -5.574066638946533

Token 117: ' numer' (ID: 9076)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.552432656288147
    2. '[' → logprob: -2.1774325370788574
    3. '[V' → logprob: -2.3024325370788574
    4. '[i' → logprob: -2.4274325370788574
    5. '[L' → logprob: -2.9274325370788574
    6. ' times' → logprob: -3.3024325370788574
    7. ' [' → logprob: -5.052432537078857
    8. 'den' → logprob: -5.302432537078857
    9. 'V' → logprob: -5.302432537078857
    10. 'L' → logprob: -6.177432537078857

Token 118: 'ators' (ID: 4840)
  Prédit: 'ators'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ators' → logprob: -0.0001882823125924915
    2. 'ator' → logprob: -8.625187873840332
    3. 'ATORS' → logprob: -12.250187873840332
    4. 'times' → logprob: -13.375187873840332
    5. 's' → logprob: -14.250187873840332
    6. 'tors' → logprob: -14.875187873840332
    7. 'adors' → logprob: -15.250187873840332
    8. '   ' → logprob: -15.250187873840332
    9. '[' → logprob: -15.875187873840332
    10. 'rors' → logprob: -16.50018882751465

Token 119: ' /' (ID: 820)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3488389253616333
    2. '<|end|>' → logprob: -1.3488389253616333
    3. ' /' → logprob: -1.9738389253616333
    4. 'times' → logprob: -1.9738389253616333
    5. ' times' → logprob: -3.0988388061523438
    6. '/' → logprob: -3.2238388061523438
    7. ' and' → logprob: -3.8488388061523438
    8. ' *' → logprob: -4.098838806152344
    9. 'def' → logprob: -4.473838806152344
    10. ' =' → logprob: -4.598838806152344

Token 120: ' gcd' (ID: 106918)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.011035911738872528
    2. 'g' → logprob: -4.761035919189453
    3. '1' → logprob: -6.886035919189453
    4. ' math' → logprob: -7.261035919189453
    5. 'min' → logprob: -8.011035919189453
    6. '   ' → logprob: -8.386035919189453
    7. '(math' → logprob: -9.886035919189453
    8. 'max' → logprob: -10.511035919189453
    9. 'import' → logprob: -11.136035919189453
    10. ' ' → logprob: -11.511035919189453

Token 121: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 122: ' denomin' (ID: 39104)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.6741260886192322
    2. 'times' → logprob: -1.424126148223877
    3. '[i' → logprob: -2.424126148223877
    4. '[' → logprob: -3.049126148223877
    5. 'fra' → logprob: -3.174126148223877
    6. ' times' → logprob: -3.549126148223877
    7. ' denomin' → logprob: -4.299126148223877
    8. '[k' → logprob: -5.299126148223877
    9. '[int' → logprob: -5.549126148223877
    10. ' [' → logprob: -6.049126148223877

Token 123: 'ators' (ID: 4840)
  Prédit: 'ators'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ators' → logprob: -0.00023774817236699164
    2. 'n' → logprob: -9.625237464904785
    3. 'ator' → logprob: -9.875237464904785
    4. 'tors' → logprob: -10.125237464904785
    5. 's' → logprob: -10.500237464904785
    6. '   ' → logprob: -11.250237464904785
    7. 'ATORS' → logprob: -11.250237464904785
    8. 'r' → logprob: -11.750237464904785
    9. 'st' → logprob: -12.750237464904785
    10. 'tor' → logprob: -13.125237464904785

Token 124: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2380914688110352
    2. '<|end|>' → logprob: -1.2380914688110352
    3. '       ' → logprob: -1.6130914688110352
    4. 'from' → logprob: -2.613091468811035
    5. ' ' → logprob: -3.363091468811035
    6. 'def' → logprob: -3.488091468811035
    7. 'import' → logprob: -3.488091468811035
    8. ')' → logprob: -3.863091468811035
    9. ',' → logprob: -5.113091468811035
    10. '
' → logprob: -5.613091468811035

Token 125: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2706100046634674
    2. '<|end|>' → logprob: -2.6456100940704346
    3. ' times' → logprob: -2.8956100940704346
    4. ' ' → logprob: -3.3956100940704346
    5. '   ' → logprob: -4.5206098556518555
    6. 'times' → logprob: -4.5206098556518555
    7. 'def' → logprob: -4.6456098556518555
    8. 'import' → logprob: -4.7706098556518555
    9. '
' → logprob: -4.8956098556518555
    10. ')' → logprob: -5.1456098556518555

Token 126: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14615194499492645
    2. 'from' → logprob: -3.2711520195007324
    3. 'import' → logprob: -3.3961520195007324
    4. 'def' → logprob: -3.5211520195007324
    5. '<|end|>' → logprob: -4.771152019500732
    6. ' ' → logprob: -4.896152019500732
    7. ' times' → logprob: -5.396152019500732
    8. ' from' → logprob: -6.021152019500732
    9. ')' → logprob: -6.021152019500732
    10. '        
' → logprob: -6.271152019500732

Token 127: ' represent' (ID: 5188)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4682982563972473
    2. ' from' → logprob: -2.5932981967926025
    3. 'import' → logprob: -2.8432981967926025
    4. 'def' → logprob: -2.8432981967926025
    5. '#' → logprob: -3.5932981967926025
    6. 'numer' → logprob: -3.9682981967926025
    7. ' denomin' → logprob: -4.218298435211182
    8. ' times' → logprob: -4.218298435211182
    9. 'num' → logprob: -4.343298435211182
    10. 'g' → logprob: -4.593298435211182

Token 128: ' fractions' (ID: 110523)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.952972412109375
    2. 'fra' → logprob: -1.452972412109375
    3. ' times' → logprob: -2.327972412109375
    4. 'numer' → logprob: -2.327972412109375
    5. ' fractions' → logprob: -2.702972412109375
    6. ' numerator' → logprob: -3.702972412109375
    7. ' numer' → logprob: -3.827972412109375
    8. ' as' → logprob: -4.202972412109375
    9. 'as' → logprob: -4.827972412109375
    10. 'time' → logprob: -4.952972412109375

Token 129: ' as' (ID: 472)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.5468815565109253
    2. ' as' → logprob: -0.9218815565109253
    3. '=' → logprob: -4.796881675720215
    4. ' =' → logprob: -5.296881675720215
    5. 'numer' → logprob: -6.171881675720215
    6. '<|end|>' → logprob: -6.421881675720215
    7. 'times' → logprob: -6.796881675720215
    8. '[' → logprob: -6.921881675720215
    9. '_times' → logprob: -7.421881675720215
    10. '_as' → logprob: -7.421881675720215

Token 130: ' times' (ID: 4238)
  Prédit: 'fra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fra' → logprob: -0.957020103931427
    2. '[(' → logprob: -1.2070200443267822
    3. 'from' → logprob: -2.0820200443267822
    4. '[' → logprob: -2.8320200443267822
    5. '(' → logprob: -3.5820200443267822
    6. 'times' → logprob: -3.5820200443267822
    7. '[L' → logprob: -4.582020282745361
    8. '[i' → logprob: -4.957020282745361
    9. 'import' → logprob: -4.957020282745361
    10. '[n' → logprob: -5.082020282745361

Token 131: '[i' (ID: 1768)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 132: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0709660053253174
    2. 'numer' → logprob: -1.9459660053253174
    3. ' =' → logprob: -2.0709660053253174
    4. ')' → logprob: -2.1959660053253174
    5. '_n' → logprob: -2.6959660053253174
    6. '_times' → logprob: -2.8209660053253174
    7. '_num' → logprob: -3.4459660053253174
    8. ']' → logprob: -3.6959660053253174
    9. 'umerator' → logprob: -4.320965766906738
    10. '.n' → logprob: -4.570965766906738

Token 133: ' =' (ID: 314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7159150838851929
    2. '<|end|>' → logprob: -1.9659150838851929
    3. ' ' → logprob: -2.0909152030944824
    4. ')' → logprob: -3.3409152030944824
    5. ' 
' → logprob: -3.3409152030944824
    6. ' times' → logprob: -3.3409152030944824
    7. ',' → logprob: -3.7159152030944824
    8. 'import' → logprob: -3.9659152030944824
    9. 'times' → logprob: -4.340915203094482
    10. '       ' → logprob: -4.465915203094482

Token 134: ' p' (ID: 275)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.4502747654914856
    2. '(L' → logprob: -1.2002747058868408
    3. '(' → logprob: -3.825274705886841
    4. 'Fraction' → logprob: -4.07527494430542
    5. 'fra' → logprob: -4.95027494430542
    6. ' L' → logprob: -5.20027494430542
    7. 'f' → logprob: -5.95027494430542
    8. ' (' → logprob: -6.70027494430542
    9. '(V' → logprob: -6.95027494430542
    10. ' fractions' → logprob: -6.95027494430542

Token 135: '_i' (ID: 10853)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -1.3295879364013672
    2. ' /' → logprob: -1.3295879364013672
    3. '<|end|>' → logprob: -2.079587936401367
    4. '[i' → logprob: -2.579587936401367
    5. '_times' → logprob: -3.329587936401367
    6. 'umerator' → logprob: -3.454587936401367
    7. ',' → logprob: -3.454587936401367
    8. '<|end|>' → logprob: -3.579587936401367
    9. 'i' → logprob: -3.704587936401367
    10. '_i' → logprob: -3.829587936401367

Token 136: ' /' (ID: 820)
  Prédit: '/q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/q' → logprob: -0.8550410270690918
    2. '/' → logprob: -1.1050410270690918
    3. ',' → logprob: -2.355041027069092
    4. ' /' → logprob: -2.730041027069092
    5. 'q' → logprob: -3.605041027069092
    6. ',q' → logprob: -3.730041027069092
    7. '[i' → logprob: -4.855041027069092
    8. '[' → logprob: -5.230041027069092
    9. 'umerator' → logprob: -5.355041027069092
    10. '<|end|>' → logprob: -6.105041027069092

Token 137: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0034113202709704638
    2. '1' → logprob: -6.503411293029785
    3. 'V' → logprob: -6.878411293029785
    4. ' q' → logprob: -7.253411293029785
    5. '100' → logprob: -10.253411293029785
    6. 'Q' → logprob: -10.628411293029785
    7. ' ' → logprob: -10.628411293029785
    8. '```' → logprob: -10.878411293029785
    9. '   ' → logprob: -11.378411293029785
    10. '(' → logprob: -11.503411293029785

Token 138: '_i' (ID: 10853)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9358130693435669
    2. '[i' → logprob: -1.810813069343567
    3. '[' → logprob: -2.0608129501342773
    4. '<|end|>' → logprob: -2.0608129501342773
    5. '_times' → logprob: -3.3108129501342773
    6. ']' → logprob: -3.3108129501342773
    7. ')' → logprob: -3.8108129501342773
    8. '=' → logprob: -3.9358129501342773
    9. 's' → logprob: -4.060812950134277
    10. 'times' → logprob: -4.185812950134277

Token 139: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 140: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2814500331878662
    2. 'from' → logprob: -1.5314500331878662
    3. '       ' → logprob: -2.031450033187866
    4. ' 
' → logprob: -2.156450033187866
    5. ' from' → logprob: -2.406450033187866
    6. '
' → logprob: -3.156450033187866
    7. 'import' → logprob: -3.781450033187866
    8. ',' → logprob: -3.906450033187866
    9. '        
' → logprob: -4.156450271606445
    10. ' =' → logprob: -4.781450271606445

Token 141: ' #' (ID: 1069)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.6926780343055725
    2. 'from' → logprob: -0.8176780343055725
    3. 'import' → logprob: -3.4426779747009277
    4. '       ' → logprob: -4.567677974700928
    5. ' 
' → logprob: -5.817677974700928
    6. '
' → logprob: -5.942677974700928
    7. ' import' → logprob: -6.192677974700928
    8. ' denomin' → logprob: -6.442677974700928
    9. ' numerator' → logprob: -6.692677974700928
    10. '   ' → logprob: -7.067677974700928

Token 142: ' We' (ID: 1416)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.2259039580821991
    2. ' from' → logprob: -2.1009039878845215
    3. 'import' → logprob: -2.8509039878845215
    4. ' denomin' → logprob: -4.9759039878845215
    5. ' import' → logprob: -5.3509039878845215
    6. '#' → logprob: -5.7259039878845215
    7. 'def' → logprob: -6.3509039878845215
    8. 'p' → logprob: -7.1009039878845215
    9. 'fra' → logprob: -7.3509039878845215
    10. 'den' → logprob: -7.6009039878845215

Token 143: ' want' (ID: 1682)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3055468797683716
    2. ' need' → logprob: -2.430546760559082
    3. 'need' → logprob: -2.555546760559082
    4. 'from' → logprob: -2.680546760559082
    5. ' import' → logprob: -4.930546760559082
    6. 'def' → logprob: -5.180546760559082
    7. ' can' → logprob: -6.055546760559082
    8. ''ll' → logprob: -6.055546760559082
    9. 'continue' → logprob: -6.055546760559082
    10. ' will' → logprob: -6.305546760559082

Token 144: ' T' (ID: 353)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.11481627076864243
    2. 'to' → logprob: -2.239816188812256
    3. 'import' → logprob: -7.364816188812256
    4. 'def' → logprob: -7.614816188812256
    5. ' l' → logprob: -8.239816665649414
    6. 'from' → logprob: -8.239816665649414
    7. ' the' → logprob: -9.489816665649414
    8. ' import' → logprob: -10.614816665649414
    9. '
' → logprob: -10.739816665649414
    10. ' ' → logprob: -10.739816665649414

Token 145: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.041432175785303116
    2. '=' → logprob: -3.7914321422576904
    3. '<|end|>' → logprob: -4.6664323806762695
    4. ' to' → logprob: -5.6664323806762695
    5. 'import' → logprob: -6.2914323806762695
    6. 'to' → logprob: -7.5414323806762695
    7. ':' → logprob: -7.5414323806762695
    8. 'def' → logprob: -7.6664323806762695
    9. ' ' → logprob: -7.9164323806762695
    10. '
' → logprob: -8.41643238067627

Token 146: ' L' (ID: 451)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5505632162094116
    2. 'times' → logprob: -1.8005632162094116
    3. '0' → logprob: -2.550563335418701
    4. ' times' → logprob: -2.800563335418701
    5. ' ' → logprob: -3.300563335418701
    6. 'math' → logprob: -3.925563335418701
    7. 'max' → logprob: -4.050563335418701
    8. '<|end|>' → logprob: -4.800563335418701
    9. '"' → logprob: -5.175563335418701
    10. 'l' → logprob: -5.675563335418701

Token 147: 'CM' (ID: 14170)
  Prédit: 'CM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CM' → logprob: -0.5061935186386108
    2. 'cm' → logprob: -1.3811935186386108
    3. '[' → logprob: -2.8811936378479004
    4. '[i' → logprob: -3.0061936378479004
    5. 'C' → logprob: -4.5061936378479
    6. '[]' → logprob: -4.7561936378479
    7. ' =' → logprob: -5.1311936378479
    8. ' cm' → logprob: -6.2561936378479
    9. ')' → logprob: -6.6311936378479
    10. '.append' → logprob: -6.7561936378479

Token 148: '(p' (ID: 2407)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7591705918312073
    2. '<|end|>' → logprob: -1.5091705322265625
    3. '_times' → logprob: -2.7591705322265625
    4. ' (' → logprob: -3.1341705322265625
    5. 'times' → logprob: -3.1341705322265625
    6. '_' → logprob: -3.2591705322265625
    7. '       ' → logprob: -3.8841705322265625
    8. ' of' → logprob: -3.8841705322265625
    9. 'of' → logprob: -4.6341705322265625
    10. ' times' → logprob: -5.0091705322265625

Token 149: '_i' (ID: 10853)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.21823272109031677
    2. '_i' → logprob: -2.7182326316833496
    3. '_times' → logprob: -3.7182326316833496
    4. '[i' → logprob: -3.8432326316833496
    5. ')' → logprob: -4.21823263168335
    6. '=[' → logprob: -4.34323263168335
    7. ']' → logprob: -4.59323263168335
    8. '[' → logprob: -4.96823263168335
    9. '=[]' → logprob: -5.09323263168335
    10. ' =' → logprob: -5.59323263168335

Token 150: ')/' (ID: 11876)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07463312894105911
    2. ' for' → logprob: -3.4496331214904785
    3. ')/' → logprob: -3.4496331214904785
    4. 'for' → logprob: -5.8246331214904785
    5. '[i' → logprob: -6.8246331214904785
    6. ',' → logprob: -6.8246331214904785
    7. 's' → logprob: -7.4496331214904785
    8. ' )' → logprob: -7.8246331214904785
    9. ')
' → logprob: -7.9496331214904785
    10. ')//' → logprob: -8.074633598327637

Token 151: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.019877737388014793
    2. 'g' → logprob: -4.644877910614014
    3. 'math' → logprob: -4.769877910614014
    4. 'min' → logprob: -6.769877910614014
    5. ' G' → logprob: -9.019877433776855
    6. '1' → logprob: -9.144877433776855
    7. 'LC' → logprob: -9.519877433776855
    8. '
' → logprob: -10.769877433776855
    9. '```' → logprob: -11.019877433776855
    10. '(' → logprob: -11.394877433776855

Token 152: 'CD' (ID: 8257)
  Prédit: 'CD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CD' → logprob: -0.000340945553034544
    2. 'cd' → logprob: -8.000341415405273
    3. 'CF' → logprob: -12.625341415405273
    4. 'C' → logprob: -13.875341415405273
    5. 'CM' → logprob: -14.750341415405273
    6. 'g' → logprob: -14.750341415405273
    7. 'Cd' → logprob: -15.750341415405273
    8. 'CDF' → logprob: -16.125341415405273
    9. '```' → logprob: -16.625341415405273
    10. 'G' → logprob: -17.125341415405273

Token 153: '(q' (ID: 21479)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10359355807304382
    2. '<|end|>' → logprob: -3.728593587875366
    3. 'def' → logprob: -4.103593349456787
    4. '(p' → logprob: -4.103593349456787
    5. ' (' → logprob: -4.353593349456787
    6. '       ' → logprob: -5.603593349456787
    7. '(q' → logprob: -5.603593349456787
    8. 'of' → logprob: -5.853593349456787
    9. ' of' → logprob: -5.853593349456787
    10. 'import' → logprob: -6.353593349456787

Token 154: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0013166663702577353
    2. 'i' → logprob: -7.376316547393799
    3. '_u' → logprob: -7.876316547393799
    4. ')' → logprob: -9.001317024230957
    5. '[i' → logprob: -9.501317024230957
    6. 'u' → logprob: -10.251317024230957
    7. '   ' → logprob: -10.876317024230957
    8. '_r' → logprob: -11.376317024230957
    9. '(i' → logprob: -11.751317024230957
    10. '_q' → logprob: -12.376317024230957

Token 155: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014787978725507855
    2. '       ' → logprob: -7.751478672027588
    3. ')
' → logprob: -8.126479148864746
    4. ']' → logprob: -8.126479148864746
    5. '   ' → logprob: -9.001479148864746
    6. ' )' → logprob: -9.376479148864746
    7. 'def' → logprob: -10.001479148864746
    8. '()' → logprob: -10.501479148864746
    9. '')' → logprob: -10.751479148864746
    10. '(' → logprob: -10.876479148864746

Token 156: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3669619858264923
    2. ' ' → logprob: -2.24196195602417
    3. '   ' → logprob: -2.86696195602417
    4. ' 
' → logprob: -2.99196195602417
    5. '
' → logprob: -4.11696195602417
    6. '\' → logprob: -4.24196195602417
    7. '        
' → logprob: -4.24196195602417
    8. 'import' → logprob: -4.86696195602417
    9. '<|end|>' → logprob: -5.11696195602417
    10. ')' → logprob: -5.24196195602417

Token 157: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.141892671585083
    2. '       ' → logprob: -1.766892671585083
    3. 'import' → logprob: -2.016892671585083
    4. ' from' → logprob: -2.141892671585083
    5. 'def' → logprob: -2.516892671585083
    6. '<|end|>' → logprob: -3.016892671585083
    7. '
' → logprob: -3.141892671585083
    8. ' times' → logprob: -4.141892433166504
    9. ' ' → logprob: -4.141892433166504
    10. '#' (adapté à ' #') → logprob: -4.891892433166504

Token 158: ' but' (ID: 889)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3844493329524994
    2. ' from' → logprob: -2.0094492435455322
    3. 'import' → logprob: -2.1344492435455322
    4. ' import' → logprob: -3.6344492435455322
    5. 'def' → logprob: -4.009449481964111
    6. '#' → logprob: -4.759449481964111
    7. ' denomin' → logprob: -5.134449481964111
    8. ' #' → logprob: -6.009449481964111
    9. 'p' → logprob: -6.634449481964111
    10. ' def' → logprob: -6.884449481964111

Token 159: ' fractions' (ID: 110523)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.3061274290084839
    2. ' times' → logprob: -1.3061274290084839
    3. 'from' → logprob: -2.0561275482177734
    4. 'times' → logprob: -2.5561275482177734
    5. ' all' → logprob: -3.1811275482177734
    6. ' for' → logprob: -3.4311275482177734
    7. ' the' → logprob: -3.6811275482177734
    8. ' from' → logprob: -3.9311275482177734
    9. 'for' → logprob: -4.181127548217773
    10. ' p' → logprob: -4.181127548217773

Token 160: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2839133739471436
    2. '<|end|>' → logprob: -1.2839133739471436
    3. ' are' → logprob: -1.9089133739471436
    4. ',' → logprob: -2.4089133739471436
    5. '=' → logprob: -2.7839133739471436
    6. '<|end|>' → logprob: -3.6589133739471436
    7. 'import' → logprob: -4.283913612365723
    8. ')' → logprob: -4.408913612365723
    9. ':' → logprob: -4.658913612365723
    10. ' ' → logprob: -4.783913612365723

Token 161: ' float' (ID: 4428)
  Prédit: 'floating'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'floating' → logprob: -0.6867647767066956
    2. 'flo' → logprob: -1.3117647171020508
    3. 'float' → logprob: -1.6867647171020508
    4. ' floating' → logprob: -3.936764717102051
    5. ' floats' → logprob: -4.936764717102051
    6. 'in' → logprob: -4.936764717102051
    7. ' float' → logprob: -5.311764717102051
    8. 'decimal' → logprob: -6.811764717102051
    9. 'represented' → logprob: -7.436764717102051
    10. ' in' → logprob: -7.686764717102051

Token 162: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11593402177095413
    2. '<|end|>' → logprob: -2.615934133529663
    3. '\n' → logprob: -4.240933895111084
    4. ',' → logprob: -5.115933895111084
    5. ')' → logprob: -5.240933895111084
    6. '<|end|>' → logprob: -6.490933895111084
    7. '\' → logprob: -6.740933895111084
    8. ':' → logprob: -6.865933895111084
    9. 'import' → logprob: -6.865933895111084
    10. ',
' → logprob: -6.990933895111084

Token 163: ' transform' (ID: 7118)
  Prédit: ' so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.020565364509820938
    2. 'import' → logprob: -5.020565509796143
    3. '       ' → logprob: -5.270565509796143
    4. ' continue' → logprob: -6.395565509796143
    5. '<|end|>' → logprob: -6.520565509796143
    6. 'so' → logprob: -6.645565509796143
    7. '#' → logprob: -6.770565509796143
    8. ' we' → logprob: -7.770565509796143
    9. ' import' → logprob: -7.895565509796143
    10. ' not' → logprob: -8.145565032958984

Token 164: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.2186402082443237
    2. '<|end|>' → logprob: -1.3436402082443237
    3. 'from' → logprob: -1.9686402082443237
    4. 'to' → logprob: -3.0936403274536133
    5. ' times' → logprob: -3.3436403274536133
    6. ' p' → logprob: -3.3436403274536133
    7. '<|end|>' → logprob: -3.4686403274536133
    8. ' into' → logprob: -3.4686403274536133
    9. ' fractions' → logprob: -3.7186403274536133
    10. ' from' → logprob: -3.8436403274536133

Token 165: ' fractions' (ID: 110523)
  Prédit: 'fra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fra' → logprob: -0.00988877285271883
    2. 'r' → logprob: -5.384888648986816
    3. ' fractions' → logprob: -6.009888648986816
    4. 'ration' → logprob: -7.259888648986816
    5. 'fraction' → logprob: -7.384888648986816
    6. 'inte' → logprob: -7.884888648986816
    7. 'rat' → logprob: -8.259888648986816
    8. 'Fraction' → logprob: -8.384888648986816
    9. '```' → logprob: -8.759888648986816
    10. 'import' → logprob: -9.259888648986816

Token 166: ' of' (ID: 328)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0971338227391243
    2. ' from' → logprob: -2.5971338748931885
    3. '
' → logprob: -5.472133636474609
    4. '<|end|>' → logprob: -5.597133636474609
    5. '       ' → logprob: -5.722133636474609
    6. '   ' → logprob: -5.972133636474609
    7. 'import' → logprob: -6.222133636474609
    8. ',' → logprob: -7.722133636474609
    9. '.from' → logprob: -8.09713363647461
    10. ')' → logprob: -8.09713363647461

Token 167: ' integers' (ID: 54912)
  Prédit: 'fra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fra' → logprob: -0.6611382365226746
    2. 'Fraction' → logprob: -1.9111382961273193
    3. 'from' → logprob: -2.5361382961273193
    4. ' fractions' → logprob: -2.6611382961273193
    5. ' integers' → logprob: -2.9111382961273193
    6. 'inte' → logprob: -3.1611382961273193
    7. 'import' → logprob: -3.2861382961273193
    8. 'numer' → logprob: -4.41113805770874
    9. 'Fra' → logprob: -5.16113805770874
    10. ' Fraction' → logprob: -5.28613805770874

Token 168: '
' (ID: 198)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.1279996782541275
    2. ' from' → logprob: -2.752999782562256
    3. '       ' → logprob: -3.252999782562256
    4. 'import' → logprob: -4.877999782562256
    5. '
' → logprob: -5.252999782562256
    6. '        
' → logprob: -7.002999782562256
    7. '<|end|>' → logprob: -7.002999782562256
    8. '   ' → logprob: -7.127999782562256
    9. ' ' → logprob: -7.627999782562256
    10. ')' → logprob: -8.127999305725098

Token 169: '       ' (ID: 309)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.14753343164920807
    2. ' from' → logprob: -2.272533416748047
    3. '       ' → logprob: -3.897533416748047
    4. 'import' → logprob: -5.022533416748047
    5. '
' → logprob: -5.897533416748047
    6. '   ' → logprob: -6.397533416748047
    7. ',' → logprob: -7.272533416748047
    8. '        
' → logprob: -7.647533416748047
    9. ' ' → logprob: -7.897533416748047
    10. ')' → logprob: -8.522533416748047

Token 170: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.05688516050577164
    2. ' from' → logprob: -3.306885242462158
    3. '       ' → logprob: -4.681885242462158
    4. 'import' → logprob: -5.806885242462158
    5. ' ' → logprob: -6.056885242462158
    6. '   ' → logprob: -6.181885242462158
    7. '<|end|>' → logprob: -7.431885242462158
    8. ')' → logprob: -7.806885242462158
    9. ' 
' → logprob: -8.681884765625
    10. '    ' → logprob: -9.306884765625

Token 171: ' Since' (ID: 12265)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.28640270233154297
    2. ' from' → logprob: -1.411402702331543
    3. '   ' → logprob: -5.536402702331543
    4. 'import' → logprob: -7.161402702331543
    5. '       ' → logprob: -8.161402702331543
    6. ' import' → logprob: -9.036402702331543
    7. '
' → logprob: -9.536402702331543
    8. '```' → logprob: -12.036402702331543
    9. '	from' → logprob: -12.786402702331543
    10. ' 
' → logprob: -12.786402702331543

Token 172: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.35891804099082947
    2. 'all' → logprob: -2.8589179515838623
    3. 'from' → logprob: -2.8589179515838623
    4. ' math' → logprob: -3.7339179515838623
    5. 'math' → logprob: -3.8589179515838623
    6. ' L' → logprob: -3.8589179515838623
    7. 'import' → logprob: -3.8589179515838623
    8. ' from' → logprob: -3.9839179515838623
    9. ' import' → logprob: -4.733918190002441
    10. ' V' → logprob: -4.733918190002441

Token 173: ' L' (ID: 451)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.46721333265304565
    2. ' V' → logprob: -1.7172133922576904
    3. ' times' → logprob: -2.7172133922576904
    4. 'times' → logprob: -2.8422133922576904
    5. 'd' → logprob: -4.092213153839111
    6. 'L' → logprob: -4.842213153839111
    7. '(V' → logprob: -4.967213153839111
    8. ' L' → logprob: -5.092213153839111
    9. ' fractions' → logprob: -5.217213153839111
    10. 'numbers' → logprob: -5.592213153839111

Token 174: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0419783815741539
    2. ' and' → logprob: -4.041978359222412
    3. 'cm' → logprob: -5.166978359222412
    4. '.append' → logprob: -5.541978359222412
    5. 'CM' → logprob: -5.916978359222412
    6. ',' → logprob: -6.041978359222412
    7. '=[]' → logprob: -6.166978359222412
    8. 'import' → logprob: -6.666978359222412
    9. ' =' → logprob: -6.666978359222412
    10. '=' → logprob: -7.166978359222412

Token 175: '],' (ID: 2155)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8039926886558533
    2. ']' → logprob: -1.053992748260498
    3. '%' → logprob: -2.178992748260498
    4. 'and' → logprob: -3.553992748260498
    5. '],' → logprob: -4.053992748260498
    6. ']%' → logprob: -4.678992748260498
    7. ' are' → logprob: -4.803992748260498
    8. ',' → logprob: -4.928992748260498
    9. ']=' → logprob: -5.303992748260498
    10. ' %' → logprob: -5.928992748260498

Token 176: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.1145491674542427
    2. ' V' → logprob: -2.239549160003662
    3. '   ' → logprob: -6.864549160003662
    4. ' ' → logprob: -7.989549160003662
    5. ' and' → logprob: -9.48954963684082
    6. ' all' → logprob: -9.61454963684082
    7. 'and' → logprob: -9.86454963684082
    8. '       ' → logprob: -10.11454963684082
    9. '  ' → logprob: -10.11454963684082
    10. 'all' → logprob: -10.36454963684082

Token 177: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006428572814911604
    2. ' are' → logprob: -7.500642776489258
    3. 'i' → logprob: -10.375642776489258
    4. 'are' → logprob: -10.500642776489258
    5. '<|end|>' → logprob: -11.750642776489258
    6. ']' → logprob: -11.875642776489258
    7. '```' → logprob: -12.500642776489258
    8. '[j' → logprob: -13.000642776489258
    9. '[' → logprob: -13.250642776489258
    10. ')' → logprob: -13.500642776489258

Token 178: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17797717452049255
    2. ' are' → logprob: -2.0529770851135254
    3. 'are' → logprob: -4.177977085113525
    4. '[i' → logprob: -4.302977085113525
    5. ')' → logprob: -6.427977085113525
    6. '],' → logprob: -6.802977085113525
    7. ']=' → logprob: -7.927977085113525
    8. ' have' → logprob: -8.052977561950684
    9. 'have' → logprob: -8.177977561950684
    10. '])' → logprob: -8.427977561950684

Token 179: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.03714985400438309
    2. 'are' → logprob: -3.4121499061584473
    3. '=' → logprob: -6.287149906158447
    4. '>' → logprob: -7.537149906158447
    5. '[i' → logprob: -8.662149429321289
    6. 'import' → logprob: -9.037149429321289
    7. ')' → logprob: -9.162149429321289
    8. ',' → logprob: -9.287149429321289
    9. ']' → logprob: -9.287149429321289
    10. ' =' → logprob: -9.537149429321289

Token 180: ' integers' (ID: 54912)
  Prédit: 'inte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inte' → logprob: -0.06470423936843872
    2. 'int' → logprob: -2.814704179763794
    3. ' integers' → logprob: -6.064704418182373
    4. 'ints' → logprob: -8.564703941345215
    5. 'integer' → logprob: -8.939703941345215
    6. '1' → logprob: -9.564703941345215
    7. 'positive' → logprob: -11.189703941345215
    8. ' int' → logprob: -14.189703941345215
    9. 'import' → logprob: -14.314703941345215
    10. '0' → logprob: -14.439703941345215

Token 181: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3305249512195587
    2. 'from' → logprob: -1.9555249214172363
    3. '
' → logprob: -3.2055249214172363
    4. ',' → logprob: -3.3305249214172363
    5. '        
' → logprob: -4.080524921417236
    6. ' from' → logprob: -4.330524921417236
    7. 'import' → logprob: -4.330524921417236
    8. '   ' → logprob: -5.205524921417236
    9. '<|end|>' → logprob: -6.080524921417236
    10. ',
' → logprob: -6.205524921417236

Token 182: ' times' (ID: 4238)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6927011013031006
    2. '       ' → logprob: -1.8177011013031006
    3. ' from' → logprob: -2.0677011013031006
    4. 'import' → logprob: -2.9427011013031006
    5. ' times' → logprob: -3.0677011013031006
    6. '<|end|>' → logprob: -3.5677011013031006
    7. ' fractions' → logprob: -4.44270133972168
    8. ' the' → logprob: -4.44270133972168
    9. '<|end|>' → logprob: -4.94270133972168
    10. ' we' → logprob: -5.19270133972168

Token 183: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21167539060115814
    2. '=' → logprob: -1.8366754055023193
    3. '[i' → logprob: -4.46167516708374
    4. '_num' → logprob: -5.33667516708374
    5. '_times' → logprob: -5.83667516708374
    6. '_i' → logprob: -6.21167516708374
    7. '_n' → logprob: -6.71167516708374
    8. '_int' → logprob: -6.96167516708374
    9. 'num' → logprob: -7.33667516708374
    10. '_tokens' → logprob: -7.33667516708374

Token 184: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9101898074150085
    2. ']' → logprob: -0.9101898074150085
    3. ' =' → logprob: -2.5351898670196533
    4. ']=' → logprob: -2.6601898670196533
    5. 'num' → logprob: -4.535189628601074
    6. 'numer' → logprob: -4.785189628601074
    7. '_num' → logprob: -5.035189628601074
    8. '_times' → logprob: -5.410189628601074
    9. '[i' → logprob: -5.910189628601074
    10. 'times' → logprob: -6.410189628601074

Token 185: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023768069222569466
    2. ' =' → logprob: -3.898768186569214
    3. ' can' → logprob: -7.273767948150635
    4. 'can' → logprob: -7.648767948150635
    5. 'times' → logprob: -8.148768424987793
    6. '_times' → logprob: -8.398768424987793
    7. 'is' → logprob: -8.648768424987793
    8. 'num' → logprob: -8.773768424987793
    9. 'numer' → logprob: -8.773768424987793
    10. 's' → logprob: -8.898768424987793

Token 186: ' L' (ID: 451)
  Prédit: 'Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fraction' → logprob: -0.8820698261260986
    2. 'L' → logprob: -1.2570698261260986
    3. '(L' → logprob: -1.7570698261260986
    4. 'fra' → logprob: -2.8820698261260986
    5. ' fractions' → logprob: -3.5070698261260986
    6. ' L' → logprob: -4.3820695877075195
    7. ' (' → logprob: -4.3820695877075195
    8. ' Fraction' → logprob: -5.3820695877075195
    9. '(F' → logprob: -5.8820695877075195
    10. 'math' → logprob: -5.8820695877075195

Token 187: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00017064384883269668
    2. '[' → logprob: -8.750170707702637
    3. '[I' → logprob: -12.500170707702637
    4. 'i' → logprob: -13.000170707702637
    5. '[
' → logprob: -13.125170707702637
    6. '[idx' → logprob: -14.500170707702637
    7. '[ii' → logprob: -15.000170707702637
    8. 'times' → logprob: -15.000170707702637
    9. '   ' → logprob: -15.500170707702637
    10. '
' → logprob: -15.625170707702637

Token 188: ']/' (ID: 18500)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3516122102737427
    2. ' *' → logprob: -1.3516122102737427
    3. ']' → logprob: -3.726612091064453
    4. ']*' → logprob: -5.476612091064453
    5. ']/' → logprob: -6.226612091064453
    6. ' /' → logprob: -6.476612091064453
    7. ',' → logprob: -6.851612091064453
    8. ' ' → logprob: -6.976612091064453
    9. '/' → logprob: -7.101612091064453
    10. ' ]' → logprob: -7.351612091064453

Token 189: 'V' (ID: 53)
  Prédit: 'V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.011050296947360039
    2. ' V' → logprob: -4.511050224304199
    3. ' ' → logprob: -13.2610502243042
    4. '   ' → logprob: -14.6360502243042
    5. '
' → logprob: -16.386051177978516
    6. '	V' → logprob: -16.636051177978516
    7. '  ' → logprob: -17.011051177978516
    8. 'v' → logprob: -18.136051177978516
    9. '    ' → logprob: -18.261051177978516
    10. ')V' → logprob: -18.386051177978516

Token 190: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005012048059143126
    2. '[' → logprob: -7.7505011558532715
    3. 'i' → logprob: -9.62550163269043
    4. '[I' → logprob: -13.62550163269043
    5. '[
' → logprob: -13.87550163269043
    6. '_i' → logprob: -14.00050163269043
    7. '```' → logprob: -14.25050163269043
    8. '(i' → logprob: -15.62550163269043
    9. '{i' → logprob: -16.00050163269043
    10. ']' → logprob: -16.37550163269043

Token 191: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14945849776268005
    2. ')' → logprob: -2.024458408355713
    3. '])' → logprob: -5.649458408355713
    4. '       ' → logprob: -7.399458408355713
    5. ']
' → logprob: -7.524458408355713
    6. ' ]' → logprob: -7.649458408355713
    7. ' )' → logprob: -8.024458885192871
    8. '[i' → logprob: -8.149458885192871
    9. ')]' → logprob: -8.274458885192871
    10. ')
' → logprob: -8.649458885192871

Token 192: ' rational' (ID: 43286)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7907534837722778
    2. '       ' → logprob: -0.7907534837722778
    3. 'from' → logprob: -3.5407533645629883
    4. '<|end|>' → logprob: -3.5407533645629883
    5. '        
' → logprob: -4.165753364562988
    6. 'import' → logprob: -4.915753364562988
    7. ')' → logprob: -5.915753364562988
    8. '<|end|>' → logprob: -6.040753364562988
    9. ' from' → logprob: -6.790753364562988
    10. ',' → logprob: -7.040753364562988

Token 193: '
' (ID: 198)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.08507062494754791
    2. ' from' → logprob: -2.8350706100463867
    3. '
' → logprob: -5.085070610046387
    4. 'import' → logprob: -5.210070610046387
    5. 's' → logprob: -5.710070610046387
    6. ')' → logprob: -6.710070610046387
    7. 'times' → logprob: -7.460070610046387
    8. '_den' → logprob: -7.460070610046387
    9. ' denomin' → logprob: -7.585070610046387
    10. '       ' → logprob: -7.835070610046387

Token 194: '       ' (ID: 309)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.05380980297923088
    2. '       ' → logprob: -3.428809881210327
    3. ' from' → logprob: -4.053809642791748
    4. 'import' → logprob: -7.053809642791748
    5. '   ' → logprob: -7.553809642791748
    6. '        
' → logprob: -8.428810119628906
    7. ')' → logprob: -8.553810119628906
    8. ',' → logprob: -8.678810119628906
    9. 'times' → logprob: -9.303810119628906
    10. '
' → logprob: -9.678810119628906

Token 195: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.2363220900297165
    2. ' from' → logprob: -1.736322045326233
    3. '       ' → logprob: -3.4863221645355225
    4. 'import' → logprob: -5.861321926116943
    5. '        
' → logprob: -8.486322402954102
    6. ' import' → logprob: -8.486322402954102
    7. '
' → logprob: -9.111322402954102
    8. ' 
' → logprob: -10.236322402954102
    9. 'def' → logprob: -10.236322402954102
    10. ' /' → logprob: -10.611322402954102

Token 196: ' numerator' (ID: 149054)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.07753316313028336
    2. ' from' → logprob: -2.70253324508667
    3. 'import' → logprob: -5.32753324508667
    4. ' import' → logprob: -6.70253324508667
    5. '       ' → logprob: -7.32753324508667
    6. '#' → logprob: -8.327532768249512
    7. '   ' → logprob: -8.952532768249512
    8. '
' → logprob: -9.202532768249512
    9. 'def' → logprob: -9.202532768249512
    10. ' #' → logprob: -9.327532768249512

Token 197: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.13792535662651062
    2. ' =' → logprob: -2.137925386428833
    3. '=' → logprob: -4.637925148010254
    4. ',' → logprob: -6.887925148010254
    5. '_s' → logprob: -10.012925148010254
    6. '=[]' → logprob: -10.137925148010254
    7. ' s' → logprob: -10.762925148010254
    8. '_list' → logprob: -10.887925148010254
    9. 'den' → logprob: -11.137925148010254
    10. '=[]
' → logprob: -11.262925148010254

Token 198: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.004624629858881235
    2. ' L' → logprob: -6.504624843597412
    3. '[' → logprob: -6.754624843597412
    4. '[L' → logprob: -7.004624843597412
    5. '1' → logprob: -7.629624843597412
    6. 'times' → logprob: -9.129624366760254
    7. ' [' → logprob: -9.379624366760254
    8. 'import' → logprob: -9.504624366760254
    9. '[]' → logprob: -9.629624366760254
    10. '   ' → logprob: -9.754624366760254

Token 199: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03885400667786598
    2. '       ' → logprob: -4.538854122161865
    3. 's' → logprob: -4.663854122161865
    4. ' =' → logprob: -4.913854122161865
    5. '[' → logprob: -6.288854122161865
    6. '<|end|>' → logprob: -6.288854122161865
    7. '.append' → logprob: -6.788854122161865
    8. '   ' → logprob: -7.163854122161865
    9. '<|end|>' → logprob: -7.413854122161865
    10. ']' → logprob: -7.413854122161865

Token 200: '],' (ID: 2155)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03445741534233093
    2. '       ' → logprob: -4.034457206726074
    3. '
' → logprob: -4.534457206726074
    4. ',' → logprob: -6.159457206726074
    5. '           ' → logprob: -7.034457206726074
    6. ']' → logprob: -7.409457206726074
    7. '   ' → logprob: -7.534457206726074
    8. '][' → logprob: -8.909457206726074
    9. '[' → logprob: -9.034457206726074
    10. '],' → logprob: -9.159457206726074

Token 201: ' denominator' (ID: 101279)
  Prédit: ' denominator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' denominator' → logprob: -0.4289620518684387
    2. 'den' → logprob: -1.053961992263794
    3. ' den' → logprob: -9.553961753845215
    4. '   ' → logprob: -9.928961753845215
    5. ' denomin' → logprob: -10.303961753845215
    6. '       ' → logprob: -10.928961753845215
    7. '#' → logprob: -11.178961753845215
    8. ' denom' → logprob: -11.178961753845215
    9. ' ' → logprob: -11.303961753845215
    10. '           ' → logprob: -11.428961753845215

Token 202: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.043031737208366394
    2. ' =' → logprob: -3.168031692504883
    3. '[i' → logprob: -11.293031692504883
    4. '=i' → logprob: -11.543031692504883
    5. 'V' → logprob: -12.168031692504883
    6. ' ' → logprob: -13.418031692504883
    7. '   ' → logprob: -14.293031692504883
    8. ' V' → logprob: -14.793031692504883
    9. '=[' → logprob: -14.793031692504883
    10. '=
' → logprob: -15.043031692504883

Token 203: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.026312489062547684
    2. ' V' → logprob: -3.6513125896453857
    3. ' ' → logprob: -12.026312828063965
    4. '   ' → logprob: -12.401312828063965
    5. '  ' → logprob: -14.526312828063965
    6. '    ' → logprob: -14.776312828063965
    7. '1' → logprob: -15.526312828063965
    8. '	V' → logprob: -15.526312828063965
    9. '     ' → logprob: -15.901312828063965
    10. '           ' → logprob: -15.901312828063965

Token 204: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.525101363658905
    2. ')' → logprob: -2.15010142326355
    3. ']' → logprob: -2.27510142326355
    4. '_' → logprob: -2.77510142326355
    5. '_i' → logprob: -3.15010142326355
    6. '       ' → logprob: -4.025101184844971
    7. 's' → logprob: -4.025101184844971
    8. '   ' → logprob: -5.025101184844971
    9. 'tokens' → logprob: -5.150101184844971
    10. '_tokens' → logprob: -5.275101184844971

Token 205: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013757008127868176
    2. ')' → logprob: -4.763757228851318
    3. '       ' → logprob: -6.388757228851318
    4. ')]' → logprob: -6.763757228851318
    5. ']
' → logprob: -6.888757228851318
    6. '[i' → logprob: -7.763757228851318
    7. '])' → logprob: -8.38875675201416
    8. '<|end|>' → logprob: -8.76375675201416
    9. '<|end|>' → logprob: -9.38875675201416
    10. ' ]' → logprob: -9.63875675201416

Token 206: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6260500550270081
    2. 'from' → logprob: -1.1260499954223633
    3. '
' → logprob: -2.7510499954223633
    4. '        
' → logprob: -3.1260499954223633
    5. ' from' → logprob: -3.8760499954223633
    6. 'import' → logprob: -4.876049995422363
    7. 'def' → logprob: -6.501049995422363
    8. ' 
' → logprob: -6.751049995422363
    9. '    
' → logprob: -7.376049995422363
    10. '   ' → logprob: -8.001049995422363

Token 207: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.018100423738360405
    2. ' from' → logprob: -4.518100261688232
    3. '       ' → logprob: -5.893100261688232
    4. 'import' → logprob: -6.018100261688232
    5. 'def' → logprob: -6.893100261688232
    6. 'den' → logprob: -8.01810073852539
    7. '#' (adapté à ' #') → logprob: -8.89310073852539
    8. 'num' → logprob: -9.26810073852539
    9. 'g' → logprob: -9.64310073852539
    10. '
' → logprob: -10.01810073852539

Token 208: ' To' (ID: 2514)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.024767665192484856
    2. ' from' → logprob: -4.274767875671387
    3. 'import' → logprob: -4.899767875671387
    4. 'def' → logprob: -6.024767875671387
    5. 'g' → logprob: -8.024767875671387
    6. '#' → logprob: -9.024767875671387
    7. ' import' → logprob: -9.399767875671387
    8. '       ' → logprob: -9.649767875671387
    9. '
' → logprob: -10.649767875671387
    10. 'den' → logprob: -10.899767875671387

Token 209: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.764362633228302
    2. 'from' → logprob: -1.6393625736236572
    3. 'import' → logprob: -2.0143625736236572
    4. ' from' → logprob: -2.5143625736236572
    5. ' compute' → logprob: -2.8893625736236572
    6. ' import' → logprob: -4.014362812042236
    7. ' get' → logprob: -4.514362812042236
    8. 'def' → logprob: -4.639362812042236
    9. 'find' → logprob: -4.764362812042236
    10. '   ' → logprob: -5.139362812042236

Token 210: ' common' (ID: 5355)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.22867566347122192
    2. ' from' → logprob: -1.7286756038665771
    3. 'def' → logprob: -3.853675603866577
    4. 'import' → logprob: -5.478675842285156
    5. ' def' → logprob: -6.728675842285156
    6. ' import' → logprob: -9.103675842285156
    7. ' l' → logprob: -9.853675842285156
    8. '#' → logprob: -10.478675842285156
    9. '```' → logprob: -10.478675842285156
    10. 'g' → logprob: -10.603675842285156

Token 211: ' time' (ID: 1058)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'den' → logprob: -1.0962011814117432
    2. '_den' → logprob: -1.0962011814117432
    3. 'from' → logprob: -1.9712011814117432
    4. 'def' → logprob: -1.9712011814117432
    5. ' denominator' → logprob: -3.721201181411743
    6. 'import' → logprob: -4.221200942993164
    7. 'div' → logprob: -5.346200942993164
    8. ' denomin' → logprob: -6.221200942993164
    9. ' from' → logprob: -6.221200942993164
    10. ' denom' → logprob: -6.471200942993164

Token 212: ' T' (ID: 353)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -1.6474491357803345
    2. ',' → logprob: -1.7724491357803345
    3. 'from' → logprob: -1.7724491357803345
    4. 'import' → logprob: -2.022449016571045
    5. ' from' → logprob: -2.522449016571045
    6. ' ' → logprob: -2.897449016571045
    7. '       ' → logprob: -3.272449016571045
    8. ' ,' → logprob: -3.397449016571045
    9. ' import' → logprob: -3.647449016571045
    10. 'def' → logprob: -4.022449016571045

Token 213: ' so' (ID: 813)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17884962260723114
    2. 'from' → logprob: -2.303849697113037
    3. '
' → logprob: -3.678849697113037
    4. '        
' → logprob: -4.178849697113037
    5. 'import' → logprob: -4.678849697113037
    6. ' from' → logprob: -5.178849697113037
    7. 'def' → logprob: -5.553849697113037
    8. ',' → logprob: -6.428849697113037
    9. '   ' → logprob: -7.303849697113037
    10. '        ' → logprob: -8.303849220275879

Token 214: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.7375803589820862
    2. 'that' → logprob: -1.6125802993774414
    3. '       ' → logprob: -1.7375802993774414
    4. '   ' → logprob: -2.6125802993774414
    5. 'def' → logprob: -3.6125802993774414
    6. '           ' → logprob: -4.112580299377441
    7. ':' → logprob: -4.862580299377441
    8. '=' → logprob: -5.237580299377441
    9. ' ' → logprob: -5.862580299377441
    10. 'm' → logprob: -5.987580299377441

Token 215: ' T' (ID: 353)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.6460919976234436
    2. 'for' → logprob: -2.146091938018799
    3. ' for' → logprob: -2.521091938018799
    4. 'all' → logprob: -2.521091938018799
    5. ' T' → logprob: -2.896091938018799
    6. 'T' → logprob: -3.021091938018799
    7. 't' → logprob: -3.646091938018799
    8. 'import' → logprob: -4.146091938018799
    9. ' t' → logprob: -4.271091938018799
    10. '
' → logprob: -4.771091938018799

Token 216: ' /' (ID: 820)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7637280225753784
    2. '=' → logprob: -0.8887280225753784
    3. 'den' → logprob: -3.763728141784668
    4. ' is' → logprob: -4.013728141784668
    5. '_den' → logprob: -4.013728141784668
    6. '_num' → logprob: -4.888728141784668
    7. 'is' → logprob: -5.013728141784668
    8. '_n' → logprob: -5.263728141784668
    9. '_times' → logprob: -5.263728141784668
    10. ' can' → logprob: -5.263728141784668

Token 217: ' times' (ID: 4238)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.17029230296611786
    2. '(V' → logprob: -3.170292377471924
    3. ' times' → logprob: -3.295292377471924
    4. '(' → logprob: -4.045292377471924
    5. '(L' → logprob: -4.295292377471924
    6. ' (' → logprob: -4.295292377471924
    7. '(times' → logprob: -4.420292377471924
    8. '1' → logprob: -5.170292377471924
    9. 'min' → logprob: -5.545292377471924
    10. 'V' → logprob: -5.795292377471924

Token 218: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002546641044318676
    2. '[j' → logprob: -9.00025463104248
    3. '[' → logprob: -9.37525463104248
    4. ' =' → logprob: -11.00025463104248
    5. '_i' → logprob: -12.12525463104248
    6. '=' → logprob: -12.37525463104248
    7. '[k' → logprob: -12.75025463104248
    8. 'i' → logprob: -13.00025463104248
    9. '   ' → logprob: -13.00025463104248
    10. '[idx' → logprob: -13.75025463104248

Token 219: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2997424006462097
    2. ']==' → logprob: -2.1747424602508545
    3. '].' → logprob: -2.4247424602508545
    4. '[i' → logprob: -3.9247424602508545
    5. ']).' → logprob: -4.299742221832275
    6. ']=' → logprob: -4.924742221832275
    7. '==' → logprob: -5.924742221832275
    8. ').' → logprob: -6.549742221832275
    9. 'is' → logprob: -6.549742221832275
    10. '])' → logprob: -6.799742221832275

Token 220: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8714393377304077
    2. ' is' → logprob: -1.2464393377304077
    3. ' =' → logprob: -1.3714393377304077
    4. ')' → logprob: -4.621439456939697
    5. ' ==' → logprob: -4.621439456939697
    6. 'is' → logprob: -4.746439456939697
    7. '==' → logprob: -5.496439456939697
    8. '.is' → logprob: -6.371439456939697
    9. ').' → logprob: -7.121439456939697
    10. ' ' → logprob: -7.246439456939697

Token 221: ' integer' (ID: 16336)
  Prédit: ' V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' V' → logprob: -0.9750218391418457
    2. 'V' → logprob: -1.6000218391418457
    3. 'int' → logprob: -1.9750218391418457
    4. ' (' → logprob: -2.2250218391418457
    5. ' an' → logprob: -3.3500218391418457
    6. ' int' → logprob: -3.6000218391418457
    7. 'integer' → logprob: -3.6000218391418457
    8. '(V' → logprob: -3.8500218391418457
    9. ' integer' → logprob: -4.350021839141846
    10. '(int' → logprob: -4.975021839141846

Token 222: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8346096277236938
    2. '       ' → logprob: -0.9596096277236938
    3. ',' → logprob: -2.9596095085144043
    4. 'import' → logprob: -2.9596095085144043
    5. ',
' → logprob: -4.084609508514404
    6. '        
' → logprob: -4.334609508514404
    7. 'def' → logprob: -4.584609508514404
    8. 'from' → logprob: -4.584609508514404
    9. '<|end|>' → logprob: -4.959609508514404
    10. '   ' → logprob: -5.709609508514404

Token 223: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016284210607409477
    2. '        
' → logprob: -5.516283988952637
    3. 'from' → logprob: -5.641283988952637
    4. 'import' → logprob: -5.891283988952637
    5. '
' → logprob: -6.391283988952637
    6. ',' → logprob: -6.891283988952637
    7. '<|end|>' → logprob: -7.141283988952637
    8. 'def' → logprob: -7.766283988952637
    9. ' from' → logprob: -8.016283988952637
    10. '   ' → logprob: -8.141283988952637

Token 224: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23638127744197845
    2. 'from' → logprob: -2.2363812923431396
    3. '
' → logprob: -3.2363812923431396
    4. '        
' → logprob: -3.7363812923431396
    5. 'def' → logprob: -4.1113810539245605
    6. ' from' → logprob: -4.6113810539245605
    7. 'import' → logprob: -4.6113810539245605
    8. '#' (adapté à ' #') → logprob: -6.3613810539245605
    9. ' 
' → logprob: -7.4863810539245605
    10. '  
' → logprob: -8.111381530761719

Token 225: ' =>' (ID: 871)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.49618473649024963
    2. '       ' → logprob: -1.3711847066879272
    3. 'def' → logprob: -2.996184825897217
    4. 'import' → logprob: -3.121184825897217
    5. ' from' → logprob: -4.121184825897217
    6. '
' → logprob: -4.496184825897217
    7. '#' → logprob: -4.621184825897217
    8. 'g' → logprob: -6.121184825897217
    9. 'den' → logprob: -6.996184825897217
    10. '   ' → logprob: -7.246184825897217

Token 226: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.3154284954071045
    2. 'for' → logprob: -2.4404284954071045
    3. ' T' → logprob: -2.5654284954071045
    4. 'from' → logprob: -3.5654284954071045
    5. '#' → logprob: -3.8154284954071045
    6. 'import' → logprob: -4.315428733825684
    7. 'For' → logprob: -4.565428733825684
    8. ' all' → logprob: -4.690428733825684
    9. ' for' → logprob: -4.940428733825684
    10. 'def' → logprob: -5.440428733825684

Token 227: ' /' (ID: 820)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8709862232208252
    2. ' =' → logprob: -0.8709862232208252
    3. '_times' → logprob: -2.745986223220825
    4. '*' → logprob: -3.745986223220825
    5. '_n' → logprob: -3.870986223220825
    6. ' *' → logprob: -4.245985984802246
    7. '%' → logprob: -4.870985984802246
    8. 'umerator' → logprob: -4.995985984802246
    9. '_num' → logprob: -5.245985984802246
    10. 'times' → logprob: -5.995985984802246

Token 228: ' (' (ID: 350)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.08824101835489273
    2. '(L' → logprob: -2.5882411003112793
    3. ' times' → logprob: -5.088241100311279
    4. ' (' → logprob: -6.338241100311279
    5. '(' → logprob: -7.088241100311279
    6. '(times' → logprob: -8.463240623474121
    7. 'time' → logprob: -9.588240623474121
    8. '(n' → logprob: -9.838240623474121
    9. '(B' → logprob: -10.213240623474121
    10. '(C' → logprob: -10.963240623474121

Token 229: 'Li' (ID: 36348)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.005502914544194937
    2. 'times' → logprob: -5.755502700805664
    3. 'Fraction' → logprob: -7.005502700805664
    4. ' (' → logprob: -7.880502700805664
    5. 'L' → logprob: -8.380502700805664
    6. 'fra' → logprob: -8.630502700805664
    7. '(' → logprob: -9.255502700805664
    8. ')' → logprob: -9.505502700805664
    9. ' fractions' → logprob: -9.505502700805664
    10. 'fraction' → logprob: -10.005502700805664

Token 230: '/' (ID: 14)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.12519285082817078
    2. ' *' → logprob: -3.000192880630493
    3. '*' → logprob: -3.500192880630493
    4. ')' → logprob: -4.000192642211914
    5. ' /' → logprob: -5.000192642211914
    6. '/V' → logprob: -5.125192642211914
    7. '/' → logprob: -6.000192642211914
    8. ')*' → logprob: -7.000192642211914
    9. 'cm' → logprob: -8.125192642211914
    10. '_i' → logprob: -8.250192642211914

Token 231: 'Vi' (ID: 22009)
  Prédit: 'Vi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vi' → logprob: -0.00021831797494087368
    2. 'V' → logprob: -8.625218391418457
    3. ' Vi' → logprob: -10.375218391418457
    4. 'vi' → logprob: -12.500218391418457
    5. '(' → logprob: -13.750218391418457
    6. ' ' → logprob: -14.750218391418457
    7. '1' → logprob: -14.875218391418457
    8. '   ' → logprob: -15.250218391418457
    9. 'VI' → logprob: -15.500218391418457
    10. '  ' → logprob: -15.500218391418457

Token 232: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002967007225379348
    2. ')=' → logprob: -5.87796688079834
    3. '=' → logprob: -9.37796688079834
    4. ' )' → logprob: -9.75296688079834
    5. ')==' → logprob: -11.37796688079834
    6. ' =' → logprob: -13.25296688079834
    7. '*' → logprob: -13.37796688079834
    8. '))' → logprob: -13.87796688079834
    9. ')*' → logprob: -14.62796688079834
    10. ')`' → logprob: -14.62796688079834

Token 233: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1403467357158661
    2. ' =' → logprob: -2.1403467655181885
    3. ')' → logprob: -4.390346527099609
    4. ' is' → logprob: -8.01534652709961
    5. ')=' → logprob: -8.01534652709961
    6. '==' → logprob: -10.14034652709961
    7. ' ==' → logprob: -10.51534652709961
    8. ' )' → logprob: -10.64034652709961
    9. ' must' → logprob: -10.64034652709961
    10. ').' → logprob: -10.64034652709961

Token 234: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.5591440796852112
    2. 'integer' → logprob: -1.1841440200805664
    3. '(T' → logprob: -3.4341440200805664
    4. 'k' → logprob: -3.4341440200805664
    5. '(V' → logprob: -4.434144020080566
    6. ' T' → logprob: -4.559144020080566
    7. ' integer' → logprob: -4.684144020080566
    8. 'an' → logprob: -4.934144020080566
    9. ' (' → logprob: -5.184144020080566
    10. '(integer' → logprob: -5.434144020080566

Token 235: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.16044457256793976
    2. '*' → logprob: -1.9104446172714233
    3. '*(' → logprob: -9.160444259643555
    4. ' /' → logprob: -9.910444259643555
    5. 'times' → logprob: -11.160444259643555
    6. '/' → logprob: -11.785444259643555
    7. ' ' → logprob: -12.035444259643555
    8. ' ' → logprob: -12.285444259643555
    9. '/V' → logprob: -12.285444259643555
    10. '*v' → logprob: -12.410444259643555

Token 236: ' Vi' (ID: 9981)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.4975244402885437
    2. '(V' → logprob: -0.9975244402885437
    3. 'Vi' → logprob: -4.747524261474609
    4. ' V' → logprob: -4.747524261474609
    5. ' (' → logprob: -5.622524261474609
    6. '(' → logprob: -6.247524261474609
    7. ' Vi' → logprob: -8.49752426147461
    8. ' ' → logprob: -10.99752426147461
    9. '```' → logprob: -11.74752426147461
    10. '   ' → logprob: -11.99752426147461

Token 237: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -1.5797141790390015
    2. '<|end|>' → logprob: -1.9547141790390015
    3. ')' → logprob: -2.079714298248291
    4. ' //' → logprob: -2.204714298248291
    5. '//' → logprob: -2.329714298248291
    6. ' %' → logprob: -2.579714298248291
    7. '[i' → logprob: -2.829714298248291
    8. '%' → logprob: -3.079714298248291
    9. '/' → logprob: -3.204714298248291
    10. ' ' → logprob: -3.954714298248291

Token 238: ' Li' (ID: 17850)
  Prédit: 'Li'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Li' → logprob: -0.05558560788631439
    2. 'L' → logprob: -2.9305856227874756
    3. ' Li' → logprob: -7.3055853843688965
    4. ' L' → logprob: -11.055585861206055
    5. 'Lj' → logprob: -11.930585861206055
    6. 'Ll' → logprob: -13.305585861206055
    7. '   ' → logprob: -13.930585861206055
    8. '1' → logprob: -14.055585861206055
    9. 'LI' → logprob: -14.180585861206055
    10. '```' → logprob: -14.180585861206055

Token 239: ' integer' (ID: 16336)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06820108741521835
    2. '
' → logprob: -3.4432010650634766
    3. '<|end|>' → logprob: -3.8182010650634766
    4. '<|end|>' → logprob: -5.943201065063477
    5. ')' → logprob: -6.068201065063477
    6. '        
' → logprob: -6.193201065063477
    7. ',' → logprob: -7.193201065063477
    8. ' =' → logprob: -7.318201065063477
    9. '=' → logprob: -7.318201065063477
    10. '           ' → logprob: -7.818201065063477

Token 240: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07062514871358871
    2. '
' → logprob: -2.820625066757202
    3. '        
' → logprob: -5.695625305175781
    4. '<|end|>' → logprob: -5.945625305175781
    5. '<|end|>' → logprob: -7.070625305175781
    6. ',' → logprob: -7.195625305175781
    7. 'import' → logprob: -7.445625305175781
    8. ')' → logprob: -9.820625305175781
    9. '
' → logprob: -10.070625305175781
    10. 'from' → logprob: -10.070625305175781

Token 241: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031216230243444443
    2. '<|end|>' → logprob: -4.156216144561768
    3. '
' → logprob: -5.531216144561768
    4. 'import' → logprob: -6.031216144561768
    5. '        
' → logprob: -6.156216144561768
    6. ')' → logprob: -6.281216144561768
    7. 'from' → logprob: -6.656216144561768
    8. ',' → logprob: -6.781216144561768
    9. '   ' → logprob: -7.656216144561768
    10. '<|end|>' → logprob: -7.656216144561768

Token 242: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011060434393584728
    2. '        
' → logprob: -5.7610602378845215
    3. '
' → logprob: -5.8860602378845215
    4. 'from' → logprob: -6.1360602378845215
    5. 'import' → logprob: -6.5110602378845215
    6. ',' → logprob: -8.13606071472168
    7. ' from' → logprob: -8.38606071472168
    8. '<|end|>' → logprob: -8.63606071472168
    9. 'def' → logprob: -9.13606071472168
    10. '  
' → logprob: -9.26106071472168

Token 243: ' So' (ID: 2632)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3505133390426636
    2. '       ' → logprob: -1.6005133390426636
    3. 'import' → logprob: -3.225513458251953
    4. 'def' → logprob: -3.850513458251953
    5. '#' → logprob: -4.225513458251953
    6. '
' → logprob: -4.350513458251953
    7. ' from' → logprob: -5.725513458251953
    8. 'g' → logprob: -7.225513458251953
    9. '   ' → logprob: -8.850513458251953
    10. ' import' → logprob: -8.975513458251953

Token 244: ' T' (ID: 353)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.9933297038078308
    2. 'import' → logprob: -1.6183297634124756
    3. ' from' → logprob: -1.7433297634124756
    4. 'def' → logprob: -2.4933297634124756
    5. ' T' → logprob: -3.2433297634124756
    6. '       ' → logprob: -3.4933297634124756
    7. ' import' → logprob: -3.8683297634124756
    8. '#' → logprob: -4.1183295249938965
    9. 'T' → logprob: -4.3683295249938965
    10. 'g' → logprob: -4.6183295249938965

Token 245: '*(' (ID: 14793)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5196905136108398
    2. '=' → logprob: -1.0196905136108398
    3. ' must' → logprob: -4.76969051361084
    4. ' is' → logprob: -5.14469051361084
    5. '_times' → logprob: -5.39469051361084
    6. 'must' → logprob: -5.39469051361084
    7. 'import' → logprob: -5.76969051361084
    8. ' needs' → logprob: -6.01969051361084
    9. ' can' → logprob: -6.26969051361084
    10. '_tokens' → logprob: -6.26969051361084

Token 246: 'Vi' (ID: 22009)
  Prédit: 'Vi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vi' → logprob: -0.12207967042922974
    2. ' Vi' → logprob: -2.622079610824585
    3. 'V' → logprob: -3.622079610824585
    4. ' V' → logprob: -4.372079849243164
    5. ')' → logprob: -7.247079849243164
    6. 'vi' → logprob: -7.372079849243164
    7. 'i' → logprob: -7.997079849243164
    8. ' ' → logprob: -8.247079849243164
    9. '
' → logprob: -9.122079849243164
    10. 'math' → logprob: -9.372079849243164

Token 247: ')/' (ID: 11876)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011641398072242737
    2. ' )' → logprob: -4.761641502380371
    3. '[i' → logprob: -6.511641502380371
    4. ')/' → logprob: -7.261641502380371
    5. ')%' → logprob: -7.886641502380371
    6. '<|end|>' → logprob: -9.261641502380371
    7. '[' → logprob: -9.636641502380371
    8. '/' → logprob: -9.886641502380371
    9. ' /' → logprob: -10.011641502380371
    10. '%' → logprob: -10.136641502380371

Token 248: 'Li' (ID: 36348)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.6561545133590698
    2. 'Li' → logprob: -0.7811545133590698
    3. ' Li' → logprob: -4.156154632568359
    4. ' L' → logprob: -4.906154632568359
    5. ' ' → logprob: -10.03115463256836
    6. 'math' → logprob: -10.40615463256836
    7. 'min' → logprob: -10.65615463256836
    8. '(L' → logprob: -10.78115463256836
    9. '1' → logprob: -10.90615463256836
    10. '	L' → logprob: -11.65615463256836

Token 249: ' integer' (ID: 16336)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.8301750421524048
    2. ')' → logprob: -1.5801750421524048
    3. '<|end|>' → logprob: -1.7051750421524048
    4. '<|end|>' → logprob: -2.8301749229431152
    5. '=' → logprob: -3.8301749229431152
    6. ',' → logprob: -4.205174922943115
    7. ' must' → logprob: -4.330174922943115
    8. ' =' → logprob: -4.455174922943115
    9. 'is' → logprob: -4.580174922943115
    10. ']' → logprob: -4.580174922943115

Token 250: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08874716609716415
    2. '
' → logprob: -2.713747262954712
    3. 'import' → logprob: -4.963747024536133
    4. '        
' → logprob: -5.088747024536133
    5. '<|end|>' → logprob: -6.588747024536133
    6. ',' → logprob: -6.838747024536133
    7. 'from' → logprob: -6.838747024536133
    8. '<|end|>' → logprob: -8.213747024536133
    9. '   ' → logprob: -8.463747024536133
    10. ')' → logprob: -8.588747024536133

Token 251: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.034328643232584
    2. 'all' → logprob: -3.4093286991119385
    3. ' i' → logprob: -8.03432846069336
    4. ' every' → logprob: -8.90932846069336
    5. ' each' → logprob: -9.28432846069336
    6. 'i' → logprob: -9.53432846069336
    7. 'each' → logprob: -10.53432846069336
    8. 'every' → logprob: -10.78432846069336
    9. ' ' → logprob: -11.90932846069336
    10. '	all' → logprob: -13.15932846069336

Token 252: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008804121986031532
    2. ' i' → logprob: -4.7588043212890625
    3. '_i' → logprob: -8.633804321289062
    4. '   ' → logprob: -12.758804321289062
    5. '```' → logprob: -12.883804321289062
    6. '`' → logprob: -13.633804321289062
    7. ' ' → logprob: -14.008804321289062
    8. '	i' → logprob: -14.508804321289062
    9. ' ' → logprob: -14.758804321289062
    10. '1' → logprob: -14.758804321289062

Token 253: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018741771578788757
    2. '
' → logprob: -4.643741607666016
    3. ',' → logprob: -6.143741607666016
    4. 'import' → logprob: -6.268741607666016
    5. '   ' → logprob: -7.018741607666016
    6. ')' → logprob: -7.018741607666016
    7. '<|end|>' → logprob: -7.143741607666016
    8. '        
' → logprob: -7.393741607666016
    9. '\n' → logprob: -8.768741607666016
    10. ':' → logprob: -8.768741607666016

Token 254: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005356956273317337
    2. '        
' → logprob: -6.380356788635254
    3. 'from' → logprob: -6.505356788635254
    4. 'import' → logprob: -7.380356788635254
    5. '<|end|>' → logprob: -8.005356788635254
    6. ',' → logprob: -8.255356788635254
    7. '   ' → logprob: -8.380356788635254
    8. ' from' → logprob: -9.005356788635254
    9. ' ' → logprob: -9.130356788635254
    10. ')' → logprob: -9.630356788635254

Token 255: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017725147306919098
    2. '        
' → logprob: -4.392724990844727
    3. '
' → logprob: -6.517724990844727
    4. 'from' → logprob: -7.142724990844727
    5. 'import' → logprob: -7.517724990844727
    6. ',' → logprob: -7.642724990844727
    7. '   ' → logprob: -7.892724990844727
    8. '    
' → logprob: -8.392724990844727
    9. '  
' → logprob: -8.642724990844727
    10. '<|end|>' → logprob: -8.767724990844727

Token 256: ' Let' (ID: 9024)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15405035018920898
    2. 'from' → logprob: -2.154050350189209
    3. '
' → logprob: -4.529050350189209
    4. 'import' → logprob: -5.029050350189209
    5. '        
' → logprob: -5.654050350189209
    6. 'def' → logprob: -6.029050350189209
    7. ' from' → logprob: -6.029050350189209
    8. '#' → logprob: -7.654050350189209
    9. ' import' → logprob: -9.404050827026367
    10. '   ' → logprob: -9.779050827026367

Token 257: ' T' (ID: 353)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6647330522537231
    2. ''s' → logprob: -1.4147330522537231
    3. 'def' → logprob: -2.7897329330444336
    4. 'T' → logprob: -2.9147329330444336
    5. 'den' → logprob: -3.7897329330444336
    6. 'l' → logprob: -4.414732933044434
    7. 'p' → logprob: -4.539732933044434
    8. 't' → logprob: -4.539732933044434
    9. 'import' → logprob: -4.539732933044434
    10. ' from' → logprob: -4.914732933044434

Token 258: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.182914137840271
    2. ' =' → logprob: -1.807914137840271
    3. '_tokens' → logprob: -6.1829142570495605
    4. '_num' → logprob: -8.182913780212402
    5. '_times' → logprob: -9.182913780212402
    6. ' be' → logprob: -9.557913780212402
    7. '_n' → logprob: -9.682913780212402
    8. 'tokens' → logprob: -9.807913780212402
    9. '<|end|>' → logprob: -9.807913780212402
    10. '=int' → logprob: -10.057913780212402

Token 259: ' X' (ID: 2127)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0703257322311401
    2. 'k' → logprob: -1.3203257322311401
    3. 'x' → logprob: -1.4453257322311401
    4. 't' → logprob: -2.1953258514404297
    5. 'X' → logprob: -4.44532585144043
    6. 'm' → logprob: -5.07032585144043
    7. 'LC' → logprob: -5.19532585144043
    8. 'K' → logprob: -5.32032585144043
    9. 'l' → logprob: -5.82032585144043
    10. 'M' → logprob: -5.82032585144043

Token 260: ' /' (ID: 820)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4190938472747803
    2. ' *' → logprob: -3.0440938472747803
    3. 'import' → logprob: -3.4190938472747803
    4. ' =' → logprob: -3.4190938472747803
    5. 'from' → logprob: -3.4190938472747803
    6. '*' → logprob: -3.6690938472747803
    7. '=' → logprob: -3.7940938472747803
    8. '   ' → logprob: -3.9190938472747803
    9. ',' → logprob: -4.044094085693359
    10. '<|end|>' → logprob: -4.169094085693359

Token 261: ' Y' (ID: 865)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7002598643302917
    2. 'Y' → logprob: -0.7002598643302917
    3. 'g' → logprob: -5.700259685516357
    4. 'D' → logprob: -6.200259685516357
    5. 'den' → logprob: -6.950259685516357
    6. 'M' → logprob: -8.325260162353516
    7. 'y' → logprob: -8.825260162353516
    8. 'd' → logprob: -8.950260162353516
    9. 'G' → logprob: -9.075260162353516
    10. 'l' → logprob: -10.825260162353516

Token 262: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0508326292037964
    2. '<|end|>' → logprob: -1.0508326292037964
    3. '
' → logprob: -1.4258326292037964
    4. '<|end|>' → logprob: -3.550832748413086
    5. 'import' → logprob: -5.175832748413086
    6. '   ' → logprob: -5.425832748413086
    7. ',' → logprob: -5.675832748413086
    8. '        
' → logprob: -5.925832748413086
    9. 'def' → logprob: -6.175832748413086
    10. ')' → logprob: -6.300832748413086

Token 263: ' reduced' (ID: 17255)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.17037534713745117
    2. 'lowest' → logprob: -2.420375347137451
    3. ' integers' → logprob: -3.920375347137451
    4. 'inte' → logprob: -4.420375347137451
    5. ' lowest' → logprob: -4.545375347137451
    6. ' ' → logprob: -5.170375347137451
    7. 're' → logprob: -5.920375347137451
    8. 'math' → logprob: -5.920375347137451
    9. 'integer' → logprob: -5.920375347137451
    10. 'te' → logprob: -6.545375347137451

Token 264: ' form' (ID: 1625)
  Prédit: 'form'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'form' → logprob: -0.7193886637687683
    2. ' form' → logprob: -0.7193886637687683
    3. '_form' → logprob: -3.719388723373413
    4. 'fraction' → logprob: -7.219388484954834
    5. '_fraction' → logprob: -7.844388484954834
    6. '1' → logprob: -8.219388961791992
    7. ' fractions' → logprob: -9.719388961791992
    8. 'forms' → logprob: -9.844388961791992
    9. ' fraction' → logprob: -10.469388961791992
    10. '_forms' → logprob: -10.594388961791992

Token 265: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3938664197921753
    2. '
' → logprob: -1.7688664197921753
    3. '<|end|>' → logprob: -2.018866539001465
    4. '        
' → logprob: -4.893866539001465
    5. ',' → logprob: -5.393866539001465
    6. '<|end|>' → logprob: -5.393866539001465
    7. 'from' → logprob: -6.643866539001465
    8. ' ' → logprob: -7.393866539001465
    9. 'import' → logprob: -7.643866539001465
    10. ',
' → logprob: -7.768866539001465

Token 266: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.36041441559791565
    2. '       ' → logprob: -1.4854143857955933
    3. ' 
' → logprob: -2.860414505004883
    4. '        
' → logprob: -5.735414505004883
    5. ' \' → logprob: -5.735414505004883
    6. '\' → logprob: -6.485414505004883
    7. '        ' → logprob: -6.610414505004883
    8. '   ' → logprob: -6.610414505004883
    9. '  
' → logprob: -6.735414505004883
    10. '\t' → logprob: -6.985414505004883

Token 267: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20141324400901794
    2. ' ' → logprob: -2.826413154602051
    3. '
' → logprob: -3.451413154602051
    4. 'from' → logprob: -3.576413154602051
    5. 'import' → logprob: -4.326413154602051
    6. ' 
' → logprob: -4.826413154602051
    7. '<|end|>' → logprob: -4.951413154602051
    8. '        
' → logprob: -5.076413154602051
    9. '        ' → logprob: -5.451413154602051
    10. '\' → logprob: -5.576413154602051

Token 268: ' Then' (ID: 7801)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21735629439353943
    2. 'from' → logprob: -1.9673563241958618
    3. 'import' → logprob: -3.9673562049865723
    4. ' from' → logprob: -4.342356204986572
    5. '#' → logprob: -4.842356204986572
    6. 'def' → logprob: -5.217356204986572
    7. '
' → logprob: -5.467356204986572
    8. '        
' → logprob: -6.467356204986572
    9. ' #' → logprob: -6.967356204986572
    10. ' import' → logprob: -7.092356204986572

Token 269: ' X' (ID: 2127)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6746628880500793
    2. ' for' → logprob: -0.7996628880500793
    3. 'from' → logprob: -4.549663066864014
    4. 'X' → logprob: -5.049663066864014
    5. '#' → logprob: -5.299663066864014
    6. 'import' → logprob: -5.549663066864014
    7. ' X' → logprob: -5.799663066864014
    8. ' all' → logprob: -5.924663066864014
    9. 'For' → logprob: -6.424663066864014
    10. 'T' → logprob: -6.549663066864014

Token 270: ' /' (ID: 820)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.012791565619409084
    2. '*' → logprob: -4.387791633605957
    3. ' must' → logprob: -9.262791633605957
    4. ' =' → logprob: -10.012791633605957
    5. ' ' → logprob: -10.512791633605957
    6. '*(' → logprob: -10.762791633605957
    7. '<|end|>' → logprob: -10.887791633605957
    8. ',' → logprob: -11.387791633605957
    9. 'must' → logprob: -11.387791633605957
    10. '=' → logprob: -11.512791633605957

Token 271: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.0013722646981477737
    2. '1' → logprob: -6.751372337341309
    3. ' Y' → logprob: -8.626372337341309
    4. 'L' → logprob: -12.001372337341309
    5. 'math' → logprob: -12.751372337341309
    6. 'V' → logprob: -12.876372337341309
    7. ' ' → logprob: -13.251372337341309
    8. 'Q' → logprob: -13.751372337341309
    9. '`' → logprob: -14.001372337341309
    10. '```' → logprob: -14.001372337341309

Token 272: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.08922047913074493
    2. '*' → logprob: -2.4642205238342285
    3. ' must' → logprob: -8.83922004699707
    4. ' ' → logprob: -10.71422004699707
    5. '<|end|>' → logprob: -10.96422004699707
    6. ')' → logprob: -11.08922004699707
    7. '*(' → logprob: -11.08922004699707
    8. 'must' → logprob: -11.21422004699707
    9. ' =' → logprob: -11.46422004699707
    10. '=' → logprob: -11.58922004699707

Token 273: ' Vi' (ID: 9981)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.1370597928762436
    2. 'Vi' → logprob: -2.1370596885681152
    3. ' V' → logprob: -4.762059688568115
    4. ' Vi' → logprob: -6.887059688568115
    5. '(V' → logprob: -8.262060165405273
    6. 'L' → logprob: -9.387060165405273
    7. ' ' → logprob: -10.262060165405273
    8. 'VI' → logprob: -10.387060165405273
    9. '(' → logprob: -11.012060165405273
    10. ' (' → logprob: -11.262060165405273

Token 274: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.1989850550889969
    2. '/' → logprob: -1.9489850997924805
    3. ' %' → logprob: -4.0739850997924805
    4. ' >=' → logprob: -4.9489850997924805
    5. '%' → logprob: -5.1989850997924805
    6. ' ' → logprob: -6.5739850997924805
    7. '<|end|>' → logprob: -6.5739850997924805
    8. '>=' → logprob: -6.6989850997924805
    9. '=' → logprob: -6.8239850997924805
    10. ' //' → logprob: -7.3239850997924805

Token 275: ' Li' (ID: 17850)
  Prédit: 'Li'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Li' → logprob: -0.01663329266011715
    2. ' Li' → logprob: -4.1416335105896
    3. 'L' → logprob: -7.5166335105896
    4. '1' → logprob: -10.891633033752441
    5. 'Lj' → logprob: -11.016633033752441
    6. ' L' → logprob: -12.141633033752441
    7. 'Ll' → logprob: -12.141633033752441
    8. ' ' → logprob: -12.266633033752441
    9. 'li' → logprob: -14.641633033752441
    10. 'LI' → logprob: -14.641633033752441

Token 276: ' integer' (ID: 16336)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6683456301689148
    2. ' must' → logprob: -1.4183456897735596
    3. ' ' → logprob: -1.7933456897735596
    4. ')' → logprob: -3.9183456897735596
    5. ' =' → logprob: -4.0433454513549805
    6. ' be' → logprob: -4.2933454513549805
    7. '<|end|>' → logprob: -4.5433454513549805
    8. ' are' → logprob: -5.7933454513549805
    9. '=' → logprob: -6.0433454513549805
    10. ' )' → logprob: -6.1683454513549805

Token 277: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4065152108669281
    2. '<|end|>' → logprob: -1.4065152406692505
    3. '\n' → logprob: -3.406515121459961
    4. ',' → logprob: -4.406515121459961
    5. '<|end|>' → logprob: -4.656515121459961
    6. ')' → logprob: -5.031515121459961
    7. '\' → logprob: -5.031515121459961
    8. '
' → logprob: -5.281515121459961
    9. ':' → logprob: -5.406515121459961
    10. '        
' → logprob: -6.406515121459961

Token 278: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031611885875463486
    2. '\' → logprob: -5.156611919403076
    3. '<|end|>' → logprob: -5.156611919403076
    4. '\n' → logprob: -5.531611919403076
    5. ',' → logprob: -5.531611919403076
    6. '=' → logprob: -6.656611919403076
    7. ')' → logprob: -6.656611919403076
    8. '        ' → logprob: -6.781611919403076
    9. ' \' → logprob: -6.906611919403076
    10. '           ' → logprob: -6.906611919403076

Token 279: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017570070922374725
    2. ' =' → logprob: -5.7675700187683105
    3. '\n' → logprob: -6.2675700187683105
    4. '=' → logprob: -6.3925700187683105
    5. '<|end|>' → logprob: -6.5175700187683105
    6. '        
' → logprob: -6.7675700187683105
    7. '        ' → logprob: -6.8925700187683105
    8. '   ' → logprob: -6.8925700187683105
    9. ' for' → logprob: -7.1425700187683105
    10. ' ' → logprob: -7.5175700187683105

Token 280: ' =>' (ID: 871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0073247747495770454
    2. '        
' → logprob: -6.757324695587158
    3. ' ' → logprob: -7.257324695587158
    4. '        ' → logprob: -7.507324695587158
    5. ' ' → logprob: -7.632324695587158
    6. ' X' → logprob: -7.757324695587158
    7. ' from' → logprob: -7.882324695587158
    8. '           ' → logprob: -8.007325172424316
    9. '<|end|>' → logprob: -8.007325172424316
    10. 'from' → logprob: -8.132325172424316

Token 281: ' (' (ID: 350)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.39906585216522217
    2. ' X' → logprob: -1.3990658521652222
    3. ' (' → logprob: -3.8990659713745117
    4. ' T' → logprob: -4.274065971374512
    5. 'T' → logprob: -4.399065971374512
    6. 'For' → logprob: -4.524065971374512
    7. ' for' → logprob: -5.274065971374512
    8. '(X' → logprob: -5.274065971374512
    9. 'for' → logprob: -5.399065971374512
    10. ' ' → logprob: -5.649065971374512

Token 282: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0010982997482642531
    2. ' X' → logprob: -6.876098155975342
    3. ')' → logprob: -10.1260986328125
    4. '(X' → logprob: -11.8760986328125
    5. 'Y' → logprob: -12.3760986328125
    6. ' ' → logprob: -12.7510986328125
    7. ' ' → logprob: -12.8760986328125
    8. 'T' → logprob: -13.1260986328125
    9. '(' → logprob: -13.6260986328125
    10. '   ' → logprob: -13.7510986328125

Token 283: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.07909192144870758
    2. '*' → logprob: -2.579092025756836
    3. ')' → logprob: -8.829092025756836
    4. ' ' → logprob: -10.704092025756836
    5. ' ' → logprob: -11.704092025756836
    6. ')*' → logprob: -11.704092025756836
    7. ',' → logprob: -12.954092025756836
    8. '*)' → logprob: -13.329092025756836
    9. ' /' → logprob: -13.454092025756836
    10. '**' → logprob: -13.454092025756836

Token 284: ' Vi' (ID: 9981)
  Prédit: 'Vi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vi' → logprob: -0.0033244609367102385
    2. ' Vi' → logprob: -5.753324508666992
    3. 'V' → logprob: -8.878324508666992
    4. ' V' → logprob: -12.378324508666992
    5. ' ' → logprob: -13.503324508666992
    6. '   ' → logprob: -13.878324508666992
    7. '	V' → logprob: -15.628324508666992
    8. '  ' → logprob: -15.753324508666992
    9. 'vi' → logprob: -16.253324508666992
    10. 'VI' → logprob: -16.503324508666992

Token 285: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002482553943991661
    2. ' )' → logprob: -6.5024824142456055
    3. ' *' → logprob: -8.127482414245605
    4. ')%' → logprob: -8.252482414245605
    5. '*' → logprob: -8.502482414245605
    6. ')/' → logprob: -8.752482414245605
    7. ')//' → logprob: -10.377482414245605
    8. ')*' → logprob: -12.002482414245605
    9. '*)' → logprob: -12.877482414245605
    10. ' ' → logprob: -12.877482414245605

Token 286: ' /' (ID: 820)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.04161595180630684
    2. '%' → logprob: -3.2916159629821777
    3. ')' → logprob: -6.166615962982178
    4. ' ' → logprob: -7.041615962982178
    5. ' /' → logprob: -7.916615962982178
    6. ')%' → logprob: -9.54161548614502
    7. ' )' → logprob: -9.66661548614502
    8. ' *' → logprob: -9.91661548614502
    9. ' divisible' → logprob: -11.04161548614502
    10. ' ' → logprob: -12.04161548614502

Token 287: ' (' (ID: 350)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.07497347891330719
    2. '(' → logprob: -3.6999735832214355
    3. 'Li' → logprob: -4.0749735832214355
    4. ' Y' → logprob: -4.5749735832214355
    5. '(Y' → logprob: -4.9499735832214355
    6. ' (' → logprob: -4.9499735832214355
    7. '(L' → logprob: -5.6999735832214355
    8. 'Yi' → logprob: -6.1999735832214355
    9. ' Li' → logprob: -7.6999735832214355
    10. '(li' → logprob: -9.074973106384277

Token 288: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.03899206221103668
    2. '(Y' → logprob: -3.413992166519165
    3. '(L' → logprob: -6.038991928100586
    4. '(' → logprob: -6.538991928100586
    5. ' (' → logprob: -7.288991928100586
    6. ' Y' → logprob: -7.788991928100586
    7. 'L' → logprob: -8.538991928100586
    8. 'Li' → logprob: -8.788991928100586
    9. 'Yi' → logprob: -10.538991928100586
    10. 'YL' → logprob: -12.163991928100586

Token 289: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.2462623119354248
    2. ' Li' → logprob: -1.2462623119354248
    3. 'Li' → logprob: -1.2462623119354248
    4. ' *' → logprob: -1.9962623119354248
    5. ' ' → logprob: -7.246262550354004
    6. ' ' → logprob: -8.996262550354004
    7. 'Lj' → logprob: -8.996262550354004
    8. 'L' → logprob: -9.121262550354004
    9. '   ' → logprob: -9.246262550354004
    10. ')' → logprob: -10.371262550354004

Token 290: ' Li' (ID: 17850)
  Prédit: 'Li'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Li' → logprob: -0.0028713271021842957
    2. ' Li' → logprob: -5.877871513366699
    3. 'L' → logprob: -9.6278715133667
    4. 'LI' → logprob: -15.7528715133667
    5. 'Lj' → logprob: -16.002870559692383
    6. 'Ll' → logprob: -16.002870559692383
    7. ' L' → logprob: -16.252870559692383
    8. 'li' → logprob: -16.627870559692383
    9. ' ' → logprob: -16.752870559692383
    10. '   ' → logprob: -17.502870559692383

Token 291: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00030686063109897077
    2. ' )' → logprob: -8.125307083129883
    3. ')is' → logprob: -12.125307083129883
    4. ')=' → logprob: -13.500307083129883
    5. ' is' → logprob: -14.000307083129883
    6. ')

' → logprob: -14.125307083129883
    7. ')
' → logprob: -14.250307083129883
    8. ' ' → logprob: -14.375307083129883
    9. 'is' → logprob: -15.375307083129883
    10. ')**' → logprob: -16.000307083129883

Token 292: ' integer' (ID: 16336)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 293: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01873498037457466
    2. '<|end|>' → logprob: -4.643734931945801
    3. '<|end|>' → logprob: -6.018734931945801
    4. ',' → logprob: -6.393734931945801
    5. '        
' → logprob: -6.518734931945801
    6. '\n' → logprob: -6.768734931945801
    7. '
' → logprob: -7.143734931945801
    8. '\' → logprob: -8.3937349319458
    9. ' =' → logprob: -9.0187349319458
    10. '  
' → logprob: -9.0187349319458

Token 294: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019119352102279663
    2. '\n' → logprob: -4.6441192626953125
    3. '\' → logprob: -6.0191192626953125
    4. '<|end|>' → logprob: -6.2691192626953125
    5. ' \' → logprob: -6.6441192626953125
    6. '        
' → logprob: -6.7691192626953125
    7. ',' → logprob: -8.144119262695312
    8. '\t' → logprob: -8.519119262695312
    9. '<|end|>' → logprob: -8.519119262695312
    10. ' ' → logprob: -8.519119262695312

Token 295: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017747515812516212
    2. '<|end|>' → logprob: -4.142747402191162
    3. '<|end|>' → logprob: -7.517747402191162
    4. ',' → logprob: -7.892747402191162
    5. '        ' → logprob: -8.89274787902832
    6. ' ' → logprob: -9.14274787902832
    7. '        
' → logprob: -9.51774787902832
    8. '=' → logprob: -10.26774787902832
    9. ' ' → logprob: -10.26774787902832
    10. 'import' → logprob: -10.39274787902832

Token 296: ' Set' (ID: 3957)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025122879073023796
    2. 'from' → logprob: -4.65012264251709
    3. ' from' → logprob: -5.15012264251709
    4. 'import' → logprob: -5.65012264251709
    5. ' for' → logprob: -7.02512264251709
    6. ' ' → logprob: -7.02512264251709
    7. '   ' → logprob: -7.02512264251709
    8. ' continue' → logprob: -7.77512264251709
    9. 'Let's' → logprob: -8.15012264251709
    10. '           ' → logprob: -8.15012264251709

Token 297: ' Y' (ID: 865)
  Prédit: ' Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Y' → logprob: -0.4027506411075592
    2. ' X' → logprob: -1.2777506113052368
    3. 'Y' → logprob: -3.5277507305145264
    4. 'X' → logprob: -4.402750492095947
    5. 'import' → logprob: -5.152750492095947
    6. 'from' → logprob: -5.777750492095947
    7. '   ' → logprob: -7.152750492095947
    8. ' from' → logprob: -7.277750492095947
    9. ' import' → logprob: -7.777750492095947
    10. ' =' → logprob: -9.402750968933105

Token 298: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741039574146271
    2. '=' → logprob: -0.9741039276123047
    3. ' ' → logprob: -12.099103927612305
    4. ' equal' → logprob: -12.349103927612305
    5. ' to' → logprob: -12.849103927612305
    6. 'equal' → logprob: -12.974103927612305
    7. ',' → logprob: -13.224103927612305
    8. '=None' → logprob: -13.599103927612305
    9. 'to' → logprob: -13.724103927612305
    10. '=int' → logprob: -13.849103927612305

Token 299: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009991460479795933
    2. 'math' → logprob: -4.634991645812988
    3. ' ' → logprob: -9.009991645812988
    4. ' math' → logprob: -9.259991645812988
    5. 'l' → logprob: -12.009991645812988
    6. '   ' → logprob: -12.509991645812988
    7. 'Math' → logprob: -13.634991645812988
    8. '  ' → logprob: -14.009991645812988
    9. '(' → logprob: -14.259991645812988
    10. '```' → logprob: -14.259991645812988

Token 300: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0068355449475348
    2. 'math' → logprob: -5.006835460662842
    3. ' ' → logprob: -9.6318359375
    4. ' math' → logprob: -10.7568359375
    5. 'l' → logprob: -11.0068359375
    6. '   ' → logprob: -12.7568359375
    7. '(' → logprob: -13.2568359375
    8. '
' → logprob: -13.7568359375
    9. '  ' → logprob: -13.7568359375
    10. 'L' → logprob: -13.7568359375

Token 301: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6562855839729309
    2. '
' → logprob: -0.7812855839729309
    3. ',' → logprob: -4.656285762786865
    4. ',
' → logprob: -5.906285762786865
    5. 'import' → logprob: -5.906285762786865
    6. '        
' → logprob: -6.281285762786865
    7. ' 
' → logprob: -6.531285762786865
    8. '   ' → logprob: -7.281285762786865
    9. '\n' → logprob: -7.281285762786865
    10. 'from' → logprob: -7.531285762786865

Token 302: ' any' (ID: 1062)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12109425663948059
    2. ' ' → logprob: -2.246094226837158
    3. 'X' → logprob: -5.621094226837158
    4. ' X' → logprob: -5.746094226837158
    5. ' math' → logprob: -7.246094226837158
    6. ' Y' → logprob: -8.996094703674316
    7. ' L' → logprob: -9.621094703674316
    8. 'Y' → logprob: -9.621094703674316
    9. 'math' → logprob: -9.996094703674316
    10. 'L' → logprob: -10.371094703674316

Token 303: ' scaling' (ID: 55881)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7395798563957214
    2. ' X' → logprob: -1.1145799160003662
    3. ' ' → logprob: -2.489579916000366
    4. 'X' → logprob: -3.239579916000366
    5. ',' → logprob: -3.989579916000366
    6. 'import' → logprob: -4.739579677581787
    7. '   ' → logprob: -4.989579677581787
    8. '<|end|>' → logprob: -5.239579677581787
    9. ')' → logprob: -5.614579677581787
    10. ' x' → logprob: -5.989579677581787

Token 304: ' factor' (ID: 12332)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.052372973412275314
    2. '
' → logprob: -3.677372932434082
    3. ',' → logprob: -4.552372932434082
    4. '   ' → logprob: -5.927372932434082
    5. ',
' → logprob: -6.427372932434082
    6. '        
' → logprob: -6.427372932434082
    7. '\n' → logprob: -6.552372932434082
    8. '\' → logprob: -6.802372932434082
    9. ')' → logprob: -7.052372932434082
    10. 'import' → logprob: -7.177372932434082

Token 305: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16623054444789886
    2. '
' → logprob: -2.0412304401397705
    3. 'import' → logprob: -5.16623067855835
    4. ',' → logprob: -5.29123067855835
    5. '        
' → logprob: -6.29123067855835
    6. 'from' → logprob: -6.41623067855835
    7. 'def' → logprob: -6.54123067855835
    8. '   ' → logprob: -7.16623067855835
    9. ')' → logprob: -7.16623067855835
    10. '<|end|>' → logprob: -7.29123067855835

Token 306: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013762291520833969
    2. '<|end|>' → logprob: -5.388762474060059
    3. ',' → logprob: -5.513762474060059
    4. 'from' → logprob: -6.388762474060059
    5. 'import' → logprob: -6.638762474060059
    6. '        
' → logprob: -7.763762474060059
    7. '
' → logprob: -7.888762474060059
    8. ')' → logprob: -8.138762474060059
    9. ' from' → logprob: -8.638762474060059
    10. '   ' → logprob: -8.763762474060059

Token 307: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025950618088245392
    2. 'from' → logprob: -4.4009504318237305
    3. 'import' → logprob: -5.2759504318237305
    4. '<|end|>' → logprob: -5.6509504318237305
    5. ',' → logprob: -6.4009504318237305
    6. ' from' → logprob: -6.5259504318237305
    7. '        
' → logprob: -7.9009504318237305
    8. '
' → logprob: -8.02595043182373
    9. '<|end|>' → logprob: -8.27595043182373
    10. 'def' → logprob: -8.27595043182373

Token 308: ' find' (ID: 1646)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23116964101791382
    2. 'from' → logprob: -1.7311697006225586
    3. 'import' → logprob: -3.9811697006225586
    4. ' from' → logprob: -4.981169700622559
    5. '
' → logprob: -6.856169700622559
    6. 'def' → logprob: -6.856169700622559
    7. '        
' → logprob: -6.981169700622559
    8. ' import' → logprob: -8.106169700622559
    9. '   ' → logprob: -8.856169700622559
    10. '#' → logprob: -9.356169700622559

Token 309: ' T' (ID: 353)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.8352387547492981
    2. ' X' → logprob: -1.8352386951446533
    3. 'l' → logprob: -2.4602386951446533
    4. 'X' → logprob: -2.9602386951446533
    5. 'import' → logprob: -3.2102386951446533
    6. 'def' → logprob: -3.3352386951446533
    7. ' the' → logprob: -3.3352386951446533
    8. ' from' → logprob: -3.4602386951446533
    9. 'from' → logprob: -3.4602386951446533
    10. ' x' → logprob: -3.8352386951446533

Token 310: ' such' (ID: 2238)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6715995669364929
    2. '=' → logprob: -2.1715996265411377
    3. ' ' → logprob: -2.4215996265411377
    4. 'import' → logprob: -2.5465996265411377
    5. 'from' → logprob: -2.5465996265411377
    6. 'X' → logprob: -3.4215996265411377
    7. ' X' → logprob: -3.7965996265411377
    8. 'def' → logprob: -4.171599388122559
    9. ' from' → logprob: -4.921599388122559
    10. '   ' → logprob: -4.921599388122559

Token 311: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.007271640934050083
    2. ' that' → logprob: -5.632271766662598
    3. 'at' → logprob: -5.882271766662598
    4. '=' → logprob: -7.507271766662598
    5. '_that' → logprob: -9.007271766662598
    6. 't' → logprob: -9.757271766662598
    7. 'That' → logprob: -10.382271766662598
    8. '       ' → logprob: -10.632271766662598
    9. 'T' → logprob: -11.507271766662598
    10. 'hat' → logprob: -11.632271766662598

Token 312: ' T' (ID: 353)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.5309257507324219
    2. 'for' → logprob: -1.6559257507324219
    3. 'all' → logprob: -1.7809257507324219
    4. ' for' → logprob: -3.655925750732422
    5. 'T' → logprob: -4.155925750732422
    6. ' T' → logprob: -5.905925750732422
    7. ' (' → logprob: -6.405925750732422
    8. '(T' → logprob: -6.655925750732422
    9. '(' → logprob: -6.905925750732422
    10. 'import' → logprob: -7.280925750732422

Token 313: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.760665237903595
    2. ' =' → logprob: -1.6356651782989502
    3. '*' → logprob: -1.7606651782989502
    4. '=' → logprob: -1.8856651782989502
    5. '*(' → logprob: -5.635665416717529
    6. '_times' → logprob: -6.010665416717529
    7. ' ' → logprob: -6.385665416717529
    8. '%' → logprob: -7.135665416717529
    9. '<|end|>' → logprob: -7.135665416717529
    10. '*=' → logprob: -7.510665416717529

Token 314: ' Vi' (ID: 9981)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.09941285103559494
    2. 'Vi' → logprob: -2.5994129180908203
    3. ' V' → logprob: -4.47441291809082
    4. 'math' → logprob: -5.22441291809082
    5. 'L' → logprob: -6.84941291809082
    6. '(V' → logprob: -7.59941291809082
    7. ' Vi' → logprob: -7.72441291809082
    8. ' math' → logprob: -8.09941291809082
    9. 'vi' → logprob: -8.22441291809082
    10. 'v' → logprob: -8.34941291809082

Token 315: ' /' (ID: 820)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.025484830141067505
    2. '%' → logprob: -3.775484800338745
    3. ' ' → logprob: -6.775485038757324
    4. ' /' → logprob: -7.400485038757324
    5. '%i' → logprob: -8.275485038757324
    6. ' //' → logprob: -9.525485038757324
    7. '<|end|>' → logprob: -10.400485038757324
    8. '/' → logprob: -11.025485038757324
    9. ' divisible' → logprob: -11.025485038757324
    10. ')' → logprob: -11.150485038757324

Token 316: ' Li' (ID: 17850)
  Prédit: 'Li'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Li' → logprob: -0.29223164916038513
    2. ' Li' → logprob: -1.4172316789627075
    3. 'L' → logprob: -4.792231559753418
    4. ' L' → logprob: -5.917231559753418
    5. ' ' → logprob: -11.167231559753418
    6. 'Lj' → logprob: -12.167231559753418
    7. 'li' → logprob: -12.667231559753418
    8. ' li' → logprob: -13.292231559753418
    9. 'LI' → logprob: -13.667231559753418
    10. '	L' → logprob: -14.042231559753418

Token 317: ' integer' (ID: 16336)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.3659263849258423
    2. ')' → logprob: -2.1159262657165527
    3. ' ' → logprob: -2.7409262657165527
    4. '<|end|>' → logprob: -2.8659262657165527
    5. ' )' → logprob: -3.7409262657165527
    6. '<|end|>' → logprob: -4.490926265716553
    7. ' for' → logprob: -5.115926265716553
    8. ' integer' → logprob: -5.115926265716553
    9. ' integers' → logprob: -5.990926265716553
    10. '  ' → logprob: -6.615926265716553

Token 318: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07491619139909744
    2. '
' → logprob: -3.949916124343872
    3. ',' → logprob: -4.449916362762451
    4. 'import' → logprob: -4.699916362762451
    5. '        
' → logprob: -4.699916362762451
    6. '   ' → logprob: -4.949916362762451
    7. '<|end|>' → logprob: -5.699916362762451
    8. '\n' → logprob: -6.449916362762451
    9. ')' → logprob: -6.449916362762451
    10. '    
' → logprob: -6.449916362762451

Token 319: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012888534925878048
    2. '   ' → logprob: -5.387888431549072
    3. ',' → logprob: -5.762888431549072
    4. '\' → logprob: -6.887888431549072
    5. '\n' → logprob: -7.137888431549072
    6. '        
' → logprob: -7.137888431549072
    7. '
' → logprob: -7.762888431549072
    8. '    
' → logprob: -7.762888431549072
    9. ')' → logprob: -8.38788890838623
    10. 'import' → logprob: -8.63788890838623

Token 320: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010850081220269203
    2. 'import' → logprob: -5.760849952697754
    3. '        
' → logprob: -5.760849952697754
    4. '
' → logprob: -7.010849952697754
    5. 'from' → logprob: -7.385849952697754
    6. ',' → logprob: -7.510849952697754
    7. '   ' → logprob: -7.635849952697754
    8. '  
' → logprob: -8.260849952697754
    9. '\' → logprob: -8.385849952697754
    10. '    
' → logprob: -8.635849952697754

Token 321: ' Minimal' (ID: 99472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6904295682907104
    2. 'from' → logprob: -0.8154295682907104
    3. 'import' → logprob: -3.6904296875
    4. ' from' → logprob: -3.9404296875
    5. 'def' → logprob: -5.3154296875
    6. '
' → logprob: -6.1904296875
    7. '   ' → logprob: -6.3154296875
    8. '#' → logprob: -7.3154296875
    9. '        
' → logprob: -7.6904296875
    10. '\' → logprob: -8.3154296875

Token 322: ' T' (ID: 353)
  Prédit: ' T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' T' → logprob: -0.6280055046081543
    2. ' ' → logprob: -1.6280055046081543
    3. ' _' → logprob: -2.0030055046081543
    4. 'T' → logprob: -3.5030055046081543
    5. ' def' → logprob: -3.8780055046081543
    6. 'def' → logprob: -4.003005504608154
    7. ' =' → logprob: -4.003005504608154
    8. 'import' → logprob: -4.128005504608154
    9. ' t' → logprob: -5.128005504608154
    10. '_' → logprob: -5.503005504608154

Token 323: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3524149954319
    2. 'import' → logprob: -2.602415084838867
    3. '=' → logprob: -2.852415084838867
    4. 'from' → logprob: -3.227415084838867
    5. 'def' → logprob: -3.227415084838867
    6. ' from' → logprob: -3.977415084838867
    7. '   ' → logprob: -4.477415084838867
    8. ' ' → logprob: -4.477415084838867
    9. '
' → logprob: -4.977415084838867
    10. ' def' → logprob: -5.102415084838867

Token 324: ' l' (ID: 305)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011392745189368725
    2. 'max' → logprob: -5.261392593383789
    3. ' ' → logprob: -5.636392593383789
    4. 'math' → logprob: -6.511392593383789
    5. '0' → logprob: -7.511392593383789
    6. ' max' → logprob: -8.011392593383789
    7. '   ' → logprob: -9.886392593383789
    8. 'l' → logprob: -10.136392593383789
    9. ' math' → logprob: -10.136392593383789
    10. '(' → logprob: -11.261392593383789

Token 325: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.06276042014360428
    2. '1' → logprob: -2.812760353088379
    3. 'math' → logprob: -8.312760353088379
    4. ' math' → logprob: -9.062760353088379
    5. ' ' → logprob: -9.187760353088379
    6. 'c' → logprob: -9.562760353088379
    7. 'cmath' → logprob: -9.562760353088379
    8. 'cms' → logprob: -9.562760353088379
    9. '   ' → logprob: -10.687760353088379
    10. ' cm' → logprob: -10.937760353088379

Token 326: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8271926641464233
    2. '_' → logprob: -1.5771926641464233
    3. '(' → logprob: -2.077192783355713
    4. '=' → logprob: -2.952192783355713
    5. '   ' → logprob: -3.077192783355713
    6. ' (' → logprob: -3.452192783355713
    7. '(L' → logprob: -4.077192783355713
    8. ' _' → logprob: -4.577192783355713
    9. ' ' → logprob: -4.577192783355713
    10. '  ' → logprob: -4.952192783355713

Token 327: ' fractions' (ID: 110523)
  Prédit: 'Li'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Li' → logprob: -0.774325430393219
    2. '[L' → logprob: -1.3993253707885742
    3. 'L' → logprob: -1.5243253707885742
    4. ' Li' → logprob: -3.649325370788574
    5. '[' → logprob: -4.149325370788574
    6. '(L' → logprob: -4.524325370788574
    7. '[i' → logprob: -4.649325370788574
    8. ' L' → logprob: -4.774325370788574
    9. ' [' → logprob: -5.774325370788574
    10. '   ' → logprob: -8.649325370788574

Token 328: ' Li' (ID: 17850)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9077896475791931
    2. '   ' → logprob: -1.407789707183838
    3. 'from' → logprob: -2.157789707183838
    4. 'import' → logprob: -2.532789707183838
    5. ' =' → logprob: -3.407789707183838
    6. 'def' → logprob: -3.407789707183838
    7. '
' → logprob: -3.532789707183838
    8. '=' → logprob: -4.407789707183838
    9. ' from' → logprob: -4.782789707183838
    10. '    
' → logprob: -5.282789707183838

Token 329: ' /' (ID: 820)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 330: ' Vi' (ID: 9981)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.024499567225575447
    2. 'g' → logprob: -4.274499416351318
    3. 'math' → logprob: -4.774499416351318
    4. 'Vi' → logprob: -6.524499416351318
    5. '1' → logprob: -8.524499893188477
    6. '[' → logprob: -10.024499893188477
    7. ' V' → logprob: -10.899499893188477
    8. ' math' → logprob: -10.899499893188477
    9. '{' → logprob: -11.149499893188477
    10. 'G' → logprob: -11.274499893188477

Token 331: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2738947868347168
    2. '   ' → logprob: -2.148894786834717
    3. '
' → logprob: -2.773894786834717
    4. 'import' → logprob: -3.773894786834717
    5. 'from' → logprob: -4.648894786834717
    6. 'def' → logprob: -5.148894786834717
    7. '        
' → logprob: -5.273894786834717
    8. ' =' → logprob: -5.773894786834717
    9. '    
' → logprob: -5.898894786834717
    10. ')' → logprob: -6.148894786834717

Token 332: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2825140357017517
    2. '
' → logprob: -1.5325140953063965
    3. '   ' → logprob: -4.4075140953063965
    4. 'import' → logprob: -5.2825140953063965
    5. 'def' → logprob: -5.7825140953063965
    6. 'from' → logprob: -5.7825140953063965
    7. '        
' → logprob: -6.6575140953063965
    8. ')
' → logprob: -7.2825140953063965
    9. ' =' → logprob: -7.2825140953063965
    10. ',' → logprob: -7.5325140953063965

Token 333: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6115865111351013
    2. '   ' → logprob: -1.736586570739746
    3. '
' → logprob: -1.861586570739746
    4. 'from' → logprob: -2.611586570739746
    5. 'def' → logprob: -4.111586570739746
    6. 'import' → logprob: -4.111586570739746
    7. '    
' → logprob: -5.486586570739746
    8. '        
' → logprob: -5.611586570739746
    9. ' from' → logprob: -5.986586570739746
    10. ' 
' → logprob: -6.236586570739746

Token 334: ' Another' (ID: 20064)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3234577775001526
    2. 'def' → logprob: -2.448457717895508
    3. '       ' → logprob: -2.823457717895508
    4. 'import' → logprob: -2.948457717895508
    5. '   ' → logprob: -3.198457717895508
    6. ' from' → logprob: -4.448457717895508
    7. '
' → logprob: -4.698457717895508
    8. 'l' → logprob: -4.698457717895508
    9. '#' → logprob: -6.198457717895508
    10. 'g' → logprob: -7.198457717895508

Token 335: ' method' (ID: 2595)
  Prédit: ' approach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' approach' → logprob: -0.8097624182701111
    2. 'appro' → logprob: -0.8097624182701111
    3. 'import' → logprob: -2.559762477874756
    4. 'def' → logprob: -4.309762477874756
    5. ':' → logprob: -5.684762477874756
    6. 'way' → logprob: -5.809762477874756
    7. ' way' → logprob: -6.059762477874756
    8. '   ' → logprob: -6.559762477874756
    9. 'option' → logprob: -6.809762477874756
    10. '#' → logprob: -6.934762477874756

Token 336: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.538882851600647
    2. 'import' → logprob: -1.288882851600647
    3. ':' → logprob: -2.7888827323913574
    4. 'from' → logprob: -3.1638827323913574
    5. '   ' → logprob: -4.663882732391357
    6. 'def' → logprob: -4.788882732391357
    7. ':
' → logprob: -5.663882732391357
    8. '<|end|>' → logprob: -5.788882732391357
    9. ' from' → logprob: -6.038882732391357
    10. ',' → logprob: -6.163882732391357

Token 337: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04624530300498009
    2. 'from' → logprob: -3.4212453365325928
    3. 'import' → logprob: -4.796245098114014
    4. '        
' → logprob: -6.046245098114014
    5. 'def' → logprob: -7.171245098114014
    6. ' from' → logprob: -7.421245098114014
    7. '
' → logprob: -8.171245574951172
    8. '```' → logprob: -9.171245574951172
    9. '   ' → logprob: -10.421245574951172
    10. '#' → logprob: -10.421245574951172

Token 338: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4127381443977356
    2. 'from' → logprob: -1.7877380847930908
    3. ' from' → logprob: -2.287738084793091
    4. 'import' → logprob: -3.537738084793091
    5. ' import' → logprob: -4.16273832321167
    6. 'def' → logprob: -4.41273832321167
    7. '#' (adapté à ' #') → logprob: -5.78773832321167
    8. ' l' → logprob: -6.16273832321167
    9. 'g' → logprob: -6.28773832321167
    10. '
' → logprob: -7.16273832321167

Token 339: ' Let' (ID: 9024)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.12068618834018707
    2. ' from' → logprob: -3.1206862926483154
    3. 'import' → logprob: -3.2456862926483154
    4. 'def' → logprob: -4.495686054229736
    5. 'den' → logprob: -5.245686054229736
    6. ' import' → logprob: -5.495686054229736
    7. '#' → logprob: -5.995686054229736
    8. '       ' → logprob: -6.120686054229736
    9. 'num' → logprob: -6.995686054229736
    10. ' denomin' → logprob: -7.120686054229736

Token 340: '’s' (ID: 802)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.07248155772686005
    2. ' from' → logprob: -3.572481632232666
    3. 'import' → logprob: -3.822481632232666
    4. 'def' → logprob: -4.822481632232666
    5. 'den' → logprob: -5.447481632232666
    6. 'l' → logprob: -5.572481632232666
    7. ' l' → logprob: -6.447481632232666
    8. 'g' → logprob: -7.322481632232666
    9. ' import' → logprob: -7.572481632232666
    10. ' denomin' → logprob: -8.322481155395508

Token 341: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.9160900712013245
    2. 'import' → logprob: -1.5410900115966797
    3. 'from' → logprob: -1.5410900115966797
    4. ' find' → logprob: -3.2910900115966797
    5. 'continue' → logprob: -3.4160900115966797
    6. 'def' → logprob: -3.5410900115966797
    7. 'define' → logprob: -3.9160900115966797
    8. '   ' → logprob: -4.04109001159668
    9. 'compute' → logprob: -4.29109001159668
    10. 'calculate' → logprob: -5.04109001159668

Token 342: ' L' (ID: 451)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.32286781072616577
    2. ' from' → logprob: -2.3228678703308105
    3. 'l' → logprob: -2.8228678703308105
    4. 'def' → logprob: -2.8228678703308105
    5. ' l' → logprob: -3.4478678703308105
    6. 'import' → logprob: -4.1978678703308105
    7. 'g' → logprob: -5.5728678703308105
    8. 'den' → logprob: -6.0728678703308105
    9. ' the' → logprob: -6.5728678703308105
    10. 'the' → logprob: -6.8228678703308105

Token 343: 'CM' (ID: 14170)
  Prédit: 'cm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.7504430413246155
    2. ' =' → logprob: -1.8754429817199707
    3. 'CM' → logprob: -1.8754429817199707
    4. 'from' → logprob: -2.0004429817199707
    5. '=' → logprob: -3.2504429817199707
    6. 'def' → logprob: -3.6254429817199707
    7. 'import' → logprob: -4.750442981719971
    8. 'l' → logprob: -5.500442981719971
    9. 'C' → logprob: -6.375442981719971
    10. ' from' → logprob: -6.750442981719971

Token 344: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9154595136642456
    2. '<|end|>' → logprob: -1.0404595136642456
    3. '(L' → logprob: -2.290459632873535
    4. '_' → logprob: -3.165459632873535
    5. ' of' → logprob: -3.290459632873535
    6. 'of' → logprob: -4.040459632873535
    7. '<|end|>' → logprob: -4.415459632873535
    8. ' (' → logprob: -5.290459632873535
    9. '_of' → logprob: -5.415459632873535
    10. ',' → logprob: -5.790459632873535

Token 345: ' all' (ID: 722)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.02566215582191944
    2. 'V' → logprob: -5.025661945343018
    3. ' L' → logprob: -5.275661945343018
    4. 'Li' → logprob: -5.275661945343018
    5. '[L' → logprob: -5.400661945343018
    6. '[i' → logprob: -6.150661945343018
    7. '[' → logprob: -7.400661945343018
    8. '[V' → logprob: -7.525661945343018
    9. '1' → logprob: -8.650662422180176
    10. 'times' → logprob: -9.025662422180176

Token 346: ' times' (ID: 4238)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.14291490614414215
    2. ' L' → logprob: -2.7679150104522705
    3. 'Li' → logprob: -2.8929150104522705
    4. '(L' → logprob: -5.267914772033691
    5. 'V' → logprob: -5.767914772033691
    6. ' Li' → logprob: -6.142914772033691
    7. '[L' → logprob: -6.267914772033691
    8. '[' → logprob: -7.517914772033691
    9. '   ' → logprob: -7.642914772033691
    10. ' V' → logprob: -8.142914772033691

Token 347: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3311014771461487
    2. '   ' → logprob: -2.581101417541504
    3. '       ' → logprob: -2.831101417541504
    4. '=' → logprob: -3.831101417541504
    5. ' numerator' → logprob: -4.206101417541504
    6. ',' → logprob: -4.331101417541504
    7. '.' → logprob: -4.706101417541504
    8. ':' → logprob: -4.706101417541504
    9. 'def' → logprob: -4.956101417541504
    10. 'import' → logprob: -5.081101417541504

Token 348: ' L' (ID: 451)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8206260204315186
    2. '       ' → logprob: -2.1956260204315186
    3. 'import' → logprob: -2.1956260204315186
    4. ' from' → logprob: -2.3206260204315186
    5. '   ' → logprob: -2.9456260204315186
    6. 'def' → logprob: -3.6956260204315186
    7. ' math' → logprob: -3.8206260204315186
    8. ' import' → logprob: -3.9456260204315186
    9. ' 
' → logprob: -4.195626258850098
    10. ' fractions' → logprob: -4.320626258850098

Token 349: 'CM' (ID: 14170)
  Prédit: 'CM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CM' → logprob: -0.6442890763282776
    2. 'cm' → logprob: -1.3942890167236328
    3. ' =' → logprob: -1.7692890167236328
    4. '       ' → logprob: -4.644289016723633
    5. '=[]' → logprob: -4.644289016723633
    6. '   ' → logprob: -4.894289016723633
    7. '[i' → logprob: -5.144289016723633
    8. 'C' → logprob: -5.519289016723633
    9. ')' → logprob: -5.769289016723633
    10. '=' → logprob: -6.144289016723633

Token 350: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7024130821228027
    2. '_num' → logprob: -1.9524130821228027
    3. '_n' → logprob: -2.4524130821228027
    4. '=' → logprob: -2.5774130821228027
    5. 'def' → logprob: -2.9524130821228027
    6. '_times' → logprob: -3.7024130821228027
    7. '   ' → logprob: -4.077413082122803
    8. 'den' → logprob: -4.452413082122803
    9. 'numer' → logprob: -4.452413082122803
    10. '_den' → logprob: -4.577413082122803

Token 351: ' fractions' (ID: 110523)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.08572744578123093
    2. '[i' → logprob: -3.3357274532318115
    3. '[L' → logprob: -3.5857274532318115
    4. 'times' → logprob: -5.085727214813232
    5. ' L' → logprob: -5.585727214813232
    6. 'fra' → logprob: -5.835727214813232
    7. '[' → logprob: -6.210727214813232
    8. '1' → logprob: -6.460727214813232
    9. ' times' → logprob: -8.46072769165039
    10. 'math' → logprob: -8.46072769165039

Token 352: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0510057210922241
    2. '   ' → logprob: -1.6760057210922241
    3. '<|end|>' → logprob: -2.4260058403015137
    4. ',' → logprob: -2.5510058403015137
    5. 'def' → logprob: -2.6760058403015137
    6. '=' → logprob: -2.6760058403015137
    7. 'import' → logprob: -3.1760058403015137
    8. ':' → logprob: -3.9260058403015137
    9. '       ' → logprob: -4.426005840301514
    10. ')' → logprob: -4.426005840301514

Token 353: ' l' (ID: 305)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.45091697573661804
    2. '1' → logprob: -1.5759170055389404
    3. 'max' → logprob: -1.9509170055389404
    4. 'fra' → logprob: -5.075916767120361
    5. ' math' → logprob: -5.950916767120361
    6. '(' → logprob: -7.075916767120361
    7. ' ' → logprob: -7.325916767120361
    8. 'Fraction' → logprob: -7.325916767120361
    9. '(math' → logprob: -7.450916767120361
    10. 'frac' → logprob: -7.450916767120361

Token 354: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.05825791135430336
    2. 'L' → logprob: -4.308258056640625
    3. 'CM' → logprob: -4.308258056640625
    4. 'C' → logprob: -4.808258056640625
    5. 'math' → logprob: -5.058258056640625
    6. 'def' → logprob: -5.683258056640625
    7. 'times' → logprob: -6.433258056640625
    8. 'from' → logprob: -6.558258056640625
    9. '(L' → logprob: -6.808258056640625
    10. 'int' → logprob: -7.058258056640625

Token 355: ' of' (ID: 328)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([' → logprob: -0.6117266416549683
    2. '(' → logprob: -0.8617266416549683
    3. '(L' → logprob: -4.486726760864258
    4. '(
' → logprob: -4.486726760864258
    5. '[' → logprob: -5.736726760864258
    6. 'numer' → logprob: -6.111726760864258
    7. '_times' → logprob: -6.861726760864258
    8. 'of' → logprob: -6.986726760864258
    9. '_num' → logprob: -7.486726760864258
    10. '_p' → logprob: -7.611726760864258

Token 356: ' numer' (ID: 9076)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.07341288030147552
    2. '[L' → logprob: -3.1984128952026367
    3. 'Li' → logprob: -4.448412895202637
    4. '(L' → logprob: -4.573412895202637
    5. 'numer' → logprob: -5.823412895202637
    6. '[' → logprob: -6.323412895202637
    7. '[i' → logprob: -6.573412895202637
    8. '[n' → logprob: -6.823412895202637
    9. ' L' → logprob: -8.573412895202637
    10. 'the' → logprob: -9.323412895202637

Token 357: 'ators' (ID: 4840)
  Prédit: 'ators'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ators' → logprob: -4.7159857786027715e-05
    2. '[' → logprob: -10.500046730041504
    3. 'ator' → logprob: -11.250046730041504
    4. '   ' → logprob: -13.625046730041504
    5. 'ATORS' → logprob: -13.625046730041504
    6. '{' → logprob: -14.375046730041504
    7. 's' → logprob: -14.500046730041504
    8. 'tors' → logprob: -15.125046730041504
    9. '[L' → logprob: -15.125046730041504
    10. '```' → logprob: -15.500046730041504

Token 358: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -1.345534086227417
    2. ',' → logprob: -2.095534086227417
    3. ')' → logprob: -2.345534086227417
    4. '[' → logprob: -2.720534086227417
    5. ' /' → logprob: -2.720534086227417
    6. '<|end|>' → logprob: -2.845534086227417
    7. 'import' → logprob: -3.220534086227417
    8. '       ' → logprob: -3.220534086227417
    9. '//' → logprob: -3.220534086227417
    10. '=' → logprob: -3.595534086227417

Token 359: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.10038027912378311
    2. 'math' → logprob: -2.3503801822662354
    3. ' gcd' → logprob: -8.850379943847656
    4. ' math' → logprob: -10.725379943847656
    5. '(math' → logprob: -13.100379943847656
    6. '```' → logprob: -13.600379943847656
    7. 'den' → logprob: -13.725379943847656
    8. 'def' → logprob: -13.850379943847656
    9. '1' → logprob: -14.100379943847656
    10. ''g' → logprob: -14.725379943847656

Token 360: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09264008700847626
    2. 'of' → logprob: -3.0926401615142822
    3. 'den' → logprob: -3.3426401615142822
    4. 'def' → logprob: -6.217639923095703
    5. '([' → logprob: -6.592639923095703
    6. '(
' → logprob: -7.092639923095703
    7. '_den' → logprob: -7.217639923095703
    8. ' of' → logprob: -7.342639923095703
    9. '_of' → logprob: -7.717639923095703
    10. ')' → logprob: -8.342639923095703

Token 361: ' denomin' (ID: 39104)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.0009117019944824278
    2. ' denomin' → logprob: -7.000911712646484
    3. '_den' → logprob: -16.125911712646484
    4. ' den' → logprob: -16.375911712646484
    5. ' denominator' → logprob: -17.750911712646484
    6. '.den' → logprob: -18.375911712646484
    7. 'import' → logprob: -18.750911712646484
    8. 'Den' → logprob: -18.875911712646484
    9. 'def' → logprob: -19.625911712646484
    10. 'V' → logprob: -19.750911712646484

Token 362: 'ators' (ID: 4840)
  Prédit: 'ators'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ators' → logprob: -2.47495681833243e-05
    2. 'min' → logprob: -11.625024795532227
    3. 'ATORS' → logprob: -12.000024795532227
    4. 's' → logprob: -12.625024795532227
    5. 'ator' → logprob: -12.875024795532227
    6. 'in' → logprob: -13.500024795532227
    7. 'tors' → logprob: -14.250024795532227
    8. '   ' → logprob: -15.375024795532227
    9. 'n' → logprob: -15.500024795532227
    10. '{' → logprob: -15.500024795532227

Token 363: '
' (ID: 198)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3433205187320709
    2. 'import' → logprob: -2.343320608139038
    3. '       ' → logprob: -2.718320608139038
    4. '   ' → logprob: -3.093320608139038
    5. '
' → logprob: -3.343320608139038
    6. 'def' → logprob: -3.593320608139038
    7. ' from' → logprob: -4.343320369720459
    8. '    
' → logprob: -6.218320369720459
    9. '        
' → logprob: -6.343320369720459
    10. ' 
' → logprob: -7.468320369720459

Token 364: '       ' (ID: 309)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5779406428337097
    2. '       ' → logprob: -1.0779407024383545
    3. 'import' → logprob: -2.7029407024383545
    4. '1' → logprob: -4.577940464019775
    5. 'def' → logprob: -4.827940464019775
    6. ' from' → logprob: -6.077940464019775
    7. '
' → logprob: -6.202940464019775
    8. '   ' → logprob: -6.452940464019775
    9. ',' → logprob: -7.077940464019775
    10. '        
' → logprob: -7.077940464019775

Token 365: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.28076574206352234
    2. '       ' → logprob: -2.0307657718658447
    3. 'import' → logprob: -3.0307657718658447
    4. '1' → logprob: -3.7807657718658447
    5. '   ' → logprob: -3.9057657718658447
    6. 'def' → logprob: -4.655765533447266
    7. ' from' → logprob: -5.280765533447266
    8. ')' → logprob: -6.655765533447266
    9. ',' → logprob: -7.280765533447266
    10. '
' → logprob: -7.280765533447266

Token 366: ' numer' (ID: 9076)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.24213428795337677
    2. '       ' → logprob: -1.6171343326568604
    3. 'import' → logprob: -4.867134094238281
    4. 'def' → logprob: -5.492134094238281
    5. ' from' → logprob: -6.492134094238281
    6. 'num' → logprob: -6.617134094238281
    7. '   ' → logprob: -7.867134094238281
    8. '        
' → logprob: -8.117134094238281
    9. 'numer' → logprob: -8.117134094238281
    10. '```' → logprob: -8.367134094238281

Token 367: 'ators' (ID: 4840)
  Prédit: 'ators'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ators' → logprob: -0.0001222508290084079
    2. '   ' → logprob: -9.7501220703125
    3. '=' → logprob: -10.6251220703125
    4. ' =' → logprob: -10.7501220703125
    5. 'ator' → logprob: -12.1251220703125
    6. 'ATORS' → logprob: -12.2501220703125
    7. 's' → logprob: -12.6251220703125
    8. '       ' → logprob: -13.0001220703125
    9. '=[' → logprob: -14.2501220703125
    10. 'from' → logprob: -14.8751220703125

Token 368: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.019157132133841515
    2. '=' → logprob: -4.0191569328308105
    3. '=[' → logprob: -8.144157409667969
    4. ',' → logprob: -8.394157409667969
    5. '=[]' → logprob: -8.644157409667969
    6. 's' → logprob: -9.019157409667969
    7. ' =[' → logprob: -9.394157409667969
    8. '=L' → logprob: -10.769157409667969
    9. '   ' → logprob: -11.019157409667969
    10. ' ' → logprob: -11.894157409667969

Token 369: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.00020008347928524017
    2. '[L' → logprob: -8.625200271606445
    3. ' L' → logprob: -11.625200271606445
    4. '[' → logprob: -11.625200271606445
    5. '[i' → logprob: -13.750200271606445
    6. '[n' → logprob: -14.875200271606445
    7. '   ' → logprob: -14.875200271606445
    8. 'list' → logprob: -15.250200271606445
    9. ' [' → logprob: -15.625200271606445
    10. 'V' → logprob: -16.000200271606445

Token 370: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5073366165161133
    2. ',' → logprob: -1.8823366165161133
    3. '       ' → logprob: -2.8823366165161133
    4. '<|end|>' → logprob: -3.2573366165161133
    5. ')' → logprob: -3.5073366165161133
    6. '
' → logprob: -3.7573366165161133
    7. '.append' → logprob: -4.507336616516113
    8. 's' → logprob: -4.632336616516113
    9. '=[]
' → logprob: -5.007336616516113
    10. '=[]' → logprob: -5.132336616516113

Token 371: '],' (ID: 2155)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0393521785736084
    2. ')
' → logprob: -1.1643521785736084
    3. ']' → logprob: -1.7893521785736084
    4. ']
' → logprob: -3.2893521785736084
    5. '),' → logprob: -3.5393521785736084
    6. ',' → logprob: -3.6643521785736084
    7. '],' → logprob: -4.0393524169921875
    8. '
' → logprob: -4.1643524169921875
    9. '       ' → logprob: -4.6643524169921875
    10. ' =' → logprob: -5.0393524169921875

Token 372: ' denomin' (ID: 39104)
  Prédit: 'den'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'den' → logprob: -0.03391365706920624
    2. 'from' → logprob: -3.5339136123657227
    3. 'import' → logprob: -6.158913612365723
    4. 'def' → logprob: -6.908913612365723
    5. ' denomin' → logprob: -7.033913612365723
    6. 'v' → logprob: -9.783913612365723
    7. ' from' → logprob: -11.033913612365723
    8. '#' → logprob: -11.158913612365723
    9. 'vi' → logprob: -11.283913612365723
    10. 'V' → logprob: -11.283913612365723

Token 373: 'ators' (ID: 4840)
  Prédit: 'ators'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ators' → logprob: -0.0034975579474121332
    2. 's' → logprob: -6.37849760055542
    3. 'in' → logprob: -7.12849760055542
    4. 'omin' → logprob: -7.50349760055542
    5. '=' → logprob: -8.503497123718262
    6. '[' → logprob: -10.003497123718262
    7. 'on' → logprob: -10.503497123718262
    8. 'min' → logprob: -10.503497123718262
    9. 'ator' → logprob: -10.503497123718262
    10. '   ' → logprob: -11.253497123718262

Token 374: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009813345968723297
    2. ' =' → logprob: -4.63481330871582
    3. '=[' → logprob: -9.88481330871582
    4. 'V' → logprob: -13.00981330871582
    5. '[V' → logprob: -13.13481330871582
    6. '=[]' → logprob: -14.50981330871582
    7. '[' → logprob: -14.63481330871582
    8. ' =[' → logprob: -15.00981330871582
    9. '   ' → logprob: -15.63481330871582
    10. '＝' → logprob: -16.13481330871582

Token 375: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -8.232493564719334e-05
    2. ' V' → logprob: -10.125082015991211
    3. '[V' → logprob: -10.375082015991211
    4. '[' → logprob: -12.000082015991211
    5. '   ' → logprob: -13.000082015991211
    6. '[i' → logprob: -13.750082015991211
    7. '       ' → logprob: -15.125082015991211
    8. 'v' → logprob: -15.375082015991211
    9. ' [' → logprob: -15.625082015991211
    10. '           ' → logprob: -15.750082015991211

Token 376: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0035361594054847956
    2. 'from' → logprob: -6.628536224365234
    3. 'import' → logprob: -6.628536224365234
    4. 'i' → logprob: -8.003536224365234
    5. 'def' → logprob: -8.378536224365234
    6. '   ' → logprob: -9.253536224365234
    7. ')' → logprob: -10.003536224365234
    8. '[' → logprob: -10.003536224365234
    9. ']' → logprob: -10.503536224365234
    10. '_i' → logprob: -10.753536224365234

Token 377: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.21033143997192383
    2. ']
' → logprob: -1.7103314399719238
    3. ')' → logprob: -5.710331439971924
    4. ']

' → logprob: -6.085331439971924
    5. 'import' → logprob: -6.960331439971924
    6. 'from' → logprob: -7.460331439971924
    7. '       ' → logprob: -7.460331439971924
    8. ')
' → logprob: -7.835331439971924
    9. '])' → logprob: -8.460330963134766
    10. ']
' → logprob: -8.460330963134766

Token 378: '       ' (ID: 309)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.25575241446495056
    2. '       ' → logprob: -1.630752444267273
    3. 'import' → logprob: -3.8807523250579834
    4. 'def' → logprob: -5.3807525634765625
    5. ' from' → logprob: -5.6307525634765625
    6. 'num' → logprob: -7.8807525634765625
    7. 'numer' → logprob: -8.755752563476562
    8. '        
' → logprob: -8.880752563476562
    9. '   ' → logprob: -9.005752563476562
    10. '
' → logprob: -9.505752563476562

Token 379: ' def' (ID: 1056)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.09272538125514984
    2. 'import' → logprob: -2.7177252769470215
    3. ' from' → logprob: -4.3427252769470215
    4. 'def' (adapté à ' def') → logprob: -4.9677252769470215
    5. '       ' → logprob: -7.0927252769470215
    6. 'num' → logprob: -7.2177252769470215
    7. 'numer' → logprob: -7.9677252769470215
    8. '   ' → logprob: -8.46772575378418
    9. 'g' → logprob: -8.96772575378418
    10. 'l' → logprob: -9.09272575378418

Token 380: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0173388309776783
    2. ' gcd' → logprob: -4.267338752746582
    3. 'l' → logprob: -5.767338752746582
    4. 'math' → logprob: -10.642338752746582
    5. 'eg' → logprob: -11.517338752746582
    6. ' l' → logprob: -12.517338752746582
    7. '_g' → logprob: -13.267338752746582
    8. 'lc' → logprob: -14.142338752746582
    9. '__' → logprob: -14.517338752746582
    10. 'gc' → logprob: -15.142338752746582

Token 381: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0004659425176214427
    2. '(x' → logprob: -8.125466346740723
    3. 'def' → logprob: -9.000466346740723
    4. '(' → logprob: -10.250466346740723
    5. ' (' → logprob: -12.875466346740723
    6. '(def' → logprob: -13.125466346740723
    7. '(g' → logprob: -13.375466346740723
    8. '(A' → logprob: -13.750466346740723
    9. '(n' → logprob: -13.875466346740723
    10. 'a' → logprob: -14.000466346740723

Token 382: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0029484592378139496
    2. ',a' → logprob: -6.00294828414917
    3. ',b' → logprob: -8.252948760986328
    4. ' ,' → logprob: -8.627948760986328
    5. 'a' → logprob: -11.252948760986328
    6. ',int' → logprob: -11.377948760986328
    7. ',n' → logprob: -12.877948760986328
    8. '<|end|>' → logprob: -13.627948760986328
    9. ',x' → logprob: -13.877948760986328
    10. 'b' → logprob: -14.752948760986328

Token 383: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16554845869541168
    2. '):' → logprob: -2.16554856300354
    3. '):
' → logprob: -3.41554856300354
    4. ',a' → logprob: -5.665548324584961
    5. '   ' → logprob: -7.415548324584961
    6. ':' → logprob: -8.040548324584961
    7. ' ,' → logprob: -8.165548324584961
    8. ',b' → logprob: -8.540548324584961
    9. '       ' → logprob: -10.040548324584961
    10. '):
' → logprob: -10.415548324584961

Token 384: '           ' (ID: 352)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.05644586309790611
    2. ' b' → logprob: -3.556445837020874
    3. '       ' → logprob: -4.681446075439453
    4. '           ' → logprob: -5.181446075439453
    5. ' if' → logprob: -5.556446075439453
    6. 'a' → logprob: -6.181446075439453
    7. ' return' → logprob: -6.181446075439453
    8. ' a' → logprob: -6.556446075439453
    9. 'if' → logprob: -7.306446075439453
    10. 'return' → logprob: -7.806446075439453

Token 385: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -1.003719687461853
    2. 'a' → logprob: -1.878719687461853
    3. 'while' (adapté à ' while') → logprob: -1.878719687461853
    4. 'if' → logprob: -2.0037198066711426
    5. ' if' → logprob: -2.2537198066711426
    6. ' a' → logprob: -3.0037198066711426
    7. ' return' → logprob: -4.003719806671143
    8. 'return' → logprob: -4.753719806671143
    9. '           ' → logprob: -5.503719806671143
    10. 'b' → logprob: -5.753719806671143

Token 386: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00020354038861114532
    2. ' b' → logprob: -8.500203132629395
    3. '	b' → logprob: -17.00020408630371
    4. '   ' → logprob: -19.12520408630371
    5. '_b' → logprob: -20.00020408630371
    6. 'a' → logprob: -21.12520408630371
    7. '(b' → logprob: -21.25020408630371
    8. ' ' → logprob: -22.00020408630371
    9. '>b' → logprob: -22.62520408630371
    10. '[b' → logprob: -23.25020408630371

Token 387: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2974998950958252
    2. '!=' → logprob: -1.7974998950958252
    3. ':' → logprob: -2.422499895095825
    4. ' !=' → logprob: -6.422499656677246
    5. '           ' → logprob: -7.172499656677246
    6. '=' → logprob: -8.672499656677246
    7. ':=' → logprob: -9.172499656677246
    8. 'a' → logprob: -9.672499656677246
    9. '```' → logprob: -11.172499656677246
    10. '               ' → logprob: -11.297499656677246

Token 388: '               ' (ID: 506)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3255961835384369
    2. ' a' → logprob: -1.3255962133407593
    3. '               ' → logprob: -4.450596332550049
    4. ',a' → logprob: -7.950596332550049
    5. ',' → logprob: -9.20059585571289
    6. '           ' → logprob: -9.45059585571289
    7. '>a' → logprob: -11.07559585571289
    8. '	a' → logprob: -11.20059585571289
    9. '   ' → logprob: -12.20059585571289
    10. '	           ' → logprob: -12.82559585571289

Token 389: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -2.176947600673884e-05
    2. ' a' → logprob: -10.750021934509277
    3. '	a' → logprob: -15.125021934509277
    4. '           ' → logprob: -18.62502098083496
    5. '   ' → logprob: -19.50002098083496
    6. ',a' → logprob: -20.12502098083496
    7. '>a' → logprob: -20.75002098083496
    8. '               ' → logprob: -22.12502098083496
    9. '=a' → logprob: -22.12502098083496
    10. '       ' → logprob: -22.37502098083496

Token 390: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003136366605758667
    2. ',b' → logprob: -5.878136157989502
    3. '%=' → logprob: -8.25313663482666
    4. ' ,' → logprob: -10.25313663482666
    5. '=' → logprob: -11.00313663482666
    6. ',a' → logprob: -11.25313663482666
    7. '%b' → logprob: -13.12813663482666
    8. ' %=' → logprob: -13.62813663482666
    9. '%' → logprob: -13.87813663482666
    10. '%,' → logprob: -14.50313663482666

Token 391: '=b' (ID: 49769)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008698835968971252
    2. ' =' → logprob: -4.7586989402771
    3. '=b' → logprob: -9.508698463439941
    4. '=a' → logprob: -11.508698463439941
    5. '%=' → logprob: -17.508699417114258
    6. '=g' → logprob: -18.883699417114258
    7. 'a' → logprob: -20.008699417114258
    8. 'b' → logprob: -20.258699417114258
    9. '=s' → logprob: -20.383699417114258
    10. '=c' → logprob: -20.633699417114258

Token 392: ',a' (ID: 26776)
  Prédit: ',b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.16379894316196442
    2. ' b' → logprob: -2.6637990474700928
    3. 'b' → logprob: -3.0387990474700928
    4. '%b' → logprob: -3.6637990474700928
    5. ',' → logprob: -5.038798809051514
    6. '%' → logprob: -7.163798809051514
    7. ',a' → logprob: -8.413799285888672
    8. ' ,' → logprob: -8.788799285888672
    9. ' ' → logprob: -8.913799285888672
    10. ' %' → logprob: -10.163799285888672

Token 393: '%b' (ID: 148937)
  Prédit: '%b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%b' → logprob: -0.015281528234481812
    2. ' %' → logprob: -4.765281677246094
    3. '%' → logprob: -5.015281677246094
    4. '%B' → logprob: -11.890281677246094
    5. '%d' → logprob: -13.890281677246094
    6. 'b' → logprob: -14.640281677246094
    7. '%e' → logprob: -15.265281677246094
    8. '%s' → logprob: -15.265281677246094
    9. '%x' → logprob: -15.640281677246094
    10. '%i' → logprob: -16.515281677246094

Token 394: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005594660760834813
    2. '       ' → logprob: -8.25055980682373
    3. 'return' → logprob: -8.37555980682373
    4. ' return' → logprob: -9.87555980682373
    5. ',' → logprob: -12.37555980682373
    6. '<|end|>' → logprob: -12.50055980682373
    7. '   ' → logprob: -12.87555980682373
    8. '
' → logprob: -13.62555980682373
    9. '          ' → logprob: -14.00055980682373
    10. 'a' → logprob: -14.00055980682373

Token 395: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00015109812375158072
    2. 'return' → logprob: -9.125150680541992
    3. '       ' → logprob: -10.250150680541992
    4. ' return' → logprob: -12.250150680541992
    5. ',' → logprob: -14.500150680541992
    6. '0' → logprob: -15.000150680541992
    7. '          ' → logprob: -15.250150680541992
    8. '               ' → logprob: -15.750150680541992
    9. 'def' → logprob: -15.875150680541992
    10. '   ' → logprob: -16.000150680541992

Token 396: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.05271275341510773
    2. 'a' → logprob: -3.5527126789093018
    3. '       ' → logprob: -4.302712917327881
    4. ' return' → logprob: -4.927712917327881
    5. '           ' → logprob: -6.427712917327881
    6. '   ' → logprob: -8.927712440490723
    7. '	return' → logprob: -9.802712440490723
    8. '{return' → logprob: -10.552712440490723
    9. ':return' → logprob: -10.552712440490723
    10. ' a' → logprob: -10.927712440490723

Token 397: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.173704271830502e-06
    2. ' a' → logprob: -13.12500286102295
    3. 'b' → logprob: -13.75000286102295
    4. 'abs' → logprob: -17.875003814697266
    5. '	a' → logprob: -19.250003814697266
    6. '```' → logprob: -21.125003814697266
    7. 'а' → logprob: -21.625003814697266
    8. '   ' → logprob: -22.000003814697266
    9. 'int' → logprob: -22.250003814697266
    10. ' ' → logprob: -22.750003814697266

Token 398: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23900431394577026
    2. 'def' → logprob: -1.739004373550415
    3. '        
' → logprob: -3.864004373550415
    4. '
' → logprob: -4.864004135131836
    5. '<|end|>' → logprob: -5.114004135131836
    6. ',' → logprob: -7.614004135131836
    7. '    
' → logprob: -7.989004135131836
    8. '   ' → logprob: -8.114004135131836
    9. ' def' → logprob: -8.364004135131836
    10. '<|end|>' → logprob: -8.864004135131836

Token 399: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6979125738143921
    2. 'def' → logprob: -0.6979125738143921
    3. '        
' → logprob: -5.822912693023682
    4. 'from' → logprob: -6.572912693023682
    5. '   ' → logprob: -8.572912216186523
    6. ' def' → logprob: -9.822912216186523
    7. '    
' → logprob: -10.197912216186523
    8. '```' → logprob: -10.447912216186523
    9. '<|end|>' → logprob: -10.572912216186523
    10. '           ' → logprob: -10.947912216186523

Token 400: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.034616101533174515
    2. '       ' → logprob: -3.909615993499756
    3. 'from' → logprob: -4.284615993499756
    4. '        
' → logprob: -9.159616470336914
    5. '
' → logprob: -9.659616470336914
    6. '   ' → logprob: -11.784616470336914
    7. '    
' → logprob: -12.409616470336914
    8. '           ' → logprob: -12.534616470336914
    9. ' def' → logprob: -12.534616470336914
    10. '            
' → logprob: -12.784616470336914

Token 401: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -5.796184723294573e-06
    2. 'g' → logprob: -12.750005722045898
    3. 'def' → logprob: -13.125005722045898
    4. 'lc' → logprob: -14.375005722045898
    5. 'lcd' → logprob: -15.500005722045898
    6. ' l' → logprob: -17.0000057220459
    7. 'math' → logprob: -18.0000057220459
    8. '```' → logprob: -20.1250057220459
    9. '
' → logprob: -20.3750057220459
    10. '   ' → logprob: -20.6250057220459

Token 402: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -1.0280383548888494e-06
    2. 'def' → logprob: -14.625000953674316
    3. 'cms' → logprob: -15.125000953674316
    4. 'c' → logprob: -16.000001907348633
    5. 'cd' → logprob: -17.250001907348633
    6. 'cmp' → logprob: -17.500001907348633
    7. 'g' → logprob: -18.125001907348633
    8. ' cm' → logprob: -18.375001907348633
    9. '   ' → logprob: -18.500001907348633
    10. 'CM' → logprob: -18.750001907348633

Token 403: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.25
    3. ' (' → logprob: -15.875
    4. 'def' → logprob: -18.625
    5. '(x' → logprob: -19.625
    6. 'a' → logprob: -20.125
    7. '(A' → logprob: -20.75
    8. '   ' → logprob: -21.75
    9. '(u' → logprob: -22.0
    10. '(
' → logprob: -22.125

Token 404: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.02294505573809147
    2. ',' → logprob: -4.272944927215576
    3. ',a' → logprob: -4.772944927215576
    4. 'a' → logprob: -8.772945404052734
    5. ' ,' → logprob: -9.522945404052734
    6. 'b' → logprob: -9.897945404052734
    7. '(a' → logprob: -12.147945404052734
    8. ',int' → logprob: -12.522945404052734
    9. '   ' → logprob: -16.397945404052734
    10. ' ' → logprob: -16.772945404052734

Token 405: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1270398199558258
    2. '):
' → logprob: -2.127039909362793
    3. '):
' → logprob: -9.752039909362793
    4. ':' → logprob: -10.127039909362793
    5. '   ' → logprob: -11.877039909362793
    6. '       ' → logprob: -13.377039909362793
    7. ')' → logprob: -13.627039909362793
    8. ' ):' → logprob: -13.627039909362793
    9. '):

' → logprob: -14.127039909362793
    10. ':
' → logprob: -15.002039909362793

Token 406: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5896109938621521
    2. 'a' → logprob: -1.3396110534667969
    3. '           ' → logprob: -1.8396110534667969
    4. ' return' → logprob: -4.089611053466797
    5. '       ' → logprob: -5.464611053466797
    6. ' a' → logprob: -5.839611053466797
    7. '   ' → logprob: -7.464611053466797
    8. '(a' → logprob: -10.214611053466797
    9. '	return' → logprob: -10.339611053466797
    10. '=' → logprob: -10.714611053466797

Token 407: ' return' (ID: 622)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0015787787269800901
    2. 'return' (adapté à ' return') → logprob: -6.5015788078308105
    3. ' a' → logprob: -9.751578330993652
    4. ' return' → logprob: -11.001578330993652
    5. '   ' → logprob: -13.876578330993652
    6. '(a' → logprob: -15.126578330993652
    7. '	a' → logprob: -15.501578330993652
    8. 'abs' → logprob: -16.25157928466797
    9. '	return' → logprob: -17.37657928466797
    10. '           ' → logprob: -18.62657928466797

Token 408: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02978033944964409
    2. ' a' → logprob: -3.529780387878418
    3. '(a' → logprob: -10.529780387878418
    4. '	a' → logprob: -13.404780387878418
    5. ' (' → logprob: -13.779780387878418
    6. ' ' → logprob: -15.279780387878418
    7. ' abs' → logprob: -15.654780387878418
    8. '   ' → logprob: -16.1547794342041
    9. ' ' → logprob: -17.0297794342041
    10. '  ' → logprob: -17.1547794342041

Token 409: '*b' (ID: 72162)
  Prédit: '*b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*b' → logprob: -0.07872199267148972
    2. '//' → logprob: -2.8287220001220703
    3. '*a' → logprob: -4.32872200012207
    4. '*' → logprob: -5.95372200012207
    5. '*(' → logprob: -7.20372200012207
    6. ' *' → logprob: -9.95372200012207
    7. '*l' → logprob: -11.57872200012207
    8. ' //' → logprob: -11.70372200012207
    9. '*x' → logprob: -12.70372200012207
    10. '*j' → logprob: -12.82872200012207

Token 410: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.008614926598966122
    2. ' //' → logprob: -4.758615016937256
    3. '//=' → logprob: -15.508614540100098
    4. ' ' → logprob: -16.633615493774414
    5. '#' → logprob: -17.758615493774414
    6. ')//' → logprob: -18.883615493774414
    7. '```' → logprob: -18.883615493774414
    8. '://' → logprob: -19.508615493774414
    9. ',//' → logprob: -19.508615493774414
    10. ' ' → logprob: -19.508615493774414

Token 411: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.5048530030981055e-06
    2. 'math' → logprob: -13.750001907348633
    3. ' gcd' → logprob: -14.875001907348633
    4. '(g' → logprob: -19.250001907348633
    5. '_g' → logprob: -19.750001907348633
    6. '	g' → logprob: -20.500001907348633
    7. '   ' → logprob: -20.750001907348633
    8. 'gcc' → logprob: -21.625001907348633
    9. '/g' → logprob: -22.625001907348633
    10. '[g' → logprob: -22.750001907348633

Token 412: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -9.610702363715973e-06
    2. 'cf' → logprob: -11.875009536743164
    3. 'c' → logprob: -13.375009536743164
    4. 'cdf' → logprob: -14.250009536743164
    5. 'g' → logprob: -16.500009536743164
    6. 'cb' → logprob: -17.125009536743164
    7. 'd' → logprob: -17.250009536743164
    8. 'cdn' → logprob: -17.625009536743164
    9. 'CD' → logprob: -17.875009536743164
    10. '   ' → logprob: -18.000009536743164

Token 413: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -6.034592388459714e-06
    2. '(' → logprob: -12.750005722045898
    3. 'a' → logprob: -12.750005722045898
    4. ' (' → logprob: -15.625005722045898
    5. ',a' → logprob: -17.6250057220459
    6. ',' → logprob: -19.0000057220459
    7. ' a' → logprob: -19.3750057220459
    8. '(
' → logprob: -20.0000057220459
    9. '(abs' → logprob: -20.6250057220459
    10. '(int' → logprob: -20.7500057220459

Token 414: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.07956873625516891
    2. 'b' → logprob: -2.57956862449646
    3. ',' → logprob: -7.329568862915039
    4. ' ,' → logprob: -10.829568862915039
    5. ' b' → logprob: -12.954568862915039
    6. ')' → logprob: -14.704568862915039
    7. ')b' → logprob: -15.579568862915039
    8. '[b' → logprob: -17.57956886291504
    9. '[' → logprob: -17.70456886291504
    10. ',a' → logprob: -17.95456886291504

Token 415: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.433829159708694e-05
    2. ' )' → logprob: -10.00007438659668
    3. ')b' → logprob: -11.00007438659668
    4. 'b' → logprob: -12.25007438659668
    5. ',b' → logprob: -12.50007438659668
    6. '))' → logprob: -13.00007438659668
    7. ',' → logprob: -14.62507438659668
    8. '       ' → logprob: -15.87507438659668
    9. ')}' → logprob: -16.12507438659668
    10. '),' → logprob: -16.25007438659668

Token 416: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005486433394253254
    2. 'num' → logprob: -6.380486488342285
    3. '   ' → logprob: -7.005486488342285
    4. 'from' → logprob: -7.380486488342285
    5. 'numer' → logprob: -7.380486488342285
    6. '        
' → logprob: -7.505486488342285
    7. 'n' → logprob: -8.005486488342285
    8. '    
' → logprob: -8.130486488342285
    9. '```' → logprob: -8.755486488342285
    10. 'l' → logprob: -8.755486488342285

Token 417: ' #' (ID: 1069)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.2682560682296753
    2. 'numer' → logprob: -1.8932560682296753
    3. 'l' → logprob: -2.518256187438965
    4. 'lc' → logprob: -6.518256187438965
    5. 'g' → logprob: -7.268256187438965
    6. 'from' → logprob: -7.393256187438965
    7. 'n' → logprob: -7.893256187438965
    8. 'ln' → logprob: -8.018256187438965
    9. 'L' → logprob: -8.643256187438965
    10. 'N' → logprob: -9.268256187438965

Token 418: ' first' (ID: 1577)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.727130115032196
    2. 'numer' → logprob: -1.3521301746368408
    3. 'l' → logprob: -1.4771301746368408
    4. 'from' → logprob: -4.477129936218262
    5. 'lc' → logprob: -4.477129936218262
    6. 'L' → logprob: -6.352129936218262
    7. '   ' → logprob: -6.852129936218262
    8. 'g' → logprob: -7.102129936218262
    9. 'n' → logprob: -7.477129936218262
    10. ' numerator' → logprob: -7.977129936218262

Token 419: ' compute' (ID: 23864)
  Prédit: '_n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.9024420380592346
    2. '_num' → logprob: -0.9024420380592346
    3. '_l' → logprob: -2.27744197845459
    4. 'num' → logprob: -2.90244197845459
    5. 'numer' → logprob: -4.15244197845459
    6. ' numerator' → logprob: -5.65244197845459
    7. 'n' → logprob: -5.77744197845459
    8. ' =' → logprob: -5.90244197845459
    9. 'g' → logprob: -6.27744197845459
    10. 'l' → logprob: -6.40244197845459

Token 420: ' gcd' (ID: 106918)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.26023566722869873
    2. 'l' → logprob: -2.0102357864379883
    3. 'numer' → logprob: -2.3852357864379883
    4. 'lc' → logprob: -6.760235786437988
    5. 'ln' → logprob: -7.260235786437988
    6. 'L' → logprob: -7.385235786437988
    7. 'n' → logprob: -8.635235786437988
    8. 'nl' → logprob: -8.885235786437988
    9. 'den' → logprob: -9.510235786437988
    10. 'lm' → logprob: -10.510235786437988

Token 421: ' of' (ID: 328)
  Prédit: '_v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.9499905705451965
    2. '_d' → logprob: -1.6999905109405518
    3. 'V' → logprob: -1.8249905109405518
    4. '_val' → logprob: -1.9499905109405518
    5. 'v' → logprob: -2.9499905109405518
    6. '_den' → logprob: -3.0749905109405518
    7. '_V' → logprob: -4.574990749359131
    8. '_value' → logprob: -5.074990749359131
    9. 'd' → logprob: -5.699990749359131
    10. '_' → logprob: -5.824990749359131

Token 422: ' denomin' (ID: 39104)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.0012830912601202726
    2. ' V' → logprob: -7.751283168792725
    3. '(V' → logprob: -7.876283168792725
    4. 'v' → logprob: -8.376282691955566
    5. '[V' → logprob: -9.251282691955566
    6. 'den' → logprob: -9.751282691955566
    7. '[i' → logprob: -10.376282691955566
    8. '   ' → logprob: -11.126282691955566
    9. 'for' → logprob: -12.251282691955566
    10. 'Vi' → logprob: -12.251282691955566

Token 423: 'ators' (ID: 4840)
  Prédit: 'ators'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ators' → logprob: -0.09223306179046631
    2. 'omin' → logprob: -2.842233180999756
    3. '(V' → logprob: -3.842233180999756
    4. 'V' → logprob: -5.717233180999756
    5. 's' → logprob: -6.592233180999756
    6. '[V' → logprob: -6.717233180999756
    7. 'in' → logprob: -7.092233180999756
    8. 'ominator' → logprob: -7.717233180999756
    9. '[' → logprob: -8.217232704162598
    10. ' denomin' → logprob: -8.717232704162598

Token 424: ' (' (ID: 350)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.117924690246582
    2. 'den' → logprob: -1.117924690246582
    3. '       ' → logprob: -1.617924690246582
    4. 'g' → logprob: -2.117924690246582
    5. 'V' → logprob: -3.867924690246582
    6. 'D' → logprob: -6.367924690246582
    7. '   ' → logprob: -7.242924690246582
    8. 'dc' → logprob: -7.367924690246582
    9. 'dp' → logprob: -7.617924690246582
    10. 'dn' → logprob: -7.992924690246582

Token 425: 'V' (ID: 53)
  Prédit: 'V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -2.8444881536415778e-05
    2. '       ' → logprob: -11.500028610229492
    3. 'den' → logprob: -12.125028610229492
    4. '   ' → logprob: -12.625028610229492
    5. ' V' → logprob: -12.750028610229492
    6. '[V' → logprob: -12.875028610229492
    7. '(V' → logprob: -13.750028610229492
    8. 'v' → logprob: -14.000028610229492
    9. '           ' → logprob: -14.875028610229492
    10. '=' → logprob: -15.250028610229492

Token 426: ')
' (ID: 446)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.19011931121349335
    2. ' =' → logprob: -2.5651192665100098
    3. ')' → logprob: -2.8151192665100098
    4. '=' → logprob: -4.06511926651001
    5. '[i' → logprob: -4.19011926651001
    6. '[V' → logprob: -6.69011926651001
    7. '=[' → logprob: -7.56511926651001
    8. 'V' → logprob: -7.56511926651001
    9. 's' → logprob: -7.81511926651001
    10. ')=' → logprob: -8.065119743347168

Token 427: '       ' (ID: 309)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.13892018795013428
    2. 'd' → logprob: -2.763920307159424
    3. '       ' → logprob: -3.513920307159424
    4. 'den' → logprob: -3.763920307159424
    5. '   ' → logprob: -5.888920307159424
    6. 'G' → logprob: -6.013920307159424
    7. 'gv' → logprob: -6.013920307159424
    8. '_g' → logprob: -6.388920307159424
    9. 'from' → logprob: -6.888920307159424
    10. 'gd' → logprob: -7.638920307159424

Token 428: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.2065907120704651
    2. 'den' → logprob: -2.0815906524658203
    3. 'd' → logprob: -3.7065906524658203
    4. 'G' → logprob: -4.83159065246582
    5. 'gd' → logprob: -4.83159065246582
    6. 'from' → logprob: -5.45659065246582
    7. 'gc' → logprob: -6.08159065246582
    8. 'gg' → logprob: -6.08159065246582
    9. 'gv' → logprob: -6.20659065246582
    10. 'common' → logprob: -6.33159065246582

Token 429: '_d' (ID: 1565)
  Prédit: '_v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.7998909950256348
    2. '_val' → logprob: -0.7998909950256348
    3. '_all' → logprob: -3.4248909950256348
    4. '_d' → logprob: -3.9248909950256348
    5. '_' → logprob: -4.049890995025635
    6. '_value' → logprob: -4.674890995025635
    7. 'V' → logprob: -4.799890995025635
    8. '_den' → logprob: -5.049890995025635
    9. '_V' → logprob: -5.424890995025635
    10. 'v' → logprob: -6.424890995025635

Token 430: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23715747892856598
    2. '=' → logprob: -1.9871574640274048
    3. 'en' → logprob: -2.8621575832366943
    4. 'enom' → logprob: -4.362157344818115
    5. 'd' → logprob: -6.362157344818115
    6. 'v' → logprob: -7.487157344818115
    7. 'den' → logprob: -7.612157344818115
    8. '_den' → logprob: -7.987157344818115
    9. '_val' → logprob: -8.737157821655273
    10. 'val' → logprob: -9.112157821655273

Token 431: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -1.8624639324116288e-06
    2. ' V' → logprob: -14.125001907348633
    3. '0' → logprob: -14.250001907348633
    4. 'v' → logprob: -15.125001907348633
    5. 'g' → logprob: -16.125001907348633
    6. '1' → logprob: -16.625001907348633
    7. 'math' → logprob: -17.750001907348633
    8. '   ' → logprob: -18.375001907348633
    9. '	V' → logprob: -18.500001907348633
    10. 'abs' → logprob: -19.125001907348633

Token 432: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.061054359131958e-06
    2. '0' → logprob: -12.500007629394531
    3. 'g' → logprob: -13.125007629394531
    4. 'def' → logprob: -13.375007629394531
    5. '1' → logprob: -15.125007629394531
    6. 'v' → logprob: -16.00000762939453
    7. 's' → logprob: -16.50000762939453
    8. 'V' → logprob: -16.87500762939453
    9. '[V' → logprob: -17.12500762939453
    10. 'from' → logprob: -17.37500762939453

Token 433: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.5
    3. '[' → logprob: -16.375
    4. '-' → logprob: -17.875
    5. '1' → logprob: -18.375
    6. '   ' → logprob: -18.5
    7. '
' → logprob: -19.0
    8. '```' → logprob: -20.0
    9. '#' → logprob: -20.375
    10. '﻿' → logprob: -20.5625

Token 434: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.31898194551467896
    2. 'for' → logprob: -2.318981885910034
    3. ']
' → logprob: -2.443981885910034
    4. '<|end|>' → logprob: -3.568981885910034
    5. ')' → logprob: -3.693981885910034
    6. 'def' → logprob: -4.193982124328613
    7. ')
' → logprob: -4.693982124328613
    8. '
' → logprob: -5.943982124328613
    9. '])' → logprob: -6.068982124328613
    10. 'g' → logprob: -6.943982124328613

Token 435: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18020574748516083
    2. '       ' → logprob: -1.9302057027816772
    3. ' for' → logprob: -3.930205821990967
    4. '	for' → logprob: -9.305205345153809
    5. '
' → logprob: -10.430205345153809
    6. '   ' → logprob: -11.055205345153809
    7. '<|end|>' → logprob: -13.305205345153809
    8. ',' → logprob: -13.430205345153809
    9. '        
' → logprob: -13.930205345153809
    10. 'from' → logprob: -14.055205345153809

Token 436: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0005573204252868891
    2. '       ' → logprob: -7.5005574226379395
    3. ' for' → logprob: -12.375556945800781
    4. '	for' → logprob: -16.12555694580078
    5. '   ' → logprob: -16.75055694580078
    6. 'from' → logprob: -17.37555694580078
    7. 'import' → logprob: -19.62555694580078
    8. '```' → logprob: -20.25055694580078
    9. '
' → logprob: -20.62555694580078
    10. 'For' → logprob: -21.75055694580078

Token 437: ' v' (ID: 323)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0060790604911744595
    2. 'v' → logprob: -5.381079196929932
    3. 'vi' → logprob: -7.381079196929932
    4. 'x' → logprob: -8.381078720092773
    5. 'd' → logprob: -8.381078720092773
    6. 'vv' → logprob: -8.881078720092773
    7. ' i' → logprob: -9.131078720092773
    8. 'val' → logprob: -9.381078720092773
    9. 'den' → logprob: -10.381078720092773
    10. 'vd' → logprob: -12.006078720092773

Token 438: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1002354547381401
    2. 'in' → logprob: -2.3502354621887207
    3. 'v' → logprob: -11.350234985351562
    4. '	in' → logprob: -11.475234985351562
    5. ' ' → logprob: -12.600234985351562
    6. 'd' → logprob: -14.100234985351562
    7. 'n' → logprob: -14.850234985351562
    8. 'g' → logprob: -14.975234985351562
    9. 'i' → logprob: -14.975234985351562
    10. '   ' → logprob: -15.100234985351562

Token 439: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -1.306760805164231e-05
    2. ' V' → logprob: -11.25001335144043
    3. '	V' → logprob: -18.50001335144043
    4. '   ' → logprob: -19.62501335144043
    5. '(V' → logprob: -20.50001335144043
    6. '  ' → logprob: -21.87501335144043
    7. 'v' → logprob: -21.87501335144043
    8. '[V' → logprob: -22.37501335144043
    9. ' ' → logprob: -22.75001335144043
    10. ')V' → logprob: -23.62501335144043

Token 440: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0136759914457798
    2. 'in' → logprob: -5.013676166534424
    3. ':' → logprob: -5.638676166534424
    4. ' in' → logprob: -5.763676166534424
    5. 'v' → logprob: -9.263675689697266
    6. '   ' → logprob: -9.638675689697266
    7. '1' → logprob: -10.013675689697266
    8. ':
' → logprob: -11.263675689697266
    9. 'if' → logprob: -12.638675689697266
    10. '```' → logprob: -12.763675689697266

Token 441: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '   ' → logprob: -17.5
    4. '[' → logprob: -19.375
    5. '```' → logprob: -20.125
    6. '       ' → logprob: -21.0
    7. 'v' → logprob: -21.125
    8. '
' → logprob: -22.0
    9. ':' → logprob: -22.0
    10. 'V' → logprob: -22.25

Token 442: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.333223139634356e-05
    2. ':]' → logprob: -11.250033378601074
    3. ':g' → logprob: -11.375033378601074
    4. ':],' → logprob: -13.250033378601074
    5. ']:' → logprob: -13.375033378601074
    6. ':G' → logprob: -13.375033378601074
    7. 'g' → logprob: -14.125033378601074
    8. 'V' → logprob: -14.125033378601074
    9. ':v' → logprob: -14.375033378601074
    10. '1' → logprob: -14.875033378601074

Token 443: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.057560406625270844
    2. ':' → logprob: -3.807560443878174
    3. '   ' → logprob: -4.307560443878174
    4. '):
' → logprob: -5.057560443878174
    5. 'v' → logprob: -5.182560443878174
    6. '       ' → logprob: -5.182560443878174
    7. 'g' → logprob: -6.182560443878174
    8. ']:
' → logprob: -7.807560443878174
    9. ':g' → logprob: -9.682559967041016
    10. '():
' → logprob: -9.932559967041016

Token 444: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3397677540779114
    2. 'g' → logprob: -1.3397676944732666
    3. '   ' → logprob: -3.7147676944732666
    4. '       ' → logprob: -6.714767932891846
    5. ' gcd' → logprob: -7.839767932891846
    6. '```' → logprob: -8.964767456054688
    7. '<|end|>' → logprob: -11.339767456054688
    8. ',g' → logprob: -11.589767456054688
    9. ',' → logprob: -12.589767456054688
    10. '	       ' → logprob: -12.589767456054688

Token 445: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.00010449681576574221
    2. '           ' → logprob: -9.250104904174805
    3. '   ' → logprob: -12.750104904174805
    4. '               ' → logprob: -12.750104904174805
    5. ' gcd' → logprob: -13.250104904174805
    6. '       ' → logprob: -14.250104904174805
    7. 'if' → logprob: -16.500104904174805
    8. '	g' → logprob: -17.000104904174805
    9. 'import' → logprob: -18.750104904174805
    10. ' ' → logprob: -18.750104904174805

Token 446: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -1.9027791495318525e-05
    2. 'd' → logprob: -10.875019073486328
    3. 'v' → logprob: -17.750019073486328
    4. '_' → logprob: -17.750019073486328
    5. 'a' → logprob: -18.125019073486328
    6. '_v' → logprob: -18.500019073486328
    7. '=' → logprob: -18.625019073486328
    8. 'def' → logprob: -18.875019073486328
    9. '   ' → logprob: -19.250019073486328
    10. 'g' → logprob: -19.250019073486328

Token 447: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0005722135538235307
    2. ' =' → logprob: -7.500572204589844
    3. '=g' → logprob: -10.875572204589844
    4. '=v' → logprob: -15.500572204589844
    5. '.=' → logprob: -17.500572204589844
    6. '=f' → logprob: -18.375572204589844
    7. '=

' → logprob: -18.750572204589844
    8. '=d' → logprob: -19.125572204589844
    9. '*=' → logprob: -19.500572204589844
    10. '=b' → logprob: -19.875572204589844

Token 448: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -7.107425062713446e-06
    2. 'math' → logprob: -12.500006675720215
    3. ' gcd' → logprob: -12.625006675720215
    4. '   ' → logprob: -18.12500762939453
    5. '	g' → logprob: -18.87500762939453
    6. '_g' → logprob: -19.62500762939453
    7. ' ' → logprob: -19.87500762939453
    8. ' math' → logprob: -20.00000762939453
    9. '(g' → logprob: -20.25000762939453
    10. 'gcc' → logprob: -20.25000762939453

Token 449: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.00011045700375689194
    2. 'g' → logprob: -9.125110626220703
    3. '_g' → logprob: -14.250110626220703
    4. 'd' → logprob: -14.875110626220703
    5. '(' → logprob: -15.000110626220703
    6. '	g' → logprob: -16.250110626220703
    7. 'v' → logprob: -17.500110626220703
    8. ',g' → logprob: -17.625110626220703
    9. '(v' → logprob: -17.625110626220703
    10. '```' → logprob: -18.500110626220703

Token 450: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -1.5928495486150496e-05
    2. 'd' → logprob: -11.500016212463379
    3. 'cdf' → logprob: -12.750016212463379
    4. 'c' → logprob: -13.750016212463379
    5. 'ood' → logprob: -14.625016212463379
    6. 'cdn' → logprob: -15.625016212463379
    7. 'td' → logprob: -15.875016212463379
    8. '_d' → logprob: -16.500015258789062
    9. '```' → logprob: -16.500015258789062
    10. 'CD' → logprob: -16.625015258789062

Token 451: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -6.861651490908116e-05
    2. 'd' → logprob: -9.625068664550781
    3. '_g' → logprob: -14.000068664550781
    4. 'g' → logprob: -14.500068664550781
    5. '(d' → logprob: -15.250068664550781
    6. ',d' → logprob: -15.500068664550781
    7. 'v' → logprob: -15.875068664550781
    8. ')' → logprob: -16.37506866455078
    9. '(g' → logprob: -16.50006866455078
    10. 's' → logprob: -16.62506866455078

Token 452: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.10277815908193588
    2. ',' → logprob: -2.352778196334839
    3. 'v' → logprob: -5.97777795791626
    4. ' ,' → logprob: -10.352778434753418
    5. ' v' → logprob: -13.477778434753418
    6. ',
' → logprob: -16.1027774810791
    7. '	v' → logprob: -16.3527774810791
    8. '(v' → logprob: -16.6027774810791
    9. '[v' → logprob: -16.8527774810791
    10. ',b' → logprob: -17.2277774810791

Token 453: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1875571544806007e-05
    2. ')
' → logprob: -11.375011444091797
    3. '       ' → logprob: -15.125011444091797
    4. ')

' → logprob: -16.875011444091797
    5. ' )' → logprob: -18.000011444091797
    6. '           ' → logprob: -19.375011444091797
    7. '),' → logprob: -19.500011444091797
    8. ')return' → logprob: -19.625011444091797
    9. '))' → logprob: -19.750011444091797
    10. ')}' → logprob: -19.750011444091797

Token 454: '       ' (ID: 309)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.035850826650857925
    2. '       ' → logprob: -3.535850763320923
    3. '#' → logprob: -6.035851001739502
    4. '```' → logprob: -6.285851001739502
    5. 'lc' → logprob: -6.410851001739502
    6. 'g' → logprob: -8.910850524902344
    7. ' l' → logprob: -11.160850524902344
    8. '        
' → logprob: -11.285850524902344
    9. '   ' → logprob: -11.910850524902344
    10. 'LC' → logprob: -12.160850524902344

Token 455: ' #' (ID: 1069)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0007090978906489909
    2. '       ' → logprob: -7.750709056854248
    3. 'lc' → logprob: -8.500709533691406
    4. '#' (adapté à ' #') → logprob: -10.375709533691406
    5. '```' → logprob: -11.000709533691406
    6. 'lcd' → logprob: -11.625709533691406
    7. '        
' → logprob: -11.875709533691406
    8. 'LC' → logprob: -12.500709533691406
    9. 'from' → logprob: -12.750709533691406
    10. 'import' → logprob: -13.000709533691406

Token 456: ' compute' (ID: 23864)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00021366903092712164
    2. 'lc' → logprob: -9.125213623046875
    3. 'lcd' → logprob: -10.000213623046875
    4. 'num' → logprob: -10.750213623046875
    5. '#' → logprob: -10.750213623046875
    6. 'from' → logprob: -12.125213623046875
    7. 'numer' → logprob: -12.125213623046875
    8. 'g' → logprob: -13.000213623046875
    9. 'def' → logprob: -13.750213623046875
    10. ' l' → logprob: -13.750213623046875

Token 457: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.000169332604855299
    2. 'num' → logprob: -9.50016975402832
    3. 'lc' → logprob: -10.25016975402832
    4. 'lcd' → logprob: -10.25016975402832
    5. 'numer' → logprob: -10.75016975402832
    6. '```' → logprob: -14.50016975402832
    7. 'from' → logprob: -14.50016975402832
    8. 'LC' → logprob: -14.75016975402832
    9. ' l' → logprob: -14.87516975402832
    10. '#' → logprob: -16.25016975402832

Token 458: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -2.069664333248511e-05
    2. 'c' → logprob: -12.000020980834961
    3. '_cm' → logprob: -12.625020980834961
    4. 'numer' → logprob: -13.125020980834961
    5. '_c' → logprob: -13.375020980834961
    6. 'cms' → logprob: -14.000020980834961
    7. 'num' → logprob: -14.000020980834961
    8. 'CM' → logprob: -14.000020980834961
    9. 'm' → logprob: -14.250020980834961
    10. 'l' → logprob: -14.250020980834961

Token 459: ' of' (ID: 328)
  Prédit: '_n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.006266250740736723
    2. '_num' → logprob: -5.631266117095947
    3. '_d' → logprob: -7.131266117095947
    4. 'num' → logprob: -7.131266117095947
    5. '_l' → logprob: -7.631266117095947
    6. 'n' → logprob: -8.006266593933105
    7. ' =' → logprob: -9.006266593933105
    8. 'd' → logprob: -10.756266593933105
    9. 'of' → logprob: -10.881266593933105
    10. '_L' → logprob: -11.006266593933105

Token 460: ' numer' (ID: 9076)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -4.084206375409849e-05
    2. 'numer' → logprob: -10.625041007995605
    3. '(L' → logprob: -11.250041007995605
    4. ' L' → logprob: -13.000041007995605
    5. 'numbers' → logprob: -14.750041007995605
    6. '   ' → logprob: -15.125041007995605
    7. '[L' → logprob: -15.375041007995605
    8. '```' → logprob: -16.62504005432129
    9. 'nums' → logprob: -17.00004005432129
    10. 'Ls' → logprob: -17.12504005432129

Token 461: 'ators' (ID: 4840)
  Prédit: 'ators'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ators' → logprob: -0.0005507678724825382
    2. 'L' → logprob: -7.750550746917725
    3. '(L' → logprob: -9.625551223754883
    4. '[L' → logprob: -10.000551223754883
    5. 'ATORS' → logprob: -13.125551223754883
    6. '   ' → logprob: -13.375551223754883
    7. 's' → logprob: -13.375551223754883
    8. '[' → logprob: -14.000551223754883
    9. 'at' → logprob: -14.500551223754883
    10. '_L' → logprob: -15.500551223754883

Token 462: ' (' (ID: 350)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2051909863948822
    2. ' =' → logprob: -2.455190896987915
    3. '       ' → logprob: -3.455190896987915
    4. 'num' → logprob: -3.830190896987915
    5. 'n' → logprob: -4.330191135406494
    6. '_l' → logprob: -4.455191135406494
    7. 'numer' → logprob: -4.955191135406494
    8. '=' → logprob: -5.330191135406494
    9. ' l' → logprob: -6.080191135406494
    10. 'lc' → logprob: -6.205191135406494

Token 463: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.00023238400171976537
    2. ' L' → logprob: -8.375232696533203
    3. ')' → logprob: -14.375232696533203
    4. '   ' → logprob: -14.500232696533203
    5. '       ' → logprob: -15.250232696533203
    6. ')L' → logprob: -15.750232696533203
    7. '[L' → logprob: -16.375232696533203
    8. '=' → logprob: -17.375232696533203
    9. ',L' → logprob: -17.375232696533203
    10. ' =' → logprob: -17.375232696533203

Token 464: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.44511911273002625
    2. ')' → logprob: -1.1951191425323486
    3. '       ' → logprob: -3.0701191425323486
    4. '):
' → logprob: -5.0701189041137695
    5. '[' → logprob: -6.4451189041137695
    6. '[i' → logprob: -7.6951189041137695
    7. '):' → logprob: -7.8201189041137695
    8. '   ' → logprob: -8.19511890411377
    9. '```' → logprob: -8.57011890411377
    10. 'n' → logprob: -9.19511890411377

Token 465: '       ' (ID: 309)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.07661549001932144
    2. '       ' → logprob: -2.701615571975708
    3. 'lc' → logprob: -5.076615333557129
    4. ' l' → logprob: -8.826615333557129
    5. 'result' → logprob: -9.701615333557129
    6. '_l' → logprob: -9.826615333557129
    7. '   ' → logprob: -9.951615333557129
    8. 'from' → logprob: -10.326615333557129
    9. '```' → logprob: -10.826615333557129
    10. '	l' → logprob: -11.451615333557129

Token 466: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.0002777822664938867
    2. 'lc' → logprob: -8.625277519226074
    3. 'lcd' → logprob: -10.750277519226074
    4. '_l' → logprob: -11.000277519226074
    5. 'from' → logprob: -11.125277519226074
    6. 'numer' → logprob: -11.625277519226074
    7. ' l' → logprob: -11.750277519226074
    8. 'L' → logprob: -11.875277519226074
    9. 'num' → logprob: -11.875277519226074
    10. 'res' → logprob: -12.375277519226074

Token 467: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -7.362307223957032e-05
    2. 'c' → logprob: -10.500073432922363
    3. '_cm' → logprob: -11.000073432922363
    4. 'l' → logprob: -11.375073432922363
    5. '_c' → logprob: -12.125073432922363
    6. 'cms' → logprob: -12.250073432922363
    7. '=' → logprob: -12.875073432922363
    8. ' =' → logprob: -13.125073432922363
    9. 'CM' → logprob: -14.375073432922363
    10. '_l' → logprob: -14.500073432922363

Token 468: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.023268306627869606
    2. 'n' → logprob: -5.023268222808838
    3. '_l' → logprob: -5.273268222808838
    4. '_val' → logprob: -5.648268222808838
    5. '_num' → logprob: -5.773268222808838
    6. 'num' → logprob: -6.273268222808838
    7. 'val' → logprob: -6.898268222808838
    8. '_' → logprob: -7.023268222808838
    9. '_d' → logprob: -7.773268222808838
    10. 'l' → logprob: -9.648268699645996

Token 469: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5766605138778687
    2. ' =' → logprob: -0.8266605138778687
    3. '=l' → logprob: -8.20166015625
    4. '=n' → logprob: -8.45166015625
    5. 'um' → logprob: -9.07666015625
    6. '=L' → logprob: -9.32666015625
    7. 'umerator' → logprob: -11.70166015625
    8. '   ' → logprob: -11.70166015625
    9. 'u' → logprob: -13.20166015625
    10. '_=' → logprob: -13.45166015625

Token 470: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -3.547789674485102e-05
    2. ' L' → logprob: -10.250035285949707
    3. '   ' → logprob: -20.125036239624023
    4. '1' → logprob: -20.500036239624023
    5. 'l' → logprob: -21.500036239624023
    6. '	L' → logprob: -21.875036239624023
    7. '0' → logprob: -22.625036239624023
    8. ' ' → logprob: -23.250036239624023
    9. '       ' → logprob: -23.375036239624023
    10. '  ' → logprob: -23.500036239624023

Token 471: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00033558503491804004
    2. '0' → logprob: -8.000335693359375
    3. 'def' → logprob: -16.375335693359375
    4. 's' → logprob: -17.375335693359375
    5. ' [' → logprob: -17.375335693359375
    6. '```' → logprob: -17.500335693359375
    7. '   ' → logprob: -18.375335693359375
    8. '1' → logprob: -18.500335693359375
    9. ' ' → logprob: -19.000335693359375
    10. 'import' → logprob: -19.625335693359375

Token 472: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.750001907348633
    3. '[' → logprob: -14.375001907348633
    4. '
' → logprob: -17.750001907348633
    5. '   ' → logprob: -17.875001907348633
    6. '1' → logprob: -19.312501907348633
    7. '۰' → logprob: -19.375001907348633
    8. '０' → logprob: -19.812501907348633
    9. '00' → logprob: -20.125001907348633
    10. '```' → logprob: -20.187501907348633

Token 473: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.3101843297481537
    2. ']' → logprob: -2.0601842403411865
    3. ')
' → logprob: -2.0601842403411865
    4. ')' → logprob: -4.685184478759766
    5. '
' → logprob: -6.810184478759766
    6. ',l' → logprob: -7.310184478759766
    7. 'for' → logprob: -8.185184478759766
    8. '>' → logprob: -9.560184478759766
    9. '```' → logprob: -9.935184478759766
    10. ',' → logprob: -9.935184478759766

Token 474: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02707402966916561
    2. 'for' → logprob: -3.652074098587036
    3. ' for' → logprob: -7.277073860168457
    4. '   ' → logprob: -10.027073860168457
    5. '<|end|>' → logprob: -10.402073860168457
    6. '	for' → logprob: -12.652073860168457
    7. '```' → logprob: -14.027073860168457
    8. '        
' → logprob: -14.152073860168457
    9. '<|end|>' → logprob: -14.152073860168457
    10. '           ' → logprob: -14.652073860168457

Token 475: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0008072483469732106
    2. '       ' → logprob: -7.250807285308838
    3. ' for' → logprob: -9.25080680847168
    4. '	for' → logprob: -13.62580680847168
    5. '   ' → logprob: -16.87580680847168
    6. 'from' → logprob: -18.00080680847168
    7. '	' → logprob: -18.50080680847168
    8. 'For' → logprob: -18.50080680847168
    9. '```' → logprob: -20.37580680847168
    10. '_for' → logprob: -21.37580680847168

Token 476: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4195227324962616
    2. 'l' → logprob: -1.169522762298584
    3. 'x' → logprob: -3.544522762298584
    4. 'num' → logprob: -6.419522762298584
    5. 'ln' → logprob: -7.294522762298584
    6. 'li' → logprob: -7.794522762298584
    7. 'val' → logprob: -8.169522285461426
    8. ' i' → logprob: -8.794522285461426
    9. ' l' → logprob: -10.544522285461426
    10. 'a' → logprob: -10.794522285461426

Token 477: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0022206762805581093
    2. 'in' → logprob: -6.127220630645752
    3. 'c' → logprob: -12.00222110748291
    4. '_in' → logprob: -12.12722110748291
    5. 'cm' → logprob: -12.25222110748291
    6. 'n' → logprob: -12.37722110748291
    7. ' ' → logprob: -12.62722110748291
    8. '_' → logprob: -12.62722110748291
    9. '[i' → logprob: -13.50222110748291
    10. '	in' → logprob: -13.50222110748291

Token 478: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.6240566083070007e-06
    2. ' L' → logprob: -13.375001907348633
    3. '   ' → logprob: -20.250001907348633
    4. '	L' → logprob: -20.250001907348633
    5. '(L' → logprob: -20.250001907348633
    6. '[L' → logprob: -21.000001907348633
    7. 'range' → logprob: -21.250001907348633
    8. '  ' → logprob: -21.875001907348633
    9. ' ' → logprob: -22.250001907348633
    10. '.L' → logprob: -22.375001907348633

Token 479: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.7432603272027336e-06
    2. ' in' → logprob: -13.750001907348633
    3. ':' → logprob: -15.125001907348633
    4. '   ' → logprob: -15.750001907348633
    5. '1' → logprob: -16.625001907348633
    6. '       ' → logprob: -16.750001907348633
    7. ' [' → logprob: -17.625001907348633
    8. ':
' → logprob: -17.750001907348633
    9. '(' → logprob: -18.375001907348633
    10. '[L' → logprob: -18.625001907348633

Token 480: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -13.125001907348633
    3. '(' → logprob: -16.875001907348633
    4. ' ' → logprob: -17.375001907348633
    5. '   ' → logprob: -18.125001907348633
    6. '```' → logprob: -18.750001907348633
    7. 'range' → logprob: -19.000001907348633
    8. '１' → logprob: -19.250001907348633
    9. '
' → logprob: -20.750001907348633
    10. '_' → logprob: -21.250001907348633

Token 481: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05646749213337898
    2. ':l' → logprob: -3.3064675331115723
    3. ':
' → logprob: -4.056467533111572
    4. '[' → logprob: -8.181467056274414
    5. ']:
' → logprob: -8.556467056274414
    6. ':L' → logprob: -8.931467056274414
    7. ':]' → logprob: -9.056467056274414
    8. 'l' → logprob: -10.306467056274414
    9. '):
' → logprob: -10.306467056274414
    10. ':]
' → logprob: -10.681467056274414

Token 482: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4516534209251404
    2. '):
' → logprob: -1.9516534805297852
    3. '       ' → logprob: -2.701653480529785
    4. ':' → logprob: -2.826653480529785
    5. '           ' → logprob: -3.076653480529785
    6. ']:
' → logprob: -3.326653480529785
    7. '   ' → logprob: -4.826653480529785
    8. ':l' → logprob: -6.451653480529785
    9. 'l' → logprob: -6.701653480529785
    10. '():
' → logprob: -7.576653480529785

Token 483: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20773659646511078
    2. '   ' → logprob: -2.3327364921569824
    3. 'l' → logprob: -2.7077364921569824
    4. ' l' → logprob: -3.8327364921569824
    5. '       ' → logprob: -6.207736492156982
    6. '	l' → logprob: -9.70773696899414
    7. ',l' → logprob: -10.20773696899414
    8. '               ' → logprob: -10.58273696899414
    9. '	       ' → logprob: -11.58273696899414
    10. ' ' → logprob: -11.58273696899414

Token 484: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -7.576873758807778e-05
    2. ' l' → logprob: -9.500075340270996
    3. '           ' → logprob: -14.125075340270996
    4. '   ' → logprob: -17.000076293945312
    5. '	l' → logprob: -17.250076293945312
    6. '       ' → logprob: -17.875076293945312
    7. '               ' → logprob: -20.000076293945312
    8. ' ' → logprob: -20.375076293945312
    9. '         ' → logprob: -20.500076293945312
    10. '_l' → logprob: -20.500076293945312

Token 485: 'cm' (ID: 7871)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0014784404775127769
    2. '=l' → logprob: -6.751478672027588
    3. ' =' → logprob: -8.12647819519043
    4. 'cm' → logprob: -12.87647819519043
    5. '=lambda' → logprob: -12.87647819519043
    6. '=c' → logprob: -13.50147819519043
    7. '=n' → logprob: -13.75147819519043
    8. ']=' → logprob: -14.25147819519043
    9. '=int' → logprob: -14.50147819519043
    10. '=m' → logprob: -14.50147819519043

Token 486: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.00025442568585276604
    2. '=' → logprob: -8.87525463104248
    3. 'n' → logprob: -10.25025463104248
    4. '=lambda' → logprob: -10.25025463104248
    5. '_' → logprob: -10.75025463104248
    6. '_=' → logprob: -10.87525463104248
    7. '=l' → logprob: -14.25025463104248
    8. 'l' → logprob: -14.37525463104248
    9. 'lambda' → logprob: -14.62525463104248
    10. '```' → logprob: -14.87525463104248

Token 487: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0004320996522437781
    2. ' =' → logprob: -7.750432014465332
    3. '=l' → logprob: -13.500432014465332
    4. '＝' → logprob: -21.75043296813965
    5. '=

' → logprob: -22.00043296813965
    6. '=
' → logprob: -23.00043296813965
    7. '.=' → logprob: -23.12543296813965
    8. '=}' → logprob: -23.25043296813965
    9. ' ' → logprob: -23.62543296813965
    10. '*=' → logprob: -25.25043296813965

Token 488: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -9.615255839889869e-05
    2. ' l' → logprob: -9.250096321105957
    3. '	l' → logprob: -19.62509536743164
    4. '(l' → logprob: -20.75009536743164
    5. '_l' → logprob: -22.25009536743164
    6. '   ' → logprob: -22.75009536743164
    7. 'lc' → logprob: -22.87509536743164
    8. '```' → logprob: -23.12509536743164
    9. ' ' → logprob: -23.37509536743164
    10. '`' → logprob: -23.87509536743164

Token 489: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.20216907560825348
    2. '(l' → logprob: -1.7021690607070923
    3. '*l' → logprob: -7.952168941497803
    4. 'c' → logprob: -8.952169418334961
    5. 'm' → logprob: -9.327169418334961
    6. 'n' → logprob: -9.327169418334961
    7. 'cd' → logprob: -10.577169418334961
    8. 'mm' → logprob: -11.077169418334961
    9. 'cms' → logprob: -11.702169418334961
    10. '*' → logprob: -12.077169418334961

Token 490: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0019492254359647632
    2. 'l' → logprob: -6.251949310302734
    3. '_l' → logprob: -11.251949310302734
    4. '_n' → logprob: -12.626949310302734
    5. '	l' → logprob: -13.501949310302734
    6. '(' → logprob: -13.626949310302734
    7. 'n' → logprob: -14.251949310302734
    8. ',l' → logprob: -14.876949310302734
    9. ' l' → logprob: -15.126949310302734
    10. '[l' → logprob: -15.626949310302734

Token 491: 'cm' (ID: 7871)
  Prédit: ',l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',l' → logprob: -0.1503627449274063
    2. '_n' → logprob: -2.275362730026245
    3. ',' → logprob: -3.400362730026245
    4. ',n' → logprob: -6.400362968444824
    5. '(l' → logprob: -7.275362968444824
    6. 'n' → logprob: -8.150362968444824
    7. '_,' → logprob: -8.275362968444824
    8. 'l' → logprob: -8.650362968444824
    9. '_l' → logprob: -9.025362968444824
    10. ')' → logprob: -9.400362968444824

Token 492: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.0028441029135137796
    2. 'n' → logprob: -5.877844333648682
    3. 'l' → logprob: -10.877843856811523
    4. '(n' → logprob: -11.502843856811523
    5. ',' → logprob: -13.002843856811523
    6. 's' → logprob: -13.502843856811523
    7. ')' → logprob: -13.752843856811523
    8. '_l' → logprob: -14.002843856811523
    9. '(l' → logprob: -14.127843856811523
    10. 'a' → logprob: -14.127843856811523

Token 493: ',l' (ID: 45198)
  Prédit: ',l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',l' → logprob: -0.009820077568292618
    2. ',' → logprob: -4.634819984436035
    3. 'l' → logprob: -9.884819984436035
    4. ' ,' → logprob: -11.384819984436035
    5. ',n' → logprob: -15.384819984436035
    6. ',
' → logprob: -15.634819984436035
    7. ',ll' → logprob: -16.13482093811035
    8. ' l' → logprob: -16.13482093811035
    9. ',v' → logprob: -16.38482093811035
    10. ',len' → logprob: -16.50982093811035

Token 494: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3306015716807451e-05
    2. ')
' → logprob: -11.25001335144043
    3. '       ' → logprob: -15.62501335144043
    4. ')

' → logprob: -16.75001335144043
    5. ' )' → logprob: -17.62501335144043
    6. ')`' → logprob: -17.62501335144043
    7. ')n' → logprob: -17.62501335144043
    8. ')return' → logprob: -18.00001335144043
    9. '))' → logprob: -19.25001335144043
    10. '),' → logprob: -19.62501335144043

Token 495: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019773725420236588
    2. '
' → logprob: -4.144773960113525
    3. '        
' → logprob: -6.019773960113525
    4. 'import' → logprob: -7.769773960113525
    5. 'from' → logprob: -8.644773483276367
    6. 'result' → logprob: -9.269773483276367
    7. 't' → logprob: -9.269773483276367
    8. '
' → logprob: -9.644773483276367
    9. '

' → logprob: -9.769773483276367
    10. 'T' → logprob: -9.894773483276367

Token 496: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013698451220989227
    2. '
' → logprob: -4.763698577880859
    3. '        
' → logprob: -6.388698577880859
    4. 'from' → logprob: -6.513698577880859
    5. 'import' → logprob: -6.763698577880859
    6. 'print' → logprob: -8.01369857788086
    7. 'result' → logprob: -9.51369857788086
    8. 'T' → logprob: -9.63869857788086
    9. 't' → logprob: -9.88869857788086
    10. ' from' → logprob: -10.01369857788086

Token 497: ' T' (ID: 353)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.39573046565055847
    2. 'T' → logprob: -2.395730495452881
    3. 'ans' → logprob: -2.395730495452881
    4. 'print' → logprob: -3.020730495452881
    5. 'result' → logprob: -3.145730495452881
    6. 'res' → logprob: -3.520730495452881
    7. 'import' → logprob: -4.520730495452881
    8. 'if' → logprob: -5.520730495452881
    9. '#' → logprob: -5.770730495452881
    10. 't' → logprob: -6.645730495452881

Token 498: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026302039623260498
    2. '=' → logprob: -3.6513020992279053
    3. '_' → logprob: -14.151302337646484
    4. ',' → logprob: -15.276302337646484
    5. ' _' → logprob: -15.526302337646484
    6. ' ' → logprob: -15.901302337646484
    7. ' =
' → logprob: -16.401302337646484
    8. '=int' → logprob: -16.401302337646484
    9. 'space' → logprob: -16.526302337646484
    10. ' ' → logprob: -16.901302337646484

Token 499: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.000948141620028764
    2. ' l' → logprob: -7.375947952270508
    3. 'f' → logprob: -8.375947952270508
    4. 'Fraction' → logprob: -10.625947952270508
    5. 'str' → logprob: -10.875947952270508
    6. 'float' → logprob: -11.500947952270508
    7. '   ' → logprob: -11.625947952270508
    8. 'frac' → logprob: -11.875947952270508
    9. '(l' → logprob: -12.000947952270508
    10. 'fraction' → logprob: -12.250947952270508

Token 500: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.003666348522529006
    2. '_n' → logprob: -5.628666400909424
    3. '_c' → logprob: -10.378665924072266
    4. 'c' → logprob: -10.628665924072266
    5. 'cn' → logprob: -12.628665924072266
    6. 'm' → logprob: -12.753665924072266
    7. 'cms' → logprob: -13.253665924072266
    8. '_cm' → logprob: -13.753665924072266
    9. '_m' → logprob: -14.628665924072266
    10. 'n' → logprob: -14.753665924072266

Token 501: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -5.319370302458992e-06
    2. 'n' → logprob: -13.375005722045898
    3. '_l' → logprob: -13.625005722045898
    4. '\' → logprob: -14.625005722045898
    5. '(n' → logprob: -14.625005722045898
    6. '_t' → logprob: -14.875005722045898
    7. 'T' → logprob: -15.125005722045898
    8. '(l' → logprob: -15.250005722045898
    9. '```' → logprob: -16.0000057220459
    10. '(' → logprob: -16.1250057220459

Token 502: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.4529767334461212
    2. ' //' → logprob: -1.7029767036437988
    3. '/' → logprob: -2.202976703643799
    4. '//' → logprob: -2.702976703643799
    5. '/g' → logprob: -5.702976703643799
    6. '   ' → logprob: -8.077977180480957
    7. 'g' → logprob: -9.077977180480957
    8. 'print' → logprob: -9.327977180480957
    9. 'import' → logprob: -9.327977180480957
    10. ' ' → logprob: -9.577977180480957

Token 503: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -6.704273118884885e-07
    2. '(g' → logprob: -14.500000953674316
    3. ' gcd' → logprob: -17.125
    4. '(' → logprob: -17.625
    5. '   ' → logprob: -17.75
    6. '_g' → logprob: -19.25
    7. ' ' → logprob: -19.75
    8. ' (' → logprob: -19.75
    9. '```' → logprob: -19.75
    10. 'float' → logprob: -20.125

Token 504: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -5.836499985889532e-05
    2. 'd' → logprob: -9.7500581741333
    3. '```' → logprob: -18.375059127807617
    4. '_g' → logprob: -18.750059127807617
    5. '_' → logprob: -19.000059127807617
    6. '\' → logprob: -19.125059127807617
    7. 's' → logprob: -19.875059127807617
    8. '(' → logprob: -20.125059127807617
    9. 'g' → logprob: -20.125059127807617
    10. '[' → logprob: -20.500059127807617

Token 505: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43042728304862976
    2. '
' → logprob: -1.0554273128509521
    3. 'print' → logprob: -7.430427074432373
    4. '        
' → logprob: -8.180427551269531
    5. '<|end|>' → logprob: -8.680427551269531
    6. ',' → logprob: -8.680427551269531
    7. '
' → logprob: -9.055427551269531
    8. '  
' → logprob: -9.180427551269531
    9. ',
' → logprob: -9.555427551269531
    10. '   ' → logprob: -9.805427551269531

Token 506: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0936126857995987
    2. '
' → logprob: -2.4686126708984375
    3. 'print' → logprob: -6.2186126708984375
    4. '        
' → logprob: -6.2186126708984375
    5. '    
' → logprob: -7.8436126708984375
    6. '  
' → logprob: -9.218612670898438
    7. '   ' → logprob: -10.218612670898438
    8. '
' → logprob: -10.593612670898438
    9. '		
' → logprob: -10.968612670898438
    10. ' print' → logprob: -11.218612670898438

Token 507: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00278645777143538
    2. '   ' → logprob: -6.752786636352539
    3. '       ' → logprob: -7.252786636352539
    4. 'T' → logprob: -7.627786636352539
    5. 'result' → logprob: -8.252786636352539
    6. ' print' → logprob: -9.252786636352539
    7. 'if' → logprob: -11.002786636352539
    8. 'res' → logprob: -11.252786636352539
    9. '```' → logprob: -11.252786636352539
    10. 'ans' → logprob: -11.752786636352539

Token 508: ' Now' (ID: 6549)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6601472496986389
    2. 'T' → logprob: -1.0351471900939941
    3. 'from' → logprob: -2.910147190093994
    4. '       ' → logprob: -4.410147190093994
    5. 'ans' → logprob: -4.535147190093994
    6. 'result' → logprob: -4.535147190093994
    7. 'if' → logprob: -4.785147190093994
    8. '   ' → logprob: -4.910147190093994
    9. 't' → logprob: -5.035147190093994
    10. 'res' → logprob: -5.285147190093994

Token 509: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0266672745347023
    2. ' from' → logprob: -5.15166711807251
    3. 'import' → logprob: -5.15166711807251
    4. ' import' → logprob: -5.15166711807251
    5. 'from' → logprob: -5.77666711807251
    6. ' T' → logprob: -6.15166711807251
    7. ' t' → logprob: -7.65166711807251
    8. ' print' → logprob: -8.026667594909668
    9. ' ans' → logprob: -8.276667594909668
    10. ' result' → logprob: -8.401667594909668

Token 510: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5561028122901917
    2. 't' → logprob: -1.9311027526855469
    3. 'x' → logprob: -2.806102752685547
    4. ' i' → logprob: -3.181102752685547
    5. 'T' → logprob: -3.306102752685547
    6. 'ans' → logprob: -3.806102752685547
    7. ' t' → logprob: -3.931102752685547
    8. 'k' → logprob: -4.556102752685547
    9. 'den' → logprob: -4.556102752685547
    10. '_i' → logprob: -4.556102752685547

Token 511: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.24773836135864258
    2. ' i' → logprob: -1.7477383613586426
    3. 't' → logprob: -4.622738361358643
    4. 'v' → logprob: -4.622738361358643
    5. ' time' → logprob: -4.872738361358643
    6. ' t' → logprob: -5.372738361358643
    7. 'time' → logprob: -5.747738361358643
    8. '_i' → logprob: -5.872738361358643
    9. ' v' → logprob: -5.997738361358643
    10. 'T' → logprob: -6.497738361358643

Token 512: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24866348505020142
    2. ',' → logprob: -1.8736634254455566
    3. ':' → logprob: -2.9986634254455566
    4. '           ' → logprob: -4.248663425445557
    5. '   ' → logprob: -6.623663425445557
    6. ':
' → logprob: -8.248663902282715
    7. '	   ' → logprob: -8.373663902282715
    8. ' ,' → logprob: -9.248663902282715
    9. ' if' → logprob: -9.248663902282715
    10. ' =' → logprob: -9.748663902282715

Token 513: ' rounds' (ID: 37740)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9890193343162537
    2. '       ' → logprob: -1.2390193939208984
    3. '           ' → logprob: -2.7390193939208984
    4. 'print' → logprob: -2.8640193939208984
    5. ' if' → logprob: -3.1140193939208984
    6. 'time' → logprob: -3.2390193939208984
    7. 'val' → logprob: -4.114019393920898
    8. 't' → logprob: -4.239019393920898
    9. 'numer' → logprob: -4.614019393920898
    10. 'ans' → logprob: -4.614019393920898

Token 514: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7427074313163757
    2. '       ' → logprob: -1.8677074909210205
    3. '=' → logprob: -1.9927074909210205
    4. 'for' → logprob: -2.1177074909210205
    5. ' for' → logprob: -3.6177074909210205
    6. '           ' → logprob: -4.367707252502441
    7. '(' → logprob: -4.742707252502441
    8. '_needed' → logprob: -4.867707252502441
    9. 'times' → logprob: -4.992707252502441
    10. ',' → logprob: -5.117707252502441

Token 515: ' T' (ID: 353)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7178220152854919
    2. 'math' → logprob: -1.7178220748901367
    3. 'l' → logprob: -1.8428220748901367
    4. '(l' → logprob: -2.3428220748901367
    5. '(int' → logprob: -3.4678220748901367
    6. 'round' → logprob: -3.8428220748901367
    7. '(math' → logprob: -4.467822074890137
    8. 'T' → logprob: -5.592822074890137
    9. '(T' → logprob: -5.967822074890137
    10. 'times' → logprob: -6.467822074890137

Token 516: ' /' (ID: 820)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6467800736427307
    2. '*' → logprob: -0.7717800736427307
    3. '*l' → logprob: -4.396780014038086
    4. '*T' → logprob: -7.271780014038086
    5. 'times' → logprob: -8.521780014038086
    6. '_times' → logprob: -9.146780014038086
    7. '*(' → logprob: -9.271780014038086
    8. ' =' → logprob: -9.396780014038086
    9. '*v' → logprob: -9.521780014038086
    10. '//' → logprob: -9.521780014038086

Token 517: ' times' (ID: 4238)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.0012086842907592654
    2. '(times' → logprob: -7.001208782196045
    3. ' times' → logprob: -8.376208305358887
    4. '(L' → logprob: -9.876208305358887
    5. ' (' → logprob: -12.126208305358887
    6. '(' → logprob: -12.876208305358887
    7. '(t' → logprob: -13.126208305358887
    8. 'time' → logprob: -13.376208305358887
    9. '   ' → logprob: -14.376208305358887
    10. 't' → logprob: -14.626208305358887

Token 518: '[i' (ID: 1768)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05474809557199478
    2. ' =' → logprob: -3.554748058319092
    3. ' for' → logprob: -4.804748058319092
    4. 'for' → logprob: -4.804748058319092
    5. '=' → logprob: -5.429748058319092
    6. '   ' → logprob: -6.929748058319092
    7. ',' → logprob: -7.554748058319092
    8. '[i' → logprob: -7.929748058319092
    9. '           ' → logprob: -8.05474853515625
    10. ' (' → logprob: -8.55474853515625

Token 519: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3930388391017914
    2. '[i' → logprob: -1.5180388689041138
    3. ']' → logprob: -2.393038749694824
    4. ' *' → logprob: -5.268038749694824
    5. '       ' → logprob: -6.268038749694824
    6. ' )' → logprob: -6.518038749694824
    7. '   ' → logprob: -7.018038749694824
    8. ')*' → logprob: -7.268038749694824
    9. '*' → logprob: -7.643038749694824
    10. '])' → logprob: -7.893038749694824

Token 520: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014421581290662289
    2. '
' → logprob: -4.389421463012695
    3. '        
' → logprob: -7.389421463012695
    4. ' for' → logprob: -7.764421463012695
    5. ',' → logprob: -8.514421463012695
    6. 'for' → logprob: -8.639421463012695
    7. ' =' → logprob: -9.139421463012695
    8. '   ' → logprob: -9.514421463012695
    9. '           ' → logprob: -10.014421463012695
    10. '  
' → logprob: -10.389421463012695

Token 521: ' (' (ID: 350)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.4650011956691742
    2. 'l' → logprob: -1.0900012254714966
    3. 'int' → logprob: -4.090001106262207
    4. '(int' → logprob: -4.465001106262207
    5. 'times' → logprob: -6.465001106262207
    6. 'round' → logprob: -6.590001106262207
    7. '(V' → logprob: -6.840001106262207
    8. ' (' → logprob: -7.215001106262207
    9. 'math' → logprob: -7.215001106262207
    10. '(' → logprob: -7.715001106262207

Token 522: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.25253453850746155
    2. '(l' → logprob: -1.5025345087051392
    3. ' (' → logprob: -8.127534866333008
    4. ' l' → logprob: -8.877534866333008
    5. '   ' → logprob: -10.127534866333008
    6. 'times' → logprob: -10.127534866333008
    7. 't' → logprob: -10.377534866333008
    8. '(' → logprob: -11.127534866333008
    9. 'T' → logprob: -11.377534866333008
    10. 'round' → logprob: -12.627534866333008

Token 523: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -1.5048530030981055e-06
    2. 'l' → logprob: -14.000001907348633
    3. 'cms' → logprob: -14.875001907348633
    4. 'c' → logprob: -16.250001907348633
    5. 'cn' → logprob: -16.375001907348633
    6. 'm' → logprob: -18.250001907348633
    7. 'n' → logprob: -18.375001907348633
    8. '```' → logprob: -18.500001907348633
    9. 'cmb' → logprob: -18.750001907348633
    10. '(l' → logprob: -18.875001907348633

Token 524: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -7.896309739408025e-07
    2. 'n' → logprob: -14.625000953674316
    3. '(n' → logprob: -15.625000953674316
    4. '```' → logprob: -18.25
    5. '[n' → logprob: -19.0
    6. '(' → logprob: -19.125
    7. '\' → logprob: -19.5
    8. ')' → logprob: -19.5
    9. '[' → logprob: -19.625
    10. '_l' → logprob: -19.625

Token 525: ' /' (ID: 820)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.05611907318234444
    2. ' *' → logprob: -2.931118965148926
    3. '//' → logprob: -7.181118965148926
    4. ' //' → logprob: -8.306118965148926
    5. ')' → logprob: -9.056118965148926
    6. '/' → logprob: -10.181118965148926
    7. ' /' → logprob: -11.056118965148926
    8. ' ' → logprob: -11.431118965148926
    9. '   ' → logprob: -11.681118965148926
    10. '```' → logprob: -11.931118965148926

Token 526: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.04081735759973526
    2. 'V' → logprob: -4.0408172607421875
    3. '(g' → logprob: -4.7908172607421875
    4. '(V' → logprob: -5.0408172607421875
    5. 'L' → logprob: -5.6658172607421875
    6. '(L' → logprob: -6.4158172607421875
    7. '1' → logprob: -7.1658172607421875
    8. '(' → logprob: -7.2908172607421875
    9. '(n' → logprob: -8.665817260742188
    10. 'n' → logprob: -8.790817260742188

Token 527: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.00010998018842656165
    2. 'd' → logprob: -9.125109672546387
    3. '   ' → logprob: -15.000109672546387
    4. '_n' → logprob: -15.500109672546387
    5. '_v' → logprob: -16.250110626220703
    6. '_t' → logprob: -16.250110626220703
    7. ')' → logprob: -17.000110626220703
    8. '[' → logprob: -17.125110626220703
    9. 't' → logprob: -17.375110626220703
    10. 'v' → logprob: -17.375110626220703

Token 528: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018066724296659231
    2. '*' → logprob: -6.876806735992432
    3. ' )' → logprob: -7.626806735992432
    4. ')*' → logprob: -8.376806259155273
    5. ')*(' → logprob: -10.376806259155273
    6. ')/(' → logprob: -11.376806259155273
    7. ' *' → logprob: -12.126806259155273
    8. ')//' → logprob: -12.501806259155273
    9. '*)' → logprob: -12.751806259155273
    10. ')/' → logprob: -14.626806259155273

Token 529: ' /' (ID: 820)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.43246617913246155
    2. '*' → logprob: -1.0574661493301392
    3. ' /' → logprob: -5.93246603012085
    4. ' ' → logprob: -8.557466506958008
    5. '   ' → logprob: -8.682466506958008
    6. ')' → logprob: -8.807466506958008
    7. '/' → logprob: -9.057466506958008
    8. ' //' → logprob: -9.307466506958008
    9. '       ' → logprob: -9.432466506958008
    10. ' ' → logprob: -9.932466506958008

Token 530: ' (' (ID: 350)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.05093158781528473
    2. 'times' → logprob: -3.050931692123413
    3. ' (' → logprob: -6.550931453704834
    4. '(times' → logprob: -7.300931453704834
    5. ' times' → logprob: -9.300931930541992
    6. '(' → logprob: -9.550931930541992
    7. '(l' → logprob: -10.425931930541992
    8. '((' → logprob: -11.425931930541992
    9. '   ' → logprob: -11.675931930541992
    10. '(T' → logprob: -12.175931930541992

Token 531: 'L' (ID: 43)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.0009842199506238103
    2. 'times' → logprob: -7.125984191894531
    3. ' (' → logprob: -8.875984191894531
    4. '(times' → logprob: -11.250984191894531
    5. '(' → logprob: -11.625984191894531
    6. '((' → logprob: -12.250984191894531
    7. ' times' → logprob: -12.375984191894531
    8. 'L' → logprob: -13.000984191894531
    9. '   ' → logprob: -13.625984191894531
    10. 'time' → logprob: -14.000984191894531

Token 532: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.200166469876422e-06
    2. '[' → logprob: -13.000004768371582
    3. 'i' → logprob: -13.000004768371582
    4. ' [' → logprob: -16.2500057220459
    5. '_i' → logprob: -16.3750057220459
    6. '(i' → logprob: -16.6250057220459
    7. '
' → logprob: -16.8750057220459
    8. 's' → logprob: -17.1250057220459
    9. '[I' → logprob: -17.1250057220459
    10. '/' → logprob: -17.2500057220459

Token 533: ']/' (ID: 18500)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.01818096451461315
    2. ' /' → logprob: -4.768180847167969
    3. '/V' → logprob: -4.768180847167969
    4. '[i' → logprob: -7.393180847167969
    5. '/i' → logprob: -7.893180847167969
    6. '/v' → logprob: -11.768180847167969
    7. '/
' → logprob: -12.018180847167969
    8. '/U' → logprob: -12.893180847167969
    9. '/L' → logprob: -13.018180847167969
    10. ')' → logprob: -13.143180847167969

Token 534: 'V' (ID: 53)
  Prédit: 'V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.0001817297888919711
    2. ' V' → logprob: -8.625182151794434
    3. '   ' → logprob: -13.500182151794434
    4. '(' → logprob: -15.875182151794434
    5. ' ' → logprob: -16.000181198120117
    6. '	V' → logprob: -16.250181198120117
    7. '           ' → logprob: -16.250181198120117
    8. '       ' → logprob: -16.875181198120117
    9. 'Vi' → logprob: -17.000181198120117
    10. '    ' → logprob: -17.250181198120117

Token 535: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.292907877039397e-06
    2. '[' → logprob: -13.62500286102295
    3. 'i' → logprob: -13.62500286102295
    4. '```' → logprob: -15.37500286102295
    5. '[I' → logprob: -15.75000286102295
    6. ')' → logprob: -16.250003814697266
    7. '_i' → logprob: -16.625003814697266
    8. '(i' → logprob: -16.875003814697266
    9. ' [' → logprob: -17.000003814697266
    10. '\[' → logprob: -17.250003814697266

Token 536: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020454595796763897
    2. ')=' → logprob: -6.252045631408691
    3. ' )' → logprob: -9.252045631408691
    4. ')
' → logprob: -11.877045631408691
    5. '=' → logprob: -12.127045631408691
    6. '*)' → logprob: -13.502045631408691
    7. ')*' → logprob: -13.627045631408691
    8. '）' → logprob: -14.002045631408691
    9. ')

' → logprob: -14.127045631408691
    10. '))' → logprob: -14.252045631408691

Token 537: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.042592134326696396
    2. ' =' → logprob: -3.5425920486450195
    3. '=' → logprob: -4.6675920486450195
    4. '           ' → logprob: -6.6675920486450195
    5. ',' → logprob: -7.2925920486450195
    6. '
' → logprob: -8.41759204864502
    7. 'times' → logprob: -8.79259204864502
    8. ' for' → logprob: -9.04259204864502
    9. ' (' → logprob: -9.16759204864502
    10. 'for' → logprob: -9.16759204864502

Token 538: ' (' (ID: 350)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.47482332587242126
    2. ' (' → logprob: -0.9748233556747437
    3. '((' → logprob: -7.724823474884033
    4. 'l' → logprob: -8.599822998046875
    5. '(' → logprob: -9.974822998046875
    6. ' l' → logprob: -10.474822998046875
    7. ' ((' → logprob: -10.849822998046875
    8. '   ' → logprob: -10.974822998046875
    9. ' ' → logprob: -12.599822998046875
    10. '  ' → logprob: -13.974822998046875

Token 539: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.018337000161409378
    2. '(l' → logprob: -4.018336772918701
    3. ' l' → logprob: -8.76833724975586
    4. ' (' → logprob: -10.76833724975586
    5. '(' → logprob: -12.39333724975586
    6. '   ' → logprob: -12.64333724975586
    7. '	l' → logprob: -14.26833724975586
    8. '((' → logprob: -14.89333724975586
    9. '  ' → logprob: -15.39333724975586
    10. ' ' → logprob: -15.76833724975586

Token 540: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -1.9361264946837764e-07
    2. 'cms' → logprob: -16.5
    3. ' cm' → logprob: -17.5
    4. 'c' → logprob: -18.5
    5. 'cmp' → logprob: -19.0
    6. 'm' → logprob: -19.375
    7. '_cm' → logprob: -19.75
    8. 'mc' → logprob: -19.875
    9. 'cn' → logprob: -20.375
    10. 'l' → logprob: -20.75

Token 541: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -3.531315314830863e-06
    2. '```' → logprob: -12.875003814697266
    3. 'n' → logprob: -15.000003814697266
    4. '\' → logprob: -15.250003814697266
    5. ' _' → logprob: -16.000003814697266
    6. '_i' → logprob: -16.125003814697266
    7. ')_' → logprob: -16.875003814697266
    8. '   ' → logprob: -17.625003814697266
    9. '`' → logprob: -17.750003814697266
    10. '
' → logprob: -18.125003814697266

Token 542: ' /' (ID: 820)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5233545303344727
    2. '*' → logprob: -0.8983545303344727
    3. ' /' → logprob: -9.398354530334473
    4. ' ' → logprob: -10.148354530334473
    5. ')' → logprob: -10.273354530334473
    6. '/' → logprob: -10.523354530334473
    7. ' ' → logprob: -10.773354530334473
    8. ' //' → logprob: -11.523354530334473
    9. '//' → logprob: -12.148354530334473
    10. ' )' → logprob: -12.773354530334473

Token 543: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0034616757184267044
    2. ' gcd' → logprob: -5.753461837768555
    3. '(g' → logprob: -8.253461837768555
    4. '(' → logprob: -12.003461837768555
    5. ' (' → logprob: -12.378461837768555
    6. '   ' → logprob: -12.628461837768555
    7. 'gcc' → logprob: -13.628461837768555
    8. ' ' → logprob: -13.628461837768555
    9. '  ' → logprob: -14.128461837768555
    10. '_g' → logprob: -14.128461837768555

Token 544: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.00031067515374161303
    2. '_i' → logprob: -8.500310897827148
    3. '[i' → logprob: -10.000310897827148
    4. 'd' → logprob: -10.125310897827148
    5. '_n' → logprob: -11.250310897827148
    6. '_t' → logprob: -13.625310897827148
    7. '   ' → logprob: -13.625310897827148
    8. '_a' → logprob: -13.750310897827148
    9. 'i' → logprob: -14.250310897827148
    10. '(i' → logprob: -14.625310897827148

Token 545: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007634900975972414
    2. ' )' → logprob: -5.382635116577148
    3. ')*' → logprob: -6.632635116577148
    4. '*' → logprob: -6.882635116577148
    5. ' *' → logprob: -7.382635116577148
    6. ')*(' → logprob: -10.382635116577148
    7. '   ' → logprob: -12.382635116577148
    8. '*)' → logprob: -12.507635116577148
    9. ')/(' → logprob: -13.257635116577148
    10. ' ' → logprob: -13.382635116577148

Token 546: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.22591926157474518
    2. '*' → logprob: -1.600919246673584
    3. ')' → logprob: -7.975919246673584
    4. ' ' → logprob: -10.350919723510742
    5. ' ' → logprob: -10.725919723510742
    6. '   ' → logprob: -10.850919723510742
    7. '       ' → logprob: -11.100919723510742
    8. '**' → logprob: -11.350919723510742
    9. ')*' → logprob: -11.350919723510742
    10. '*(' → logprob: -11.350919723510742

Token 547: ' (' (ID: 350)
  Prédit: '(V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.0006547740194946527
    2. ' (' → logprob: -8.000655174255371
    3. 'V' → logprob: -8.375655174255371
    4. '(' → logprob: -9.375655174255371
    5. '(v' → logprob: -13.625655174255371
    6. '((' → logprob: -14.000655174255371
    7. '   ' → logprob: -14.625655174255371
    8. ' V' → logprob: -15.125655174255371
    9. '(Q' → logprob: -16.000654220581055
    10. '(
' → logprob: -16.125654220581055

Token 548: 'V' (ID: 53)
  Prédit: 'V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.012758140452206135
    2. '(V' → logprob: -4.387758255004883
    3. ' V' → logprob: -8.512758255004883
    4. '(' → logprob: -10.887758255004883
    5. ' (' → logprob: -11.262758255004883
    6. ')V' → logprob: -11.637758255004883
    7. 'Vi' → logprob: -12.512758255004883
    8. ')' → logprob: -13.887758255004883
    9. '   ' → logprob: -14.387758255004883
    10. '	V' → logprob: -14.637758255004883

Token 549: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.676292231422849e-05
    2. '[' → logprob: -11.375017166137695
    3. '[I' → logprob: -12.250017166137695
    4. ' [' → logprob: -15.500017166137695
    5. ')[' → logprob: -16.625017166137695
    6. ')' → logprob: -16.625017166137695
    7. '```' → logprob: -17.250017166137695
    8. '(i' → logprob: -17.875017166137695
    9. '[
' → logprob: -17.875017166137695
    10. 'i' → logprob: -18.125017166137695

Token 550: ']/' (ID: 18500)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00017314712749794126
    2. ')' → logprob: -9.000173568725586
    3. '[' → logprob: -11.000173568725586
    4. ']' → logprob: -11.375173568725586
    5. ' /' → logprob: -12.000173568725586
    6. ' [' → logprob: -12.750173568725586
    7. '/' → logprob: -12.750173568725586
    8. '//' → logprob: -13.125173568725586
    9. '])' → logprob: -13.250173568725586
    10. '```' → logprob: -13.500173568725586

Token 551: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0006308287265710533
    2. ' L' → logprob: -7.375630855560303
    3. 'Li' → logprob: -12.625630378723145
    4. 'V' → logprob: -15.125630378723145
    5. 'l' → logprob: -15.125630378723145
    6. ' ' → logprob: -16.00063133239746
    7. ')' → logprob: -16.12563133239746
    8. '   ' → logprob: -16.12563133239746
    9. '```' → logprob: -16.37563133239746
    10. '	L' → logprob: -16.87563133239746

Token 552: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. 'i' → logprob: -15.500000953674316
    3. '[' → logprob: -15.875000953674316
    4. '[I' → logprob: -16.625
    5. '(i' → logprob: -18.0
    6. '```' → logprob: -18.25
    7. '{i' → logprob: -18.375
    8. '   ' → logprob: -18.375
    9. ')' → logprob: -19.125
    10. '_i' → logprob: -19.25

Token 553: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019364648323971778
    2. '[i' → logprob: -9.00019359588623
    3. ' )' → logprob: -9.87519359588623
    4. ')i' → logprob: -12.37519359588623
    5. ')`' → logprob: -12.50019359588623
    6. '))' → logprob: -13.00019359588623
    7. '   ' → logprob: -13.62519359588623
    8. ')=' → logprob: -13.87519359588623
    9. ')**' → logprob: -13.87519359588623
    10. ')*' → logprob: -14.00019359588623

Token 554: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027408043388277292
    2. ' for' → logprob: -6.752740859985352
    3. 'for' → logprob: -7.252740859985352
    4. '           ' → logprob: -7.877740859985352
    5. '
' → logprob: -9.127740859985352
    6. ',' → logprob: -9.377740859985352
    7. '        
' → logprob: -9.752740859985352
    8. 'print' → logprob: -10.252740859985352
    9. '   ' → logprob: -10.377740859985352
    10. 'counts' → logprob: -10.627740859985352

Token 555: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005446485709398985
    2. 'round' → logprob: -5.755446434020996
    3. ' rounds' → logprob: -6.755446434020996
    4. 'for' → logprob: -7.880446434020996
    5. 'r' → logprob: -9.130446434020996
    6. ' for' → logprob: -9.255446434020996
    7. 'total' → logprob: -9.255446434020996
    8. 'result' → logprob: -9.380446434020996
    9. '   ' → logprob: -9.505446434020996
    10. 'results' → logprob: -9.880446434020996

Token 556: ' =' (ID: 314)
  Prédit: 'round'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'round' → logprob: -0.32781267166137695
    2. '       ' → logprob: -1.452812671661377
    3. ' rounds' → logprob: -3.702812671661377
    4. 'for' → logprob: -4.952812671661377
    5. 'result' → logprob: -5.327812671661377
    6. 'res' → logprob: -5.952812671661377
    7. ' for' → logprob: -6.702812671661377
    8. 'total' → logprob: -6.702812671661377
    9. 'results' → logprob: -7.077812671661377
    10. 'r' → logprob: -7.077812671661377

Token 557: ' (' (ID: 350)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.4488508403301239
    2. ' (' → logprob: -1.3238508701324463
    3. 'l' → logprob: -2.6988508701324463
    4. ' l' → logprob: -4.448850631713867
    5. '[l' → logprob: -4.573850631713867
    6. '[(' → logprob: -5.573850631713867
    7. ' [' → logprob: -6.823850631713867
    8. ' [(' → logprob: -7.323850631713867
    9. '((' → logprob: -8.448850631713867
    10. '(' → logprob: -8.823850631713867

Token 558: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0024609139654785395
    2. '(l' → logprob: -6.252460956573486
    3. ' l' → logprob: -7.627460956573486
    4. ' (' → logprob: -10.877460479736328
    5. '   ' → logprob: -11.377460479736328
    6. 'round' → logprob: -12.752460479736328
    7. '(' → logprob: -13.377460479736328
    8. 'times' → logprob: -13.814960479736328
    9. 'str' → logprob: -13.939960479736328
    10. ' ' → logprob: -14.314960479736328

Token 559: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -1.2664456789934775e-06
    2. 'cmp' → logprob: -14.000000953674316
    3. 'cms' → logprob: -15.500000953674316
    4. 'c' → logprob: -17.000001907348633
    5. ' cm' → logprob: -17.125001907348633
    6. 'cmb' → logprob: -18.250001907348633
    7. '_cm' → logprob: -18.500001907348633
    8. 'm' → logprob: -18.500001907348633
    9. 'cmd' → logprob: -18.625001907348633
    10. '   ' → logprob: -19.250001907348633

Token 560: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -7.3458322731312364e-06
    2. ' _' → logprob: -13.125007629394531
    3. ')_' → logprob: -13.500007629394531
    4. '_' → logprob: -13.750007629394531
    5. '\' → logprob: -14.000007629394531
    6. '```' → logprob: -14.625007629394531
    7. '
' → logprob: -15.000007629394531
    8. '_i' → logprob: -15.250007629394531
    9. ')' → logprob: -15.625007629394531
    10. '}_' → logprob: -16.00000762939453

Token 561: ' *' (ID: 425)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.21775111556053162
    2. '//' → logprob: -2.0927510261535645
    3. '*' → logprob: -3.0927510261535645
    4. ' *' → logprob: -3.8427510261535645
    5. ' /' → logprob: -5.8427510261535645
    6. '/' → logprob: -6.7177510261535645
    7. ')' → logprob: -7.5927510261535645
    8. ' ' → logprob: -7.7177510261535645
    9. ' ' → logprob: -8.592751502990723
    10. ' )' → logprob: -9.842751502990723

Token 562: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.006054759491235018
    2. ' V' → logprob: -5.131054878234863
    3. '(V' → logprob: -9.381054878234863
    4. 'g' → logprob: -11.256054878234863
    5. ' (' → logprob: -11.506054878234863
    6. '(' → logprob: -11.881054878234863
    7. '(g' → logprob: -12.256054878234863
    8. '   ' → logprob: -13.131054878234863
    9. ' ' → logprob: -13.381054878234863
    10. 'Vi' → logprob: -13.381054878234863

Token 563: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[I' → logprob: -16.625
    3. '[' → logprob: -16.875
    4. 'i' → logprob: -18.625
    5. ' [' → logprob: -19.625
    6. ')' → logprob: -20.125
    7. '```' → logprob: -20.375
    8. '(i' → logprob: -20.375
    9. '   ' → logprob: -21.125
    10. '_i' → logprob: -21.125

Token 564: '])' (ID: 4636)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.04033876210451126
    2. ')' → logprob: -3.5403387546539307
    3. ')//' → logprob: -4.66533899307251
    4. '//' → logprob: -7.66533899307251
    5. ' //' → logprob: -8.415338516235352
    6. ')/' → logprob: -8.665338516235352
    7. ' )' → logprob: -9.165338516235352
    8. ')/(' → logprob: -9.415338516235352
    9. '[' → logprob: -10.540338516235352
    10. ' ' → logprob: -11.790338516235352

Token 565: ' /' (ID: 820)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '//' → logprob: -0.4744760990142822
    2. ' //' → logprob: -0.9744760990142822
    3. ')' → logprob: -9.224475860595703
    4. '       ' → logprob: -9.974475860595703
    5. ')//' → logprob: -10.224475860595703
    6. ' *' → logprob: -10.349475860595703
    7. '*' → logprob: -10.599475860595703
    8. '   ' → logprob: -10.849475860595703
    9. '[i' → logprob: -10.974475860595703
    10. ' ' → logprob: -11.099475860595703

Token 566: ' (' (ID: 350)
  Prédit: '(g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -9.400689305039123e-05
    2. '(' → logprob: -9.750094413757324
    3. ' (' → logprob: -10.750094413757324
    4. 'g' → logprob: -11.375094413757324
    5. '(l' → logprob: -13.875094413757324
    6. '(G' → logprob: -14.375094413757324
    7. '(gc' → logprob: -14.500094413757324
    8. '(L' → logprob: -15.000094413757324
    9. '((' → logprob: -15.000094413757324
    10. '(gl' → logprob: -16.125093460083008

Token 567: 'g' (ID: 70)
  Prédit: '(g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.022307325154542923
    2. 'g' → logprob: -3.8973073959350586
    3. '(' → logprob: -7.022307395935059
    4. ' (' → logprob: -7.147307395935059
    5. ' gcd' → logprob: -9.647307395935059
    6. '((' → logprob: -12.397307395935059
    7. '(gc' → logprob: -12.522307395935059
    8. '(gl' → logprob: -12.897307395935059
    9. '(
' → logprob: -13.272307395935059
    10. '(l' → logprob: -14.147307395935059

Token 568: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -9.448370838072151e-05
    2. 'c' → logprob: -9.500094413757324
    3. 'cdf' → logprob: -11.000094413757324
    4. 'cdn' → logprob: -14.750094413757324
    5. ' gcd' → logprob: -14.875094413757324
    6. '(cd' → logprob: -15.125094413757324
    7. 'cf' → logprob: -15.375094413757324
    8. '_cd' → logprob: -15.750094413757324
    9. '(c' → logprob: -15.875094413757324
    10. '   ' → logprob: -15.875094413757324

Token 569: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -2.935296834039036e-06
    2. 'd' → logprob: -12.87500286102295
    3. '_' → logprob: -16.250003814697266
    4. '_g' → logprob: -16.375003814697266
    5. 'g' → logprob: -17.250003814697266
    6. '_c' → logprob: -17.750003814697266
    7. '```' → logprob: -18.250003814697266
    8. '}_' → logprob: -18.500003814697266
    9. '\' → logprob: -18.875003814697266
    10. ')_' → logprob: -18.875003814697266

Token 570: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.20204947888851166
    2. ' *' → logprob: -1.7020494937896729
    3. 'L' → logprob: -7.952049255371094
    4. ')' → logprob: -8.952049255371094
    5. ' L' → logprob: -9.827049255371094
    6. ' ' → logprob: -10.827049255371094
    7. '*l' → logprob: -10.827049255371094
    8. '   ' → logprob: -11.702049255371094
    9. '*i' → logprob: -11.702049255371094
    10. '_' → logprob: -11.827049255371094

Token 571: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.00015860427811276168
    2. ' L' → logprob: -8.750158309936523
    3. '   ' → logprob: -16.625158309936523
    4. ' ' → logprob: -17.875158309936523
    5. ')' → logprob: -18.250158309936523
    6. '(' → logprob: -18.500158309936523
    7. 'l' → logprob: -18.625158309936523
    8. '  ' → logprob: -19.125158309936523
    9. '    ' → logprob: -19.375158309936523
    10. '```' → logprob: -19.375158309936523

Token 572: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -13.250001907348633
    3. 'i' → logprob: -15.375001907348633
    4. '[I' → logprob: -16.875001907348633
    5. '_i' → logprob: -18.500001907348633
    6. '{i' → logprob: -18.750001907348633
    7. '(i' → logprob: -18.750001907348633
    8. '```' → logprob: -18.875001907348633
    9. ')' → logprob: -19.000001907348633
    10. ' [' → logprob: -19.125001907348633

Token 573: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.804671233519912e-05
    2. ' )' → logprob: -10.12508773803711
    3. ')
' → logprob: -11.12508773803711
    4. '))' → logprob: -11.62508773803711
    5. '])' → logprob: -11.75008773803711
    6. ')]' → logprob: -13.00008773803711
    7. '       ' → logprob: -13.00008773803711
    8. '   ' → logprob: -13.12508773803711
    9. ']' → logprob: -13.25008773803711
    10. '[i' → logprob: -13.62508773803711

Token 574: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006272409111261368
    2. 'for' → logprob: -5.756272315979004
    3. '        
' → logprob: -6.506272315979004
    4. '
' → logprob: -7.256272315979004
    5. ' for' → logprob: -8.381272315979004
    6. '   ' → logprob: -9.006272315979004
    7. '           ' → logprob: -9.381272315979004
    8. 'results' → logprob: -9.506272315979004
    9. 'result' → logprob: -9.506272315979004
    10. 'print' → logprob: -9.631272315979004

Token 575: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9204870462417603
    2. 'for' → logprob: -0.9204870462417603
    3. 'result' → logprob: -2.2954869270324707
    4. 'round' → logprob: -3.2954869270324707
    5. 'res' → logprob: -3.6704869270324707
    6. 'results' → logprob: -3.9204869270324707
    7. 'total' → logprob: -4.920486927032471
    8. 'counts' → logprob: -6.045486927032471
    9. 'answers' → logprob: -6.295486927032471
    10. 'ans' → logprob: -6.295486927032471

Token 576: ' compute' (ID: 23864)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.0473476648330688
    2. 'round' → logprob: -1.0473476648330688
    3. 'ans' → logprob: -2.4223475456237793
    4. 'for' → logprob: -2.9223475456237793
    5. 'result' → logprob: -3.0473475456237793
    6. 'total' → logprob: -3.5473475456237793
    7. 'max' → logprob: -3.7973475456237793
    8. 'results' → logprob: -3.9223475456237793
    9. 'answer' → logprob: -4.672347545623779
    10. 'min' → logprob: -5.047347545623779

Token 577: ' rounds' (ID: 37740)
  Prédit: 'round'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'round' → logprob: -0.2468736469745636
    2. 'res' → logprob: -2.246873617172241
    3. 'ans' → logprob: -3.246873617172241
    4. 'result' → logprob: -3.371873617172241
    5. 'total' → logprob: -4.37187385559082
    6. 'answer' → logprob: -4.87187385559082
    7. 'results' → logprob: -5.74687385559082
    8. 'max' → logprob: -5.87187385559082
    9. '   ' → logprob: -6.24687385559082
    10. 'counts' → logprob: -6.24687385559082

Token 578: ':' (ID: 25)
  Prédit: 'round'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'round' → logprob: -0.02685077302157879
    2. '       ' → logprob: -3.651850700378418
    3. 'for' → logprob: -8.901850700378418
    4. '=' → logprob: -9.401850700378418
    5. '   ' → logprob: -9.651850700378418
    6. 'result' → logprob: -10.026850700378418
    7. ' rounds' → logprob: -10.151850700378418
    8. '```' → logprob: -10.276850700378418
    9. 'total' → logprob: -10.526850700378418
    10. ' =' → logprob: -10.651850700378418

Token 579: ' integer' (ID: 16336)
  Prédit: 'round'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'round' → logprob: -0.022511668503284454
    2. '       ' → logprob: -4.0225114822387695
    3. ' rounds' → logprob: -5.6475114822387695
    4. 'for' → logprob: -8.02251148223877
    5. '   ' → logprob: -8.52251148223877
    6. 'result' → logprob: -9.14751148223877
    7. 'results' → logprob: -9.27251148223877
    8. 'res' → logprob: -10.39751148223877
    9. ' round' → logprob: -10.64751148223877
    10. ' for' → logprob: -11.64751148223877

Token 580: ' per' (ID: 777)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06114841625094414
    2. 'round' → logprob: -3.8111484050750732
    3. ' rounds' → logprob: -4.436148643493652
    4. '
' → logprob: -4.561148643493652
    5. 'for' → logprob: -5.061148643493652
    6. ' for' → logprob: -5.561148643493652
    7. '   ' → logprob: -7.061148643493652
    8. '[]
' → logprob: -7.311148643493652
    9. '(round' → logprob: -7.686148643493652
    10. 's' → logprob: -7.811148643493652

Token 581: ' constraint' (ID: 44762)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2079489827156067
    2. 'formance' → logprob: -2.832948923110962
    3. 'range' → logprob: -3.082948923110962
    4. 'line' → logprob: -4.082949161529541
    5. 'for' → logprob: -4.707949161529541
    6. '_i' → logprob: -4.707949161529541
    7. ' i' → logprob: -4.957949161529541
    8. 'round' → logprob: -4.957949161529541
    9. 'mutation' → logprob: -5.082949161529541
    10. '```' → logprob: -5.207949161529541

Token 582: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33680155873298645
    2. 'round' → logprob: -1.336801528930664
    3. ' rounds' → logprob: -3.836801528930664
    4. 'for' → logprob: -7.461801528930664
    5. ' for' → logprob: -8.336801528930664
    6. ' round' → logprob: -8.586801528930664
    7. '   ' → logprob: -8.711801528930664
    8. '        
' → logprob: -8.711801528930664
    9. 'r' → logprob: -9.461801528930664
    10. '
' → logprob: -9.961801528930664

Token 583: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3736256957054138
    2. 'round' → logprob: -1.2486257553100586
    3. ' rounds' → logprob: -3.8736257553100586
    4. 'for' → logprob: -5.998625755310059
    5. ' for' → logprob: -7.248625755310059
    6. ' round' → logprob: -8.123625755310059
    7. '        
' → logprob: -8.498625755310059
    8. '
' → logprob: -9.498625755310059
    9. '   ' → logprob: -9.498625755310059
    10. '```' → logprob: -9.498625755310059

Token 584: ' for' (ID: 395)
  Prédit: 'round'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'round' → logprob: -0.011693108826875687
    2. '       ' → logprob: -4.636693000793457
    3. 'for' (adapté à ' for') → logprob: -6.386693000793457
    4. ' rounds' → logprob: -8.886693000793457
    5. '   ' → logprob: -9.636693000793457
    6. 'result' → logprob: -10.761693000793457
    7. 'results' → logprob: -12.136693000793457
    8. 'res' → logprob: -12.261693000793457
    9. '
' → logprob: -12.386693000793457
    10. '        
' → logprob: -12.886693000793457

Token 585: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20145270228385925
    2. 'i' → logprob: -1.7014527320861816
    3. '_i' → logprob: -10.826452255249023
    4. '	i' → logprob: -11.576452255249023
    5. ' ' → logprob: -12.951452255249023
    6. '_' → logprob: -13.576452255249023
    7. '   ' → logprob: -13.701452255249023
    8. ' ' → logprob: -13.826452255249023
    9. '(i' → logprob: -14.076452255249023
    10. ' _' → logprob: -14.326452255249023

Token 586: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10023707896471024
    2. 'in' → logprob: -2.3502371311187744
    3. ',' → logprob: -11.725236892700195
    4. ' ' → logprob: -11.975236892700195
    5. '_in' → logprob: -12.475236892700195
    6. 'n' → logprob: -12.600236892700195
    7. '	in' → logprob: -12.725236892700195
    8. '_' → logprob: -13.725236892700195
    9. 's' → logprob: -13.975236892700195
    10. ' ,' → logprob: -14.225236892700195

Token 587: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.000805341056548059
    2. ' range' → logprob: -7.125805377960205
    3. ' ' → logprob: -14.750804901123047
    4. '(range' → logprob: -15.625804901123047
    5. '   ' → logprob: -16.000804901123047
    6. '  ' → logprob: -16.250804901123047
    7. 'in' → logprob: -16.875804901123047
    8. 'r' → logprob: -17.375804901123047
    9. '```' → logprob: -18.000804901123047
    10. ')' → logprob: -18.375804901123047

Token 588: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0013978567440062761
    2. 'n' → logprob: -6.751398086547852
    3. ' (' → logprob: -9.126398086547852
    4. ' n' → logprob: -9.751398086547852
    5. '(' → logprob: -9.751398086547852
    6. '(len' → logprob: -13.251398086547852
    7. ' range' → logprob: -14.751398086547852
    8. 'range' → logprob: -15.126398086547852
    9. '(range' → logprob: -16.87639808654785
    10. '   ' → logprob: -17.50139808654785

Token 589: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006754324771463871
    2. '):
' → logprob: -5.006754398345947
    3. ' ):' → logprob: -10.631753921508789
    4. ':' → logprob: -12.006753921508789
    5. '):
' → logprob: -12.506753921508789
    6. '   ' → logprob: -13.006753921508789
    7. ')' → logprob: -13.506753921508789
    8. '       ' → logprob: -14.506753921508789
    9. ']:' → logprob: -15.381753921508789
    10. '):

' → logprob: -15.756753921508789

Token 590: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.269938588142395
    2. '           ' → logprob: -1.644938588142395
    3. 'round' → logprob: -3.7699384689331055
    4. '   ' → logprob: -4.3949384689331055
    5. ' rounds' → logprob: -5.0199384689331055
    6. 'print' → logprob: -7.0199384689331055
    7. 'r' → logprob: -8.394938468933105
    8. ' round' → logprob: -9.019938468933105
    9. ' print' → logprob: -9.394938468933105
    10. '```' → logprob: -9.894938468933105

Token 591: ' res' (ID: 694)
  Prédit: 'round'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'round' → logprob: -0.18173934519290924
    2. 'print' → logprob: -1.806739330291748
    3. '   ' → logprob: -6.931739330291748
    4. '           ' → logprob: -8.431739807128906
    5. 'res' (adapté à ' res') → logprob: -8.556739807128906
    6. 'r' → logprob: -8.556739807128906
    7. '       ' → logprob: -8.681739807128906
    8. 'prints' → logprob: -9.806739807128906
    9. ' rounds' → logprob: -9.806739807128906
    10. 'ans' → logprob: -9.931739807128906

Token 592: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38784876465797424
    2. '=' → logprob: -1.1378487348556519
    3. 't' → logprob: -7.762848854064941
    4. '=int' → logprob: -8.137848854064941
    5. 'ult' → logprob: -9.012848854064941
    6. 'ults' → logprob: -10.762848854064941
    7. 's' → logprob: -11.262848854064941
    8. '=((' → logprob: -11.512848854064941
    9. '=(' → logprob: -11.637848854064941
    10. '   ' → logprob: -11.637848854064941

Token 593: ' (' (ID: 350)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.024199163541197777
    2. 'l' → logprob: -3.8991992473602295
    3. ' (' → logprob: -5.64919900894165
    4. ' l' → logprob: -9.524199485778809
    5. '   ' → logprob: -9.899199485778809
    6. '(' → logprob: -13.274199485778809
    7. '       ' → logprob: -13.649199485778809
    8. '  ' → logprob: -13.899199485778809
    9. '           ' → logprob: -14.024199485778809
    10. ' ' → logprob: -14.399199485778809

Token 594: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -6.988221684878226e-06
    2. '(l' → logprob: -12.250006675720215
    3. '   ' → logprob: -13.750006675720215
    4. ' l' → logprob: -13.875006675720215
    5. '       ' → logprob: -16.50000762939453
    6. '           ' → logprob: -16.62500762939453
    7. '     ' → logprob: -18.37500762939453
    8. '	l' → logprob: -18.50000762939453
    9. '  ' → logprob: -18.62500762939453
    10. ' ' → logprob: -19.50000762939453

Token 595: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -2.45848218582978e-06
    2. 'c' → logprob: -13.00000286102295
    3. 'cms' → logprob: -16.625001907348633
    4. 'cmb' → logprob: -17.750001907348633
    5. '_cm' → logprob: -17.875001907348633
    6. ' cm' → logprob: -18.000001907348633
    7. '   ' → logprob: -18.250001907348633
    8. 'l' → logprob: -18.500001907348633
    9. 'cn' → logprob: -18.875001907348633
    10. 'm' → logprob: -18.875001907348633

Token 596: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -3.128163257315464e-07
    2. 'n' → logprob: -15.25
    3. '\' → logprob: -18.625
    4. '```' → logprob: -18.75
    5. '(n' → logprob: -18.875
    6. ' _' → logprob: -19.375
    7. ')' → logprob: -19.5
    8. '   ' → logprob: -19.5
    9. '(_' → logprob: -19.625
    10. ')_' → logprob: -20.625

Token 597: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3868825435638428
    2. ' *' → logprob: -1.1368825435638428
    3. ' ' → logprob: -12.511882781982422
    4. ' ' → logprob: -12.636882781982422
    5. '**' → logprob: -13.011882781982422
    6. '   ' → logprob: -14.761882781982422
    7. ' **' → logprob: -15.011882781982422
    8. ')' → logprob: -15.136882781982422
    9. ')*' → logprob: -15.636882781982422
    10. '*
' → logprob: -15.636882781982422

Token 598: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -1.4855663721391466e-05
    2. ' V' → logprob: -11.125015258789062
    3. ')V' → logprob: -18.125015258789062
    4. '
' → logprob: -19.000015258789062
    5. '(V' → logprob: -19.375015258789062
    6. '   ' → logprob: -19.750015258789062
    7. 'v' → logprob: -19.875015258789062
    8. '	V' → logprob: -20.250015258789062
    9. '           ' → logprob: -20.375015258789062
    10. ')' → logprob: -20.500015258789062

Token 599: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.650518920039758e-06
    2. ')[' → logprob: -12.625003814697266
    3. '[' → logprob: -16.000003814697266
    4. ')' → logprob: -16.625003814697266
    5. ' [' → logprob: -17.125003814697266
    6. '[I' → logprob: -17.625003814697266
    7. '][' → logprob: -18.250003814697266
    8. 'i' → logprob: -18.375003814697266
    9. '```' → logprob: -19.125003814697266
    10. '           ' → logprob: -19.125003814697266

Token 600: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01229677814990282
    2. ')//' → logprob: -4.512296676635742
    3. ' )' → logprob: -6.887296676635742
    4. '[i' → logprob: -8.512296676635742
    5. ')/(' → logprob: -10.887296676635742
    6. ')
' → logprob: -12.762296676635742
    7. ')`' → logprob: -13.637296676635742
    8. '//' → logprob: -14.262296676635742
    9. '           ' → logprob: -14.512296676635742
    10. '       ' → logprob: -14.762296676635742

Token 601: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.07936295121908188
    2. ' //' → logprob: -2.5793628692626953
    3. ')' → logprob: -8.829362869262695
    4. '           ' → logprob: -8.829362869262695
    5. '
' → logprob: -10.079362869262695
    6. ' //(' → logprob: -10.079362869262695
    7. ')//' → logprob: -10.829362869262695
    8. '       ' → logprob: -10.954362869262695
    9. '(' → logprob: -10.954362869262695
    10. '#' → logprob: -11.329362869262695

Token 602: ' (' (ID: 350)
  Prédit: '(g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -3.023293538717553e-05
    2. ' (' → logprob: -10.625030517578125
    3. '(' → logprob: -12.125030517578125
    4. 'g' → logprob: -15.750030517578125
    5. '((' → logprob: -16.250030517578125
    6. '(gc' → logprob: -16.750030517578125
    7. '   ' → logprob: -16.875030517578125
    8. '(G' → logprob: -18.375030517578125
    9. '(gl' → logprob: -18.750030517578125
    10. '  ' → logprob: -19.500030517578125

Token 603: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.22628295421600342
    2. '(g' → logprob: -1.6012829542160034
    3. ' gcd' → logprob: -7.351283073425293
    4. ' (' → logprob: -8.976283073425293
    5. '(' → logprob: -9.601283073425293
    6. '   ' → logprob: -12.351283073425293
    7. '	g' → logprob: -12.476283073425293
    8. '[g' → logprob: -12.476283073425293
    9. 'gl' → logprob: -12.851283073425293
    10. '_g' → logprob: -13.101283073425293

Token 604: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.00013464801304508
    2. 'c' → logprob: -9.250134468078613
    3. 'cdf' → logprob: -10.875134468078613
    4. 'cf' → logprob: -12.125134468078613
    5. '_cd' → logprob: -12.250134468078613
    6. 'd' → logprob: -12.625134468078613
    7. '_c' → logprob: -13.750134468078613
    8. '   ' → logprob: -14.750134468078613
    9. '(cd' → logprob: -14.875134468078613
    10. 'cid' → logprob: -14.875134468078613

Token 605: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -1.4974866644479334e-05
    2. 'd' → logprob: -11.125015258789062
    3. '   ' → logprob: -17.500015258789062
    4. '	d' → logprob: -17.500015258789062
    5. '_g' → logprob: -17.750015258789062
    6. '```' → logprob: -18.375015258789062
    7. '_' → logprob: -18.500015258789062
    8. '[' → logprob: -18.500015258789062
    9. '(d' → logprob: -19.250015258789062
    10. 'g' → logprob: -19.375015258789062

Token 606: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.02515159547328949
    2. '*' → logprob: -4.02515172958374
    3. ' ' → logprob: -5.15015172958374
    4. ' ' → logprob: -7.27515172958374
    5. ')' → logprob: -8.775151252746582
    6. ' L' → logprob: -9.525151252746582
    7. '            ' → logprob: -9.900151252746582
    8. '        ' → logprob: -9.900151252746582
    9. '         ' → logprob: -10.400151252746582
    10. '    ' → logprob: -10.650151252746582

Token 607: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -9.615255839889869e-05
    2. ' L' → logprob: -9.250096321105957
    3. '   ' → logprob: -18.87509536743164
    4. 'l' → logprob: -20.12509536743164
    5. ' ' → logprob: -21.37509536743164
    6. '	L' → logprob: -21.37509536743164
    7. '  ' → logprob: -22.50009536743164
    8. '           ' → logprob: -23.25009536743164
    9. '    ' → logprob: -23.25009536743164
    10. '     ' → logprob: -23.50009536743164

Token 608: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.8624639324116288e-06
    2. 'i' → logprob: -13.250001907348633
    3. '[' → logprob: -17.375001907348633
    4. ' i' → logprob: -17.625001907348633
    5. '(i' → logprob: -18.500001907348633
    6. '   ' → logprob: -18.750001907348633
    7. ' [' → logprob: -19.250001907348633
    8. '_i' → logprob: -19.625001907348633
    9. ')' → logprob: -20.125001907348633
    10. ' ' → logprob: -20.250001907348633

Token 609: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3872927129268646
    2. ')
' → logprob: -1.137292742729187
    3. '           ' → logprob: -8.262292861938477
    4. ')
' → logprob: -8.887292861938477
    5. '       ' → logprob: -11.637292861938477
    6. ' )
' → logprob: -12.012292861938477
    7. ' )' → logprob: -12.262292861938477
    8. ')`
' → logprob: -13.137292861938477
    9. ')

' → logprob: -13.512292861938477
    10. ')`' → logprob: -14.512292861938477

Token 610: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005513227079063654
    2. 'print' → logprob: -5.3805131912231445
    3. '       ' → logprob: -7.2555131912231445
    4. ' print' → logprob: -8.630513191223145
    5. '   ' → logprob: -12.880513191223145
    6. '```' → logprob: -14.005513191223145
    7. '
' → logprob: -14.130513191223145
    8. '#print' → logprob: -14.505513191223145
    9. '	       ' → logprob: -14.630513191223145
    10. '<|end|>' → logprob: -14.755513191223145

Token 611: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.01936597377061844
    2. '           ' → logprob: -4.0193657875061035
    3. ' print' → logprob: -6.7693657875061035
    4. '       ' → logprob: -9.894366264343262
    5. 'if' → logprob: -11.269366264343262
    6. '```' → logprob: -13.519366264343262
    7. 'sys' → logprob: -14.144366264343262
    8. '   ' → logprob: -14.394366264343262
    9. '               ' → logprob: -15.644366264343262
    10. 'printf' → logprob: -15.644366264343262

Token 612: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.003178306156769395
    2. 'res' → logprob: -5.753178119659424
    3. '(' → logprob: -14.253178596496582
    4. ' res' → logprob: -17.753177642822266
    5. '$res' → logprob: -19.128177642822266
    6. ' (' → logprob: -19.503177642822266
    7. '(
' → logprob: -19.753177642822266
    8. '	res' → logprob: -20.128177642822266
    9. '_res' → logprob: -20.753177642822266
    10. ',res' → logprob: -20.878177642822266

Token 613: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.77627644513268e-06
    2. ' )' → logprob: -12.750008583068848
    3. '())' → logprob: -13.000008583068848
    4. ')
' → logprob: -13.500008583068848
    5. '()' → logprob: -13.750008583068848
    6. '       ' → logprob: -14.250008583068848
    7. '')' → logprob: -16.375009536743164
    8. '   ' → logprob: -16.500009536743164
    9. '")' → logprob: -16.875009536743164
    10. '           ' → logprob: -17.000009536743164

Token 614: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 615: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.023316634818911552
    2. '__' → logprob: -3.7733166217803955
    3. '_' → logprob: -9.773316383361816
    4. '_name' → logprob: -11.898316383361816
    5. ' _' → logprob: -12.648316383361816
    6. ' ' → logprob: -13.523316383361816
    7. ' ' → logprob: -13.898316383361816
    8. 'name' → logprob: -14.273316383361816
    9. '___' → logprob: -15.023316383361816
    10. ' main' → logprob: -15.398316383361816

Token 616: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.02423640340566635
    2. '==' → logprob: -4.14923620223999
    3. ' ==' → logprob: -4.89923620223999
    4. '__.__' → logprob: -8.274236679077148
    5. '=="' → logprob: -8.399236679077148
    6. '.__' → logprob: -10.274236679077148
    7. 'name' → logprob: -10.274236679077148
    8. '=='' → logprob: -10.774236679077148
    9. '```' → logprob: -11.024236679077148
    10. ' __' → logprob: -11.149236679077148

Token 617: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.141186450899113e-05
    2. '__.__' → logprob: -11.000020980834961
    3. '==' → logprob: -13.000020980834961
    4. '__.' → logprob: -13.625020980834961
    5. '__('' → logprob: -14.250020980834961
    6. '___' → logprob: -15.625020980834961
    7. '____' → logprob: -16.12502098083496
    8. '```' → logprob: -16.25002098083496
    9. '=="' → logprob: -17.12502098083496
    10. '__("' → logprob: -17.25002098083496

Token 618: '=="' (ID: 24027)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2030244618654251
    2. '==' → logprob: -1.9530245065689087
    3. '__' → logprob: -3.328024387359619
    4. '=="' → logprob: -5.453024387359619
    5. '=='' → logprob: -6.453024387359619
    6. '__.__' → logprob: -9.828024864196777
    7. '.__' → logprob: -10.828024864196777
    8. ' =="' → logprob: -11.203024864196777
    9. '_' → logprob: -11.453024864196777
    10. ' =='' → logprob: -11.953024864196777

Token 619: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.20299820601940155
    2. '"' → logprob: -1.702998161315918
    3. ''' → logprob: -6.452998161315918
    4. 'main' → logprob: -11.827998161315918
    5. ' "__' → logprob: -14.577998161315918
    6. ' __' → logprob: -17.952999114990234
    7. '___' → logprob: -18.577999114990234
    8. '/__' → logprob: -18.702999114990234
    9. '   ' → logprob: -18.827999114990234
    10. ' '__' → logprob: -19.452999114990234

Token 620: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.1637164789135568e-05
    2. '"' → logprob: -11.750011444091797
    3. 'name' → logprob: -12.625011444091797
    4. ''' → logprob: -15.500011444091797
    5. '__' → logprob: -16.625011444091797
    6. ' main' → logprob: -16.625011444091797
    7. '_main' → logprob: -18.500011444091797
    8. '(main' → logprob: -19.000011444091797
    9. '	main' → logprob: -20.125011444091797
    10. '"name' → logprob: -20.375011444091797

Token 621: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.012812635861337185
    2. '__' → logprob: -4.387812614440918
    3. '__':
' → logprob: -8.137812614440918
    4. '__["' → logprob: -13.012812614440918
    5. '__
' → logprob: -13.387812614440918
    6. '__.__' → logprob: -13.637812614440918
    7. '__.' → logprob: -13.762812614440918
    8. '.' → logprob: -14.012812614440918
    9. ':
' → logprob: -14.012812614440918
    10. '__:' → logprob: -14.262812614440918

Token 622: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01854647696018219
    2. 'main' → logprob: -4.6435465812683105
    3. '	main' → logprob: -4.7685465812683105
    4. ' main' → logprob: -8.643546104431152
    5. '   ' → logprob: -10.143546104431152
    6. '    
' → logprob: -11.143546104431152
    7. '  ' → logprob: -11.768546104431152
    8. '<|end|>' → logprob: -12.268546104431152
    9. '_main' → logprob: -12.393546104431152
    10. ' ' → logprob: -12.893546104431152

Token 623: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -3.128163257315464e-07
    2. ' main' → logprob: -15.25
    3. '	main' → logprob: -17.25
    4. '   ' → logprob: -17.75
    5. '(main' → logprob: -21.75
    6. '.main' → logprob: -22.875
    7. '_main' → logprob: -23.0
    8. 'import' → logprob: -23.5
    9. 'Main' → logprob: -25.875
    10. '主' → logprob: -26.5

Token 624: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 622
Tokens correctement prédits (1ère position, stricte): 224
Tokens correctement prédits (1ère position, avec adaptation): 237
Tokens correctement prédits (top 10): 454
Précision stricte (1ère position): 36.01%
Précision adaptée (1ère position): 38.10%
Précision (top 10): 72.99%
================================================================================
