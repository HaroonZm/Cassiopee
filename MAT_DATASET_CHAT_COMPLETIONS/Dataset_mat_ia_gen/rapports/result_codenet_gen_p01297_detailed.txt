================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:17
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

def dist_point_to_segment(px, py, x1, y1, x2, y2):
    """Calcule la distance minimale entre un point (px, py) et un segment défini par (x1, y1)-(x2, y2)."""
    # Vecteur du segment
    vx = x2 - x1
    vy = y2 - y1
    # Vecteur du point vers le début du segment
    wx = px - x1
    wy = py - y1
    # Calcul du paramètre t pour la projection du point sur le segment
    c1 = vx * wx + vy * wy
    c2 = vx * vx + vy * vy
    if c2 == 0:
        # Les deux points de segment sont confondus
        return math.hypot(px - x1, py - y1)
    t = c1 / c2
    if t < 0:
        # Projection avant le segment
        return math.hypot(px - x1, py - y1)
    elif t > 1:
        # Projection après le segment
        return math.hypot(px - x2, py - y2)
    else:
        # Projection sur le segment
        projx = x1 + t * vx
        projy = y1 + t * vy
        return math.hypot(px - projx, py - projy)

def is_safe_point(px, py, beams, radius):
    """
    Vérifie si la machine placée en (px, py) ne chevauche aucun rayon laser.
    beams : liste de tuples (x1, y1, x2, y2, thickness)
    radius : rayon de la machine
    Le chevauchement se produit si la distance machine-laser est inférieure à radius
      ou, vu la largeur de laser, s'il y a un overlap des deux disques (machine) et
      bande laser (ligne avec épaisseur).
    """
    for (x1, y1, x2, y2, thickness) in beams:
        # Distance minimale entre machine et segment laser
        dist = dist_point_to_segment(px, py, x1, y1, x2, y2)
        # La moitié de l'épaisseur de laser
        half_thick = thickness / 2.0
        # Si les deux disques se chevauchent (rayon machine + demi épaisseur laser > distance)
        if dist <= radius + half_thick - 1e-12:
            return False
    return True

def solve():
    input = sys.stdin.read().strip().split()
    idx = 0
    while True:
        if idx + 4 > len(input):
            break
        W, H, N, R = map(int, input[idx:idx+4])
        idx += 4
        if W == 0 and H == 0 and N == 0 and R == 0:
            # Fin de l'entrée
            break

        beams = []
        for _ in range(N):
            # Chaque ligne: x1 y1 x2 y2 thickness
            x1, y1, x2, y2, t = map(int, input[idx:idx+5])
            idx += 5
            beams.append((x1, y1, x2, y2, t))

        # Manuel pour résoudre le problème:
        # Nous voulons savoir s'il existe au moins un point (x,y) dans [R, W-R] x [R, H-R]
        # qui ne chevauche aucun rayon laser.
        # La machine étant circulaire de rayon R, ses centres valides sont dans cette zone
        # car le disque doit être totalement dans la fenêtre.
        #
        # On ne peut pas tester tous les points car continu.
        # Approche discrète:
        # - On échantillonne la zone avec une grille assez fine (par exemple pas plus gros que R/2)
        #   car le rayon est la distance critique.
        # - Pour chaque point, on teste si safe.
        #
        # Si on trouve un point safe, on imprime "Yes", sinon "No".
        #
        # Cette méthode est acceptable compte tenu des contraintes: 
        #   W ≤ 640, H ≤ 480, N ≤ 100, ce qui donne un maximum de ~ (640/ R/2) * (480/ R/2) points.
        #
        # Alternative serait de tester la géométrie exacte mais complexe.

        # Le pas d'échantillonnage: on choisit R/2 ou 1 pixel minimum pour couvrir correctement.
        step = max(R / 2.0, 1.0)
        safe_found = False
        # Parcours dans la zone autorisée (centre machine)
        y = R
        while y <= H - R and not safe_found:
            x = R
            while x <= W - R and not safe_found:
                if is_safe_point(x, y, beams, R):
                    safe_found = True
                x += step
            y += step

        print("Yes" if safe_found else "No")

if __name__ == "__main__":
    solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29739612340927124
    2. '\n' → logprob: -1.547396183013916
    3. '<|end|>' → logprob: -3.797396183013916
    4. '\' → logprob: -4.922396183013916
    5. 'newline' → logprob: -5.672396183013916
    6. 'import' → logprob: -5.672396183013916
    7. '<|end|>' → logprob: -6.047396183013916
    8. '
' → logprob: -6.922396183013916
    9. '```' → logprob: -6.922396183013916
    10. '' → logprob: -7.547396183013916

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020497082732617855
    2. 'os' → logprob: -8.500205039978027
    3. '"os' → logprob: -14.875205039978027
    4. ' math' → logprob: -15.000205039978027
    5. ' re' → logprob: -15.125205039978027
    6. '_os' → logprob: -15.750205039978027
    7. ' json' → logprob: -16.12520408630371
    8. '	os' → logprob: -16.37520408630371
    9. ' ' → logprob: -17.50020408630371
    10. ' ' → logprob: -17.50020408630371

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10131704062223434
    2. '\' → logprob: -3.6013169288635254
    3. '\n' → logprob: -3.9763169288635254
    4. 'import' → logprob: -4.351316928863525
    5. '<|end|>' → logprob: -4.601316928863525
    6. '```' → logprob: -4.726316928863525
    7. '
' → logprob: -4.976316928863525
    8. '

' → logprob: -5.476316928863525
    9. '<|end|>' → logprob: -6.601316928863525
    10. '' → logprob: -6.601316928863525

Token 6: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.054233431816101
    2. '\' → logprob: -1.429233431816101
    3. 'import' → logprob: -2.1792335510253906
    4. '\n' → logprob: -2.1792335510253906
    5. '```' → logprob: -2.4292335510253906
    6. 'def' → logprob: -3.4292335510253906
    7. '
' → logprob: -4.179233551025391
    8. ',' → logprob: -4.679233551025391
    9. '`' → logprob: -4.929233551025391
    10. '*' → logprob: -4.929233551025391

Token 7: ' dist' (ID: 3601)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.003968097735196352
    2. ' calculate' → logprob: -5.878968238830566
    3. ' space' → logprob: -7.628968238830566
    4. '_' → logprob: -8.253968238830566
    5. ' factorial' → logprob: -9.003968238830566
    6. ' compute' → logprob: -9.628968238830566
    7. ' add' → logprob: -10.753968238830566
    8. ' math' → logprob: -10.753968238830566
    9. ' ```' → logprob: -11.003968238830566
    10. ' my' → logprob: -11.003968238830566

Token 8: '_point' (ID: 15466)
  Prédit: 'ance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ance' → logprob: -0.04769464582204819
    2. '(' → logprob: -3.547694683074951
    3. '(a' → logprob: -4.422694683074951
    4. 'a' → logprob: -5.797694683074951
    5. 'ANCE' → logprob: -6.422694683074951
    6. 'an' → logprob: -7.422694683074951
    7. '_' → logprob: -8.297694206237793
    8. ' an' → logprob: -9.047694206237793
    9. 'anc' → logprob: -9.797694206237793
    10. '_a' → logprob: -10.797694206237793

Token 9: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.45057883858680725
    2. '_' → logprob: -2.2005789279937744
    3. 'ance' → logprob: -2.5755789279937744
    4. '(' → logprob: -2.5755789279937744
    5. '_between' → logprob: -3.5755789279937744
    6. 's' → logprob: -4.075578689575195
    7. '_from' → logprob: -4.200578689575195
    8. ' (' → logprob: -4.575578689575195
    9. '(p' → logprob: -5.825578689575195
    10. 'ence' → logprob: -5.950578689575195

Token 10: '_segment' (ID: 71041)
  Prédit: '_point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.13779209554195404
    2. '_line' → logprob: -2.2627921104431152
    3. '_plane' → logprob: -4.387792110443115
    4. '_segment' → logprob: -4.637792110443115
    5. '_' → logprob: -7.137792110443115
    6. '_surface' → logprob: -7.887792110443115
    7. '_rectangle' → logprob: -8.637791633605957
    8. '_p' → logprob: -8.887791633605957
    9. ' ' → logprob: -9.137791633605957
    10. '(point' → logprob: -9.262791633605957

Token 11: '(px' (ID: 195026)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0037826199550181627
    2. '(p' → logprob: -6.378782749176025
    3. '_' → logprob: -7.128782749176025
    4. '(x' → logprob: -7.378782749176025
    5. ' (' → logprob: -8.003782272338867
    6. '(Point' → logprob: -9.253782272338867
    7. '(point' → logprob: -10.128782272338867
    8. '(_' → logprob: -10.503782272338867
    9. '(a' → logprob: -10.753782272338867
    10. '(parent' → logprob: -10.878782272338867

Token 12: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06998490542173386
    2. ' ,' → logprob: -2.6949849128723145
    3. ',p' → logprob: -11.069984436035156
    4. ' ' → logprob: -11.444984436035156
    5. ' )' → logprob: -12.069984436035156
    6. ')' → logprob: -12.194984436035156
    7. ',y' → logprob: -12.319984436035156
    8. '_,' → logprob: -13.694984436035156
    9. ',)' → logprob: -14.069984436035156
    10. ',
' → logprob: -14.444984436035156

Token 13: ' py' (ID: 13104)
  Prédit: ' py'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' py' → logprob: -0.060632120817899704
    2. 'py' → logprob: -2.9356322288513184
    3. '_py' → logprob: -5.560632228851318
    4. ' ' → logprob: -6.560632228851318
    5. '.py' → logprob: -9.06063175201416
    6. '<|end|>' → logprob: -9.56063175201416
    7. ' p' → logprob: -9.81063175201416
    8. ' ' → logprob: -10.18563175201416
    9. '(py' → logprob: -10.43563175201416
    10. 'p' → logprob: -11.06063175201416

Token 14: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.639096970204264e-05
    2. ' ,' → logprob: -9.250096321105957
    3. ',p' → logprob: -16.250097274780273
    4. '‌,' → logprob: -17.000097274780273
    5. ',

' → logprob: -17.500097274780273
    6. '<|end|>' → logprob: -17.500097274780273
    7. ',
' → logprob: -17.625097274780273
    8. '):' → logprob: -18.125097274780273
    9. ',x' → logprob: -18.250097274780273
    10. ')' → logprob: -18.250097274780273

Token 15: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.13591764867305756
    2. ' x' → logprob: -2.1359176635742188
    3. 'ax' → logprob: -6.010917663574219
    4. ' ax' → logprob: -6.135917663574219
    5. ' ' → logprob: -6.510917663574219
    6. ' segment' → logprob: -7.010917663574219
    7. 'sx' → logprob: -7.635917663574219
    8. 'segment' → logprob: -7.760917663574219
    9. 'seg' → logprob: -7.885917663574219
    10. ' sx' → logprob: -8.260917663574219

Token 16: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001354824344161898
    2. '0' → logprob: -9.00013542175293
    3. ',' → logprob: -11.50013542175293
    4. 'a' → logprob: -14.50013542175293
    5. '_' → logprob: -14.87513542175293
    6. '\xe2\x82' → logprob: -14.87513542175293
    7. ' ' → logprob: -15.37513542175293
    8. '2' → logprob: -15.75013542175293
    9. '```' → logprob: -15.87513542175293
    10. ' ,' → logprob: -17.12513542175293

Token 17: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013810492237098515
    2. ' ,' → logprob: -9.125138282775879
    3. ',y' → logprob: -10.625138282775879
    4. '1' → logprob: -12.875138282775879
    5. ',x' → logprob: -13.500138282775879
    6. ',
' → logprob: -15.125138282775879
    7. ')' → logprob: -15.750138282775879
    8. 'y' → logprob: -15.875138282775879
    9. '_,' → logprob: -16.000137329101562
    10. '0' → logprob: -16.875137329101562

Token 18: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.1602676957845688
    2. 'y' → logprob: -1.91026771068573
    3. '<|end|>' → logprob: -10.28526782989502
    4. ' ' → logprob: -12.66026782989502
    5. '<|end|>' → logprob: -12.66026782989502
    6. '	y' → logprob: -13.16026782989502
    7. ',y' → logprob: -14.78526782989502
    8. ',' → logprob: -15.16026782989502
    9. '  ' → logprob: -16.535266876220703
    10. 'yj' → logprob: -17.035266876220703

Token 19: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ',' → logprob: -15.125000953674316
    3. ' ' → logprob: -15.750000953674316
    4. ')' → logprob: -16.5
    5. '2' → logprob: -16.875
    6. '```' → logprob: -17.125
    7. '_' → logprob: -17.375
    8. '１' → logprob: -17.8125
    9. '۱' → logprob: -18.6875
    10. '১' → logprob: -19.125

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.511406809295295e-06
    2. ' ,' → logprob: -12.125006675720215
    3. ',x' → logprob: -14.750006675720215
    4. ')' → logprob: -15.125006675720215
    5. '):' → logprob: -16.1250057220459
    6. ' ' → logprob: -17.1250057220459
    7. ',
' → logprob: -17.2500057220459
    8. '),' → logprob: -17.3750057220459
    9. ',)' → logprob: -17.8750057220459
    10. ',

' → logprob: -18.1250057220459

Token 21: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.16023173928260803
    2. 'x' → logprob: -1.9102317094802856
    3. ' ' → logprob: -12.535231590270996
    4. '	x' → logprob: -13.035231590270996
    5. ',' → logprob: -13.660231590270996
    6. ',x' → logprob: -14.660231590270996
    7. '   ' → logprob: -16.035232543945312
    8. '  ' → logprob: -16.535232543945312
    9. ')x' → logprob: -17.785232543945312
    10. ' ,' → logprob: -18.160232543945312

Token 22: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.088346359931165e-07
    2. '1' → logprob: -15.250000953674316
    3. ',' → logprob: -15.625000953674316
    4. '₂' → logprob: -15.875000953674316
    5. ')' → logprob: -16.625
    6. '۲' → logprob: -16.875
    7. '```' → logprob: -17.375
    8. ' ' → logprob: -17.75
    9. '<|end|>' → logprob: -17.75
    10. '２' → logprob: -17.875

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.4060561776859686e-05
    2. ' ,' → logprob: -10.500043869018555
    3. ')' → logprob: -11.750043869018555
    4. ',y' → logprob: -12.500043869018555
    5. ',)' → logprob: -13.625043869018555
    6. '_,' → logprob: -13.875043869018555
    7. '),' → logprob: -14.625043869018555
    8. '‌,' → logprob: -14.625043869018555
    9. ',
' → logprob: -15.125043869018555
    10. '```' → logprob: -15.500043869018555

Token 24: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.5760051608085632
    2. 'y' → logprob: -0.8260051608085632
    3. ' ' → logprob: -10.076004981994629
    4. '	y' → logprob: -12.076004981994629
    5. 'py' → logprob: -12.326004981994629
    6. ' py' → logprob: -12.826004981994629
    7. 'x' → logprob: -13.201004981994629
    8. ' x' → logprob: -13.701004981994629
    9. '```' → logprob: -13.701004981994629
    10. ''y' → logprob: -13.951004981994629

Token 25: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.842555426876061e-06
    2. '1' → logprob: -12.375004768371582
    3. ')' → logprob: -14.625004768371582
    4. '```' → logprob: -16.0000057220459
    5. '₂' → logprob: -18.5000057220459
    6. ',' → logprob: -19.2500057220459
    7. ' ' → logprob: -19.2500057220459
    8. '):' → logprob: -19.6250057220459
    9. '):
' → logprob: -19.7500057220459
    10. '۲' → logprob: -19.7500057220459

Token 26: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005257497541606426
    2. ')' → logprob: -7.625525951385498
    3. ':' → logprob: -10.75052547454834
    4. ' ):' → logprob: -11.12552547454834
    5. '):
' → logprob: -13.75052547454834
    6. ',' → logprob: -16.375526428222656
    7. '   ' → logprob: -16.500526428222656
    8. ''):' → logprob: -16.500526428222656
    9. ')：' → logprob: -17.000526428222656
    10. ' ' → logprob: -17.375526428222656

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5018569827079773
    2. ':' → logprob: -1.126857042312622
    3. ' ' → logprob: -3.376857042312622
    4. ' 
' → logprob: -4.876856803894043
    5. ':
' → logprob: -5.001856803894043
    6. '    ' → logprob: -5.001856803894043
    7. '```' → logprob: -6.376856803894043
    8. '     
' → logprob: -6.501856803894043
    9. '"' → logprob: -6.876856803894043
    10. ''' → logprob: -7.001856803894043

Token 28: ' """' (ID: 9280)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1252108812332153
    2. ' ' → logprob: -1.6252108812332153
    3. ' #' → logprob: -2.375210762023926
    4. '    ' → logprob: -2.625210762023926
    5. ' """' → logprob: -2.625210762023926
    6. ' dx' → logprob: -2.625210762023926
    7. ' if' → logprob: -3.125210762023926
    8. '#' → logprob: -4.125210762023926
    9. ' import' → logprob: -4.375210762023926
    10. 'if' → logprob: -4.750210762023926

Token 29: 'Cal' (ID: 7712)
  Prédit: ' """'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' """' → logprob: -0.7830857634544373
    2. ' Calculate' → logprob: -1.783085823059082
    3. 'Calculate' → logprob: -2.033085823059082
    4. '   ' → logprob: -2.408085823059082
    5. ' """
' → logprob: -2.533085823059082
    6. '"""' → logprob: -3.283085823059082
    7. ' Calculates' → logprob: -4.283085823059082
    8. '"""
' → logprob: -5.908085823059082
    9. 'Calcul' → logprob: -6.283085823059082
    10. ' import' → logprob: -6.283085823059082

Token 30: 'cule' (ID: 45017)
  Prédit: 'culate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'culate' → logprob: -0.039930619299411774
    2. 'cul' → logprob: -3.789930582046509
    3. 'c' → logprob: -4.664930820465088
    4. 'cula' → logprob: -5.039930820465088
    5. 'culated' → logprob: -8.28993034362793
    6. 'cular' → logprob: -8.28993034362793
    7. 'culator' → logprob: -10.28993034362793
    8. 'cule' → logprob: -10.66493034362793
    9. 'culation' → logprob: -10.66493034362793
    10. 'cu' → logprob: -11.03993034362793

Token 31: ' la' (ID: 557)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5572152137756348
    2. 's' → logprob: -0.9322152137756348
    3. 'te' → logprob: -3.9322152137756348
    4. 'm' → logprob: -5.932215213775635
    5. ' la' → logprob: -6.057215213775635
    6. 'd' → logprob: -6.057215213775635
    7. 'ate' → logprob: -6.307215213775635
    8. ' r' → logprob: -7.432215213775635
    9. ' the' → logprob: -7.432215213775635
    10. '```' → logprob: -8.057214736938477

Token 32: ' distance' (ID: 9324)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2757294476032257
    2. ' distance' → logprob: -1.6507294178009033
    3. 'distance' → logprob: -3.4007294178009033
    4. ' d' → logprob: -4.900729656219482
    5. ' plus' → logprob: -6.650729656219482
    6. 's' → logprob: -6.775729656219482
    7. '   ' → logprob: -6.775729656219482
    8. '  ' → logprob: -7.150729656219482
    9. ' distanza' → logprob: -7.525729656219482
    10. ' distância' → logprob: -7.650729656219482

Token 33: ' minimale' (ID: 143217)
  Prédit: ' entre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.09005039185285568
    2. ' between' → logprob: -3.590050458908081
    3. '   ' → logprob: -4.465050220489502
    4. ' from' → logprob: -4.465050220489502
    5. ' ' → logprob: -4.590050220489502
    6. ' du' → logprob: -4.840050220489502
    7. ' au' → logprob: -5.590050220489502
    8. '_' → logprob: -5.715050220489502
    9. 'entre' → logprob: -5.840050220489502
    10. ' plus' → logprob: -6.340050220489502

Token 34: ' entre' (ID: 3853)
  Prédit: ' entre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.009288959205150604
    2. ' du' → logprob: -5.634288787841797
    3. 'entre' → logprob: -5.759288787841797
    4. ' between' → logprob: -6.634288787841797
    5. ' ' → logprob: -7.759288787841797
    6. ' from' → logprob: -8.259288787841797
    7. '   ' → logprob: -9.009288787841797
    8. ' au' → logprob: -9.134288787841797
    9. ' de' → logprob: -9.634288787841797
    10. 'au' → logprob: -9.884288787841797

Token 35: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.010584368370473385
    2. 'un' → logprob: -5.010584354400635
    3. ' le' → logprob: -5.760584354400635
    4. 'le' → logprob: -8.010584831237793
    5. ' ' → logprob: -8.760584831237793
    6. ' point' → logprob: -9.135584831237793
    7. ''un' → logprob: -10.635584831237793
    8. ' a' → logprob: -11.010584831237793
    9. '```' → logprob: -11.635584831237793
    10. 'p' → logprob: -11.635584831237793

Token 36: ' point' (ID: 2438)
  Prédit: ' point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' point' → logprob: -0.023122260347008705
    2. 'point' → logprob: -4.273122310638428
    3. ' ' → logprob: -4.898122310638428
    4. ' segment' → logprob: -7.023122310638428
    5. ' espace' → logprob: -9.39812183380127
    6. 'segment' → logprob: -9.52312183380127
    7. ' p' → logprob: -10.02312183380127
    8. '```' → logprob: -10.02312183380127
    9. 'p' → logprob: -10.14812183380127
    10. '  ' → logprob: -10.64812183380127

Token 37: ' (' (ID: 350)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.7828958034515381
    2. ' ' → logprob: -0.9078958034515381
    3. '   ' → logprob: -2.907895803451538
    4. ' (' → logprob: -3.282895803451538
    5. '    ' → logprob: -4.657896041870117
    6. 'et' → logprob: -4.782896041870117
    7. '  ' → logprob: -5.032896041870117
    8. ' and' → logprob: -5.407896041870117
    9. ' )' → logprob: -6.282896041870117
    10. ''' → logprob: -6.532896041870117

Token 38: 'px' (ID: 3207)
  Prédit: ' px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' px' → logprob: -0.23964838683605194
    2. '(px' → logprob: -2.3646483421325684
    3. 'px' → logprob: -2.6146483421325684
    4. ')' → logprob: -4.114648342132568
    5. 'x' → logprob: -4.114648342132568
    6. ' (' → logprob: -4.989648342132568
    7. ' )' → logprob: -6.489648342132568
    8. 'p' → logprob: -6.739648342132568
    9. ' x' → logprob: -7.114648342132568
    10. ',' → logprob: -7.114648342132568

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001586389378644526
    2. ' ,' → logprob: -6.501586437225342
    3. ')' → logprob: -9.751585960388184
    4. ',)' → logprob: -11.126585960388184
    5. ' )' → logprob: -12.376585960388184
    6. ' ' → logprob: -12.751585960388184
    7. '   ' → logprob: -13.251585960388184
    8. ',
' → logprob: -14.876585960388184
    9. ',p' → logprob: -14.876585960388184
    10. ',

' → logprob: -15.126585960388184

Token 40: ' py' (ID: 13104)
  Prédit: ' py'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' py' → logprob: -0.07891435921192169
    2. 'py' → logprob: -2.5789144039154053
    3. '_py' → logprob: -11.078914642333984
    4. '(py' → logprob: -12.453914642333984
    5. '.py' → logprob: -12.578914642333984
    6. ' ' → logprob: -13.828914642333984
    7. ' p' → logprob: -15.703914642333984
    8. ' ' → logprob: -15.953914642333984
    9. ' Py' → logprob: -16.078914642333984
    10. 'y' → logprob: -16.203914642333984

Token 41: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015093892579898238
    2. ' )' → logprob: -6.501509189605713
    3. '')' → logprob: -12.876509666442871
    4. ',' → logprob: -13.876509666442871
    5. '   ' → logprob: -13.876509666442871
    6. ' et' → logprob: -14.126509666442871
    7. ' ' → logprob: -14.626509666442871
    8. '")' → logprob: -14.626509666442871
    9. '`)' → logprob: -14.876509666442871
    10. 'et' → logprob: -15.626509666442871

Token 42: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.48958173394203186
    2. ')' → logprob: -1.8645817041397095
    3. ' ' → logprob: -1.8645817041397095
    4. 'et' → logprob: -3.614581823348999
    5. '   ' → logprob: -3.739581823348999
    6. ' )' → logprob: -4.11458158493042
    7. ',' → logprob: -5.73958158493042
    8. ' and' → logprob: -5.73958158493042
    9. ' ' → logprob: -7.48958158493042
    10. '```' → logprob: -7.61458158493042

Token 43: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.5994773507118225
    2. 'le' → logprob: -1.7244772911071777
    3. ' le' → logprob: -2.2244772911071777
    4. 'un' → logprob: -2.7244772911071777
    5. 'segment' → logprob: -3.4744772911071777
    6. ' la' → logprob: -3.9744772911071777
    7. ' segment' → logprob: -4.599477291107178
    8. 'une' → logprob: -4.849477291107178
    9. '```' → logprob: -4.974477291107178
    10. ' une' → logprob: -5.099477291107178

Token 44: ' segment' (ID: 14806)
  Prédit: ' segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.08916160464286804
    2. 'segment' → logprob: -2.4641616344451904
    3. ' seg' → logprob: -9.08916187286377
    4. '_segment' → logprob: -10.58916187286377
    5. ' point' → logprob: -10.83916187286377
    6. 'seg' → logprob: -10.83916187286377
    7. '(segment' → logprob: -11.58916187286377
    8. ' сег' → logprob: -11.71416187286377
    9. ' segmento' → logprob: -11.96416187286377
    10. '```' → logprob: -12.33916187286377

Token 45: ' déf' (ID: 23956)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9650627374649048
    2. ' (' → logprob: -1.9650627374649048
    3. '   ' → logprob: -2.0900626182556152
    4. ' de' → logprob: -2.7150626182556152
    5. ' """' → logprob: -2.7150626182556152
    6. ' )' → logprob: -3.2150626182556152
    7. ''' → logprob: -3.9650626182556152
    8. ' ,' → logprob: -3.9650626182556152
    9. '.' → logprob: -4.215062618255615
    10. ',' → logprob: -4.215062618255615

Token 46: 'ini' (ID: 2363)
  Prédit: 'ini'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ini' → logprob: -0.02803993597626686
    2. 'init' → logprob: -4.403039932250977
    3. 'inie' → logprob: -4.403039932250977
    4. 'inition' → logprob: -6.903039932250977
    5. 'in' → logprob: -7.403039932250977
    6. 'iniert' → logprob: -7.528039932250977
    7. 'i' → logprob: -8.278039932250977
    8. 'initi' → logprob: -8.778039932250977
    9. 'ined' → logprob: -9.278039932250977
    10. 'inis' → logprob: -9.403039932250977

Token 47: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.17253141105175018
    2. ' ' → logprob: -2.0475313663482666
    3. 'par' → logprob: -4.922531604766846
    4. '  ' → logprob: -5.297531604766846
    5. ' )' → logprob: -5.422531604766846
    6. ' by' → logprob: -5.672531604766846
    7. '```' → logprob: -6.047531604766846
    8. ')' → logprob: -6.547531604766846
    9. '   ' → logprob: -6.547531604766846
    10. ',' → logprob: -6.922531604766846

Token 48: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6545260548591614
    2. ' les' → logprob: -1.0295259952545166
    3. '(x' → logprob: -3.2795259952545166
    4. ' ' → logprob: -3.5295259952545166
    5. ' x' → logprob: -4.029526233673096
    6. 'les' → logprob: -4.529526233673096
    7. '```' → logprob: -4.904526233673096
    8. 'x' → logprob: -5.654526233673096
    9. '(' → logprob: -5.779526233673096
    10. ' la' → logprob: -6.154526233673096

Token 49: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.20142561197280884
    2. ' x' → logprob: -1.701425552368164
    3. ')' → logprob: -12.326425552368164
    4. '(x' → logprob: -13.201425552368164
    5. ' ' → logprob: -13.326425552368164
    6. ' )' → logprob: -13.576425552368164
    7. ',' → logprob: -13.951425552368164
    8. '   ' → logprob: -14.076425552368164
    9. ')x' → logprob: -14.576425552368164
    10. ',x' → logprob: -15.326425552368164

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.77627644513268e-06
    2. ',' → logprob: -12.000008583068848
    3. '2' → logprob: -13.625008583068848
    4. ' ' → logprob: -14.500008583068848
    5. '```' → logprob: -15.125008583068848
    6. '_' → logprob: -15.625008583068848
    7. ')' → logprob: -15.875008583068848
    8. '\xe2\x82' → logprob: -16.750009536743164
    9. ' ,' → logprob: -17.000009536743164
    10. ' -' → logprob: -17.375009536743164

Token 51: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.233804303221405e-05
    2. ',y' → logprob: -10.125092506408691
    3. ' ,' → logprob: -10.125092506408691
    4. ')' → logprob: -11.625092506408691
    5. ',)' → logprob: -14.000092506408691
    6. 'y' → logprob: -14.500092506408691
    7. '```' → logprob: -14.750092506408691
    8. ',
' → logprob: -15.000092506408691
    9. '   ' → logprob: -15.625092506408691
    10. '‌,' → logprob: -15.625092506408691

Token 52: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.38688334822654724
    2. 'y' → logprob: -1.1368833780288696
    3. ')' → logprob: -12.761883735656738
    4. ',' → logprob: -13.011883735656738
    5. ' ' → logprob: -13.386883735656738
    6. ',y' → logprob: -13.386883735656738
    7. 'py' → logprob: -14.261883735656738
    8. ')y' → logprob: -15.011883735656738
    9. ''y' → logprob: -15.261883735656738
    10. '​' → logprob: -15.261883735656738

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.684157026233152e-05
    2. ',' → logprob: -9.500077247619629
    3. '2' → logprob: -13.625077247619629
    4. '```' → logprob: -15.000077247619629
    5. ' ' → logprob: -15.375077247619629
    6. ' ,' → logprob: -16.125076293945312
    7. '   ' → logprob: -17.000076293945312
    8. ')' → logprob: -17.562576293945312
    9. 'def' → logprob: -18.500076293945312
    10. '' → logprob: -18.812576293945312

Token 54: ')-(' (ID: 111485)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04881535843014717
    2. ',' → logprob: -3.2988152503967285
    3. '),' → logprob: -4.5488152503967285
    4. ' )' → logprob: -9.798815727233887
    5. ')
' → logprob: -10.923815727233887
    6. ' ,' → logprob: -10.923815727233887
    7. '   ' → logprob: -11.548815727233887
    8. ',)' → logprob: -11.923815727233887
    9. ' et' → logprob: -12.048815727233887
    10. ' ' → logprob: -12.423815727233887

Token 55: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.029753267765045166
    2. ' x' → logprob: -3.5297532081604004
    3. ',' → logprob: -13.279753684997559
    4. ' ' → logprob: -14.404753684997559
    5. ',x' → logprob: -15.904753684997559
    6. '(x' → logprob: -16.154752731323242
    7. '	x' → logprob: -16.154752731323242
    8. '```' → logprob: -16.904752731323242
    9. ''x' → logprob: -17.529752731323242
    10. ')x' → logprob: -17.529752731323242

Token 56: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005566088366322219
    2. '1' → logprob: -7.500556468963623
    3. ',' → logprob: -12.750556945800781
    4. '```' → logprob: -15.125556945800781
    5. '3' → logprob: -16.00055694580078
    6. ' ' → logprob: -16.25055694580078
    7. ')' → logprob: -16.50055694580078
    8. '₂' → logprob: -17.12555694580078
    9. '),' → logprob: -19.25055694580078
    10. '۲' → logprob: -19.50055694580078

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011859419755637646
    2. ' ,' → logprob: -6.751185894012451
    3. ')' → logprob: -12.00118637084961
    4. ',x' → logprob: -12.37618637084961
    5. ' ' → logprob: -13.00118637084961
    6. ',y' → logprob: -14.00118637084961
    7. '```' → logprob: -14.62618637084961
    8. '2' → logprob: -14.62618637084961
    9. '),' → logprob: -14.75118637084961
    10. 'x' → logprob: -15.12618637084961

Token 58: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07005803287029266
    2. ' y' → logprob: -2.6950581073760986
    3. 'x' → logprob: -9.19505786895752
    4. ' ' → logprob: -11.57005786895752
    5. '```' → logprob: -12.19505786895752
    6. ')' → logprob: -12.94505786895752
    7. ' x' → logprob: -13.44505786895752
    8. '	y' → logprob: -14.94505786895752
    9. ',' → logprob: -15.07005786895752
    10. ')y' → logprob: -15.82005786895752

Token 59: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.56102097814437e-05
    2. '1' → logprob: -10.500045776367188
    3. ',' → logprob: -11.500045776367188
    4. 'x' → logprob: -12.500045776367188
    5. ')' → logprob: -12.875045776367188
    6. '```' → logprob: -14.250045776367188
    7. 'y' → logprob: -14.375045776367188
    8. ' ' → logprob: -15.125045776367188
    9. ' y' → logprob: -17.000045776367188
    10. '6' → logprob: -17.625045776367188

Token 60: ').' (ID: 741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014200292527675629
    2. '):' → logprob: -4.264200210571289
    3. ' )' → logprob: -11.264200210571289
    4. '):
' → logprob: -12.139200210571289
    5. ':' → logprob: -12.264200210571289
    6. ' ' → logprob: -12.389200210571289
    7. '   ' → logprob: -12.764200210571289
    8. '```' → logprob: -13.139200210571289
    9. ' ):' → logprob: -13.264200210571289
    10. '"""' → logprob: -14.139200210571289

Token 61: '"""
' (ID: 15611)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.280389428138733
    2. ')' → logprob: -1.780389428138733
    3. '"""' → logprob: -2.4053893089294434
    4. ' 
' → logprob: -2.5303893089294434
    5. '
' → logprob: -2.5303893089294434
    6. ' ' → logprob: -2.6553893089294434
    7. '```' → logprob: -3.1553893089294434
    8. '\n' → logprob: -3.2803893089294434
    9. '"""
' → logprob: -3.5303893089294434
    10. '  
' → logprob: -3.7803893089294434

Token 62: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.02779846452176571
    2. '     
' → logprob: -4.902798652648926
    3. '\n' → logprob: -5.402798652648926
    4. '    
' → logprob: -5.402798652648926
    5. '
' → logprob: -6.402798652648926
    6. ' ' → logprob: -6.402798652648926
    7. '   ' → logprob: -6.527798652648926
    8. ' \' → logprob: -6.527798652648926
    9. '   
' → logprob: -6.652798652648926
    10. '\' → logprob: -6.652798652648926

Token 63: ' #' (ID: 1069)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.5978480577468872
    2. ' ' → logprob: -1.9728480577468872
    3. ' \' → logprob: -1.9728480577468872
    4. '     
' → logprob: -2.4728479385375977
    5. '    ' → logprob: -3.3478479385375977
    6. '   ' → logprob: -3.9728479385375977
    7. '\' → logprob: -5.222847938537598
    8. 'd' → logprob: -5.472847938537598
    9. '   
' → logprob: -5.722847938537598
    10. '    
' → logprob: -5.847847938537598

Token 64: ' V' (ID: 631)
  Prédit: ' dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.18658316135406494
    2. 'dx' → logprob: -2.4365830421447754
    3. ' #' → logprob: -3.0615830421447754
    4. '#' → logprob: -4.561583042144775
    5. ' if' → logprob: -5.186583042144775
    6. '   ' → logprob: -5.436583042144775
    7. ' ' → logprob: -5.686583042144775
    8. ' vx' → logprob: -5.936583042144775
    9. 'x' → logprob: -6.186583042144775
    10. ' line' → logprob: -6.436583042144775

Token 65: 'ect' (ID: 534)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.338047593832016
    2. 'ect' → logprob: -2.088047504425049
    3. 'x' → logprob: -2.588047504425049
    4. 'ector' → logprob: -2.963047504425049
    5. 'ec' → logprob: -4.088047504425049
    6. '#' → logprob: -4.713047504425049
    7. 'i' → logprob: -5.963047504425049
    8. 'ectors' → logprob: -6.213047504425049
    9. 'ecto' → logprob: -6.463047504425049
    10. '   ' → logprob: -7.213047504425049

Token 66: 'eur' (ID: 8671)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4689462184906006
    2. 'o' → logprob: -1.4689462184906006
    3. '   ' → logprob: -3.0939462184906006
    4. 'ect' → logprob: -3.0939462184906006
    5. 'ector' → logprob: -3.9689462184906006
    6. 'u' → logprob: -4.71894645690918
    7. '	' → logprob: -5.34394645690918
    8. '#' → logprob: -5.46894645690918
    9. '-' → logprob: -5.96894645690918
    10. '```' → logprob: -6.09394645690918

Token 67: ' du' (ID: 1462)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -1.05266273021698
    2. 'v' → logprob: -1.30266273021698
    3. ' dx' → logprob: -2.3026628494262695
    4. '   ' → logprob: -2.5526628494262695
    5. ' u' → logprob: -2.9276628494262695
    6. ' ux' → logprob: -3.1776628494262695
    7. ' px' → logprob: -3.6776628494262695
    8. ' ' → logprob: -3.9276628494262695
    9. 'u' → logprob: -4.3026628494262695
    10. 'dx' → logprob: -4.6776628494262695

Token 68: ' segment' (ID: 14806)
  Prédit: ' segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.2592827081680298
    2. 'segment' → logprob: -1.5092827081680298
    3. 'seg' → logprob: -5.38428258895874
    4. ' seg' → logprob: -6.13428258895874
    5. 's' → logprob: -9.384283065795898
    6. 'x' → logprob: -9.509283065795898
    7. '1' → logprob: -9.634283065795898
    8. '(segment' → logprob: -9.884283065795898
    9. 'px' → logprob: -10.134283065795898
    10. 'dx' → logprob: -10.384283065795898

Token 69: '
' (ID: 198)
  Prédit: ' dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dx' → logprob: -1.1187487840652466
    2. '   ' → logprob: -1.7437487840652466
    3. ' (' → logprob: -2.993748664855957
    4. ' segment' → logprob: -2.993748664855957
    5. ' x' → logprob: -3.118748664855957
    6. ':' → logprob: -3.368748664855957
    7. ' ' → logprob: -3.618748664855957
    8. 'dx' → logprob: -3.618748664855957
    9. ' ux' → logprob: -3.743748664855957
    10. 'v' → logprob: -3.743748664855957

Token 70: '   ' (ID: 271)
  Prédit: ' dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.667141318321228
    2. '   ' → logprob: -1.167141318321228
    3. 'dx' → logprob: -2.2921414375305176
    4. '```' → logprob: -3.7921414375305176
    5. ' segment' → logprob: -4.417141437530518
    6. ' seg' → logprob: -5.042141437530518
    7. 'segment' → logprob: -5.292141437530518
    8. ' vx' → logprob: -5.292141437530518
    9. ' v' → logprob: -5.792141437530518
    10. 'x' → logprob: -5.792141437530518

Token 71: ' vx' (ID: 93588)
  Prédit: ' dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.10351134091615677
    2. ' vx' → logprob: -2.978511333465576
    3. 'dx' → logprob: -3.478511333465576
    4. ' segment' → logprob: -5.228511333465576
    5. 'vx' (adapté à ' vx') → logprob: -5.603511333465576
    6. ' v' → logprob: -5.728511333465576
    7. ' ux' → logprob: -6.978511333465576
    8. 'x' → logprob: -7.353511333465576
    9. ' seg' → logprob: -7.478511333465576
    10. ' x' → logprob: -7.603511333465576

Token 72: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24914678931236267
    2. '=' → logprob: -2.1241466999053955
    3. ',' → logprob: -2.3741466999053955
    4. 'x' → logprob: -5.374146938323975
    5. '1' → logprob: -6.374146938323975
    6. '_' → logprob: -7.374146938323975
    7. '_x' → logprob: -7.624146938323975
    8. ' ,' → logprob: -9.124146461486816
    9. '2' → logprob: -9.499146461486816
    10. 's' → logprob: -9.499146461486816

Token 73: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6931514739990234
    2. ' x' → logprob: -0.6931514739990234
    3. '	x' → logprob: -12.818151473999023
    4. '(x' → logprob: -14.193151473999023
    5. ' ' → logprob: -14.318151473999023
    6. ' (' → logprob: -15.193151473999023
    7. '   ' → logprob: -16.943151473999023
    8. '_x' → logprob: -17.943151473999023
    9. ')x' → logprob: -18.443151473999023
    10. '"x' → logprob: -18.443151473999023

Token 74: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00038086410495452583
    2. '1' → logprob: -7.875380992889404
    3. ' ' → logprob: -14.875380516052246
    4. '```' → logprob: -16.000381469726562
    5. '₂' → logprob: -16.125381469726562
    6. ' -' → logprob: -16.250381469726562
    7. '۲' → logprob: -17.062881469726562
    8. '<|end|>' → logprob: -17.562881469726562
    9. '２' → logprob: -18.187881469726562
    10. '২' → logprob: -18.250381469726562

Token 75: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.014173151925206184
    2. '-' → logprob: -4.2641730308532715
    3. ' ' → logprob: -11.63917350769043
    4. ' ' → logprob: -14.38917350769043
    5. '-x' → logprob: -17.13917350769043
    6. ' –' → logprob: -17.26417350769043
    7. '_' → logprob: -18.01417350769043
    8. ' -
' → logprob: -18.01417350769043
    9. '```' → logprob: -18.38917350769043
    10. '  ' → logprob: -18.88917350769043

Token 76: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0788901224732399
    2. ' x' → logprob: -2.578890085220337
    3. '	x' → logprob: -15.578889846801758
    4. '1' → logprob: -16.078889846801758
    5. ' ' → logprob: -17.078889846801758
    6. '<|end|>' → logprob: -17.703889846801758
    7. ')x' → logprob: -18.703889846801758
    8. ',x' → logprob: -19.828889846801758
    9. ',' → logprob: -20.203889846801758
    10. '(x' → logprob: -20.203889846801758

Token 77: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.081584716506768e-05
    2. '<|end|>' → logprob: -10.875020980834961
    3. ' ' → logprob: -14.000020980834961
    4. 'x' → logprob: -15.125020980834961
    5. '_' → logprob: -15.875020980834961
    6. '۱' → logprob: -16.37502098083496
    7. '<|end|>' → logprob: -16.37502098083496
    8. '১' → logprob: -16.87502098083496
    9. '```' → logprob: -16.87502098083496
    10. 'v' → logprob: -17.00002098083496

Token 78: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07204574346542358
    2. ' 
' → logprob: -3.6970458030700684
    3. 'v' → logprob: -3.9470458030700684
    4. 'y' → logprob: -4.697045803070068
    5. '  
' → logprob: -4.697045803070068
    6. '<|end|>' → logprob: -6.197045803070068
    7. ',' → logprob: -6.447045803070068
    8. '    
' → logprob: -6.697045803070068
    9. '
' → logprob: -7.447045803070068
    10. '' → logprob: -8.32204532623291

Token 79: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4987494647502899
    2. 'y' → logprob: -1.7487494945526123
    3. ' y' → logprob: -2.7487494945526123
    4. '<|end|>' → logprob: -2.7487494945526123
    5. 'v' → logprob: -3.3737494945526123
    6. ' ,' → logprob: -4.498749256134033
    7. 'vy' → logprob: -4.623749256134033
    8. ' ' → logprob: -4.998749256134033
    9. '   ' → logprob: -5.373749256134033
    10. '    
' → logprob: -5.623749256134033

Token 80: ' vy' (ID: 14190)
  Prédit: ' vy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vy' → logprob: -1.052369236946106
    2. 'vy' (adapté à ' vy') → logprob: -1.052369236946106
    3. 'y' → logprob: -1.302369236946106
    4. ' y' → logprob: -4.177369117736816
    5. 'v' → logprob: -4.427369117736816
    6. ' v' → logprob: -6.927369117736816
    7. '<|end|>' → logprob: -7.427369117736816
    8. ' ' → logprob: -8.677369117736816
    9. 'uy' → logprob: -8.677369117736816
    10. ' 
' → logprob: -9.427369117736816

Token 81: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.002805821830406785
    2. 'y' → logprob: -5.877805709838867
    3. '<|end|>' → logprob: -14.127805709838867
    4. '	y' → logprob: -15.377805709838867
    5. ' ' → logprob: -17.502805709838867
    6. '(y' → logprob: -18.377805709838867
    7. '_y' → logprob: -19.377805709838867
    8. ')y' → logprob: -19.502805709838867
    9. '<|end|>' → logprob: -19.627805709838867
    10. ''y' → logprob: -20.002805709838867

Token 83: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2812078595161438
    2. '1' → logprob: -1.406207799911499
    3. ' -' → logprob: -10.031208038330078
    4. ' ' → logprob: -11.781208038330078
    5. '-' → logprob: -12.406208038330078
    6. '```' → logprob: -15.156208038330078
    7. 'y' → logprob: -15.343708038330078
    8. 'x' → logprob: -15.968708038330078
    9. '   ' → logprob: -16.218708038330078
    10. 'v' → logprob: -16.218708038330078

Token 84: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.386928528547287
    2. '-' → logprob: -1.1369285583496094
    3. ' -
' → logprob: -10.63692855834961
    4. '-
' → logprob: -11.13692855834961
    5. ' ' → logprob: -11.38692855834961
    6. '<|end|>' → logprob: -12.38692855834961
    7. '1' → logprob: -14.13692855834961
    8. ')' → logprob: -14.38692855834961
    9. '2' → logprob: -14.88692855834961
    10. '   ' → logprob: -15.01192855834961

Token 85: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.251935213804245
    2. 'y' → logprob: -1.5019352436065674
    3. '1' → logprob: -13.001935005187988
    4. ' ' → logprob: -13.376935005187988
    5. '	y' → logprob: -13.626935005187988
    6. '<|end|>' → logprob: -14.001935005187988
    7. ')y' → logprob: -16.376935958862305
    8. '0' → logprob: -17.126935958862305
    9. '(y' → logprob: -17.501935958862305
    10. '<|end|>' → logprob: -17.876935958862305

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -15.000000953674316
    3. 'x' → logprob: -15.875000953674316
    4. '2' → logprob: -15.875000953674316
    5. '<|end|>' → logprob: -16.875
    6. '１' → logprob: -17.0
    7. '```' → logprob: -17.3125
    8. 'y' → logprob: -17.3125
    9. '۱' → logprob: -17.75
    10. '१' → logprob: -18.375

Token 87: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1031387448310852
    2. '
' → logprob: -2.8531386852264404
    3. ' if' → logprob: -4.7281389236450195
    4. '  
' → logprob: -4.9781389236450195
    5. '```' → logprob: -5.1031389236450195
    6. '    
' → logprob: -5.2281389236450195
    7. ' 
' → logprob: -5.7281389236450195
    8. '    ' → logprob: -6.3531389236450195
    9. '#' → logprob: -6.3531389236450195
    10. '   
' → logprob: -6.7281389236450195

Token 88: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7351078987121582
    2. ' 
' → logprob: -1.7351078987121582
    3. '
' → logprob: -1.8601078987121582
    4. '  
' → logprob: -2.860107898712158
    5. '    
' → logprob: -3.235107898712158
    6. '     
' → logprob: -3.735107898712158
    7. '    ' → logprob: -3.985107898712158
    8. '```' → logprob: -4.235107898712158
    9. '   
' → logprob: -4.485107898712158
    10. ' ' → logprob: -4.735107898712158

Token 89: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5538176894187927
    2. '#' (adapté à ' #') → logprob: -1.5538177490234375
    3. ' #' → logprob: -2.0538177490234375
    4. ' if' → logprob: -2.9288177490234375
    5. ' ' → logprob: -4.9288177490234375
    6. '```' → logprob: -5.0538177490234375
    7. 'if' → logprob: -5.4288177490234375
    8. '  ' → logprob: -6.1788177490234375
    9. ' px' → logprob: -6.1788177490234375
    10. '    ' → logprob: -6.1788177490234375

Token 90: ' V' (ID: 631)
  Prédit: ' dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dot' → logprob: -0.8200416564941406
    2. '#' → logprob: -1.4450416564941406
    3. ' segment' → logprob: -2.1950416564941406
    4. 'dot' → logprob: -2.6950416564941406
    5. ' px' → logprob: -3.6950416564941406
    6. 'px' → logprob: -3.6950416564941406
    7. 'd' → logprob: -4.570041656494141
    8. 'wx' → logprob: -4.570041656494141
    9. 'segment' → logprob: -4.945041656494141
    10. ' dist' → logprob: -4.945041656494141

Token 91: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.23264555633068085
    2. 'x' → logprob: -2.2326455116271973
    3. 'px' → logprob: -3.4826455116271973
    4. '#' → logprob: -3.8576455116271973
    5. 'ector' → logprob: -4.357645511627197
    6. 'v' → logprob: -5.107645511627197
    7. 'e' → logprob: -5.357645511627197
    8. '   ' → logprob: -5.857645511627197
    9. 'ex' → logprob: -5.982645511627197
    10. 'ec' → logprob: -6.232645511627197

Token 92: 'eur' (ID: 8671)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -1.2021416425704956
    2. 'or' → logprob: -1.7021416425704956
    3. 'eur' → logprob: -1.8271416425704956
    4. 'ector' → logprob: -2.202141761779785
    5. '#' → logprob: -2.452141761779785
    6. 'ect' → logprob: -3.077141761779785
    7. 'ec' → logprob: -3.452141761779785
    8. 'e' → logprob: -4.202141761779785
    9. '```' → logprob: -4.202141761779785
    10. '   ' → logprob: -4.577141761779785

Token 93: ' du' (ID: 1462)
  Prédit: ' px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' px' → logprob: -0.8189986348152161
    2. ' wx' → logprob: -1.6939985752105713
    3. ' ux' → logprob: -1.8189985752105713
    4. ' du' → logprob: -2.3189985752105713
    5. ' dx' → logprob: -3.3189985752105713
    6. ' from' → logprob: -4.19399881362915
    7. ' w' → logprob: -4.44399881362915
    8. 'wx' → logprob: -4.56899881362915
    9. 'w' → logprob: -4.81899881362915
    10. 'from' → logprob: -5.06899881362915

Token 94: ' point' (ID: 2438)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.1373177319765091
    2. 'wx' → logprob: -2.762317657470703
    3. ' px' → logprob: -2.887317657470703
    4. ' wx' → logprob: -4.762317657470703
    5. ' point' → logprob: -8.012317657470703
    6. 'w' → logprob: -9.262317657470703
    7. 'qx' → logprob: -9.387317657470703
    8. 'point' → logprob: -9.512317657470703
    9. 'pp' → logprob: -9.512317657470703
    10. 'dx' → logprob: -10.387317657470703

Token 95: ' vers' (ID: 3640)
  Prédit: ' px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' px' → logprob: -0.054986100643873215
    2. ' wx' → logprob: -3.429986000061035
    3. ' ux' → logprob: -4.304986000061035
    4. ' dx' → logprob: -5.554986000061035
    5. 'px' → logprob: -7.429986000061035
    6. '   ' → logprob: -7.804986000061035
    7. ' to' → logprob: -7.929986000061035
    8. 'wx' → logprob: -8.179986000061035
    9. ' vector' → logprob: -8.304986000061035
    10. ' tx' → logprob: -8.554986000061035

Token 96: ' le' (ID: 505)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2020757645368576
    2. 'x' → logprob: -1.702075719833374
    3. ' le' → logprob: -8.452075958251953
    4. ' ' → logprob: -8.577075958251953
    5. '1' → logprob: -9.202075958251953
    6. '(x' → logprob: -9.827075958251953
    7. 'px' → logprob: -10.702075958251953
    8. ' (' → logprob: -10.952075958251953
    9. ' px' → logprob: -11.077075958251953
    10. 'le' → logprob: -11.577075958251953

Token 97: ' début' (ID: 29589)
  Prédit: ' segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.3344624638557434
    2. 'segment' → logprob: -1.8344624042510986
    3. 'x' → logprob: -2.4594624042510986
    4. ' point' → logprob: -3.7094624042510986
    5. 'point' → logprob: -5.084462642669678
    6. '1' → logprob: -5.959462642669678
    7. ' premier' → logprob: -6.209462642669678
    8. ' x' → logprob: -6.834462642669678
    9. 'prem' → logprob: -6.959462642669678
    10. 'px' → logprob: -7.459462642669678

Token 98: ' du' (ID: 1462)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.049677848815918
    2. 'x' → logprob: -1.424677848815918
    3. ' du' → logprob: -1.549677848815918
    4. ' ' → logprob: -2.174677848815918
    5. ' (' → logprob: -3.549677848815918
    6. 'segment' → logprob: -4.174677848815918
    7. ' segment' → logprob: -4.299677848815918
    8. '(x' → logprob: -5.049677848815918
    9. '   ' → logprob: -5.424677848815918
    10. '  ' → logprob: -5.924677848815918

Token 99: ' segment' (ID: 14806)
  Prédit: ' segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.387056827545166
    2. 'segment' → logprob: -1.137056827545166
    3. 'seg' → logprob: -9.012056350708008
    4. '(segment' → logprob: -11.137056350708008
    5. '_segment' → logprob: -11.262056350708008
    6. ' seg' → logprob: -11.262056350708008
    7. ' ' → logprob: -12.012056350708008
    8. 'segments' → logprob: -12.137056350708008
    9. ' сег' → logprob: -12.387056350708008
    10. ' segmento' → logprob: -13.012056350708008

Token 100: '
' (ID: 198)
  Prédit: ' px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' px' → logprob: -0.02259698510169983
    2. ' dx' → logprob: -4.147596836090088
    3. 'px' → logprob: -5.647596836090088
    4. ' 
' → logprob: -7.397596836090088
    5. 'dx' → logprob: -8.022597312927246
    6. ' x' → logprob: -8.147597312927246
    7. '   ' → logprob: -8.772597312927246
    8. '
' → logprob: -8.897597312927246
    9. ' vx' → logprob: -8.897597312927246
    10. '  
' → logprob: -8.897597312927246

Token 101: '   ' (ID: 271)
  Prédit: ' px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' px' → logprob: -0.7665680050849915
    2. ' dx' → logprob: -0.7665680050849915
    3. ' ux' → logprob: -4.141568183898926
    4. 'dx' → logprob: -4.516568183898926
    5. '   ' → logprob: -4.641568183898926
    6. ' dp' → logprob: -5.266568183898926
    7. ' ' → logprob: -5.391568183898926
    8. ' 
' → logprob: -5.391568183898926
    9. 'px' → logprob: -5.516568183898926
    10. '
' → logprob: -5.641568183898926

Token 102: ' wx' (ID: 20113)
  Prédit: ' dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.9078066349029541
    2. 'dx' → logprob: -1.407806634902954
    3. ' ux' → logprob: -1.907806634902954
    4. 'wx' (adapté à ' wx') → logprob: -2.657806634902954
    5. ' wx' → logprob: -3.157806634902954
    6. 'px' → logprob: -3.407806634902954
    7. ' px' → logprob: -3.532806634902954
    8. 'qx' → logprob: -4.657806396484375
    9. ' ' → logprob: -4.907806396484375
    10. 'ux' → logprob: -5.282806396484375

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012529428116977215
    2. '=' → logprob: -4.387529373168945
    3. ' ' → logprob: -10.887529373168945
    4. 'x' → logprob: -14.137529373168945
    5. ' ' → logprob: -15.762529373168945
    6. ' =
' → logprob: -17.137529373168945
    7. ' =)' → logprob: -17.512529373168945
    8. 's' → logprob: -18.012529373168945
    9. ')' → logprob: -18.012529373168945
    10. '  ' → logprob: -18.137529373168945

Token 104: ' px' (ID: 27003)
  Prédit: ' px'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' px' → logprob: -0.00012415809032972902
    2. 'px' → logprob: -9.000123977661133
    3. ' py' → logprob: -14.875123977661133
    4. '(px' → logprob: -15.250123977661133
    5. ' ' → logprob: -17.375123977661133
    6. ':px' → logprob: -17.625123977661133
    7. ' ' → logprob: -18.000123977661133
    8. '_px' → logprob: -18.875123977661133
    9. ' p' → logprob: -19.125123977661133
    10. '}px' → logprob: -20.875123977661133

Token 105: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0009677992202341557
    2. '-' → logprob: -7.375967979431152
    3. ' ' → logprob: -8.000967979431152
    4. ' ' → logprob: -12.250967979431152
    5. ' –' → logprob: -15.250967979431152
    6. ' -
' → logprob: -15.375967979431152
    7. ')' → logprob: -15.750967979431152
    8. ' ­' → logprob: -16.125967025756836
    9. ' ,' → logprob: -16.375967025756836
    10. ',' → logprob: -16.375967025756836

Token 106: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2014193832874298
    2. 'x' → logprob: -1.7014193534851074
    3. '	x' → logprob: -12.451419830322266
    4. ' ' → logprob: -13.451419830322266
    5. '<|end|>' → logprob: -14.201419830322266
    6. '(x' → logprob: -17.451419830322266
    7. ')x' → logprob: -17.701419830322266
    8. '"x' → logprob: -18.076419830322266
    9. ''x' → logprob: -18.201419830322266
    10. ',x' → logprob: -18.201419830322266

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.959636033978313e-05
    2. '<|end|>' → logprob: -9.500089645385742
    3. ' ' → logprob: -12.000089645385742
    4. '_' → logprob: -12.875089645385742
    5. '2' → logprob: -13.375089645385742
    6. '```' → logprob: -13.625089645385742
    7. 'x' → logprob: -15.000089645385742
    8. 'import' → logprob: -15.125089645385742
    9. '.' → logprob: -15.187589645385742
    10. '  ' → logprob: -15.312589645385742

Token 108: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.041702285408973694
    2. ' 
' → logprob: -4.5417022705078125
    3. '<|end|>' → logprob: -4.5417022705078125
    4. '  
' → logprob: -5.0417022705078125
    5. '    
' → logprob: -5.5417022705078125
    6. 'w' → logprob: -6.0417022705078125
    7. '' → logprob: -6.5417022705078125
    8. ' ' → logprob: -6.9167022705078125
    9. '   
' → logprob: -6.9167022705078125
    10. '   ' → logprob: -6.9167022705078125

Token 109: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5031309723854065
    2. '   ' → logprob: -1.5031309127807617
    3. ' wy' → logprob: -2.1281309127807617
    4. 'wy' → logprob: -4.128130912780762
    5. ' 
' → logprob: -4.253130912780762
    6. '    ' → logprob: -4.628130912780762
    7. '    
' → logprob: -5.753130912780762
    8. '     
' → logprob: -6.003130912780762
    9. ' #' → logprob: -6.378130912780762
    10. '  
' → logprob: -6.503130912780762

Token 110: ' wy' (ID: 14962)
  Prédit: ' wy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' wy' → logprob: -0.2817918658256531
    2. 'wy' (adapté à ' wy') → logprob: -1.4067919254302979
    3. 'w' → logprob: -8.156791687011719
    4. ' py' → logprob: -8.906791687011719
    5. 'y' → logprob: -9.781791687011719
    6. 'py' → logprob: -10.031791687011719
    7. ' vy' → logprob: -10.281791687011719
    8. ' y' → logprob: -10.906791687011719
    9. ' w' → logprob: -11.156791687011719
    10. ' 
' → logprob: -12.031791687011719

Token 111: ' =' (ID: 314)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.01631998084485531
    2. '-' → logprob: -4.766319751739502
    3. ' ' → logprob: -4.891319751739502
    4. '<|end|>' → logprob: -9.51632022857666
    5. 'w' → logprob: -10.76632022857666
    6. '_' → logprob: -11.26632022857666
    7. ' =' → logprob: -11.64132022857666
    8. '=' → logprob: -11.89132022857666
    9. ' ' → logprob: -12.01632022857666
    10. ')' → logprob: -12.70382022857666

Token 112: ' py' (ID: 13104)
  Prédit: ' py'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' py' → logprob: -0.035907309502363205
    2. 'py' → logprob: -3.41090726852417
    3. ' y' → logprob: -6.28590726852417
    4. '(py' → logprob: -8.285907745361328
    5. 'y' → logprob: -9.285907745361328
    6. '_py' → logprob: -10.160907745361328
    7. ' wy' → logprob: -12.285907745361328
    8. ' ' → logprob: -13.160907745361328
    9. '.py' → logprob: -13.285907745361328
    10. '   ' → logprob: -13.285907745361328

Token 113: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.02637891098856926
    2. '-' → logprob: -3.651378870010376
    3. ' ' → logprob: -9.526378631591797
    4. '<|end|>' → logprob: -12.526378631591797
    5. ' ' → logprob: -13.776378631591797
    6. ' -
' → logprob: -15.151378631591797
    7. ' −' → logprob: -15.776378631591797
    8. '_' → logprob: -16.526378631591797
    9. ')' → logprob: -16.526378631591797
    10. '<|end|>' → logprob: -16.651378631591797

Token 114: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0024756586644798517
    2. ' y' → logprob: -6.002475738525391
    3. '	y' → logprob: -17.87747573852539
    4. '1' → logprob: -17.87747573852539
    5. '   ' → logprob: -19.50247573852539
    6. ' ' → logprob: -19.75247573852539
    7. ')y' → logprob: -20.75247573852539
    8. ''y' → logprob: -20.87747573852539
    9. '<|end|>' → logprob: -20.87747573852539
    10. '0' → logprob: -21.37747573852539

Token 115: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.341087570646778e-05
    2. '2' → logprob: -9.625093460083008
    3. 'w' → logprob: -11.375093460083008
    4. ' ' → logprob: -12.125093460083008
    5. 'y' → logprob: -12.375093460083008
    6. '-' → logprob: -13.500093460083008
    7. '```' → logprob: -13.625093460083008
    8. '<|end|>' → logprob: -14.125093460083008
    9. 'x' → logprob: -15.000093460083008
    10. 'v' → logprob: -15.062593460083008

Token 116: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5768558382987976
    2. '
' → logprob: -0.9518558382987976
    3. '    
' → logprob: -4.076855659484863
    4. '    ' → logprob: -4.201855659484863
    5. '     
' → logprob: -4.951855659484863
    6. ' 
' → logprob: -5.076855659484863
    7. '#' → logprob: -5.951855659484863
    8. ' #' → logprob: -6.076855659484863
    9. '  
' → logprob: -7.576855659484863
    10. '   
' → logprob: -7.951855659484863

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1734948754310608
    2. '#' → logprob: -2.798494815826416
    3. ' #' → logprob: -3.298494815826416
    4. '    ' → logprob: -3.298494815826416
    5. '
' → logprob: -4.673494815826416
    6. '     
' → logprob: -4.923494815826416
    7. '    
' → logprob: -5.548494815826416
    8. ' 
' → logprob: -6.798494815826416
    9. ' ' → logprob: -7.423494815826416
    10. '```' → logprob: -7.798494815826416

Token 118: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.19631415605545044
    2. ' #' → logprob: -2.1963140964508057
    3. '   ' → logprob: -2.9463140964508057
    4. 't' → logprob: -5.071314334869385
    5. ' t' → logprob: -5.571314334869385
    6. ' dot' → logprob: -6.946314334869385
    7. '
' → logprob: -7.196314334869385
    8. ' if' → logprob: -7.696314334869385
    9. '    ' → logprob: -7.821314334869385
    10. 'c' → logprob: -8.321313858032227

Token 119: ' Calcul' (ID: 57243)
  Prédit: ' dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dot' → logprob: -1.019448161125183
    2. 'c' → logprob: -1.269448161125183
    3. ' c' → logprob: -1.644448161125183
    4. 'dot' → logprob: -1.894448161125183
    5. '#' → logprob: -5.144448280334473
    6. ' segment' → logprob: -5.769448280334473
    7. '   ' → logprob: -6.144448280334473
    8. 'segment' → logprob: -6.769448280334473
    9. ' seg' → logprob: -7.394448280334473
    10. 'seg' → logprob: -8.019448280334473

Token 120: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.348162978887558
    2. ' t' → logprob: -2.473162889480591
    3. ' de' → logprob: -2.723162889480591
    4. ' du' → logprob: -2.723162889480591
    5. ' dot' → logprob: -3.473162889480591
    6. '    ' → logprob: -3.598162889480591
    7. ' ' → logprob: -5.22316312789917
    8. '  ' → logprob: -5.84816312789917
    9. ' of' → logprob: -5.97316312789917
    10. 't' → logprob: -6.34816312789917

Token 121: ' param' (ID: 3802)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.31516289710998535
    2. ' c' → logprob: -1.8151628971099854
    3. ' dot' → logprob: -2.4401628971099854
    4. 'dot' → logprob: -4.065162658691406
    5. 't' → logprob: -6.440162658691406
    6. ' t' → logprob: -7.565162658691406
    7. ' param' → logprob: -7.815162658691406
    8. 'param' → logprob: -8.565162658691406
    9. '```' → logprob: -9.190162658691406
    10. '	c' → logprob: -9.565162658691406

Token 122: 'ètre' (ID: 60948)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5824203491210938
    2. '_' → logprob: -1.8324203491210938
    3. 'eter' → logprob: -2.4574203491210938
    4. '_t' → logprob: -2.9574203491210938
    5. 'e' → logprob: -3.5824203491210938
    6. 'ètre' → logprob: -3.7074203491210938
    7. '_e' → logprob: -4.207420349121094
    8. '_c' → logprob: -4.332420349121094
    9. 's' → logprob: -4.457420349121094
    10. 'etre' → logprob: -4.582420349121094

Token 123: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.07890267670154572
    2. 't' → logprob: -2.5789027214050293
    3. ' ' → logprob: -12.078902244567871
    4. '	t' → logprob: -12.828902244567871
    5. '```' → logprob: -13.703902244567871
    6. '   ' → logprob: -14.578902244567871
    7. '  ' → logprob: -14.703902244567871
    8. ' param' → logprob: -14.703902244567871
    9. 's' → logprob: -15.078902244567871
    10. '`t' → logprob: -15.078902244567871

Token 124: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40083664655685425
    2. '=' → logprob: -1.275836706161499
    3. ' ' → logprob: -3.025836706161499
    4. ' =
' → logprob: -7.02583646774292
    5. ':' → logprob: -7.40083646774292
    6. ' :' → logprob: -8.775836944580078
    7. ' t' → logprob: -8.900836944580078
    8. '   ' → logprob: -9.025836944580078
    9. ',' → logprob: -9.025836944580078
    10. '    ' → logprob: -9.525836944580078

Token 125: ' la' (ID: 557)
  Prédit: ' proj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' proj' → logprob: -0.7331801652908325
    2. ' la' → logprob: -1.4831801652908325
    3. ' max' → logprob: -1.7331801652908325
    4. ' (' → logprob: -3.108180046081543
    5. ' le' → logprob: -3.983180046081543
    6. ' projection' → logprob: -4.358180046081543
    7. ' ' → logprob: -4.733180046081543
    8. ' projet' → logprob: -4.858180046081543
    9. 'max' → logprob: -5.858180046081543
    10. 'proj' → logprob: -6.108180046081543

Token 126: ' projection' (ID: 41244)
  Prédit: ' projection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' projection' → logprob: -0.3364748954772949
    2. 'projection' → logprob: -1.961474895477295
    3. ' max' → logprob: -3.086474895477295
    4. 'max' → logprob: -3.586474895477295
    5. ' dot' → logprob: -3.836474895477295
    6. ' ' → logprob: -4.086474895477295
    7. '   ' → logprob: -4.586474895477295
    8. '(' → logprob: -4.836474895477295
    9. 'dot' → logprob: -5.336474895477295
    10. ' (' → logprob: -6.836474895477295

Token 127: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3207797110080719
    2. ' t' → logprob: -2.570779800415039
    3. ' (' → logprob: -3.195779800415039
    4. ' ' → logprob: -3.445779800415039
    5. ' =' → logprob: -4.195779800415039
    6. 't' → logprob: -4.195779800415039
    7. ':' → logprob: -4.195779800415039
    8. ' du' → logprob: -4.320779800415039
    9. ',' → logprob: -4.445779800415039
    10. '=' → logprob: -4.570779800415039

Token 128: ' point' (ID: 2438)
  Prédit: ' wx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' wx' → logprob: -0.11166097223758698
    2. ' point' → logprob: -2.861660957336426
    3. 'wx' → logprob: -3.861660957336426
    4. ' w' → logprob: -4.111660957336426
    5. '(wx' → logprob: -5.236660957336426
    6. ' (' → logprob: -6.486660957336426
    7. 'w' → logprob: -6.611660957336426
    8. '(w' → logprob: -6.736660957336426
    9. 'point' → logprob: -7.861660957336426
    10. ' px' → logprob: -8.361660957336426

Token 129: ' sur' (ID: 1512)
  Prédit: ' sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.9041964411735535
    2. ' wx' → logprob: -1.2791965007781982
    3. ' (' → logprob: -2.5291965007781982
    4. ' du' → logprob: -2.6541965007781982
    5. ' ' → logprob: -3.2791965007781982
    6. 'wx' → logprob: -3.6541965007781982
    7. '   ' → logprob: -4.029196262359619
    8. 'sur' → logprob: -4.279196262359619
    9. ' w' → logprob: -4.404196262359619
    10. 'w' → logprob: -5.029196262359619

Token 130: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.10286892205476761
    2. ' segment' → logprob: -3.1028690338134766
    3. ' vx' → logprob: -3.6028690338134766
    4. ' the' → logprob: -4.477869033813477
    5. 'the' → logprob: -5.602869033813477
    6. 'segment' → logprob: -5.727869033813477
    7. ' la' → logprob: -5.727869033813477
    8. ' ' → logprob: -6.477869033813477
    9. 'vx' → logprob: -7.227869033813477
    10. 'le' → logprob: -8.227869033813477

Token 131: ' segment' (ID: 14806)
  Prédit: ' segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.031184112653136253
    2. 'segment' → logprob: -3.531184196472168
    3. ' vx' → logprob: -7.281184196472168
    4. ' vect' → logprob: -8.281184196472168
    5. 'vx' → logprob: -9.531184196472168
    6. ' seg' → logprob: -9.656184196472168
    7. '(segment' → logprob: -9.656184196472168
    8. ' segmento' → logprob: -9.906184196472168
    9. ' (' → logprob: -10.031184196472168
    10. 'v' → logprob: -10.656184196472168

Token 132: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46358948945999146
    2. ' t' → logprob: -2.0885894298553467
    3. '
' → logprob: -2.4635894298553467
    4. 't' → logprob: -2.8385894298553467
    5. ' 
' → logprob: -3.2135894298553467
    6. ' ' → logprob: -4.213589668273926
    7. '.' → logprob: -4.463589668273926
    8. ':' → logprob: -4.713589668273926
    9. '    ' → logprob: -4.838589668273926
    10. 'v' → logprob: -5.213589668273926

Token 133: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3107598125934601
    2. ' 
' → logprob: -2.4357597827911377
    3. ' t' → logprob: -2.4357597827911377
    4. 't' → logprob: -3.3107597827911377
    5. '
' → logprob: -4.310760021209717
    6. '    
' → logprob: -4.435760021209717
    7. '    ' → logprob: -4.560760021209717
    8. '     
' → logprob: -4.935760021209717
    9. ' ' → logprob: -5.310760021209717
    10. '  
' → logprob: -5.810760021209717

Token 134: ' c' (ID: 274)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -1.1825138330459595
    2. ' dot' → logprob: -1.5575138330459595
    3. 'v' → logprob: -2.43251371383667
    4. 't' → logprob: -2.55751371383667
    5. ' denom' → logprob: -2.93251371383667
    6. ' vx' → logprob: -3.05751371383667
    7. '   ' → logprob: -3.18251371383667
    8. ' v' → logprob: -3.18251371383667
    9. 'vx' → logprob: -3.55751371383667
    10. 'dot' → logprob: -3.55751371383667

Token 135: '1' (ID: 16)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6010775566101074
    2. '1' → logprob: -2.1010775566101074
    3. '_' → logprob: -2.4760775566101074
    4. '2' → logprob: -2.6010775566101074
    5. 'p' → logprob: -3.6010775566101074
    6. 'os' → logprob: -3.9760775566101074
    7. 'w' → logprob: -4.101077556610107
    8. '-' → logprob: -4.226077556610107
    9. 'o' → logprob: -4.351077556610107
    10. 't' → logprob: -4.601077556610107

Token 136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01251282636076212
    2. '=' → logprob: -4.387512683868408
    3. ' ' → logprob: -13.262513160705566
    4. ' =
' → logprob: -14.387513160705566
    5. ',' → logprob: -15.262513160705566
    6. ':' → logprob: -16.13751220703125
    7. '.' → logprob: -16.51251220703125
    8. ')' → logprob: -16.51251220703125
    9. ' ==' → logprob: -16.63751220703125
    10. '  ' → logprob: -16.76251220703125

Token 137: ' vx' (ID: 93588)
  Prédit: ' wx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' wx' → logprob: -0.0045954380184412
    2. ' vx' → logprob: -5.5045952796936035
    3. 'wx' → logprob: -7.6295952796936035
    4. '(wx' → logprob: -11.129595756530762
    5. ' ' → logprob: -11.754595756530762
    6. 'vx' → logprob: -12.629595756530762
    7. ' (' → logprob: -12.879595756530762
    8. '	wx' → logprob: -13.754595756530762
    9. ' ' → logprob: -14.129595756530762
    10. ' wy' → logprob: -15.004595756530762

Token 138: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.03367612883448601
    2. '*' → logprob: -3.4086761474609375
    3. '*w' → logprob: -11.033676147460938
    4. '*v' → logprob: -12.158676147460938
    5. '**' → logprob: -13.033676147460938
    6. 'wx' → logprob: -13.158676147460938
    7. ' wx' → logprob: -13.408676147460938
    8. ' ' → logprob: -13.658676147460938
    9. ' ' → logprob: -15.408676147460938
    10. '*u' → logprob: -15.533676147460938

Token 139: ' wx' (ID: 20113)
  Prédit: 'wx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wx' → logprob: -0.038109999150037766
    2. ' wx' → logprob: -3.2881100177764893
    3. '(wx' → logprob: -10.41310977935791
    4. '	wx' → logprob: -10.66310977935791
    5. 'w' → logprob: -11.41310977935791
    6. '.wx' → logprob: -13.03810977935791
    7. 'wy' → logprob: -13.91310977935791
    8. 'vx' → logprob: -14.78810977935791
    9. ' ' → logprob: -15.78810977935791
    10. 'Wx' → logprob: -16.038110733032227

Token 140: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.43497616052627563
    2. ' +' → logprob: -1.0599761009216309
    3. '<|end|>' → logprob: -5.934976100921631
    4. '+
' → logprob: -6.559976100921631
    5. ' +
' → logprob: -6.934976100921631
    6. '
' → logprob: -7.934976100921631
    7. ' ' → logprob: -8.559976577758789
    8. '#' → logprob: -9.059976577758789
    9. '.' → logprob: -9.309976577758789
    10. '-' → logprob: -9.684976577758789

Token 141: ' vy' (ID: 14190)
  Prédit: ' vy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vy' → logprob: -0.02235453575849533
    2. 'vy' → logprob: -3.8973546028137207
    3. ' wy' → logprob: -6.522354602813721
    4. 'wy' → logprob: -8.147354125976562
    5. ' ' → logprob: -10.147354125976562
    6. ' ' → logprob: -12.272354125976562
    7. '<|end|>' → logprob: -13.147354125976562
    8. 'y' → logprob: -14.522354125976562
    9. '0' → logprob: -14.522354125976562
    10. 'uy' → logprob: -14.772354125976562

Token 142: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.011037800461053848
    2. '*' → logprob: -4.761037826538086
    3. ' ' → logprob: -6.636037826538086
    4. ' wx' → logprob: -7.136037826538086
    5. '<|end|>' → logprob: -8.761037826538086
    6. ' wy' → logprob: -9.761037826538086
    7. ' ' → logprob: -10.011037826538086
    8. 'wy' → logprob: -10.636037826538086
    9. 'wx' → logprob: -11.386037826538086
    10. '*w' → logprob: -11.761037826538086

Token 143: ' wy' (ID: 14962)
  Prédit: 'wy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wy' → logprob: -0.632614254951477
    2. ' wy' → logprob: -0.757614254951477
    3. 'Wy' → logprob: -12.132614135742188
    4. ' ' → logprob: -12.382614135742188
    5. ' vy' → logprob: -13.757614135742188
    6. ' ' → logprob: -14.257614135742188
    7. 'w' → logprob: -14.257614135742188
    8. ' Wy' → logprob: -14.632614135742188
    9. 'WY' → logprob: -14.632614135742188
    10. ' wx' → logprob: -14.882614135742188

Token 144: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.00480889156460762
    2. '  
' → logprob: -6.3798089027404785
    3. ' 
' → logprob: -6.5048089027404785
    4. '    
' → logprob: -8.12980842590332
    5. '\n' → logprob: -8.12980842590332
    6. ' if' → logprob: -8.25480842590332
    7. '   ' → logprob: -8.50480842590332
    8. 'if' → logprob: -8.62980842590332
    9. '
' → logprob: -8.87980842590332
    10. '   
' → logprob: -8.87980842590332

Token 145: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.016201641410589218
    2. '  
' → logprob: -5.016201496124268
    3. '    
' → logprob: -6.391201496124268
    4. '   ' → logprob: -6.391201496124268
    5. ' 
' → logprob: -6.391201496124268
    6. '<|end|>' → logprob: -6.516201496124268
    7. ' /' → logprob: -6.891201496124268
    8. '   
' → logprob: -7.266201496124268
    9. '\n' → logprob: -8.641201972961426
    10. '<|end|>' → logprob: -8.766201972961426

Token 146: ' c' (ID: 274)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0787377581000328
    2. ' 
' → logprob: -3.953737735748291
    3. '   ' → logprob: -4.203737735748291
    4. '    
' → logprob: -4.453737735748291
    5. '  
' → logprob: -4.578737735748291
    6. '\n' → logprob: -5.078737735748291
    7. 'if' → logprob: -5.453737735748291
    8. ' if' → logprob: -5.578737735748291
    9. '   
' → logprob: -5.953737735748291
    10. '0' → logprob: -7.453737735748291

Token 147: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.75641268491745
    2. '2' → logprob: -0.88141268491745
    3. '_' → logprob: -2.6314127445220947
    4. '=' → logprob: -4.006412506103516
    5. ' ' → logprob: -4.881412506103516
    6. ' if' → logprob: -5.631412506103516
    7. ' /' → logprob: -5.881412506103516
    8. 'if' → logprob: -6.631412506103516
    9. 'c' → logprob: -6.756412506103516
    10. ':' → logprob: -6.756412506103516

Token 148: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0017082560807466507
    2. '=' → logprob: -6.376708030700684
    3. ' ' → logprob: -12.876708030700684
    4. ' ==' → logprob: -13.376708030700684
    5. ':' → logprob: -14.251708030700684
    6. ' =
' → logprob: -14.751708030700684
    7. ' :=' → logprob: -15.251708030700684
    8. ' if' → logprob: -15.501708030700684
    9. ')' → logprob: -16.126708984375
    10. ' =)' → logprob: -16.251708984375

Token 149: ' vx' (ID: 93588)
  Prédit: ' vx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vx' → logprob: -0.0013286912580952048
    2. 'vx' → logprob: -6.626328468322754
    3. '   ' → logprob: -13.626328468322754
    4. ' ' → logprob: -14.501328468322754
    5. ' math' → logprob: -15.001328468322754
    6. ' v' → logprob: -15.626328468322754
    7. '1' → logprob: -16.12632942199707
    8. '	v' → logprob: -16.37632942199707
    9. ' vy' → logprob: -16.62632942199707
    10. ' VX' → logprob: -17.75132942199707

Token 150: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0002258277963846922
    2. '*' → logprob: -8.625226020812988
    3. ' **' → logprob: -10.625226020812988
    4. ' ' → logprob: -11.250226020812988
    5. '**' → logprob: -11.750226020812988
    6. '2' → logprob: -14.250226020812988
    7. ' ' → logprob: -15.500226020812988
    8. '*v' → logprob: -17.125225067138672
    9. '```' → logprob: -17.750225067138672
    10. '²' → logprob: -18.000225067138672

Token 151: ' vx' (ID: 93588)
  Prédit: ' vx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vx' → logprob: -0.28165075182914734
    2. 'vx' → logprob: -1.4066507816314697
    3. ' ' → logprob: -8.28165054321289
    4. '2' → logprob: -8.65665054321289
    5. '
' → logprob: -10.28165054321289
    6. ' vy' → logprob: -11.53165054321289
    7. 'v' → logprob: -11.65665054321289
    8. 'x' → logprob: -12.40665054321289
    9. '0' → logprob: -12.53165054321289
    10. 'vy' → logprob: -12.90665054321289

Token 152: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.0788913294672966
    2. '+' → logprob: -2.5788912773132324
    3. ' +
' → logprob: -13.95389175415039
    4. ' ' → logprob: -15.07889175415039
    5. '＋' → logprob: -16.57889175415039
    6. '+
' → logprob: -16.82889175415039
    7. '   ' → logprob: -16.95389175415039
    8. ' +
' → logprob: -17.07889175415039
    9. '+y' → logprob: -17.45389175415039
    10. '<|end|>' → logprob: -17.57889175415039

Token 153: ' vy' (ID: 14190)
  Prédit: ' vy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vy' → logprob: -0.005279534496366978
    2. 'vy' → logprob: -5.255279541015625
    3. '<|end|>' → logprob: -10.880279541015625
    4. ' ' → logprob: -11.130279541015625
    5. ' wy' → logprob: -12.255279541015625
    6. ' vya' → logprob: -13.005279541015625
    7. '```' → logprob: -14.630279541015625
    8. '  ' → logprob: -14.755279541015625
    9. ' ' → logprob: -14.755279541015625
    10. ' uy' → logprob: -15.005279541015625

Token 154: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.05221345275640488
    2. '*' → logprob: -4.052213668823242
    3. ' vy' → logprob: -4.427213668823242
    4. ' ' → logprob: -4.427213668823242
    5. 'vy' → logprob: -4.927213668823242
    6. '<|end|>' → logprob: -6.552213668823242
    7. '2' → logprob: -7.302213668823242
    8. ' ' → logprob: -9.927213668823242
    9. '   ' → logprob: -10.552213668823242
    10. ' vx' → logprob: -10.552213668823242

Token 155: ' vy' (ID: 14190)
  Prédit: ' vy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vy' → logprob: -0.08896869421005249
    2. 'vy' → logprob: -2.4639687538146973
    3. 'y' → logprob: -11.713968276977539
    4. ' ' → logprob: -12.338968276977539
    5. 'v' → logprob: -12.588968276977539
    6. '<|end|>' → logprob: -12.963968276977539
    7. ' wy' → logprob: -13.088968276977539
    8. 'wy' → logprob: -13.088968276977539
    9. ' vya' → logprob: -13.838968276977539
    10. 'yv' → logprob: -14.213968276977539

Token 156: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.002963203703984618
    2. '    
' → logprob: -6.627963066101074
    3. '  
' → logprob: -7.127963066101074
    4. ' 
' → logprob: -7.877963066101074
    5. '   
' → logprob: -8.377963066101074
    6. '   ' → logprob: -8.627963066101074
    7. '
' → logprob: -11.127963066101074
    8. '\n' → logprob: -11.627963066101074
    9. '

' → logprob: -11.752963066101074
    10. '	
' → logprob: -12.252963066101074

Token 157: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02119242027401924
    2. ' 
' → logprob: -4.64619255065918
    3. '  
' → logprob: -5.77119255065918
    4. '   ' → logprob: -5.89619255065918
    5. '\n' → logprob: -6.14619255065918
    6. '    
' → logprob: -6.14619255065918
    7. '   
' → logprob: -6.89619255065918
    8. '     
' → logprob: -9.52119255065918
    9. '

' → logprob: -10.89619255065918
    10. ' if' → logprob: -11.02119255065918

Token 158: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22454075515270233
    2. '\n' → logprob: -3.0995407104492188
    3. '    
' → logprob: -3.2245407104492188
    4. '   ' → logprob: -3.4745407104492188
    5. '  
' → logprob: -3.5995407104492188
    6. ' 
' → logprob: -3.7245407104492188
    7. 'if' (adapté à ' if') → logprob: -4.224540710449219
    8. ' if' → logprob: -4.599540710449219
    9. '   
' → logprob: -4.849540710449219
    10. '     
' → logprob: -7.849540710449219

Token 159: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -2.8802491215174086e-05
    2. 'c' → logprob: -11.125028610229492
    3. ' ' → logprob: -11.250028610229492
    4. '	c' → logprob: -13.875028610229492
    5. '   ' → logprob: -17.125028610229492
    6. '  ' → logprob: -17.250028610229492
    7. '```' → logprob: -17.500028610229492
    8. ' ' → logprob: -17.625028610229492
    9. ' not' → logprob: -17.750028610229492
    10. ' abs' → logprob: -19.750028610229492

Token 160: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02405289001762867
    2. '1' → logprob: -3.774052858352661
    3. ' ' → logprob: -7.52405309677124
    4. '_' → logprob: -8.649052619934082
    5. ' ==' → logprob: -10.899052619934082
    6. ' _' → logprob: -11.024052619934082
    7. '   ' → logprob: -11.524052619934082
    8. '==' → logprob: -11.649052619934082
    9. '  ' → logprob: -11.774052619934082
    10. '```' → logprob: -11.899052619934082

Token 161: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4293317496776581
    2. '==' → logprob: -1.0543317794799805
    3. '=' → logprob: -7.4293317794799805
    4. ' =' → logprob: -11.42933177947998
    5. ' <=' → logprob: -11.42933177947998
    6. '<=' → logprob: -11.80433177947998
    7. '==
' → logprob: -12.67933177947998
    8. '```' → logprob: -13.42933177947998
    9. ' ' → logprob: -14.05433177947998
    10. '0' → logprob: -14.67933177947998

Token 162: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4740787148475647
    2. ' ' → logprob: -0.9740787148475647
    3. ' ' → logprob: -13.599079132080078
    4. '  ' → logprob: -15.099079132080078
    5. '<|end|>' → logprob: -16.724079132080078
    6. '  
' → logprob: -17.224079132080078
    7. '   ' → logprob: -17.349079132080078
    8. '۰' → logprob: -17.849079132080078
    9. '```' → logprob: -18.224079132080078
    10. ' 
' → logprob: -18.536579132080078

Token 163: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011048054322600365
    2. ' ' → logprob: -4.511047840118408
    3. ' ' → logprob: -16.63604736328125
    4. '   ' → logprob: -17.13604736328125
    5. '  ' → logprob: -17.63604736328125
    6. '۰' → logprob: -17.63604736328125
    7. '```' → logprob: -18.88604736328125
    8. '00' → logprob: -19.26104736328125
    9. '０' → logprob: -20.01104736328125
    10. '٠' → logprob: -20.01104736328125

Token 164: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02040267176926136
    2. ' :' → logprob: -4.270402908325195
    3. ':
' → logprob: -5.145402908325195
    4. ' :
' → logprob: -8.020402908325195
    5. ':return' → logprob: -9.895402908325195
    6. ' ' → logprob: -11.895402908325195
    7. '.' → logprob: -12.395402908325195
    8. '):' → logprob: -14.395402908325195
    9. ':

' → logprob: -14.895402908325195
    10. '
' → logprob: -14.895402908325195

Token 165: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5151195526123047
    2. '    ' → logprob: -1.8901195526123047
    3. ' return' → logprob: -2.5151195526123047
    4. '       ' → logprob: -2.7651195526123047
    5. ' ' → logprob: -3.3901195526123047
    6. ':' → logprob: -3.3901195526123047
    7. 'return' → logprob: -4.140119552612305
    8. ':return' → logprob: -4.515119552612305
    9. '  ' → logprob: -5.890119552612305
    10. '
' → logprob: -6.015119552612305

Token 166: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7489888072013855
    2. 'return' → logprob: -1.3739888668060303
    3. '   ' → logprob: -1.4989888668060303
    4. '    ' → logprob: -3.2489888668060303
    5. ' ' → logprob: -5.873988628387451
    6. '#' (adapté à ' #') → logprob: -6.123988628387451
    7. '       ' → logprob: -6.248988628387451
    8. ' #' → logprob: -6.748988628387451
    9. '	return' → logprob: -7.123988628387451
    10. '    
' → logprob: -7.498988628387451

Token 167: ' Les' (ID: 7029)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.23790180683135986
    2. 'return' → logprob: -1.6129018068313599
    3. '#' → logprob: -4.98790168762207
    4. ' #' → logprob: -5.73790168762207
    5. '   ' → logprob: -6.36290168762207
    6. ' retour' → logprob: -9.48790168762207
    7. ' math' → logprob: -9.61290168762207
    8. 'import' → logprob: -9.86290168762207
    9. '    ' → logprob: -9.86290168762207
    10. '	return' → logprob: -9.86290168762207

Token 168: ' deux' (ID: 10301)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1987231969833374
    2. ' #' → logprob: -1.9487231969833374
    3. '#' → logprob: -2.073723316192627
    4. ' points' → logprob: -2.323723316192627
    5. 'distance' → logprob: -3.198723316192627
    6. ' distances' → logprob: -3.198723316192627
    7. ' point' → logprob: -3.323723316192627
    8. ' x' → logprob: -3.448723316192627
    9. 'x' → logprob: -3.448723316192627
    10. ' return' → logprob: -3.823723316192627

Token 169: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.043656595051288605
    2. 'points' → logprob: -3.168656587600708
    3. 'x' → logprob: -8.543656349182129
    4. ' point' → logprob: -8.918656349182129
    5. 'point' → logprob: -9.293656349182129
    6. ' ' → logprob: -9.668656349182129
    7. ' endpoints' → logprob: -9.793656349182129
    8. 'pts' → logprob: -10.293656349182129
    9. '_points' → logprob: -10.668656349182129
    10. '	points' → logprob: -11.543656349182129

Token 170: ' de' (ID: 334)
  Prédit: ' du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.4513726234436035
    2. ' sont' → logprob: -1.0763726234436035
    3. ' ' → logprob: -4.4513726234436035
    4. 'du' → logprob: -5.0763726234436035
    5. 's' → logprob: -6.0763726234436035
    6. ' représentent' → logprob: -7.4513726234436035
    7. '#' → logprob: -8.326372146606445
    8. ' de' → logprob: -8.826372146606445
    9. ' coinc' → logprob: -8.951372146606445
    10. '   ' → logprob: -8.951372146606445

Token 171: ' segment' (ID: 14806)
  Prédit: ' segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.6911739706993103
    2. 'segment' → logprob: -0.8161739706993103
    3. ' ' → logprob: -3.316174030303955
    4. 'x' → logprob: -5.441174030303955
    5. '1' → logprob: -5.816174030303955
    6. ' le' → logprob: -5.816174030303955
    7. 'l' → logprob: -6.066174030303955
    8. ' la' → logprob: -6.441174030303955
    9. 'le' → logprob: -7.191174030303955
    10. ' x' → logprob: -7.191174030303955

Token 172: ' sont' (ID: 5242)
  Prédit: ' sont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.022570637986063957
    2. 's' → logprob: -4.397570610046387
    3. ' ' → logprob: -4.772570610046387
    4. ' are' → logprob: -7.147570610046387
    5. ' coinc' → logprob: -8.522570610046387
    6. ' représentent' → logprob: -9.147570610046387
    7. '   ' → logprob: -9.897570610046387
    8. ' return' → logprob: -10.397570610046387
    9. ',' → logprob: -10.397570610046387
    10. '  ' → logprob: -10.647570610046387

Token 173: ' conf' (ID: 2815)
  Prédit: ' ident'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ident' → logprob: -0.5465754270553589
    2. 'ident' → logprob: -0.9215754270553589
    3. ' ég' → logprob: -4.296575546264648
    4. ' les' → logprob: -5.171575546264648
    5. 'les' → logprob: -6.921575546264648
    6. '_ident' → logprob: -7.171575546264648
    7. ' coinc' → logprob: -7.796575546264648
    8. 'Ident' → logprob: -8.046575546264648
    9. 'le' → logprob: -8.546575546264648
    10. ' ' → logprob: -8.546575546264648

Token 174: 'ond' (ID: 1415)
  Prédit: 'ond'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ond' → logprob: -0.025327110663056374
    2. 'on' → logprob: -3.775327205657959
    3. 'onds' → logprob: -6.775327205657959
    4. 'us' → logprob: -7.525327205657959
    5. 'ondes' → logprob: -10.1503267288208
    6. 'dus' → logprob: -10.2753267288208
    7. 'онд' → logprob: -10.4003267288208
    8. '{' → logprob: -10.6503267288208
    9. '```' → logprob: -10.6503267288208
    10. '﻿' → logprob: -10.6503267288208

Token 175: 'us' (ID: 385)
  Prédit: 'us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.005117295775562525
    2. 'u' → logprob: -5.380117416381836
    3. 'ús' → logprob: -8.130117416381836
    4. '
' → logprob: -10.505117416381836
    5. 'és' → logprob: -10.755117416381836
    6. '

' → logprob: -11.130117416381836
    7. '```' → logprob: -11.130117416381836
    8. ' us' → logprob: -11.505117416381836
    9. '   ' → logprob: -11.630117416381836
    10. 'e' → logprob: -12.130117416381836

Token 176: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.96883225440979
    2. '   ' → logprob: -1.09383225440979
    3. '
' → logprob: -3.21883225440979
    4. ' :' → logprob: -3.21883225440979
    5. ' :
' → logprob: -3.34383225440979
    6. ' ' → logprob: -3.59383225440979
    7. ' return' → logprob: -3.71883225440979
    8. '.' → logprob: -3.71883225440979
    9. ' 
' → logprob: -3.96883225440979
    10. ',' → logprob: -4.093832015991211

Token 177: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20870867371559143
    2. '   ' → logprob: -1.958708643913269
    3. ' 
' → logprob: -4.333708763122559
    4. '    
' → logprob: -4.583708763122559
    5. '       ' → logprob: -4.708708763122559
    6. ' return' → logprob: -5.333708763122559
    7. '  
' → logprob: -5.833708763122559
    8. '   
' → logprob: -5.833708763122559
    9. 'return' → logprob: -6.583708763122559
    10. '        
' → logprob: -7.083708763122559

Token 178: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.22927942872047424
    2. 'return' (adapté à ' return') → logprob: -1.6042793989181519
    3. '   ' → logprob: -5.604279518127441
    4. '	return' → logprob: -9.604279518127441
    5. '       ' → logprob: -10.854279518127441
    6. ' ' → logprob: -10.854279518127441
    7. '    
' → logprob: -10.979279518127441
    8. '    ' → logprob: -10.979279518127441
    9. '
' → logprob: -12.354279518127441
    10. ' 
' → logprob: -12.479279518127441

Token 179: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.3132786154747009
    2. 'math' → logprob: -1.3132786750793457
    3. '(math' → logprob: -11.563278198242188
    4. ' ' → logprob: -12.938278198242188
    5. ' ' → logprob: -13.563278198242188
    6. 'Math' → logprob: -14.438278198242188
    7. 'm' → logprob: -14.438278198242188
    8. ' m' → logprob: -15.063278198242188
    9. 'cmath' → logprob: -15.188278198242188
    10. '.math' → logprob: -15.250778198242188

Token 180: '.h' (ID: 1508)
  Prédit: '.sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.03176421299576759
    2. '.' → logprob: -3.781764268875122
    3. '.dist' → logprob: -5.031764030456543
    4. '.h' → logprob: -6.281764030456543
    5. '.atan' → logprob: -10.281764030456543
    6. '.s' → logprob: -11.406764030456543
    7. '.Sqrt' → logprob: -11.781764030456543
    8. '.distance' → logprob: -12.031764030456543
    9. '.f' → logprob: -12.156764030456543
    10. '.isnan' → logprob: -12.406764030456543

Token 181: 'yp' (ID: 1785)
  Prédit: 'yp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yp' → logprob: -2.2961512513575144e-05
    2. 'hyp' → logprob: -11.250022888183594
    3. 'sqrt' → logprob: -11.625022888183594
    4. ' hypot' → logprob: -15.250022888183594
    5. '```' → logprob: -16.125022888183594
    6. 'y' → logprob: -16.250022888183594
    7. '   ' → logprob: -16.250022888183594
    8. 'e' → logprob: -17.125022888183594
    9. 'yper' → logprob: -17.125022888183594
    10. 'eu' → logprob: -17.250022888183594

Token 182: 'ot' (ID: 346)
  Prédit: 'ot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -3.333223139634356e-05
    2. 'ots' → logprob: -11.000033378601074
    3. 'otp' → logprob: -12.000033378601074
    4. 'o' → logprob: -12.750033378601074
    5. 'at' → logprob: -12.875033378601074
    6. '```' → logprob: -14.250033378601074
    7. 'otl' → logprob: -14.375033378601074
    8. 's' → logprob: -14.625033378601074
    9. 'sqrt' → logprob: -14.750033378601074
    10. 'от' → logprob: -14.875033378601074

Token 183: '(px' (ID: 195026)
  Prédit: '(px'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(px' → logprob: -0.03002307377755642
    2. '(wx' → logprob: -3.5300230979919434
    3. '(w' → logprob: -8.905022621154785
    4. '(py' → logprob: -9.280022621154785
    5. '(' → logprob: -10.280022621154785
    6. '((' → logprob: -12.655022621154785
    7. '(p' → logprob: -13.280022621154785
    8. 'px' → logprob: -13.530022621154785
    9. ' (' → logprob: -14.780022621154785
    10. ':px' → logprob: -14.905022621154785

Token 184: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.005247275810688734
    2. '-' → logprob: -5.255247116088867
    3. ' ' → logprob: -11.380247116088867
    4. '-x' → logprob: -13.505247116088867
    5. '-p' → logprob: -14.755247116088867
    6. ',' → logprob: -15.880247116088867
    7. ' ' → logprob: -17.005247116088867
    8. ' –' → logprob: -17.755247116088867
    9. ' ,' → logprob: -18.380247116088867
    10. ' py' → logprob: -18.505247116088867

Token 185: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0015023599844425917
    2. ' x' → logprob: -6.501502513885498
    3. '	x' → logprob: -17.751502990722656
    4. '<|end|>' → logprob: -18.376502990722656
    5. '(x' → logprob: -19.001502990722656
    6. ' ' → logprob: -19.126502990722656
    7. ')x' → logprob: -19.626502990722656
    8. '"x' → logprob: -19.751502990722656
    9. ',x' → logprob: -19.751502990722656
    10. ',' → logprob: -20.376502990722656

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.375000953674316
    3. '<|end|>' → logprob: -16.0
    4. ',' → logprob: -17.25
    5. '１' → logprob: -18.4375
    6. '```' → logprob: -18.6875
    7. '১' → logprob: -18.8125
    8. '۱' → logprob: -19.5
    9. '_' → logprob: -19.75
    10. ')' → logprob: -19.8125

Token 187: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008673311211168766
    2. ' ,' → logprob: -4.758673191070557
    3. ',y' → logprob: -9.758673667907715
    4. ',
' → logprob: -14.383673667907715
    5. ',p' → logprob: -15.133673667907715
    6. ' ,
' → logprob: -16.5086727142334
    7. '‌,' → logprob: -17.0086727142334
    8. ',

' → logprob: -17.1336727142334
    9. ' ' → logprob: -18.1336727142334
    10. ',\
' → logprob: -18.2586727142334

Token 188: ' py' (ID: 13104)
  Prédit: ' py'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' py' → logprob: -0.4780164062976837
    2. 'py' → logprob: -0.9780163764953613
    3. 'y' → logprob: -6.228016376495361
    4. ' y' → logprob: -6.478016376495361
    5. '_py' → logprob: -8.47801685333252
    6. '(py' → logprob: -8.60301685333252
    7. '.py' → logprob: -10.60301685333252
    8. ' ' → logprob: -13.60301685333252
    9. ' ' → logprob: -14.22801685333252
    10. 'ipy' → logprob: -14.35301685333252

Token 189: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07912717014551163
    2. '-' → logprob: -2.579127073287964
    3. ' ' → logprob: -9.079127311706543
    4. ' y' → logprob: -9.329127311706543
    5. '-y' → logprob: -11.329127311706543
    6. 'y' → logprob: -11.704127311706543
    7. ',' → logprob: -11.704127311706543
    8. '<|end|>' → logprob: -12.829127311706543
    9. ')' → logprob: -13.579127311706543
    10. ' -
' → logprob: -15.329127311706543

Token 190: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0031781906727701426
    2. ' y' → logprob: -5.753178119659424
    3. ' ' → logprob: -15.128178596496582
    4. '	y' → logprob: -16.378177642822266
    5. '  ' → logprob: -16.878177642822266
    6. '   ' → logprob: -17.128177642822266
    7. '    ' → logprob: -17.753177642822266
    8. '1' → logprob: -18.128177642822266
    9. '<|end|>' → logprob: -18.128177642822266
    10. ''y' → logprob: -19.253177642822266

Token 191: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.375000953674316
    3. ')' → logprob: -16.25
    4. '2' → logprob: -16.5
    5. '```' → logprob: -18.125
    6. '１' → logprob: -18.375
    7. 'py' → logprob: -18.6875
    8. ',' → logprob: -18.75
    9. '১' → logprob: -18.9375
    10. '<|end|>' → logprob: -19.125

Token 192: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00028493450372479856
    2. ')
' → logprob: -8.250285148620605
    3. ' )' → logprob: -11.250285148620605
    4. '   ' → logprob: -11.500285148620605
    5. ' ' → logprob: -15.625285148620605
    6. '))' → logprob: -15.750285148620605
    7. ')

' → logprob: -16.00028419494629
    8. ')
' → logprob: -16.25028419494629
    9. ' )
' → logprob: -17.12528419494629
    10. ')return' → logprob: -17.25028419494629

Token 193: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4724489748477936
    2. '
' → logprob: -1.0974489450454712
    3. '    
' → logprob: -3.3474490642547607
    4. 't' → logprob: -5.972448825836182
    5. ' 
' → logprob: -6.347448825836182
    6. '  
' → logprob: -6.597448825836182
    7. '   
' → logprob: -6.847448825836182
    8. ' t' → logprob: -7.472448825836182
    9. '        
' → logprob: -9.72244930267334
    10. '     
' → logprob: -9.97244930267334

Token 194: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.4450094401836395
    2. ' t' → logprob: -1.070009469985962
    3. '   ' → logprob: -4.320009231567383
    4. '
' → logprob: -6.320009231567383
    5. '    
' → logprob: -7.070009231567383
    6. '   
' → logprob: -9.820009231567383
    7. ' 
' → logprob: -9.820009231567383
    8. '  ' → logprob: -10.820009231567383
    9. '  
' → logprob: -10.820009231567383
    10. '    ' → logprob: -10.820009231567383

Token 195: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018150178715586662
    2. '=' → logprob: -4.018150329589844
    3. ' ' → logprob: -15.643150329589844
    4. '=c' → logprob: -17.143150329589844
    5. '=t' → logprob: -17.393150329589844
    6. ' /=' → logprob: -17.893150329589844
    7. '＝' → logprob: -18.768150329589844
    8. '=cut' → logprob: -18.893150329589844
    9. '=int' → logprob: -19.018150329589844
    10. ' =
' → logprob: -19.393150329589844

Token 196: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.31360509991645813
    2. ' c' → logprob: -1.3136050701141357
    3. ' max' → logprob: -8.188605308532715
    4. 'max' → logprob: -9.688605308532715
    5. ' ' → logprob: -12.938605308532715
    6. '	c' → logprob: -14.813605308532715
    7. '   ' → logprob: -15.438605308532715
    8. ' ' → logprob: -16.3136043548584
    9. ' min' → logprob: -16.5636043548584
    10. 'float' → logprob: -16.8136043548584

Token 197: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.625001907348633
    3. '１' → logprob: -16.750001907348633
    4. ' /' → logprob: -16.875001907348633
    5. '   ' → logprob: -17.375001907348633
    6. 'c' → logprob: -18.250001907348633
    7. '۱' → logprob: -18.312501907348633
    8. ' t' → logprob: -18.562501907348633
    9. '  ' → logprob: -18.937501907348633
    10. '```' → logprob: -19.062501907348633

Token 198: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.01454154308885336
    2. '/' → logprob: -4.2645416259765625
    3. '/c' → logprob: -7.8895416259765625
    4. '   ' → logprob: -13.014541625976562
    5. ' /
' → logprob: -14.889541625976562
    6. '/t' → logprob: -15.514541625976562
    7. ' ' → logprob: -15.889541625976562
    8. 'c' → logprob: -16.014541625976562
    9. ' ' → logprob: -16.639541625976562
    10. '```' → logprob: -17.389541625976562

Token 199: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.10020667314529419
    2. ' c' → logprob: -2.3502066135406494
    3. ' ' → logprob: -17.35020637512207
    4. '	c' → logprob: -17.60020637512207
    5. ')c' → logprob: -18.35020637512207
    6. '(c' → logprob: -18.72520637512207
    7. '<|end|>' → logprob: -19.60020637512207
    8. '$c' → logprob: -19.72520637512207
    9. '   ' → logprob: -19.85020637512207
    10. '```' → logprob: -19.85020637512207

Token 200: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '```' → logprob: -19.25
    4. 'c' → logprob: -19.5
    5. '۲' → logprob: -19.75
    6. '²' → logprob: -20.25
    7. '_' → logprob: -20.625
    8. '   ' → logprob: -20.625
    9. '₂' → logprob: -20.625
    10. '２' → logprob: -21.0

Token 201: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48300617933273315
    2. '   ' → logprob: -0.9830061793327332
    3. 'if' → logprob: -5.358006000518799
    4. '    
' → logprob: -6.358006000518799
    5. ' if' → logprob: -6.358006000518799
    6. '  
' → logprob: -8.108006477355957
    7. ' 
' → logprob: -8.733006477355957
    8. 't' → logprob: -10.108006477355957
    9. '   
' → logprob: -10.108006477355957
    10. '<|end|>' → logprob: -10.358006477355957

Token 202: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4900238811969757
    2. '
' → logprob: -0.9900238513946533
    3. '    
' → logprob: -4.865024089813232
    4. ' 
' → logprob: -5.240024089813232
    5. '  
' → logprob: -6.740024089813232
    6. '\n' → logprob: -7.615024089813232
    7. 'if' → logprob: -7.615024089813232
    8. ' if' → logprob: -7.865024089813232
    9. '   
' → logprob: -9.240023612976074
    10. '	
' → logprob: -10.240023612976074

Token 203: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9680646657943726
    2. 'if' (adapté à ' if') → logprob: -0.9680646657943726
    3. ' if' → logprob: -1.4680646657943726
    4. 't' → logprob: -4.718064785003662
    5. ' t' → logprob: -6.968064785003662
    6. '
' → logprob: -9.968064308166504
    7. '    
' → logprob: -10.343064308166504
    8. ' ' → logprob: -11.593064308166504
    9. '	if' → logprob: -11.718064308166504
    10. '    ' → logprob: -11.718064308166504

Token 204: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.31328463554382324
    2. ' t' → logprob: -1.3132846355438232
    3. ' ' → logprob: -11.313284873962402
    4. '0' → logprob: -12.438284873962402
    5. '   ' → logprob: -12.438284873962402
    6. '	t' → logprob: -13.188284873962402
    7. '  ' → logprob: -14.063284873962402
    8. '    ' → logprob: -16.438283920288086
    9. ' ' → logprob: -17.563283920288086
    10. '1' → logprob: -17.813283920288086

Token 205: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.04976651072502136
    2. '<' → logprob: -3.4247665405273438
    3. ' <=' → logprob: -4.174766540527344
    4. '<=' → logprob: -7.424766540527344
    5. ' ' → logprob: -11.174766540527344
    6. '   ' → logprob: -14.549766540527344
    7. ' ≤' → logprob: -15.299766540527344
    8. ' \<' → logprob: -15.299766540527344
    9. '[' → logprob: -15.424766540527344
    10. '0' → logprob: -15.424766540527344

Token 206: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002185118617489934
    2. ' ' → logprob: -6.127185344696045
    3. '=' → logprob: -17.377185821533203
    4. '   ' → logprob: -17.627185821533203
    5. '<|end|>' → logprob: -17.877185821533203
    6. '1' → logprob: -18.127185821533203
    7. '۰' → logprob: -19.377185821533203
    8. '  ' → logprob: -19.377185821533203
    9. '    ' → logprob: -21.002185821533203
    10. '<|end|>' → logprob: -21.564685821533203

Token 207: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '=' → logprob: -20.00000762939453
    4. '1' → logprob: -20.50000762939453
    5. '   ' → logprob: -20.87500762939453
    6. '۰' → logprob: -21.37500762939453
    7. '```' → logprob: -21.87500762939453
    8. '  ' → logprob: -22.25000762939453
    9. '<|end|>' → logprob: -22.37500762939453
    10. '00' → logprob: -23.50000762939453

Token 208: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013512886129319668
    2. ':
' → logprob: -4.513513088226318
    3. ' :' → logprob: -7.013513088226318
    4. '   ' → logprob: -7.263513088226318
    5. ':return' → logprob: -8.26351261138916
    6. '<|end|>' → logprob: -8.26351261138916
    7. '.' → logprob: -9.13851261138916
    8. '       ' → logprob: -9.38851261138916
    9. '):' → logprob: -10.38851261138916
    10. ' :
' → logprob: -10.38851261138916

Token 209: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02541208453476429
    2. ':' → logprob: -4.275412082672119
    3. '   ' → logprob: -4.900412082672119
    4. '    ' → logprob: -6.400412082672119
    5. ' :' → logprob: -6.650412082672119
    6. ' return' → logprob: -7.900412082672119
    7. 'return' → logprob: -9.025412559509277
    8. ' ' → logprob: -9.775412559509277
    9. ':return' → logprob: -10.025412559509277
    10. '      ' → logprob: -10.525412559509277

Token 210: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0891113355755806
    2. ' return' → logprob: -2.839111328125
    3. 'return' → logprob: -3.714111328125
    4. '   ' → logprob: -6.089111328125
    5. '    ' → logprob: -9.964111328125
    6. ' ' → logprob: -10.589111328125
    7. '	return' → logprob: -11.464111328125
    8. '
' → logprob: -11.839111328125
    9. '        
' → logprob: -11.964111328125
    10. ' ' → logprob: -11.964111328125

Token 211: ' Projection' (ID: 147285)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3886270821094513
    2. 'return' → logprob: -1.138627052307129
    3. '   ' → logprob: -6.638627052307129
    4. '    ' → logprob: -8.638627052307129
    5. '       ' → logprob: -9.138627052307129
    6. ' ' → logprob: -9.763627052307129
    7. '0' → logprob: -10.013627052307129
    8. '1' → logprob: -10.763627052307129
    9. '	return' → logprob: -11.388627052307129
    10. '  ' → logprob: -11.763627052307129

Token 212: ' avant' (ID: 13339)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9758405089378357
    2. '       ' → logprob: -1.4758405685424805
    3. ' =' → logprob: -2.2258405685424805
    4. '=' → logprob: -2.9758405685424805
    5. ' ==' → logprob: -3.1008405685424805
    6. ' return' → logprob: -3.4758405685424805
    7. ' point' → logprob: -3.4758405685424805
    8. ' est' → logprob: -4.2258405685424805
    9. ' <=' → logprob: -4.3508405685424805
    10. 'return' → logprob: -4.3508405685424805

Token 213: ' le' (ID: 505)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.0282602310180664
    2. 'return' → logprob: -1.0282602310180664
    3. '       ' → logprob: -1.2782602310180664
    4. '   ' → logprob: -5.278260231018066
    5. ':' → logprob: -8.278260231018066
    6. ':return' → logprob: -8.653260231018066
    7. ' ' → logprob: -8.778260231018066
    8. '    ' → logprob: -9.403260231018066
    9. '           ' → logprob: -9.528260231018066
    10. ',' → logprob: -10.153260231018066

Token 214: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.5493630766868591
    2. 'x' → logprob: -1.174363136291504
    3. '0' → logprob: -2.299363136291504
    4. 'dé' → logprob: -5.174363136291504
    5. '1' → logprob: -5.424363136291504
    6. ' segment' → logprob: -6.549363136291504
    7. 'point' → logprob: -7.049363136291504
    8. 'seg' → logprob: -7.924363136291504
    9. '(x' → logprob: -8.299363136291504
    10. 'prem' → logprob: -9.049363136291504

Token 215: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2322651743888855
    2. '   ' → logprob: -1.7322652339935303
    3. ':' → logprob: -4.482264995574951
    4. ' return' → logprob: -4.607264995574951
    5. 'return' → logprob: -5.982264995574951
    6. '
' → logprob: -6.107264995574951
    7. '        
' → logprob: -6.732264995574951
    8. '    ' → logprob: -7.607264995574951
    9. ':
' → logprob: -7.732264995574951
    10. '    
' → logprob: -7.857264995574951

Token 216: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03209870681166649
    2. ' return' → logprob: -3.9070987701416016
    3. 'return' → logprob: -4.907098770141602
    4. '   ' → logprob: -5.657098770141602
    5. '
' → logprob: -8.032098770141602
    6. '        
' → logprob: -9.657098770141602
    7. '    ' → logprob: -9.782098770141602
    8. '           ' → logprob: -9.907098770141602
    9. '	return' → logprob: -11.032098770141602
    10. ' 
' → logprob: -11.157098770141602

Token 217: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03037884458899498
    2. ' return' → logprob: -3.530378818511963
    3. '       ' → logprob: -7.530378818511963
    4. '   ' → logprob: -9.405379295349121
    5. '	return' → logprob: -11.905379295349121
    6. ' ' → logprob: -14.530379295349121
    7. 'ret' → logprob: -14.655379295349121
    8. '    ' → logprob: -14.905379295349121
    9. ':return' → logprob: -15.405379295349121
    10. 'eturn' → logprob: -15.655379295349121

Token 218: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.03804229199886322
    2. 'math' → logprob: -3.2880423069000244
    3. 'Math' → logprob: -14.913042068481445
    4. '(math' → logprob: -15.538042068481445
    5. ' Math' → logprob: -16.163042068481445
    6. ' ' → logprob: -16.913042068481445
    7. ' ' → logprob: -17.663042068481445
    8. '   ' → logprob: -17.788042068481445
    9. 'm' → logprob: -17.913042068481445
    10. '.math' → logprob: -18.038042068481445

Token 219: '.h' (ID: 1508)
  Prédit: '.h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.h' → logprob: -0.0006204616511240602
    2. '.' → logprob: -7.500620365142822
    3. ' .' → logprob: -10.25062084197998
    4. '.sqrt' → logprob: -10.50062084197998
    5. 'hyp' → logprob: -14.00062084197998
    6. '.atan' → logprob: -14.25062084197998
    7. '.isnan' → logprob: -15.00062084197998
    8. '-h' → logprob: -15.25062084197998
    9. '.hy' → logprob: -15.37562084197998
    10. '.pyplot' → logprob: -15.50062084197998

Token 220: 'yp' (ID: 1785)
  Prédit: 'yp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yp' → logprob: -0.04322480782866478
    2. 'hyp' → logprob: -3.418224811553955
    3. 'pot' → logprob: -5.168224811553955
    4. 'ot' → logprob: -5.793224811553955
    5. '.h' → logprob: -8.168224334716797
    6. 'y' → logprob: -8.418224334716797
    7. 'py' → logprob: -10.168224334716797
    8. 'opt' → logprob: -10.168224334716797
    9. 'opot' → logprob: -10.168224334716797
    10. 'otp' → logprob: -10.293224334716797

Token 221: 'ot' (ID: 346)
  Prédit: 'ot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.00036537862615659833
    2. 'yp' → logprob: -9.125365257263184
    3. 'hyp' → logprob: -9.250365257263184
    4. 's' → logprob: -9.625365257263184
    5. 'otp' → logprob: -9.875365257263184
    6. 'pot' → logprob: -11.750365257263184
    7. 'op' → logprob: -12.000365257263184
    8. 'opt' → logprob: -12.500365257263184
    9. '   ' → logprob: -12.500365257263184
    10. ' hypot' → logprob: -12.500365257263184

Token 222: '(px' (ID: 195026)
  Prédit: '(px'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(px' → logprob: -0.0005749551928602159
    2. '(' → logprob: -7.625575065612793
    3. '(py' → logprob: -9.375575065612793
    4. ' (' → logprob: -14.250575065612793
    5. 'px' → logprob: -14.375575065612793
    6. '(wx' → logprob: -15.000575065612793
    7. ' px' → logprob: -15.500575065612793
    8. '(x' → logprob: -16.250574111938477
    9. '(p' → logprob: -16.500574111938477
    10. '(pm' → logprob: -16.625574111938477

Token 223: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.008619419299066067
    2. '-' → logprob: -4.75861930847168
    3. ' ' → logprob: -12.38361930847168
    4. ',' → logprob: -15.25861930847168
    5. ' ' → logprob: -15.75861930847168
    6. ' -
' → logprob: -15.88361930847168
    7. 'x' → logprob: -18.38361930847168
    8. ' ,' → logprob: -18.38361930847168
    9. '-x' → logprob: -18.38361930847168
    10. ')' → logprob: -18.57111930847168

Token 224: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0001584850688232109
    2. ' x' → logprob: -8.750158309936523
    3. '<|end|>' → logprob: -17.875158309936523
    4. '(x' → logprob: -18.625158309936523
    5. ' ' → logprob: -19.125158309936523
    6. '	x' → logprob: -19.375158309936523
    7. '"x' → logprob: -19.375158309936523
    8. ')x' → logprob: -20.000158309936523
    9. ',x' → logprob: -20.000158309936523
    10. ',' → logprob: -20.500158309936523

Token 225: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.2762428822461516e-05
    2. 'x' → logprob: -10.125052452087402
    3. ' ' → logprob: -11.625052452087402
    4. ' x' → logprob: -13.000052452087402
    5. ',' → logprob: -14.625052452087402
    6. 'px' → logprob: -15.750052452087402
    7. '   ' → logprob: -15.875052452087402
    8. '<|end|>' → logprob: -16.37505340576172
    9. '```' → logprob: -16.37505340576172
    10. '
' → logprob: -17.00005340576172

Token 226: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.505351095460355e-05
    2. ' ,' → logprob: -9.500075340270996
    3. ',
' → logprob: -16.87507438659668
    4. ',y' → logprob: -17.37507438659668
    5. '‌,' → logprob: -18.37507438659668
    6. ',

' → logprob: -18.75007438659668
    7. '<|end|>' → logprob: -19.00007438659668
    8. ' py' → logprob: -19.62507438659668
    9. ')' → logprob: -19.87507438659668
    10. ',\
' → logprob: -19.87507438659668

Token 227: ' py' (ID: 13104)
  Prédit: ' py'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' py' → logprob: -0.03805101290345192
    2. 'py' → logprob: -3.288051128387451
    3. '(py' → logprob: -11.788050651550293
    4. '_py' → logprob: -13.288050651550293
    5. '.py' → logprob: -15.538050651550293
    6. ' px' → logprob: -17.66305160522461
    7. 'y' → logprob: -18.41305160522461
    8. 'px' → logprob: -19.16305160522461
    9. ' y' → logprob: -19.28805160522461
    10. 'Py' → logprob: -19.28805160522461

Token 228: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08106816560029984
    2. ' -' → logprob: -2.706068277359009
    3. ',' → logprob: -4.58106803894043
    4. 'y' → logprob: -7.70606803894043
    5. ' y' → logprob: -8.83106803894043
    6. '-y' → logprob: -9.33106803894043
    7. '1' → logprob: -9.95606803894043
    8. ' ,' → logprob: -10.20606803894043
    9. ' ' → logprob: -10.95606803894043
    10. ',y' → logprob: -11.33106803894043

Token 229: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00013524403038900346
    2. '1' → logprob: -9.25013542175293
    3. ' y' → logprob: -10.25013542175293
    4. 'py' → logprob: -12.75013542175293
    5. '<|end|>' → logprob: -14.62513542175293
    6. ' ' → logprob: -15.87513542175293
    7. 'yl' → logprob: -16.37513542175293
    8. '  ' → logprob: -17.25013542175293
    9. '   ' → logprob: -17.37513542175293
    10. ''y' → logprob: -17.50013542175293

Token 230: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5928495486150496e-05
    2. 'y' → logprob: -11.875016212463379
    3. ')' → logprob: -13.125016212463379
    4. '```' → logprob: -13.625016212463379
    5. ' ' → logprob: -14.062516212463379
    6. '<|end|>' → logprob: -14.312516212463379
    7. 'py' → logprob: -14.625016212463379
    8. '

' → logprob: -14.750016212463379
    9. '<|end|>' → logprob: -14.937516212463379
    10. '2' → logprob: -15.187516212463379

Token 231: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012924904003739357
    2. ')
' → logprob: -4.637924671173096
    3. '   ' → logprob: -5.762924671173096
    4. ' )' → logprob: -11.012925148010254
    5. ' ' → logprob: -13.012925148010254
    6. ' )
' → logprob: -13.512925148010254
    7. '
' → logprob: -14.012925148010254
    8. ')
' → logprob: -15.137925148010254
    9. ')

' → logprob: -15.387925148010254
    10. '),' → logprob: -16.137924194335938

Token 232: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5565217137336731
    2. 'elif' → logprob: -1.0565216541290283
    3. ' elif' → logprob: -3.4315216541290283
    4. 'if' → logprob: -3.6815216541290283
    5. ' if' → logprob: -4.431521892547607
    6. '
' → logprob: -5.431521892547607
    7. ')' → logprob: -5.681521892547607
    8. '    
' → logprob: -7.806521892547607
    9. 'e' → logprob: -7.931521892547607
    10. '```' → logprob: -8.43152141571045

Token 233: ' elif' (ID: 9497)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2763577699661255
    2. 'elif' (adapté à ' elif') → logprob: -1.5263577699661255
    3. ' if' → logprob: -4.276357650756836
    4. '   ' → logprob: -5.276357650756836
    5. ' elif' → logprob: -5.276357650756836
    6. '```' → logprob: -12.151357650756836
    7. ')' → logprob: -12.276357650756836
    8. ' ' → logprob: -13.401357650756836
    9. 'i' → logprob: -13.651357650756836
    10. 'If' → logprob: -14.026357650756836

Token 234: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.020544573664665222
    2. 't' → logprob: -3.8955445289611816
    3. ' ' → logprob: -13.52054500579834
    4. '0' → logprob: -14.64554500579834
    5. '	t' → logprob: -14.64554500579834
    6. '1' → logprob: -15.14554500579834
    7. '   ' → logprob: -16.520544052124023
    8. ' т' → logprob: -17.770544052124023
    9. ' ' → logprob: -17.770544052124023
    10. '    ' → logprob: -19.020544052124023

Token 235: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.03364996239542961
    2. '>' → logprob: -3.4086499214172363
    3. ' ' → logprob: -13.033650398254395
    4. ' <=' → logprob: -13.908650398254395
    5. '<|end|>' → logprob: -14.783650398254395
    6. ' >
' → logprob: -16.158649444580078
    7. '<=' → logprob: -16.408649444580078
    8. '1' → logprob: -16.908649444580078
    9. ' ' → logprob: -17.158649444580078
    10. '0' → logprob: -17.283649444580078

Token 236: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12692831456661224
    2. ' ' → logprob: -2.1269283294677734
    3. '  ' → logprob: -16.251928329467773
    4. '   ' → logprob: -16.251928329467773
    5. ' ' → logprob: -16.876928329467773
    6. '<|end|>' → logprob: -18.126928329467773
    7. '    ' → logprob: -19.126928329467773
    8. '```' → logprob: -19.501928329467773
    9. '.' → logprob: -20.251928329467773
    10. '۱' → logprob: -20.439428329467773

Token 237: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038014890742488205
    2. ' ' → logprob: -7.875380039215088
    3. '   ' → logprob: -18.50037956237793
    4. '  ' → logprob: -19.37537956237793
    5. ' ' → logprob: -20.12537956237793
    6. '<|end|>' → logprob: -20.50037956237793
    7. '```' → logprob: -20.75037956237793
    8. '۱' → logprob: -22.12537956237793
    9. '１' → logprob: -22.50037956237793
    10. '    ' → logprob: -22.75037956237793

Token 238: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0028708502650260925
    2. ':
' → logprob: -5.877871036529541
    3. ' :' → logprob: -10.752870559692383
    4. '       ' → logprob: -10.877870559692383
    5. '   ' → logprob: -11.002870559692383
    6. '):' → logprob: -12.252870559692383
    7. ':return' → logprob: -13.877870559692383
    8. '):
' → logprob: -14.377870559692383
    9. ' :
' → logprob: -14.502870559692383
    10. '<|end|>' → logprob: -14.502870559692383

Token 239: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009630593471229076
    2. ':' → logprob: -4.7596306800842285
    3. ':
' → logprob: -7.0096306800842285
    4. '   ' → logprob: -9.75963020324707
    5. '
' → logprob: -10.75963020324707
    6. ':return' → logprob: -11.63463020324707
    7. ' :' → logprob: -12.25963020324707
    8. ' :
' → logprob: -12.50963020324707
    9. '<|end|>' → logprob: -12.63463020324707
    10. ' return' → logprob: -13.25963020324707

Token 240: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01732758805155754
    2. '
' → logprob: -4.142327785491943
    3. ' return' → logprob: -7.142327785491943
    4. '   ' → logprob: -8.017327308654785
    5. 'return' → logprob: -9.392327308654785
    6. '        
' → logprob: -10.767327308654785
    7. ' ' → logprob: -11.017327308654785
    8. ' 
' → logprob: -11.017327308654785
    9. '    
' → logprob: -12.017327308654785
    10. '      ' → logprob: -12.517327308654785

Token 241: ' Projection' (ID: 147285)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.009788197465240955
    2. 'return' → logprob: -4.6347880363464355
    3. ' ' → logprob: -11.009788513183594
    4. ' retour' → logprob: -11.884788513183594
    5. ' math' → logprob: -12.384788513183594
    6. '   ' → logprob: -13.134788513183594
    7. ' ' → logprob: -14.259788513183594
    8. ' #' → logprob: -14.759788513183594
    9. 'Return' → logprob: -14.884788513183594
    10. ' retourner' → logprob: -15.259788513183594

Token 242: ' après' (ID: 16460)
  Prédit: ' avant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' avant' → logprob: -0.14723962545394897
    2. ' >' → logprob: -2.8972396850585938
    3. ' before' → logprob: -4.022239685058594
    4. 'avant' → logprob: -4.272239685058594
    5. '>' → logprob: -4.522239685058594
    6. ' after' → logprob: -4.647239685058594
    7. ' math' → logprob: -4.647239685058594
    8. ' après' → logprob: -5.272239685058594
    9. '   ' → logprob: -5.397239685058594
    10. 'before' → logprob: -5.897239685058594

Token 243: ' le' (ID: 505)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.02281199023127556
    2. 'x' → logprob: -4.5228118896484375
    3. '(x' → logprob: -5.3978118896484375
    4. ' ' → logprob: -5.8978118896484375
    5. ' math' → logprob: -6.1478118896484375
    6. ' px' → logprob: -7.1478118896484375
    7. ' le' → logprob: -7.3978118896484375
    8. ' the' → logprob: -7.8978118896484375
    9. ' (' → logprob: -8.897811889648438
    10. 'math' → logprob: -10.147811889648438

Token 244: ' segment' (ID: 14806)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.029751179739832878
    2. ' x' → logprob: -3.5297510623931885
    3. ' ' → logprob: -14.90475082397461
    4. ' segment' → logprob: -15.52975082397461
    5. '	x' → logprob: -16.27975082397461
    6. 'segment' → logprob: -16.27975082397461
    7. '2' → logprob: -17.65475082397461
    8. '(x' → logprob: -18.15475082397461
    9. '  ' → logprob: -18.77975082397461
    10. '   ' → logprob: -19.02975082397461

Token 245: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024546070490032434
    2. ' return' → logprob: -7.00245475769043
    3. 'return' → logprob: -7.75245475769043
    4. '   ' → logprob: -7.87745475769043
    5. ':' → logprob: -8.12745475769043
    6. ':
' → logprob: -8.37745475769043
    7. ':return' → logprob: -9.25245475769043
    8. '
' → logprob: -9.37745475769043
    9. '<|end|>' → logprob: -11.87745475769043
    10. ',' → logprob: -12.62745475769043

Token 246: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14739909768104553
    2. ' return' → logprob: -2.3973991870880127
    3. 'return' → logprob: -3.1473991870880127
    4. '   ' → logprob: -5.772398948669434
    5. ' ' → logprob: -12.022398948669434
    6. '	return' → logprob: -12.397398948669434
    7. ':return' → logprob: -12.397398948669434
    8. '
' → logprob: -13.147398948669434
    9. '           ' → logprob: -14.147398948669434
    10. '      ' → logprob: -14.272398948669434

Token 247: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5760155320167542
    2. 'return' (adapté à ' return') → logprob: -0.8260155320167542
    3. '       ' → logprob: -10.07601547241211
    4. '   ' → logprob: -10.32601547241211
    5. ' ' → logprob: -14.20101547241211
    6. '	return' → logprob: -15.07601547241211
    7. '    ' → logprob: -16.20101547241211
    8. 'eturn' → logprob: -16.70101547241211
    9. ' ' → logprob: -16.82601547241211
    10. '
' → logprob: -17.32601547241211

Token 248: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.00020413640595506877
    2. 'math' → logprob: -8.500204086303711
    3. ' ' → logprob: -14.375204086303711
    4. '(math' → logprob: -17.12520408630371
    5. ' ' → logprob: -17.87520408630371
    6. ' maths' → logprob: -19.12520408630371
    7. ' m' → logprob: -19.62520408630371
    8. ' Math' → logprob: -19.62520408630371
    9. 'Math' → logprob: -19.75020408630371
    10. ' sys' → logprob: -19.75020408630371

Token 249: '.h' (ID: 1508)
  Prédit: '.h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.h' → logprob: -5.097437315271236e-05
    2. '.' → logprob: -10.12505054473877
    3. '.sqrt' → logprob: -12.37505054473877
    4. 'hyp' → logprob: -12.62505054473877
    5. '-' → logprob: -13.37505054473877
    6. ' .' → logprob: -14.50005054473877
    7. '```' → logprob: -14.50005054473877
    8. '.atan' → logprob: -15.50005054473877
    9. 'h' → logprob: -16.375051498413086
    10. ' ' → logprob: -16.875051498413086

Token 250: 'yp' (ID: 1785)
  Prédit: 'ot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.10282924026250839
    2. 'pot' → logprob: -2.4778292179107666
    3. 'hyp' → logprob: -5.227829456329346
    4. 'yp' → logprob: -5.477829456329346
    5. 'otp' → logprob: -6.102829456329346
    6. 's' → logprob: -6.977829456329346
    7. 'opt' → logprob: -8.477828979492188
    8. 'op' → logprob: -8.977828979492188
    9. 'opot' → logprob: -9.102828979492188
    10. 'p' → logprob: -9.477828979492188

Token 251: 'ot' (ID: 346)
  Prédit: 'ot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.0001239196863025427
    2. 't' → logprob: -9.750123977661133
    3. 'pot' → logprob: -10.875123977661133
    4. 'op' → logprob: -11.250123977661133
    5. 'otp' → logprob: -12.000123977661133
    6. 'hyp' → logprob: -12.125123977661133
    7. 'yp' → logprob: -12.500123977661133
    8. '   ' → logprob: -13.125123977661133
    9. 'opt' → logprob: -13.250123977661133
    10. 'от' → logprob: -13.625123977661133

Token 252: '(px' (ID: 195026)
  Prédit: '(px'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(px' → logprob: -1.7432603272027336e-06
    2. '(py' → logprob: -13.875001907348633
    3. '(' → logprob: -14.250001907348633
    4. 'px' → logprob: -17.875001907348633
    5. ' (' → logprob: -17.875001907348633
    6. '(x' → logprob: -19.625001907348633
    7. ' px' → logprob: -19.750001907348633
    8. ':px' → logprob: -19.875001907348633
    9. '(p' → logprob: -20.125001907348633
    10. '(pm' → logprob: -21.250001907348633

Token 253: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07889925688505173
    2. '-' → logprob: -2.5788991451263428
    3. ' ' → logprob: -11.703899383544922
    4. 'x' → logprob: -14.078899383544922
    5. '-x' → logprob: -15.828899383544922
    6. ' x' → logprob: -16.828899383544922
    7. 'py' → logprob: -16.953899383544922
    8. '```' → logprob: -16.953899383544922
    9. '2' → logprob: -17.203899383544922
    10. ',' → logprob: -17.578899383544922

Token 254: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03804149478673935
    2. ' x' → logprob: -3.288041591644287
    3. '	x' → logprob: -17.913042068481445
    4. ' ' → logprob: -18.663042068481445
    5. '(x' → logprob: -19.038042068481445
    6. '2' → logprob: -19.788042068481445
    7. '   ' → logprob: -19.913042068481445
    8. '_x' → logprob: -20.788042068481445
    9. '```' → logprob: -21.038042068481445
    10. 'px' → logprob: -21.163042068481445

Token 255: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.961759259458631e-06
    2. '```' → logprob: -12.875004768371582
    3. ' ' → logprob: -13.625004768371582
    4. '
' → logprob: -14.500004768371582
    5. ' -' → logprob: -15.750004768371582
    6. '1' → logprob: -15.750004768371582
    7. '``' → logprob: -16.6250057220459
    8. '   ' → logprob: -16.6875057220459
    9. '

' → logprob: -16.8750057220459
    10. 'x' → logprob: -17.0000057220459

Token 256: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014120421838015318
    2. ' ,' → logprob: -8.875141143798828
    3. 'py' → logprob: -14.750141143798828
    4. ' py' → logprob: -14.750141143798828
    5. '(py' → logprob: -15.125141143798828
    6. ',
' → logprob: -16.375141143798828
    7. '_py' → logprob: -16.625141143798828
    8. '-' → logprob: -16.875141143798828
    9. ',y' → logprob: -17.875141143798828
    10. ' -' → logprob: -18.375141143798828

Token 257: ' py' (ID: 13104)
  Prédit: ' py'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' py' → logprob: -0.16023042798042297
    2. 'py' → logprob: -1.9102303981781006
    3. '(py' → logprob: -12.41023063659668
    4. '.py' → logprob: -14.03523063659668
    5. '_py' → logprob: -14.03523063659668
    6. 'y' → logprob: -15.53523063659668
    7. ' px' → logprob: -16.16023063659668
    8. ' y' → logprob: -16.53523063659668
    9. 'px' → logprob: -16.78523063659668
    10. ' ' → logprob: -17.28523063659668

Token 258: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.048588622361421585
    2. '-' → logprob: -3.048588514328003
    3. ' ' → logprob: -14.173588752746582
    4. ',' → logprob: -15.423588752746582
    5. ' y' → logprob: -16.048587799072266
    6. 'y' → logprob: -16.423587799072266
    7. '<|end|>' → logprob: -16.548587799072266
    8. '-y' → logprob: -17.423587799072266
    9. ' ' → logprob: -17.673587799072266
    10. ' -
' → logprob: -18.923587799072266

Token 259: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.014163863845169544
    2. ' y' → logprob: -4.264163970947266
    3. ' ' → logprob: -16.264163970947266
    4. '   ' → logprob: -16.889163970947266
    5. '	y' → logprob: -16.889163970947266
    6. '1' → logprob: -17.264163970947266
    7. ''y' → logprob: -17.389163970947266
    8. '<|end|>' → logprob: -17.639163970947266
    9. ')y' → logprob: -18.139163970947266
    10. 'yb' → logprob: -18.264163970947266

Token 260: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -15.750000953674316
    4. '۲' → logprob: -16.500001907348633
    5. '₂' → logprob: -16.625001907348633
    6. '_' → logprob: -16.625001907348633
    7. '

' → logprob: -17.625001907348633
    8. '
' → logprob: -17.625001907348633
    9. '２' → logprob: -17.750001907348633
    10. ')' → logprob: -18.250001907348633

Token 261: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.572941179503687e-05
    2. ' )' → logprob: -10.500045776367188
    3. ')
' → logprob: -11.500045776367188
    4. '   ' → logprob: -11.750045776367188
    5. '))' → logprob: -17.250045776367188
    6. '()' → logprob: -17.375045776367188
    7. ' ' → logprob: -18.125045776367188
    8. '())' → logprob: -18.125045776367188
    9. ')return' → logprob: -18.250045776367188
    10. ')

' → logprob: -18.500045776367188

Token 262: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027321014553308487
    2. ' else' → logprob: -4.027320861816406
    3. 'else' → logprob: -4.777320861816406
    4. '    
' → logprob: -7.527320861816406
    5. '
' → logprob: -9.902320861816406
    6. ' 
' → logprob: -10.652320861816406
    7. '   
' → logprob: -10.652320861816406
    8. 'e' → logprob: -11.277320861816406
    9. '     
' → logprob: -11.402320861816406
    10. '    ' → logprob: -11.652320861816406

Token 263: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.943368136882782
    2. 'x' → logprob: -1.4433681964874268
    3. ' px' → logprob: -2.0683681964874268
    4. '#' → logprob: -2.4433681964874268
    5. 'px' → logprob: -3.3183681964874268
    6. 'else' (adapté à ' else') → logprob: -3.6933681964874268
    7. ' else' → logprob: -3.6933681964874268
    8. ' #' → logprob: -3.9433681964874268
    9. ' p' → logprob: -4.318367958068848
    10. 'p' → logprob: -4.318367958068848

Token 264: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005965526681393385
    2. ':
' → logprob: -5.130965709686279
    3. ' :' → logprob: -11.005965232849121
    4. '   ' → logprob: -11.130965232849121
    5. ' :
' → logprob: -13.130965232849121
    6. ':return' → logprob: -13.130965232849121
    7. '       ' → logprob: -14.005965232849121
    8. ':
' → logprob: -14.505965232849121
    9. '    ' → logprob: -15.755965232849121
    10. ':

' → logprob: -16.005966186523438

Token 265: '       ' (ID: 309)
  Prédit: 'proj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'proj' → logprob: -0.3425426185131073
    2. '       ' → logprob: -2.0925426483154297
    3. ' proj' → logprob: -2.5925426483154297
    4. '   ' → logprob: -2.5925426483154297
    5. 'px' → logprob: -5.09254264831543
    6. 'projection' → logprob: -5.59254264831543
    7. ' px' → logprob: -6.34254264831543
    8. ' projection' → logprob: -6.59254264831543
    9. 'x' → logprob: -7.21754264831543
    10. ' ' → logprob: -7.84254264831543

Token 266: ' #' (ID: 1069)
  Prédit: 'proj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'proj' → logprob: -0.12437588721513748
    2. ' proj' → logprob: -2.749375820159912
    3. 'px' → logprob: -3.499375820159912
    4. '   ' → logprob: -4.374375820159912
    5. 'x' → logprob: -5.999375820159912
    6. 'xp' → logprob: -6.374375820159912
    7. '#' (adapté à ' #') → logprob: -6.499375820159912
    8. ' px' → logprob: -6.624375820159912
    9. 'closest' → logprob: -7.624375820159912
    10. 'cx' → logprob: -7.999375820159912

Token 267: ' Projection' (ID: 147285)
  Prédit: 'proj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'proj' → logprob: -0.06000690907239914
    2. 'px' → logprob: -3.560006856918335
    3. ' proj' → logprob: -4.310007095336914
    4. 'x' → logprob: -5.310007095336914
    5. '#' → logprob: -5.435007095336914
    6. 'projection' → logprob: -5.810007095336914
    7. 'xp' → logprob: -6.685007095336914
    8. 'closest' → logprob: -7.685007095336914
    9. 'pro' → logprob: -8.060007095336914
    10. 'cx' → logprob: -8.185007095336914

Token 268: ' sur' (ID: 1512)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.4803518056869507
    2. 'x' → logprob: -0.9803518056869507
    3. ' x' → logprob: -5.73035192489624
    4. '   ' → logprob: -6.85535192489624
    5. '_point' → logprob: -6.85535192489624
    6. '_px' → logprob: -8.105351448059082
    7. ' px' → logprob: -9.230351448059082
    8. 'px' → logprob: -9.355351448059082
    9. ' point' → logprob: -9.605351448059082
    10. ' ' → logprob: -9.730351448059082

Token 269: ' le' (ID: 505)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5907341241836548
    2. 'x' → logprob: -1.4657341241836548
    3. ' vx' → logprob: -2.3407340049743652
    4. ' segment' → logprob: -3.2157340049743652
    5. 'segment' → logprob: -3.3407340049743652
    6. '(x' → logprob: -4.090734004974365
    7. 'vx' → logprob: -4.590734004974365
    8. ' le' → logprob: -4.965734004974365
    9. ' the' → logprob: -6.090734004974365
    10. ' (' → logprob: -6.215734004974365

Token 270: ' segment' (ID: 14806)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.13727949559688568
    2. 'segment' → logprob: -2.762279510498047
    3. ' x' → logprob: -3.137279510498047
    4. ' segment' → logprob: -3.887279510498047
    5. '(x' → logprob: -7.762279510498047
    6. '1' → logprob: -8.262279510498047
    7. '   ' → logprob: -8.762279510498047
    8. ' ' → logprob: -9.137279510498047
    9. 'seg' → logprob: -10.012279510498047
    10. 'point' → logprob: -10.137279510498047

Token 271: '
' (ID: 198)
  Prédit: 'proj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'proj' → logprob: -0.3746172785758972
    2. '       ' → logprob: -1.624617338180542
    3. '   ' → logprob: -2.999617338180542
    4. 'px' → logprob: -3.624617338180542
    5. ' proj' → logprob: -3.749617338180542
    6. 'x' → logprob: -4.999617099761963
    7. 'projection' → logprob: -6.374617099761963
    8. ' px' → logprob: -6.499617099761963
    9. 'qx' → logprob: -6.499617099761963
    10. ' projection' → logprob: -6.874617099761963

Token 272: '       ' (ID: 309)
  Prédit: 'proj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'proj' → logprob: -0.026400737464427948
    2. 'px' → logprob: -4.276400566101074
    3. '   ' → logprob: -4.901400566101074
    4. ' proj' → logprob: -6.151400566101074
    5. '       ' → logprob: -6.901400566101074
    6. 'projection' → logprob: -7.651400566101074
    7. 'x' → logprob: -8.026400566101074
    8. 'qx' → logprob: -8.401400566101074
    9. 'cx' → logprob: -9.276400566101074
    10. 'dx' → logprob: -9.401400566101074

Token 273: ' proj' (ID: 16022)
  Prédit: 'proj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'proj' (adapté à ' proj') → logprob: -0.006093623116612434
    2. 'px' → logprob: -5.631093502044678
    3. ' proj' → logprob: -7.381093502044678
    4. 'closest' → logprob: -7.631093502044678
    5. 'x' → logprob: -7.756093502044678
    6. '   ' → logprob: -7.881093502044678
    7. 'cx' → logprob: -8.506093978881836
    8. 'qx' → logprob: -8.756093978881836
    9. 'projection' → logprob: -9.881093978881836
    10. 'dx' → logprob: -9.881093978881836

Token 274: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07890091091394424
    2. '_x' → logprob: -2.5789008140563965
    3. '   ' → logprob: -12.453901290893555
    4. '=' → logprob: -12.453901290893555
    5. 'ect' → logprob: -14.453901290893555
    6. 'ected' → logprob: -14.578901290893555
    7. '_' → logprob: -14.703901290893555
    8. '_point' → logprob: -14.703901290893555
    9. ' =' → logprob: -14.953901290893555
    10. 'ex' → logprob: -15.578901290893555

Token 275: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014163747429847717
    2. ' =' → logprob: -4.264163970947266
    3. '=x' → logprob: -15.764163970947266
    4. 'x' → logprob: -16.764163970947266
    5. ' ' → logprob: -17.514163970947266
    6. ',' → logprob: -17.889163970947266
    7. '=

' → logprob: -18.014163970947266
    8. '=
' → logprob: -18.639163970947266
    9. '=int' → logprob: -18.889163970947266
    10. '   ' → logprob: -19.264163970947266

Token 276: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0004306692280806601
    2. ' x' → logprob: -7.750430583953857
    3. '   ' → logprob: -18.000431060791016
    4. '	x' → logprob: -20.125431060791016
    5. ' ' → logprob: -20.625431060791016
    6. '"x' → logprob: -21.875431060791016
    7. '(x' → logprob: -21.875431060791016
    8. '  ' → logprob: -22.375431060791016
    9. '    ' → logprob: -23.375431060791016
    10. ',x' → logprob: -23.875431060791016

Token 277: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '```' → logprob: -17.875
    4. '<|end|>' → logprob: -18.5
    5. '   ' → logprob: -19.75
    6. '+' → logprob: -20.75
    7. '  ' → logprob: -20.75
    8. '.' → logprob: -20.9375
    9. 'x' → logprob: -20.9375
    10. '...' → logprob: -21.375

Token 278: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759449601173401
    2. '+' → logprob: -0.8259449601173401
    3. '+t' → logprob: -12.450944900512695
    4. ' plus' → logprob: -14.200944900512695
    5. ' ' → logprob: -15.325944900512695
    6. '<|end|>' → logprob: -15.700944900512695
    7. ' ' → logprob: -15.950944900512695
    8. ' +
' → logprob: -16.075944900512695
    9. '+x' → logprob: -16.700944900512695
    10. '＋' → logprob: -16.950944900512695

Token 279: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.009357817471027374
    2. ' t' → logprob: -4.759357929229736
    3. 'vx' → logprob: -7.259357929229736
    4. ' vx' → logprob: -10.384357452392578
    5. '   ' → logprob: -12.259357452392578
    6. 'v' → logprob: -13.384357452392578
    7. '	t' → logprob: -14.134357452392578
    8. 'tx' → logprob: -14.384357452392578
    9. 'vt' → logprob: -15.509357452392578
    10. ' ' → logprob: -15.634357452392578

Token 280: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2519322335720062
    2. '*' → logprob: -1.5019322633743286
    3. ' ' → logprob: -12.751932144165039
    4. '*v' → logprob: -15.751932144165039
    5. '   ' → logprob: -17.37693214416504
    6. '*object' → logprob: -17.75193214416504
    7. ' ' → logprob: -18.25193214416504
    8. '**' → logprob: -18.75193214416504
    9. '  ' → logprob: -19.87693214416504
    10. '0' → logprob: -19.87693214416504

Token 281: ' vx' (ID: 93588)
  Prédit: 'vx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vx' → logprob: -0.16022443771362305
    2. ' vx' → logprob: -1.910224437713623
    3. 'v' → logprob: -15.660224914550781
    4. ' ' → logprob: -17.28522491455078
    5. 'vz' → logprob: -18.41022491455078
    6. '   ' → logprob: -18.53522491455078
    7. 'vy' → logprob: -18.53522491455078
    8. '
' → logprob: -19.41022491455078
    9. ' v' → logprob: -20.16022491455078
    10. 'VX' → logprob: -20.28522491455078

Token 282: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05665010213851929
    2. '<|end|>' → logprob: -3.306650161743164
    3. '       ' → logprob: -5.056650161743164
    4. '<|end|>' → logprob: -5.306650161743164
    5. ' 
' → logprob: -5.931650161743164
    6. 'proj' → logprob: -6.681650161743164
    7. '        
' → logprob: -7.181650161743164
    8. '    
' → logprob: -7.306650161743164
    9. '  
' → logprob: -7.431650161743164
    10. ',' → logprob: -8.556650161743164

Token 283: '       ' (ID: 309)
  Prédit: ' proj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' proj' → logprob: -0.3409866392612457
    2. 'proj' → logprob: -1.4659866094589233
    3. '       ' → logprob: -3.215986728668213
    4. '        
' → logprob: -4.590986728668213
    5. ' 
' → logprob: -5.090986728668213
    6. '
' → logprob: -7.715986728668213
    7. 'pro' → logprob: -8.465986251831055
    8. '  
' → logprob: -8.965986251831055
    9. '    
' → logprob: -9.090986251831055
    10. '       
' → logprob: -9.090986251831055

Token 284: ' proj' (ID: 16022)
  Prédit: 'proj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'proj' (adapté à ' proj') → logprob: -0.16200368106365204
    2. ' proj' → logprob: -1.9120036363601685
    3. 'pro' → logprob: -6.412003517150879
    4. 'prox' → logprob: -10.537003517150879
    5. ' proje' → logprob: -10.787003517150879
    6. ' pro' → logprob: -10.787003517150879
    7. 'py' → logprob: -10.912003517150879
    8. '	pro' → logprob: -11.787003517150879
    9. 'project' → logprob: -11.912003517150879
    10. 'p' → logprob: -12.037003517150879

Token 285: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -8.363617962459102e-05
    2. '*' → logprob: -10.000083923339844
    3. 'x' → logprob: -10.625083923339844
    4. '*y' → logprob: -12.250083923339844
    5. ' y' → logprob: -12.375083923339844
    6. '_y' → logprob: -13.375083923339844
    7. 'yv' → logprob: -13.750083923339844
    8. 't' → logprob: -13.875083923339844
    9. ' *' → logprob: -14.875083923339844
    10. 'yl' → logprob: -16.000083923339844

Token 286: ' =' (ID: 314)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.9837820529937744
    2. ' *' → logprob: -1.6087820529937744
    3. '=' → logprob: -1.8587820529937744
    4. ' ' → logprob: -2.3587820529937744
    5. '*' → logprob: -2.6087820529937744
    6. '<|end|>' → logprob: -3.2337820529937744
    7. ' =' → logprob: -3.3587820529937744
    8. '+' → logprob: -3.7337820529937744
    9. '   ' → logprob: -6.358781814575195
    10. ')' → logprob: -7.858781814575195

Token 287: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.12692831456661224
    2. ' y' → logprob: -2.1269283294677734
    3. '	y' → logprob: -15.626928329467773
    4. '   ' → logprob: -17.376928329467773
    5. 'py' → logprob: -18.751928329467773
    6. '‘y' → logprob: -18.876928329467773
    7. 'yv' → logprob: -19.126928329467773
    8. 'yl' → logprob: -19.501928329467773
    9. 'yj' → logprob: -19.626928329467773
    10. '    ' → logprob: -19.751928329467773

Token 288: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.861651490908116e-05
    2. 'vy' → logprob: -10.250068664550781
    3. 'y' → logprob: -11.375068664550781
    4. 't' → logprob: -12.125068664550781
    5. ' ' → logprob: -12.250068664550781
    6. 'v' → logprob: -12.375068664550781
    7. 'wy' → logprob: -13.125068664550781
    8. '2' → logprob: -13.625068664550781
    9. ' y' → logprob: -13.625068664550781
    10. ' vy' → logprob: -14.250068664550781

Token 289: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25192946195602417
    2. ' +' → logprob: -1.501929521560669
    3. '+
' → logprob: -16.501930236816406
    4. ' +
' → logprob: -16.626930236816406
    5. '<|end|>' → logprob: -16.626930236816406
    6. ' ' → logprob: -16.876930236816406
    7. ' plus' → logprob: -17.126930236816406
    8. ' ' → logprob: -17.251930236816406
    9. '+t' → logprob: -17.501930236816406
    10. '＋' → logprob: -18.376930236816406

Token 290: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4740801155567169
    2. ' t' → logprob: -0.9740800857543945
    3. 'vy' → logprob: -13.099080085754395
    4. ' vy' → logprob: -14.599080085754395
    5. '	t' → logprob: -15.099080085754395
    6. 'y' → logprob: -16.22408103942871
    7. 'v' → logprob: -16.34908103942871
    8. ' ' → logprob: -16.97408103942871
    9. 'ty' → logprob: -17.09908103942871
    10. '   ' → logprob: -17.97408103942871

Token 291: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7096292972564697
    2. ' *' → logprob: -1.2096292972564697
    3. ' +' → logprob: -2.0846292972564697
    4. '+' → logprob: -2.4596292972564697
    5. '<|end|>' → logprob: -10.20962905883789
    6. ' ' → logprob: -12.70962905883789
    7. '*v' → logprob: -13.08462905883789
    8. ' ' → logprob: -14.08462905883789
    9. '*y' → logprob: -14.20962905883789
    10. ')' → logprob: -15.45962905883789

Token 292: ' vy' (ID: 14190)
  Prédit: 'vy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -0.5472291111946106
    2. ' vy' → logprob: -1.2972290515899658
    3. ' t' → logprob: -2.297229051589966
    4. 't' → logprob: -3.047229051589966
    5. 'v' → logprob: -9.422228813171387
    6. 'ty' → logprob: -10.672228813171387
    7. ' ' → logprob: -12.047228813171387
    8. ' v' → logprob: -12.297228813171387
    9. 'tv' → logprob: -12.547228813171387
    10. '   ' → logprob: -12.797228813171387

Token 293: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8272067308425903
    2. '   ' → logprob: -0.9522067308425903
    3. ' return' → logprob: -1.9522067308425903
    4. 'return' → logprob: -4.077206611633301
    5. ' 
' → logprob: -4.452206611633301
    6. '       ' → logprob: -5.827206611633301
    7. '  
' → logprob: -6.827206611633301
    8. '    
' → logprob: -6.952206611633301
    9. '
' → logprob: -7.577206611633301
    10. '        
' → logprob: -8.4522066116333

Token 294: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10215926170349121
    2. ' return' → logprob: -2.727159261703491
    3. '
' → logprob: -3.852159261703491
    4. ' 
' → logprob: -5.22715950012207
    5. 'return' → logprob: -6.22715950012207
    6. '    
' → logprob: -6.72715950012207
    7. '       ' → logprob: -6.85215950012207
    8. '  
' → logprob: -7.72715950012207
    9. '        
' → logprob: -9.47715950012207
    10. '	return' → logprob: -9.60215950012207

Token 295: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6975749135017395
    2. 'return' (adapté à ' return') → logprob: -0.6975749135017395
    3. '       ' → logprob: -5.447575092315674
    4. '   ' → logprob: -9.697574615478516
    5. '
' → logprob: -10.197574615478516
    6. '	return' → logprob: -12.322574615478516
    7. ' ' → logprob: -12.947574615478516
    8. ' 
' → logprob: -13.322574615478516
    9. '        
' → logprob: -13.447574615478516
    10. ' ' → logprob: -13.947574615478516

Token 296: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.0485873706638813
    2. 'math' → logprob: -3.0485873222351074
    3. 'Math' → logprob: -17.048587799072266
    4. '(math' → logprob: -18.298587799072266
    5. ' Math' → logprob: -18.423587799072266
    6. ' ' → logprob: -18.423587799072266
    7. 'm' → logprob: -18.798587799072266
    8. '   ' → logprob: -18.923587799072266
    9. ' abs' → logprob: -19.048587799072266
    10. ' ' → logprob: -19.673587799072266

Token 297: '.h' (ID: 1508)
  Prédit: '.h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.h' → logprob: -0.06608240306377411
    2. '.' → logprob: -2.81608247756958
    3. '.sqrt' → logprob: -5.56608247756958
    4. '.hy' → logprob: -9.191082000732422
    5. ' .' → logprob: -9.566082000732422
    6. '.atan' → logprob: -10.816082000732422
    7. '<|end|>' → logprob: -10.816082000732422
    8. '.isnan' → logprob: -11.691082000732422
    9. '‌.' → logprob: -11.816082000732422
    10. '.hyper' → logprob: -11.941082000732422

Token 298: 'yp' (ID: 1785)
  Prédit: 'yp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yp' → logprob: -0.008622024208307266
    2. 'ot' → logprob: -5.008622169494629
    3. 'hyp' → logprob: -6.883622169494629
    4. 'otp' → logprob: -7.383622169494629
    5. 'pot' → logprob: -9.008622169494629
    6. 'y' → logprob: -9.008622169494629
    7. 'opot' → logprob: -13.008622169494629
    8. 'opt' → logprob: -13.258622169494629
    9. 'oth' → logprob: -13.383622169494629
    10. 'yt' → logprob: -13.633622169494629

Token 299: 'ot' (ID: 346)
  Prédit: 'ot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -2.4391956685576588e-05
    2. 'otp' → logprob: -11.500024795532227
    3. 't' → logprob: -12.500024795532227
    4. 'pot' → logprob: -13.125024795532227
    5. 'opt' → logprob: -13.250024795532227
    6. 'o' → logprob: -13.625024795532227
    7. 'op' → logprob: -13.875024795532227
    8. 'at' → logprob: -14.000024795532227
    9. 'от' → logprob: -14.375024795532227
    10. 'yp' → logprob: -14.500024795532227

Token 300: '(px' (ID: 195026)
  Prédit: '(px'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(px' → logprob: -0.062407366931438446
    2. '(pro' → logprob: -2.8124072551727295
    3. '(' → logprob: -7.812407493591309
    4. '(py' → logprob: -10.687407493591309
    5. '(p' → logprob: -11.437407493591309
    6. 'px' → logprob: -15.312407493591309
    7. '(pm' → logprob: -15.437407493591309
    8. '((' → logprob: -15.562407493591309
    9. '(project' → logprob: -16.062406539916992
    10. ' px' → logprob: -16.187406539916992

Token 301: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0052384985610842705
    2. '-' → logprob: -5.2552385330200195
    3. ' ' → logprob: -12.38023853302002
    4. ' ' → logprob: -14.63023853302002
    5. '-pro' → logprob: -17.005237579345703
    6. ' –' → logprob: -18.505237579345703
    7. ' -
' → logprob: -18.630237579345703
    8. '-p' → logprob: -18.755237579345703
    9. '  ' → logprob: -20.130237579345703
    10. ',' → logprob: -20.255237579345703

Token 302: ' proj' (ID: 16022)
  Prédit: 'proj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'proj' → logprob: -0.014495712704956532
    2. ' proj' → logprob: -4.264495849609375
    3. 'pro' → logprob: -8.014495849609375
    4. 'prox' → logprob: -14.389495849609375
    5. 'prof' → logprob: -15.014495849609375
    6. '	pro' → logprob: -15.389495849609375
    7. 'prod' → logprob: -16.264495849609375
    8. 'prog' → logprob: -16.264495849609375
    9. '_proj' → logprob: -16.889495849609375
    10. '(pro' → logprob: -17.014495849609375

Token 303: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.9361264946837764e-07
    2. ' x' → logprob: -16.625
    3. 'ex' → logprob: -17.5
    4. ' ' → logprob: -19.0
    5. 'proj' → logprob: -19.25
    6. '   ' → logprob: -19.5
    7. 'xy' → logprob: -20.125
    8. '_x' → logprob: -20.125
    9. 'ox' → logprob: -21.125
    10. '	x' → logprob: -21.25

Token 304: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031797364354133606
    2. ' ,' → logprob: -5.753179550170898
    3. ',p' → logprob: -13.753179550170898
    4. ',
' → logprob: -14.253179550170898
    5. ',y' → logprob: -16.1281795501709
    6. ')' → logprob: -16.5031795501709
    7. '),' → logprob: -17.3781795501709
    8. ' ,
' → logprob: -17.8781795501709
    9. ' ' → logprob: -18.2531795501709
    10. '‌,' → logprob: -18.6281795501709

Token 305: ' py' (ID: 13104)
  Prédit: ' py'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' py' → logprob: -0.0009142052149400115
    2. 'py' → logprob: -7.000914096832275
    3. '(py' → logprob: -13.250914573669434
    4. '_py' → logprob: -14.375914573669434
    5. ' px' → logprob: -15.250914573669434
    6. '.py' → logprob: -16.000913619995117
    7. ' p' → logprob: -18.000913619995117
    8. ' Py' → logprob: -18.125913619995117
    9. ' ' → logprob: -18.750913619995117
    10. ' ' → logprob: -18.750913619995117

Token 306: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2451777160167694
    2. '-' → logprob: -2.120177745819092
    3. ' -' → logprob: -2.370177745819092
    4. ' )' → logprob: -5.620177745819092
    5. '-)' → logprob: -8.620177268981934
    6. '<|end|>' → logprob: -9.995177268981934
    7. ' ' → logprob: -10.370177268981934
    8. ',' → logprob: -10.745177268981934
    9. '+' → logprob: -11.120177268981934
    10. ' ' → logprob: -11.620177268981934

Token 307: ' proj' (ID: 16022)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.003179975086823106
    2. ' proj' → logprob: -6.378180027008057
    3. 'proj' → logprob: -6.628180027008057
    4. ' pro' → logprob: -9.753179550170898
    5. ' ' → logprob: -10.503179550170898
    6. '	pro' → logprob: -10.628179550170898
    7. ' proje' → logprob: -11.003179550170898
    8. 'proxy' → logprob: -12.253179550170898
    9. '
' → logprob: -12.628179550170898
    10. '(pro' → logprob: -12.753179550170898

Token 308: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -3.452426608419046e-05
    2. '   ' → logprob: -11.00003433227539
    3. ' ' → logprob: -12.87503433227539
    4. ' y' → logprob: -13.25003433227539
    5. '       ' → logprob: -13.25003433227539
    6. 'x' → logprob: -13.62503433227539
    7. '  ' → logprob: -14.12503433227539
    8. ')' → logprob: -14.25003433227539
    9. '     ' → logprob: -14.25003433227539
    10. 'py' → logprob: -14.25003433227539

Token 309: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.282920129597187e-05
    2. ')
' → logprob: -11.375012397766113
    3. ' )' → logprob: -13.625012397766113
    4. ')

' → logprob: -17.37501335144043
    5. '}' → logprob: -18.00001335144043
    6. ')return' → logprob: -18.00001335144043
    7. '   ' → logprob: -18.87501335144043
    8. '))' → logprob: -18.87501335144043
    9. ')#' → logprob: -19.37501335144043
    10. ' ' → logprob: -19.62501335144043

Token 310: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07969599217176437
    2. '
' → logprob: -3.0796959400177
    3. '<|end|>' → logprob: -4.079696178436279
    4. 'import' → logprob: -5.329696178436279
    5. '#' → logprob: -5.454696178436279
    6. '\n' → logprob: -6.579696178436279
    7. '```' → logprob: -6.704696178436279
    8. '\' → logprob: -7.704696178436279
    9. ' 
' → logprob: -8.454695701599121
    10. '

' → logprob: -8.454695701599121

Token 311: ' is' (ID: 382)
  Prédit: ' point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' point' → logprob: -0.6977518200874329
    2. ' is' → logprob: -1.572751760482788
    3. ' main' → logprob: -1.572751760482788
    4. ' dist' → logprob: -4.072751998901367
    5. ' find' → logprob: -4.197751998901367
    6. ' perimeter' → logprob: -4.447751998901367
    7. 'point' → logprob: -4.697751998901367
    8. ' distance' → logprob: -4.947751998901367
    9. 'is' → logprob: -5.447751998901367
    10. ' closest' → logprob: -5.572751998901367

Token 312: '_safe' (ID: 87847)
  Prédit: '_point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.03981033340096474
    2. '_close' → logprob: -4.2898101806640625
    3. '_inside' → logprob: -4.6648101806640625
    4. '_ne' → logprob: -5.1648101806640625
    5. '_in' → logprob: -5.4148101806640625
    6. '_on' → logprob: -5.9148101806640625
    7. 'close' → logprob: -7.0398101806640625
    8. '_with' → logprob: -8.414810180664062
    9. '_touch' → logprob: -8.414810180664062
    10. '_line' → logprob: -8.539810180664062

Token 313: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.8523116111755371
    2. '(x' → logprob: -1.602311611175537
    3. '(point' → logprob: -2.102311611175537
    4. '(px' → logprob: -2.352311611175537
    5. '(' → logprob: -2.977311611175537
    6. '_position' → logprob: -3.477311611175537
    7. '_to' → logprob: -3.977311611175537
    8. '(player' → logprob: -4.602311611175537
    9. '_path' → logprob: -4.852311611175537
    10. '_zone' → logprob: -5.352311611175537

Token 314: '(px' (ID: 195026)
  Prédit: '(px'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(px' → logprob: -0.06844904273748398
    2. ' (' → logprob: -2.818449020385742
    3. '(x' → logprob: -5.443449020385742
    4. '(' → logprob: -6.318449020385742
    5. '(point' → logprob: -8.693449020385742
    6. '(p' → logprob: -8.943449020385742
    7. '(py' → logprob: -11.193449020385742
    8. '(mx' → logprob: -12.318449020385742
    9. '(nx' → logprob: -12.568449020385742
    10. '(cx' → logprob: -12.943449020385742

Token 315: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.1689596148207784e-05
    2. ' ,' → logprob: -9.875051498413086
    3. ',
' → logprob: -16.875051498413086
    4. '‌,' → logprob: -17.125051498413086
    5. ',p' → logprob: -17.750051498413086
    6. ',

' → logprob: -18.500051498413086
    7. '_,' → logprob: -19.375051498413086
    8. ',
' → logprob: -20.250051498413086
    9. ',\
' → logprob: -20.500051498413086
    10. ',y' → logprob: -20.875051498413086

Token 316: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.023252815008163452
    2. ' py' → logprob: -3.7732527256011963
    3. '_py' → logprob: -12.523252487182617
    4. 'px' → logprob: -13.023252487182617
    5. '(py' → logprob: -13.648252487182617
    6. '.py' → logprob: -15.648252487182617
    7. 'ply' → logprob: -17.273252487182617
    8. 'ppy' → logprob: -17.398252487182617
    9. ' ' → logprob: -17.648252487182617
    10. 'p' → logprob: -18.148252487182617

Token 317: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018458699923940003
    2. ' ,' → logprob: -8.625185012817383
    3. '):' → logprob: -12.500185012817383
    4. '   ' → logprob: -14.375185012817383
    5. ',p' → logprob: -15.750185012817383
    6. ',x' → logprob: -16.500185012817383
    7. ' ):' → logprob: -16.625185012817383
    8. ',n' → logprob: -16.625185012817383
    9. '_,' → logprob: -16.750185012817383
    10. ',s' → logprob: -17.000185012817383

Token 318: ' beams' (ID: 81992)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.5867364406585693
    2. 'ob' → logprob: -1.4617364406585693
    3. ' obstacles' → logprob: -3.3367364406585693
    4. ' segments' → logprob: -3.7117364406585693
    5. 'polygon' → logprob: -3.7117364406585693
    6. 'safe' → logprob: -4.336736679077148
    7. 'x' → logprob: -4.961736679077148
    8. 'pol' → logprob: -5.086736679077148
    9. ' polygon' → logprob: -5.086736679077148
    10. ' safe' → logprob: -5.211736679077148

Token 319: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006925415713340044
    2. '):' → logprob: -5.006925582885742
    3. ' ,' → logprob: -9.256925582885742
    4. '):
' → logprob: -9.756925582885742
    5. ')' → logprob: -11.631925582885742
    6. ' ):' → logprob: -12.006925582885742
    7. '   ' → logprob: -12.131925582885742
    8. '):
' → logprob: -12.381925582885742
    9. 'x' → logprob: -12.944425582885742
    10. ',
' → logprob: -13.006925582885742

Token 320: ' radius' (ID: 21090)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.983201026916504
    2. 'threshold' → logprob: -1.983201026916504
    3. 'radius' → logprob: -2.233201026916504
    4. ' min' → logprob: -2.733201026916504
    5. 'd' → logprob: -2.858201026916504
    6. ' threshold' → logprob: -2.858201026916504
    7. 'distance' → logprob: -2.983201026916504
    8. ' radius' → logprob: -2.983201026916504
    9. 'safe' → logprob: -2.983201026916504
    10. 'r' → logprob: -3.233201026916504

Token 321: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00039849523454904556
    2. '):
' → logprob: -8.500398635864258
    3. ')' → logprob: -9.125398635864258
    4. ',' → logprob: -9.750398635864258
    5. ' ):' → logprob: -11.000398635864258
    6. '=' → logprob: -11.750398635864258
    7. '):
' → logprob: -13.750398635864258
    8. '   ' → logprob: -14.375398635864258
    9. '):

' → logprob: -14.750398635864258
    10. ' ' → logprob: -15.250398635864258

Token 322: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6331884264945984
    2. ':' → logprob: -0.7581884264945984
    3. ':
' → logprob: -7.758188247680664
    4. ' :' → logprob: -9.508188247680664
    5. ':return' → logprob: -10.383188247680664
    6. '    
' → logprob: -11.258188247680664
    7. '):' → logprob: -12.133188247680664
    8. ',' → logprob: -12.258188247680664
    9. '<|end|>' → logprob: -12.258188247680664
    10. '():' → logprob: -12.383188247680664

Token 323: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03616039827466011
    2. ' for' → logprob: -4.036160469055176
    3. 'for' → logprob: -4.036160469055176
    4. '"""' → logprob: -9.161160469055176
    5. '
' → logprob: -10.411160469055176
    6. '    
' → logprob: -10.661160469055176
    7. ' """' → logprob: -12.286160469055176
    8. ':' → logprob: -12.661160469055176
    9. 'return' → logprob: -12.786160469055176
    10. '    ' → logprob: -13.286160469055176

Token 324: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015205097384750843
    2. '"""' → logprob: -4.265204906463623
    3. '"""
' → logprob: -7.140204906463623
    4. ' """' → logprob: -9.015205383300781
    5. ' """
' → logprob: -9.765205383300781
    6. '#' → logprob: -10.890205383300781
    7. '    ' → logprob: -11.015205383300781
    8. '"' → logprob: -11.515205383300781
    9. 'Checks' → logprob: -12.390205383300781
    10. 'Calcul' → logprob: -12.890205383300781

Token 325: ' Vér' (ID: 159169)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27388226985931396
    2. 'for' → logprob: -2.0238823890686035
    3. ' for' → logprob: -3.0238823890686035
    4. '#' → logprob: -3.0238823890686035
    5. '"""
' → logprob: -5.6488823890686035
    6. ' """
' → logprob: -6.0238823890686035
    7. '"""' → logprob: -6.0238823890686035
    8. ' #' → logprob: -7.5238823890686035
    9. ' """' → logprob: -7.8988823890686035
    10. '
' → logprob: -8.523881912231445

Token 326: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.004136818461120129
    2. 'if' → logprob: -5.50413703918457
    3. 'ifier' → logprob: -10.87913703918457
    4. 'ifi' → logprob: -11.37913703918457
    5. 'ifiez' → logprob: -11.50413703918457
    6. '   ' → logprob: -11.75413703918457
    7. 'ifies' → logprob: -12.37913703918457
    8. 'ifié' → logprob: -13.25413703918457
    9. 'ify' → logprob: -14.00413703918457
    10. 'ification' → logprob: -14.25413703918457

Token 327: ' si' (ID: 1784)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9732505679130554
    2. ' if' → logprob: -0.9732505679130554
    3. ' si' → logprob: -2.3482506275177
    4. '   ' → logprob: -2.8482506275177
    5. '  ' → logprob: -3.0982506275177
    6. ' whether' → logprob: -3.2232506275177
    7. '    ' → logprob: -5.973250389099121
    8. ' ' → logprob: -6.723250389099121
    9. 'whether' → logprob: -7.348250389099121
    10. ' for' → logprob: -8.098250389099121

Token 328: ' la' (ID: 557)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.3094724118709564
    2. 'all' → logprob: -1.4344724416732788
    3. ' any' → logprob: -4.934472560882568
    4. 'not' → logprob: -5.309472560882568
    5. ' not' → logprob: -5.309472560882568
    6. ' for' → logprob: -5.559472560882568
    7. 'for' → logprob: -5.559472560882568
    8. 'any' → logprob: -6.434472560882568
    9. ' la' → logprob: -8.18447208404541
    10. 't' → logprob: -8.68447208404541

Token 329: ' machine' (ID: 7342)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.4004458785057068
    2. ' distance' → logprob: -1.5254459381103516
    3. ' math' → logprob: -3.5254459381103516
    4. 'math' → logprob: -3.6504459381103516
    5. 'dist' → logprob: -3.9004459381103516
    6. 'point' → logprob: -4.400445938110352
    7. 'min' → logprob: -4.900445938110352
    8. ' point' → logprob: -4.900445938110352
    9. ' all' → logprob: -5.900445938110352
    10. ' dist' → logprob: -6.525445938110352

Token 330: ' plac' (ID: 7097)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.10220306366682053
    2. ' (' → logprob: -3.977203130722046
    3. 'est' → logprob: -4.477202892303467
    4. '(px' → logprob: -4.602202892303467
    5. ' peut' → logprob: -4.852202892303467
    6. ' se' → logprob: -4.977202892303467
    7. '(point' → logprob: -4.977202892303467
    8. '(' → logprob: -5.477202892303467
    9. ' is' → logprob: -5.602202892303467
    10. '(p' → logprob: -5.852202892303467

Token 331: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.015852877870202065
    2. 'e' → logprob: -4.265852928161621
    3. 'ee' → logprob: -7.265852928161621
    4. 'é' → logprob: -7.390852928161621
    5. 'ed' → logprob: -8.265852928161621
    6. '{' → logprob: -10.390852928161621
    7. '```' → logprob: -10.765852928161621
    8. 'ec' → logprob: -11.765852928161621
    9. '#' → logprob: -12.390852928161621
    10. '[' → logprob: -12.515852928161621

Token 332: ' en' (ID: 469)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.07215344160795212
    2. 'à' → logprob: -3.072153329849243
    3. ' at' → logprob: -4.947153568267822
    4. 'au' → logprob: -5.322153568267822
    5. ' au' → logprob: -5.447153568267822
    6. ' ' → logprob: -5.822153568267822
    7. ' en' → logprob: -6.697153568267822
    8. '(' → logprob: -7.572153568267822
    9. '_' → logprob: -7.822153568267822
    10. 'at' → logprob: -7.947153568267822

Token 333: ' (' (ID: 350)
  Prédit: '(px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(px' → logprob: -0.010807273909449577
    2. ' (' → logprob: -4.885807037353516
    3. '(' → logprob: -6.385807037353516
    4. ' px' → logprob: -6.760807037353516
    5. 'px' → logprob: -8.385807037353516
    6. '(x' → logprob: -9.760807037353516
    7. 'position' → logprob: -10.260807037353516
    8. '(py' → logprob: -10.885807037353516
    9. '(position' → logprob: -13.010807037353516
    10. '(p' → logprob: -13.010807037353516

Token 334: 'px' (ID: 3207)
  Prédit: 'px'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.02975199744105339
    2. ' px' → logprob: -3.529752016067505
    3. '(px' → logprob: -14.029751777648926
    4. '_px' → logprob: -14.529751777648926
    5. 'py' → logprob: -15.279751777648926
    6. '   ' → logprob: -17.654752731323242
    7. ',' → logprob: -18.154752731323242
    8. 'Px' → logprob: -18.404752731323242
    9. 'p' → logprob: -18.404752731323242
    10. ')' → logprob: -18.529752731323242

Token 335: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011709370883181691
    2. ' ,' → logprob: -6.751171112060547
    3. 'py' → logprob: -15.501171112060547
    4. ' ' → logprob: -16.126171112060547
    5. ' py' → logprob: -16.126171112060547
    6. ',
' → logprob: -16.501171112060547
    7. ')' → logprob: -16.876171112060547
    8. '.py' → logprob: -16.876171112060547
    9. '   ' → logprob: -17.126171112060547
    10. '(py' → logprob: -17.376171112060547

Token 336: ' py' (ID: 13104)
  Prédit: ' py'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' py' → logprob: -0.5759461522102356
    2. 'py' → logprob: -0.8259461522102356
    3. '(py' → logprob: -12.450945854187012
    4. '.py' → logprob: -13.325945854187012
    5. 'px' → logprob: -14.200945854187012
    6. '_py' → logprob: -14.950945854187012
    7. ' px' → logprob: -15.825945854187012
    8. 'ply' → logprob: -17.700946807861328
    9. ' pyro' → logprob: -18.450946807861328
    10. 'Py' → logprob: -18.825946807861328

Token 337: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008271370315924287
    2. ' )' → logprob: -7.125827312469482
    3. '   ' → logprob: -11.625826835632324
    4. ',' → logprob: -11.750826835632324
    5. ')
' → logprob: -13.250826835632324
    6. '),' → logprob: -13.375826835632324
    7. ' ' → logprob: -13.500826835632324
    8. ' ' → logprob: -15.250826835632324
    9. ' est' → logprob: -15.500826835632324
    10. 'def' → logprob: -15.875826835632324

Token 338: ' ne' (ID: 453)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.004698664881289005
    2. 'est' → logprob: -6.254698753356934
    3. ' peut' → logprob: -6.504698753356934
    4. ' ' → logprob: -7.129698753356934
    5. ' ' → logprob: -9.379698753356934
    6. ' se' → logprob: -9.629698753356934
    7. ' is' → logprob: -10.004698753356934
    8. ' n' → logprob: -10.129698753356934
    9. ' ne' → logprob: -10.379698753356934
    10. ' a' → logprob: -10.504698753356934

Token 339: ' chev' (ID: 127415)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.9486991763114929
    2. ' intersect' → logprob: -1.4486992359161377
    3. ' se' → logprob: -2.6986992359161377
    4. 'se' → logprob: -2.9486992359161377
    5. ' est' → logprob: -3.0736992359161377
    6. 'inter' → logprob: -3.1986992359161377
    7. 't' → logprob: -3.6986992359161377
    8. 's' → logprob: -4.198698997497559
    9. 'entre' → logprob: -4.323698997497559
    10. 'vient' → logprob: -4.448698997497559

Token 340: 'auche' (ID: 143141)
  Prédit: 'auche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auche' → logprob: -0.0003600144700612873
    2. 'a' → logprob: -8.375360488891602
    3. 'aule' → logprob: -9.750360488891602
    4. 'au' → logprob: -10.500360488891602
    5. 'er' → logprob: -11.250360488891602
    6. 'aque' → logprob: -11.500360488891602
    7. 'e' → logprob: -12.125360488891602
    8. 'auce' → logprob: -12.625360488891602
    9. 'èche' → logprob: -13.250360488891602
    10. 'ouche' → logprob: -13.250360488891602

Token 341: ' aucun' (ID: 41678)
  Prédit: ' aucun'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aucun' → logprob: -0.14025184512138367
    2. ' pas' → logprob: -2.515251874923706
    3. ' aucune' → logprob: -3.390251874923706
    4. 'auc' → logprob: -4.265251636505127
    5. 'pas' → logprob: -6.390251636505127
    6. ' auc' → logprob: -7.765251636505127
    7. ' Aucun' → logprob: -10.265252113342285
    8. ' a' → logprob: -10.515252113342285
    9. ' any' → logprob: -10.765252113342285
    10. ' ' → logprob: -10.890252113342285

Token 342: ' rayon' (ID: 80967)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.18724481761455536
    2. ' beam' → logprob: -2.6872448921203613
    3. ' rayon' → logprob: -3.4372448921203613
    4. ' fais' → logprob: -3.5622448921203613
    5. ' obstacle' → logprob: -3.9372448921203613
    6. 'beam' → logprob: -4.687244892120361
    7. 'des' → logprob: -4.937244892120361
    8. ' of' → logprob: -6.812244892120361
    9. ' fasc' → logprob: -7.187244892120361
    10. 'f' → logprob: -7.687244892120361

Token 343: ' laser' (ID: 23429)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7070986032485962
    2. ' des' → logprob: -1.5820986032485962
    3. '   ' → logprob: -2.2070984840393066
    4. 'de' → logprob: -2.3320984840393066
    5. ' (' → logprob: -2.9570984840393066
    6. 's' → logprob: -4.582098484039307
    7. ' d' → logprob: -5.207098484039307
    8. '(s' → logprob: -5.582098484039307
    9. 'des' → logprob: -5.957098484039307
    10. ' ' → logprob: -6.457098484039307

Token 344: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24639494717121124
    2. '.' → logprob: -2.2463948726654053
    3. ' (' → logprob: -3.1213948726654053
    4. ',' → logprob: -3.4963948726654053
    5. ':' → logprob: -4.246395111083984
    6. '(' → logprob: -5.371395111083984
    7. 'de' → logprob: -5.746395111083984
    8. ' des' → logprob: -5.746395111083984
    9. ' de' → logprob: -6.746395111083984
    10. ')' → logprob: -7.121395111083984

Token 345: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00016277639952022582
    2. '    
' → logprob: -9.375163078308105
    3. ' for' → logprob: -10.500163078308105
    4. '"""' → logprob: -10.875163078308105
    5. '  ' → logprob: -12.000163078308105
    6. '
' → logprob: -12.250163078308105
    7. '   
' → logprob: -12.750163078308105
    8. '    ' → logprob: -13.000163078308105
    9. '  
' → logprob: -13.250163078308105
    10. 'for' → logprob: -13.375163078308105

Token 346: ' beams' (ID: 81992)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005941396811977029
    2. ' for' → logprob: -8.250594139099121
    3. '    
' → logprob: -8.625594139099121
    4. 'for' → logprob: -9.875594139099121
    5. '
' → logprob: -10.000594139099121
    6. '"""' → logprob: -10.750594139099121
    7. '   
' → logprob: -11.500594139099121
    8. '  ' → logprob: -11.875594139099121
    9. '  
' → logprob: -12.625594139099121
    10. '    ' → logprob: -13.125594139099121

Token 347: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.611767590045929
    2. ')' → logprob: -1.9867675304412842
    3. ' =' → logprob: -2.236767530441284
    4. ' is' → logprob: -2.486767530441284
    5. '):' → logprob: -2.861767530441284
    6. '=' → logprob: -3.361767530441284
    7. '.' → logprob: -4.361767768859863
    8. ' :' → logprob: -5.486767768859863
    9. '   ' → logprob: -5.611767768859863
    10. ' ' → logprob: -5.861767768859863

Token 348: ' liste' (ID: 31719)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.07933817058801651
    2. 'list' → logprob: -2.9543380737304688
    3. ' [(' → logprob: -4.704338073730469
    4. '[(' → logprob: -4.954338073730469
    5. ' List' → logprob: -5.954338073730469
    6. ' [' → logprob: -6.079338073730469
    7. '[' → logprob: -6.704338073730469
    8. 'List' → logprob: -7.204338073730469
    9. ' [
' → logprob: -7.954338073730469
    10. '[
' → logprob: -7.954338073730469

Token 349: ' de' (ID: 334)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.19058237969875336
    2. ' de' → logprob: -2.565582275390625
    3. 'de' → logprob: -3.315582275390625
    4. 'def' → logprob: -4.190582275390625
    5. ' des' → logprob: -4.190582275390625
    6. ' =' → logprob: -4.940582275390625
    7. 'des' → logprob: -5.315582275390625
    8. '[' → logprob: -5.440582275390625
    9. '   ' → logprob: -6.065582275390625
    10. 'of' → logprob: -6.190582275390625

Token 350: ' tuples' (ID: 112464)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -1.1049202680587769
    2. '(be' → logprob: -1.6049202680587769
    3. '((' → logprob: -1.7299202680587769
    4. '(' → logprob: -2.2299203872680664
    5. 'be' → logprob: -2.4799203872680664
    6. ' tuples' → logprob: -2.6049203872680664
    7. 'tu' → logprob: -4.354920387268066
    8. '(x' → logprob: -4.729920387268066
    9. '[' → logprob: -7.229920387268066
    10. '(tuple' → logprob: -7.604920387268066

Token 351: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.008527814410626888
    2. '(' → logprob: -5.758527755737305
    3. '   ' → logprob: -5.883527755737305
    4. '(x' → logprob: -6.883527755737305
    5. ' =' → logprob: -7.508527755737305
    6. ',' → logprob: -8.008527755737305
    7. ' de' → logprob: -9.258527755737305
    8. ' containing' → logprob: -9.508527755737305
    9. ' )' → logprob: -10.008527755737305
    10. '  ' → logprob: -10.008527755737305

Token 352: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.33225181698799133
    2. '(x' → logprob: -1.332251787185669
    3. ' (' → logprob: -4.332252025604248
    4. ' x' → logprob: -5.207252025604248
    5. ')x' → logprob: -9.70725154876709
    6. '(' → logprob: -10.20725154876709
    7. ')' → logprob: -10.58225154876709
    8. '((' → logprob: -11.08225154876709
    9. '   ' → logprob: -11.45725154876709
    10. ' ' → logprob: -11.95725154876709

Token 353: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00119296764023602
    2. ',' → logprob: -7.501193046569824
    3. '_start' → logprob: -8.251193046569824
    4. 's' → logprob: -8.876193046569824
    5. 'start' → logprob: -8.876193046569824
    6. '0' → logprob: -10.001193046569824
    7. 'b' → logprob: -11.126193046569824
    8. 'a' → logprob: -11.626193046569824
    9. '_s' → logprob: -12.251193046569824
    10. '_' → logprob: -12.626193046569824

Token 354: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009822198189795017
    2. '1' → logprob: -4.634822368621826
    3. ',y' → logprob: -9.759821891784668
    4. ' ,' → logprob: -11.884821891784668
    5. 'y' → logprob: -14.009821891784668
    6. '_' → logprob: -15.259821891784668
    7. 'a' → logprob: -15.884821891784668
    8. '_start' → logprob: -16.384822845458984
    9. '_py' → logprob: -17.134822845458984
    10. ',
' → logprob: -17.259822845458984

Token 355: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07889188081026077
    2. ' y' → logprob: -2.5788919925689697
    3. ',' → logprob: -14.07889175415039
    4. ',y' → logprob: -14.95389175415039
    5. '<|end|>' → logprob: -15.20389175415039
    6. '	y' → logprob: -15.45389175415039
    7. 'yj' → logprob: -16.70389175415039
    8. 'yl' → logprob: -16.70389175415039
    9. '<|end|>' → logprob: -16.82889175415039
    10. ' ' → logprob: -16.82889175415039

Token 356: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.632542913896032e-05
    2. ',' → logprob: -10.000046730041504
    3. ')' → logprob: -15.625046730041504
    4. ' ' → logprob: -15.625046730041504
    5. '<|end|>' → logprob: -15.750046730041504
    6. '_start' → logprob: -16.500045776367188
    7. 'start' → logprob: -16.625045776367188
    8. '<|end|>' → logprob: -16.750045776367188
    9. 'from' → logprob: -17.500045776367188
    10. 'a' → logprob: -18.062545776367188

Token 357: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.180258191714529e-06
    2. ' ,' → logprob: -12.000008583068848
    3. ',x' → logprob: -13.875008583068848
    4. ',
' → logprob: -14.625008583068848
    5. '),' → logprob: -14.750008583068848
    6. ')' → logprob: -16.00000762939453
    7. 'x' → logprob: -17.12500762939453
    8. '1' → logprob: -17.25000762939453
    9. '   ' → logprob: -17.62500762939453
    10. ' ' → logprob: -18.50000762939453

Token 358: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00029601677670143545
    2. ' x' → logprob: -8.125295639038086
    3. '   ' → logprob: -17.750295639038086
    4. '  ' → logprob: -18.000295639038086
    5. ' ' → logprob: -18.625295639038086
    6. '_x' → logprob: -19.125295639038086
    7. '	x' → logprob: -20.625295639038086
    8. 'xref' → logprob: -20.625295639038086
    9. 'y' → logprob: -21.000295639038086
    10. '    ' → logprob: -21.625295639038086

Token 359: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.392824874026701e-05
    2. '2' → logprob: -10.50003433227539
    3. ',' → logprob: -12.00003433227539
    4. ' ' → logprob: -16.50003433227539
    5. '   ' → logprob: -18.12503433227539
    6. ' ,' → logprob: -18.12503433227539
    7. '```' → logprob: -18.50003433227539
    8. ')' → logprob: -19.00003433227539
    9. 'def' → logprob: -19.87503433227539
    10. '  ' → logprob: -20.00003433227539

Token 360: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.173704271830502e-06
    2. ' ,' → logprob: -12.87500286102295
    3. ',
' → logprob: -15.25000286102295
    4. ',y' → logprob: -15.62500286102295
    5. '1' → logprob: -17.125003814697266
    6. ')' → logprob: -17.625003814697266
    7. 'y' → logprob: -18.250003814697266
    8. ' ' → logprob: -18.250003814697266
    9. ' y' → logprob: -18.375003814697266
    10. '),' → logprob: -19.375003814697266

Token 361: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.5759397745132446
    2. 'y' → logprob: -0.8259397745132446
    3. ' ' → logprob: -15.075940132141113
    4. 'x' → logprob: -16.700939178466797
    5. '<|end|>' → logprob: -17.950939178466797
    6. '	y' → logprob: -18.825939178466797
    7. ' x' → logprob: -19.575939178466797
    8. ' 
' → logprob: -19.700939178466797
    9. '
' → logprob: -19.700939178466797
    10. ',' → logprob: -20.200939178466797

Token 362: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0010332842357456684
    2. '1' → logprob: -6.876033306121826
    3. ' ' → logprob: -16.001033782958984
    4. ')' → logprob: -16.501033782958984
    5. '```' → logprob: -16.751033782958984
    6. '3' → logprob: -17.001033782958984
    7. ',' → logprob: -18.001033782958984
    8. '   ' → logprob: -18.376033782958984
    9. '
' → logprob: -18.376033782958984
    10. 'def' → logprob: -19.251033782958984

Token 363: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018042956944555044
    2. ',' → logprob: -6.376804351806641
    3. ' )' → logprob: -10.00180435180664
    4. '),' → logprob: -10.50180435180664
    5. ')
' → logprob: -10.62680435180664
    6. ',)' → logprob: -13.50180435180664
    7. ').' → logprob: -14.12680435180664
    8. ' ,' → logprob: -14.50180435180664
    9. '):
' → logprob: -14.62680435180664
    10. '   ' → logprob: -15.00180435180664

Token 364: ' thickness' (ID: 38833)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8357352018356323
    2. 'r' → logprob: -2.460735321044922
    3. 'radius' → logprob: -2.585735321044922
    4. 'width' → logprob: -2.835735321044922
    5. 'angle' → logprob: -3.085735321044922
    6. 'strength' → logprob: -3.210735321044922
    7. 'length' → logprob: -3.335735321044922
    8. 'power' → logprob: -3.335735321044922
    9. 'int' → logprob: -3.710735321044922
    10. 'direction' → logprob: -4.085735321044922

Token 365: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016635251813568175
    2. ')
' → logprob: -8.875165939331055
    3. '),' → logprob: -11.250165939331055
    4. ',' → logprob: -11.875165939331055
    5. ' )' → logprob: -12.375165939331055
    6. ')

' → logprob: -14.000165939331055
    7. '):
' → logprob: -15.125165939331055
    8. ').' → logprob: -15.250165939331055
    9. ')
' → logprob: -15.500165939331055
    10. '):' → logprob: -16.125165939331055

Token 366: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7878769040107727
    2. '):
' → logprob: -1.287876844406128
    3. '   ' → logprob: -1.662876844406128
    4. '):' → logprob: -2.662876844406128
    5. ')
' → logprob: -4.662877082824707
    6. 'def' → logprob: -9.037877082824707
    7. '"""
' → logprob: -9.162877082824707
    8. ',' → logprob: -9.287877082824707
    9. '):

' → logprob: -10.162877082824707
    10. '
' → logprob: -10.412877082824707

Token 367: ' radius' (ID: 21090)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20953188836574554
    2. ')' → logprob: -1.7095319032669067
    3. '"""' → logprob: -5.459531784057617
    4. '):' → logprob: -6.709531784057617
    5. '"""
' → logprob: -6.959531784057617
    6. ')
' → logprob: -7.834531784057617
    7. '
' → logprob: -8.209531784057617
    8. '):
' → logprob: -8.334531784057617
    9. '    
' → logprob: -8.459531784057617
    10. 'for' → logprob: -8.709531784057617

Token 368: ' :' (ID: 712)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0059393644332886
    2. ' >' → logprob: -1.3809393644332886
    3. ' <=' → logprob: -2.505939483642578
    4. '=' → logprob: -2.880939483642578
    5. ' >=' → logprob: -3.005939483642578
    6. '>' → logprob: -3.130939483642578
    7. ' )' → logprob: -3.505939483642578
    8. ' ' → logprob: -3.630939483642578
    9. '):' → logprob: -3.630939483642578
    10. '<|end|>' → logprob: -4.380939483642578

Token 369: ' rayon' (ID: 80967)
  Prédit: ' radius'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' radius' → logprob: -0.004057978745549917
    2. 'radius' → logprob: -5.629057884216309
    3. ' ' → logprob: -8.129057884216309
    4. ' float' → logprob: -9.129057884216309
    5. ' )' → logprob: -11.004057884216309
    6. ' ' → logprob: -11.379057884216309
    7. ' rayon' → logprob: -11.379057884216309
    8. ' r' → logprob: -12.254057884216309
    9. ' ray' → logprob: -12.754057884216309
    10. ' the' → logprob: -13.754057884216309

Token 370: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2914763391017914
    2. ' de' → logprob: -2.416476249694824
    3. ' du' → logprob: -2.666476249694824
    4. ' )' → logprob: -3.416476249694824
    5. 'de' → logprob: -4.291476249694824
    6. ',' → logprob: -4.916476249694824
    7. 'du' → logprob: -5.416476249694824
    8. ' of' → logprob: -5.416476249694824
    9. ' ' → logprob: -5.541476249694824
    10. 'def' → logprob: -5.791476249694824

Token 371: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.15258416533470154
    2. 'la' → logprob: -2.2775840759277344
    3. ' the' → logprob: -4.027584075927734
    4. 'l' → logprob: -4.402584075927734
    5. 'the' → logprob: -5.152584075927734
    6. ' machine' → logprob: -6.902584075927734
    7. 'machine' → logprob: -6.902584075927734
    8. ' l' → logprob: -7.652584075927734
    9. 'placement' → logprob: -8.402584075927734
    10. ' ' → logprob: -9.652584075927734

Token 372: ' machine' (ID: 7342)
  Prédit: 'machine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'machine' → logprob: -0.14309696853160858
    2. ' machine' → logprob: -2.018096923828125
    3. 'radius' → logprob: -9.518096923828125
    4. 'mach' → logprob: -9.643096923828125
    5. 'm' → logprob: -10.018096923828125
    6. 'point' → logprob: -10.268096923828125
    7. 'ray' → logprob: -10.518096923828125
    8. ' ' → logprob: -10.643096923828125
    9. '(machine' → logprob: -11.143096923828125
    10. '_machine' → logprob: -11.268096923828125

Token 373: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009091231040656567
    2. '):' → logprob: -5.884091377258301
    3. ':' → logprob: -6.259091377258301
    4. ')' → logprob: -6.509091377258301
    5. '):
' → logprob: -6.759091377258301
    6. '    
' → logprob: -7.259091377258301
    7. '
' → logprob: -7.259091377258301
    8. ':
' → logprob: -9.0090913772583
    9. '  
' → logprob: -10.3840913772583
    10. '   
' → logprob: -10.6340913772583

Token 374: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044774968177080154
    2. ')' → logprob: -3.4197750091552734
    3. '"""' → logprob: -5.544775009155273
    4. '):
' → logprob: -5.794775009155273
    5. '"""
' → logprob: -6.169775009155273
    6. '):' → logprob: -6.294775009155273
    7. ')
' → logprob: -9.044775009155273
    8. '""' → logprob: -11.294775009155273
    9. '```' → logprob: -11.294775009155273
    10. ' """
' → logprob: -11.794775009155273

Token 375: ' Le' (ID: 2018)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6088534593582153
    2. '   ' → logprob: -0.8588534593582153
    3. '"""' → logprob: -3.983853340148926
    4. '):' → logprob: -5.108853340148926
    5. '):
' → logprob: -5.483853340148926
    6. '"""
' → logprob: -6.358853340148926
    7. ')
' → logprob: -6.608853340148926
    8. '
' → logprob: -8.858853340148926
    9. '    
' → logprob: -9.858853340148926
    10. '```' → logprob: -9.858853340148926

Token 376: ' chev' (ID: 127415)
  Prédit: 'ray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ray' → logprob: -1.1080009937286377
    2. ' radius' → logprob: -1.6080009937286377
    3. 'radius' → logprob: -1.6080009937286377
    4. ' rayon' → logprob: -2.2330009937286377
    5. 'r' → logprob: -3.2330009937286377
    6. ' px' → logprob: -4.108000755310059
    7. ' ray' → logprob: -4.358000755310059
    8. ' return' → logprob: -4.483000755310059
    9. 'for' → logprob: -4.483000755310059
    10. ' for' → logprob: -4.983000755310059

Token 377: 'auche' (ID: 143141)
  Prédit: 'auche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auche' → logprob: -0.0012876172550022602
    2. 'au' → logprob: -7.126287460327148
    3. 'a' → logprob: -8.626287460327148
    4. 'aule' → logprob: -9.251287460327148
    5. 'er' → logprob: -9.376287460327148
    6. 'al' → logprob: -10.001287460327148
    7. 'e' → logprob: -10.626287460327148
    8. 'auch' → logprob: -11.376287460327148
    9. 'auge' → logprob: -11.501287460327148
    10. 'auce' → logprob: -12.501287460327148

Token 378: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -6.869017852295656e-06
    2. 'ments' → logprob: -13.250006675720215
    3. ' ment' → logprob: -13.750006675720215
    4. 'r' → logprob: -14.250006675720215
    5. '#' → logprob: -14.625006675720215
    6. '
' → logprob: -14.875006675720215
    7. 'm' → logprob: -15.250006675720215
    8. '

' → logprob: -15.250006675720215
    9. '_' → logprob: -15.250006675720215
    10. 'me' → logprob: -15.250006675720215

Token 379: ' se' (ID: 458)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.4185604453086853
    2. ' se' → logprob: -1.41856050491333
    3. ' n' → logprob: -3.79356050491333
    4. ' =' → logprob: -3.79356050491333
    5. 'est' → logprob: -4.16856050491333
    6. ' entre' → logprob: -4.41856050491333
    7. '=' → logprob: -5.04356050491333
    8. 'se' → logprob: -5.54356050491333
    9. ' existe' → logprob: -5.91856050491333
    10. ' occurs' → logprob: -5.91856050491333

Token 380: ' produit' (ID: 29429)
  Prédit: ' produit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' produit' → logprob: -0.008504417724907398
    2. 'produ' → logprob: -5.133504390716553
    3. ' produ' → logprob: -7.133504390716553
    4. ' traduit' → logprob: -7.633504390716553
    5. 'prod' → logprob: -8.383504867553711
    6. ' produz' → logprob: -8.883504867553711
    7. ' détect' → logprob: -8.883504867553711
    8. ' fait' → logprob: -9.008504867553711
    9. ' produce' → logprob: -9.133504867553711
    10. ' vér' → logprob: -9.133504867553711

Token 381: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.3580847680568695
    2. ' lorsque' → logprob: -1.733084797859192
    3. ' if' → logprob: -2.2330846786499023
    4. ' lorsqu' → logprob: -4.733084678649902
    5. 'si' → logprob: -6.108084678649902
    6. ' ' → logprob: -6.483084678649902
    7. ' uniquement' → logprob: -6.608084678649902
    8. 'if' → logprob: -7.108084678649902
    9. ' when' → logprob: -7.233084678649902
    10. ' quand' → logprob: -7.233084678649902

Token 382: ' la' (ID: 557)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6152229309082031
    2. ' la' → logprob: -1.6152229309082031
    3. ' dist' → logprob: -1.9902229309082031
    4. 'la' → logprob: -2.115222930908203
    5. 'the' → logprob: -6.865222930908203
    6. 'distance' → logprob: -6.990222930908203
    7. ' the' → logprob: -7.615222930908203
    8. 'le' → logprob: -8.615222930908203
    9. '   ' → logprob: -8.990222930908203
    10. ' distance' → logprob: -9.115222930908203

Token 383: ' distance' (ID: 9324)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5940154790878296
    2. 'distance' → logprob: -0.9690154790878296
    3. ' distance' → logprob: -3.219015598297119
    4. ' dist' → logprob: -3.594015598297119
    5. 'min' → logprob: -7.469015598297119
    6. ' plus' → logprob: -9.969015121459961
    7. ' min' → logprob: -10.094015121459961
    8. 'minimum' → logprob: -10.094015121459961
    9. 'plus' → logprob: -10.594015121459961
    10. 'def' → logprob: -10.719015121459961

Token 384: ' machine' (ID: 7342)
  Prédit: ' entre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.8468729853630066
    2. 'entre' → logprob: -1.7218730449676514
    3. ' between' → logprob: -2.0968730449676514
    4. 'au' → logprob: -2.3468730449676514
    5. 'from' → logprob: -2.9718730449676514
    6. ' au' → logprob: -3.0968730449676514
    7. 'between' → logprob: -3.9718730449676514
    8. ' from' → logprob: -4.346872806549072
    9. '(point' → logprob: -4.721872806549072
    10. ' du' → logprob: -5.096872806549072

Token 385: '-l' (ID: 2887)
  Prédit: ' au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' au' → logprob: -1.209733486175537
    2. ' <=' → logprob: -1.334733486175537
    3. 'au' → logprob: -2.209733486175537
    4. ' <' → logprob: -2.584733486175537
    5. ' entre' → logprob: -2.959733486175537
    6. 'from' → logprob: -3.209733486175537
    7. '<=' → logprob: -3.459733486175537
    8. ' est' → logprob: -3.959733486175537
    9. '   ' → logprob: -4.334733486175537
    10. ' ' → logprob: -4.334733486175537

Token 386: 'aser' (ID: 18231)
  Prédit: 'aser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aser' → logprob: -0.1453504115343094
    2. 'a' → logprob: -2.520350456237793
    3. 'asers' → logprob: -4.020350456237793
    4. 'as' → logprob: -4.770350456237793
    5. 'ine' → logprob: -4.895350456237793
    6. 'azer' → logprob: -5.895350456237793
    7. 'e' → logprob: -6.020350456237793
    8. 'à' → logprob: -6.645350456237793
    9. 'ight' → logprob: -7.207850456237793
    10. '   ' → logprob: -7.395350456237793

Token 387: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.02500045858323574
    2. 'est' → logprob: -4.77500057220459
    3. ' <=' → logprob: -5.02500057220459
    4. ' is' → logprob: -5.02500057220459
    5. ' <' → logprob: -6.15000057220459
    6. '<=' → logprob: -7.65000057220459
    7. ' ' → logprob: -9.27500057220459
    8. '   ' → logprob: -9.65000057220459
    9. '_est' → logprob: -10.65000057220459
    10. ' (' → logprob: -10.65000057220459

Token 388: ' inf' (ID: 5603)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.6129665374755859
    2. ' inf' → logprob: -0.8629665374755859
    3. 'strict' → logprob: -3.862966537475586
    4. ' inférieur' → logprob: -4.487966537475586
    5. 'infer' → logprob: -6.987966537475586
    6. '<' → logprob: -7.112966537475586
    7. ' strict' → logprob: -7.362966537475586
    8. '<=' → logprob: -7.612966537475586
    9. '   ' → logprob: -8.237966537475586
    10. ' <=' → logprob: -8.362966537475586

Token 389: 'érieure' (ID: 45836)
  Prédit: 'érieure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieure' → logprob: -0.002867042785510421
    2. 'erie' → logprob: -6.252867221832275
    3. 'érieur' → logprob: -7.377867221832275
    4. 'érie' → logprob: -8.627866744995117
    5. 'er' → logprob: -9.752866744995117
    6. '{' → logprob: -11.377866744995117
    7. '<' → logprob: -11.502866744995117
    8. '   ' → logprob: -11.627866744995117
    9. 'érieures' → logprob: -12.002866744995117
    10. 'é' → logprob: -12.252866744995117

Token 390: ' à' (ID: 1221)
  Prédit: ' au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.7543919682502747
    2. 'au' → logprob: -1.2543919086456299
    3. ' à' → logprob: -1.6293919086456299
    4. ' ou' → logprob: -3.62939190864563
    5. ' or' → logprob: -5.754392147064209
    6. '   ' → logprob: -5.754392147064209
    7. 'strict' → logprob: -5.754392147064209
    8. ' ' → logprob: -5.879392147064209
    9. 'à' → logprob: -6.004392147064209
    10. 'e' → logprob: -6.254392147064209

Token 391: ' radius' (ID: 21090)
  Prédit: ' radius'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' radius' → logprob: -0.024072442203760147
    2. 'radius' → logprob: -4.149072647094727
    3. ' thickness' → logprob: -5.024072647094727
    4. '(radius' → logprob: -7.649072647094727
    5. 'th' → logprob: -8.274072647094727
    6. ' rayon' → logprob: -8.524072647094727
    7. ' la' → logprob: -8.649072647094727
    8. ' le' → logprob: -9.399072647094727
    9. ' (' → logprob: -9.649072647094727
    10. ' ray' → logprob: -10.024072647094727

Token 392: '
' (ID: 198)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4755614399909973
    2. '+' → logprob: -0.9755614399909973
    3. ' plus' → logprob: -6.600561618804932
    4. 'plus' → logprob: -9.725561141967773
    5. ' ' → logprob: -10.725561141967773
    6. ' -' → logprob: -11.850561141967773
    7. '+r' → logprob: -12.100561141967773
    8. '-' → logprob: -12.225561141967773
    9. '*' → logprob: -12.600561141967773
    10. ' +
' → logprob: -12.725561141967773

Token 393: '     ' (ID: 530)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07598725706338882
    2. ')' → logprob: -3.2009873390197754
    3. '):
' → logprob: -4.325987339019775
    4. '):' → logprob: -5.075987339019775
    5. ')
' → logprob: -5.950987339019775
    6. '.' → logprob: -6.200987339019775
    7. ',' → logprob: -6.450987339019775
    8. 'def' → logprob: -6.575987339019775
    9. ' )' → logprob: -6.950987339019775
    10. ' ):
' → logprob: -6.950987339019775

Token 394: ' ou' (ID: 2031)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5458539128303528
    2. ' +' → logprob: -1.170853853225708
    3. '   ' → logprob: -3.295853853225708
    4. '.' → logprob: -3.420853853225708
    5. ')' → logprob: -4.420854091644287
    6. ' plus' → logprob: -4.670854091644287
    7. ' or' → logprob: -5.170854091644287
    8. ':' → logprob: -5.670854091644287
    9. ' ' → logprob: -6.170854091644287
    10. 'def' → logprob: -6.795854091644287

Token 395: ',' (ID: 11)
  Prédit: ' radius'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' radius' → logprob: -0.8927115201950073
    2. 'th' → logprob: -2.017711639404297
    3. ' thickness' → logprob: -2.017711639404297
    4. ' ég' → logprob: -2.392711639404297
    5. 'radius' → logprob: -2.392711639404297
    6. ' à' → logprob: -3.267711639404297
    7. ' si' → logprob: -4.017711639404297
    8. ' if' → logprob: -4.267711639404297
    9. ' au' → logprob: -4.392711639404297
    10. ' ' → logprob: -4.517711639404297

Token 396: ' vu' (ID: 12005)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0635013580322266
    2. ' si' → logprob: -1.3135013580322266
    3. ' radius' → logprob: -1.4385013580322266
    4. ' ' → logprob: -3.6885013580322266
    5. 'radius' → logprob: -3.6885013580322266
    6. '  ' → logprob: -4.188501358032227
    7. '   ' → logprob: -4.313501358032227
    8. 'if' → logprob: -4.563501358032227
    9. ' au' → logprob: -5.063501358032227
    10. ' aux' → logprob: -5.063501358032227

Token 397: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.1427549421787262
    2. ' l' → logprob: -2.7677550315856934
    3. ' que' → logprob: -3.8927550315856934
    4. ' le' → logprob: -4.017755031585693
    5. 'le' → logprob: -5.517755031585693
    6. ' au' → logprob: -5.767755031585693
    7. 'la' → logprob: -5.892755031585693
    8. ' ' → logprob: -6.017755031585693
    9. ' ou' → logprob: -6.267755031585693
    10. 'l' → logprob: -6.267755031585693

Token 398: ' largeur' (ID: 180807)
  Prédit: ' thickness'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' thickness' → logprob: -0.20726484060287476
    2. ' radius' → logprob: -2.4572649002075195
    3. 'radius' → logprob: -2.8322649002075195
    4. 'th' → logprob: -3.2072649002075195
    5. ' thick' → logprob: -7.3322649002075195
    6. '"' → logprob: -8.33226490020752
    7. ' ' → logprob: -8.70726490020752
    8. 'distance' → logprob: -8.95726490020752
    9. ' beams' → logprob: -9.33226490020752
    10. ' ' → logprob: -9.45726490020752

Token 399: ' de' (ID: 334)
  Prédit: ' du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.04140026494860649
    2. 'du' → logprob: -3.666400194168091
    3. ' de' → logprob: -5.16640043258667
    4. ' ' → logprob: -5.66640043258667
    5. ' des' → logprob: -5.79140043258667
    6. 'de' → logprob: -6.29140043258667
    7. 'des' → logprob: -8.166399955749512
    8. '  ' → logprob: -9.166399955749512
    9. ' (' → logprob: -9.541399955749512
    10. ',' → logprob: -9.916399955749512

Token 400: ' laser' (ID: 23429)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.081532597541809
    2. ' fais' → logprob: -1.581532597541809
    3. 'la' → logprob: -1.956532597541809
    4. 'beam' → logprob: -2.5815324783325195
    5. ' beam' → logprob: -2.9565324783325195
    6. 'fe' → logprob: -3.7065324783325195
    7. ' ' → logprob: -3.8315324783325195
    8. ' rayon' → logprob: -4.0815324783325195
    9. 'laser' → logprob: -4.2065324783325195
    10. 'le' → logprob: -4.2065324783325195

Token 401: ',' (ID: 11)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.34745070338249207
    2. ',' → logprob: -1.5974507331848145
    3. '+' → logprob: -3.0974507331848145
    4. ' plus' → logprob: -3.7224507331848145
    5. ' ,' → logprob: -4.4724507331848145
    6. ' ' → logprob: -5.0974507331848145
    7. ' /' → logprob: -6.8474507331848145
    8. '/' → logprob: -7.2224507331848145
    9. 'plus' → logprob: -7.2224507331848145
    10. '   ' → logprob: -8.222450256347656

Token 402: ' s' (ID: 265)
  Prédit: ' radius'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' radius' → logprob: -0.15535640716552734
    2. 'radius' → logprob: -2.4053564071655273
    3. ' thickness' → logprob: -4.030356407165527
    4. ' if' → logprob: -4.530356407165527
    5. ' si' → logprob: -4.780356407165527
    6. ' la' → logprob: -5.780356407165527
    7. ' distance' → logprob: -5.905356407165527
    8. '   ' → logprob: -6.530356407165527
    9. 'th' → logprob: -6.530356407165527
    10. ' ' → logprob: -6.905356407165527

Token 403: ''il' (ID: 14683)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.17662222683429718
    2. 'radius' → logprob: -2.676622152328491
    3. ''il' → logprob: -2.926622152328491
    4. 'ont' → logprob: -4.67662239074707
    5. 'ur' → logprob: -4.80162239074707
    6. 'si' → logprob: -5.05162239074707
    7. 'elon' → logprob: -6.42662239074707
    8. ' radius' → logprob: -6.55162239074707
    9. 't' → logprob: -6.55162239074707
    10. 'on' → logprob: -6.67662239074707

Token 404: ' y' (ID: 342)
  Prédit: ' distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distance' → logprob: -0.8765067458152771
    2. ' y' → logprob: -1.3765068054199219
    3. ' radius' → logprob: -2.251506805419922
    4. 'distance' → logprob: -2.501506805419922
    5. 'y' → logprob: -2.626506805419922
    6. 'radius' → logprob: -3.376506805419922
    7. 'dist' → logprob: -4.001506805419922
    8. ' dist' → logprob: -4.376506805419922
    9. 't' → logprob: -7.126506805419922
    10. 'a' → logprob: -7.126506805419922

Token 405: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3877936899662018
    2. 'a' → logprob: -1.1377936601638794
    3. 'avait' → logprob: -8.26279354095459
    4. '   ' → logprob: -8.88779354095459
    5. ''a' → logprob: -8.88779354095459
    6. ' ' → logprob: -9.26279354095459
    7. 'ave' → logprob: -10.38779354095459
    8. 'have' → logprob: -10.76279354095459
    9. 'distance' → logprob: -11.01279354095459
    10. 'à' → logprob: -11.13779354095459

Token 406: ' un' (ID: 537)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.3737514913082123
    2. ' overlap' → logprob: -2.248751401901245
    3. 'une' → logprob: -2.373751401901245
    4. ' un' → logprob: -2.873751401901245
    5. ' radius' → logprob: -4.123751640319824
    6. ' ' → logprob: -4.248751640319824
    7. 'un' → logprob: -4.873751640319824
    8. ' distance' → logprob: -5.373751640319824
    9. 'distance' → logprob: -5.873751640319824
    10. 'radius' → logprob: -6.248751640319824

Token 407: ' overlap' (ID: 56631)
  Prédit: ' chev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chev' → logprob: -0.545583188533783
    2. 'che' → logprob: -1.9205832481384277
    3. ' overlap' → logprob: -2.2955832481384277
    4. ' rec' → logprob: -2.7955832481384277
    5. 'over' → logprob: -3.1705832481384277
    6. ' dépasse' → logprob: -3.7955832481384277
    7. 'rec' → logprob: -3.9205832481384277
    8. 'd' → logprob: -4.420583248138428
    9. 'e' → logprob: -5.170583248138428
    10. ' overlapping' → logprob: -5.920583248138428

Token 408: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0880937576293945
    2. '   ' → logprob: -1.0880937576293945
    3. ',' → logprob: -2.3380937576293945
    4. '  ' → logprob: -2.9630937576293945
    5. ')' → logprob: -3.3380937576293945
    6. ' ,' → logprob: -3.7130937576293945
    7. ' and' → logprob: -3.8380937576293945
    8. '    ' → logprob: -4.2130937576293945
    9. ' et' → logprob: -4.4630937576293945
    10. '_' → logprob: -4.7130937576293945

Token 409: ' deux' (ID: 10301)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5795140266418457
    2. 'ray' → logprob: -1.3295140266418457
    3. ' ray' → logprob: -2.3295140266418457
    4. 'radius' → logprob: -4.079514026641846
    5. ' radius' → logprob: -4.329514026641846
    6. ' r' → logprob: -4.454514026641846
    7. ' rayon' → logprob: -4.704514026641846
    8. ' deux' → logprob: -5.204514026641846
    9. 'ra' → logprob: -5.329514026641846
    10. ' demi' → logprob: -5.829514026641846

Token 410: ' dis' (ID: 829)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.059474553912878036
    2. 'radius' → logprob: -5.059474468231201
    3. 'distance' → logprob: -5.434474468231201
    4. ' ' → logprob: -5.684474468231201
    5. '  ' → logprob: -5.684474468231201
    6. ' radius' → logprob: -5.809474468231201
    7. ')' → logprob: -6.059474468231201
    8. '    ' → logprob: -6.059474468231201
    9. '
' → logprob: -6.059474468231201
    10. 'def' → logprob: -6.184474468231201

Token 411: 'ques' (ID: 3531)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0012280851369723678
    2. 'tan' → logprob: -6.876227855682373
    3. '>' → logprob: -9.501228332519531
    4. 'ct' → logprob: -10.876228332519531
    5. '```' → logprob: -11.251228332519531
    6. 'ts' → logprob: -11.751228332519531
    7. 'ta' → logprob: -11.751228332519531
    8. '   ' → logprob: -11.751228332519531
    9. 'ques' → logprob: -11.751228332519531
    10. 'tant' → logprob: -11.751228332519531

Token 412: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08917980641126633
    2. '
' → logprob: -2.964179754257202
    3. '    
' → logprob: -4.214179992675781
    4. '  
' → logprob: -4.339179992675781
    5. '   
' → logprob: -6.464179992675781
    6. ' 
' → logprob: -6.589179992675781
    7. ')' → logprob: -7.089179992675781
    8. 'def' → logprob: -7.589179992675781
    9. '  ' → logprob: -8.464179992675781
    10. ')
' → logprob: -8.714179992675781

Token 413: 'machine' (ID: 48082)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.46327531337738037
    2. ')' → logprob: -1.2132753133773804
    3. 'radius' → logprob: -3.33827543258667
    4. ' )
' → logprob: -4.46327543258667
    5. ' radius' → logprob: -4.58827543258667
    6. ' ).' → logprob: -5.08827543258667
    7. ').' → logprob: -6.08827543258667
    8. ' px' → logprob: -6.71327543258667
    9. ')
' → logprob: -6.96327543258667
    10. '   ' → logprob: -7.33827543258667

Token 414: ')' (ID: 8)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.9162495136260986
    2. ' +' → logprob: -1.7912495136260986
    3. 'radius' → logprob: -1.9162495136260986
    4. ',' → logprob: -2.1662495136260986
    5. '+' → logprob: -3.1662495136260986
    6. 'et' → logprob: -3.2912495136260986
    7. ' ,' → logprob: -3.4162495136260986
    8. ' -' → logprob: -4.6662492752075195
    9. ' and' → logprob: -4.7912492752075195
    10. ')' → logprob: -5.0412492752075195

Token 415: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32914960384368896
    2. ' et' → logprob: -1.829149603843689
    3. ' ou' → logprob: -3.4541497230529785
    4. ',' → logprob: -3.8291497230529785
    5. ' avec' → logprob: -4.5791497230529785
    6. 'def' → logprob: -4.5791497230529785
    7. ' +' → logprob: -4.8291497230529785
    8. '       ' → logprob: -4.9541497230529785
    9. 'et' → logprob: -5.8291497230529785
    10. ' and' → logprob: -5.9541497230529785

Token 416: '
' (ID: 198)
  Prédit: ' laser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' laser' → logprob: -1.5376694202423096
    2. ' du' → logprob: -1.9126694202423096
    3. 'laser' → logprob: -2.1626694202423096
    4. ' le' → logprob: -2.6626694202423096
    5. ' la' → logprob: -2.6626694202423096
    6. 'le' → logprob: -2.6626694202423096
    7. ' des' → logprob: -3.1626694202423096
    8. ' radius' → logprob: -3.2876694202423096
    9. 'las' → logprob: -3.6626694202423096
    10. ' the' → logprob: -3.6626694202423096

Token 417: '     ' (ID: 530)
  Prédit: ' du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' du' → logprob: -1.0390355587005615
    2. ' des' → logprob: -1.6640355587005615
    3. 'laser' → logprob: -1.9140355587005615
    4. '#' → logprob: -2.4140355587005615
    5. ' laser' → logprob: -2.6640355587005615
    6. 'des' → logprob: -3.5390355587005615
    7. 'du' → logprob: -4.289035797119141
    8. 'la' → logprob: -4.414035797119141
    9. 'le' → logprob: -4.414035797119141
    10. 'les' → logprob: -4.789035797119141

Token 418: ' bande' (ID: 53730)
  Prédit: 'laser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'laser' → logprob: -1.065637230873108
    2. ' laser' → logprob: -1.565637230873108
    3. 'le' → logprob: -1.815637230873108
    4. ' le' → logprob: -2.8156371116638184
    5. 'be' → logprob: -3.1906371116638184
    6. ' du' → logprob: -3.8156371116638184
    7. 'las' → logprob: -3.8156371116638184
    8. ' la' → logprob: -3.9406371116638184
    9. ' des' → logprob: -4.190637111663818
    10. 'beam' → logprob: -4.315637111663818

Token 419: ' laser' (ID: 23429)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8629674911499023
    2. ' laser' → logprob: -1.3629674911499023
    3. ' (' → logprob: -1.8629674911499023
    4. ' du' → logprob: -3.6129674911499023
    5. ' des' → logprob: -3.7379674911499023
    6. 'de' → logprob: -3.8629674911499023
    7. '_' → logprob: -4.237967491149902
    8. 'laser' → logprob: -4.237967491149902
    9. ' d' → logprob: -4.362967491149902
    10. 'au' → logprob: -4.612967491149902

Token 420: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04961666837334633
    2. ':' → logprob: -4.799616813659668
    3. '.' → logprob: -5.049616813659668
    4. ')' → logprob: -5.174616813659668
    5. '
' → logprob: -5.674616813659668
    6. ' ' → logprob: -5.674616813659668
    7. ',' → logprob: -6.049616813659668
    8. 's' → logprob: -6.049616813659668
    9. '    
' → logprob: -6.049616813659668
    10. ':
' → logprob: -6.424616813659668

Token 421: 'ligne' (ID: 94660)
  Prédit: ' thickness'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' thickness' → logprob: -1.0758672952651978
    2. ' beam' → logprob: -1.5758672952651978
    3. 'beam' → logprob: -1.8258672952651978
    4. 'th' → logprob: -2.325867176055908
    5. ' beams' → logprob: -2.575867176055908
    6. 'laser' → logprob: -3.950867176055908
    7. ')' → logprob: -3.950867176055908
    8. 'be' → logprob: -4.325867176055908
    9. ' radius' → logprob: -4.325867176055908
    10. ' laser' → logprob: -4.450867176055908

Token 422: ' avec' (ID: 3937)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7042015194892883
    2. ' segment' → logprob: -1.4542014598846436
    3. ' )' → logprob: -2.0792014598846436
    4. ' de' → logprob: -3.4542014598846436
    5. 'segment' → logprob: -3.5792014598846436
    6. ').' → logprob: -3.7042014598846436
    7. ',' → logprob: -4.329201698303223
    8. ' avec' → logprob: -4.829201698303223
    9. '_segment' → logprob: -5.079201698303223
    10. ' ,' → logprob: -5.579201698303223

Token 423: ' ép' (ID: 19960)
  Prédit: 'th'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'th' → logprob: -0.37646690011024475
    2. ' thickness' → logprob: -1.5014668703079224
    3. 'ép' → logprob: -2.876466989517212
    4. ' ép' → logprob: -4.251466751098633
    5. 'width' → logprob: -4.876466751098633
    6. 'ep' → logprob: -5.751466751098633
    7. ' width' → logprob: -6.001466751098633
    8. 'une' → logprob: -6.251466751098633
    9. ' une' → logprob: -6.626466751098633
    10. 'radius' → logprob: -7.376466751098633

Token 424: 'aisseur' (ID: 168122)
  Prédit: 'aisseur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aisseur' → logprob: -0.00013512482109945267
    2. 'aisse' → logprob: -9.50013542175293
    3. 'a' → logprob: -11.50013542175293
    4. '
' → logprob: -11.75013542175293
    5. 'aisser' → logprob: -11.87513542175293
    6. 'ais' → logprob: -11.87513542175293
    7. '```' → logprob: -12.25013542175293
    8. '{
' → logprob: -12.62513542175293
    9. '>' → logprob: -13.12513542175293
    10. 'isseur' → logprob: -13.50013542175293

Token 425: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2656528353691101
    2. ').' → logprob: -1.8906528949737549
    3. ' )' → logprob: -2.640652894973755
    4. ' ).' → logprob: -5.390652656555176
    5. ')
' → logprob: -6.390652656555176
    6. ' ' → logprob: -6.515652656555176
    7. ' de' → logprob: -7.890652656555176
    8. ' )
' → logprob: -7.890652656555176
    9. '   ' → logprob: -7.890652656555176
    10. ',' → logprob: -8.390652656555176

Token 426: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011153311934322119
    2. '"""' → logprob: -7.626115322113037
    3. '"""
' → logprob: -8.501115798950195
    4. ')' → logprob: -8.751115798950195
    5. 'def' → logprob: -9.501115798950195
    6. ' """' → logprob: -9.876115798950195
    7. '    
' → logprob: -10.751115798950195
    8. '
' → logprob: -10.876115798950195
    9. ' """
' → logprob: -11.001115798950195
    10. ' for' → logprob: -11.001115798950195

Token 427: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031481273472309113
    2. ')' → logprob: -7.378148078918457
    3. '"""' → logprob: -7.378148078918457
    4. '"""
' (adapté à ' """
') → logprob: -7.628148078918457
    5. '
' → logprob: -7.753148078918457
    6. 'for' → logprob: -8.003148078918457
    7. ' for' → logprob: -8.628148078918457
    8. '    
' → logprob: -9.003148078918457
    9. 'def' → logprob: -9.378148078918457
    10. ' """
' → logprob: -10.003148078918457

Token 428: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03026690147817135
    2. ' for' → logprob: -4.155266761779785
    3. 'for' → logprob: -4.280266761779785
    4. 'def' → logprob: -9.405266761779785
    5. '
' → logprob: -9.405266761779785
    6. '    
' → logprob: -10.030266761779785
    7. 'indent' → logprob: -10.780266761779785
    8. 'import' → logprob: -11.530266761779785
    9. '   ' → logprob: -11.530266761779785
    10. 'safe' → logprob: -12.280266761779785

Token 429: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0111826928332448
    2. '   ' → logprob: -4.88618278503418
    3. ' for' → logprob: -5.63618278503418
    4. 'def' → logprob: -13.26118278503418
    5. '	for' → logprob: -14.51118278503418
    6. 'import' → logprob: -14.76118278503418
    7. ' ' → logprob: -14.88618278503418
    8. '  ' → logprob: -15.26118278503418
    9. '
' → logprob: -15.38618278503418
    10. '    
' → logprob: -16.51118278503418

Token 430: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.122121661901474
    2. '(x' → logprob: -2.872121572494507
    3. ' x' → logprob: -2.997121572494507
    4. ' (' → logprob: -5.122121810913086
    5. 'beam' → logprob: -6.247121810913086
    6. ' beam' → logprob: -8.247121810913086
    7. '   ' → logprob: -8.622121810913086
    8. '(' → logprob: -9.872121810913086
    9. ' ' → logprob: -11.122121810913086
    10. 'bx' → logprob: -11.747121810913086

Token 431: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.704273118884885e-07
    2. ' x' → logprob: -14.625000953674316
    3. '(x' → logprob: -16.625
    4. '   ' → logprob: -17.875
    5. ')x' → logprob: -18.625
    6. ')' → logprob: -19.375
    7. '_x' → logprob: -19.875
    8. 'bx' → logprob: -20.375
    9. 'beam' → logprob: -20.625
    10. '	x' → logprob: -21.0

Token 432: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ',' → logprob: -15.250000953674316
    3. '<|end|>' → logprob: -15.250000953674316
    4. ' ' → logprob: -16.125
    5. '_' → logprob: -17.0
    6. 'x' → logprob: -17.125
    7. '<|end|>' → logprob: -17.875
    8. ')' → logprob: -18.5625
    9. 'def' → logprob: -18.5625
    10. '
' → logprob: -18.6875

Token 433: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004722603189293295
    2. ' ,' → logprob: -7.750472068786621
    3. ',y' → logprob: -10.125472068786621
    4. ',
' → logprob: -14.125472068786621
    5. 'y' → logprob: -14.875472068786621
    6. '‌,' → logprob: -15.625472068786621
    7. ',x' → logprob: -15.875472068786621
    8. ' y' → logprob: -17.250473022460938
    9. ' ' → logprob: -17.250473022460938
    10. '<|end|>' → logprob: -17.500473022460938

Token 434: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.03804149478673935
    2. ' y' → logprob: -3.288041591644287
    3. '<|end|>' → logprob: -16.663042068481445
    4. ' ' → logprob: -17.288042068481445
    5. ',y' → logprob: -17.913042068481445
    6. '	y' → logprob: -18.163042068481445
    7. ',' → logprob: -18.538042068481445
    8. 'x' → logprob: -18.788042068481445
    9. ''y' → logprob: -19.163042068481445
    10. '    ' → logprob: -19.163042068481445

Token 435: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1233813464641571
    2. '1' → logprob: -2.2483813762664795
    3. ' ,' → logprob: -5.1233811378479
    4. ',y' → logprob: -5.4983811378479
    5. 'y' → logprob: -7.9983811378479
    6. ' y' → logprob: -9.748381614685059
    7. ' ' → logprob: -10.498381614685059
    8. '   ' → logprob: -10.623381614685059
    9. '    ' → logprob: -13.373381614685059
    10. '  ' → logprob: -13.373381614685059

Token 436: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.5027299822540954e-05
    2. ',x' → logprob: -10.125055313110352
    3. ' ,' → logprob: -11.125055313110352
    4. 'x' → logprob: -15.875055313110352
    5. ',
' → logprob: -16.87505531311035
    6. '   ' → logprob: -18.50005531311035
    7. ' x' → logprob: -18.87505531311035
    8. ',y' → logprob: -19.37505531311035
    9. '),' → logprob: -19.50005531311035
    10. '_,' → logprob: -19.50005531311035

Token 437: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00218583014793694
    2. ' x' → logprob: -6.127185821533203
    3. ' ' → logprob: -14.877185821533203
    4. '   ' → logprob: -15.752185821533203
    5. ',' → logprob: -16.377185821533203
    6. '    ' → logprob: -17.252185821533203
    7. '  ' → logprob: -17.252185821533203
    8. '<|end|>' → logprob: -18.377185821533203
    9. ',x' → logprob: -18.502185821533203
    10. '
' → logprob: -18.502185821533203

Token 438: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009262301027774811
    2. ',' → logprob: -7.0009260177612305
    3. '1' → logprob: -11.87592601776123
    4. ' ' → logprob: -12.50092601776123
    5. '```' → logprob: -14.00092601776123
    6. ')' → logprob: -14.12592601776123
    7. ',x' → logprob: -14.25092601776123
    8. 'x' → logprob: -15.00092601776123
    9. ' ,' → logprob: -15.00092601776123
    10. '₂' → logprob: -15.00092601776123

Token 439: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.6895233531831764e-05
    2. ' ,' → logprob: -10.62502670288086
    3. ',y' → logprob: -13.12502670288086
    4. ',
' → logprob: -15.25002670288086
    5. 'y' → logprob: -16.37502670288086
    6. '   ' → logprob: -16.37502670288086
    7. ' y' → logprob: -17.00002670288086
    8. '_,' → logprob: -18.12502670288086
    9. '),' → logprob: -18.50002670288086
    10. ')' → logprob: -18.62502670288086

Token 440: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3868887722492218
    2. ' y' → logprob: -1.1368887424468994
    3. '<|end|>' → logprob: -11.01188850402832
    4. ' ' → logprob: -14.38688850402832
    5. 'x' → logprob: -15.13688850402832
    6. ')y' → logprob: -15.88688850402832
    7. '	y' → logprob: -16.01188850402832
    8. ''y' → logprob: -17.38688850402832
    9. ')' → logprob: -17.38688850402832
    10. 'Y' → logprob: -17.88688850402832

Token 441: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -13.25000286102295
    3. ',' → logprob: -14.37500286102295
    4. ')' → logprob: -15.00000286102295
    5. '1' → logprob: -15.75000286102295
    6. '```' → logprob: -17.000003814697266
    7. '   ' → logprob: -17.125003814697266
    8. '4' → logprob: -17.625003814697266
    9. 'y' → logprob: -18.625003814697266
    10. 'x' → logprob: -19.062503814697266

Token 442: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.700132997939363e-05
    2. ' ,' → logprob: -11.000017166137695
    3. ',r' → logprob: -16.125017166137695
    4. ',
' → logprob: -17.250017166137695
    5. '   ' → logprob: -18.125017166137695
    6. ',t' → logprob: -18.250017166137695
    7. ',x' → logprob: -18.750017166137695
    8. ',w' → logprob: -19.250017166137695
    9. '‌,' → logprob: -19.500017166137695
    10. ',width' → logprob: -19.500017166137695

Token 443: ' thickness' (ID: 38833)
  Prédit: 'th'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'th' → logprob: -0.030642928555607796
    2. ' thickness' → logprob: -3.5306429862976074
    3. 't' → logprob: -7.155642986297607
    4. ')' → logprob: -10.90564250946045
    5. '   ' → logprob: -11.03064250946045
    6. ' th' → logprob: -11.15564250946045
    7. ' thick' → logprob: -11.15564250946045
    8. ' t' → logprob: -11.40564250946045
    9. 'thr' → logprob: -11.78064250946045
    10. '	th' → logprob: -11.78064250946045

Token 444: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.602024900028482e-05
    2. ' )' → logprob: -9.375085830688477
    3. '),' → logprob: -15.500085830688477
    4. '   ' → logprob: -15.625085830688477
    5. '))' → logprob: -15.875085830688477
    6. ')
' → logprob: -16.125085830688477
    7. ',' → logprob: -16.250085830688477
    8. ')=' → logprob: -16.375085830688477
    9. '):' → logprob: -16.375085830688477
    10. ' in' → logprob: -16.625085830688477

Token 445: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.23336370289325714
    2. ':' → logprob: -1.8583637475967407
    3. 'in' → logprob: -3.358363628387451
    4. ',' → logprob: -4.608363628387451
    5. ' :' → logprob: -5.608363628387451
    6. '   ' → logprob: -5.858363628387451
    7. ')' → logprob: -8.60836410522461
    8. ' ' → logprob: -9.10836410522461
    9. ':
' → logprob: -9.23336410522461
    10. '  ' → logprob: -9.23336410522461

Token 446: ' beams' (ID: 81992)
  Prédit: ' beams'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' beams' → logprob: -0.12694227695465088
    2. 'be' → logprob: -2.1269421577453613
    3. 'beam' → logprob: -11.75194263458252
    4. 'b' → logprob: -12.62694263458252
    5. ' beads' → logprob: -14.62694263458252
    6. 'Be' → logprob: -14.75194263458252
    7. '(be' → logprob: -14.87694263458252
    8. '	be' → logprob: -14.87694263458252
    9. '_be' → logprob: -15.12694263458252
    10. '   ' → logprob: -15.37694263458252

Token 447: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020615579560399055
    2. ':
' → logprob: -3.895615577697754
    3. '   ' → logprob: -10.270615577697754
    4. ' :' → logprob: -11.270615577697754
    5. '):
' → logprob: -11.270615577697754
    6. '):' → logprob: -12.145615577697754
    7. ' :
' → logprob: -12.895615577697754
    8. '       ' → logprob: -13.020615577697754
    9. ':
' → logprob: -13.770615577697754
    10. '=' → logprob: -14.145615577697754

Token 448: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022916549642104656
    2. '        
' → logprob: -8.625228881835938
    3. '   ' → logprob: -11.000228881835938
    4. '  
' → logprob: -11.875228881835938
    5. '    
' → logprob: -12.500228881835938
    6. '     ' → logprob: -12.875228881835938
    7. '
' → logprob: -12.875228881835938
    8. '      ' → logprob: -12.875228881835938
    9. '    ' → logprob: -13.000228881835938
    10. '       
' → logprob: -13.000228881835938

Token 449: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6043241620063782
    2. 'distance' → logprob: -1.1043241024017334
    3. '       ' → logprob: -2.2293241024017334
    4. 'd' → logprob: -4.4793243408203125
    5. ' distance' → logprob: -6.6043243408203125
    6. 'if' → logprob: -6.8543243408203125
    7. ' dist' → logprob: -7.9793243408203125
    8. '   ' → logprob: -8.979324340820312
    9. 'min' → logprob: -9.104324340820312
    10. '
' → logprob: -10.354324340820312

Token 450: ' Distance' (ID: 53583)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.6851011514663696
    2. 'dist' → logprob: -0.9351011514663696
    3. ' distance' → logprob: -2.93510103225708
    4. ' dist' → logprob: -3.56010103225708
    5. '       ' → logprob: -4.43510103225708
    6. 'd' → logprob: -4.93510103225708
    7. '   ' → logprob: -6.56010103225708
    8. 'min' → logprob: -7.56010103225708
    9. ' d' → logprob: -7.68510103225708
    10. ' min' → logprob: -9.060101509094238

Token 451: ' minimale' (ID: 143217)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07553703337907791
    2. 'dist' → logprob: -4.075537204742432
    3. '_point' → logprob: -4.200537204742432
    4. '=' → logprob: -4.575537204742432
    5. '_dist' → logprob: -4.700537204742432
    6. '       ' → logprob: -4.825537204742432
    7. '   ' → logprob: -5.325537204742432
    8. '_distance' → logprob: -6.200537204742432
    9. 'd' → logprob: -6.450537204742432
    10. '_to' → logprob: -6.700537204742432

Token 452: ' entre' (ID: 3853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0513545423746109
    2. 'distance' → logprob: -4.30135440826416
    3. ' =' → logprob: -4.92635440826416
    4. ' between' → logprob: -5.17635440826416
    5. ' distance' → logprob: -5.30135440826416
    6. '        ' → logprob: -5.92635440826416
    7. 'dist' → logprob: -5.92635440826416
    8. ' to' → logprob: -6.17635440826416
    9. '_distance' → logprob: -6.42635440826416
    10. '=' → logprob: -6.55135440826416

Token 453: ' machine' (ID: 7342)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.7870112657546997
    2. '(px' → logprob: -1.0370112657546997
    3. ' px' → logprob: -1.6620112657546997
    4. ' (' → logprob: -7.91201114654541
    5. 'point' → logprob: -9.53701114654541
    6. 'py' → logprob: -11.03701114654541
    7. 'le' → logprob: -11.28701114654541
    8. ' point' → logprob: -11.53701114654541
    9. '(py' → logprob: -11.91201114654541
    10. '(x' → logprob: -12.16201114654541

Token 454: ' et' (ID: 859)
  Prédit: '(px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(px' → logprob: -0.16275626420974731
    2. ' et' → logprob: -2.2877562046051025
    3. 'et' → logprob: -3.9127562046051025
    4. ' (' → logprob: -4.162756443023682
    5. '       ' → logprob: -5.787756443023682
    6. ' and' → logprob: -5.912756443023682
    7. ' px' → logprob: -6.287756443023682
    8. '(point' → logprob: -6.662756443023682
    9. ',' → logprob: -6.787756443023682
    10. '(p' → logprob: -7.162756443023682

Token 455: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.6431801915168762
    2. 'x' → logprob: -2.1431801319122314
    3. ' segment' → logprob: -2.2681801319122314
    4. 'px' → logprob: -2.6431801319122314
    5. '(x' → logprob: -2.8931801319122314
    6. 'le' → logprob: -3.1431801319122314
    7. '(px' → logprob: -3.6431801319122314
    8. ' le' → logprob: -4.3931803703308105
    9. ' px' → logprob: -4.6431803703308105
    10. ' (' → logprob: -4.6431803703308105

Token 456: ' laser' (ID: 23429)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009284473955631256
    2. ' =' → logprob: -5.009284496307373
    3. '=' → logprob: -6.509284496307373
    4. ':' → logprob: -7.759284496307373
    5. '        
' → logprob: -8.134284019470215
    6. ',' → logprob: -9.009284019470215
    7. 'distance' → logprob: -9.759284019470215
    8. ' distance' → logprob: -10.384284019470215
    9. ' :' → logprob: -10.509284019470215
    10. '        ' → logprob: -10.884284019470215

Token 457: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002564480062574148
    2. 'distance' → logprob: -6.752564430236816
    3. ' =' → logprob: -7.752564430236816
    4. '=' → logprob: -8.377564430236816
    5. ' distance' → logprob: -8.502564430236816
    6. '        
' → logprob: -8.627564430236816
    7. ':' → logprob: -9.127564430236816
    8. ',' → logprob: -9.252564430236816
    9. ' distances' → logprob: -10.252564430236816
    10. 'Distance' → logprob: -10.752564430236816

Token 458: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014692598779220134
    2. 'distance' → logprob: -9.250146865844727
    3. ' distance' → logprob: -10.750146865844727
    4. ' distances' → logprob: -11.500146865844727
    5. '        
' → logprob: -12.125146865844727
    6. ',' → logprob: -12.875146865844727
    7. 'dist' → logprob: -13.000146865844727
    8. '=' → logprob: -13.250146865844727
    9. ' =' → logprob: -13.500146865844727
    10. '_distance' → logprob: -14.125146865844727

Token 459: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.24139055609703064
    2. 'distance' → logprob: -1.616390585899353
    3. 'd' → logprob: -4.741390705108643
    4. ' dist' → logprob: -5.741390705108643
    5. ' distance' → logprob: -5.866390705108643
    6. '       ' → logprob: -6.991390705108643
    7. ' d' → logprob: -9.616390228271484
    8. '   ' → logprob: -9.616390228271484
    9. 'min' → logprob: -10.991390228271484
    10. '	dist' → logprob: -13.116390228271484

Token 460: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2114889919757843
    2. '=' → logprob: -1.961488962173462
    3. '_' → logprob: -3.211488962173462
    4. '_point' → logprob: -4.711489200592041
    5. '_=' → logprob: -7.586489200592041
    6. 'ance' → logprob: -9.586488723754883
    7. '=_' → logprob: -9.961488723754883
    8. '_min' → logprob: -11.211488723754883
    9. '   ' → logprob: -11.586488723754883
    10. ' ' → logprob: -11.711488723754883

Token 461: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3868755102157593
    2. ' dist' → logprob: -1.1368755102157593
    3. '       ' → logprob: -13.01187515258789
    4. '	dist' → logprob: -13.51187515258789
    5. '   ' → logprob: -14.38687515258789
    6. '(dist' → logprob: -15.63687515258789
    7. '_dist' → logprob: -17.01187515258789
    8. '.dist' → logprob: -17.26187515258789
    9. '    ' → logprob: -17.76187515258789
    10. 'd' → logprob: -17.88687515258789

Token 462: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -15.75
    3. '_POINT' → logprob: -18.5
    4. '_Point' → logprob: -18.5
    5. ' _' → logprob: -19.0
    6. '_points' → logprob: -19.625
    7. ' point' → logprob: -20.0
    8. 'point' → logprob: -20.5
    9. '_p' → logprob: -21.0
    10. 'Point' → logprob: -21.25

Token 463: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -5.676981345459353e-06
    2. '_point' → logprob: -12.125005722045898
    3. '_' → logprob: -16.2500057220459
    4. ' _' → logprob: -16.3750057220459
    5. ')_' → logprob: -18.3750057220459
    6. '_t' → logprob: -19.8750057220459
    7. '_from' → logprob: -20.0000057220459
    8. '_TO' → logprob: -20.1250057220459
    9. '_for' → logprob: -20.5000057220459
    10. '```' → logprob: -20.7500057220459

Token 464: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -9.746380237629637e-05
    2. 'segment' → logprob: -9.250097274780273
    3. '_point' → logprob: -14.250097274780273
    4. '_seg' → logprob: -15.250097274780273
    5. '_' → logprob: -15.875097274780273
    6. '_segments' → logprob: -16.375097274780273
    7. ' segment' → logprob: -16.500097274780273
    8. ' _' → logprob: -16.875097274780273
    9. 's' → logprob: -17.500097274780273
    10. 'seg' → logprob: -17.875097274780273

Token 465: '(px' (ID: 195026)
  Prédit: '(px'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(px' → logprob: -3.8889261304575484e-06
    2. '(py' → logprob: -12.875003814697266
    3. '(' → logprob: -13.875003814697266
    4. 'px' → logprob: -16.375003814697266
    5. ' (' → logprob: -16.500003814697266
    6. ' px' → logprob: -16.625003814697266
    7. ':px' → logprob: -18.250003814697266
    8. '(pixel' → logprob: -19.625003814697266
    9. '(
' → logprob: -19.750003814697266
    10. '(pi' → logprob: -20.125003814697266

Token 466: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024323153775185347
    2. ' ,' → logprob: -8.375243186950684
    3. ',
' → logprob: -11.625243186950684
    4. 'py' → logprob: -13.750243186950684
    5. '.py' → logprob: -13.875243186950684
    6. '(py' → logprob: -14.375243186950684
    7. ',y' → logprob: -15.125243186950684
    8. ' py' → logprob: -15.125243186950684
    9. ',

' → logprob: -15.875243186950684
    10. '‌,' → logprob: -16.250244140625

Token 467: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -3.547789674485102e-05
    2. ' py' → logprob: -10.250035285949707
    3. '_py' → logprob: -17.125036239624023
    4. '(py' → logprob: -17.625036239624023
    5. '.py' → logprob: -19.500036239624023
    6. 'px' → logprob: -20.125036239624023
    7. 'Py' → logprob: -21.125036239624023
    8. 'p' → logprob: -21.250036239624023
    9. 'ply' → logprob: -21.375036239624023
    10. 'ipy' → logprob: -22.000036239624023

Token 468: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002922022540587932
    2. ' ,' → logprob: -8.25029182434082
    3. ',x' → logprob: -10.50029182434082
    4. ',
' → logprob: -13.12529182434082
    5. '   ' → logprob: -14.37529182434082
    6. '       ' → logprob: -14.87529182434082
    7. 'x' → logprob: -16.12529182434082
    8. ',
' → logprob: -16.37529182434082
    9. '           ' → logprob: -16.50029182434082
    10. '```' → logprob: -17.00029182434082

Token 469: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.4391956685576588e-05
    2. ' x' → logprob: -10.625024795532227
    3. '(x' → logprob: -19.125024795532227
    4. '   ' → logprob: -20.500024795532227
    5. '	x' → logprob: -21.500024795532227
    6. ')x' → logprob: -21.500024795532227
    7. '$x' → logprob: -22.125024795532227
    8. '"x' → logprob: -22.375024795532227
    9. ' ' → logprob: -22.875024795532227
    10. '[x' → logprob: -23.125024795532227

Token 470: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.319370302458992e-06
    2. ',' → logprob: -12.625005722045898
    3. ' ' → logprob: -14.687505722045898
    4. '```' → logprob: -14.687505722045898
    5. ' -' → logprob: -16.0000057220459
    6. '-' → logprob: -16.0000057220459
    7. '_' → logprob: -16.1250057220459
    8. '
' → logprob: -16.1250057220459
    9. '   ' → logprob: -16.4375057220459
    10. '.' → logprob: -16.8125057220459

Token 471: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00036406738217920065
    2. ',y' → logprob: -8.500364303588867
    3. ' ,' → logprob: -8.750364303588867
    4. 'y' → logprob: -13.500364303588867
    5. ',
' → logprob: -14.875364303588867
    6. ' y' → logprob: -15.625364303588867
    7. '   ' → logprob: -16.125364303588867
    8. '```' → logprob: -17.125364303588867
    9. '_,' → logprob: -18.125364303588867
    10. '1' → logprob: -18.375364303588867

Token 472: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00020354038861114532
    2. ' y' → logprob: -8.500203132629395
    3. ' ' → logprob: -17.50020408630371
    4. '	y' → logprob: -19.37520408630371
    5. '   ' → logprob: -19.87520408630371
    6. '    ' → logprob: -20.12520408630371
    7. ''y' → logprob: -20.25020408630371
    8. '<|end|>' → logprob: -20.25020408630371
    9. 'x' → logprob: -20.62520408630371
    10. ',' → logprob: -20.75020408630371

Token 473: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001060675480403006
    2. ',' → logprob: -6.876060485839844
    3. ' ' → logprob: -11.626060485839844
    4. ' y' → logprob: -12.001060485839844
    5. 'y' → logprob: -12.376060485839844
    6. ',y' → logprob: -12.626060485839844
    7. '2' → logprob: -12.876060485839844
    8. '   ' → logprob: -14.001060485839844
    9. 'x' → logprob: -14.376060485839844
    10. ' ,' → logprob: -14.501060485839844

Token 474: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.941161776310764e-05
    2. ' ,' → logprob: -10.250039100646973
    3. ',x' → logprob: -12.500039100646973
    4. 'x' → logprob: -15.375039100646973
    5. '   ' → logprob: -17.50004005432129
    6. ',
' → logprob: -18.50004005432129
    7. ' x' → logprob: -18.75004005432129
    8. '       ' → logprob: -19.87504005432129
    9. '```' → logprob: -21.37504005432129
    10. ' ' → logprob: -21.62504005432129

Token 475: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0019286326132714748
    2. ' x' → logprob: -6.251928806304932
    3. '	x' → logprob: -20.376928329467773
    4. '   ' → logprob: -20.501928329467773
    5. ' ' → logprob: -21.251928329467773
    6. '    ' → logprob: -22.001928329467773
    7. ')x' → logprob: -22.251928329467773
    8. '_x' → logprob: -23.626928329467773
    9. '"x' → logprob: -23.751928329467773
    10. ',' → logprob: -23.751928329467773

Token 476: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.4121114822482923e-06
    2. '1' → logprob: -13.500003814697266
    3. ',' → logprob: -13.875003814697266
    4. ' ' → logprob: -15.375003814697266
    5. '```' → logprob: -15.375003814697266
    6. '22' → logprob: -15.750003814697266
    7. 'x' → logprob: -16.437503814697266
    8. '12' → logprob: -16.750003814697266
    9. '₂' → logprob: -16.812503814697266
    10. '۲' → logprob: -17.187503814697266

Token 477: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.396757089532912e-05
    2. ' ,' → logprob: -9.8750638961792
    3. ',y' → logprob: -11.3750638961792
    4. ',
' → logprob: -14.6250638961792
    5. 'y' → logprob: -15.1250638961792
    6. ' y' → logprob: -15.8750638961792
    7. '```' → logprob: -16.875064849853516
    8. ' ' → logprob: -17.875064849853516
    9. '_,' → logprob: -18.250064849853516
    10. '<|end|>' → logprob: -18.750064849853516

Token 478: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07888989895582199
    2. ' y' → logprob: -2.578889846801758
    3. '	y' → logprob: -16.703889846801758
    4. ' ' → logprob: -16.953889846801758
    5. '   ' → logprob: -18.703889846801758
    6. 'x' → logprob: -19.078889846801758
    7. ')y' → logprob: -19.203889846801758
    8. 'py' → logprob: -19.328889846801758
    9. '    ' → logprob: -19.453889846801758
    10. '<|end|>' → logprob: -19.453889846801758

Token 479: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -13.625003814697266
    3. 'y' → logprob: -13.625003814697266
    4. '1' → logprob: -15.000003814697266
    5. '4' → logprob: -15.375003814697266
    6. 'x' → logprob: -15.500003814697266
    7. ' y' → logprob: -16.625003814697266
    8. '```' → logprob: -17.375003814697266
    9. ',' → logprob: -17.562503814697266
    10. '   ' → logprob: -17.625003814697266

Token 480: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02996661700308323
    2. ')
' → logprob: -3.5299665927886963
    3. '       ' → logprob: -8.779966354370117
    4. ')
' → logprob: -10.279966354370117
    5. ' )' → logprob: -10.904966354370117
    6. ')

' → logprob: -12.279966354370117
    7. ' )
' → logprob: -12.904966354370117
    8. '   ' → logprob: -13.654966354370117
    9. ')<' → logprob: -15.154966354370117
    10. ')>' → logprob: -15.779966354370117

Token 481: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008940708357840776
    2. '        
' → logprob: -7.375894069671631
    3. '
' → logprob: -8.625894546508789
    4. '<|end|>' → logprob: -10.375894546508789
    5. ' if' → logprob: -11.375894546508789
    6. '           ' → logprob: -11.625894546508789
    7. '   ' → logprob: -12.250894546508789
    8. ' 
' → logprob: -12.250894546508789
    9. '  
' → logprob: -12.500894546508789
    10. '       
' → logprob: -12.875894546508789

Token 482: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4313168525695801
    2. ' if' → logprob: -1.30631685256958
    3. 'if' → logprob: -2.55631685256958
    4. '
' → logprob: -6.93131685256958
    5. ' minimum' → logprob: -8.306316375732422
    6. '        
' → logprob: -8.806316375732422
    7. ' overlap' → logprob: -9.306316375732422
    8. '#' (adapté à ' #') → logprob: -9.681316375732422
    9. 'minimum' → logprob: -9.806316375732422
    10. ' max' → logprob: -10.181316375732422

Token 483: ' La' (ID: 3038)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14572317898273468
    2. ' if' → logprob: -2.0207231044769287
    3. ' overlap' → logprob: -7.145723342895508
    4. '       ' → logprob: -7.645723342895508
    5. '   ' → logprob: -8.145723342895508
    6. 'safe' → logprob: -8.395723342895508
    7. 'effective' → logprob: -8.520723342895508
    8. 'min' → logprob: -8.895723342895508
    9. ' effective' → logprob: -8.895723342895508
    10. 'threshold' → logprob: -8.895723342895508

Token 484: ' moitié' (ID: 93216)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.22908160090446472
    2. ' if' → logprob: -1.604081630706787
    3. '   ' → logprob: -7.229081630706787
    4. 'f' → logprob: -7.354081630706787
    5. '       ' → logprob: -7.854081630706787
    6. ' safe' → logprob: -8.479081153869629
    7. 'safe' → logprob: -8.604081153869629
    8. 'reshold' → logprob: -8.729081153869629
    9. 'min' → logprob: -8.854081153869629
    10. ' ' → logprob: -9.104081153869629

Token 485: ' de' (ID: 334)
  Prédit: ' thickness'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' thickness' → logprob: -0.4247530698776245
    2. 'th' → logprob: -1.2997530698776245
    3. '_th' → logprob: -3.049753189086914
    4. ' th' → logprob: -4.799753189086914
    5. ' thick' → logprob: -5.299753189086914
    6. ' =' → logprob: -5.924753189086914
    7. ' de' → logprob: -6.424753189086914
    8. ' (' → logprob: -6.549753189086914
    9. '(th' → logprob: -6.674753189086914
    10. ' of' → logprob: -6.924753189086914

Token 486: ' l' (ID: 305)
  Prédit: 'th'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'th' → logprob: -0.11584430932998657
    2. ' thickness' → logprob: -2.240844249725342
    3. '(th' → logprob: -5.865844249725342
    4. ' (' → logprob: -10.2408447265625
    5. ' th' → logprob: -10.4908447265625
    6. '(' → logprob: -10.7408447265625
    7. '	th' → logprob: -10.8658447265625
    8. ' thick' → logprob: -11.1158447265625
    9. '<th' → logprob: -11.4908447265625
    10. 'threshold' → logprob: -11.6158447265625

Token 487: ''ép' (ID: 131699)
  Prédit: ' thickness'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' thickness' → logprob: -0.3408530652523041
    2. ''ép' → logprob: -1.3408530950546265
    3. 'ép' → logprob: -4.840853214263916
    4. 'ep' → logprob: -4.840853214263916
    5. 'th' → logprob: -5.340853214263916
    6. 'e' → logprob: -6.590853214263916
    7. ' ép' → logprob: -6.590853214263916
    8. ' thick' → logprob: -7.090853214263916
    9. 'a' → logprob: -7.090853214263916
    10. '’ép' → logprob: -7.215853214263916

Token 488: 'aisseur' (ID: 168122)
  Prédit: 'aisseur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aisseur' → logprob: -0.00067966926144436
    2. 'aisse' → logprob: -7.5006794929504395
    3. 'a' → logprob: -10.000679969787598
    4. 'ais' → logprob: -10.625679969787598
    5. '
' → logprob: -10.625679969787598
    6. 'aisser' → logprob: -11.500679969787598
    7. '```' → logprob: -11.875679969787598
    8. 'esseur' → logprob: -13.250679969787598
    9. '{
' → logprob: -13.500679969787598
    10. 'isseur' → logprob: -13.500679969787598

Token 489: ' de' (ID: 334)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07990963757038116
    2. ' /' → logprob: -2.954909563064575
    3. '+' → logprob: -4.329909801483154
    4. 'th' → logprob: -5.329909801483154
    5. '/' → logprob: -5.579909801483154
    6. ' plus' → logprob: -6.454909801483154
    7. '   ' → logprob: -8.329909324645996
    8. '_th' → logprob: -8.454909324645996
    9. ' ' → logprob: -9.079909324645996
    10. ' thickness' → logprob: -9.329909324645996

Token 490: ' laser' (ID: 23429)
  Prédit: 'th'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'th' → logprob: -0.05510636046528816
    2. ' thickness' → logprob: -2.9301064014434814
    3. 'the' → logprob: -8.805106163024902
    4. ' thick' → logprob: -10.430106163024902
    5. ' the' → logprob: -11.055106163024902
    6. ' th' → logprob: -11.805106163024902
    7. ' ' → logprob: -12.555106163024902
    8. '	th' → logprob: -12.680106163024902
    9. 'Thickness' → logprob: -12.805106163024902
    10. '<th' → logprob: -13.305106163024902

Token 491: '
' (ID: 198)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.801573634147644
    2. ' /' → logprob: -0.801573634147644
    3. '/' → logprob: -2.8015737533569336
    4. '+' → logprob: -3.8015737533569336
    5. ' >=' → logprob: -4.676573753356934
    6. ' >' → logprob: -5.801573753356934
    7. '>' → logprob: -6.301573753356934
    8. ' ' → logprob: -6.676573753356934
    9. ' <=' → logprob: -6.801573753356934
    10. '>=' → logprob: -7.551573753356934

Token 492: '       ' (ID: 309)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07822791486978531
    2. ' /' → logprob: -3.578227996826172
    3. '+' → logprob: -3.828227996826172
    4. '       ' → logprob: -4.203227996826172
    5. '/' → logprob: -5.453227996826172
    6. ' plus' → logprob: -6.328227996826172
    7. ' >=' → logprob: -6.578227996826172
    8. '        ' → logprob: -7.203227996826172
    9. ' =' → logprob: -8.078227996826172
    10. ' +=' → logprob: -8.203227996826172

Token 493: ' half' (ID: 6375)
  Prédit: ' thickness'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' thickness' → logprob: -0.18951331079006195
    2. ' half' → logprob: -2.1895132064819336
    3. 'th' → logprob: -3.5645132064819336
    4. 'half' (adapté à ' half') → logprob: -3.5645132064819336
    5. ' th' → logprob: -6.689513206481934
    6. ' thick' → logprob: -7.189513206481934
    7. ' laser' → logprob: -7.439513206481934
    8. 't' → logprob: -8.064513206481934
    9. ' effective' → logprob: -8.439513206481934
    10. ' t' → logprob: -9.064513206481934

Token 494: '_th' (ID: 16038)
  Prédit: '_th'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_th' → logprob: -5.44312788406387e-05
    2. ' =' → logprob: -10.750054359436035
    3. '_' → logprob: -11.250054359436035
    4. 'th' → logprob: -12.125054359436035
    5. ' thickness' → logprob: -12.875054359436035
    6. '_width' → logprob: -12.875054359436035
    7. '	th' → logprob: -12.875054359436035
    8. '_t' → logprob: -13.500054359436035
    9. 'Thickness' → logprob: -13.625054359436035
    10. '_thr' → logprob: -13.875054359436035

Token 495: 'ick' (ID: 1003)
  Prédit: 'ickness'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ickness' → logprob: -0.029753148555755615
    2. 'ick' → logprob: -3.5297532081604004
    3. ' ' → logprob: -14.279752731323242
    4. 'ck' → logprob: -14.404752731323242
    5. 'icks' → logprob: -14.779752731323242
    6. '
' → logprob: -15.154752731323242
    7. 'ic' → logprob: -15.154752731323242
    8. 'i' → logprob: -16.404752731323242
    9. 'e' → logprob: -16.404752731323242
    10. ' =' → logprob: -16.654752731323242

Token 496: ' =' (ID: 314)
  Prédit: 'ness'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ness' → logprob: -0.5658383965492249
    2. '=' → logprob: -1.44083833694458
    3. ' =' → logprob: -2.06583833694458
    4. 'k' → logprob: -2.69083833694458
    5. 'n' → logprob: -7.94083833694458
    6. 'ess' → logprob: -8.690838813781738
    7. '   ' → logprob: -9.565838813781738
    8. ' ' → logprob: -10.065838813781738
    9. '_k' → logprob: -10.190838813781738
    10. '```' → logprob: -10.690838813781738

Token 497: ' thickness' (ID: 38833)
  Prédit: 'th'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'th' → logprob: -0.20145446062088013
    2. ' thickness' → logprob: -1.7014544010162354
    3. '   ' → logprob: -11.576454162597656
    4. '0' → logprob: -11.576454162597656
    5. ' ' → logprob: -11.826454162597656
    6. '	th' → logprob: -12.451454162597656
    7. ' thick' → logprob: -12.951454162597656
    8. 'threshold' → logprob: -13.076454162597656
    9. '(th' → logprob: -13.326454162597656
    10. 'Thickness' → logprob: -13.576454162597656

Token 498: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.575946033000946
    2. '/' → logprob: -0.825946033000946
    3. ' ' → logprob: -12.825945854187012
    4. ' ' → logprob: -13.325945854187012
    5. '   ' → logprob: -13.575945854187012
    6. '*' → logprob: -14.700945854187012
    7. ' *' → logprob: -15.825945854187012
    8. '2' → logprob: -15.950945854187012
    9. ')' → logprob: -16.325946807861328
    10. '  ' → logprob: -16.825946807861328

Token 499: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002805110299959779
    2. ' ' → logprob: -5.877805233001709
    3. '```' → logprob: -16.252805709838867
    4. '   ' → logprob: -17.002805709838867
    5. '  ' → logprob: -17.815305709838867
    6. '２' → logprob: -18.377805709838867
    7. '200' → logprob: -18.440305709838867
    8. '20' → logprob: -18.565305709838867
    9. '۲' → logprob: -18.565305709838867
    10. '=' → logprob: -18.752805709838867

Token 500: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00023071514442563057
    2. ' ' → logprob: -8.37523078918457
    3. '   ' → logprob: -16.75023078918457
    4. '```' → logprob: -17.56273078918457
    5. '  ' → logprob: -17.68773078918457
    6. '(' → logprob: -17.87523078918457
    7. '200' → logprob: -18.31273078918457
    8. '
' → logprob: -18.56273078918457
    9. '3' → logprob: -18.93773078918457
    10. '20' → logprob: -19.06273078918457

Token 501: '.' (ID: 13)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06334242969751358
    2. '
' → logprob: -2.938342332839966
    3. '<|end|>' → logprob: -4.938342571258545
    4. '        
' → logprob: -7.688342571258545
    5. ' 
' → logprob: -8.563342094421387
    6. '
' → logprob: -8.813342094421387
    7. '<|end|>' → logprob: -9.438342094421387
    8. ',' → logprob: -9.563342094421387
    9. ' if' → logprob: -9.688342094421387
    10. '  
' → logprob: -10.063342094421387

Token 502: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.5649528298527e-05
    2. ' ' → logprob: -9.500075340270996
    3. ' 
' → logprob: -15.000075340270996
    4. '
' → logprob: -16.625076293945312
    5. '```' → logprob: -16.625076293945312
    6. ',' → logprob: -17.125076293945312
    7. '  ' → logprob: -17.500076293945312
    8. '6' → logprob: -17.500076293945312
    9. '  
' → logprob: -17.625076293945312
    10. ')' → logprob: -18.125076293945312

Token 503: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24172274768352509
    2. '
' → logprob: -1.6167227029800415
    3. '<|end|>' → logprob: -4.491722583770752
    4. '        
' → logprob: -6.116722583770752
    5. ' if' → logprob: -6.991722583770752
    6. '  
' → logprob: -7.366722583770752
    7. ' 
' → logprob: -7.991722583770752
    8. 'if' → logprob: -8.74172306060791
    9. '   ' → logprob: -8.86672306060791
    10. ',' → logprob: -8.99172306060791

Token 504: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004288284108042717
    2. '
' → logprob: -5.879288196563721
    3. '        
' → logprob: -6.754288196563721
    4. ' if' → logprob: -9.504288673400879
    5. '<|end|>' → logprob: -9.504288673400879
    6. '  
' → logprob: -10.254288673400879
    7. 'if' → logprob: -10.379288673400879
    8. ' 
' → logprob: -10.754288673400879
    9. '   ' → logprob: -10.754288673400879
    10. ',' → logprob: -11.504288673400879

Token 505: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33736321330070496
    2. 'if' → logprob: -1.9623632431030273
    3. ' if' → logprob: -1.9623632431030273
    4. '
' → logprob: -5.337363243103027
    5. '        
' → logprob: -7.837363243103027
    6. '   ' → logprob: -10.587363243103027
    7. '
' → logprob: -11.712363243103027
    8. '#' (adapté à ' #') → logprob: -11.962363243103027
    9. '           ' → logprob: -12.212363243103027
    10. 'distance' → logprob: -12.337363243103027

Token 506: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04952513054013252
    2. 'min' → logprob: -3.674525022506714
    3. ' if' → logprob: -4.299525260925293
    4. '       ' → logprob: -6.049525260925293
    5. '   ' → logprob: -6.549525260925293
    6. 'effective' → logprob: -6.799525260925293
    7. 'total' → logprob: -7.049525260925293
    8. '#' → logprob: -7.424525260925293
    9. 'over' → logprob: -7.424525260925293
    10. ' min' → logprob: -7.424525260925293

Token 507: ' les' (ID: 1341)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.08911994844675064
    2. 'dist' → logprob: -2.4641199111938477
    3. '(dist' → logprob: -8.964119911193848
    4. ' (' → logprob: -10.464119911193848
    5. ' radius' → logprob: -11.964119911193848
    6. '	dist' → logprob: -12.214119911193848
    7. '(' → logprob: -12.839119911193848
    8. '   ' → logprob: -12.964119911193848
    9. 'radius' → logprob: -13.089119911193848
    10. ' ' → logprob: -13.214119911193848

Token 508: ' deux' (ID: 10301)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.22646139562129974
    2. ' dist' → logprob: -1.601461410522461
    3. 'radius' → logprob: -7.726461410522461
    4. '(dist' → logprob: -7.851461410522461
    5. ' radius' → logprob: -9.226461410522461
    6. ' (' → logprob: -10.851461410522461
    7. '	dist' → logprob: -11.101461410522461
    8. '   ' → logprob: -11.101461410522461
    9. 'distance' → logprob: -11.226461410522461
    10. ' ' → logprob: -11.226461410522461

Token 509: ' dis' (ID: 829)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.2035890817642212
    2. 'dis' → logprob: -1.9535890817642212
    3. 'radius' → logprob: -1.9535890817642212
    4. 'r' → logprob: -2.3285889625549316
    5. ' distances' → logprob: -2.5785889625549316
    6. ' dist' → logprob: -2.5785889625549316
    7. ' radi' → logprob: -3.8285889625549316
    8. ' radius' → logprob: -3.9535889625549316
    9. 's' → logprob: -4.078588962554932
    10. '-' → logprob: -4.203588962554932

Token 510: 'ques' (ID: 3531)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -6.539801688631997e-05
    2. 'tan' → logprob: -10.375065803527832
    3. ' t' → logprob: -10.500065803527832
    4. 'tant' → logprob: -13.500065803527832
    5. '<t' → logprob: -13.500065803527832
    6. 'ct' → logprob: -14.625065803527832
    7. '>' → logprob: -14.875065803527832
    8. 'stances' → logprob: -15.000065803527832
    9. '	t' → logprob: -15.125065803527832
    10. '\t' → logprob: -15.250065803527832

Token 511: ' se' (ID: 458)
  Prédit: ' se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' se' → logprob: -0.36767664551734924
    2. 'se' → logprob: -2.3676767349243164
    3. ' overlap' → logprob: -2.6176767349243164
    4. 'over' → logprob: -2.9926767349243164
    5. ' ont' → logprob: -4.617676734924316
    6. ' overl' → logprob: -4.992676734924316
    7. ',' → logprob: -5.242676734924316
    8. ' chev' → logprob: -5.242676734924316
    9. ' sont' → logprob: -5.367676734924316
    10. 'radius' → logprob: -5.367676734924316

Token 512: ' chev' (ID: 127415)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.42025917768478394
    2. 'che' → logprob: -1.6702592372894287
    3. ' touch' → logprob: -2.5452592372894287
    4. ' chev' → logprob: -3.1702592372894287
    5. ' rec' → logprob: -4.92025899887085
    6. 'c' → logprob: -5.04525899887085
    7. 'super' → logprob: -5.17025899887085
    8. 'over' → logprob: -5.54525899887085
    9. 's' → logprob: -5.79525899887085
    10. 't' → logprob: -6.17025899887085

Token 513: 'auch' (ID: 47120)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.13301771879196167
    2. 'roch' → logprob: -3.3830177783966064
    3. 'rent' → logprob: -4.008017539978027
    4. 'auch' → logprob: -4.133017539978027
    5. 'rch' → logprob: -4.383017539978027
    6. 'ront' → logprob: -4.758017539978027
    7. 'urent' → logprob: -5.133017539978027
    8. 'rou' → logprob: -5.508017539978027
    9. 'rus' → logprob: -5.633017539978027
    10. 'ror' → logprob: -6.258017539978027

Token 514: 'ent' (ID: 299)
  Prédit: 'ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.00042102107545360923
    2. 'nt' → logprob: -9.250420570373535
    3. 'e' → logprob: -9.750420570373535
    4. 'lent' → logprob: -9.750420570373535
    5. ' ent' → logprob: -10.250420570373535
    6. 'ment' → logprob: -10.250420570373535
    7. 'chent' → logprob: -10.875420570373535
    8. 'nent' → logprob: -11.000420570373535
    9. 'sent' → logprob: -11.000420570373535
    10. 'ont' → logprob: -11.000420570373535

Token 515: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.44190189242362976
    2. '       ' → logprob: -1.3169019222259521
    3. 'and' → logprob: -3.566901922225952
    4. ':' → logprob: -3.691901922225952
    5. ' or' → logprob: -4.191901683807373
    6. ',' → logprob: -4.441901683807373
    7. ' if' → logprob: -4.941901683807373
    8. 'if' → logprob: -6.941901683807373
    9. ' :' → logprob: -8.816902160644531
    10. '   ' → logprob: -8.816902160644531

Token 516: 'ray' (ID: 25430)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.26258108019828796
    2. ' dist' → logprob: -1.5125811100006104
    3. 'radius' → logprob: -4.887580871582031
    4. ' radius' → logprob: -6.012580871582031
    5. '   ' → logprob: -8.637580871582031
    6. ')' → logprob: -9.137580871582031
    7. '(dist' → logprob: -9.137580871582031
    8. '	dist' → logprob: -10.012580871582031
    9. 'distance' → logprob: -10.637580871582031
    10. '       ' → logprob: -11.012580871582031

Token 517: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.02349807694554329
    2. 'adius' → logprob: -5.023498058319092
    3. 'ons' → logprob: -5.148498058319092
    4. '>' → logprob: -5.898498058319092
    5. 'di' → logprob: -6.273498058319092
    6. 'radius' → logprob: -6.648498058319092
    7. '   ' → logprob: -7.148498058319092
    8. 'ad' → logprob: -7.523498058319092
    9. '  ' → logprob: -7.648498058319092
    10. ' >' → logprob: -7.773498058319092

Token 518: ' machine' (ID: 7342)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.04317332059144974
    2. '+' → logprob: -3.168173313140869
    3. ' ' → logprob: -10.293173789978027
    4. ')' → logprob: -10.418173789978027
    5. '>' → logprob: -10.543173789978027
    6. ' >' → logprob: -10.668173789978027
    7. ' plus' → logprob: -11.043173789978027
    8. ' >=' → logprob: -11.293173789978027
    9. 'radius' → logprob: -11.793173789978027
    10. '   ' → logprob: -12.293173789978027

Token 519: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.043094079941511154
    2. '+' → logprob: -3.1680941581726074
    3. '>' → logprob: -10.29309368133545
    4. ' >' → logprob: -10.41809368133545
    5. ' plus' → logprob: -11.41809368133545
    6. ' ' → logprob: -11.91809368133545
    7. ')' → logprob: -12.04309368133545
    8. '   ' → logprob: -13.54309368133545
    9. ' >=' → logprob: -13.54309368133545
    10. '       ' → logprob: -13.79309368133545

Token 520: ' demi' (ID: 61771)
  Prédit: 'radius'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'radius' → logprob: -0.5157449245452881
    2. 'half' → logprob: -1.515744924545288
    3. ' half' → logprob: -2.390744924545288
    4. ' radius' → logprob: -2.390744924545288
    5. 'ray' → logprob: -10.390745162963867
    6. ')' → logprob: -10.578245162963867
    7. ' ' → logprob: -11.015745162963867
    8. '(radius' → logprob: -11.703245162963867
    9. '```' → logprob: -11.828245162963867
    10. 'r' → logprob: -11.890745162963867

Token 521: ' ép' (ID: 19960)
  Prédit: 'th'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'th' → logprob: -0.32240554690361023
    2. '_th' → logprob: -1.5724055767059326
    3. ' thickness' → logprob: -2.9474055767059326
    4. 'radius' → logprob: -4.8224053382873535
    5. ' thick' → logprob: -5.8224053382873535
    6. '
' → logprob: -6.4474053382873535
    7. '	th' → logprob: -8.197405815124512
    8. 'half' → logprob: -8.322405815124512
    9. '<th' → logprob: -8.322405815124512
    10. '-th' → logprob: -8.447405815124512

Token 522: 'aisseur' (ID: 168122)
  Prédit: 'aisseur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aisseur' → logprob: -0.07028329372406006
    2. 'aisse' → logprob: -3.1952834129333496
    3. 'ais' → logprob: -3.8202834129333496
    4. 'a' → logprob: -5.82028341293335
    5. '
' → logprob: -7.57028341293335
    6. '```' → logprob: -8.320282936096191
    7. 'aisser' → logprob: -8.695282936096191
    8. 'aise' → logprob: -8.945282936096191
    9. '   ' → logprob: -9.070282936096191
    10. 'ai' → logprob: -9.320282936096191

Token 523: ' laser' (ID: 23429)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.5496968626976013
    2. ' >' → logprob: -1.674696922302246
    3. ')' → logprob: -2.424696922302246
    4. ' +' → logprob: -2.674696922302246
    5. '>' → logprob: -3.424696922302246
    6. '>=' → logprob: -3.674696922302246
    7. ')>=' → logprob: -4.924696922302246
    8. '+' → logprob: -5.424696922302246
    9. ')>' → logprob: -6.049696922302246
    10. 'radius' → logprob: -6.299696922302246

Token 524: ' >' (ID: 1424)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5992739796638489
    2. ' >=' → logprob: -1.849273920059204
    3. ' >' → logprob: -1.849273920059204
    4. '>' → logprob: -2.474273920059204
    5. '>=' → logprob: -3.349273920059204
    6. ' )' → logprob: -4.849274158477783
    7. ')>' → logprob: -5.474274158477783
    8. ')>=' → logprob: -5.474274158477783
    9. ' ' → logprob: -8.724273681640625
    10. '+' → logprob: -9.599273681640625

Token 525: ' distance' (ID: 9324)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.31331494450569153
    2. ' dist' → logprob: -1.3133149147033691
    3. ')' → logprob: -10.813315391540527
    4. '	dist' → logprob: -11.313315391540527
    5. '(dist' → logprob: -11.438315391540527
    6. 'distance' → logprob: -12.813315391540527
    7. '_dist' → logprob: -13.438315391540527
    8. ' ' → logprob: -13.438315391540527
    9. '
' → logprob: -13.938315391540527
    10. ' )' → logprob: -14.063315391540527

Token 526: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5103014707565308
    2. ' -' → logprob: -1.2603014707565308
    3. ')' → logprob: -3.2603015899658203
    4. ' ):' → logprob: -3.6353015899658203
    5. ' +' → logprob: -4.63530158996582
    6. '):
' → logprob: -5.01030158996582
    7. '),' → logprob: -5.01030158996582
    8. ' ' → logprob: -5.13530158996582
    9. '-' → logprob: -5.38530158996582
    10. ' )' → logprob: -5.63530158996582

Token 527: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006056951242499053
    2. ',' → logprob: -8.500605583190918
    3. ' and' → logprob: -8.625605583190918
    4. ':' → logprob: -9.375605583190918
    5. ' if' → logprob: -10.750605583190918
    6. 'and' → logprob: -11.000605583190918
    7. ' or' → logprob: -11.250605583190918
    8. '<|end|>' → logprob: -11.250605583190918
    9. '           ' → logprob: -11.375605583190918
    10. '      ' → logprob: -11.500605583190918

Token 528: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.9026633501052856
    2. ' if' → logprob: -1.1526633501052856
    3. '       ' → logprob: -1.2776633501052856
    4. '   ' → logprob: -11.527663230895996
    5. ' ' → logprob: -11.777663230895996
    6. '	if' → logprob: -12.402663230895996
    7. '           ' → logprob: -13.402663230895996
    8. '      ' → logprob: -13.402663230895996
    9. 'If' → logprob: -14.027663230895996
    10. '  ' → logprob: -14.527663230895996

Token 529: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.7307617664337158
    2. 'radius' → logprob: -1.1057617664337158
    3. ' dist' → logprob: -2.230761766433716
    4. ' radius' → logprob: -2.605761766433716
    5. '(radius' → logprob: -5.605761528015137
    6. '(dist' → logprob: -6.480761528015137
    7. ' (' → logprob: -8.105761528015137
    8. '   ' → logprob: -8.480761528015137
    9. 'distance' → logprob: -8.730761528015137
    10. '	dist' → logprob: -9.730761528015137

Token 530: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.15231283009052277
    2. ' <=' → logprob: -2.527312755584717
    3. '<' → logprob: -3.027312755584717
    4. '<=' → logprob: -4.402312755584717
    5. ' ' → logprob: -7.277312755584717
    6. '=' → logprob: -12.652313232421875
    7. ' ' → logprob: -12.777313232421875
    8. '<|end|>' → logprob: -12.777313232421875
    9. ' <
' → logprob: -13.277313232421875
    10. '  ' → logprob: -13.277313232421875

Token 531: ' radius' (ID: 21090)
  Prédit: ' radius'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' radius' → logprob: -0.06212834268808365
    2. 'radius' → logprob: -2.8121283054351807
    3. '(radius' → logprob: -9.062128067016602
    4. ' (' → logprob: -10.187128067016602
    5. ' half' → logprob: -12.812128067016602
    6. ' ' → logprob: -13.562128067016602
    7. ' radi' → logprob: -14.187128067016602
    8. 'r' → logprob: -14.812128067016602
    9. 'radi' → logprob: -15.312128067016602
    10. 'half' → logprob: -15.312128067016602

Token 532: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.011048170737922192
    2. '+' → logprob: -4.511048316955566
    3. ' ' → logprob: -15.136048316955566
    4. ' ' → logprob: -17.13604736328125
    5. ' plus' → logprob: -17.63604736328125
    6. ' +
' → logprob: -18.63604736328125
    7. '   ' → logprob: -19.76104736328125
    8. '＋' → logprob: -20.13604736328125
    9. '+
' → logprob: -20.88604736328125
    10. '  ' → logprob: -21.01104736328125

Token 533: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.001170225441455841
    2. ' half' → logprob: -6.7511701583862305
    3. '
' → logprob: -17.376171112060547
    4. '_half' → logprob: -17.876171112060547
    5. 'hal' → logprob: -18.251171112060547
    6. ' ' → logprob: -18.501171112060547
    7. '   ' → logprob: -18.876171112060547
    8. '0' → logprob: -20.251171112060547
    9. ' ' → logprob: -20.376171112060547
    10. 'Half' → logprob: -20.376171112060547

Token 534: '_th' (ID: 16038)
  Prédit: '_th'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_th' → logprob: -9.088346359931165e-07
    2. '_' → logprob: -14.500000953674316
    3. ' _' → logprob: -15.375000953674316
    4. 'th' → logprob: -15.875000953674316
    5. '_
' → logprob: -18.875
    6. '_TH' → logprob: -20.0
    7. '\' → logprob: -20.0
    8. '_t' → logprob: -20.375
    9. '
' → logprob: -20.625
    10. '_the' → logprob: -20.625

Token 535: 'ick' (ID: 1003)
  Prédit: 'ick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ick' → logprob: -1.1398757123970427e-05
    2. 'ickness' → logprob: -12.750011444091797
    3. ' ' → logprob: -13.000011444091797
    4. 'ic' → logprob: -13.250011444091797
    5. 'ck' → logprob: -13.875011444091797
    6. '
' → logprob: -14.625011444091797
    7. '_' → logprob: -14.875011444091797
    8. 'ich' → logprob: -15.000011444091797
    9. 'icks' → logprob: -15.250011444091797
    10. 'i' → logprob: -15.250011444091797

Token 536: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03025093302130699
    2. ':
' → logprob: -3.5302510261535645
    3. ':return' → logprob: -7.6552510261535645
    4. ' :' → logprob: -11.405250549316406
    5. '       ' → logprob: -11.655250549316406
    6. ':
' → logprob: -12.905250549316406
    7. ' :
' → logprob: -12.905250549316406
    8. '           ' → logprob: -14.280250549316406
    9. '   ' → logprob: -14.905250549316406
    10. ':

' → logprob: -15.155250549316406

Token 537: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0182266216725111
    2. ' ' → logprob: -4.018226623535156
    3. '0' → logprob: -10.268226623535156
    4. 'sys' → logprob: -10.518226623535156
    5. '   ' → logprob: -12.018226623535156
    6. ' sys' → logprob: -12.143226623535156
    7. '  ' → logprob: -13.268226623535156
    8. '10' → logprob: -15.393226623535156
    9. '=sys' → logprob: -15.393226623535156
    10. '```' → logprob: -15.768226623535156

Token 538: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018780550453811884
    2. ' ' → logprob: -8.625187873840332
    3. '0' → logprob: -12.000187873840332
    4. 'sys' → logprob: -13.625187873840332
    5. '   ' → logprob: -14.625187873840332
    6. '10' → logprob: -16.875186920166016
    7. '  ' → logprob: -17.000186920166016
    8. ' sys' → logprob: -17.125186920166016
    9. '```' → logprob: -17.250186920166016
    10. '=' → logprob: -17.875186920166016

Token 539: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -5.32392441527918e-05
    2. 'E' → logprob: -11.000053405761719
    3. ':' → logprob: -11.375053405761719
    4. '.' → logprob: -11.625053405761719
    5. '.e' → logprob: -11.625053405761719
    6. ':
' → logprob: -12.625053405761719
    7. ' ' → logprob: -13.625053405761719
    8. '0' → logprob: -14.000053405761719
    9. '1' → logprob: -14.250053405761719
    10. ' e' → logprob: -15.375053405761719

Token 540: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2810964286327362
    2. '9' → logprob: -1.5310964584350586
    3. '8' → logprob: -4.031096458435059
    4. '10' → logprob: -5.406096458435059
    5. '6' → logprob: -5.781096458435059
    6. '7' → logprob: -5.906096458435059
    7. '12' → logprob: -7.406096458435059
    8. '09' → logprob: -9.906096458435059
    9. '```' → logprob: -11.656096458435059
    10. '08' → logprob: -11.906096458435059

Token 541: '12' (ID: 899)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.04424558952450752
    2. '8' → logprob: -4.169245719909668
    3. '12' → logprob: -4.794245719909668
    4. '10' → logprob: -4.794245719909668
    5. '6' → logprob: -4.919245719909668
    6. '7' → logprob: -5.544245719909668
    7. '09' → logprob: -10.919245719909668
    8. '5' → logprob: -11.169245719909668
    9. '14' → logprob: -11.794245719909668
    10. '15' → logprob: -13.106745719909668

Token 542: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009366204030811787
    2. ':
' → logprob: -4.759366035461426
    3. '       ' → logprob: -8.134366035461426
    4. ':return' → logprob: -8.134366035461426
    5. '           ' → logprob: -9.009366035461426
    6. ' :' → logprob: -10.509366035461426
    7. ':
' → logprob: -11.884366035461426
    8. '):' → logprob: -12.759366035461426
    9. ' :
' → logprob: -13.384366035461426
    10. '   ' → logprob: -13.884366035461426

Token 543: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001272854395210743
    2. '
' → logprob: -6.751272678375244
    3. 'return' → logprob: -10.001273155212402
    4. ' return' → logprob: -10.501273155212402
    5. '       ' → logprob: -11.376273155212402
    6. '               ' → logprob: -11.626273155212402
    7. '            
' → logprob: -12.501273155212402
    8. '          ' → logprob: -13.501273155212402
    9. ' continue' → logprob: -13.876273155212402
    10. 'continue' → logprob: -14.376273155212402

Token 544: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.39930421113967896
    2. 'return' (adapté à ' return') → logprob: -1.1493041515350342
    3. ' return' → logprob: -4.399304389953613
    4. '
' → logprob: -10.149304389953613
    5. '               ' → logprob: -11.024304389953613
    6. '       ' → logprob: -11.399304389953613
    7. '   ' → logprob: -13.274304389953613
    8. '          ' → logprob: -14.274304389953613
    9. '	return' → logprob: -14.899304389953613
    10. '{return' → logprob: -15.399304389953613

Token 545: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.12692810595035553
    2. ' False' → logprob: -2.1269280910491943
    3. '(False' → logprob: -19.126928329467773
    4. 'True' → logprob: -20.376928329467773
    5. '=False' → logprob: -20.876928329467773
    6. ' True' → logprob: -21.501928329467773
    7. 'false' → logprob: -22.251928329467773
    8. 'F' → logprob: -22.376928329467773
    9. '_false' → logprob: -22.751928329467773
    10. '
' → logprob: -23.251928329467773

Token 546: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20202629268169403
    2. '
' → logprob: -1.8270262479782104
    3. '    
' → logprob: -3.9520263671875
    4. ' return' → logprob: -7.4520263671875
    5. '  
' → logprob: -7.4520263671875
    6. ' 
' → logprob: -7.4520263671875
    7. 'return' → logprob: -8.2020263671875
    8. '\n' → logprob: -8.3270263671875
    9. '   
' → logprob: -8.5770263671875
    10. '        
' → logprob: -9.0770263671875

Token 547: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014679614687338471
    2. '
' → logprob: -7.001468181610107
    3. '    
' → logprob: -8.12646770477295
    4. ' return' → logprob: -9.00146770477295
    5. 'return' → logprob: -9.50146770477295
    6. '	return' → logprob: -11.00146770477295
    7. '  
' → logprob: -11.87646770477295
    8. ' 
' → logprob: -11.87646770477295
    9. '       ' → logprob: -12.00146770477295
    10. '        
' → logprob: -12.62646770477295

Token 548: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.16477979719638824
    2. ' return' → logprob: -2.5397799015045166
    3. '   ' → logprob: -2.6647799015045166
    4. '
' → logprob: -5.7897796630859375
    5. ' ' → logprob: -8.414779663085938
    6. '    
' → logprob: -9.914779663085938
    7. '	return' → logprob: -10.414779663085938
    8. '  ' → logprob: -10.914779663085938
    9. 'eturn' → logprob: -11.289779663085938
    10. '  
' → logprob: -11.789779663085938

Token 549: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.10020667314529419
    2. ' True' → logprob: -2.3502066135406494
    3. '(True' → logprob: -18.72520637512207
    4. '=True' → logprob: -20.60020637512207
    5. ' ' → logprob: -21.60020637512207
    6. '   ' → logprob: -22.35020637512207
    7. 'False' → logprob: -23.10020637512207
    8. 'true' → logprob: -23.10020637512207
    9. '_true' → logprob: -23.60020637512207
    10. '.True' → logprob: -23.72520637512207

Token 550: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 551: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0026332074776291847
    2. '#' → logprob: -6.002633094787598
    3. '<|end|>' → logprob: -8.877633094787598
    4. 'import' → logprob: -11.627633094787598
    5. '```' → logprob: -12.252633094787598
    6. ' def' → logprob: -13.502633094787598
    7. '<|end|>' → logprob: -13.752633094787598
    8. '
' → logprob: -14.127633094787598
    9. 'de' → logprob: -15.502633094787598
    10. 'ndef' → logprob: -15.627633094787598

Token 552: ' solve' (ID: 17722)
  Prédit: ' place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' place' → logprob: -0.5514270067214966
    2. ' find' → logprob: -1.5514270067214966
    3. ' main' → logprob: -1.9264270067214966
    4. ' safe' → logprob: -3.301426887512207
    5. ' check' → logprob: -4.676426887512207
    6. ' can' → logprob: -4.926426887512207
    7. 'place' → logprob: -6.051426887512207
    8. ' is' → logprob: -6.426426887512207
    9. ' generate' → logprob: -6.676426887512207
    10. ' plan' → logprob: -6.801426887512207

Token 553: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.13180318474769592
    2. '()' → logprob: -2.881803274154663
    3. '(' → logprob: -3.631803274154663
    4. ' ()' → logprob: -4.256803035736084
    5. ' (' → logprob: -4.631803035736084
    6. '(px' → logprob: -4.631803035736084
    7. ' ():' → logprob: -5.881803035736084
    8. '(p' → logprob: -6.756803035736084
    9. '(x' → logprob: -7.381803035736084
    10. '(points' → logprob: -7.506803035736084

Token 554: '   ' (ID: 271)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6463633179664612
    2. ' n' → logprob: -1.2713632583618164
    3. '   ' → logprob: -1.7713632583618164
    4. ' line' → logprob: -4.521363258361816
    5. ' import' → logprob: -4.896363258361816
    6. ' readline' → logprob: -5.896363258361816
    7. 'n' → logprob: -6.146363258361816
    8. 'input' → logprob: -7.271363258361816
    9. ' inputs' → logprob: -7.646363258361816
    10. ' lines' → logprob: -7.771363258361816

Token 555: ' input' (ID: 3422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2530544698238373
    2. '   ' → logprob: -1.8780544996261597
    3. ' n' → logprob: -3.37805438041687
    4. ' input' → logprob: -4.253054618835449
    5. 'input' (adapté à ' input') → logprob: -4.378054618835449
    6. 'import' → logprob: -5.378054618835449
    7. 't' → logprob: -5.878054618835449
    8. 'T' → logprob: -7.253054618835449
    9. 'N' → logprob: -7.378054618835449
    10. ' import' → logprob: -7.628054618835449

Token 556: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2648809552192688
    2. '_line' → logprob: -1.514880895614624
    3. '_' → logprob: -4.889881134033203
    4. '_data' → logprob: -5.514881134033203
    5. '_lines' → logprob: -7.389881134033203
    6. '().' → logprob: -8.514881134033203
    7. 'line' → logprob: -9.139881134033203
    8. '(' → logprob: -9.514881134033203
    9. ' =' → logprob: -9.764881134033203
    10. '=' → logprob: -9.889881134033203

Token 557: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.10020774602890015
    2. ' sys' → logprob: -2.350207805633545
    3. '	sys' → logprob: -14.225207328796387
    4. '=sys' → logprob: -14.975207328796387
    5. '(sys' → logprob: -16.100208282470703
    6. 'input' → logprob: -16.600208282470703
    7. '```' → logprob: -20.225208282470703
    8. ' input' → logprob: -20.975208282470703
    9. 'lambda' → logprob: -21.225208282470703
    10. '.sys' → logprob: -21.850208282470703

Token 558: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.011165725067257881
    2. '.' → logprob: -4.511165618896484
    3. '.stdout' → logprob: -9.636165618896484
    4. '.std' → logprob: -10.511165618896484
    5. '.readline' → logprob: -11.261165618896484
    6. '.argv' → logprob: -12.261165618896484
    7. ' .' → logprob: -13.136165618896484
    8. '.st' → logprob: -13.636165618896484
    9. '.​' → logprob: -13.886165618896484
    10. '.input' → logprob: -13.886165618896484

Token 559: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00041816019802354276
    2. 'read' → logprob: -8.250417709350586
    3. '.read' → logprob: -9.500417709350586
    4. '.' → logprob: -9.750417709350586
    5. '_read' → logprob: -11.500417709350586
    6. '=' → logprob: -13.000417709350586
    7. '.readlines' → logprob: -13.000417709350586
    8. ' readline' → logprob: -13.000417709350586
    9. 'buffer' → logprob: -13.625417709350586
    10. '_reader' → logprob: -13.625417709350586

Token 560: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.4741940200328827
    2. '()' → logprob: -0.9741940498352051
    3. '()
' → logprob: -9.224193572998047
    4. '()\' → logprob: -11.474193572998047
    5. '()

' → logprob: -12.474193572998047
    6. '()`' → logprob: -13.474193572998047
    7. '(' → logprob: -13.599193572998047
    8. '();' → logprob: -14.849193572998047
    9. ' ()' → logprob: -15.099193572998047
    10. '()
' → logprob: -15.349193572998047

Token 561: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0011774895247071981
    2. 'split' → logprob: -6.7511773109436035
    3. 'rstrip' → logprob: -12.001177787780762
    4. 'decode' → logprob: -14.126177787780762
    5. ' strip' → logprob: -14.751177787780762
    6. ' split' → logprob: -19.251176834106445
    7. '(strip' → logprob: -19.251176834106445
    8. 'replace' → logprob: -19.376176834106445
    9. 'str' → logprob: -20.251176834106445
    10. '_strip' → logprob: -20.751176834106445

Token 562: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16091559827327728
    2. '().' → logprob: -1.9109156131744385
    3. '()
' → logprob: -7.285915374755859
    4. '(' → logprob: -13.41091537475586
    5. '()`' → logprob: -13.53591537475586
    6. '()\' → logprob: -13.53591537475586
    7. '()

' → logprob: -14.03591537475586
    8. ' ()' → logprob: -15.03591537475586
    9. '()
' → logprob: -15.03591537475586
    10. '(),' → logprob: -15.78591537475586

Token 563: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. ' split' → logprob: -14.75
    3. '(split' → logprob: -16.875
    4. 'strip' → logprob: -19.625
    5. 'spl' → logprob: -20.25
    6. '```' → logprob: -21.25
    7. 'replace' → logprob: -21.375
    8. '   ' → logprob: -21.5
    9. 's' → logprob: -22.0
    10. 'rstrip' → logprob: -22.125

Token 564: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.029193870723247528
    2. '('' → logprob: -4.029193878173828
    3. '(' → logprob: -4.529193878173828
    4. '('\' → logprob: -9.029193878173828
    5. '("("' → logprob: -10.029193878173828
    6. '()
' → logprob: -11.279193878173828
    7. '("' → logprob: -12.529193878173828
    8. '()\' → logprob: -12.779193878173828
    9. '('.')' → logprob: -13.154193878173828
    10. ' ()' → logprob: -13.279193878173828

Token 565: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10349704325199127
    2. '   ' → logprob: -2.60349702835083
    3. ' n' → logprob: -4.60349702835083
    4. 't' → logprob: -4.72849702835083
    5. 'T' → logprob: -5.72849702835083
    6. ' T' → logprob: -7.35349702835083
    7. ' t' → logprob: -7.47849702835083
    8. 'N' → logprob: -7.60349702835083
    9. 'idx' → logprob: -8.853497505187988
    10. 'num' → logprob: -8.978497505187988

Token 566: ' idx' (ID: 14016)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0034379190765321255
    2. 't' → logprob: -6.7534379959106445
    3. 'N' → logprob: -7.6284379959106445
    4. ' n' → logprob: -7.6284379959106445
    5. 'idx' (adapté à ' idx') → logprob: -7.6284379959106445
    6. 'T' → logprob: -8.253437995910645
    7. 'nb' → logprob: -8.753437995910645
    8. 'num' → logprob: -9.128437995910645
    9. 'index' → logprob: -9.878437995910645
    10. 'nx' → logprob: -9.878437995910645

Token 567: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269853264093399
    2. '=' → logprob: -2.1269853115081787
    3. ' ' → logprob: -10.376985549926758
    4. ' +=' → logprob: -10.626985549926758
    5. '  ' → logprob: -14.001985549926758
    6. '+=' → logprob: -14.376985549926758
    7. ',' → logprob: -15.876985549926758
    8. ' =
' → logprob: -16.126985549926758
    9. '   ' → logprob: -16.876985549926758
    10. '_' → logprob: -17.126985549926758

Token 568: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -17.625085830688477
    4. '1' → logprob: -18.375085830688477
    5. '```' → logprob: -19.125085830688477
    6. '۰' → logprob: -19.437585830688477
    7. '[' → logprob: -19.687585830688477
    8. '  ' → logprob: -19.875085830688477
    9. '2' → logprob: -20.687585830688477
    10. '=' → logprob: -20.875085830688477

Token 569: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '1' → logprob: -17.500011444091797
    4. '   ' → logprob: -18.625011444091797
    5. '  ' → logprob: -19.625011444091797
    6. '```' → logprob: -19.875011444091797
    7. '=' → logprob: -20.375011444091797
    8. '۰' → logprob: -20.687511444091797
    9. '    ' → logprob: -21.125011444091797
    10. '2' → logprob: -21.437511444091797

Token 570: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.43901774287223816
    2. '   ' → logprob: -1.3140177726745605
    3. ' n' → logprob: -2.9390177726745605
    4. '
' → logprob: -4.1890177726745605
    5. 't' → logprob: -5.5640177726745605
    6. ' T' → logprob: -5.6890177726745605
    7. 'N' → logprob: -5.8140177726745605
    8. 'T' → logprob: -6.1890177726745605
    9. ',' → logprob: -6.4390177726745605
    10. 'num' → logprob: -6.6890177726745605

Token 571: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7222640514373779
    2. '   ' → logprob: -0.8472640514373779
    3. ' n' → logprob: -3.097264051437378
    4. 'T' → logprob: -3.972264051437378
    5. ' T' → logprob: -4.847264289855957
    6. 't' → logprob: -5.097264289855957
    7. 'N' → logprob: -5.347264289855957
    8. ' t' → logprob: -6.722264289855957
    9. 'num' → logprob: -7.222264289855957
    10. ' N' → logprob: -8.097264289855957

Token 572: ' while' (ID: 2049)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.5636914372444153
    2. 't' → logprob: -0.9386914372444153
    3. 'n' → logprob: -3.3136913776397705
    4. '   ' → logprob: -6.31369161605835
    5. 'N' → logprob: -7.43869161605835
    6. 'num' → logprob: -8.188691139221191
    7. ' T' → logprob: -8.188691139221191
    8. 'while' (adapté à ' while') → logprob: -8.563691139221191
    9. ' t' → logprob: -9.188691139221191
    10. 'cases' → logprob: -10.563691139221191

Token 573: ' True' (ID: 6432)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.4012259542942047
    2. ' True' → logprob: -1.7762259244918823
    3. 'idx' → logprob: -2.401226043701172
    4. 'True' → logprob: -2.651226043701172
    5. '(True' → logprob: -10.776226043701172
    6. '(idx' → logprob: -11.401226043701172
    7. '	idx' → logprob: -11.526226043701172
    8. '_idx' → logprob: -13.026226043701172
    9. 'Idx' → logprob: -13.276226043701172
    10. ' ' → logprob: -13.401226043701172

Token 574: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009840848855674267
    2. ':
' → logprob: -4.884840965270996
    3. '   ' → logprob: -6.259840965270996
    4. ' and' → logprob: -8.759840965270996
    5. ',' → logprob: -9.884840965270996
    6. ' :' → logprob: -10.259840965270996
    7. '       ' → logprob: -10.634840965270996
    8. 'and' → logprob: -11.134840965270996
    9. '):' → logprob: -11.259840965270996
    10. '=' → logprob: -12.009840965270996

Token 575: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3229660987854004
    2. 'if' → logprob: -1.3229660987854004
    3. ' if' → logprob: -4.6979660987854
    4. 'try' → logprob: -8.822965621948242
    5. 'n' → logprob: -8.947965621948242
    6. '	if' → logprob: -9.072965621948242
    7. '       ' → logprob: -9.072965621948242
    8. '<|end|>' → logprob: -11.822965621948242
    9. '```' → logprob: -12.447965621948242
    10. '   ' → logprob: -12.572965621948242

Token 576: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5362364649772644
    2. ' if' → logprob: -1.2862365245819092
    3. 'n' → logprob: -2.036236524581909
    4. '   ' → logprob: -5.16123628616333
    5. ' n' → logprob: -6.03623628616333
    6. '       ' → logprob: -9.911236763000488
    7. 'N' → logprob: -10.411236763000488
    8. ' ' → logprob: -11.911236763000488
    9. 'i' → logprob: -12.536236763000488
    10. '	if' → logprob: -12.536236763000488

Token 577: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.03804229199886322
    2. ' idx' → logprob: -3.2880423069000244
    3. '	idx' → logprob: -14.038042068481445
    4. '(idx' → logprob: -17.913042068481445
    5. '_idx' → logprob: -18.163042068481445
    6. 'index' → logprob: -18.913042068481445
    7. ' ' → logprob: -19.288042068481445
    8. '
' → logprob: -19.663042068481445
    9. 'id' → logprob: -20.038042068481445
    10. 'len' → logprob: -20.288042068481445

Token 578: ' +' (ID: 659)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.16066256165504456
    2. ' >=' → logprob: -1.9106625318527222
    3. '+' → logprob: -7.785662651062012
    4. ']>=' → logprob: -11.160662651062012
    5. ')>=' → logprob: -12.910662651062012
    6. ' ' → logprob: -12.910662651062012
    7. '==' → logprob: -13.410662651062012
    8. ' +' → logprob: -14.410662651062012
    9. '>' → logprob: -14.785662651062012
    10. '+=' → logprob: -15.410662651062012

Token 579: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5769256353378296
    2. '4' → logprob: -2.076925754547119
    3. '3' → logprob: -2.201925754547119
    4. '2' → logprob: -2.201925754547119
    5. '5' → logprob: -2.701925754547119
    6. '6' → logprob: -3.701925754547119
    7. '7' → logprob: -9.326925277709961
    8. '0' → logprob: -11.076925277709961
    9. '
' → logprob: -11.576925277709961
    10. '8' → logprob: -12.451925277709961

Token 580: '4' (ID: 19)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.34212714433670044
    2. '1' → logprob: -1.9671270847320557
    3. '6' → logprob: -2.4671270847320557
    4. '4' → logprob: -3.0921270847320557
    5. '3' → logprob: -4.467127323150635
    6. '5' → logprob: -4.842127323150635
    7. '7' → logprob: -8.342126846313477
    8. '8' → logprob: -10.342126846313477
    9. '9' → logprob: -12.842126846313477
    10. '10' → logprob: -13.217126846313477

Token 581: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.4493041932582855
    2. ' >=' → logprob: -1.449304223060608
    3. '>' → logprob: -2.4493041038513184
    4. '>=' → logprob: -3.1993041038513184
    5. ' ' → logprob: -10.074304580688477
    6. ')>=' → logprob: -12.949304580688477
    7. ')' → logprob: -13.074304580688477
    8. ' >
' → logprob: -13.949304580688477
    9. ']>=' → logprob: -14.199304580688477
    10. ' ' → logprob: -15.074304580688477

Token 582: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0009115827269852161
    2. ' len' → logprob: -7.000911712646484
    3. '(len' → logprob: -16.250911712646484
    4. ' ' → logprob: -17.500911712646484
    5. '=len' → logprob: -19.125911712646484
    6. '[len' → logprob: -19.500911712646484
    7. '
' → logprob: -19.500911712646484
    8. '<len' → logprob: -19.875911712646484
    9. ',len' → logprob: -20.250911712646484
    10. '	len' → logprob: -20.375911712646484

Token 583: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0067405966110527515
    2. 'input' → logprob: -5.006740570068359
    3. ' input' → logprob: -10.63174057006836
    4. '=input' → logprob: -14.25674057006836
    5. '(' → logprob: -15.38174057006836
    6. ',input' → logprob: -15.50674057006836
    7. ' (' → logprob: -17.00674057006836
    8. '[input' → logprob: -18.00674057006836
    9. '<input' → logprob: -18.25674057006836
    10. '_input' → logprob: -18.50674057006836

Token 584: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11740968376398087
    2. '):
' → logprob: -3.1174097061157227
    3. ' or' → logprob: -3.6174097061157227
    4. ':' → logprob: -3.7424097061157227
    5. ')' → logprob: -4.242409706115723
    6. ' ):' → logprob: -7.492409706115723
    7. ':
' → logprob: -7.492409706115723
    8. 'or' → logprob: -8.742409706115723
    9. ' ' → logprob: -9.992409706115723
    10. '<|end|>' → logprob: -10.242409706115723

Token 585: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022443948313593864
    2. '           ' → logprob: -4.272443771362305
    3. '   ' → logprob: -5.397443771362305
    4. ':' → logprob: -6.522443771362305
    5. ' ' → logprob: -7.022443771362305
    6. ':
' → logprob: -8.397443771362305
    7. '  ' → logprob: -8.647443771362305
    8. '        
' → logprob: -8.772443771362305
    9. '    ' → logprob: -9.022443771362305
    10. ' break' → logprob: -9.022443771362305

Token 586: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.13158446550369263
    2. 'return' → logprob: -2.506584405899048
    3. '           ' → logprob: -4.006584644317627
    4. '       ' → logprob: -4.256584644317627
    5. ' break' → logprob: -4.756584644317627
    6. '	break' → logprob: -7.881584644317627
    7. ' return' → logprob: -8.256584167480469
    8. '   ' → logprob: -9.381584167480469
    9. '```' → logprob: -11.006584167480469
    10. '
' → logprob: -11.256584167480469

Token 587: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20886096358299255
    2. '        
' → logprob: -2.5838608741760254
    3. '
' → logprob: -2.8338608741760254
    4. '  
' → logprob: -3.5838608741760254
    5. '    
' → logprob: -4.458860874176025
    6. '   ' → logprob: -4.958860874176025
    7. ' 
' → logprob: -5.208860874176025
    8. '   
' → logprob: -7.208860874176025
    9. '       
' → logprob: -8.083861351013184
    10. ' ' → logprob: -8.333861351013184

Token 588: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.053465425968170166
    2. '   ' → logprob: -3.4284653663635254
    3. '        
' → logprob: -4.803465366363525
    4. ' ' → logprob: -5.553465366363525
    5. '  ' → logprob: -6.303465366363525
    6. '    
' → logprob: -6.928465366363525
    7. 'n' → logprob: -7.178465366363525
    8. '    ' → logprob: -7.428465366363525
    9. '
' → logprob: -7.428465366363525
    10. ' 
' → logprob: -7.553465366363525

Token 589: ' W' (ID: 486)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7711120843887329
    2. 'N' → logprob: -1.521112084388733
    3. 'W' (adapté à ' W') → logprob: -1.896112084388733
    4. 'w' → logprob: -2.3961119651794434
    5. '   ' → logprob: -3.3961119651794434
    6. 'R' → logprob: -4.771111965179443
    7. 'x' → logprob: -5.021111965179443
    8. 'M' → logprob: -5.396111965179443
    9. 'nx' → logprob: -5.396111965179443
    10. 'm' → logprob: -5.521111965179443

Token 590: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24625882506370544
    2. '=' → logprob: -1.8712588548660278
    3. ',' → logprob: -2.7462587356567383
    4. '=int' → logprob: -9.496258735656738
    5. ' ' → logprob: -10.496258735656738
    6. ' ,' → logprob: -10.746258735656738
    7. '   ' → logprob: -11.121258735656738
    8. '    ' → logprob: -11.496258735656738
    9. '<|end|>' → logprob: -11.621258735656738
    10. ')' → logprob: -12.246258735656738

Token 591: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0002681304467841983
    2. ' H' → logprob: -8.25026798248291
    3. 'W' → logprob: -13.12526798248291
    4. 'L' → logprob: -13.25026798248291
    5. '=' → logprob: -13.62526798248291
    6. 'D' → logprob: -14.62526798248291
    7. ' ' → logprob: -14.87526798248291
    8. 'M' → logprob: -15.50026798248291
    9. 'h' → logprob: -15.62526798248291
    10. 'R' → logprob: -15.75026798248291

Token 592: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5999758243560791
    2. '=' → logprob: -1.224975824356079
    3. ' =' → logprob: -1.849975824356079
    4. ' ,' → logprob: -8.9749755859375
    5. '=int' → logprob: -10.2249755859375
    6. ',W' → logprob: -13.4749755859375
    7. ' ' → logprob: -13.9749755859375
    8. ',int' → logprob: -14.3499755859375
    9. '=
' → logprob: -14.8499755859375
    10. ' =
' → logprob: -14.8499755859375

Token 593: ' N' (ID: 478)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.22019946575164795
    2. 'N' → logprob: -2.3451995849609375
    3. 'r' → logprob: -2.9701995849609375
    4. 'M' → logprob: -3.7201995849609375
    5. 'radius' → logprob: -4.9701995849609375
    6. 'n' → logprob: -5.4701995849609375
    7. 'D' → logprob: -5.4701995849609375
    8. 'L' → logprob: -6.0951995849609375
    9. 'x' → logprob: -6.7201995849609375
    10. 'P' → logprob: -6.7201995849609375

Token 594: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5861948132514954
    2. '=' → logprob: -0.8361948132514954
    3. ',' → logprob: -4.58619499206543
    4. ' ,' → logprob: -11.71119499206543
    5. ' ' → logprob: -13.58619499206543
    6. ' =
' → logprob: -14.33619499206543
    7. '=int' → logprob: -14.83619499206543
    8. ')' → logprob: -15.58619499206543
    9. '   ' → logprob: -15.71119499206543
    10. '  ' → logprob: -16.08619499206543

Token 595: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.02105993963778019
    2. 'M' → logprob: -5.021059989929199
    3. 'r' → logprob: -5.146059989929199
    4. ' R' → logprob: -5.771059989929199
    5. 'L' → logprob: -6.896059989929199
    6. 'D' → logprob: -7.146059989929199
    7. 'radius' → logprob: -7.271059989929199
    8. 'S' → logprob: -7.396059989929199
    9. 'K' → logprob: -7.396059989929199
    10. 'Q' → logprob: -7.896059989929199

Token 596: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931474208831787
    2. ' =' → logprob: -0.6931474208831787
    3. ' ' → logprob: -15.943147659301758
    4. '=int' → logprob: -16.193147659301758
    5. ',' → logprob: -16.943147659301758
    6. '   ' → logprob: -18.568147659301758
    7. ' =
' → logprob: -18.818147659301758
    8. ' ' → logprob: -18.943147659301758
    9. '	' → logprob: -19.068147659301758
    10. ')' → logprob: -19.068147659301758

Token 597: ' map' (ID: 4014)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.794851541519165
    2. 'map' → logprob: -1.044851541519165
    3. ' map' → logprob: -1.794851541519165
    4. ' int' → logprob: -3.544851541519165
    5. '[int' → logprob: -6.544851303100586
    6. 'float' → logprob: -9.169851303100586
    7. '(int' → logprob: -10.794851303100586
    8. '(map' → logprob: -12.044851303100586
    9. ' [' → logprob: -12.669851303100586
    10. ' float' → logprob: -12.794851303100586

Token 598: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0002116462419508025
    2. 'int' → logprob: -8.500211715698242
    3. '(' → logprob: -11.875211715698242
    4. '(float' → logprob: -13.875211715698242
    5. '(lambda' → logprob: -16.125211715698242
    6. '[int' → logprob: -17.000211715698242
    7. ' int' → logprob: -17.375211715698242
    8. '(str' → logprob: -17.375211715698242
    9. '=int' → logprob: -17.875211715698242
    10. ' (' → logprob: -18.000211715698242

Token 599: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0019849021919071674
    2. ',input' → logprob: -6.5019850730896
    3. ',' → logprob: -8.376984596252441
    4. ')' → logprob: -9.376984596252441
    5. ' (' → logprob: -9.751984596252441
    6. 'input' → logprob: -9.876984596252441
    7. '(' → logprob: -10.001984596252441
    8. ')(' → logprob: -12.251984596252441
    9. '=input' → logprob: -12.876984596252441
    10. '[input' → logprob: -13.001984596252441

Token 600: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0002353640884393826
    2. ' input' → logprob: -8.500235557556152
    3. '(input' → logprob: -10.500235557556152
    4. '[input' → logprob: -12.375235557556152
    5. '   ' → logprob: -17.500234603881836
    6. '<input' → logprob: -18.125234603881836
    7. '	input' → logprob: -18.500234603881836
    8. '=input' → logprob: -19.000234603881836
    9. ' ' → logprob: -19.125234603881836
    10. ',input' → logprob: -19.500234603881836

Token 601: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0002165299083571881
    2. '[' → logprob: -8.500216484069824
    3. '[input' → logprob: -11.875216484069824
    4. ' [' → logprob: -13.250216484069824
    5. '[id' → logprob: -13.250216484069824
    6. ')[' → logprob: -14.375216484069824
    7. '[
' → logprob: -14.750216484069824
    8. '[index' → logprob: -14.875216484069824
    9. '[ind' → logprob: -15.250216484069824
    10. '   ' → logprob: -15.625216484069824

Token 602: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003757383383344859
    2. ' :' → logprob: -8.500375747680664
    3. 'idx' → logprob: -8.875375747680664
    4. '[idx' → logprob: -11.625375747680664
    5. ' idx' → logprob: -11.750375747680664
    6. '   ' → logprob: -12.750375747680664
    7. '+' → logprob: -13.000375747680664
    8. '])' → logprob: -13.000375747680664
    9. '(idx' → logprob: -13.125375747680664
    10. '	idx' → logprob: -13.250375747680664

Token 603: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -6.511406809295295e-06
    2. ' idx' → logprob: -12.000006675720215
    3. '(idx' → logprob: -16.2500057220459
    4. '
' → logprob: -16.5000057220459
    5. '4' → logprob: -16.6250057220459
    6. '	idx' → logprob: -17.6250057220459
    7. '   ' → logprob: -18.0000057220459
    8. '[idx' → logprob: -18.0000057220459
    9. '_idx' → logprob: -20.6250057220459
    10. '.idx' → logprob: -21.5000057220459

Token 604: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00809416826814413
    2. 'idx' → logprob: -4.883094310760498
    3. ' +' → logprob: -8.50809383392334
    4. ' idx' → logprob: -8.75809383392334
    5. '4' → logprob: -9.38309383392334
    6. '(idx' → logprob: -10.88309383392334
    7. '[idx' → logprob: -11.00809383392334
    8. '   ' → logprob: -12.63309383392334
    9. '	idx' → logprob: -12.63309383392334
    10. ']+' → logprob: -14.13309383392334

Token 605: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '' → logprob: -17.875001907348633
    4. '```' → logprob: -18.375001907348633
    5. '   ' → logprob: -18.500001907348633
    6. '৪' → logprob: -18.875001907348633
    7. '۴' → logprob: -18.875001907348633
    8. '٤' → logprob: -19.250001907348633
    9. '４' → logprob: -19.375001907348633
    10. '  ' → logprob: -20.312501907348633

Token 606: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.2519811689853668
    2. '])
' → logprob: -1.5019811391830444
    3. ']);' → logprob: -10.626980781555176
    4. ' ])' → logprob: -11.626980781555176
    5. '])
' → logprob: -11.876980781555176
    6. ')
' → logprob: -12.376980781555176
    7. ' ])
' → logprob: -12.501980781555176
    8. ')' → logprob: -12.751980781555176
    9. '])

' → logprob: -14.751980781555176
    10. ']' → logprob: -14.876980781555176

Token 607: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0991233587265015
    2. '  
' → logprob: -1.8491233587265015
    3. '\n' → logprob: -1.8491233587265015
    4. '    
' → logprob: -1.9741233587265015
    5. '   ' → logprob: -2.599123477935791
    6. ' 
' → logprob: -2.724123477935791
    7. '   
' → logprob: -3.849123477935791
    8. '        
' → logprob: -4.474123477935791
    9. '[idx' → logprob: -4.849123477935791
    10. '<|end|>' → logprob: -4.974123477935791

Token 608: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.0030618496239185333
    2. ' idx' → logprob: -6.003061771392822
    3. 'if' → logprob: -7.503061771392822
    4. ' if' → logprob: -11.25306224822998
    5. '	idx' → logprob: -11.37806224822998
    6. '_idx' → logprob: -12.25306224822998
    7. '   ' → logprob: -13.37806224822998
    8. '
' → logprob: -13.37806224822998
    9. '       ' → logprob: -13.75306224822998
    10. '        
' → logprob: -14.25306224822998

Token 609: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.048602476716041565
    2. ' +=' → logprob: -3.04860258102417
    3. '+' → logprob: -11.173602104187012
    4. '=' → logprob: -14.173602104187012
    5. ']+=' → logprob: -15.798602104187012
    6. '```' → logprob: -16.673603057861328
    7. ' ' → logprob: -17.048603057861328
    8. '+="' → logprob: -17.048603057861328
    9. '+=(' → logprob: -17.423603057861328
    10. '+='' → logprob: -17.673603057861328

Token 610: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '   ' → logprob: -21.625
    4. '４' → logprob: -22.25
    5. '' → logprob: -22.5
    6. '۴' → logprob: -22.5
    7. '```' → logprob: -23.25
    8. '٤' → logprob: -23.5
    9. '৪' → logprob: -24.875
    10. '  ' → logprob: -25.25

Token 611: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '```' → logprob: -20.75
    4. '۴' → logprob: -20.875
    5. '４' → logprob: -21.375
    6. '' → logprob: -21.875
    7. '٤' → logprob: -21.875
    8. '৪' → logprob: -22.625
    9. '   ' → logprob: -22.75
    10. '४' → logprob: -23.4375

Token 612: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6503472328186035
    2. 'if' → logprob: -0.9003472328186035
    3. ' if' → logprob: -3.0253472328186035
    4. '   ' → logprob: -3.7753472328186035
    5. '<|end|>' → logprob: -9.525346755981445
    6. '	if' → logprob: -9.650346755981445
    7. ' ' → logprob: -10.775346755981445
    8. '
' → logprob: -10.900346755981445
    9. '        
' → logprob: -11.150346755981445
    10. '           ' → logprob: -11.650346755981445

Token 613: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2569391429424286
    2. 'if' → logprob: -1.631939172744751
    3. ' if' → logprob: -4.006938934326172
    4. '   ' → logprob: -4.381938934326172
    5. '<|end|>' → logprob: -8.256938934326172
    6. '	if' → logprob: -10.256938934326172
    7. 'If' → logprob: -11.006938934326172
    8. ' ' → logprob: -11.756938934326172
    9. '        
' → logprob: -12.006938934326172
    10. '```' → logprob: -12.381938934326172

Token 614: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.002202951582148671
    2. 'be' → logprob: -6.127202987670898
    3. '```' → logprob: -12.502202987670898
    4. '   ' → logprob: -12.752202987670898
    5. 'beam' → logprob: -13.127202987670898
    6. ' if' → logprob: -13.127202987670898
    7. 'break' → logprob: -13.627202987670898
    8. 'import' → logprob: -13.877202987670898
    9. 'If' → logprob: -14.002202987670898
    10. 'lines' → logprob: -14.127202987670898

Token 615: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.005237075500190258
    2. ' W' → logprob: -5.255237102508545
    3. '(W' → logprob: -13.380236625671387
    4. '(' → logprob: -13.505236625671387
    5. ' ' → logprob: -15.255236625671387
    6. '	W' → logprob: -16.880237579345703
    7. ' (' → logprob: -17.005237579345703
    8. '   ' → logprob: -17.255237579345703
    9. '[' → logprob: -18.630237579345703
    10. ' not' → logprob: -18.880237579345703

Token 616: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6936569809913635
    2. ' ==' → logprob: -0.6936569809913635
    3. '<=' → logprob: -7.943656921386719
    4. ' <=' → logprob: -8.943656921386719
    5. '=' → logprob: -11.193656921386719
    6. '0' → logprob: -12.693656921386719
    7. '```' → logprob: -12.943656921386719
    8. ' ' → logprob: -13.193656921386719
    9. '==
' → logprob: -13.818656921386719
    10. '===' → logprob: -14.318656921386719

Token 617: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004879915213678032
    2. ' ' → logprob: -7.625487804412842
    3. 'H' → logprob: -16.75048828125
    4. ' H' → logprob: -17.25048828125
    5. '=' → logprob: -20.75048828125
    6. '  ' → logprob: -20.75048828125
    7. '   ' → logprob: -21.00048828125
    8. '۰' → logprob: -21.37548828125
    9. 'R' → logprob: -21.50048828125
    10. '-' → logprob: -21.62548828125

Token 618: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.833878508885391e-05
    2. ' ' → logprob: -10.375038146972656
    3. 'H' → logprob: -11.875038146972656
    4. ' H' → logprob: -16.125038146972656
    5. '۰' → logprob: -18.125038146972656
    6. '```' → logprob: -18.125038146972656
    7. '-' → logprob: -19.000038146972656
    8. '
' → logprob: -19.625038146972656
    9. '
' → logprob: -19.750038146972656
    10. ' ' → logprob: -19.750038146972656

Token 619: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1602267622947693
    2. 'and' → logprob: -1.910226821899414
    3. ' ' → logprob: -13.285226821899414
    4. '<|end|>' → logprob: -14.660226821899414
    5. '	and' → logprob: -15.535226821899414
    6. ':' → logprob: -15.660226821899414
    7. 'a' → logprob: -16.910226821899414
    8. ' a' → logprob: -17.035226821899414
    9. '  ' → logprob: -17.160226821899414
    10. ' и' → logprob: -17.285226821899414

Token 620: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0031777136027812958
    2. ' H' → logprob: -5.753177642822266
    3. ' ' → logprob: -17.753177642822266
    4. '	H' → logprob: -19.878177642822266
    5. '   ' → logprob: -20.503177642822266
    6. '  ' → logprob: -20.503177642822266
    7. ' ' → logprob: -20.628177642822266
    8. '
' → logprob: -21.503177642822266
    9. '' → logprob: -21.753177642822266
    10. 'Hx' → logprob: -22.378177642822266

Token 621: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20142649114131927
    2. ' ==' → logprob: -1.7014265060424805
    3. ' ' → logprob: -12.07642650604248
    4. '=' → logprob: -12.57642650604248
    5. '0' → logprob: -13.45142650604248
    6. ' ' → logprob: -13.70142650604248
    7. '===' → logprob: -14.70142650604248
    8. ')==' → logprob: -15.57642650604248
    9. '```' → logprob: -15.70142650604248
    10. '()==' → logprob: -15.82642650604248

Token 622: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001170225441455841
    2. ' ' → logprob: -6.7511701583862305
    3. '<|end|>' → logprob: -21.376171112060547
    4. ' ' → logprob: -21.501171112060547
    5. '۰' → logprob: -21.751171112060547
    6. '  ' → logprob: -22.001171112060547
    7. '
' → logprob: -22.876171112060547
    8. '```' → logprob: -22.876171112060547
    9. '=' → logprob: -23.001171112060547
    10. '   ' → logprob: -23.251171112060547

Token 623: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '۰' → logprob: -20.75002670288086
    4. '<|end|>' → logprob: -21.37502670288086
    5. '```' → logprob: -21.75002670288086
    6. ' ' → logprob: -21.87502670288086
    7. '=' → logprob: -22.25002670288086
    8. '  ' → logprob: -22.62502670288086
    9. '
' → logprob: -23.00002670288086
    10. '   ' → logprob: -23.12502670288086

Token 624: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.011059965938329697
    2. 'and' → logprob: -4.511059761047363
    3. '0' → logprob: -11.386059761047363
    4. ' ' → logprob: -14.636059761047363
    5. '<|end|>' → logprob: -15.886059761047363
    6. ' и' → logprob: -16.13606071472168
    7. 'a' → logprob: -17.01106071472168
    8. '	and' → logprob: -17.13606071472168
    9. '<|end|>' → logprob: -17.26106071472168
    10. ',' → logprob: -17.63606071472168

Token 625: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00020354038861114532
    2. ' N' → logprob: -8.500203132629395
    3. 'R' → logprob: -17.50020408630371
    4. ' ' → logprob: -17.87520408630371
    5. '	N' → logprob: -18.87520408630371
    6. 'W' → logprob: -20.12520408630371
    7. '0' → logprob: -20.25020408630371
    8. '   ' → logprob: -20.37520408630371
    9. '  ' → logprob: -21.25020408630371
    10. 'n' → logprob: -21.87520408630371

Token 626: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.029753033071756363
    2. ' ==' → logprob: -3.5297529697418213
    3. '0' → logprob: -13.529752731323242
    4. '=' → logprob: -13.904752731323242
    5. ' ' → logprob: -16.404752731323242
    6. '===' → logprob: -16.654752731323242
    7. '==
' → logprob: -16.779752731323242
    8. 'and' → logprob: -17.154752731323242
    9. '```' → logprob: -17.529752731323242
    10. ')==' → logprob: -18.029752731323242

Token 627: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. '۰' → logprob: -19.87520408630371
    4. '  ' → logprob: -20.50020408630371
    5. '=' → logprob: -20.50020408630371
    6. '<|end|>' → logprob: -20.75020408630371
    7. '
' → logprob: -20.87520408630371
    8. 'R' → logprob: -21.18770408630371
    9. ' ' → logprob: -21.43770408630371
    10. '   ' → logprob: -21.50020408630371

Token 628: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '۰' → logprob: -16.875009536743164
    4. '
' → logprob: -17.687509536743164
    5. '```' → logprob: -18.187509536743164
    6. '<|end|>' → logprob: -18.500009536743164
    7. '=' → logprob: -18.562509536743164
    8. '০' → logprob: -18.687509536743164
    9. '<|end|>' → logprob: -19.437509536743164
    10. '

' → logprob: -19.500009536743164

Token 629: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.012514007277786732
    2. 'and' → logprob: -4.387514114379883
    3. '0' → logprob: -12.887514114379883
    4. ' ' → logprob: -13.512514114379883
    5. '<|end|>' → logprob: -16.137514114379883
    6. 'a' → logprob: -16.387514114379883
    7. ' и' → logprob: -17.137514114379883
    8. ',' → logprob: -17.137514114379883
    9. '	and' → logprob: -17.512514114379883
    10. ' ' → logprob: -17.637514114379883

Token 630: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0011703446507453918
    2. ' R' → logprob: -6.7511701583862305
    3. ' ' → logprob: -16.126171112060547
    4. '0' → logprob: -17.376171112060547
    5. '   ' → logprob: -18.126171112060547
    6. '  ' → logprob: -19.626171112060547
    7. '	R' → logprob: -20.251171112060547
    8. 'r' → logprob: -20.376171112060547
    9. ' ' → logprob: -20.626171112060547
    10. '
' → logprob: -21.251171112060547

Token 631: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.006726144813001156
    2. ' ==' → logprob: -5.006726264953613
    3. '0' → logprob: -12.256726264953613
    4. '=' → logprob: -12.506726264953613
    5. ')==' → logprob: -13.881726264953613
    6. '==
' → logprob: -13.881726264953613
    7. '()==' → logprob: -15.881726264953613
    8. ']==' → logprob: -16.006725311279297
    9. '===' → logprob: -16.631725311279297
    10. ' ' → logprob: -17.131725311279297

Token 632: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '۰' → logprob: -20.625001907348633
    4. '০' → logprob: -22.500001907348633
    5. '
' → logprob: -23.000001907348633
    6. '=' → logprob: -23.125001907348633
    7. '   ' → logprob: -24.000001907348633
    8. '```' → logprob: -24.125001907348633
    9. '<|end|>' → logprob: -24.250001907348633
    10. '０' → logprob: -24.375001907348633

Token 633: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '۰' → logprob: -19.25
    4. '০' → logprob: -20.875
    5. '```' → logprob: -21.375
    6. '٠' → logprob: -22.0
    7. '०' → logprob: -22.0625
    8. '   ' → logprob: -22.25
    9. ' ' → logprob: -22.3125
    10. '０' → logprob: -22.5

Token 634: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12695865333080292
    2. ':
' → logprob: -2.1269586086273193
    3. '       ' → logprob: -11.126958847045898
    4. '   ' → logprob: -11.376958847045898
    5. ':return' → logprob: -12.876958847045898
    6. ':
' → logprob: -14.126958847045898
    7. ' :' → logprob: -14.751958847045898
    8. ' :
' → logprob: -15.001958847045898
    9. '           ' → logprob: -15.251958847045898
    10. ':

' → logprob: -16.5019588470459

Token 635: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.062069524079561234
    2. '       ' → logprob: -2.8120694160461426
    3. '		' → logprob: -10.3120698928833
    4. '	       ' → logprob: -11.0620698928833
    5. '   ' → logprob: -11.1870698928833
    6. '
' → logprob: -11.4370698928833
    7. ':' → logprob: -12.3120698928833
    8. '          ' → logprob: -12.4370698928833
    9. '	' → logprob: -12.6870698928833
    10. '	   ' → logprob: -12.6870698928833

Token 636: ' #' (ID: 1069)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.18164293467998505
    2. ' break' → logprob: -1.9316428899765015
    3. 'return' → logprob: -4.431643009185791
    4. '       ' → logprob: -4.931643009185791
    5. '	break' → logprob: -6.306643009185791
    6. ' return' → logprob: -8.681642532348633
    7. '           ' → logprob: -9.556642532348633
    8. '   ' → logprob: -11.806642532348633
    9. '               ' → logprob: -12.806642532348633
    10. '_break' → logprob: -12.931642532348633

Token 637: ' Fin' (ID: 7772)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.004137768410146236
    2. 'return' → logprob: -5.504137992858887
    3. ' break' → logprob: -9.754137992858887
    4. '       ' → logprob: -14.504137992858887
    5. '           ' → logprob: -15.004137992858887
    6. ' return' → logprob: -15.879137992858887
    7. '	break' → logprob: -16.00413703918457
    8. '   ' → logprob: -16.12913703918457
    9. '
' → logprob: -18.50413703918457
    10. 'Break' → logprob: -20.37913703918457

Token 638: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6398105025291443
    2. '       ' → logprob: -0.7648105025291443
    3. '               ' → logprob: -5.889810562133789
    4. '
' → logprob: -6.139810562133789
    5. '        
' → logprob: -7.389810562133789
    6. '<|end|>' → logprob: -8.139810562133789
    7. '   ' → logprob: -8.389810562133789
    8. '      ' → logprob: -9.014810562133789
    9. '          ' → logprob: -9.014810562133789
    10. '		' → logprob: -9.139810562133789

Token 639: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8568023443222046
    2. 'programme' → logprob: -1.2318023443222046
    3. 'program' → logprob: -2.106802463531494
    4. 'la' → logprob: -2.231802463531494
    5. 'le' → logprob: -4.106802463531494
    6. 'process' → logprob: -4.356802463531494
    7. 'f' → logprob: -5.106802463531494
    8. 'input' → logprob: -5.481802463531494
    9. 'lecture' → logprob: -5.606802463531494
    10. 'def' → logprob: -6.856802463531494

Token 640: ''entrée' (ID: 115820)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.2937127649784088
    2. 'input' → logprob: -2.043712854385376
    3. 'entrée' → logprob: -2.793712854385376
    4. ''entrée' → logprob: -3.293712854385376
    5. 'program' → logprob: -4.918712615966797
    6. 'f' → logprob: -5.918712615966797
    7. 'ex' → logprob: -6.043712615966797
    8. 'bou' → logprob: -6.293712615966797
    9. 'a' → logprob: -6.668712615966797
    10. 'entr' → logprob: -6.793712615966797

Token 641: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004099296871572733
    2. '       ' → logprob: -5.504099369049072
    3. '		' → logprob: -11.879098892211914
    4. '               ' → logprob: -12.129098892211914
    5. '
' → logprob: -12.379098892211914
    6. '   ' → logprob: -13.379098892211914
    7. '	       ' → logprob: -14.379098892211914
    8. '<|end|>' → logprob: -14.629098892211914
    9. '          ' → logprob: -14.879098892211914
    10. '        
' → logprob: -14.879098892211914

Token 642: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3868750035762787
    2. '       ' → logprob: -1.136875033378601
    3. '   ' → logprob: -14.13687515258789
    4. '		' → logprob: -14.13687515258789
    5. '               ' → logprob: -14.38687515258789
    6. '          ' → logprob: -14.38687515258789
    7. '	       ' → logprob: -15.01187515258789
    8. '        ' → logprob: -15.51187515258789
    9. '      ' → logprob: -15.63687515258789
    10. '         ' → logprob: -15.76187515258789

Token 643: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.032958950847387314
    2. 'return' → logprob: -3.532958984375
    3. ' break' → logprob: -5.782958984375
    4. '       ' → logprob: -10.032958984375
    5. ' return' → logprob: -10.032958984375
    6. '	break' → logprob: -10.782958984375
    7. '           ' → logprob: -11.157958984375
    8. '   ' → logprob: -14.532958984375
    9. '_break' → logprob: -16.032958984375
    10. '	return' → logprob: -16.282958984375

Token 644: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02160339057445526
    2. '        
' → logprob: -4.521603584289551
    3. '
' → logprob: -4.646603584289551
    4. '   ' → logprob: -7.521603584289551
    5. '    
' → logprob: -8.64660358428955
    6. ' positions' → logprob: -9.77160358428955
    7. '<|end|>' → logprob: -9.89660358428955
    8. 'positions' → logprob: -11.39660358428955
    9. '        

' → logprob: -11.77160358428955
    10. '  
' → logprob: -11.77160358428955

Token 645: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14201579988002777
    2. 'be' → logprob: -2.6420156955718994
    3. ' beams' → logprob: -2.8920156955718994
    4. '   ' → logprob: -5.7670159339904785
    5. '```' → logprob: -7.2670159339904785
    6. ' be' → logprob: -7.5170159339904785
    7. '	be' → logprob: -8.01701545715332
    8. 'b' → logprob: -8.26701545715332
    9. 'points' → logprob: -8.26701545715332
    10. 'beam' → logprob: -9.14201545715332

Token 646: ' beams' (ID: 81992)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.010449649766087532
    2. 'machines' → logprob: -5.3854498863220215
    3. ' beams' → logprob: -6.1354498863220215
    4. '       ' → logprob: -6.1354498863220215
    5. 'points' → logprob: -7.5104498863220215
    6. '   ' → logprob: -8.385449409484863
    7. 'machine' → logprob: -9.135449409484863
    8. 'beam' → logprob: -9.510449409484863
    9. 'r' → logprob: -9.510449409484863
    10. 'w' → logprob: -9.760449409484863

Token 647: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193557143211365
    2. ' =' → logprob: -1.501935601234436
    3. '=[]' → logprob: -12.001935958862305
    4. ',' → logprob: -16.501935958862305
    5. '   ' → logprob: -16.876935958862305
    6. 's' → logprob: -17.376935958862305
    7. '_' → logprob: -17.376935958862305
    8. ' ' → logprob: -17.501935958862305
    9. '=[]
' → logprob: -17.876935958862305
    10. '＝' → logprob: -17.876935958862305

Token 648: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.06198090314865112
    2. '[]
' → logprob: -2.811980962753296
    3. ' []' → logprob: -11.561981201171875
    4. ' []
' → logprob: -12.811981201171875
    5. '[' → logprob: -14.186981201171875
    6. '[]

' → logprob: -15.186981201171875
    7. '=[]
' → logprob: -17.936981201171875
    8. '=[]' → logprob: -18.061981201171875
    9. '[]"' → logprob: -18.561981201171875
    10. '[
' → logprob: -18.561981201171875

Token 649: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03077290952205658
    2. 'for' → logprob: -3.6557729244232178
    3. ' for' → logprob: -5.530772686004639
    4. '	for' → logprob: -8.030773162841797
    5. '   ' → logprob: -9.280773162841797
    6. '	   ' → logprob: -10.280773162841797
    7. '	' → logprob: -10.780773162841797
    8. '        
' → logprob: -11.530773162841797
    9. '<|end|>' → logprob: -11.530773162841797
    10. '
' → logprob: -12.655773162841797

Token 650: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00016885579680092633
    2. '       ' → logprob: -9.000168800354004
    3. ' for' → logprob: -10.000168800354004
    4. '	for' → logprob: -17.00016975402832
    5. '   ' → logprob: -18.62516975402832
    6. '
' → logprob: -20.12516975402832
    7. '        
' → logprob: -20.87516975402832
    8. 'For' → logprob: -22.62516975402832
    9. ' ' → logprob: -22.75016975402832
    10. '```' → logprob: -23.50016975402832

Token 651: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00140820920933038
    2. '_i' → logprob: -6.751408100128174
    3. 'i' → logprob: -8.751408576965332
    4. ' _' → logprob: -9.501408576965332
    5. ' i' → logprob: -12.251408576965332
    6. '_in' → logprob: -16.126407623291016
    7. '_=' → logprob: -17.001407623291016
    8. '_n' → logprob: -17.501407623291016
    9. '_
' → logprob: -18.001407623291016
    10. '_]' → logprob: -18.376407623291016

Token 652: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007769528776407242
    2. 'in' → logprob: -4.882769584655762
    3. 'i' → logprob: -8.757769584655762
    4. ' ' → logprob: -12.882769584655762
    5. 'range' → logprob: -13.257769584655762
    6. '_' → logprob: -13.757769584655762
    7. ' i' → logprob: -15.007769584655762
    8. '0' → logprob: -15.882769584655762
    9. '  ' → logprob: -16.007768630981445
    10. '1' → logprob: -16.757768630981445

Token 653: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.0206720617134124e-05
    2. ' range' → logprob: -11.50001049041748
    3. 'in' → logprob: -17.750009536743164
    4. 'ange' → logprob: -17.750009536743164
    5. ' ' → logprob: -18.375009536743164
    6. '	range' → logprob: -19.000009536743164
    7. '   ' → logprob: -19.375009536743164
    8. 'input' → logprob: -19.375009536743164
    9. '(range' → logprob: -19.500009536743164
    10. 'rang' → logprob: -19.500009536743164

Token 654: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -2.2200749754119897e-06
    2. 'N' → logprob: -13.125001907348633
    3. '(' → logprob: -16.125001907348633
    4. ' (' → logprob: -17.125001907348633
    5. '(n' → logprob: -17.375001907348633
    6. '(
' → logprob: -18.750001907348633
    7. ' N' → logprob: -19.375001907348633
    8. '	N' → logprob: -19.375001907348633
    9. ' ' → logprob: -20.375001907348633
    10. '   ' → logprob: -20.625001907348633

Token 655: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0010522229131311178
    2. '):' → logprob: -7.126052379608154
    3. '       ' → logprob: -8.876051902770996
    4. '):
' → logprob: -10.126051902770996
    5. '():
' → logprob: -11.126051902770996
    6. '   ' → logprob: -11.126051902770996
    7. ' ):
' → logprob: -11.501051902770996
    8. ':
' → logprob: -11.751051902770996
    9. '           ' → logprob: -11.876051902770996
    10. '```' → logprob: -12.501051902770996

Token 656: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019987229257822037
    2. '   ' → logprob: -4.394987106323242
    3. 'x' → logprob: -5.894987106323242
    4. ' x' → logprob: -6.519987106323242
    5. '       ' → logprob: -7.019987106323242
    6. '	       ' → logprob: -7.394987106323242
    7. '	   ' → logprob: -7.894987106323242
    8. '```' → logprob: -8.644987106323242
    9. '<|end|>' → logprob: -8.769987106323242
    10. '    	   ' → logprob: -8.894987106323242

Token 657: ' #' (ID: 1069)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0015490218065679073
    2. ' x' → logprob: -6.501549243927002
    3. '           ' → logprob: -10.001548767089844
    4. '   ' → logprob: -14.251548767089844
    5. '_x' → logprob: -15.626548767089844
    6. '       ' → logprob: -15.626548767089844
    7. ' ' → logprob: -15.876548767089844
    8. 'xi' → logprob: -16.001548767089844
    9. '	x' → logprob: -16.501548767089844
    10. 'X' → logprob: -16.751548767089844

Token 658: ' Chaque' (ID: 94758)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0028636043425649405
    2. ' x' → logprob: -5.87786340713501
    3. '   ' → logprob: -10.252863883972168
    4. '       ' → logprob: -12.002863883972168
    5. 'coords' → logprob: -12.627863883972168
    6. 'xs' → logprob: -12.877863883972168
    7. ' ' → logprob: -13.377863883972168
    8. 'xi' → logprob: -13.502863883972168
    9. '	x' → logprob: -13.502863883972168
    10. 'line' → logprob: -13.627863883972168

Token 659: ' ligne' (ID: 19583)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.003677751636132598
    2. ' x' → logprob: -5.628677845001221
    3. 'line' → logprob: -10.003677368164062
    4. ' line' → logprob: -10.503677368164062
    5. '   ' → logprob: -13.628677368164062
    6. '_x' → logprob: -14.003677368164062
    7. '       ' → logprob: -14.878677368164062
    8. '           ' → logprob: -15.128677368164062
    9. 'xi' → logprob: -15.253677368164062
    10. ' ' → logprob: -15.503677368164062

Token 660: ':' (ID: 25)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.17424124479293823
    2. '=' → logprob: -2.799241304397583
    3. ' =' → logprob: -2.799241304397583
    4. '           ' → logprob: -3.674241304397583
    5. ' x' → logprob: -5.049241065979004
    6. 'line' → logprob: -6.924241065979004
    7. '=x' → logprob: -7.799241065979004
    8. ',' → logprob: -7.924241065979004
    9. '=line' → logprob: -7.924241065979004
    10. ' line' → logprob: -8.174241065979004

Token 661: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07002068310976028
    2. ' x' → logprob: -2.6950206756591797
    3. '           ' → logprob: -10.07002067565918
    4. '               ' → logprob: -11.19502067565918
    5. '	x' → logprob: -11.94502067565918
    6. ' ' → logprob: -12.19502067565918
    7. '   ' → logprob: -12.32002067565918
    8. '_x' → logprob: -12.57002067565918
    9. 'xi' → logprob: -13.32002067565918
    10. 'xl' → logprob: -13.44502067565918

Token 662: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.65707261255011e-06
    2. ',' → logprob: -13.250008583068848
    3. 'from' → logprob: -13.625008583068848
    4. 'a' → logprob: -13.750008583068848
    5. '_start' → logprob: -13.750008583068848
    6. ' ' → logprob: -14.000008583068848
    7. 's' → logprob: -14.125008583068848
    8. 'start' → logprob: -14.875008583068848
    9. '_' → logprob: -15.250008583068848
    10. '0' → logprob: -15.250008583068848

Token 663: ' y' (ID: 342)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7597157955169678
    2. '1' → logprob: -0.7597157955169678
    3. ' y' → logprob: -3.0097157955169678
    4. 'y' → logprob: -4.759716033935547
    5. ',y' → logprob: -5.509716033935547
    6. ' =' → logprob: -6.634716033935547
    7. '=' → logprob: -7.509716033935547
    8. ' ,' → logprob: -8.134716033935547
    9. ' ' → logprob: -9.634716033935547
    10. ' py' → logprob: -9.884716033935547

Token 664: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.125000953674316
    3. '2' → logprob: -15.625000953674316
    4. ' y' → logprob: -15.875000953674316
    5. 'y' → logprob: -16.000001907348633
    6. ',' → logprob: -17.125001907348633
    7. '_' → logprob: -18.375001907348633
    8. '_start' → logprob: -19.250001907348633
    9. '' → logprob: -19.375001907348633
    10. '<|end|>' → logprob: -19.500001907348633

Token 665: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.07006103545427322
    2. 'x' → logprob: -2.695060968399048
    3. ' y' → logprob: -9.945060729980469
    4. ' ' → logprob: -10.445060729980469
    5. '	x' → logprob: -11.195060729980469
    6. ',' → logprob: -11.570060729980469
    7. '    ' → logprob: -11.695060729980469
    8. '   ' → logprob: -11.820060729980469
    9. 'y' → logprob: -12.820060729980469
    10. '  ' → logprob: -13.195060729980469

Token 666: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012663742527365685
    2. '2' → logprob: -4.387663841247559
    3. 'x' → logprob: -9.637663841247559
    4. ' y' → logprob: -10.137663841247559
    5. ' ' → logprob: -10.637663841247559
    6. ' x' → logprob: -11.262663841247559
    7. 'y' → logprob: -11.512663841247559
    8. ',' → logprob: -14.137663841247559
    9. '   ' → logprob: -15.012663841247559
    10. '4' → logprob: -15.637663841247559

Token 667: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.0009215848403982818
    2. 'y' → logprob: -7.000921726226807
    3. ',' → logprob: -11.875921249389648
    4. '1' → logprob: -13.625921249389648
    5. '   ' → logprob: -14.125921249389648
    6. ',y' → logprob: -15.000921249389648
    7. ' ' → logprob: -15.500921249389648
    8. '	y' → logprob: -15.500921249389648
    9. ' x' → logprob: -15.625921249389648
    10. '    ' → logprob: -15.625921249389648

Token 668: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22544783353805542
    2. '2' → logprob: -1.6004478931427002
    3. ' ' → logprob: -10.975447654724121
    4. ' y' → logprob: -11.350447654724121
    5. 'y' → logprob: -13.100447654724121
    6. 'x' → logprob: -13.725447654724121
    7. '```' → logprob: -13.850447654724121
    8. '3' → logprob: -14.225447654724121
    9. '_' → logprob: -15.412947654724121
    10. ' x' → logprob: -15.725447654724121

Token 669: ' thickness' (ID: 38833)
  Prédit: ' thickness'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' thickness' → logprob: -0.004465489182621241
    2. 'th' → logprob: -6.004465579986572
    3. ' thick' → logprob: -7.004465579986572
    4. ',' → logprob: -8.504465103149414
    5. ' ' → logprob: -8.504465103149414
    6. '   ' → logprob: -8.629465103149414
    7. ' t' → logprob: -9.004465103149414
    8. '           ' → logprob: -9.379465103149414
    9. ' th' → logprob: -9.629465103149414
    10. 't' → logprob: -9.629465103149414

Token 670: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2358211725950241
    2. '           ' → logprob: -2.23582124710083
    3. '=' → logprob: -2.61082124710083
    4. ',' → logprob: -4.61082124710083
    5. '       ' → logprob: -5.98582124710083
    6. 'x' → logprob: -6.11082124710083
    7. '=line' → logprob: -6.36082124710083
    8. '   ' → logprob: -6.48582124710083
    9. '		' → logprob: -6.61082124710083
    10. '=input' → logprob: -6.73582124710083

Token 671: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.046102214604616165
    2. ' x' → logprob: -3.546102285385132
    3. 'x' → logprob: -4.796102046966553
    4. ',' → logprob: -5.796102046966553
    5. '   ' → logprob: -6.796102046966553
    6. '       ' → logprob: -7.296102046966553
    7. ' line' → logprob: -7.546102046966553
    8. ' lines' → logprob: -7.796102046966553
    9. 'tokens' → logprob: -8.046102523803711
    10. ' parts' → logprob: -8.421102523803711

Token 672: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.02997494488954544
    2. ' x' → logprob: -3.529974937438965
    3. '           ' → logprob: -8.654974937438965
    4. '   ' → logprob: -11.279974937438965
    5. 'line' → logprob: -11.404974937438965
    6. '       ' → logprob: -12.279974937438965
    7. 'xl' → logprob: -12.654974937438965
    8. ' parts' → logprob: -13.029974937438965
    9. 'parts' → logprob: -13.154974937438965
    10. 'xi' → logprob: -13.279974937438965

Token 673: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010306637705070898
    2. ',' → logprob: -9.375102996826172
    3. ' =' → logprob: -11.625102996826172
    4. ' ' → logprob: -12.750102996826172
    5. '=' → logprob: -13.375102996826172
    6. 's' → logprob: -13.750102996826172
    7. '_' → logprob: -14.000102996826172
    8. ' ,' → logprob: -14.125102996826172
    9. '=int' → logprob: -14.750102996826172
    10. 'y' → logprob: -15.000102996826172

Token 674: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05352259427309036
    2. '=' → logprob: -3.0535225868225098
    3. ' =' → logprob: -5.42852258682251
    4. '=int' → logprob: -8.303523063659668
    5. ' ,' → logprob: -8.553523063659668
    6. ',x' → logprob: -10.178523063659668
    7. ',y' → logprob: -10.803523063659668
    8. ' ' → logprob: -11.928523063659668
    9. ',int' → logprob: -12.178523063659668
    10. 'x' → logprob: -12.303523063659668

Token 675: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00012535012501757592
    2. ' y' → logprob: -9.00012493133545
    3. '<|end|>' → logprob: -13.50012493133545
    4. ' ' → logprob: -16.125125885009766
    5. '=' → logprob: -16.125125885009766
    6. 'x' → logprob: -16.375125885009766
    7. 'Y' → logprob: -17.125125885009766
    8. '  ' → logprob: -17.250125885009766
    9. '<|end|>' → logprob: -17.500125885009766
    10. 'w' → logprob: -17.625125885009766

Token 676: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.875000953674316
    3. ',' → logprob: -15.125000953674316
    4. '<|end|>' → logprob: -16.25
    5. 'y' → logprob: -17.0
    6. '=' → logprob: -17.0
    7. '<|end|>' → logprob: -17.5
    8. '2' → logprob: -17.875
    9. '  ' → logprob: -17.875
    10. ' =' → logprob: -18.125

Token 677: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012868782505393028
    2. '=' → logprob: -9.000128746032715
    3. ' ,' → logprob: -12.875128746032715
    4. ',x' → logprob: -13.625128746032715
    5. ' =' → logprob: -13.875128746032715
    6. 'x' → logprob: -14.625128746032715
    7. ',y' → logprob: -18.5001277923584
    8. '_,' → logprob: -18.6251277923584
    9. '‌,' → logprob: -18.7501277923584
    10. ',
' → logprob: -19.0001277923584

Token 678: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.1008713702030946e-06
    2. ' x' → logprob: -13.125001907348633
    3. '	x' → logprob: -23.250001907348633
    4. ' ' → logprob: -23.375001907348633
    5. '   ' → logprob: -23.750001907348633
    6. '<|end|>' → logprob: -24.125001907348633
    7. '  ' → logprob: -24.625001907348633
    8. '"x' → logprob: -25.250001907348633
    9. ',' → logprob: -25.500001907348633
    10. 'xbe' → logprob: -25.750001907348633

Token 679: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0028388723731040955
    2. ',' → logprob: -6.377839088439941
    3. '1' → logprob: -6.877839088439941
    4. ' ' → logprob: -9.627839088439941
    5. ',x' → logprob: -10.877839088439941
    6. '=' → logprob: -12.002839088439941
    7. 'x' → logprob: -12.127839088439941
    8. ' =' → logprob: -12.752839088439941
    9. '=sys' → logprob: -13.252839088439941
    10. '```' → logprob: -13.627839088439941

Token 680: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8670179997570813e-05
    2. ' ,' → logprob: -11.125019073486328
    3. ',y' → logprob: -12.500019073486328
    4. 'y' → logprob: -16.000019073486328
    5. '=' → logprob: -17.250019073486328
    6. '‌,' → logprob: -17.750019073486328
    7. ',
' → logprob: -18.500019073486328
    8. ' y' → logprob: -18.625019073486328
    9. '_,' → logprob: -18.625019073486328
    10. ',x' → logprob: -18.750019073486328

Token 681: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.014164221473038197
    2. ' y' → logprob: -4.264164447784424
    3. 'x' → logprob: -14.514163970947266
    4. ' ' → logprob: -15.764163970947266
    5. '<|end|>' → logprob: -17.014163970947266
    6. '	y' → logprob: -17.389163970947266
    7. ' x' → logprob: -18.639163970947266
    8. '   ' → logprob: -19.639163970947266
    9. ')y' → logprob: -19.639163970947266
    10. ''y' → logprob: -19.764163970947266

Token 682: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.014235900714993477
    2. '1' → logprob: -4.264235973358154
    3. '5' → logprob: -10.389235496520996
    4. ',' → logprob: -11.264235496520996
    5. ' ' → logprob: -11.639235496520996
    6. '```' → logprob: -11.889235496520996
    7. 'x' → logprob: -12.889235496520996
    8. '   ' → logprob: -12.889235496520996
    9. 'y' → logprob: -13.264235496520996
    10. '4' → logprob: -13.264235496520996

Token 683: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005533903022296727
    2. '=' → logprob: -7.625553607940674
    3. ' ,' → logprob: -10.125553131103516
    4. ' =' → logprob: -10.625553131103516
    5. ',x' → logprob: -15.500553131103516
    6. ',r' → logprob: -15.500553131103516
    7. ',
' → logprob: -16.000553131103516
    8. ',int' → logprob: -16.500553131103516
    9. ',R' → logprob: -17.000553131103516
    10. '_,' → logprob: -17.375553131103516

Token 684: ' t' (ID: 260)
  Prédit: 'th'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'th' → logprob: -0.01844840869307518
    2. 't' → logprob: -4.018448352813721
    3. ' thickness' → logprob: -8.268448829650879
    4. 'T' → logprob: -11.643448829650879
    5. '=' → logprob: -11.893448829650879
    6. ' t' → logprob: -12.143448829650879
    7. 'thr' → logprob: -12.143448829650879
    8. ' thick' → logprob: -12.518448829650879
    9. '	th' → logprob: -13.143448829650879
    10. 'thin' → logprob: -13.268448829650879

Token 685: ' =' (ID: 314)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.24924823641777039
    2. '=' → logprob: -1.7492482662200928
    3. ' =' → logprob: -3.1242482662200928
    4. 'ickness' → logprob: -5.999248027801514
    5. 'ick' → logprob: -8.749248504638672
    6. ',' → logprob: -10.249248504638672
    7. '=int' → logprob: -10.999248504638672
    8. '=h' → logprob: -12.624248504638672
    9. 'k' → logprob: -12.749248504638672
    10. '	' → logprob: -12.749248504638672

Token 686: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.008728617802262306
    2. ' map' → logprob: -4.758728504180908
    3. 'int' → logprob: -9.758728981018066
    4. 'float' → logprob: -9.883728981018066
    5. 'list' → logprob: -12.508728981018066
    6. '(map' → logprob: -14.258728981018066
    7. ' int' → logprob: -15.258728981018066
    8. '	map' → logprob: -15.383728981018066
    9. ' float' → logprob: -15.758728981018066
    10. 'input' → logprob: -16.25872802734375

Token 687: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.47859710454940796
    2. '(float' → logprob: -0.978597104549408
    3. 'float' → logprob: -5.978597164154053
    4. 'int' → logprob: -6.228597164154053
    5. '(' → logprob: -13.353596687316895
    6. '=float' → logprob: -13.853596687316895
    7. ' float' → logprob: -14.103596687316895
    8. '[int' → logprob: -14.228596687316895
    9. '=int' → logprob: -15.103596687316895
    10. ' int' → logprob: -15.853596687316895

Token 688: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01828034222126007
    2. ',input' → logprob: -4.018280506134033
    3. 'input' → logprob: -9.393280029296875
    4. '(input' → logprob: -10.143280029296875
    5. ' ,' → logprob: -12.143280029296875
    6. '[input' → logprob: -13.518280029296875
    7. ' input' → logprob: -15.268280029296875
    8. '=input' → logprob: -15.393280029296875
    9. '(' → logprob: -15.518280029296875
    10. '   ' → logprob: -15.768280029296875

Token 689: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0019287518225610256
    2. ' input' → logprob: -6.251928806304932
    3. '   ' → logprob: -16.376928329467773
    4. '[input' → logprob: -17.126928329467773
    5. '(input' → logprob: -17.626928329467773
    6. ' ' → logprob: -17.876928329467773
    7. ',input' → logprob: -19.626928329467773
    8. '<input' → logprob: -20.251928329467773
    9. ')' → logprob: -20.251928329467773
    10. '  ' → logprob: -20.376928329467773

Token 690: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.3856492842023727e-06
    2. '(idx' → logprob: -14.000000953674316
    3. 'idx' → logprob: -15.500000953674316
    4. '[' → logprob: -16.500001907348633
    5. ' [' → logprob: -17.125001907348633
    6. '[index' → logprob: -17.375001907348633
    7. '[input' → logprob: -17.375001907348633
    8. '   ' → logprob: -17.750001907348633
    9. '[id' → logprob: -19.125001907348633
    10. ' idx' → logprob: -19.125001907348633

Token 691: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04729507490992546
    2. '[idx' → logprob: -3.172295093536377
    3. 'idx' → logprob: -5.547295093536377
    4. ' :' → logprob: -8.547294616699219
    5. '   ' → logprob: -9.672294616699219
    6. ' idx' → logprob: -10.047294616699219
    7. '	idx' → logprob: -10.172294616699219
    8. '(idx' → logprob: -10.547294616699219
    9. ',' → logprob: -11.922294616699219
    10. '       ' → logprob: -13.047294616699219

Token 692: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -4.8590300139039755e-05
    2. ' idx' → logprob: -10.000048637390137
    3. '(idx' → logprob: -13.125048637390137
    4. '[idx' → logprob: -15.000048637390137
    5. '	idx' → logprob: -15.125048637390137
    6. ':' → logprob: -15.250048637390137
    7. '   ' → logprob: -16.12504768371582
    8. ' ' → logprob: -17.37504768371582
    9. '
' → logprob: -18.00004768371582
    10. '```' → logprob: -18.50004768371582

Token 693: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25270751118659973
    2. '5' → logprob: -1.5027074813842773
    3. 'idx' → logprob: -7.502707481384277
    4. ':' → logprob: -9.502707481384277
    5. ' ' → logprob: -10.252707481384277
    6. ' +' → logprob: -10.377707481384277
    7. ' idx' → logprob: -10.752707481384277
    8. '   ' → logprob: -11.002707481384277
    9. ']' → logprob: -11.752707481384277
    10. '1' → logprob: -12.002707481384277

Token 694: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.3306015716807451e-05
    2. '4' → logprob: -11.87501335144043
    3. '6' → logprob: -12.50001335144043
    4. '1' → logprob: -14.00001335144043
    5. ' ' → logprob: -14.43751335144043
    6. '
' → logprob: -14.87501335144043
    7. '7' → logprob: -15.75001335144043
    8. '   ' → logprob: -16.68751335144043
    9. 'N' → logprob: -16.87501335144043
    10. '2' → logprob: -17.00001335144043

Token 695: '])
' (ID: 5169)
  Prédit: '])
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])
' → logprob: -0.42837464809417725
    2. '])' → logprob: -1.5533746480941772
    3. ')
' → logprob: -2.303374767303467
    4. ')' → logprob: -3.303374767303467
    5. '])
' → logprob: -9.178374290466309
    6. ')
' → logprob: -9.928374290466309
    7. ']' → logprob: -11.178374290466309
    8. ']);' → logprob: -11.178374290466309
    9. '   ' → logprob: -11.678374290466309
    10. '))
' → logprob: -12.428374290466309

Token 696: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03469498082995415
    2. 'idx' → logprob: -3.9096949100494385
    3. '	idx' → logprob: -4.909695148468018
    4. '[idx' → logprob: -6.409695148468018
    5. '   ' → logprob: -6.659695148468018
    6. ' idx' → logprob: -6.909695148468018
    7. '	   ' → logprob: -6.909695148468018
    8. '           ' → logprob: -7.534695148468018
    9. '	' → logprob: -8.15969467163086
    10. '        
' → logprob: -8.78469467163086

Token 697: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.2531372010707855
    2. ' idx' → logprob: -1.503137230873108
    3. '       ' → logprob: -7.503137111663818
    4. '	idx' → logprob: -7.503137111663818
    5. '   ' → logprob: -9.503137588500977
    6. '[idx' → logprob: -10.878137588500977
    7. '_idx' → logprob: -11.878137588500977
    8. '        
' → logprob: -13.253137588500977
    9. '
' → logprob: -14.253137588500977
    10. '(idx' → logprob: -14.378137588500977

Token 698: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12692999839782715
    2. ' +=' → logprob: -2.126929998397827
    3. '   ' → logprob: -13.876930236816406
    4. '+' → logprob: -14.251930236816406
    5. ']+=' → logprob: -15.001930236816406
    6. '+='' → logprob: -17.876930236816406
    7. '+="' → logprob: -18.001930236816406
    8. '	' → logprob: -18.376930236816406
    9. '    ' → logprob: -18.501930236816406
    10. '```' → logprob: -18.626930236816406

Token 699: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '   ' → logprob: -18.125001907348633
    4. '５' → logprob: -19.375001907348633
    5. '۵' → logprob: -19.750001907348633
    6. '٥' → logprob: -20.187501907348633
    7. '  ' → logprob: -20.562501907348633
    8. '৫' → logprob: -20.750001907348633
    9. '```' → logprob: -20.875001907348633
    10. '५' → logprob: -21.312501907348633

Token 700: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -18.625
    4. '1' → logprob: -19.25
    5. '５' → logprob: -19.3125
    6. '```' → logprob: -19.5625
    7. '٥' → logprob: -20.1875
    8. '۵' → logprob: -20.1875
    9. '৫' → logprob: -20.8125
    10. '  ' → logprob: -20.9375

Token 701: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0073761348612606525
    2. '       ' → logprob: -5.507376194000244
    3. 'be' → logprob: -5.882376194000244
    4. ' beams' → logprob: -8.257375717163086
    5. '
' → logprob: -9.257375717163086
    6. '   ' → logprob: -10.007375717163086
    7. '	be' → logprob: -10.507375717163086
    8. ' be' → logprob: -10.632375717163086
    9. '(be' → logprob: -10.632375717163086
    10. 'b' → logprob: -11.757375717163086

Token 702: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021698467433452606
    2. '       ' → logprob: -3.896698474884033
    3. '   ' → logprob: -7.396698474884033
    4. 'be' → logprob: -8.146697998046875
    5. ' beams' → logprob: -8.771697998046875
    6. '<|end|>' → logprob: -10.896697998046875
    7. '
' → logprob: -11.271697998046875
    8. ' be' → logprob: -11.396697998046875
    9. '         ' → logprob: -11.396697998046875
    10. '	be' → logprob: -11.521697998046875

Token 703: ' beams' (ID: 81992)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.013151166960597038
    2. '       ' → logprob: -4.888151168823242
    3. ' beams' → logprob: -5.388151168823242
    4. '           ' → logprob: -7.013151168823242
    5. '   ' → logprob: -11.013151168823242
    6. ' be' → logprob: -11.263151168823242
    7. '	be' → logprob: -11.388151168823242
    8. 'beam' → logprob: -12.263151168823242
    9. 'Be' → logprob: -12.638151168823242
    10. 'b' → logprob: -13.013151168823242

Token 704: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.782141569303349e-05
    2. '.' → logprob: -9.25009822845459
    3. '.ap' → logprob: -13.87509822845459
    4. '.app' → logprob: -14.25009822845459
    5. ' .' → logprob: -16.500097274780273
    6. '.extend' → logprob: -17.375097274780273
    7. 'append' → logprob: -18.250097274780273
    8. '.Append' → logprob: -18.750097274780273
    9. '.add' → logprob: -19.500097274780273
    10. '.push' → logprob: -19.875097274780273

Token 705: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.004338971804827452
    2. '(' → logprob: -5.50433874130249
    3. '(x' → logprob: -8.254339218139648
    4. ' (' → logprob: -15.379339218139648
    5. '[(' → logprob: -17.00433921813965
    6. ' ((' → logprob: -17.12933921813965
    7. '(((' → logprob: -17.62933921813965
    8. '   ' → logprob: -17.87933921813965
    9. '(
' → logprob: -17.87933921813965
    10. ' ' → logprob: -19.12933921813965

Token 706: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.9361264946837764e-07
    2. ' x' → logprob: -16.125
    3. ')x' → logprob: -17.625
    4. '(x' → logprob: -18.5
    5. ',x' → logprob: -22.0
    6. '	x' → logprob: -22.5
    7. '"x' → logprob: -22.5
    8. ')' → logprob: -22.625
    9. '   ' → logprob: -22.75
    10. '{x' → logprob: -22.875

Token 707: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.684157026233152e-05
    2. 'x' → logprob: -9.500077247619629
    3. '```' → logprob: -14.125077247619629
    4. ',' → logprob: -14.375077247619629
    5. ' ' → logprob: -16.312576293945312
    6. 'w' → logprob: -16.562576293945312
    7. ')' → logprob: -17.187576293945312
    8. '   ' → logprob: -17.187576293945312
    9. 'a' → logprob: -17.187576293945312
    10. '[' → logprob: -17.437576293945312

Token 708: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002198676229454577
    2. ',y' → logprob: -8.50022029876709
    3. ' ,' → logprob: -11.12522029876709
    4. ',
' → logprob: -13.62522029876709
    5. 'y' → logprob: -15.00022029876709
    6. ' y' → logprob: -16.625219345092773
    7. ',x' → logprob: -17.875219345092773
    8. 'x' → logprob: -18.625219345092773
    9. ',
' → logprob: -19.625219345092773
    10. '_,' → logprob: -19.750219345092773

Token 709: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -2.7848862373502925e-05
    2. ' y' → logprob: -10.500027656555176
    3. 'x' → logprob: -16.000028610229492
    4. '<|end|>' → logprob: -16.750028610229492
    5. ' ' → logprob: -17.750028610229492
    6. ')y' → logprob: -18.250028610229492
    7. 'Y' → logprob: -19.000028610229492
    8. '   ' → logprob: -19.250028610229492
    9. ''y' → logprob: -19.375028610229492
    10. '	y' → logprob: -19.500028610229492

Token 710: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003773835487663746
    2. 'y' → logprob: -5.6287736892700195
    3. ',' → logprob: -8.87877368927002
    4. ' y' → logprob: -10.87877368927002
    5. ' ' → logprob: -11.87877368927002
    6. '   ' → logprob: -13.00377368927002
    7. '<|end|>' → logprob: -13.00377368927002
    8. ',y' → logprob: -14.12877368927002
    9. '<|end|>' → logprob: -14.25377368927002
    10. '```' → logprob: -14.50377368927002

Token 711: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.417976379045285e-05
    2. ' ,' → logprob: -10.625043869018555
    3. ',x' → logprob: -11.000043869018555
    4. ',
' → logprob: -12.875043869018555
    5. 'x' → logprob: -14.500043869018555
    6. ',y' → logprob: -17.375043869018555
    7. ' x' → logprob: -18.375043869018555
    8. '```' → logprob: -19.250043869018555
    9. ',

' → logprob: -19.625043869018555
    10. ')' → logprob: -19.625043869018555

Token 712: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -8.494741632603109e-05
    2. ' x' → logprob: -9.37508487701416
    3. '	x' → logprob: -19.000085830688477
    4. '   ' → logprob: -19.000085830688477
    5. ' ' → logprob: -19.375085830688477
    6. ')x' → logprob: -19.625085830688477
    7. '(x' → logprob: -19.625085830688477
    8. '  ' → logprob: -20.375085830688477
    9. ',' → logprob: -20.500085830688477
    10. '    ' → logprob: -20.500085830688477

Token 713: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005175524391233921
    2. ',' → logprob: -5.630175590515137
    3. '1' → logprob: -6.505175590515137
    4. 'x' → logprob: -9.630175590515137
    5. ',x' → logprob: -12.005175590515137
    6. ' ' → logprob: -13.005175590515137
    7. '   ' → logprob: -13.380175590515137
    8. '```' → logprob: -13.505175590515137
    9. '-' → logprob: -14.255175590515137
    10. ' ,' → logprob: -15.505175590515137

Token 714: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.004696090007201e-05
    2. ' ,' → logprob: -10.125069618225098
    3. ',y' → logprob: -10.625069618225098
    4. 'y' → logprob: -12.500069618225098
    5. ' y' → logprob: -14.250069618225098
    6. '<|end|>' → logprob: -14.625069618225098
    7. ',
' → logprob: -15.125069618225098
    8. 'x' → logprob: -15.375069618225098
    9. '```' → logprob: -15.875069618225098
    10. ',x' → logprob: -16.875070571899414

Token 715: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0004894073354080319
    2. ' y' → logprob: -7.625489234924316
    3. 'x' → logprob: -14.625489234924316
    4. '<|end|>' → logprob: -15.125489234924316
    5. '   ' → logprob: -15.500489234924316
    6. ' ' → logprob: -16.000490188598633
    7. '	y' → logprob: -16.500490188598633
    8. ')y' → logprob: -17.000490188598633
    9. '    ' → logprob: -17.250490188598633
    10. '```' → logprob: -17.250490188598633

Token 716: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.537868779967539e-06
    2. ' ' → logprob: -12.000008583068848
    3. 'y' → logprob: -14.125008583068848
    4. 'x' → logprob: -14.500008583068848
    5. '```' → logprob: -15.250008583068848
    6. '   ' → logprob: -16.00000762939453
    7. '5' → logprob: -16.00000762939453
    8. '1' → logprob: -16.00000762939453
    9. 'z' → logprob: -16.75000762939453
    10. ',' → logprob: -16.81250762939453

Token 717: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.676292231422849e-05
    2. ' ,' → logprob: -11.375017166137695
    3. ',t' → logprob: -12.250017166137695
    4. ',
' → logprob: -15.375017166137695
    5. 't' → logprob: -15.750017166137695
    6. '),' → logprob: -17.375017166137695
    7. '```' → logprob: -18.000017166137695
    8. 's' → logprob: -18.250017166137695
    9. '‌,' → logprob: -19.000017166137695
    10. '`,' → logprob: -19.250017166137695

Token 718: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -4.024604277219623e-05
    2. ' t' → logprob: -10.125040054321289
    3. '`t' → logprob: -16.87504005432129
    4. '   ' → logprob: -17.62504005432129
    5. ')t' → logprob: -17.75004005432129
    6. 'float' → logprob: -18.50004005432129
    7. '	t' → logprob: -18.75004005432129
    8. '_t' → logprob: -19.50004005432129
    9. ')' → logprob: -19.62504005432129
    10. '(t' → logprob: -19.75004005432129

Token 719: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -7.40998875699006e-05
    2. '))
' → logprob: -9.62507438659668
    3. ' ))' → logprob: -11.87507438659668
    4. '))

' → logprob: -14.75007438659668
    5. '       ' → logprob: -15.37507438659668
    6. ')' → logprob: -15.50007438659668
    7. '   ' → logprob: -16.12507438659668
    8. '));' → logprob: -16.25007438659668
    9. ')))' → logprob: -17.87507438659668
    10. '))
' → logprob: -18.00007438659668

Token 720: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.286655992269516
    2. 'found' → logprob: -2.786655902862549
    3. '```' → logprob: -2.786655902862549
    4. 'possible' → logprob: -3.161655902862549
    5. '<|end|>' → logprob: -4.411655902862549
    6. 'valid' → logprob: -4.536655902862549
    7. 'max' → logprob: -4.911655902862549
    8. 'positions' → logprob: -5.036655902862549
    9. '   ' → logprob: -5.036655902862549
    10. 'best' → logprob: -5.036655902862549

Token 721: ' #' (ID: 1069)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'found' → logprob: -1.4711830615997314
    2. 'c' → logprob: -1.7211830615997314
    3. 'best' → logprob: -1.7211830615997314
    4. 'max' → logprob: -2.3461830615997314
    5. 'safe' → logprob: -2.3461830615997314
    6. 'possible' → logprob: -2.7211830615997314
    7. '       ' → logprob: -3.7211830615997314
    8. 'positions' → logprob: -3.8461830615997314
    9. 'valid' → logprob: -4.096182823181152
    10. 'points' → logprob: -4.221182823181152

Token 722: ' Manuel' (ID: 48715)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.076083779335022
    2. 'best' → logprob: -1.701083779335022
    3. 'found' → logprob: -1.951083779335022
    4. 'safe' → logprob: -2.0760836601257324
    5. 'possible' → logprob: -2.4510836601257324
    6. 'points' → logprob: -3.7010836601257324
    7. 'positions' → logprob: -3.8260836601257324
    8. 'max' → logprob: -4.326083660125732
    9. 'valid' → logprob: -4.951083660125732
    10. 'res' → logprob: -4.951083660125732

Token 723: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0454684495925903
    2. 'for' → logprob: -2.170468330383301
    3. 'ly' → logprob: -2.420468330383301
    4. 'y' → logprob: -2.420468330383301
    5. 'ment' → logprob: -2.670468330383301
    6. 'ement' → logprob: -3.045468330383301
    7. '        
' → logprob: -3.295468330383301
    8. 'positions' → logprob: -3.420468330383301
    9. 's' → logprob: -3.545468330383301
    10. 'def' → logprob: -3.920468330383301

Token 724: ' résoudre' (ID: 134006)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.6282392740249634
    2. ' found' → logprob: -1.7532392740249634
    3. 'found' → logprob: -1.8782392740249634
    4. ' for' → logprob: -2.878239154815674
    5. 'max' → logprob: -3.378239154815674
    6. ' safe' → logprob: -3.378239154815674
    7. ' x' → logprob: -3.503239154815674
    8. ' trouver' → logprob: -3.628239154815674
    9. ' max' → logprob: -3.628239154815674
    10. 'for' → logprob: -4.003239154815674

Token 725: ' le' (ID: 505)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -1.3404496908187866
    2. '       ' → logprob: -1.4654496908187866
    3. 'found' → logprob: -2.840449810028076
    4. '#' → logprob: -2.965449810028076
    5. 'safe' → logprob: -3.215449810028076
    6. 'for' → logprob: -3.340449810028076
    7. ' possible' → logprob: -3.340449810028076
    8. 'max' → logprob: -3.590449810028076
    9. ' safe' → logprob: -3.715449810028076
    10. 'positions' → logprob: -3.840449810028076

Token 726: ' problème' (ID: 35630)
  Prédit: ' problème'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problème' → logprob: -1.0934208631515503
    2. 'pro' → logprob: -1.2184208631515503
    3. 'placement' → logprob: -2.34342098236084
    4. 'proble' → logprob: -2.96842098236084
    5. 'position' → logprob: -3.09342098236084
    6. 'problem' → logprob: -3.21842098236084
    7. 'pb' → logprob: -3.21842098236084
    8. 'plus' → logprob: -3.71842098236084
    9. '
' → logprob: -4.84342098236084
    10. 'place' → logprob: -5.09342098236084

Token 727: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2643367350101471
    2. '        
' → logprob: -1.8893367052078247
    3. '
' → logprob: -3.3893368244171143
    4. 'max' → logprob: -5.014336585998535
    5. 'possible' → logprob: -5.014336585998535
    6. 'points' → logprob: -5.264336585998535
    7. '<|end|>' → logprob: -5.264336585998535
    8. '#' → logprob: -5.264336585998535
    9. 'positions' → logprob: -5.389336585998535
    10. 'found' → logprob: -5.889336585998535

Token 728: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031917323358356953
    2. '        
' → logprob: -6.378191947937012
    3. '
' → logprob: -7.503191947937012
    4. ' found' → logprob: -8.503191947937012
    5. 'found' → logprob: -9.128191947937012
    6. 'import' → logprob: -9.253191947937012
    7. ' for' → logprob: -9.253191947937012
    8. 'possible' → logprob: -9.503191947937012
    9. '```' → logprob: -10.003191947937012
    10. '        ' → logprob: -10.003191947937012

Token 729: ' #' (ID: 1069)
  Prédit: ' safe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' safe' → logprob: -1.7014884948730469
    2. '       ' → logprob: -1.8264884948730469
    3. ' found' → logprob: -2.076488494873047
    4. 'found' → logprob: -2.576488494873047
    5. ' candidates' → logprob: -2.701488494873047
    6. ' best' → logprob: -2.826488494873047
    7. 'possible' → logprob: -3.076488494873047
    8. ' positions' → logprob: -3.201488494873047
    9. ' possible' → logprob: -3.326488494873047
    10. ' min' → logprob: -3.326488494873047

Token 730: ' Nous' (ID: 20193)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'found' → logprob: -1.5718088150024414
    2. ' safe' → logprob: -1.9468088150024414
    3. 'possible' → logprob: -2.3218088150024414
    4. 'safe' → logprob: -2.4468088150024414
    5. ' best' → logprob: -2.5718088150024414
    6. '#' → logprob: -2.8218088150024414
    7. 'best' → logprob: -2.8218088150024414
    8. ' found' → logprob: -3.1968088150024414
    9. 'positions' → logprob: -3.3218088150024414
    10. ' candidates' → logprob: -3.6968088150024414

Token 731: ' voulons' (ID: 195442)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3660527169704437
    2. ' allons' → logprob: -2.2410526275634766
    3. ' devons' → logprob: -3.1160526275634766
    4. 'import' → logprob: -3.3660526275634766
    5. ' cherch' → logprob: -3.7410526275634766
    6. ' voulons' → logprob: -3.7410526275634766
    7. '#' → logprob: -4.366052627563477
    8. ' pouvons' → logprob: -4.616052627563477
    9. ' recherch' → logprob: -5.241052627563477
    10. 'for' → logprob: -5.616052627563477

Token 732: ' savoir' (ID: 22835)
  Prédit: 'placer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'placer' → logprob: -0.767894983291626
    2. ' placer' → logprob: -1.267894983291626
    3. 'tr' → logprob: -2.017894983291626
    4. ' trouver' → logprob: -2.892894983291626
    5. '   ' → logprob: -3.517894983291626
    6. 'max' → logprob: -4.642894744873047
    7. '       ' → logprob: -5.892894744873047
    8. 'min' → logprob: -5.892894744873047
    9. 'position' → logprob: -5.892894744873047
    10. ' déterminer' → logprob: -6.017894744873047

Token 733: ' s' (ID: 265)
  Prédit: ' si'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -1.3361769914627075
    2. ' if' → logprob: -1.4611769914627075
    3. ' s' → logprob: -1.5861769914627075
    4. 'si' → logprob: -2.086176872253418
    5. 'if' → logprob: -2.586176872253418
    6. '       ' → logprob: -3.211176872253418
    7. 's' → logprob: -3.586176872253418
    8. ' combien' → logprob: -3.836176872253418
    9. '        
' → logprob: -6.086176872253418
    10. '#' → logprob: -6.461176872253418

Token 734: ''il' (ID: 14683)
  Prédit: ''il'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''il' → logprob: -0.11440936475992203
    2. '       ' → logprob: -2.6144094467163086
    3. 'u' → logprob: -4.364409446716309
    4. 'il' → logprob: -4.864409446716309
    5. '’il' → logprob: -4.989409446716309
    6. 'i' → logprob: -5.114409446716309
    7. '   ' → logprob: -8.114409446716309
    8. ''' → logprob: -8.614409446716309
    9. 'ur' → logprob: -8.739409446716309
    10. 'au' → logprob: -8.989409446716309

Token 735: ' existe' (ID: 19498)
  Prédit: ' existe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' existe' → logprob: -0.2630935311317444
    2. ' y' → logprob: -1.6380934715270996
    3. 'y' → logprob: -4.2630934715271
    4. ' est' → logprob: -4.6380934715271
    5. 'ex' → logprob: -5.2630934715271
    6. 'est' → logprob: -5.5130934715271
    7. ''y' → logprob: -7.5130934715271
    8. ''ex' → logprob: -7.7630934715271
    9. ' possible' → logprob: -7.7630934715271
    10. 'exists' → logprob: -7.8880934715271

Token 736: ' au' (ID: 2791)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.11338537931442261
    2. ' au' → logprob: -2.7383854389190674
    3. 'un' → logprob: -3.9883854389190674
    4. ' une' → logprob: -4.363385200500488
    5. 'au' → logprob: -5.363385200500488
    6. ' ' → logprob: -5.613385200500488
    7. ' a' → logprob: -6.488385200500488
    8. '   ' → logprob: -7.988385200500488
    9. 'une' → logprob: -8.363385200500488
    10. 'a' → logprob: -8.738385200500488

Token 737: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.1668131798505783
    2. 'least' → logprob: -1.9168131351470947
    3. ' moins' → logprob: -5.916813373565674
    4. 'minimum' → logprob: -6.416813373565674
    5. ' least' → logprob: -7.291813373565674
    6. 'mo' → logprob: -7.541813373565674
    7. 'less' → logprob: -8.041812896728516
    8. 'any' → logprob: -9.291812896728516
    9. 'menos' → logprob: -9.291812896728516
    10. '```' → logprob: -9.416812896728516

Token 738: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.04704604297876358
    2. 'un' → logprob: -3.297045946121216
    3. ' une' → logprob: -5.297046184539795
    4. 'une' → logprob: -6.797046184539795
    5. ' ' → logprob: -6.922046184539795
    6. '       ' → logprob: -7.547046184539795
    7. '    ' → logprob: -7.797046184539795
    8. '   ' → logprob: -8.797045707702637
    9. '        ' → logprob: -9.172045707702637
    10. ' a' → logprob: -9.297045707702637

Token 739: ' point' (ID: 2438)
  Prédit: ' point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' point' → logprob: -0.5332521200180054
    2. 'point' → logprob: -1.0332521200180054
    3. ' px' → logprob: -3.908252239227295
    4. 'px' → logprob: -4.908252239227295
    5. ' emplacement' → logprob: -5.033252239227295
    6. 'x' → logprob: -5.283252239227295
    7. ' endroit' → logprob: -5.533252239227295
    8. ' ' → logprob: -5.533252239227295
    9. ' x' → logprob: -6.283252239227295
    10. 'em' → logprob: -6.658252239227295

Token 740: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7971426844596863
    2. '(x' → logprob: -1.672142744064331
    3. ' dans' → logprob: -1.922142744064331
    4. ' x' → logprob: -3.172142744064331
    5. 'dans' → logprob: -3.172142744064331
    6. ' sur' → logprob: -3.797142744064331
    7. 'x' → logprob: -4.172142505645752
    8. 'sur' → logprob: -4.297142505645752
    9. '        ' → logprob: -4.547142505645752
    10. '       ' → logprob: -4.547142505645752

Token 741: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.024806387722492218
    2. 'px' → logprob: -4.024806499481201
    3. ' x' → logprob: -5.524806499481201
    4. ')' → logprob: -6.774806499481201
    5. ' px' → logprob: -6.774806499481201
    6. ')x' → logprob: -9.024806022644043
    7. '0' → logprob: -9.899806022644043
    8. ',' → logprob: -10.524806022644043
    9. ' ' → logprob: -10.649806022644043
    10. '   ' → logprob: -11.024806022644043

Token 742: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07365133613348007
    2. ' ,' → logprob: -3.0736513137817383
    3. ',y' → logprob: -3.8236513137817383
    4. ' y' → logprob: -6.823651313781738
    5. '=' → logprob: -7.448651313781738
    6. ')' → logprob: -7.823651313781738
    7. ' ' → logprob: -8.073651313781738
    8. '<|end|>' → logprob: -8.698651313781738
    9. ' =' → logprob: -9.073651313781738
    10. '0' → logprob: -9.823651313781738

Token 743: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003626081394031644
    2. ' )' → logprob: -5.878625869750977
    3. ',' → logprob: -7.378625869750977
    4. ')
' → logprob: -9.503625869750977
    5. ' dans' → logprob: -9.878625869750977
    6. 'dans' → logprob: -10.753625869750977
    7. '   ' → logprob: -11.503625869750977
    8. ' ,' → logprob: -11.628625869750977
    9. '),' → logprob: -11.878625869750977
    10. ' sur' → logprob: -12.378625869750977

Token 744: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.31664007902145386
    2. 'dans' → logprob: -2.0666401386260986
    3. ' sur' → logprob: -2.8166401386260986
    4. '       ' → logprob: -3.4416401386260986
    5. ',' → logprob: -3.9416401386260986
    6. 'sur' → logprob: -4.6916399002075195
    7. '        ' → logprob: -5.8166399002075195
    8. ' à' → logprob: -6.0666399002075195
    9. '   ' → logprob: -6.3166399002075195
    10. ' ' → logprob: -6.4416399002075195

Token 745: ' [' (ID: 723)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3263799846172333
    2. 'range' → logprob: -1.3263800144195557
    3. ' la' → logprob: -4.576379776000977
    4. 'la' → logprob: -6.951379776000977
    5. 'le' → logprob: -7.826379776000977
    6. ' W' → logprob: -8.201379776000977
    7. '   ' → logprob: -8.201379776000977
    8. 'l' → logprob: -8.451379776000977
    9. 'W' → logprob: -8.576379776000977
    10. ' le' → logprob: -9.076379776000977

Token 746: 'R' (ID: 49)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08995146304368973
    2. '1' → logprob: -2.589951515197754
    3. 'R' → logprob: -4.714951515197754
    4. ' ' → logprob: -6.714951515197754
    5. ' R' → logprob: -7.714951515197754
    6. '   ' → logprob: -8.589951515197754
    7. ',' → logprob: -9.339951515197754
    8. ']' → logprob: -10.089951515197754
    9. '(' → logprob: -10.964951515197754
    10. 'r' → logprob: -11.839951515197754

Token 747: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009583720937371254
    2. ' ,' → logprob: -4.759583950042725
    3. ',R' → logprob: -7.509583950042725
    4. ' +' → logprob: -8.634583473205566
    5. '+' → logprob: -9.009583473205566
    6. ',W' → logprob: -9.134583473205566
    7. ',
' → logprob: -12.009583473205566
    8. 'R' → logprob: -13.009583473205566
    9. ',H' → logprob: -13.634583473205566
    10. '
' → logprob: -13.634583473205566

Token 748: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.04875972867012024
    2. ' W' → logprob: -3.048759698867798
    3. '   ' → logprob: -9.798759460449219
    4. ' ' → logprob: -10.173759460449219
    5. 'R' → logprob: -10.923759460449219
    6. 'H' → logprob: -11.298759460449219
    7. '
' → logprob: -11.423759460449219
    8. '	W' → logprob: -11.673759460449219
    9. ',' → logprob: -12.048759460449219
    10. '  ' → logprob: -12.798759460449219

Token 749: '-R' (ID: 12401)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3875012993812561
    2. '-' → logprob: -1.3875012397766113
    3. '-R' → logprob: -2.6375012397766113
    4. ' ' → logprob: -11.76250171661377
    5. ',' → logprob: -14.26250171661377
    6. '+' → logprob: -14.76250171661377
    7. '   ' → logprob: -15.01250171661377
    8. '
' → logprob: -15.01250171661377
    9. '-W' → logprob: -15.38750171661377
    10. '-D' → logprob: -15.51250171661377

Token 750: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2577274739742279
    2. ',' → logprob: -1.5077275037765503
    3. ' ]' → logprob: -6.38272762298584
    4. '],' → logprob: -6.88272762298584
    5. '][' → logprob: -6.88272762298584
    6. ' ,' → logprob: -7.00772762298584
    7. ' ' → logprob: -7.75772762298584
    8. ']
' → logprob: -8.38272762298584
    9. '-' → logprob: -8.75772762298584
    10. '   ' → logprob: -9.00772762298584

Token 751: ' x' (ID: 1215)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009806263260543346
    2. ' ,' → logprob: -4.884806156158447
    3. ',
' → logprob: -6.384806156158447
    4. ']' → logprob: -8.259806632995605
    5. '       ' → logprob: -9.259806632995605
    6. ')' → logprob: -10.384806632995605
    7. '+' → logprob: -10.509806632995605
    8. '...' → logprob: -11.134806632995605
    9. '
' → logprob: -11.509806632995605
    10. '        ' → logprob: -11.759806632995605

Token 752: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.22767096757888794
    2. '[R' → logprob: -2.227670907974243
    3. ' [' → logprob: -2.352670907974243
    4. ' ' → logprob: -8.477670669555664
    5. ' y' → logprob: -8.602670669555664
    6. ',' → logprob: -9.477670669555664
    7. '[y' → logprob: -10.102670669555664
    8. '   ' → logprob: -10.102670669555664
    9. 'y' → logprob: -10.227670669555664
    10. ' ' → logprob: -10.602670669555664

Token 753: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.00018685187387745827
    2. ' R' → logprob: -8.625186920166016
    3. ' ' → logprob: -13.125186920166016
    4. 'H' → logprob: -13.125186920166016
    5. '   ' → logprob: -13.625186920166016
    6. '	R' → logprob: -15.250186920166016
    7. '
' → logprob: -15.375186920166016
    8. ' ' → logprob: -15.562686920166016
    9. '(R' → logprob: -15.562686920166016
    10. '`' → logprob: -15.750186920166016

Token 754: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.407366916188039e-05
    2. ',R' → logprob: -10.375054359436035
    3. ' ,' → logprob: -10.875054359436035
    4. ',H' → logprob: -13.125054359436035
    5. ',
' → logprob: -14.500054359436035
    6. ',W' → logprob: -14.875054359436035
    7. '<|end|>' → logprob: -15.125054359436035
    8. '‌,' → logprob: -15.375054359436035
    9. '<|end|>' → logprob: -16.25005340576172
    10. 'R' → logprob: -16.87505340576172

Token 755: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0003391574718989432
    2. ' H' → logprob: -8.00033950805664
    3. 'R' → logprob: -13.50033950805664
    4. ' ' → logprob: -13.75033950805664
    5. '```' → logprob: -14.37533950805664
    6. '   ' → logprob: -15.25033950805664
    7. ' ' → logprob: -16.37533950805664
    8. ',' → logprob: -16.62533950805664
    9. ',H' → logprob: -17.25033950805664
    10. '`' → logprob: -17.37533950805664

Token 756: '-R' (ID: 12401)
  Prédit: '-R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-R' → logprob: -0.00017994173686020076
    2. ' -' → logprob: -8.8751802444458
    3. '-' → logprob: -10.1251802444458
    4. ' ' → logprob: -18.250179290771484
    5. 'R' → logprob: -18.500179290771484
    6. '-
' → logprob: -20.000179290771484
    7. '−' → logprob: -20.125179290771484
    8. ']' → logprob: -20.375179290771484
    9. '-P' → logprob: -20.500179290771484
    10. '' → logprob: -20.750179290771484

Token 757: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00024263552040793002
    2. ' ]' → logprob: -8.750242233276367
    3. ']
' → logprob: -9.500242233276367
    4. '],' → logprob: -12.000242233276367
    5. ']\' → logprob: -14.250242233276367
    6. '   ' → logprob: -14.750242233276367
    7. ']
' → logprob: -14.875242233276367
    8. '])' → logprob: -15.250242233276367
    9. ' ' → logprob: -15.375242233276367
    10. ']

' → logprob: -15.750242233276367

Token 758: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004988962784409523
    2. ',' → logprob: -5.879989147186279
    3. '        
' → logprob: -7.254989147186279
    4. ' qui' → logprob: -8.004988670349121
    5. '   ' → logprob: -8.254988670349121
    6. '
' → logprob: -8.504988670349121
    7. ' that' → logprob: -8.879988670349121
    8. ' pour' → logprob: -9.754988670349121
    9. ' et' → logprob: -9.879988670349121
    10. ' avec' → logprob: -10.004988670349121

Token 759: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035555274225771427
    2. ',' → logprob: -6.5035552978515625
    3. '        
' → logprob: -7.7535552978515625
    4. ' ' → logprob: -8.003555297851562
    5. '<|end|>' → logprob: -8.003555297851562
    6. '   ' → logprob: -8.503555297851562
    7. '.' → logprob: -8.628555297851562
    8. ' for' → logprob: -9.378555297851562
    9. ' ,' → logprob: -10.003555297851562
    10. ' that' → logprob: -10.003555297851562

Token 760: ' qui' (ID: 2780)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.1671779453754425
    2. '       ' → logprob: -2.41717791557312
    3. ' found' → logprob: -3.16717791557312
    4. 'possible' → logprob: -4.542178153991699
    5. 'for' → logprob: -5.542178153991699
    6. ' for' → logprob: -6.417178153991699
    7. 'import' → logprob: -6.917178153991699
    8. ' possible' → logprob: -7.042178153991699
    9. ' step' → logprob: -7.042178153991699
    10. 'step' → logprob: -7.042178153991699

Token 761: ' ne' (ID: 453)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.258357971906662
    2. ' is' → logprob: -2.5083580017089844
    3. 'is' → logprob: -3.0083580017089844
    4. ' est' → logprob: -3.1333580017089844
    5. 'n' → logprob: -4.008358001708984
    6. 's' → logprob: -4.383358001708984
    7. '       ' → logprob: -5.133358001708984
    8. '        
' → logprob: -5.633358001708984
    9. '```' → logprob: -6.383358001708984
    10. 'ne' → logprob: -6.633358001708984

Token 762: ' chev' (ID: 127415)
  Prédit: 'che'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'che' → logprob: -0.1463380604982376
    2. ' chev' → logprob: -2.8963379859924316
    3. 'over' → logprob: -3.0213379859924316
    4. 'est' → logprob: -4.771337985992432
    5. 'se' → logprob: -4.896337985992432
    6. 'is' → logprob: -5.271337985992432
    7. 'so' → logprob: -6.771337985992432
    8. 'c' → logprob: -7.146337985992432
    9. '   ' → logprob: -7.271337985992432
    10. 't' → logprob: -7.271337985992432

Token 763: 'auche' (ID: 143141)
  Prédit: 'auche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auche' → logprob: -0.005476129241287708
    2. 'au' → logprob: -5.755475997924805
    3. 'a' → logprob: -7.005475997924805
    4. 'aule' → logprob: -7.630475997924805
    5. 'over' → logprob: -8.255475997924805
    6. 'auch' → logprob: -8.880475997924805
    7. 'uvre' → logprob: -9.630475997924805
    8. 'r' → logprob: -9.880475997924805
    9. 'èche' → logprob: -10.005475997924805
    10. '   ' → logprob: -10.005475997924805

Token 764: ' aucun' (ID: 41678)
  Prédit: ' aucun'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aucun' → logprob: -0.031110621988773346
    2. 'auc' → logprob: -3.6561105251312256
    3. ' pas' → logprob: -5.906110763549805
    4. ' aucune' → logprob: -6.781110763549805
    5. 'pas' → logprob: -7.406110763549805
    6. 'au' → logprob: -9.156110763549805
    7. ' Aucun' → logprob: -10.156110763549805
    8. ' ' → logprob: -10.906110763549805
    9. 'r' → logprob: -11.031110763549805
    10. ' auc' → logprob: -11.156110763549805

Token 765: ' rayon' (ID: 80967)
  Prédit: ' rayon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rayon' → logprob: -0.09010256081819534
    2. 'laser' → logprob: -3.2151026725769043
    3. 'ray' → logprob: -4.090102672576904
    4. ' fais' → logprob: -4.590102672576904
    5. ' laser' → logprob: -4.840102672576904
    6. 'beam' → logprob: -5.840102672576904
    7. ' des' → logprob: -6.465102672576904
    8. 'ra' → logprob: -6.465102672576904
    9. 'f' → logprob: -7.090102672576904
    10. '
' → logprob: -7.215102672576904

Token 766: ' laser' (ID: 23429)
  Prédit: ' laser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' laser' → logprob: -0.6610121726989746
    2. 'laser' → logprob: -0.7860121726989746
    3. '       ' → logprob: -3.6610121726989746
    4. '   ' → logprob: -7.036012172698975
    5. ' lasers' → logprob: -7.786012172698975
    6. 'las' → logprob: -8.286012649536133
    7. ' de' → logprob: -8.661012649536133
    8. ',' → logprob: -9.036012649536133
    9. 'de' → logprob: -9.536012649536133
    10. ' lazer' → logprob: -9.911012649536133

Token 767: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.050565484911203384
    2. '
' → logprob: -3.925565481185913
    3. '        
' → logprob: -4.550565719604492
    4. '.' → logprob: -4.675565719604492
    5. ',' → logprob: -5.050565719604492
    6. '.
' → logprob: -6.425565719604492
    7. ',
' → logprob: -7.300565719604492
    8. ':' → logprob: -9.175565719604492
    9. '   ' → logprob: -9.175565719604492
    10. ':
' → logprob: -9.300565719604492

Token 768: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023593438789248466
    2. '        
' → logprob: -4.148593425750732
    3. '
' → logprob: -5.023593425750732
    4. 'for' → logprob: -8.77359390258789
    5. ' for' → logprob: -8.89859390258789
    6. '   ' → logprob: -9.02359390258789
    7. '    
' → logprob: -9.14859390258789
    8. '  
' → logprob: -9.27359390258789
    9. '```' → logprob: -9.39859390258789
    10. '<|end|>' → logprob: -9.52359390258789

Token 769: ' #' (ID: 1069)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.24934114515781403
    2. '       ' → logprob: -2.2493412494659424
    3. 'possible' → logprob: -2.4993412494659424
    4. ' found' → logprob: -4.999341011047363
    5. 'safe' → logprob: -5.124341011047363
    6. '#' (adapté à ' #') → logprob: -5.499341011047363
    7. 'import' → logprob: -5.874341011047363
    8. '
' → logprob: -5.999341011047363
    9. 'step' → logprob: -5.999341011047363
    10. 'for' → logprob: -6.249341011047363

Token 770: ' La' (ID: 3038)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.14955253899097443
    2. 'for' → logprob: -3.024552583694458
    3. '       ' → logprob: -3.274552583694458
    4. 'step' → logprob: -3.899552583694458
    5. 'possible' → logprob: -4.274552345275879
    6. ' found' → logprob: -5.274552345275879
    7. '#' → logprob: -5.649552345275879
    8. 'best' → logprob: -6.524552345275879
    9. '
' → logprob: -6.899552345275879
    10. 'Found' → logprob: -6.899552345275879

Token 771: ' machine' (ID: 7342)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.369756281375885
    2. '#' → logprob: -2.3697562217712402
    3. 'pas' → logprob: -2.3697562217712402
    4. ' step' → logprob: -3.6197562217712402
    5. 'import' → logprob: -4.61975622177124
    6. 'tail' → logprob: -4.86975622177124
    7. 'distance' → logprob: -4.99475622177124
    8. 'zone' → logprob: -5.24475622177124
    9. 'precision' → logprob: -5.24475622177124
    10. 'gr' → logprob: -5.36975622177124

Token 772: ' étant' (ID: 47869)
  Prédit: ' peut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.6975306272506714
    2. ' doit' → logprob: -2.197530746459961
    3. 'radius' → logprob: -2.697530746459961
    4. ' a' → logprob: -3.197530746459961
    5. ' pourra' → logprob: -3.197530746459961
    6. 'pe' → logprob: -3.322530746459961
    7. ' radius' → logprob: -3.322530746459961
    8. ' est' → logprob: -4.072530746459961
    9. ' de' → logprob: -4.322530746459961
    10. ' rayon' → logprob: -4.322530746459961

Token 773: ' circul' (ID: 20568)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.6211144328117371
    2. 'de' → logprob: -1.1211144924163818
    3. ' de' → logprob: -3.496114492416382
    4. 'c' → logprob: -3.496114492416382
    5. 'plac' → logprob: -3.871114492416382
    6. 'cir' → logprob: -4.121114253997803
    7. ' un' → logprob: -4.246114253997803
    8. 'r' → logprob: -4.871114253997803
    9. 'une' → logprob: -6.246114253997803
    10. ' ' → logprob: -6.371114253997803

Token 774: 'aire' (ID: 8189)
  Prédit: 'aire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.01695822738111019
    2. 'a' → logprob: -4.266958236694336
    3. 'e' → logprob: -7.391958236694336
    4. 'ire' → logprob: -7.641958236694336
    5. 'are' → logprob: -8.016958236694336
    6. '#' → logprob: -8.141958236694336
    7. '```' → logprob: -8.516958236694336
    8. 'air' → logprob: -8.766958236694336
    9. '<' → logprob: -9.516958236694336
    10. '{' → logprob: -9.891958236694336

Token 775: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006580011919140816
    2. '#' → logprob: -5.881579875946045
    3. ',
' → logprob: -6.256579875946045
    4. 'radius' → logprob: -6.756579875946045
    5. ' radius' → logprob: -8.131580352783203
    6. '(radius' → logprob: -9.381580352783203
    7. 'e' → logprob: -9.506580352783203
    8. 'import' → logprob: -10.256580352783203
    9. 'de' → logprob: -10.256580352783203
    10. ' et' → logprob: -10.631580352783203

Token 776: ' rayon' (ID: 80967)
  Prédit: 'ray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ray' → logprob: -0.25536397099494934
    2. 'radius' → logprob: -1.505363941192627
    3. ' rayon' → logprob: -6.005363941192627
    4. ' radius' → logprob: -7.505363941192627
    5. '```' → logprob: -8.755364418029785
    6. 'diam' → logprob: -9.505364418029785
    7. 'r' → logprob: -9.880364418029785
    8. ' ' → logprob: -10.380364418029785
    9. '   ' → logprob: -10.755364418029785
    10. 'R' → logprob: -11.505364418029785

Token 777: ' R' (ID: 460)
  Prédit: ' R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.2519320547580719
    2. 'R' → logprob: -1.5019320249557495
    3. ' ' → logprob: -13.501932144165039
    4. 'r' → logprob: -14.876932144165039
    5. ' ' → logprob: -15.376932144165039
    6. 'radius' → logprob: -15.376932144165039
    7. ',' → logprob: -15.876932144165039
    8. ' radius' → logprob: -16.12693214416504
    9. '	R' → logprob: -16.25193214416504
    10. ' ,' → logprob: -16.75193214416504

Token 778: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16237518191337585
    2. '       ' → logprob: -2.1623752117156982
    3. ',
' → logprob: -3.4123752117156982
    4. '.' → logprob: -6.662374973297119
    5. '.
' → logprob: -8.912375450134277
    6. '        
' → logprob: -9.037375450134277
    7. ':' → logprob: -9.037375450134277
    8. ' ,' → logprob: -9.412375450134277
    9. '   ' → logprob: -10.412375450134277
    10. ':
' → logprob: -11.037375450134277

Token 779: ' ses' (ID: 6707)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.6066640019416809
    2. '#' → logprob: -1.3566639423370361
    3. 'on' → logprob: -3.106663942337036
    4. '       ' → logprob: -3.231663942337036
    5. ' #' → logprob: -3.481663942337036
    6. ' for' → logprob: -3.731663942337036
    7. 'found' → logprob: -4.231664180755615
    8. 'for' → logprob: -4.481664180755615
    9. ' found' → logprob: -4.856664180755615
    10. 'import' → logprob: -4.856664180755615

Token 780: ' centres' (ID: 43504)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.8743592500686646
    2. 'points' → logprob: -2.124359130859375
    3. 'ray' → logprob: -2.249359130859375
    4. 'center' → logprob: -2.499359130859375
    5. ' centers' → logprob: -3.374359130859375
    6. 'pas' → logprob: -3.374359130859375
    7. 'r' → logprob: -3.499359130859375
    8. 'cent' → logprob: -3.749359130859375
    9. 'radius' → logprob: -3.874359130859375
    10. 'c' → logprob: -4.249359130859375

Token 781: ' val' (ID: 1459)
  Prédit: ' doivent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' doivent' → logprob: -0.06924257427453995
    2. ' peuvent' → logprob: -3.569242477416992
    3. ' possibles' → logprob: -3.944242477416992
    4. ' must' → logprob: -4.944242477416992
    5. ' devront' → logprob: -5.569242477416992
    6. ' possible' → logprob: -6.319242477416992
    7. ' ne' → logprob: -6.819242477416992
    8. 'possible' → logprob: -6.819242477416992
    9. 'must' → logprob: -6.944242477416992
    10. ' can' → logprob: -7.319242477416992

Token 782: 'ides' (ID: 4105)
  Prédit: 'ides'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ides' → logprob: -0.5191516280174255
    2. 'ables' → logprob: -1.3941516876220703
    3. 'ide' → logprob: -2.8941516876220703
    4. 'able' → logprob: -3.2691516876220703
    5. 'id' → logprob: -3.3941516876220703
    6. 'eurs' → logprob: -5.01915168762207
    7. 'ent' → logprob: -5.01915168762207
    8. '```' → logprob: -5.64415168762207
    9. '[' → logprob: -6.64415168762207
    10. 'ues' → logprob: -6.76915168762207

Token 783: ' sont' (ID: 5242)
  Prédit: ' doivent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' doivent' → logprob: -0.06410881876945496
    2. ' peuvent' → logprob: -3.5641088485717773
    3. ' sont' → logprob: -4.939108848571777
    4. ' possibles' → logprob: -5.189108848571777
    5. ' must' → logprob: -5.314108848571777
    6. ' se' → logprob: -5.439108848571777
    7. 's' → logprob: -5.939108848571777
    8. ' =' → logprob: -6.439108848571777
    9. ' devront' → logprob: -6.439108848571777
    10. 'must' → logprob: -6.939108848571777

Token 784: ' dans' (ID: 2671)
  Prédit: ' dans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -1.0570628643035889
    2. ' ceux' → logprob: -1.0570628643035889
    3. 'dans' → logprob: -1.6820628643035889
    4. ' des' → logprob: -3.557062864303589
    5. ' les' → logprob: -3.682062864303589
    6. ' R' → logprob: -4.682063102722168
    7. 'x' → logprob: -4.682063102722168
    8. 'les' → logprob: -5.057063102722168
    9. ' uniquement' → logprob: -5.307063102722168
    10. ' donc' → logprob: -5.307063102722168

Token 785: ' cette' (ID: 7696)
  Prédit: '[R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[R' → logprob: -0.8613028526306152
    2. ' [' → logprob: -1.6113028526306152
    3. '[' → logprob: -2.2363028526306152
    4. 'range' → logprob: -2.3613028526306152
    5. ' range' → logprob: -2.4863028526306152
    6. 'x' → logprob: -3.9863028526306152
    7. '   ' → logprob: -4.111302852630615
    8. '[x' → logprob: -4.111302852630615
    9. ' la' → logprob: -4.236302852630615
    10. ' the' → logprob: -4.611302852630615

Token 786: ' zone' (ID: 15070)
  Prédit: ' rectangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rectangle' → logprob: -1.2743401527404785
    2. 'interval' → logprob: -1.3993401527404785
    3. ' range' → logprob: -2.2743401527404785
    4. 'range' → logprob: -2.3993401527404785
    5. ' interval' → logprob: -2.5243401527404785
    6. 'rectangle' → logprob: -3.0243401527404785
    7. ' zone' → logprob: -3.5243401527404785
    8. ' espace' → logprob: -3.6493401527404785
    9. ' plage' → logprob: -3.7743401527404785
    10. ' [' → logprob: -4.1493401527404785

Token 787: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05402509495615959
    2. '
' → logprob: -3.679025173187256
    3. '        
' → logprob: -4.179025173187256
    4. '   ' → logprob: -5.304025173187256
    5. '.' → logprob: -5.679025173187256
    6. ',' → logprob: -6.679025173187256
    7. '    
' → logprob: -7.179025173187256
    8. '.
' → logprob: -7.554025173187256
    9. ',
' → logprob: -8.179024696350098
    10. '<|end|>' → logprob: -9.304024696350098

Token 788: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00696637062355876
    2. '        
' → logprob: -5.506966590881348
    3. '
' → logprob: -6.131966590881348
    4. ',' → logprob: -8.631966590881348
    5. '    
' → logprob: -8.756966590881348
    6. '   ' → logprob: -9.006966590881348
    7. '.' → logprob: -9.381966590881348
    8. '<|end|>' → logprob: -9.881966590881348
    9. '  
' → logprob: -10.506966590881348
    10. ',
' → logprob: -10.631966590881348

Token 789: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15224964916706085
    2. 'found' → logprob: -2.527249574661255
    3. ' found' → logprob: -3.402249574661255
    4. 'for' → logprob: -4.527249813079834
    5. ' for' → logprob: -4.652249813079834
    6. '        
' → logprob: -5.902249813079834
    7. 'step' → logprob: -7.277249813079834
    8. ' step' → logprob: -7.277249813079834
    9. '   ' → logprob: -7.652249813079834
    10. 'y' → logprob: -7.652249813079834

Token 790: ' car' (ID: 1669)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12303533405065536
    2. 'found' → logprob: -2.498035430908203
    3. ' found' → logprob: -4.248035430908203
    4. 'import' → logprob: -4.998035430908203
    5. 'for' → logprob: -5.748035430908203
    6. '   ' → logprob: -5.748035430908203
    7. 'possible' → logprob: -6.373035430908203
    8. '        
' → logprob: -6.373035430908203
    9. ' for' → logprob: -6.873035430908203
    10. '
' → logprob: -7.248035430908203

Token 791: ' le' (ID: 505)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.0730253458023071
    2. ' il' → logprob: -1.8230253458023071
    3. 'on' → logprob: -1.9480253458023071
    4. 'il' → logprob: -2.0730252265930176
    5. 'le' → logprob: -2.8230252265930176
    6. ' le' → logprob: -3.1980252265930176
    7. ' elle' → logprob: -3.5730252265930176
    8. ' ils' → logprob: -3.5730252265930176
    9. 'les' → logprob: -4.323025226593018
    10. ' les' → logprob: -4.323025226593018

Token 792: ' disque' (ID: 114222)
  Prédit: ' machine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' machine' → logprob: -1.0259515047073364
    2. ' center' → logprob: -1.7759515047073364
    3. 'machine' → logprob: -2.025951385498047
    4. ' radius' → logprob: -2.150951385498047
    5. 'radius' → logprob: -3.025951385498047
    6. ' code' → logprob: -3.150951385498047
    7. 'center' → logprob: -3.525951385498047
    8. ' rayon' → logprob: -4.025951385498047
    9. ' R' → logprob: -4.400951385498047
    10. 'x' → logprob: -4.400951385498047

Token 793: ' doit' (ID: 21822)
  Prédit: ' doit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' doit' → logprob: -0.8424974083900452
    2. ' de' → logprob: -1.2174973487854004
    3. ' ne' → logprob: -1.5924973487854004
    4. ' must' → logprob: -3.7174973487854004
    5. 'de' → logprob: -4.0924973487854
    6. ' complet' → logprob: -4.3424973487854
    7. ' du' → logprob: -5.7174973487854
    8. 'do' → logprob: -6.3424973487854
    9. ' entier' → logprob: -6.3424973487854
    10. 'radius' → logprob: -6.8424973487854

Token 794: ' être' (ID: 9104)
  Prédit: ' rester'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rester' → logprob: -0.057083796709775925
    2. ' être' → logprob: -3.68208384513855
    3. 'ent' → logprob: -4.182083606719971
    4. ' rest' → logprob: -6.182083606719971
    5. ' be' → logprob: -6.807083606719971
    6. ' ' → logprob: -6.932083606719971
    7. ' se' → logprob: -6.932083606719971
    8. 'être' → logprob: -7.057083606719971
    9. 'e' → logprob: -7.182083606719971
    10. ' entièrement' → logprob: -7.307083606719971

Token 795: ' totalement' (ID: 75109)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.04194580763578415
    2. 'int' → logprob: -4.291945934295654
    3. ' entièrement' → logprob: -4.291945934295654
    4. 'à' → logprob: -6.041945934295654
    5. ' entier' → logprob: -6.041945934295654
    6. ' totalement' → logprob: -6.416945934295654
    7. 'com' → logprob: -6.416945934295654
    8. ' intégr' → logprob: -7.166945934295654
    9. ' complètement' → logprob: -7.166945934295654
    10. ' à' → logprob: -7.291945934295654

Token 796: ' dans' (ID: 2671)
  Prédit: 'conten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'conten' → logprob: -0.44037526845932007
    2. 'à' → logprob: -1.1903753280639648
    3. 'd' → logprob: -4.065375328063965
    4. 'dans' → logprob: -4.190375328063965
    5. 'inside' → logprob: -5.190375328063965
    6. ' à' → logprob: -5.440375328063965
    7. ' contenu' → logprob: -5.690375328063965
    8. 'contained' → logprob: -6.440375328063965
    9. 'in' → logprob: -6.690375328063965
    10. 'cont' → logprob: -7.190375328063965

Token 797: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.48796477913856506
    2. 'le' → logprob: -1.2379647493362427
    3. 'l' → logprob: -2.8629648685455322
    4. ' la' → logprob: -3.9879648685455322
    5. 'the' → logprob: -4.612964630126953
    6. '[' → logprob: -5.112964630126953
    7. 'les' → logprob: -6.737964630126953
    8. ' le' → logprob: -6.737964630126953
    9. 'rectangle' → logprob: -7.112964630126953
    10. ' l' → logprob: -7.737964630126953

Token 798: ' fenêtre' (ID: 109648)
  Prédit: 'rectangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rectangle' → logprob: -0.925678551197052
    2. 'zone' → logprob: -1.5506784915924072
    3. 'surface' → logprob: -1.6756784915924072
    4. 'pl' → logprob: -2.8006784915924072
    5. ' rectangle' → logprob: -2.8006784915924072
    6. 'rect' → logprob: -4.300678730010986
    7. 'plane' → logprob: -4.675678730010986
    8. ' surface' → logprob: -4.675678730010986
    9. 'W' → logprob: -4.800678730010986
    10. ' zone' → logprob: -4.800678730010986

Token 799: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.304997056722641
    2. '
' → logprob: -1.4299970865249634
    3. '        
' → logprob: -4.304996967315674
    4. '.' → logprob: -5.179996967315674
    5. ',' → logprob: -6.304996967315674
    6. '.
' → logprob: -7.179996967315674
    7. ',
' → logprob: -7.554996967315674
    8. '<|end|>' → logprob: -7.929996967315674
    9. '
' → logprob: -8.679997444152832
    10. '   ' → logprob: -8.679997444152832

Token 800: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01579268090426922
    2. '
' → logprob: -4.2657928466796875
    3. '        
' → logprob: -6.5157928466796875
    4. '   ' → logprob: -9.640792846679688
    5. '    
' → logprob: -10.015792846679688
    6. '  
' → logprob: -11.265792846679688
    7. '```' → logprob: -12.265792846679688
    8. ' for' → logprob: -12.390792846679688
    9. '<|end|>' → logprob: -12.390792846679688
    10. ' 
' → logprob: -12.890792846679688

Token 801: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3253808617591858
    2. 'found' → logprob: -1.450380802154541
    3. 'possible' → logprob: -4.200380802154541
    4. '
' → logprob: -4.950380802154541
    5. 'safe' → logprob: -5.325380802154541
    6. 'step' → logprob: -5.450380802154541
    7. '        
' → logprob: -5.825380802154541
    8. 'import' → logprob: -5.950380802154541
    9. 'valid' → logprob: -6.200380802154541
    10. 'margin' → logprob: -7.450380802154541

Token 802: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006191504653543234
    2. '        
' → logprob: -8.125618934631348
    3. '
' → logprob: -8.250618934631348
    4. 'import' → logprob: -10.500618934631348
    5. '   ' → logprob: -10.750618934631348
    6. 'from' → logprob: -12.250618934631348
    7. '#' → logprob: -12.500618934631348
    8. '    
' → logprob: -13.750618934631348
    9. 'found' → logprob: -14.875618934631348
    10. '      ' → logprob: -15.000618934631348

Token 803: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9605109691619873
    2. 'found' → logprob: -1.0855109691619873
    3. '#' (adapté à ' #') → logprob: -2.0855109691619873
    4. 'possible' → logprob: -2.5855109691619873
    5. 'import' → logprob: -3.8355109691619873
    6. 'valid' → logprob: -3.8355109691619873
    7. 'safe' → logprob: -4.460511207580566
    8. '   ' → logprob: -4.960511207580566
    9. 'min' → logprob: -5.460511207580566
    10. 'for' → logprob: -6.460511207580566

Token 804: ' On' (ID: 2160)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.21337445080280304
    2. '#' → logprob: -2.838374376296997
    3. 'possible' → logprob: -3.463374376296997
    4. 'step' → logprob: -3.713374376296997
    5. '       ' → logprob: -3.963374376296997
    6. 'import' → logprob: -3.963374376296997
    7. 'safe' → logprob: -4.338374614715576
    8. 'valid' → logprob: -4.713374614715576
    9. 'min' → logprob: -5.713374614715576
    10. '   ' → logprob: -5.963374614715576

Token 805: ' ne' (ID: 453)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4063729047775269
    2. 'expl' → logprob: -1.9063729047775269
    3. 'for' → logprob: -2.2813730239868164
    4. '       ' → logprob: -2.2813730239868164
    5. 'vais' → logprob: -2.9063730239868164
    6. ' peux' → logprob: -3.1563730239868164
    7. ' va' → logprob: -3.2813730239868164
    8. ' for' → logprob: -3.5313730239868164
    9. ' vais' → logprob: -3.5313730239868164
    10. 'import' → logprob: -3.6563730239868164

Token 806: ' peut' (ID: 9216)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9432561993598938
    2. 'cherche' → logprob: -2.443256139755249
    3. 'continue' → logprob: -2.943256139755249
    4. '#' → logprob: -2.943256139755249
    5. 'pe' → logprob: -3.193256139755249
    6. 'f' → logprob: -3.193256139755249
    7. 'import' → logprob: -3.568256139755249
    8. '       ' → logprob: -3.693256139755249
    9. 'p' → logprob: -3.818256139755249
    10. 'fait' → logprob: -3.818256139755249

Token 807: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.08173444122076035
    2. 'pas' → logprob: -2.5817344188690186
    3. '   ' → logprob: -7.206734657287598
    4. ' ' → logprob: -7.706734657287598
    5. '       ' → logprob: -7.956734657287598
    6. ' malheureusement' → logprob: -8.456734657287598
    7. ' plus' → logprob: -8.831734657287598
    8. ' simplement' → logprob: -9.081734657287598
    9. '        ' → logprob: -9.331734657287598
    10. ' rien' → logprob: -9.706734657287598

Token 808: ' tester' (ID: 51819)
  Prédit: 'faire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faire' → logprob: -1.4742732048034668
    2. 'br' → logprob: -2.224273204803467
    3. 'tester' → logprob: -2.224273204803467
    4. ' tester' → logprob: -2.849273204803467
    5. 'pas' → logprob: -2.849273204803467
    6. '   ' → logprob: -2.849273204803467
    7. 'checker' → logprob: -2.974273204803467
    8. ' parcour' → logprob: -3.099273204803467
    9. ' brute' → logprob: -3.474273204803467
    10. ' pas' → logprob: -3.599273204803467

Token 809: ' tous' (ID: 10688)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7847669720649719
    2. ' tous' → logprob: -1.4097669124603271
    3. ' tout' → logprob: -2.659766912460327
    4. 'point' → logprob: -3.159766912460327
    5. ' chaque' → logprob: -3.409766912460327
    6. 'tout' → logprob: -3.409766912460327
    7. ' exhaust' → logprob: -3.534766912460327
    8. ' point' → logprob: -3.659766912460327
    9. ' toutes' → logprob: -4.784767150878906
    10. ' systém' → logprob: -4.909767150878906

Token 810: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.017784057185053825
    2. 'les' → logprob: -4.392784118652344
    3. ' ' → logprob: -5.892784118652344
    4. 'x' → logprob: -7.767784118652344
    5. ' points' → logprob: -8.142784118652344
    6. '<|end|>' → logprob: -8.267784118652344
    7. 'points' → logprob: -8.392784118652344
    8. ' x' → logprob: -8.517784118652344
    9. ' l' → logprob: -8.767784118652344
    10. '
' → logprob: -9.142784118652344

Token 811: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.015732022002339363
    2. ' points' → logprob: -4.2657318115234375
    3. 'x' → logprob: -6.6407318115234375
    4. 'pixels' → logprob: -9.515731811523438
    5. 'px' → logprob: -9.765731811523438
    6. ' x' → logprob: -10.515731811523438
    7. 'positions' → logprob: -10.640731811523438
    8. 'ent' → logprob: -10.765731811523438
    9. 'pts' → logprob: -11.640731811523438
    10. '(x' → logprob: -12.015731811523438

Token 812: ' car' (ID: 1669)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6998201012611389
    2. '   ' → logprob: -1.8248200416564941
    3. '.' → logprob: -2.449820041656494
    4. ' ' → logprob: -3.074820041656494
    5. '
' → logprob: -3.199820041656494
    6. '       ' → logprob: -3.574820041656494
    7. ' 
' → logprob: -3.824820041656494
    8. ',
' → logprob: -3.824820041656494
    9. '  
' → logprob: -3.949820041656494
    10. '    
' → logprob: -4.449820041656494

Token 813: ' continu' (ID: 7532)
  Prédit: ' ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ce' → logprob: -1.0410605669021606
    2. 'ce' → logprob: -1.7910605669021606
    3. 'cela' → logprob: -2.291060447692871
    4. ' la' → logprob: -2.541060447692871
    5. ' W' → logprob: -2.791060447692871
    6. 'la' → logprob: -2.916060447692871
    7. '#' → logprob: -3.291060447692871
    8. 'l' → logprob: -3.541060447692871
    9. ' cela' → logprob: -3.541060447692871
    10. 'c' → logprob: -3.666060447692871

Token 814: '.
' (ID: 558)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.21011967957019806
    2. 'e' → logprob: -1.7101197242736816
    3. 'ue' → logprob: -5.585119724273682
    4. 'um' → logprob: -6.085119724273682
    5. 'us' → logprob: -7.585119724273682
    6. '#' → logprob: -8.210119247436523
    7. '   ' → logprob: -8.335119247436523
    8. 'ion' → logprob: -8.335119247436523
    9. 'uellement' → logprob: -8.335119247436523
    10. '.' → logprob: -8.460119247436523

Token 815: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8175331354141235
    2. '        
' → logprob: -0.9425331354141235
    3. '
' → logprob: -1.8175331354141235
    4. '    
' → logprob: -5.317533016204834
    5. '        
        
' → logprob: -7.942533016204834
    6. '        

' → logprob: -8.442533493041992
    7. '  
' → logprob: -8.817533493041992
    8. '

' → logprob: -9.192533493041992
    9. '
        
' → logprob: -9.192533493041992
    10. ' 
' → logprob: -9.317533493041992

Token 816: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5314760804176331
    2. '        
' → logprob: -1.2814760208129883
    3. '
' → logprob: -2.0314760208129883
    4. '    
' → logprob: -6.781476020812988
    5. '#' (adapté à ' #') → logprob: -7.031476020812988
    6. ' 
' → logprob: -7.406476020812988
    7. '  
' → logprob: -8.781476020812988
    8. '

' → logprob: -8.906476020812988
    9. '       
' → logprob: -9.156476020812988
    10. '
        
' → logprob: -10.031476020812988

Token 817: ' Appro' (ID: 24145)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4387364089488983
    2. '
' → logprob: -1.1887364387512207
    3. '        
' → logprob: -3.3137364387512207
    4. '#' → logprob: -4.313736438751221
    5. ' #' → logprob: -8.563735961914062
    6. ' 
' → logprob: -8.688735961914062
    7. 'import' → logprob: -9.438735961914062
    8. '    
' → logprob: -9.688735961914062
    9. '  
' → logprob: -10.063735961914062
    10. '   ' → logprob: -10.438735961914062

Token 818: 'che' (ID: 926)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.7897355556488037
    2. 'che' → logprob: -1.4147355556488037
    3. 'cher' → logprob: -1.6647355556488037
    4. 'x' → logprob: -2.4147355556488037
    5. 'xim' → logprob: -4.414735794067383
    6. '#' → logprob: -6.039735794067383
    7. 'ches' → logprob: -6.164735794067383
    8. '   ' → logprob: -6.664735794067383
    9. 'xi' → logprob: -6.789735794067383
    10. '```' → logprob: -7.039735794067383

Token 819: ' discr' (ID: 23059)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7182180881500244
    2. ':' → logprob: -0.8432180881500244
    3. '=' → logprob: -3.9682180881500244
    4. ' step' → logprob: -4.093217849731445
    5. '   ' → logprob: -4.593217849731445
    6. '       ' → logprob: -4.968217849731445
    7. 'import' → logprob: -4.968217849731445
    8. 'step' → logprob: -5.218217849731445
    9. ' pas' → logprob: -5.468217849731445
    10. '
' → logprob: -6.093217849731445

Token 820: 'ète' (ID: 28789)
  Prédit: 'che'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'che' → logprob: -1.0680485963821411
    2. 'ch' → logprob: -1.1930485963821411
    3. 'ché' → logprob: -1.3180485963821411
    4. 'èche' → logprob: -4.193048477172852
    5. 'x' → logprob: -4.318048477172852
    6. 'chee' → logprob: -4.443048477172852
    7. 'é' → logprob: -4.818048477172852
    8. 'e' → logprob: -4.943048477172852
    9. 'imation' → logprob: -5.693048477172852
    10. 'cher' → logprob: -5.818048477172852

Token 821: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5589300990104675
    2. '   ' → logprob: -1.0589301586151123
    3. '       ' → logprob: -2.8089301586151123
    4. ' step' → logprob: -5.058929920196533
    5. ' :' → logprob: -5.183929920196533
    6. ':
' → logprob: -6.558929920196533
    7. 'step' → logprob: -6.933929920196533
    8. '
' → logprob: -6.933929920196533
    9. 'for' → logprob: -7.183929920196533
    10. 'import' → logprob: -7.183929920196533

Token 822: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005295606097206473
    2. '        
' → logprob: -7.875529766082764
    3. '        ' → logprob: -10.000529289245605
    4. '    ' → logprob: -10.500529289245605
    5. '
' → logprob: -10.625529289245605
    6. ' for' → logprob: -12.000529289245605
    7. '   ' → logprob: -12.000529289245605
    8. '    ' → logprob: -12.000529289245605
    9. ' step' → logprob: -12.125529289245605
    10. 'for' → logprob: -12.875529289245605

Token 823: ' #' (ID: 1069)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.5834155678749084
    2. 'step' → logprob: -0.9584155678749084
    3. '       ' → logprob: -3.4584155082702637
    4. 'pas' → logprob: -4.333415508270264
    5. ' pas' → logprob: -5.583415508270264
    6. ' for' → logprob: -5.583415508270264
    7. 'for' → logprob: -5.833415508270264
    8. ' ' → logprob: -7.958415508270264
    9. 'dx' → logprob: -8.083415985107422
    10. ' grid' → logprob: -8.083415985107422

Token 824: ' -' (ID: 533)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.08208184689283371
    2. ' step' → logprob: -2.5820817947387695
    3. 'pas' → logprob: -6.0820817947387695
    4. 'grid' → logprob: -8.33208179473877
    5. '   ' → logprob: -8.45708179473877
    6. 'for' → logprob: -8.70708179473877
    7. ' pas' → logprob: -9.83208179473877
    8. 'STEP' → logprob: -9.83208179473877
    9. ' grid' → logprob: -10.70708179473877
    10. 'dx' → logprob: -10.70708179473877

Token 825: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5786234140396118
    2. ' for' → logprob: -2.0786232948303223
    3. 'On' → logprob: -2.5786232948303223
    4. ' On' → logprob: -2.8286232948303223
    5. 'step' → logprob: -3.2036232948303223
    6. ' step' → logprob: -3.8286232948303223
    7. ' pas' → logprob: -4.453623294830322
    8. ' tester' → logprob: -4.453623294830322
    9. 'Pas' → logprob: -4.578623294830322
    10. ' on' → logprob: -4.578623294830322

Token 826: ' é' (ID: 1212)
  Prédit: ' test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' test' → logprob: -1.2308602333068848
    2. 'for' → logprob: -1.8558602333068848
    3. ' for' → logprob: -2.1058602333068848
    4. ' teste' → logprob: -2.1058602333068848
    5. 'test' → logprob: -2.4808602333068848
    6. ' step' → logprob: -3.8558602333068848
    7. ' pas' → logprob: -4.105860233306885
    8. ' essa' → logprob: -4.230860233306885
    9. 'step' → logprob: -4.355860233306885
    10. 'é' → logprob: -4.605860233306885

Token 827: 'chant' (ID: 15311)
  Prédit: 'chant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chant' → logprob: -0.11848275363445282
    2. 'value' → logprob: -2.368482828140259
    3. 'x' → logprob: -4.36848258972168
    4. 'ch' → logprob: -6.61848258972168
    5. '#' → logprob: -6.99348258972168
    6. 'e' → logprob: -7.74348258972168
    7. 'c' → logprob: -7.99348258972168
    8. 't' → logprob: -8.49348258972168
    9. 'chelle' → logprob: -8.49348258972168
    10. 'ffect' → logprob: -8.61848258972168

Token 828: 'ill' (ID: 492)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7788815498352051
    2. 'ill' → logprob: -1.278881549835205
    3. 'ron' → logprob: -1.903881549835205
    4. '#' → logprob: -4.028881549835205
    5. 'rone' → logprob: -4.153881549835205
    6. 'illon' → logprob: -4.278881549835205
    7. '_' → logprob: -4.528881549835205
    8. '\' → logprob: -4.653881549835205
    9. '*' → logprob: -5.028881549835205
    10. '_r' → logprob: -5.403881549835205

Token 829: 'onne' (ID: 25335)
  Prédit: 'onne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onne' → logprob: -0.0009873192757368088
    2. 'on' → logprob: -7.625987529754639
    3. 'onn' → logprob: -8.12598705291748
    4. 'e' → logprob: -10.50098705291748
    5. 'onte' → logprob: -10.50098705291748
    6. 'onna' → logprob: -10.87598705291748
    7. 'onnes' → logprob: -11.12598705291748
    8. 'onné' → logprob: -11.37598705291748
    9. 'ill' → logprob: -11.50098705291748
    10. 'onneur' → logprob: -11.62598705291748

Token 830: ' la' (ID: 557)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3092479109764099
    2. ' x' → logprob: -2.1842479705810547
    3. ' ' → logprob: -2.6842479705810547
    4. ' le' → logprob: -4.309247970581055
    5. 'y' → logprob: -4.559247970581055
    6. ' les' → logprob: -4.684247970581055
    7. ' la' → logprob: -4.809247970581055
    8. ' y' → logprob: -5.184247970581055
    9. ' espac' → logprob: -5.184247970581055
    10. 'le' → logprob: -5.309247970581055

Token 831: ' zone' (ID: 15070)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.436808317899704
    2. 'pas' → logprob: -1.6868083477020264
    3. 'step' → logprob: -2.3118083477020264
    4. ' step' → logprob: -3.6868083477020264
    5. 'grid' → logprob: -4.811808109283447
    6. ' pas' → logprob: -5.186808109283447
    7. 'range' → logprob: -5.436808109283447
    8. 'space' → logprob: -5.436808109283447
    9. 'zone' → logprob: -5.811808109283447
    10. ' x' → logprob: -5.936808109283447

Token 832: ' avec' (ID: 3937)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07978262007236481
    2. ' en' → logprob: -3.204782724380493
    3. ' à' → logprob: -4.704782485961914
    4. 'en' → logprob: -4.704782485961914
    5. ' ' → logprob: -5.829782485961914
    6. ' x' → logprob: -6.079782485961914
    7. ',' → logprob: -6.079782485961914
    8. '        ' → logprob: -6.204782485961914
    9. '
' → logprob: -6.704782485961914
    10. '        
' → logprob: -6.829782485961914

Token 833: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -1.25648832321167
    2. 'step' → logprob: -1.50648832321167
    3. ' une' → logprob: -1.63148832321167
    4. 'un' → logprob: -2.63148832321167
    5. 'pas' → logprob: -2.75648832321167
    6. ' un' → logprob: -2.88148832321167
    7. ' step' → logprob: -3.38148832321167
    8. ' pas' → logprob: -3.50648832321167
    9. 'R' → logprob: -4.38148832321167
    10. ' des' → logprob: -5.38148832321167

Token 834: ' grille' (ID: 99153)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.04804351553320885
    2. 'pas' → logprob: -3.5480434894561768
    3. ' step' → logprob: -4.173043727874756
    4. 'grid' → logprob: -6.673043727874756
    5. 'gran' → logprob: -7.798043727874756
    6. 'gr' → logprob: -8.673043251037598
    7. 'delta' → logprob: -9.048043251037598
    8. ' pas' → logprob: -9.173043251037598
    9. 'range' → logprob: -9.298043251037598
    10. 'for' → logprob: -9.423043251037598

Token 835: ' assez' (ID: 33376)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.847689688205719
    2. 'step' → logprob: -1.4726896286010742
    3. '       ' → logprob: -1.7226896286010742
    4. 'de' → logprob: -3.847689628601074
    5. ' spacing' → logprob: -4.097689628601074
    6. 'pas' → logprob: -4.472689628601074
    7. ' de' → logprob: -4.472689628601074
    8. ' espac' → logprob: -4.472689628601074
    9. 'spacing' → logprob: -4.722689628601074
    10. ' pas' → logprob: -4.722689628601074

Token 836: ' fine' (ID: 8975)
  Prédit: 'fine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fine' → logprob: -0.06766612827777863
    2. 'dense' → logprob: -2.9426660537719727
    3. ' fine' → logprob: -5.067666053771973
    4. 'f' → logprob: -5.817666053771973
    5. 'fin' → logprob: -6.317666053771973
    6. ' dense' → logprob: -6.817666053771973
    7. 'co' → logprob: -7.817666053771973
    8. 'large' → logprob: -9.942666053771973
    9. '   ' → logprob: -10.817666053771973
    10. 'gran' → logprob: -11.192666053771973

Token 837: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06603898853063583
    2. ',' → logprob: -3.5660390853881836
    3. '
' → logprob: -4.816039085388184
    4. '.' → logprob: -4.941039085388184
    5. ',
' → logprob: -5.566039085388184
    6. ' (' → logprob: -5.691039085388184
    7. ':' → logprob: -5.941039085388184
    8. '=' → logprob: -6.191039085388184
    9. ' =' → logprob: -6.316039085388184
    10. '.
' → logprob: -6.691039085388184

Token 838: 'par' (ID: 796)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.11706745624542236
    2. 'step' → logprob: -2.617067337036133
    3. ' pas' → logprob: -4.617067337036133
    4. 'pas' → logprob: -4.867067337036133
    5. ' spacing' → logprob: -5.117067337036133
    6. '       ' → logprob: -5.992067337036133
    7. ',' → logprob: -6.367067337036133
    8. ' ' → logprob: -6.492067337036133
    9. 'spacing' → logprob: -6.742067337036133
    10. ')' → logprob: -6.867067337036133

Token 839: ' exemple' (ID: 26320)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.894569456577301
    2. 'pas' → logprob: -0.894569456577301
    3. 'ex' → logprob: -2.2695693969726562
    4. 'range' → logprob: -3.1445693969726562
    5. 'example' → logprob: -3.6445693969726562
    6. 'steps' → logprob: -5.144569396972656
    7. 'for' → logprob: -6.894569396972656
    8. ' exemple' → logprob: -7.019569396972656
    9. ' pas' → logprob: -8.269569396972656
    10. 'exa' → logprob: -8.269569396972656

Token 840: ' pas' (ID: 2173)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.9079712629318237
    2. 'step' → logprob: -1.1579712629318237
    3. ' ' → logprob: -1.6579712629318237
    4. ' pas' → logprob: -4.157971382141113
    5. '10' → logprob: -4.532971382141113
    6. '1' → logprob: -4.532971382141113
    7. 'pas' → logprob: -4.532971382141113
    8. ' spacing' → logprob: -4.907971382141113
    9. 'spacing' → logprob: -5.157971382141113
    10. '5' → logprob: -5.657971382141113

Token 841: ' plus' (ID: 2932)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.019034212455153465
    2. ' =' → logprob: -4.019034385681152
    3. ' ' → logprob: -7.769034385681152
    4. 'e' → logprob: -9.144034385681152
    5. 's' → logprob: -9.269034385681152
    6. ')' → logprob: -9.769034385681152
    7. 'de' → logprob: -10.019034385681152
    8. ',' → logprob: -11.144034385681152
    9. 'def' → logprob: -11.144034385681152
    10. '1' → logprob: -11.269034385681152

Token 842: ' gros' (ID: 28636)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016755329445004463
    2. 'de' → logprob: -4.516755104064941
    3. 'que' → logprob: -5.766755104064941
    4. '```' → logprob: -6.391755104064941
    5. ' que' → logprob: -8.391755104064941
    6. '==' → logprob: -9.016755104064941
    7. ' =' → logprob: -9.516755104064941
    8. ' de' → logprob: -10.141755104064941
    9. 'import' → logprob: -10.266755104064941
    10. '   ' → logprob: -10.391755104064941

Token 843: ' que' (ID: 661)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8502548336982727
    2. ' que' → logprob: -1.225254774093628
    3. 'e' → logprob: -1.725254774093628
    4. 'de' → logprob: -2.850254774093628
    5. ' de' → logprob: -3.850254774093628
    6. 'que' → logprob: -4.225255012512207
    7. ' d' → logprob: -6.475255012512207
    8. '   ' → logprob: -6.600255012512207
    9. 'd' → logprob: -6.725255012512207
    10. ')' → logprob: -6.850255012512207

Token 844: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.43643856048583984
    2. '1' → logprob: -1.4364385604858398
    3. ' R' → logprob: -2.31143856048584
    4. ' ' → logprob: -4.18643856048584
    5. '2' → logprob: -7.31143856048584
    6. '0' → logprob: -8.31143856048584
    7. 'r' → logprob: -8.31143856048584
    8. 'radius' → logprob: -8.81143856048584
    9. 'max' → logprob: -9.93643856048584
    10. '5' → logprob: -9.93643856048584

Token 845: '/' (ID: 14)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09946034103631973
    2. ' )' → logprob: -2.8494603633880615
    3. '   ' → logprob: -4.224460124969482
    4. ' //' → logprob: -5.224460124969482
    5. ' /' → logprob: -5.599460124969482
    6. ',' → logprob: -5.849460124969482
    7. '),' → logprob: -5.974460124969482
    8. ')
' → logprob: -6.974460124969482
    9. ' ' → logprob: -7.099460124969482
    10. '//' → logprob: -7.099460124969482

Token 846: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009900573641061783
    2. ' ' → logprob: -8.12598991394043
    3. '1' → logprob: -8.37598991394043
    4. '4' → logprob: -8.50098991394043
    5. '3' → logprob: -9.00098991394043
    6. '5' → logprob: -9.37598991394043
    7. '10' → logprob: -10.00098991394043
    8. '```' → logprob: -13.37598991394043
    9. '8' → logprob: -13.62598991394043
    10. '0' → logprob: -14.25098991394043

Token 847: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023623483255505562
    2. ' )' → logprob: -3.898623466491699
    3. ')
' → logprob: -6.898623466491699
    4. ').' → logprob: -7.148623466491699
    5. '),' → logprob: -7.523623466491699
    6. ',' → logprob: -8.3986234664917
    7. ' ' → logprob: -9.5236234664917
    8. '   ' → logprob: -9.5236234664917
    9. ' )
' → logprob: -9.6486234664917
    10. '):
' → logprob: -9.7736234664917

Token 848: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043050460517406464
    2. '
' → logprob: -4.043050289154053
    3. '        
' → logprob: -4.168050289154053
    4. ',' → logprob: -5.043050289154053
    5. '.' → logprob: -7.418050289154053
    6. ')' → logprob: -7.418050289154053
    7. ',
' → logprob: -7.793050289154053
    8. '<|end|>' → logprob: -8.793050765991211
    9. ':' → logprob: -9.168050765991211
    10. '   ' → logprob: -9.543050765991211

Token 849: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.46676188707351685
    2. '       ' → logprob: -1.091761827468872
    3. '        
' → logprob: -3.716761827468872
    4. ' 
' → logprob: -5.841762065887451
    5. ',' → logprob: -6.091762065887451
    6. '  
' → logprob: -6.216762065887451
    7. ' step' → logprob: -6.466762065887451
    8. '    
' → logprob: -7.091762065887451
    9. '\n' → logprob: -7.341762065887451
    10. 'step' → logprob: -7.466762065887451

Token 850: '  ' (ID: 256)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6144806742668152
    2. 'step' → logprob: -0.9894806742668152
    3. ' step' → logprob: -2.61448073387146
    4. 'pas' → logprob: -4.864480495452881
    5. '
' → logprob: -5.239480495452881
    6. ' pas' → logprob: -8.114480972290039
    7. ' ' → logprob: -8.614480972290039
    8. '   ' → logprob: -8.739480972290039
    9. '        
' → logprob: -9.489480972290039
    10. 'grid' → logprob: -9.739480972290039

Token 851: ' car' (ID: 1669)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.47556182742118835
    2. '       ' → logprob: -1.2255618572235107
    3. ' step' → logprob: -2.6005618572235107
    4. 'pas' → logprob: -5.350561618804932
    5. '
' → logprob: -5.975561618804932
    6. ',' → logprob: -6.725561618804932
    7. ' ' → logprob: -8.22556209564209
    8. '_step' → logprob: -8.35056209564209
    9. ' =' → logprob: -8.47556209564209
    10. ' pas' → logprob: -8.72556209564209

Token 852: ' le' (ID: 505)
  Prédit: ' R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.08397175371646881
    2. 'R' → logprob: -3.4589717388153076
    3. ' radius' → logprob: -3.5839717388153076
    4. ' la' → logprob: -5.333971977233887
    5. ' ' → logprob: -5.458971977233887
    6. ' le' → logprob: -5.708971977233887
    7. 'radius' → logprob: -6.333971977233887
    8. ' range' → logprob: -6.583971977233887
    9. ' step' → logprob: -6.833971977233887
    10. ' on' → logprob: -7.083971977233887

Token 853: ' rayon' (ID: 80967)
  Prédit: ' R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.4560568034648895
    2. 'R' → logprob: -1.956056833267212
    3. ' radius' → logprob: -2.706056833267212
    4. ' pas' → logprob: -2.956056833267212
    5. ' step' → logprob: -3.331056833267212
    6. 'pas' → logprob: -4.206056594848633
    7. 'radius' → logprob: -4.206056594848633
    8. 'r' → logprob: -4.581056594848633
    9. ' rayon' → logprob: -4.956056594848633
    10. ' spacing' → logprob: -5.206056594848633

Token 854: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.5321687459945679
    2. ' /' → logprob: -2.1571688652038574
    3. ' <=' → logprob: -2.4071688652038574
    4. '/' → logprob: -2.5321688652038574
    5. '_' → logprob: -2.7821688652038574
    6. ' de' → logprob: -2.9071688652038574
    7. ' >=' → logprob: -3.0321688652038574
    8. ' d' → logprob: -3.2821688652038574
    9. ' R' → logprob: -3.4071688652038574
    10. ' _' → logprob: -3.5321688652038574

Token 855: ' la' (ID: 557)
  Prédit: ' R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.6617357730865479
    2. 'R' → logprob: -1.1617357730865479
    3. ' ' → logprob: -3.411735773086548
    4. ' important' → logprob: -3.536735773086548
    5. ' <=' → logprob: -3.661735773086548
    6. 'r' → logprob: -3.786735773086548
    7. ' au' → logprob: -3.911735773086548
    8. ' plus' → logprob: -5.286735534667969
    9. '<=' → logprob: -5.286735534667969
    10. ' supérieur' → logprob: -5.411735534667969

Token 856: ' distance' (ID: 9324)
  Prédit: ' mo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mo' → logprob: -0.1356392502784729
    2. ' moitié' → logprob: -2.510639190673828
    3. 'mo' → logprob: -3.760639190673828
    4. ' plus' → logprob: -4.010639190673828
    5. 'plus' → logprob: -7.510639190673828
    6. ' limite' → logprob: -7.635639190673828
    7. ' distance' → logprob: -7.885639190673828
    8. 'm' → logprob: -8.010639190673828
    9. 'me' → logprob: -8.010639190673828
    10. ' moindre' → logprob: -8.135639190673828

Token 857: ' critique' (ID: 56899)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8948898911476135
    2. '   ' → logprob: -1.3948898315429688
    3. '       ' → logprob: -3.1448898315429688
    4. '_' → logprob: -3.1448898315429688
    5. 'de' → logprob: -3.2698898315429688
    6. ' ' → logprob: -3.3948898315429688
    7. 'max' → logprob: -3.5198898315429688
    8. ' d' → logprob: -3.6448898315429688
    9. ' _' → logprob: -3.7698898315429688
    10. ' /' → logprob: -3.8948898315429688

Token 858: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.5922539234161377
    2. '   ' → logprob: -1.7172539234161377
    3. ' step' → logprob: -1.9672539234161377
    4. '
' → logprob: -2.0922539234161377
    5. 'step' → logprob: -2.4672539234161377
    6. ',' → logprob: -2.4672539234161377
    7. '_' → logprob: -3.2172539234161377
    8. ' ' → logprob: -3.7172539234161377
    9. '_step' → logprob: -3.8422539234161377
    10. '.' → logprob: -3.9672539234161377

Token 859: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12071872502565384
    2. ' step' → logprob: -2.4957187175750732
    3. 'step' → logprob: -3.9957187175750732
    4. '
' → logprob: -4.620718955993652
    5. ',' → logprob: -7.745718955993652
    6. '        
' → logprob: -7.870718955993652
    7. '   ' → logprob: -7.870718955993652
    8. ' ' → logprob: -8.120718955993652
    9. ' pas' → logprob: -8.120718955993652
    10. 'pas' → logprob: -8.495718955993652

Token 860: ' #' (ID: 1069)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.6887840628623962
    2. '       ' → logprob: -1.188784122467041
    3. ' step' → logprob: -1.688784122467041
    4. '
' → logprob: -5.188784122467041
    5. 'grid' → logprob: -7.313784122467041
    6. '   ' → logprob: -7.688784122467041
    7. ' ' → logprob: -7.938784122467041
    8. 'pas' → logprob: -8.188783645629883
    9. 'steps' → logprob: -8.188783645629883
    10. ' grid' → logprob: -8.438783645629883

Token 861: ' -' (ID: 533)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.03369537740945816
    2. '       ' → logprob: -3.5336954593658447
    3. ' step' → logprob: -6.533695220947266
    4. 'pas' → logprob: -6.658695220947266
    5. '   ' → logprob: -6.908695220947266
    6. ' ' → logprob: -9.533695220947266
    7. '
' → logprob: -9.783695220947266
    8. 'grid' → logprob: -9.908695220947266
    9. 'dx' → logprob: -12.658695220947266
    10. 'steps' → logprob: -12.783695220947266

Token 862: ' Pour' (ID: 13931)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.63638836145401
    2. ' step' → logprob: -0.76138836145401
    3. 'pas' → logprob: -6.386388301849365
    4. '   ' → logprob: -7.636388301849365
    5. 'for' → logprob: -7.886388301849365
    6. ' pas' → logprob: -7.886388301849365
    7. ' for' → logprob: -8.761388778686523
    8. ' ' → logprob: -9.136388778686523
    9. ' grid' → logprob: -9.136388778686523
    10. 'grid' → logprob: -9.386388778686523

Token 863: ' chaque' (ID: 21194)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.2984303832054138
    2. 'y' → logprob: -1.5484304428100586
    3. 'x' → logprob: -3.4234304428100586
    4. ' x' → logprob: -4.423430442810059
    5. ' dy' → logprob: -8.423430442810059
    6. ' step' → logprob: -8.673430442810059
    7. 'r' → logprob: -9.298430442810059
    8. 'dy' → logprob: -9.548430442810059
    9. 'step' → logprob: -9.673430442810059
    10. ' pas' → logprob: -9.798430442810059

Token 864: ' point' (ID: 2438)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.15636830031871796
    2. 'x' → logprob: -2.0313682556152344
    3. ' y' → logprob: -4.531368255615234
    4. ' ' → logprob: -6.781368255615234
    5. ' point' → logprob: -7.781368255615234
    6. 'y' → logprob: -8.156368255615234
    7. ' step' → logprob: -8.906368255615234
    8. ' dx' → logprob: -8.906368255615234
    9. ' px' → logprob: -8.906368255615234
    10. 'point' → logprob: -9.281368255615234

Token 865: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.26060473918914795
    2. ' x' → logprob: -2.8856048583984375
    3. 'x' → logprob: -3.1356048583984375
    4. ',' → logprob: -3.6356048583984375
    5. '           ' → logprob: -3.8856048583984375
    6. '_x' → logprob: -3.8856048583984375
    7. '(x' → logprob: -4.0106048583984375
    8. ' (' → logprob: -4.2606048583984375
    9. ' ' → logprob: -5.2606048583984375
    10. 'in' → logprob: -5.3856048583984375

Token 866: ' on' (ID: 402)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08223645389080048
    2. 'if' → logprob: -2.5822365283966064
    3. '       ' → logprob: -6.957236289978027
    4. '   ' → logprob: -7.082236289978027
    5. '           ' → logprob: -7.457236289978027
    6. ' ' → logprob: -8.082236289978027
    7. ' ' → logprob: -8.707236289978027
    8. '    ' → logprob: -9.207236289978027
    9. ' for' → logprob: -9.582236289978027
    10. ' x' → logprob: -9.957236289978027

Token 867: ' teste' (ID: 62670)
  Prédit: ' check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.7304391264915466
    2. ' vérifier' → logprob: -1.7304391860961914
    3. ' if' → logprob: -2.7304391860961914
    4. '       ' → logprob: -2.7304391860961914
    5. ' vér' → logprob: -2.8554391860961914
    6. '   ' → logprob: -2.8554391860961914
    7. ' test' → logprob: -3.3554391860961914
    8. ' teste' → logprob: -3.9804391860961914
    9. 'check' → logprob: -4.855439186096191
    10. '    ' → logprob: -4.980439186096191

Token 868: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.055866703391075134
    2. '       ' → logprob: -4.055866718292236
    3. 'if' → logprob: -4.805866718292236
    4. '   ' → logprob: -5.055866718292236
    5. ' ' → logprob: -5.180866718292236
    6. ' si' → logprob: -5.305866718292236
    7. ' s' → logprob: -5.430866718292236
    8. ' la' → logprob: -6.180866718292236
    9. '    ' → logprob: -6.680866718292236
    10. ' sa' → logprob: -6.930866718292236

Token 869: ' safe' (ID: 7703)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.12715403735637665
    2. 'is' → logprob: -2.1271541118621826
    3. ' not' → logprob: -8.752154350280762
    4. 'not' → logprob: -10.002154350280762
    5. ' ' → logprob: -11.002154350280762
    6. '(is' → logprob: -12.627154350280762
    7. ' ' → logprob: -14.127154350280762
    8. '_' → logprob: -14.752154350280762
    9. '	is' → logprob: -14.752154350280762
    10. '_is' → logprob: -15.002154350280762

Token 870: '.
' (ID: 558)
  Prédit: '_point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.0555843748152256
    2. '(' → logprob: -3.43058443069458
    3. '_' → logprob: -4.30558443069458
    4. ':' → logprob: -5.80558443069458
    5. '(p' → logprob: -6.80558443069458
    6. ' (' → logprob: -6.93058443069458
    7. '(px' → logprob: -6.93058443069458
    8. '(point' → logprob: -7.30558443069458
    9. '_points' → logprob: -7.68058443069458
    10. 'point' → logprob: -8.805583953857422

Token 871: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6983336806297302
    2. '       ' → logprob: -0.6983336806297302
    3. '        
' → logprob: -5.573333740234375
    4. '    
' → logprob: -7.448333740234375
    5. '  
' → logprob: -8.198333740234375
    6. '   ' → logprob: -8.573333740234375
    7. ' 
' → logprob: -9.073333740234375
    8. ' for' → logprob: -9.323333740234375
    9. '
' → logprob: -10.573333740234375
    10. '<|end|>' → logprob: -10.823333740234375

Token 872: ' #
' (ID: 21888)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12817849218845367
    2. '       ' → logprob: -2.378178596496582
    3. '        
' → logprob: -3.628178596496582
    4. '    
' → logprob: -7.378178596496582
    5. '  
' → logprob: -8.878178596496582
    6. ' 
' → logprob: -9.628178596496582
    7. '
        
' → logprob: -10.503178596496582
    8. '
' → logprob: -10.878178596496582
    9. '       
' → logprob: -11.128178596496582
    10. '   ' → logprob: -11.128178596496582

Token 873: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.644165575504303
    2. '       ' → logprob: -0.769165575504303
    3. '   ' → logprob: -5.269165515899658
    4. '        
' → logprob: -5.269165515899658
    5. '    
' → logprob: -6.769165515899658
    6. '

' → logprob: -11.644165992736816
    7. '  
' → logprob: -12.019165992736816
    8. ' 
' → logprob: -12.144165992736816
    9. '       
' → logprob: -12.519165992736816
    10. '
' → logprob: -12.644165992736816

Token 874: ' #' (ID: 1069)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.029723642393946648
    2. '       ' → logprob: -3.904723644256592
    3. ' step' → logprob: -5.154723644256592
    4. 'pas' → logprob: -6.279723644256592
    5. '   ' → logprob: -7.154723644256592
    6. 'grid' → logprob: -7.779723644256592
    7. '
' → logprob: -8.654723167419434
    8. ' ' → logprob: -10.154723167419434
    9. '        
' → logprob: -11.154723167419434
    10. 'gap' → logprob: -11.529723167419434

Token 875: ' Si' (ID: 7832)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.005682875867933035
    2. ' step' → logprob: -5.755682945251465
    3. 'grid' → logprob: -6.880682945251465
    4. '   ' → logprob: -7.130682945251465
    5. 'pas' → logprob: -7.630682945251465
    6. '       ' → logprob: -9.380682945251465
    7. 'gr' → logprob: -10.630682945251465
    8. 'steps' → logprob: -11.255682945251465
    9. ' ' → logprob: -11.380682945251465
    10. 'size' → logprob: -11.630682945251465

Token 876: ' on' (ID: 402)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7783389687538147
    2. ' not' → logprob: -0.9033389687538147
    3. ' R' → logprob: -2.40333890914917
    4. 'is' → logprob: -4.02833890914917
    5. 'not' → logprob: -4.77833890914917
    6. 'R' → logprob: -5.15333890914917
    7. ' (' → logprob: -6.15333890914917
    8. ' found' → logprob: -6.40333890914917
    9. ' safe' → logprob: -6.40333890914917
    10. ' possible' → logprob: -6.65333890914917

Token 877: ' trouve' (ID: 30913)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.7855207920074463
    2. ' trouve' → logprob: -1.7855207920074463
    3. 'range' → logprob: -2.1605207920074463
    4. ' for' → logprob: -2.1605207920074463
    5. 'for' → logprob: -2.2855207920074463
    6. '   ' → logprob: -3.0355207920074463
    7. ' n' → logprob: -3.2855207920074463
    8. ' range' → logprob: -3.5355207920074463
    9. ' pas' → logprob: -3.6605207920074463
    10. 'continue' → logprob: -3.7855207920074463

Token 878: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.0022447004448622465
    2. 'un' → logprob: -7.252244472503662
    3. ' ' → logprob: -7.502244472503662
    4. ' une' → logprob: -7.502244472503662
    5. '    ' → logprob: -9.25224494934082
    6. ' a' → logprob: -9.62724494934082
    7. '   ' → logprob: -9.62724494934082
    8. ' (' → logprob: -9.87724494934082
    9. ' au' → logprob: -10.00224494934082
    10. ' )' → logprob: -10.50224494934082

Token 879: ' point' (ID: 2438)
  Prédit: ' point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' point' → logprob: -0.013891272246837616
    2. 'point' → logprob: -4.888891220092773
    3. ' safe' → logprob: -5.263891220092773
    4. ' ' → logprob: -7.013891220092773
    5. ' ' → logprob: -9.888891220092773
    6. ' espace' → logprob: -10.763891220092773
    7. ' space' → logprob: -11.138891220092773
    8. 'safe' → logprob: -11.388891220092773
    9. ' poin' → logprob: -11.513891220092773
    10. ' pt' → logprob: -11.888891220092773

Token 880: ' safe' (ID: 7703)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.013210582546889782
    2. '_' → logprob: -5.763210773468018
    3. ' safe' → logprob: -6.138210773468018
    4. '    ' → logprob: -6.263210773468018
    5. ' 
' → logprob: -6.763210773468018
    6. '<|end|>' → logprob: -6.888210773468018
    7. ' =' → logprob: -7.513210773468018
    8. ' )' → logprob: -7.638210773468018
    9. '   ' → logprob: -7.763210773468018
    10. '  ' → logprob: -8.13821029663086

Token 881: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04663801193237305
    2. ':
' → logprob: -3.546638011932373
    3. ',' → logprob: -4.171638011932373
    4. ' :' → logprob: -7.921638011932373
    5. '           ' → logprob: -8.296638488769531
    6. '   ' → logprob: -8.421638488769531
    7. '       ' → logprob: -8.546638488769531
    8. '{' → logprob: -9.421638488769531
    9. ' :
' → logprob: -9.921638488769531
    10. '=' → logprob: -10.546638488769531

Token 882: ' on' (ID: 402)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.6416112184524536
    2. '           ' → logprob: -0.8916112184524536
    3. 'print' → logprob: -2.766611099243164
    4. '       ' → logprob: -8.016611099243164
    5. ' return' → logprob: -8.766611099243164
    6. ' on' → logprob: -9.266611099243164
    7. ' break' → logprob: -11.016611099243164
    8. ' ' → logprob: -11.516611099243164
    9. 'return' → logprob: -11.516611099243164
    10. '		' → logprob: -11.891611099243164

Token 883: ' imprime' (ID: 195564)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5550808906555176
    2. '           ' → logprob: -1.5550808906555176
    3. 'print' → logprob: -1.5550808906555176
    4. '       ' → logprob: -5.930080890655518
    5. ' imprime' → logprob: -8.93008041381836
    6. ' peut' → logprob: -9.43008041381836
    7. '```' → logprob: -9.68008041381836
    8. '_print' → logprob: -9.68008041381836
    9. 'im' → logprob: -9.93008041381836
    10. ' peux' → logprob: -10.05508041381836

Token 884: ' "' (ID: 392)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.05994000658392906
    2. '"' → logprob: -2.9349400997161865
    3. '('' → logprob: -6.559939861297607
    4. '"O' → logprob: -6.559939861297607
    5. '(' → logprob: -7.184939861297607
    6. '   ' → logprob: -7.434939861297607
    7. ' "' → logprob: -7.809939861297607
    8. '"S' → logprob: -9.684940338134766
    9. ''' → logprob: -9.809940338134766
    10. '       ' → logprob: -9.934940338134766

Token 885: 'Yes' (ID: 13022)
  Prédit: 'YES'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'YES' → logprob: -0.2846162021160126
    2. '"' → logprob: -2.909616231918335
    3. 'O' → logprob: -3.284616231918335
    4. 'Yes' → logprob: -3.659616231918335
    5. 'SAFE' → logprob: -3.659616231918335
    6. 'Y' → logprob: -4.034615993499756
    7. 'POS' → logprob: -4.409615993499756
    8. 'P' → logprob: -4.534615993499756
    9. 'Oui' → logprob: -4.659615993499756
    10. 'G' → logprob: -4.784615993499756

Token 886: '",' (ID: 672)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.003767658956348896
    2. '"
' → logprob: -5.628767490386963
    3. '\n' → logprob: -9.128767967224121
    4. '"
' → logprob: -10.628767967224121
    5. '",' → logprob: -10.753767967224121
    6. '".' → logprob: -12.003767967224121
    7. '";' → logprob: -12.378767967224121
    8. '"\' → logprob: -14.128767967224121
    9. '")' → logprob: -14.753767967224121
    10. '```' → logprob: -14.753767967224121

Token 887: ' sinon' (ID: 52915)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1151445209980011
    2. ' return' → logprob: -2.9901444911956787
    3. ' else' → logprob: -3.8651444911956787
    4. ' continue' → logprob: -3.8651444911956787
    5. '           ' → logprob: -5.365144729614258
    6. 'return' → logprob: -5.990144729614258
    7. '\n' → logprob: -6.115144729614258
    8. ' sinon' → logprob: -6.240144729614258
    9. '               ' → logprob: -6.615144729614258
    10. ' puis' → logprob: -6.990144729614258

Token 888: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3554626703262329
    2. ' "' → logprob: -1.355462670326233
    3. 'print' → logprob: -4.230462551116943
    4. '       ' → logprob: -4.605462551116943
    5. ' print' → logprob: -4.855462551116943
    6. '   ' → logprob: -5.855462551116943
    7. ':' → logprob: -5.855462551116943
    8. '           ' → logprob: -6.730462551116943
    9. '
' → logprob: -7.105462551116943
    10. ':
' → logprob: -7.980462551116943

Token 889: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.00017243190086446702
    2. ' No' → logprob: -9.37517261505127
    3. '"No' → logprob: -9.37517261505127
    4. '"' → logprob: -13.00017261505127
    5. 'NO' → logprob: -15.12517261505127
    6. '```' → logprob: -17.000171661376953
    7. '_No' → logprob: -17.250171661376953
    8. 'Impossible' → logprob: -17.375171661376953
    9. '   ' → logprob: -17.500171661376953
    10. 'Yes' → logprob: -17.625171661376953

Token 890: '".
' (ID: 26880)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6804424524307251
    2. '       ' → logprob: -1.305442452430725
    3. '\n' → logprob: -1.680442452430725
    4. '"
' → logprob: -3.6804423332214355
    5. '
' → logprob: -5.1804423332214355
    6. '   ' → logprob: -5.9304423332214355
    7. '")' → logprob: -6.5554423332214355
    8. '        
' → logprob: -8.430442810058594
    9. '           ' → logprob: -8.555442810058594
    10. '"""
' → logprob: -8.680442810058594

Token 891: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.010276693850755692
    2. '       ' → logprob: -4.760276794433594
    3. '        
' → logprob: -7.385276794433594
    4. '   ' → logprob: -7.635276794433594
    5. '    
' → logprob: -7.885276794433594
    6. ' step' → logprob: -10.260276794433594
    7. '  
' → logprob: -10.385276794433594
    8. '```' → logprob: -10.385276794433594
    9. 'step' → logprob: -10.635276794433594
    10. '

' → logprob: -11.385276794433594

Token 892: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22734850645065308
    2. 'step' → logprob: -1.7273485660552979
    3. '
' → logprob: -3.977348566055298
    4. '   ' → logprob: -5.352348327636719
    5. '        
' → logprob: -6.852348327636719
    6. ' step' → logprob: -7.477348327636719
    7. 'grid' → logprob: -8.102348327636719
    8. '    
' → logprob: -9.602348327636719
    9. 'steps' → logprob: -10.352348327636719
    10. 'Step' → logprob: -11.102348327636719

Token 893: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04615094140172005
    2. '
' → logprob: -3.5461509227752686
    3. '   ' → logprob: -5.046151161193848
    4. 'step' → logprob: -5.296151161193848
    5. '        
' → logprob: -5.546151161193848
    6. ' step' → logprob: -7.546151161193848
    7. '    
' → logprob: -8.171151161193848
    8. 'grid' → logprob: -10.546151161193848
    9. '  
' → logprob: -11.171151161193848
    10. 'Step' → logprob: -12.046151161193848

Token 894: ' #' (ID: 1069)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.05059041827917099
    2. '       ' → logprob: -3.4255905151367188
    3. ' step' → logprob: -4.675590515136719
    4. '   ' → logprob: -5.675590515136719
    5. 'pas' → logprob: -6.175590515136719
    6. 'grid' → logprob: -6.925590515136719
    7. '
' → logprob: -7.300590515136719
    8. ' ' → logprob: -9.550590515136719
    9. '        
' → logprob: -10.175590515136719
    10. 'gap' → logprob: -10.675590515136719

Token 895: ' Cette' (ID: 27383)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.008090737275779247
    2. '       ' → logprob: -5.133090972900391
    3. 'grid' → logprob: -7.008090972900391
    4. '   ' → logprob: -7.633090972900391
    5. 'pas' → logprob: -7.758090972900391
    6. ' step' → logprob: -8.38309097290039
    7. '#' → logprob: -10.63309097290039
    8. 'Step' → logprob: -11.38309097290039
    9. 'gr' → logprob: -11.50809097290039
    10. '
' → logprob: -11.50809097290039

Token 896: ' méthode' (ID: 71490)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.745106041431427
    2. '   ' → logprob: -1.1201059818267822
    3. ' spacing' → logprob: -2.4951059818267822
    4. 'step' → logprob: -3.7451059818267822
    5. ' code' → logprob: -4.245106220245361
    6. 'spacing' → logprob: -4.745106220245361
    7. '    ' → logprob: -4.870106220245361
    8. '       ' → logprob: -5.120106220245361
    9. ' pas' → logprob: -5.370106220245361
    10. ' ' → logprob: -5.370106220245361

Token 897: ' est' (ID: 893)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07401295751333237
    2. '   ' → logprob: -3.1990129947662354
    3. ' step' → logprob: -4.199012756347656
    4. 'step' → logprob: -5.199012756347656
    5. ' est' → logprob: -6.199012756347656
    6. 'def' → logprob: -7.074012756347656
    7. 'est' → logprob: -7.074012756347656
    8. 'pas' → logprob: -7.449012756347656
    9. ' pas' → logprob: -7.574012756347656
    10. '    ' → logprob: -7.699012756347656

Token 898: ' acceptable' (ID: 34028)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3895325660705566
    2. 'import' → logprob: -1.5145325660705566
    3. ' rapide' → logprob: -1.5145325660705566
    4. '    ' → logprob: -2.7645325660705566
    5. '       ' → logprob: -3.7645325660705566
    6. ' valid' → logprob: -4.139532566070557
    7. 'def' → logprob: -4.389532566070557
    8. 'valid' → logprob: -4.639532566070557
    9. 'imple' → logprob: -4.639532566070557
    10. '```' → logprob: -4.639532566070557

Token 899: ' compte' (ID: 19657)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35810256004333496
    2. '       ' → logprob: -1.233102560043335
    3. '
' → logprob: -5.483102798461914
    4. '        
' → logprob: -5.983102798461914
    5. '    
' → logprob: -6.483102798461914
    6. '    ' → logprob: -8.733102798461914
    7. ' indent' → logprob: -8.733102798461914
    8. ' dans' → logprob: -9.108102798461914
    9. 'indent' → logprob: -9.233102798461914
    10. 'import' → logprob: -9.233102798461914

Token 900: ' tenu' (ID: 80013)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21023069322109222
    2. '       ' → logprob: -1.7102307081222534
    3. 'to' → logprob: -6.085230827331543
    4. 'for' → logprob: -6.085230827331543
    5. ' à' → logprob: -7.335230827331543
    6. '```' → logprob: -7.460230827331543
    7. 'def' → logprob: -7.835230827331543
    8. 'tent' → logprob: -8.210230827331543
    9. '\t' → logprob: -8.460230827331543
    10. 'à' → logprob: -8.460230827331543

Token 901: ' des' (ID: 731)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.11263144761323929
    2. ' des' → logprob: -2.3626315593719482
    3. ' du' → logprob: -4.737631320953369
    4. '   ' → logprob: -6.237631320953369
    5. 'de' → logprob: -6.862631320953369
    6. '    ' → logprob: -8.362631797790527
    7. '       ' → logprob: -9.237631797790527
    8. ' d' → logprob: -9.237631797790527
    9. 'des' → logprob: -9.987631797790527
    10. ' of' → logprob: -10.612631797790527

Token 902: ' contraintes' (ID: 167366)
  Prédit: ' contraintes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contraintes' → logprob: -0.009718426503241062
    2. 'contra' → logprob: -4.884718418121338
    3. ' constraints' → logprob: -7.134718418121338
    4. 'constraints' → logprob: -7.259718418121338
    5. ' limites' → logprob: -8.634718894958496
    6. ' contra' → logprob: -9.009718894958496
    7. 'con' → logprob: -9.384718894958496
    8. 'contr' → logprob: -10.009718894958496
    9. 'const' → logprob: -10.509718894958496
    10. 'limitations' → logprob: -10.634718894958496

Token 903: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10849833488464355
    2. '   ' → logprob: -2.8584983348846436
    3. '        
' → logprob: -3.9834983348846436
    4. ' de' → logprob: -4.608498573303223
    5. 'de' → logprob: -4.733498573303223
    6. 'import' → logprob: -6.483498573303223
    7. 'd' → logprob: -6.608498573303223
    8. '.' → logprob: -6.733498573303223
    9. '    
' → logprob: -7.733498573303223
    10. ' d' → logprob: -7.733498573303223

Token 904: ' 
' (ID: 793)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08662839233875275
    2. 'step' → logprob: -3.2116284370422363
    3. ' step' → logprob: -3.3366284370422363
    4. '
' → logprob: -5.336628437042236
    5. '        
' → logprob: -7.086628437042236
    6. 'pas' → logprob: -7.336628437042236
    7. '   ' → logprob: -8.086627960205078
    8. ' pas' → logprob: -8.836627960205078
    9. ' ' → logprob: -9.211627960205078
    10. ' grid' → logprob: -9.836627960205078

Token 905: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012809342704713345
    2. '
' → logprob: -4.7628092765808105
    3. '        
' → logprob: -5.5128092765808105
    4. '   ' → logprob: -10.137809753417969
    5. '    
' → logprob: -10.387809753417969
    6. '        ' → logprob: -11.387809753417969
    7. ' 
' → logprob: -11.887809753417969
    8. '       
' → logprob: -11.887809753417969
    9. '           ' → logprob: -12.262809753417969
    10. '  
' → logprob: -12.387809753417969

Token 906: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016616640612483025
    2. '#' (adapté à ' #') → logprob: -4.7666168212890625
    3. ' #' → logprob: -5.5166168212890625
    4. '        
' → logprob: -6.2666168212890625
    5. '   ' → logprob: -7.5166168212890625
    6. '
' → logprob: -7.7666168212890625
    7. ' step' → logprob: -8.391616821289062
    8. ' max' → logprob: -8.516616821289062
    9. 'max' → logprob: -9.266616821289062
    10. '```' → logprob: -10.016616821289062

Token 907: '  ' (ID: 256)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6427983045578003
    2. 'step' → logprob: -1.5177983045578003
    3. ' step' → logprob: -1.6427983045578003
    4. 'max' → logprob: -3.76779842376709
    5. '#' → logprob: -4.39279842376709
    6. ' max' → logprob: -4.89279842376709
    7. ' #' → logprob: -5.26779842376709
    8. ' grid' → logprob: -5.51779842376709
    9. 'grid' → logprob: -5.64279842376709
    10. 'pas' → logprob: -7.01779842376709

Token 908: ' W' (ID: 486)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.504109263420105
    2. 'max' → logprob: -1.754109263420105
    3. '       ' → logprob: -2.0041093826293945
    4. ' for' → logprob: -2.3791093826293945
    5. ' W' → logprob: -2.5041093826293945
    6. 'W' (adapté à ' W') → logprob: -2.8791093826293945
    7. ' if' → logprob: -2.8791093826293945
    8. 'if' → logprob: -3.2541093826293945
    9. '   ' → logprob: -3.3791093826293945
    10. 'for' → logprob: -3.5041093826293945

Token 909: ' ≤' (ID: 72554)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -1.0478770732879639
    2. '   ' → logprob: -1.1728770732879639
    3. ',' → logprob: -1.7978770732879639
    4. '<=' → logprob: -3.297877073287964
    5. '=' → logprob: -3.422877073287964
    6. '       ' → logprob: -3.672877073287964
    7. '+' → logprob: -4.047877311706543
    8. ' and' → logprob: -4.297877311706543
    9. ' >=' → logprob: -4.672877311706543
    10. ' ' → logprob: -4.797877311706543

Token 910: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.40163108706474304
    2. '200' → logprob: -1.6516311168670654
    3. '500' → logprob: -2.4016311168670654
    4. '300' → logprob: -4.026630878448486
    5. '400' → logprob: -4.901630878448486
    6. '150' → logprob: -4.901630878448486
    7. '250' → logprob: -5.026630878448486
    8. '10' → logprob: -5.651630878448486
    9. ' ' → logprob: -6.026630878448486
    10. '800' → logprob: -6.901630878448486

Token 911: '640' (ID: 25479)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.36385902762413025
    2. '200' → logprob: -1.7388590574264526
    3. '500' → logprob: -2.363858938217163
    4. '300' → logprob: -4.363859176635742
    5. '400' → logprob: -4.863859176635742
    6. '150' → logprob: -5.363859176635742
    7. '250' → logprob: -5.488859176635742
    8. '10' → logprob: -5.863859176635742
    9. '800' → logprob: -6.863859176635742
    10. '600' → logprob: -7.238859176635742

Token 912: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5395568609237671
    2. '
' → logprob: -0.9145568609237671
    3. ',' → logprob: -4.914556980133057
    4. '   ' → logprob: -5.164556980133057
    5. '        
' → logprob: -6.289556980133057
    6. ',
' → logprob: -7.914556980133057
    7. '    
' → logprob: -8.164556503295898
    8. '0' → logprob: -8.414556503295898
    9. '  
' → logprob: -9.414556503295898
    10. '
' → logprob: -9.664556503295898

Token 913: ' H' (ID: 487)
  Prédit: ' H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.06356775760650635
    2. 'H' → logprob: -2.938567638397217
    3. '   ' → logprob: -5.188567638397217
    4. '       ' → logprob: -6.063567638397217
    5. ' ' → logprob: -7.313567638397217
    6. '  ' → logprob: -10.313568115234375
    7. '	H' → logprob: -11.813568115234375
    8. '    ' → logprob: -11.938568115234375
    9. ' ' → logprob: -12.063568115234375
    10. '     ' → logprob: -12.438568115234375

Token 914: ' ≤' (ID: 72554)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.6990661025047302
    2. ',' → logprob: -1.574066162109375
    3. '       ' → logprob: -1.949066162109375
    4. '   ' → logprob: -2.699066162109375
    5. '<=' → logprob: -3.449066162109375
    6. ' ≤' → logprob: -3.449066162109375
    7. ' and' → logprob: -5.199066162109375
    8. '           ' → logprob: -5.824066162109375
    9. '-' → logprob: -6.074066162109375
    10. '≤' → logprob: -6.074066162109375

Token 915: ' ' (ID: 220)
  Prédit: '480'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '480' → logprob: -0.02735093981027603
    2. '640' → logprob: -3.652350902557373
    3. ' ' → logprob: -7.152350902557373
    4. '400' → logprob: -8.402351379394531
    5. '360' → logprob: -11.277351379394531
    6. '512' → logprob: -11.527351379394531
    7. '
' → logprob: -11.777351379394531
    8. '320' → logprob: -13.527351379394531
    9. '960' → logprob: -13.777351379394531
    10. '  ' → logprob: -13.902351379394531

Token 916: '480' (ID: 19050)
  Prédit: '480'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '480' → logprob: -0.004685733933001757
    2. '640' → logprob: -5.379685878753662
    3. '400' → logprob: -10.004685401916504
    4. '512' → logprob: -12.129685401916504
    5. '360' → logprob: -12.504685401916504
    6. '
' → logprob: -12.754685401916504
    7. ' ' → logprob: -13.129685401916504
    8. '440' → logprob: -13.629685401916504
    9. '320' → logprob: -14.129685401916504
    10. '460' → logprob: -14.754685401916504

Token 917: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035774115473032
    2. '
' → logprob: -3.4107742309570312
    3. '        
' → logprob: -6.285774230957031
    4. ',' → logprob: -8.535774230957031
    5. '   ' → logprob: -10.785774230957031
    6. '    
' → logprob: -11.660774230957031
    7. '```' → logprob: -11.785774230957031
    8. ',
' → logprob: -12.410774230957031
    9. '

' → logprob: -12.660774230957031
    10. 'import' → logprob: -12.785774230957031

Token 918: ' N' (ID: 478)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33408355712890625
    2. 'R' → logprob: -1.9590835571289062
    3. ' R' → logprob: -2.2090835571289062
    4. '   ' → logprob: -4.709083557128906
    5. ' ' → logprob: -5.084083557128906
    6. 'x' → logprob: -5.584083557128906
    7. 'step' → logprob: -5.834083557128906
    8. '#' → logprob: -5.834083557128906
    9. ' step' → logprob: -5.834083557128906
    10. '
' → logprob: -7.084083557128906

Token 919: ' ≤' (ID: 72554)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.04311063885688782
    2. '<=' → logprob: -3.5431106090545654
    3. ' ≤' → logprob: -5.4181108474731445
    4. '   ' → logprob: -5.6681108474731445
    5. '       ' → logprob: -6.0431108474731445
    6. ' =' → logprob: -7.0431108474731445
    7. '=' → logprob: -7.4181108474731445
    8. '0' → logprob: -7.9181108474731445
    9. ' ' → logprob: -8.543110847473145
    10. ' <' → logprob: -8.543110847473145

Token 920: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.15199922025203705
    2. '50' → logprob: -2.9019992351531982
    3. '200' → logprob: -3.9019992351531982
    4. '20' → logprob: -4.026998996734619
    5. '500' → logprob: -4.026998996734619
    6. '250' → logprob: -5.026998996734619
    7. '10' → logprob: -5.276998996734619
    8. '30' → logprob: -5.776998996734619
    9. '25' → logprob: -5.776998996734619
    10. '64' → logprob: -6.151998996734619

Token 921: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.173850417137146
    2. '50' → logprob: -3.0488505363464355
    3. '200' → logprob: -3.2988505363464355
    4. '500' → logprob: -3.4238505363464355
    5. '250' → logprob: -4.5488505363464355
    6. '20' → logprob: -4.7988505363464355
    7. '300' → logprob: -5.0488505363464355
    8. '150' → logprob: -6.0488505363464355
    9. '30' → logprob: -6.1738505363464355
    10. '400' → logprob: -6.1738505363464355

Token 922: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003747344948351383
    2. '
' → logprob: -5.753747463226318
    3. '        
' → logprob: -7.503747463226318
    4. 'step' → logprob: -11.87874698638916
    5. ',' → logprob: -12.25374698638916
    6. '```' → logprob: -13.87874698638916
    7. ',
' → logprob: -14.00374698638916
    8. ' step' → logprob: -14.12874698638916
    9. '           ' → logprob: -14.25374698638916
    10. '   ' → logprob: -14.62874698638916

Token 923: ' ce' (ID: 2357)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011220536194741726
    2. '#' → logprob: -5.011220455169678
    3. 'step' → logprob: -5.886220455169678
    4. ' step' → logprob: -7.386220455169678
    5. '   ' → logprob: -8.636220932006836
    6. 'R' → logprob: -8.636220932006836
    7. ' #' → logprob: -8.886220932006836
    8. 'x' → logprob: -9.761220932006836
    9. 'max' → logprob: -9.761220932006836
    10. ' ' → logprob: -9.761220932006836

Token 924: ' qui' (ID: 2780)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7257162928581238
    2. ' qui' → logprob: -1.8507163524627686
    3. '       ' → logprob: -2.4757163524627686
    4. '#' → logprob: -2.8507163524627686
    5. 'space' → logprob: -3.2257163524627686
    6. 'n' → logprob: -3.3507163524627686
    7. '    ' → logprob: -3.7257163524627686
    8. ' ' → logprob: -4.2257161140441895
    9. ' ' → logprob: -4.4757161140441895
    10. 'st' → logprob: -4.6007161140441895

Token 925: ' donne' (ID: 30004)
  Prédit: ' permet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' permet' → logprob: -0.033528007566928864
    2. ' rend' → logprob: -4.158527851104736
    3. ' est' → logprob: -5.158527851104736
    4. ' signifie' → logprob: -6.283527851104736
    5. ' n' → logprob: -6.783527851104736
    6. ' laisse' → logprob: -7.033527851104736
    7. '
' → logprob: -7.283527851104736
    8. ' garantit' → logprob: -7.283527851104736
    9. ' allows' → logprob: -7.783527851104736
    10. ' semble' → logprob: -7.908527851104736

Token 926: ' un' (ID: 537)
  Prédit: ' environ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' environ' → logprob: -0.37894144654273987
    2. ' une' → logprob: -2.003941535949707
    3. 'une' → logprob: -2.253941535949707
    4. '   ' → logprob: -3.378941535949707
    5. 'un' → logprob: -3.628941535949707
    6. ' un' → logprob: -5.503941535949707
    7. 'en' → logprob: -5.628941535949707
    8. 'env' → logprob: -6.128941535949707
    9. 'des' → logprob: -6.378941535949707
    10. '       ' → logprob: -7.253941535949707

Token 927: ' maximum' (ID: 10562)
  Prédit: 'ma'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ma' → logprob: -0.7964305877685547
    2. 'maximum' → logprob: -1.2964305877685547
    3. 'pas' → logprob: -3.0464305877685547
    4. 'grid' → logprob: -3.1714305877685547
    5. 'max' → logprob: -3.1714305877685547
    6. 'comp' → logprob: -3.7964305877685547
    7. 'nombre' → logprob: -3.9214305877685547
    8. 'gr' → logprob: -4.046430587768555
    9. ' ma' → logprob: -4.296430587768555
    10. 'code' → logprob: -4.546430587768555

Token 928: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04111097380518913
    2. ' de' → logprob: -3.7911109924316406
    3. ' d' → logprob: -4.791110992431641
    4. '   ' → logprob: -5.166110992431641
    5. ' of' → logprob: -6.666110992431641
    6. '=' → logprob: -8.04111099243164
    7. ',' → logprob: -8.29111099243164
    8. ' possible' → logprob: -8.54111099243164
    9. 'de' → logprob: -8.66611099243164
    10. ' for' → logprob: -8.79111099243164

Token 929: ' ~' (ID: 6574)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -1.3326338529586792
    2. '(' → logprob: -1.7076338529586792
    3. '300' → logprob: -2.2076339721679688
    4. '200' → logprob: -2.4576339721679688
    5. '500' → logprob: -2.5826339721679688
    6. '614' → logprob: -2.8326339721679688
    7. '400' → logprob: -3.0826339721679688
    8. '640' → logprob: -3.3326339721679688
    9. '600' → logprob: -3.8326339721679688
    10. '122' → logprob: -4.082633972167969

Token 930: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8521061539649963
    2. '640' → logprob: -1.7271060943603516
    3. '100' → logprob: -2.7271060943603516
    4. '300' → logprob: -2.7271060943603516
    5. '620' → logprob: -2.8521060943603516
    6. '200' → logprob: -2.9771060943603516
    7. '614' → logprob: -2.9771060943603516
    8. '600' → logprob: -3.4771060943603516
    9. '500' → logprob: -4.977106094360352
    10. ' (' → logprob: -5.102106094360352

Token 931: '640' (ID: 25479)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1579900979995728
    2. '(W' → logprob: -1.2829900979995728
    3. ' (' → logprob: -2.032989978790283
    4. '640' → logprob: -2.407989978790283
    5. '((' → logprob: -2.532989978790283
    6. '(int' → logprob: -2.782989978790283
    7. '641' → logprob: -4.657989978790283
    8. 'int' → logprob: -5.157989978790283
    9. '320' → logprob: -5.282989978790283
    10. ' ((' → logprob: -5.532989978790283

Token 932: '/' (ID: 14)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.8966753482818604
    2. '//' → logprob: -1.2716753482818604
    3. '   ' → logprob: -2.3966753482818604
    4. '       ' → logprob: -2.7716753482818604
    5. '*' → logprob: -2.8966753482818604
    6. ' ' → logprob: -3.6466753482818604
    7. ' /' → logprob: -3.7716753482818604
    8. ')' → logprob: -4.271675109863281
    9. ' *' → logprob: -4.396675109863281
    10. '/' → logprob: -4.521675109863281

Token 933: ' R' (ID: 460)
  Prédit: '(R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(R' → logprob: -0.540271520614624
    2. '2' → logprob: -1.040271520614624
    3. '(' → logprob: -4.290271759033203
    4. ' (' → logprob: -5.040271759033203
    5. '(int' → logprob: -5.290271759033203
    6. 'R' → logprob: -5.540271759033203
    7. 'max' → logprob: -5.540271759033203
    8. ' ' → logprob: -5.790271759033203
    9. '
' → logprob: -5.790271759033203
    10. '30' → logprob: -5.915271759033203

Token 934: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.08675125241279602
    2. '//' → logprob: -3.2117512226104736
    3. ')' → logprob: -3.3367512226104736
    4. ' /' → logprob: -6.086751461029053
    5. ' //' → logprob: -6.586751461029053
    6. '   ' → logprob: -6.836751461029053
    7. '2' → logprob: -7.211751461029053
    8. ' ' → logprob: -7.711751461029053
    9. ' )' → logprob: -7.711751461029053
    10. '       ' → logprob: -8.461750984191895

Token 935: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00047821682528592646
    2. ' ' → logprob: -7.750478267669678
    3. '
' → logprob: -10.12547779083252
    4. '```' → logprob: -13.25047779083252
    5. '4' → logprob: -13.62547779083252
    6. '1' → logprob: -14.12547779083252
    7. '3' → logprob: -14.62547779083252
    8. '(' → logprob: -14.62547779083252
    9. '  
' → logprob: -14.75047779083252
    10. '

' → logprob: -14.87547779083252

Token 936: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45155438780784607
    2. ')**' → logprob: -1.0765544176101685
    3. ' )' → logprob: -3.826554298400879
    4. ')^' → logprob: -8.076554298400879
    5. '//' → logprob: -8.826554298400879
    6. ')*(' → logprob: -9.826554298400879
    7. ')*' → logprob: -9.826554298400879
    8. ' ' → logprob: -10.076554298400879
    9. '   ' → logprob: -10.076554298400879
    10. '/' → logprob: -10.201554298400879

Token 937: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3104780912399292
    2. '       ' → logprob: -1.9354780912399292
    3. '   ' → logprob: -2.0604782104492188
    4. ' +' → logprob: -2.0604782104492188
    5. '
' → logprob: -2.1854782104492188
    6. '+' → logprob: -2.1854782104492188
    7. '**' → logprob: -4.185478210449219
    8. '+
' → logprob: -4.310478210449219
    9. ',' → logprob: -4.685478210449219
    10. ' ' → logprob: -4.685478210449219

Token 938: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20149092376232147
    2. ' (' → logprob: -1.701490879058838
    3. ' ' → logprob: -10.951491355895996
    4. '(int' → logprob: -11.076491355895996
    5. '480' → logprob: -11.826491355895996
    6. '((' → logprob: -12.076491355895996
    7. '(H' → logprob: -12.201491355895996
    8. '2' → logprob: -12.201491355895996
    9. 'int' → logprob: -12.451491355895996
    10. ' ' → logprob: -12.951491355895996

Token 939: '480' (ID: 19050)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28280940651893616
    2. '480' → logprob: -1.5328093767166138
    3. ' (' → logprob: -3.5328094959259033
    4. ' ' → logprob: -7.407809257507324
    5. '240' → logprob: -8.532809257507324
    6. '(int' → logprob: -9.407809257507324
    7. '2' → logprob: -9.782809257507324
    8. '(R' → logprob: -9.782809257507324
    9. '(H' → logprob: -10.032809257507324
    10. 'int' → logprob: -10.282809257507324

Token 940: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.04409925267100334
    2. ' /' → logprob: -3.1690993309020996
    3. '/R' → logprob: -6.9190993309021
    4. ')' → logprob: -10.294098854064941
    5. '/
' → logprob: -10.294098854064941
    6. ')/' → logprob: -11.544098854064941
    7. '   ' → logprob: -12.044098854064941
    8. '       ' → logprob: -12.169098854064941
    9. '/(' → logprob: -12.294098854064941
    10. '/)' → logprob: -12.794098854064941

Token 941: ' R' (ID: 460)
  Prédit: '(R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -0.09518790245056152
    2. 'R' → logprob: -2.8451879024505615
    3. ' (' → logprob: -3.5951879024505615
    4. ' R' → logprob: -5.595188140869141
    5. '(' → logprob: -6.720188140869141
    6. ')' → logprob: -9.22018814086914
    7. ' ' → logprob: -9.47018814086914
    8. '2' → logprob: -10.22018814086914
    9. '   ' → logprob: -10.47018814086914
    10. '<R' → logprob: -11.59518814086914

Token 942: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.0017490806058049202
    2. '2' → logprob: -6.626749038696289
    3. '       ' → logprob: -8.751749038696289
    4. ')' → logprob: -9.251749038696289
    5. '*' → logprob: -10.001749038696289
    6. ' /' → logprob: -10.001749038696289
    7. '   ' → logprob: -10.376749038696289
    8. '	' → logprob: -11.251749038696289
    9. ')/' → logprob: -11.251749038696289
    10. '           ' → logprob: -11.751749038696289

Token 943: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.6047699318733066e-05
    2. ' ' → logprob: -11.125016212463379
    3. '
' → logprob: -15.250016212463379
    4. ')' → logprob: -15.812516212463379
    5. '1' → logprob: -16.250015258789062
    6. '۲' → logprob: -16.250015258789062
    7. '```' → logprob: -16.312515258789062
    8. '２' → logprob: -16.625015258789062
    9. '   ' → logprob: -16.937515258789062
    10. '

' → logprob: -17.000015258789062

Token 944: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0033412138000130653
    2. ')
' → logprob: -6.503341197967529
    3. ')**' → logprob: -6.878341197967529
    4. ' )' → logprob: -8.378341674804688
    5. ')*' → logprob: -8.753341674804688
    6. '//' → logprob: -9.378341674804688
    7. '))' → logprob: -9.503341674804688
    8. '   ' → logprob: -9.753341674804688
    9. ')//' → logprob: -9.753341674804688
    10. ')`' → logprob: -10.378341674804688

Token 945: ' points' (ID: 5571)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.439444363117218
    2. '       ' → logprob: -1.1894443035125732
    3. '        
' → logprob: -4.064444541931152
    4. '   ' → logprob: -4.189444541931152
    5. '    
' → logprob: -4.814444541931152
    6. ':
' → logprob: -6.314444541931152
    7. ' =' → logprob: -6.314444541931152
    8. '  
' → logprob: -6.314444541931152
    9. ':' → logprob: -6.939444541931152
    10. '):
' → logprob: -7.189444541931152

Token 946: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40670326352119446
    2. '   ' → logprob: -2.156703233718872
    3. '       ' → logprob: -2.406703233718872
    4. '    
' → logprob: -2.781703233718872
    5. '        
' → logprob: -2.906703233718872
    6. '  
' → logprob: -5.156703472137451
    7. ' 
' → logprob: -6.781703472137451
    8. '   
' → logprob: -6.906703472137451
    9. ' =' → logprob: -7.406703472137451
    10. ',' → logprob: -7.781703472137451

Token 947: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6606889367103577
    2. '
' → logprob: -0.7856889367103577
    3. 'step' → logprob: -3.785688877105713
    4. '   ' → logprob: -6.035688877105713
    5. '        
' → logprob: -7.035688877105713
    6. '```' → logprob: -7.035688877105713
    7. ' step' → logprob: -7.660688877105713
    8. '    
' → logprob: -8.910689353942871
    9. '  
' → logprob: -9.910689353942871
    10. '``' → logprob: -10.160689353942871

Token 948: ' #
' (ID: 21888)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22507543861865997
    2. '       ' → logprob: -1.7250754833221436
    3. 'step' → logprob: -4.4750752449035645
    4. '        
' → logprob: -5.2250752449035645
    5. '   ' → logprob: -5.7250752449035645
    6. ' step' → logprob: -6.2250752449035645
    7. '    
' → logprob: -6.9750752449035645
    8. '  
' → logprob: -8.975075721740723
    9. 'Step' → logprob: -10.350075721740723
    10. '
' → logprob: -10.600075721740723

Token 949: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3837663233280182
    2. 'step' → logprob: -1.8837662935256958
    3. '   ' → logprob: -2.6337664127349854
    4. '
' → logprob: -2.8837664127349854
    5. ' step' → logprob: -3.3837664127349854
    6. '        
' → logprob: -5.633766174316406
    7. '    
' → logprob: -7.383766174316406
    8. ' spacing' → logprob: -8.383766174316406
    9. 'spacing' → logprob: -9.133766174316406
    10. 'steps' → logprob: -9.258766174316406

Token 950: ' #' (ID: 1069)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.01349877193570137
    2. '       ' → logprob: -4.388498783111572
    3. '   ' → logprob: -7.638498783111572
    4. 'pas' → logprob: -8.013498306274414
    5. ' step' → logprob: -9.763498306274414
    6. '
' → logprob: -10.013498306274414
    7. 'grid' → logprob: -10.638498306274414
    8. '        
' → logprob: -11.638498306274414
    9. '#' (adapté à ' #') → logprob: -11.763498306274414
    10. 'Step' → logprob: -12.013498306274414

Token 951: ' Alternative' (ID: 52728)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.02551237680017948
    2. '       ' → logprob: -4.525512218475342
    3. ' step' → logprob: -4.525512218475342
    4. '   ' → logprob: -6.025512218475342
    5. 'grid' → logprob: -7.525512218475342
    6. 'pas' → logprob: -8.4005126953125
    7. '
' → logprob: -9.0255126953125
    8. ' ' → logprob: -9.5255126953125
    9. '#' → logprob: -10.7755126953125
    10. 'steps' → logprob: -10.7755126953125

Token 952: ' serait' (ID: 35762)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8019744157791138
    2. ':' → logprob: -0.9269744157791138
    3. ':
' → logprob: -3.051974296569824
    4. '   ' → logprob: -3.551974296569824
    5. 'step' → logprob: -3.926974296569824
    6. 'import' → logprob: -4.176974296569824
    7. '        
' → logprob: -5.051974296569824
    8. '
' → logprob: -5.051974296569824
    9. '=' → logprob: -5.176974296569824
    10. ' step' → logprob: -5.301974296569824

Token 953: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9547263383865356
    2. ' de' → logprob: -1.7047263383865356
    3. '       ' → logprob: -1.8297263383865356
    4. '    ' → logprob: -2.579726219177246
    5. 'de' → logprob: -2.704726219177246
    6. ' d' → logprob: -2.704726219177246
    7. 'd' → logprob: -3.204726219177246
    8. 'import' → logprob: -4.454726219177246
    9. '        ' → logprob: -6.204726219177246
    10. 'a' → logprob: -6.579726219177246

Token 954: ' tester' (ID: 51819)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3873806595802307
    2. 'contin' → logprob: -2.012380599975586
    3. ' continuer' → logprob: -2.637380599975586
    4. 'continue' → logprob: -2.887380599975586
    5. 'from' → logprob: -3.887380599975586
    6. ' continue' → logprob: -4.637380599975586
    7. ' import' → logprob: -4.762380599975586
    8. '#' → logprob: -5.262380599975586
    9. 'for' → logprob: -5.637380599975586
    10. ' from' → logprob: -6.262380599975586

Token 955: ' la' (ID: 557)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.743972897529602
    2. '   ' → logprob: -1.118972897529602
    3. ' une' → logprob: -2.6189727783203125
    4. ' de' → logprob: -3.8689727783203125
    5. '    ' → logprob: -3.8689727783203125
    6. 'une' → logprob: -4.3689727783203125
    7. ' un' → logprob: -4.3689727783203125
    8. ' step' → logprob: -4.6189727783203125
    9. ' for' → logprob: -4.9939727783203125
    10. 'x' → logprob: -5.4939727783203125

Token 956: ' gé' (ID: 29562)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.6005688905715942
    2. 'step' → logprob: -1.6005688905715942
    3. 'R' → logprob: -1.7255688905715942
    4. ' R' → logprob: -2.7255687713623047
    5. 'for' → logprob: -2.7255687713623047
    6. '   ' → logprob: -2.7255687713623047
    7. 'pas' → logprob: -3.1005687713623047
    8. ' step' → logprob: -3.1005687713623047
    9. '       ' → logprob: -3.3505687713623047
    10. 'x' → logprob: -4.225568771362305

Token 957: 'ométr' (ID: 145046)
  Prédit: 'ométr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ométr' → logprob: -0.39199718832969666
    2. 'om' → logprob: -1.516997218132019
    3. 'ometr' → logprob: -3.0169970989227295
    4. 'r' → logprob: -3.7669970989227295
    5. 'ometry' → logprob: -4.516997337341309
    6. 'n' → logprob: -4.516997337341309
    7. 'omet' → logprob: -6.141997337341309
    8. 'ner' → logprob: -6.641997337341309
    9. 'l' → logprob: -7.016997337341309
    10. 'né' → logprob: -7.266997337341309

Token 958: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.04354669898748398
    2. 'rie' → logprob: -3.293546676635742
    3. '   ' → logprob: -6.543546676635742
    4. 'ique' → logprob: -7.293546676635742
    5. '#' → logprob: -7.668546676635742
    6. 'étr' → logprob: -7.793546676635742
    7. 'e' → logprob: -7.918546676635742
    8. 'ié' → logprob: -8.293546676635742
    9. '
' → logprob: -8.418546676635742
    10. 'é' → logprob: -8.418546676635742

Token 959: ' exacte' (ID: 188756)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03985695540904999
    2. '   ' → logprob: -4.664856910705566
    3. '
' → logprob: -5.039856910705566
    4. '_step' → logprob: -5.539856910705566
    5. 'step' → logprob: -5.539856910705566
    6. '_' → logprob: -5.914856910705566
    7. ' =' → logprob: -6.289856910705566
    8. ' step' → logprob: -6.289856910705566
    9. '_
' → logprob: -6.289856910705566
    10. '        
' → logprob: -6.414856910705566

Token 960: ' mais' (ID: 2899)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.761599600315094
    2. '
' → logprob: -1.1365995407104492
    3. 'step' → logprob: -2.386599540710449
    4. '        
' → logprob: -3.136599540710449
    5. ' step' → logprob: -3.136599540710449
    6. '_step' → logprob: -4.761599540710449
    7. '    
' → logprob: -4.886599540710449
    8. '   ' → logprob: -5.011599540710449
    9. 'pas' → logprob: -6.511599540710449
    10. ' 
' → logprob: -7.136599540710449

Token 961: ' complexe' (ID: 78615)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02672160230576992
    2. '   ' → logprob: -4.026721477508545
    3. '    ' → logprob: -5.151721477508545
    4. '        ' → logprob: -7.151721477508545
    5. '        
' → logprob: -7.901721477508545
    6. ' for' → logprob: -8.151721954345703
    7. ' continue' → logprob: -8.901721954345703
    8. ' ' → logprob: -9.151721954345703
    9. ' #' → logprob: -9.151721954345703
    10. '    
' → logprob: -9.151721954345703

Token 962: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33883529901504517
    2. '
' → logprob: -1.4638352394104004
    3. '   ' → logprob: -3.0888352394104004
    4. '        
' → logprob: -5.2138352394104
    5. '    
' → logprob: -5.5888352394104
    6. ',' → logprob: -7.9638352394104
    7. ' step' → logprob: -8.588835716247559
    8. '  
' → logprob: -9.338835716247559
    9. '

' → logprob: -9.713835716247559
    10. 'import' → logprob: -9.713835716247559

Token 963: '       ' (ID: 309)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.5488719344139099
    2. '       ' → logprob: -0.9238719344139099
    3. ' step' → logprob: -4.173871994018555
    4. '   ' → logprob: -5.048871994018555
    5. '
' → logprob: -5.798871994018555
    6. ' ' → logprob: -8.173871994018555
    7. 'steps' → logprob: -9.548871994018555
    8. '        
' → logprob: -9.923871994018555
    9. 'grid' → logprob: -9.923871994018555
    10. '	step' → logprob: -10.673871994018555

Token 964: ' #' (ID: 1069)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.051638390868902206
    2. '       ' → logprob: -3.42663836479187
    3. ' step' → logprob: -4.051638603210449
    4. 'pas' → logprob: -8.42663860321045
    5. '
' → logprob: -9.55163860321045
    6. 'grid' → logprob: -10.05163860321045
    7. '   ' → logprob: -10.17663860321045
    8. 'Step' → logprob: -11.17663860321045
    9. '        
' → logprob: -11.17663860321045
    10. 'gap' → logprob: -11.80163860321045

Token 965: ' Le' (ID: 2018)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.05356553569436073
    2. ' step' → logprob: -3.053565502166748
    3. '       ' → logprob: -5.803565502166748
    4. 'grid' → logprob: -6.553565502166748
    5. '   ' → logprob: -8.928565979003906
    6. 'import' → logprob: -9.553565979003906
    7. '
' → logprob: -9.553565979003906
    8. 'if' → logprob: -9.678565979003906
    9. ' grid' → logprob: -9.803565979003906
    10. ' if' → logprob: -11.053565979003906

Token 966: ' pas' (ID: 2173)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.10149065405130386
    2. ' step' → logprob: -2.3514907360076904
    3. 'pas' → logprob: -7.226490497589111
    4. 'grid' → logprob: -8.60149097442627
    5. ' pas' → logprob: -9.10149097442627
    6. '   ' → logprob: -9.47649097442627
    7. ' ' → logprob: -10.22649097442627
    8. ' grid' → logprob: -10.35149097442627
    9. '       ' → logprob: -11.22649097442627
    10. '#' → logprob: -11.47649097442627

Token 967: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05513309687376022
    2. '=' → logprob: -2.930133104324341
    3. 'step' → logprob: -9.180132865905762
    4. '       ' → logprob: -9.430132865905762
    5. '   ' → logprob: -10.305132865905762
    6. '_step' → logprob: -11.555132865905762
    7. 'size' → logprob: -12.305132865905762
    8. 'pas' → logprob: -12.930132865905762
    9. ' ' → logprob: -13.055132865905762
    10. '_' → logprob: -13.055132865905762

Token 968: ''é' (ID: 12728)
  Prédit: 'ep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ep' → logprob: -0.4146340787410736
    2. 'step' → logprob: -1.914634108543396
    3. 'pas' → logprob: -2.9146339893341064
    4. 'x' → logprob: -3.2896339893341064
    5. 'e' → logprob: -3.9146339893341064
    6. 'eps' → logprob: -4.0396342277526855
    7. '=' → logprob: -4.2896342277526855
    8. ' step' → logprob: -5.0396342277526855
    9. ' =' → logprob: -5.0396342277526855
    10. 'ép' → logprob: -5.4146342277526855

Token 969: 'chant' (ID: 15311)
  Prédit: 'chant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chant' → logprob: -0.002538444008678198
    2. 'chelle' → logprob: -6.752538681030273
    3. 'ch' → logprob: -7.502538681030273
    4. 'psilon' → logprob: -8.377538681030273
    5. 't' → logprob: -8.502538681030273
    6. '=' → logprob: -9.752538681030273
    7. '#' → logprob: -10.002538681030273
    8. 'p' → logprob: -10.252538681030273
    9. 'pas' → logprob: -10.377538681030273
    10. 'chat' → logprob: -10.627538681030273

Token 970: 'ill' (ID: 492)
  Prédit: 'illon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'illon' → logprob: -0.6354781985282898
    2. 'ill' → logprob: -0.7604781985282898
    3. '       ' → logprob: -7.3854780197143555
    4. 'ion' → logprob: -7.5104780197143555
    5. '   ' → logprob: -8.010478019714355
    6. '     ' → logprob: -8.635478019714355
    7. 'onn' → logprob: -8.635478019714355
    8. '=' → logprob: -8.885478019714355
    9. '    ' → logprob: -9.510478019714355
    10. 'illion' → logprob: -9.510478019714355

Token 971: 'onn' (ID: 9525)
  Prédit: 'onn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onn' → logprob: -0.10606048256158829
    2. 'on' → logprob: -2.35606050491333
    3. 'e' → logprob: -5.60606050491333
    4. 'age' → logprob: -6.35606050491333
    5. 'ion' → logprob: -9.106060028076172
    6. 'onnement' → logprob: -9.356060028076172
    7. 'onne' → logprob: -9.481060028076172
    8. '=' → logprob: -10.356060028076172
    9. 'ill' → logprob: -10.606060028076172
    10. '>' → logprob: -11.106060028076172

Token 972: 'age' (ID: 477)
  Prédit: 'age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.22963860630989075
    2. 'e' → logprob: -1.6046385765075684
    3. 'onn' → logprob: -6.104638576507568
    4. 'on' → logprob: -6.354638576507568
    5. 'le' → logprob: -8.979639053344727
    6. 'ge' → logprob: -9.729639053344727
    7. '   ' → logprob: -11.104639053344727
    8. ' age' → logprob: -11.479639053344727
    9. '=' → logprob: -11.604639053344727
    10. 'ion' → logprob: -11.854639053344727

Token 973: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09632282704114914
    2. '=' → logprob: -3.221322774887085
    3. '       ' → logprob: -3.221322774887085
    4. 'step' → logprob: -4.471323013305664
    5. ' step' → logprob: -7.721323013305664
    6. 's' → logprob: -9.721323013305664
    7. ',' → logprob: -11.346323013305664
    8. '   ' → logprob: -11.346323013305664
    9. 'pas' → logprob: -11.346323013305664
    10. '_step' → logprob: -11.471323013305664

Token 974: ' on' (ID: 402)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.4027131497859955
    2. 'step' → logprob: -1.1527131795883179
    3. '       ' → logprob: -4.277713298797607
    4. ' max' → logprob: -7.652713298797607
    5. ' s' → logprob: -8.27771282196045
    6. 'max' → logprob: -8.52771282196045
    7. ' spacing' → logprob: -8.65271282196045
    8. 's' → logprob: -8.77771282196045
    9. ' =' → logprob: -8.77771282196045
    10. 'steps' → logprob: -9.77771282196045

Token 975: ' chois' (ID: 33475)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.43494343757629395
    2. ' =' → logprob: -1.434943437576294
    3. '=' → logprob: -2.434943437576294
    4. '       ' → logprob: -4.309943199157715
    5. ' step' → logprob: -4.559943199157715
    6. '_step' → logprob: -7.184943199157715
    7. 'pas' → logprob: -7.434943199157715
    8. 's' → logprob: -7.809943199157715
    9. 'steps' → logprob: -7.809943199157715
    10. 'sample' → logprob: -8.184943199157715

Token 976: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.0016147232381626964
    2. 't' → logprob: -6.501614570617676
    3. 'oit' → logprob: -10.251614570617676
    4. '=' → logprob: -11.501614570617676
    5. '   ' → logprob: -11.501614570617676
    6. 'sit' → logprob: -11.501614570617676
    7. 'ons' → logprob: -11.626614570617676
    8. 'ot' → logprob: -12.001614570617676
    9. 'ît' → logprob: -12.251614570617676
    10. 'ir' → logprob: -12.501614570617676

Token 977: ' R' (ID: 460)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.5634467601776123
    2. 'max' → logprob: -1.0634467601776123
    3. '       ' → logprob: -3.0634467601776123
    4. ' step' → logprob: -4.313446998596191
    5. ' max' → logprob: -4.438446998596191
    6. 'R' → logprob: -5.313446998596191
    7. 'pas' → logprob: -5.313446998596191
    8. ' R' → logprob: -6.438446998596191
    9. '=' → logprob: -7.938446998596191
    10. ' =' → logprob: -8.188446998596191

Token 978: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.6992534399032593
    2. ' /' → logprob: -1.8242534399032593
    3. '//' → logprob: -2.199253559112549
    4. '_step' → logprob: -2.324253559112549
    5. 'step' → logprob: -2.449253559112549
    6. ' //' → logprob: -3.949253559112549
    7. '_' → logprob: -4.699253559112549
    8. 'if' → logprob: -5.699253559112549
    9. '_spacing' → logprob: -6.199253559112549
    10. 'for' → logprob: -6.199253559112549

Token 979: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00016516048344783485
    2. ' ' → logprob: -8.750164985656738
    3. '
' → logprob: -13.375164985656738
    4. '(' → logprob: -13.500164985656738
    5. 'max' → logprob: -13.625164985656738
    6. '1' → logprob: -14.375164985656738
    7. '4' → logprob: -14.750164985656738
    8. '   ' → logprob: -15.000164985656738
    9. '```' → logprob: -15.125164985656738
    10. '3' → logprob: -15.250164985656738

Token 980: ' ou' (ID: 2031)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.053240977227687836
    2. '       ' → logprob: -3.803241014480591
    3. 'step' → logprob: -4.428240776062012
    4. '        
' → logprob: -5.303240776062012
    5. ' 
' → logprob: -5.428240776062012
    6. '
' → logprob: -5.928240776062012
    7. ' if' → logprob: -6.428240776062012
    8. 'if' → logprob: -7.303240776062012
    9. ' =' → logprob: -7.428240776062012
    10. ' step' → logprob: -7.678240776062012

Token 981: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5292529463768005
    2. 'max' → logprob: -0.9042529463768005
    3. 'min' → logprob: -5.654253005981445
    4. ' max' → logprob: -6.529253005981445
    5. '(max' → logprob: -7.654253005981445
    6. '(' → logprob: -8.029253005981445
    7. 'R' → logprob: -8.654253005981445
    8. '2' → logprob: -9.779253005981445
    9. ' ' → logprob: -10.279253005981445
    10. '(min' → logprob: -10.779253005981445

Token 982: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14436228573322296
    2. 'max' → logprob: -2.019362211227417
    3. 'min' → logprob: -6.644362449645996
    4. ' max' → logprob: -8.394362449645996
    5. '(' → logprob: -9.769362449645996
    6. '(max' → logprob: -10.144362449645996
    7. '0' → logprob: -10.894362449645996
    8. 'R' → logprob: -11.019362449645996
    9. ' ' → logprob: -11.269362449645996
    10. '2' → logprob: -12.144362449645996

Token 983: ' pixel' (ID: 25898)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16828425228595734
    2. 'if' → logprob: -2.0432841777801514
    3. 'step' → logprob: -3.9182841777801514
    4. ' step' → logprob: -5.9182844161987305
    5. '
' → logprob: -6.6682844161987305
    6. '       ' → logprob: -8.41828441619873
    7. 'import' → logprob: -8.54328441619873
    8. ')' → logprob: -8.66828441619873
    9. ' ' → logprob: -8.79328441619873
    10. ',' → logprob: -8.91828441619873

Token 984: ' minimum' (ID: 11085)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16812929511070251
    2. 'if' → logprob: -2.1681292057037354
    3. '
' → logprob: -3.9181292057037354
    4. '       ' → logprob: -4.4181294441223145
    5. 'step' → logprob: -5.0431294441223145
    6. ' step' → logprob: -7.0431294441223145
    7. '        
' → logprob: -8.043128967285156
    8. ' or' → logprob: -8.418128967285156
    9. '   ' → logprob: -9.418128967285156
    10. ')' → logprob: -9.418128967285156

Token 985: ' pour' (ID: 1930)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2772814631462097
    2. 'step' → logprob: -2.0272815227508545
    3. '       ' → logprob: -2.7772815227508545
    4. ' =' → logprob: -3.5272815227508545
    5. ' step' → logprob: -4.777281284332275
    6. ' if' → logprob: -5.777281284332275
    7. '=' → logprob: -5.777281284332275
    8. '        
' → logprob: -6.777281284332275
    9. 'if' → logprob: -7.152281284332275
    10. '=
' → logprob: -7.527281284332275

Token 986: ' couvrir' (ID: 197187)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.7337087392807007
    2. ' step' → logprob: -1.3587087392807007
    3. 'pas' → logprob: -2.3587088584899902
    4. ' pas' → logprob: -3.1087088584899902
    5. '_step' → logprob: -3.4837088584899902
    6. ' _' → logprob: -3.9837088584899902
    7. 'max' → logprob: -4.48370885848999
    8. 'range' → logprob: -4.73370885848999
    9. 'x' → logprob: -5.10870885848999
    10. 'le' → logprob: -5.35870885848999

Token 987: ' correctement' (ID: 123961)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' step' → logprob: -1.7336372137069702
    2. ' ' → logprob: -1.8586372137069702
    3. '       ' → logprob: -2.2336373329162598
    4. ' max' → logprob: -2.4836373329162598
    5. 'max' → logprob: -2.4836373329162598
    6. ' spacing' → logprob: -2.6086373329162598
    7. 'step' → logprob: -2.6086373329162598
    8. '1' → logprob: -3.1086373329162598
    9. ' x' → logprob: -3.9836373329162598
    10. 'pas' → logprob: -3.9836373329162598

Token 988: '.
' (ID: 558)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.2191016972064972
    2. ' step' → logprob: -2.094101667404175
    3. '       ' → logprob: -3.094101667404175
    4. ' =' → logprob: -4.094101905822754
    5. ' if' → logprob: -5.719101905822754
    6. '_step' → logprob: -5.969101905822754
    7. '=' → logprob: -6.344101905822754
    8. 'if' → logprob: -7.344101905822754
    9. '   ' → logprob: -7.344101905822754
    10. '
' → logprob: -7.469101905822754

Token 989: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17374299466609955
    2. 'step' → logprob: -2.2987430095672607
    3. '
' → logprob: -3.1737430095672607
    4. ' step' → logprob: -4.298742771148682
    5. '        
' → logprob: -5.673742771148682
    6. ' 
' → logprob: -9.67374324798584
    7. '  
' → logprob: -10.42374324798584
    8. '       
' → logprob: -10.79874324798584
    9. '    
' → logprob: -10.92374324798584
    10. 'pas' → logprob: -11.17374324798584

Token 990: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' (adapté à ' step') → logprob: -0.2793402373790741
    2. '       ' → logprob: -1.5293402671813965
    3. ' step' → logprob: -3.6543402671813965
    4. '
' → logprob: -6.9043402671813965
    5. '        
' → logprob: -9.154339790344238
    6. '   ' → logprob: -10.904339790344238
    7. 'if' → logprob: -11.529339790344238
    8. 'Step' → logprob: -12.154339790344238
    9. ' ' → logprob: -12.779339790344238
    10. ' if' → logprob: -12.904339790344238

Token 991: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759405493736267
    2. ' =' → logprob: -0.8259405493736267
    3. 's' → logprob: -15.075940132141113
    4. ' ' → logprob: -15.700940132141113
    5. '=int' → logprob: -15.700940132141113
    6. ',' → logprob: -16.07594108581543
    7. '＝' → logprob: -16.32594108581543
    8. ' =
' → logprob: -16.57594108581543
    9. ' ' → logprob: -16.82594108581543
    10. '   ' → logprob: -17.20094108581543

Token 992: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.10029207170009613
    2. ' max' → logprob: -2.3502919673919678
    3. 'min' → logprob: -9.600292205810547
    4. '(max' → logprob: -11.850292205810547
    5. ' R' → logprob: -12.850292205810547
    6. 'R' → logprob: -12.975292205810547
    7. ' min' → logprob: -12.975292205810547
    8. '1' → logprob: -13.850292205810547
    9. '	max' → logprob: -13.975292205810547
    10. ' ' → logprob: -14.600292205810547

Token 993: '(R' (ID: 4092)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003169272094964981
    2. '(R' → logprob: -5.878169059753418
    3. '(int' → logprob: -8.003169059753418
    4. '1' → logprob: -10.503169059753418
    5. '(round' → logprob: -14.003169059753418
    6. 'int' → logprob: -14.128169059753418
    7. '(radius' → logprob: -15.003169059753418
    8. '((' → logprob: -15.003169059753418
    9. '(r' → logprob: -16.128170013427734
    10. ' (' → logprob: -16.128170013427734

Token 994: ' /' (ID: 820)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.8150700926780701
    2. '/' → logprob: -0.9400700926780701
    3. ' //' → logprob: -2.190070152282715
    4. ',' → logprob: -3.565070152282715
    5. ' /' → logprob: -3.690070152282715
    6. '2' → logprob: -7.440070152282715
    7. ' ' → logprob: -8.065070152282715
    8. '1' → logprob: -8.190070152282715
    9. '   ' → logprob: -8.190070152282715
    10. ' ,' → logprob: -10.440070152282715

Token 995: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.572941179503687e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -16.250045776367188
    4. '1' → logprob: -16.875045776367188
    5. '
' → logprob: -17.125045776367188
    6. '  ' → logprob: -18.062545776367188
    7. 'max' → logprob: -18.187545776367188
    8. '4' → logprob: -18.312545776367188
    9. '```' → logprob: -18.437545776367188
    10. '
' → logprob: -18.812545776367188

Token 996: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.1928003813372925e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -16.000051498413086
    4. '
' → logprob: -16.250051498413086
    5. '  ' → logprob: -16.750051498413086
    6. '1' → logprob: -17.000051498413086
    7. '4' → logprob: -17.125051498413086
    8. 'float' → logprob: -17.375051498413086
    9. 'max' → logprob: -17.875051498413086
    10. '3' → logprob: -17.937551498413086

Token 997: '.' (ID: 13)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013567865826189518
    2. ' ,' → logprob: -6.626356601715088
    3. '1' → logprob: -11.001357078552246
    4. ',
' → logprob: -12.501357078552246
    5. '   ' → logprob: -12.626357078552246
    6. '0' → logprob: -12.876357078552246
    7. '.' → logprob: -13.376357078552246
    8. ' if' → logprob: -14.126357078552246
    9. 'if' → logprob: -14.501357078552246
    10. '2' → logprob: -15.126357078552246

Token 998: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003174740821123123
    2. '2' → logprob: -6.503174781799316
    3. ',' → logprob: -6.878174781799316
    4. ' ' → logprob: -8.128174781799316
    5. '0' → logprob: -8.503174781799316
    6. ')' → logprob: -9.378174781799316
    7. ' ,' → logprob: -11.003174781799316
    8. 'if' → logprob: -11.253174781799316
    9. '   ' → logprob: -11.628174781799316
    10. '.' → logprob: -12.503174781799316

Token 999: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001034595537930727
    2. ' ,' → logprob: -6.876034736633301
    3. '1' → logprob: -13.5010347366333
    4. '   ' → logprob: -15.3760347366333
    5. ',
' → logprob: -15.8760347366333
    6. 'import' → logprob: -17.501033782958984
    7. '0' → logprob: -17.626033782958984
    8. ' ' → logprob: -17.876033782958984
    9. ')' → logprob: -18.126033782958984
    10. '```' → logprob: -18.251033782958984

Token 1000: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -18.5000057220459
    4. '0' → logprob: -20.2500057220459
    5. '
' → logprob: -21.0000057220459
    6. '  ' → logprob: -21.6250057220459
    7. '１' → logprob: -22.3750057220459
    8. ')' → logprob: -22.7500057220459
    9. ' ' → logprob: -23.0000057220459
    10. '       ' → logprob: -23.1250057220459

Token 1001: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.125005722045898
    3. '0' → logprob: -15.750005722045898
    4. '   ' → logprob: -16.7500057220459
    5. ')' → logprob: -19.3125057220459
    6. '```' → logprob: -19.4375057220459
    7. '  ' → logprob: -19.5625057220459
    8. '１' → logprob: -19.8125057220459
    9. '' → logprob: -20.2500057220459
    10. '.' → logprob: -20.2500057220459

Token 1002: '.' (ID: 13)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014716439181938767
    2. ' )' → logprob: -9.375146865844727
    3. ')
' → logprob: -10.375146865844727
    4. '.' → logprob: -10.500146865844727
    5. ')
' → logprob: -14.625146865844727
    6. '   ' → logprob: -14.750146865844727
    7. ' ' → logprob: -15.250146865844727
    8. '))' → logprob: -15.375146865844727
    9. ')

' → logprob: -15.500146865844727
    10. '),' → logprob: -15.500146865844727

Token 1003: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016074994346126914
    2. ')' → logprob: -8.750161170959473
    3. ')
' → logprob: -13.125161170959473
    4. '```' → logprob: -15.375161170959473
    5. '))' → logprob: -17.125160217285156
    6. '00' → logprob: -17.875160217285156
    7. '000' → logprob: -18.000160217285156
    8. '   ' → logprob: -18.125160217285156
    9. ')`' → logprob: -18.125160217285156
    10. ' ' → logprob: -18.375160217285156

Token 1004: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001509150955826044
    2. ')
' → logprob: -6.501509189605713
    3. '   ' → logprob: -12.751508712768555
    4. '       ' → logprob: -13.001508712768555
    5. ' )' → logprob: -13.876508712768555
    6. ')
' → logprob: -14.751508712768555
    7. ')

' → logprob: -15.501508712768555
    8. ')`' → logprob: -17.001508712768555
    9. '),' → logprob: -17.751508712768555
    10. ').' → logprob: -18.501508712768555

Token 1005: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.040823765099048615
    2. '   ' → logprob: -4.040823936462402
    3. 'y' → logprob: -4.415823936462402
    4. 'for' → logprob: -5.665823936462402
    5. 'found' → logprob: -5.790823936462402
    6. '```' → logprob: -6.540823936462402
    7. 'x' → logprob: -7.290823936462402
    8. 'possible' → logprob: -7.540823936462402
    9. 'safe' → logprob: -7.665823936462402
    10. '        
' → logprob: -8.790823936462402

Token 1006: ' safe' (ID: 7703)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5678364038467407
    2. 'y' → logprob: -1.3178364038467407
    3. 'found' → logprob: -2.067836284637451
    4. 'x' → logprob: -3.942836284637451
    5. 'safe' (adapté à ' safe') → logprob: -5.192836284637451
    6. 'for' → logprob: -5.317836284637451
    7. 'import' → logprob: -5.442836284637451
    8. 'possible' → logprob: -5.442836284637451
    9. '        
' → logprob: -9.06783676147461
    10. '   ' → logprob: -9.06783676147461

Token 1007: '_found' (ID: 50825)
  Prédit: '_found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_found' → logprob: -0.34449464082717896
    2. ' =' → logprob: -1.8444945812225342
    3. '=' → logprob: -2.469494581222534
    4. '_point' → logprob: -3.719494581222534
    5. '_points' → logprob: -4.219494819641113
    6. '_' → logprob: -4.719494819641113
    7. 'found' → logprob: -8.219494819641113
    8. '_exists' → logprob: -9.469494819641113
    9. '_x' → logprob: -9.844494819641113
    10. '_pos' → logprob: -10.094494819641113

Token 1008: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1002068892121315
    2. ' =' → logprob: -2.3502068519592285
    3. ' ' → logprob: -15.350207328796387
    4. '=True' → logprob: -17.10020637512207
    5. ',' → logprob: -17.85020637512207
    6. '=False' → logprob: -18.10020637512207
    7. ':' → logprob: -18.47520637512207
    8. '   ' → logprob: -18.72520637512207
    9. ' =
' → logprob: -18.85020637512207
    10. '=

' → logprob: -19.22520637512207

Token 1009: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0002613358374219388
    2. ' False' → logprob: -8.250261306762695
    3. '(False' → logprob: -21.000261306762695
    4. 'True' → logprob: -22.125261306762695
    5. '   ' → logprob: -22.500261306762695
    6. '=False' → logprob: -23.000261306762695
    7. 'F' → logprob: -23.250261306762695
    8. 'false' → logprob: -23.625261306762695
    9. 'None' → logprob: -25.000261306762695
    10. '_false' → logprob: -25.500261306762695

Token 1010: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00987307634204626
    2. '
' → logprob: -4.759872913360596
    3. '        
' → logprob: -7.134872913360596
    4. '   ' → logprob: -8.509873390197754
    5. ' for' → logprob: -9.134873390197754
    6. 'for' → logprob: -9.884873390197754
    7. '    
' → logprob: -10.259873390197754
    8. '<|end|>' → logprob: -10.259873390197754
    9. '  
' → logprob: -11.134873390197754
    10. ',' → logprob: -12.884873390197754

Token 1011: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010571630671620369
    2. 'for' → logprob: -5.510571479797363
    3. '
' → logprob: -5.635571479797363
    4. '   ' → logprob: -6.010571479797363
    5. ' for' → logprob: -7.885571479797363
    6. '        
' → logprob: -9.760571479797363
    7. '    
' → logprob: -11.635571479797363
    8. 'while' → logprob: -13.135571479797363
    9. 'y' → logprob: -13.510571479797363
    10. 'x' → logprob: -14.135571479797363

Token 1012: ' #' (ID: 1069)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.9425387382507324
    2. '       ' → logprob: -1.1925387382507324
    3. 'for' → logprob: -1.1925387382507324
    4. 'x' → logprob: -5.942538738250732
    5. 'import' → logprob: -7.317538738250732
    6. ' for' → logprob: -9.44253921508789
    7. ' y' → logprob: -10.19253921508789
    8. 'py' → logprob: -11.31753921508789
    9. 'yv' → logprob: -11.69253921508789
    10. 'current' → logprob: -11.69253921508789

Token 1013: ' Parc' (ID: 68618)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.042280104011297226
    2. 'x' → logprob: -3.9172801971435547
    3. 'for' → logprob: -3.9172801971435547
    4. '       ' → logprob: -6.667280197143555
    5. 'import' → logprob: -8.417280197143555
    6. ' y' → logprob: -10.042280197143555
    7. '   ' → logprob: -11.042280197143555
    8. 'ys' → logprob: -11.167280197143555
    9. 'py' → logprob: -11.542280197143555
    10. 'yv' → logprob: -12.417280197143555

Token 1014: 'ours' (ID: 2327)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.14462167024612427
    2. 'ours' → logprob: -2.5196216106414795
    3. 'cour' → logprob: -3.6446216106414795
    4. '       ' → logprob: -4.644621849060059
    5. 'ourt' → logprob: -5.519621849060059
    6. 'ur' → logprob: -5.769621849060059
    7. 'cur' → logprob: -6.269621849060059
    8. 'urer' → logprob: -6.394621849060059
    9. '   ' → logprob: -6.519621849060059
    10. 'court' → logprob: -6.769621849060059

Token 1015: ' dans' (ID: 2671)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.20319455862045288
    2. '       ' → logprob: -2.0781946182250977
    3. ' y' → logprob: -2.9531946182250977
    4. 'for' → logprob: -5.703194618225098
    5. ' for' → logprob: -5.953194618225098
    6. 'x' → logprob: -7.953194618225098
    7. '_y' → logprob: -9.453194618225098
    8. '   ' → logprob: -9.578194618225098
    9. ' in' → logprob: -10.328194618225098
    10. ' of' → logprob: -11.203194618225098

Token 1016: ' la' (ID: 557)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04929729923605919
    2. 'y' → logprob: -3.299297332763672
    3. 'x' → logprob: -5.549297332763672
    4. '   ' → logprob: -5.799297332763672
    5. ' range' → logprob: -5.799297332763672
    6. 'int' → logprob: -7.299297332763672
    7. ' y' → logprob: -8.799297332763672
    8. 'for' → logprob: -8.924297332763672
    9. 'la' → logprob: -9.924297332763672
    10. '
' → logprob: -10.174297332763672

Token 1017: ' zone' (ID: 15070)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.009233342483639717
    2. 'for' → logprob: -5.259233474731445
    3. 'import' → logprob: -6.759233474731445
    4. 'int' → logprob: -6.759233474731445
    5. 'y' → logprob: -7.509233474731445
    6. 'x' → logprob: -7.759233474731445
    7. '   ' → logprob: -8.509233474731445
    8. 'while' → logprob: -9.009233474731445
    9. 'fr' → logprob: -9.384233474731445
    10. 'py' → logprob: -9.634233474731445

Token 1018: ' autor' (ID: 13432)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2456267923116684
    2. '       ' → logprob: -1.6206268072128296
    3. ' y' → logprob: -4.245626926422119
    4. 'for' → logprob: -5.745626926422119
    5. 'x' → logprob: -6.745626926422119
    6. ' for' → logprob: -7.370626926422119
    7. '   ' → logprob: -8.370626449584961
    8. '
' → logprob: -9.245626449584961
    9. '```' → logprob: -9.370626449584961
    10. 'import' → logprob: -10.495626449584961

Token 1019: 'isée' (ID: 59331)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.356437623500824
    2. 'ée' → logprob: -2.1064376831054688
    3. '   ' → logprob: -2.7314376831054688
    4. 'y' → logprob: -3.1064376831054688
    5. 'x' → logprob: -4.106437683105469
    6. 'rée' → logprob: -4.606437683105469
    7. 'range' → logprob: -4.981437683105469
    8. 'née' → logprob: -4.981437683105469
    9. 'ge' → logprob: -5.356437683105469
    10. 'for' → logprob: -5.856437683105469

Token 1020: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16249911487102509
    2. 'y' → logprob: -1.9124990701675415
    3. ' y' → logprob: -6.787498950958252
    4. 'for' → logprob: -7.037498950958252
    5. 'x' → logprob: -9.03749942779541
    6. ' for' → logprob: -9.16249942779541
    7. '   ' → logprob: -10.91249942779541
    8. 'import' → logprob: -12.53749942779541
    9. 'Y' → logprob: -12.91249942779541
    10. ',' → logprob: -13.03749942779541

Token 1021: 'centre' (ID: 119798)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.017643867060542107
    2. 'range' → logprob: -4.767643928527832
    3. 'int' → logprob: -5.392643928527832
    4. 'x' → logprob: -6.517643928527832
    5. '   ' → logprob: -7.267643928527832
    6. 'for' → logprob: -7.392643928527832
    7. ' R' → logprob: -7.392643928527832
    8. ')' → logprob: -7.892643928527832
    9. '       ' → logprob: -8.017643928527832
    10. ' range' → logprob: -8.517643928527832

Token 1022: ' machine' (ID: 7342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3655444383621216
    2. '_x' → logprob: -1.2405444383621216
    3. '=' → logprob: -4.490544319152832
    4. ' =' → logprob: -5.365544319152832
    5. 'y' → logprob: -8.365544319152832
    6. ' x' → logprob: -8.365544319152832
    7. '_y' → logprob: -8.865544319152832
    8. '   ' → logprob: -8.865544319152832
    9. ')' → logprob: -9.115544319152832
    10. '_' → logprob: -10.365544319152832

Token 1023: ')
' (ID: 446)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2081711292266846
    2. ' =' → logprob: -1.7081711292266846
    3. 'x' → logprob: -1.8331711292266846
    4. ')' → logprob: -2.3331711292266846
    5. ',' → logprob: -2.4581711292266846
    6. '):
' → logprob: -2.7081711292266846
    7. '       ' → logprob: -3.4581711292266846
    8. '   ' → logprob: -3.7081711292266846
    9. '):' → logprob: -4.2081708908081055
    10. '_x' → logprob: -4.3331708908081055

Token 1024: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004831310827285051
    2. 'y' → logprob: -5.629831314086914
    3. ' y' → logprob: -7.754831314086914
    4. ' for' → logprob: -8.004831314086914
    5. 'for' → logprob: -8.504831314086914
    6. '   ' → logprob: -8.504831314086914
    7. '
' → logprob: -10.129831314086914
    8. 'x' → logprob: -11.504831314086914
    9. '        
' → logprob: -12.254831314086914
    10. '```' → logprob: -12.754831314086914

Token 1025: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.11519179493188858
    2. '       ' → logprob: -2.365191698074341
    3. ' y' → logprob: -4.99019193649292
    4. 'for' → logprob: -5.36519193649292
    5. 'x' → logprob: -5.74019193649292
    6. ' for' → logprob: -9.615191459655762
    7. '   ' → logprob: -9.615191459655762
    8. 'import' → logprob: -10.990191459655762
    9. 'yv' → logprob: -12.365191459655762
    10. ' x' → logprob: -12.490191459655762

Token 1026: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889892905950546
    2. ' =' → logprob: -2.5788989067077637
    3. 'range' → logprob: -13.203899383544922
    4. ' in' → logprob: -13.453899383544922
    5. '=
' → logprob: -13.953899383544922
    6. 'for' → logprob: -14.203899383544922
    7. ' ' → logprob: -14.453899383544922
    8. ')' → logprob: -14.578899383544922
    9. '_range' → logprob: -14.578899383544922
    10. '=int' → logprob: -14.578899383544922

Token 1027: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -1.3544423381972592e-05
    2. ' R' → logprob: -11.37501335144043
    3. 'float' → logprob: -13.37501335144043
    4. 'radius' → logprob: -15.00001335144043
    5. '   ' → logprob: -16.25001335144043
    6. 'r' → logprob: -17.25001335144043
    7. '	R' → logprob: -18.12501335144043
    8. 'Radius' → logprob: -19.00001335144043
    9. ' ' → logprob: -20.12501335144043
    10. '       ' → logprob: -20.25001335144043

Token 1028: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1029: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.24524851143360138
    2. '
' → logprob: -2.120248556137085
    3. '       ' → logprob: -3.245248556137085
    4. ' while' → logprob: -3.745248556137085
    5. '<|end|>' → logprob: -3.745248556137085
    6. '<|end|>' → logprob: -5.745248317718506
    7. '	while' → logprob: -5.995248317718506
    8. '   ' → logprob: -6.620248317718506
    9. ':' → logprob: -6.870248317718506
    10. ',' → logprob: -7.745248317718506

Token 1030: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.02149500884115696
    2. ' while' → logprob: -4.0214948654174805
    3. '
' → logprob: -5.8964948654174805
    4. '       ' → logprob: -7.5214948654174805
    5. '   ' → logprob: -10.77149486541748
    6. '	while' → logprob: -11.39649486541748
    7. ' 
' → logprob: -11.77149486541748
    8. '        
' → logprob: -12.39649486541748
    9. '    
' → logprob: -13.39649486541748
    10. 'While' → logprob: -13.39649486541748

Token 1031: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.03804149478673935
    2. ' y' → logprob: -3.288041591644287
    3. '   ' → logprob: -17.038042068481445
    4. '	y' → logprob: -17.413042068481445
    5. '(y' → logprob: -17.788042068481445
    6. ' ' → logprob: -19.663042068481445
    7. '_y' → logprob: -20.413042068481445
    8. 'py' → logprob: -20.788042068481445
    9. 'Y' → logprob: -21.038042068481445
    10. ''y' → logprob: -21.413042068481445

Token 1032: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.04860564321279526
    2. '<=' → logprob: -3.0486056804656982
    3. ' <' → logprob: -12.048605918884277
    4. ')<=' → logprob: -12.423605918884277
    5. '<' → logprob: -12.923605918884277
    6. '=' → logprob: -13.423605918884277
    7. ' +=' → logprob: -13.673605918884277
    8. '+=' → logprob: -13.923605918884277
    9. '+' → logprob: -14.298605918884277
    10. ' ≤' → logprob: -14.923605918884277

Token 1033: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.3544423381972592e-05
    2. ' H' → logprob: -11.25001335144043
    3. '   ' → logprob: -14.62501335144043
    4. '(H' → logprob: -18.75001335144043
    5. '	H' → logprob: -19.00001335144043
    6. ' ' → logprob: -19.12501335144043
    7. '       ' → logprob: -20.37501335144043
    8. '
' → logprob: -21.00001335144043
    9. '  ' → logprob: -21.75001335144043
    10. '`' → logprob: -22.00001335144043

Token 1034: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10714156925678253
    2. ':
' → logprob: -2.3571414947509766
    3. '+' → logprob: -5.482141494750977
    4. '<|end|>' → logprob: -6.607141494750977
    5. ' +' → logprob: -7.857141494750977
    6. '   ' → logprob: -8.232141494750977
    7. '<|end|>' → logprob: -8.232141494750977
    8. ' :' → logprob: -8.857141494750977
    9. '+:' → logprob: -9.607141494750977
    10. '):' → logprob: -10.107141494750977

Token 1035: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -1.0206720617134124e-05
    2. ' R' → logprob: -11.50001049041748
    3. ' ' → logprob: -18.000009536743164
    4. '	R' → logprob: -19.000009536743164
    5. '   ' → logprob: -20.250009536743164
    6. ' ' → logprob: -21.000009536743164
    7. '_R' → logprob: -21.375009536743164
    8. 'r' → logprob: -22.125009536743164
    9. 'Ｒ' → logprob: -22.250009536743164
    10. '       ' → logprob: -22.500009536743164

Token 1036: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08932231366634369
    2. ':
' → logprob: -2.464322328567505
    3. '       ' → logprob: -8.714322090148926
    4. ' and' → logprob: -9.714322090148926
    5. '   ' → logprob: -10.339322090148926
    6. '<|end|>' → logprob: -10.464322090148926
    7. ' :' → logprob: -10.714322090148926
    8. '<|end|>' → logprob: -11.339322090148926
    9. '):' → logprob: -11.589322090148926
    10. ')' → logprob: -11.714322090148926

Token 1037: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.00030078491545282304
    2. ' not' → logprob: -8.500300407409668
    3. '(not' → logprob: -9.250300407409668
    4. '   ' → logprob: -14.375300407409668
    5. 'y' → logprob: -14.500300407409668
    6. '	not' → logprob: -18.250301361083984
    7. '
' → logprob: -18.500301361083984
    8. 'safe' → logprob: -18.625301361083984
    9. '(' → logprob: -19.250301361083984
    10. '(y' → logprob: -19.500301361083984

Token 1038: ' safe' (ID: 7703)
  Prédit: 'safe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'safe' → logprob: -1.6240566083070007e-06
    2. ' safe' → logprob: -13.375001907348633
    3. 's' → logprob: -19.875001907348633
    4. 'Safe' → logprob: -20.125001907348633
    5. '
' → logprob: -20.375001907348633
    6. '_safe' → logprob: -20.500001907348633
    7. 'unsafe' → logprob: -20.625001907348633
    8. '.safe' → logprob: -21.000001907348633
    9. 'y' → logprob: -21.125001907348633
    10. 'sa' → logprob: -21.500001907348633

Token 1039: '_found' (ID: 50825)
  Prédit: '_found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_found' → logprob: -4.8590300139039755e-05
    2. 'found' → logprob: -10.250048637390137
    3. ':' → logprob: -11.625048637390137
    4. 'Found' → logprob: -13.000048637390137
    5. '_FOUND' → logprob: -13.750048637390137
    6. ':
' → logprob: -15.375048637390137
    7. '   ' → logprob: -15.625048637390137
    8. '	found' → logprob: -15.875048637390137
    9. '```' → logprob: -16.50004768371582
    10. ' Found' → logprob: -17.00004768371582

Token 1040: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12696851789951324
    2. ':
' → logprob: -2.1269686222076416
    3. '<|end|>' → logprob: -11.876968383789062
    4. '       ' → logprob: -12.001968383789062
    5. ':

' → logprob: -12.126968383789062
    6. '   ' → logprob: -12.251968383789062
    7. '=' → logprob: -13.001968383789062
    8. '):
' → logprob: -13.001968383789062
    9. ' :' → logprob: -13.251968383789062
    10. '**' → logprob: -13.626968383789062

Token 1041: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17021286487579346
    2. '           ' → logprob: -2.670212745666504
    3. '
' → logprob: -3.295212745666504
    4. '   ' → logprob: -4.045212745666504
    5. ':
' → logprob: -4.170212745666504
    6. 'x' → logprob: -5.170212745666504
    7. ':' → logprob: -5.920212745666504
    8. ',' → logprob: -6.170212745666504
    9. '<|end|>' → logprob: -6.795212745666504
    10. '<|end|>' → logprob: -6.920212745666504

Token 1042: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.2066473364830017
    2. ' x' → logprob: -1.7066473960876465
    3. '   ' → logprob: -5.9566473960876465
    4. '       ' → logprob: -5.9566473960876465
    5. '	x' → logprob: -11.081646919250488
    6. '           ' → logprob: -11.331646919250488
    7. '
' → logprob: -11.456646919250488
    8. ' ' → logprob: -13.081646919250488
    9. '```' → logprob: -14.581646919250488
    10. '    ' → logprob: -14.581646919250488

Token 1043: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004078401252627373
    2. ' =' → logprob: -5.504078388214111
    3. '=
' → logprob: -19.504077911376953
    4. '＝' → logprob: -20.254077911376953
    5. '=}' → logprob: -21.004077911376953
    6. ' ' → logprob: -21.754077911376953
    7. 'x' → logprob: -22.004077911376953
    8. '   ' → logprob: -22.254077911376953
    9. '=

' → logprob: -23.004077911376953
    10. ')' → logprob: -23.254077911376953

Token 1044: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -1.6240566083070007e-06
    2. ' R' → logprob: -13.375001907348633
    3. '	R' → logprob: -17.500001907348633
    4. '           ' → logprob: -18.125001907348633
    5. '   ' → logprob: -18.625001907348633
    6. 'Ｒ' → logprob: -20.625001907348633
    7. '<R' → logprob: -21.250001907348633
    8. '       ' → logprob: -21.500001907348633
    9. '_R' → logprob: -22.500001907348633
    10. ' ' → logprob: -22.625001907348633

Token 1045: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1046: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05135443061590195
    2. '<|end|>' → logprob: -3.17635440826416
    3. '<|end|>' → logprob: -4.92635440826416
    4. 'while' → logprob: -7.67635440826416
    5. '       ' → logprob: -9.17635440826416
    6. '	       ' → logprob: -9.42635440826416
    7. ' while' → logprob: -9.55135440826416
    8. '          ' → logprob: -10.05135440826416
    9. '   ' → logprob: -10.05135440826416
    10. '            
' → logprob: -10.17635440826416

Token 1047: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.20408183336257935
    2. '           ' → logprob: -1.7040817737579346
    3. ' while' → logprob: -5.954082012176514
    4. 'While' → logprob: -10.579081535339355
    5. '       ' → logprob: -11.454081535339355
    6. '	while' → logprob: -11.579081535339355
    7. '               ' → logprob: -12.204081535339355
    8. 'x' → logprob: -12.829081535339355
    9. '   ' → logprob: -12.954081535339355
    10. '            
' → logprob: -13.204081535339355

Token 1048: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0005653033731505275
    2. ' x' → logprob: -7.500565528869629
    3. 'not' → logprob: -11.375565528869629
    4. ' not' → logprob: -14.250565528869629
    5. '(x' → logprob: -17.875564575195312
    6. '   ' → logprob: -18.000564575195312
    7. 'True' → logprob: -18.250564575195312
    8. '	x' → logprob: -18.750564575195312
    9. '$x' → logprob: -19.500564575195312
    10. 'y' → logprob: -19.750564575195312

Token 1049: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.25193139910697937
    2. '<=' → logprob: -1.5019314289093018
    3. '<' → logprob: -14.251931190490723
    4. ' <' → logprob: -14.876931190490723
    5. ')<=' → logprob: -15.126931190490723
    6. '=' → logprob: -15.376931190490723
    7. 'x' → logprob: -15.501931190490723
    8. '+=' → logprob: -16.00193214416504
    9. ' ' → logprob: -16.37693214416504
    10. ']<=' → logprob: -16.62693214416504

Token 1050: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -1.3306015716807451e-05
    2. ' W' → logprob: -11.25001335144043
    3. '   ' → logprob: -15.50001335144043
    4. '	W' → logprob: -17.50001335144043
    5. '(W' → logprob: -19.75001335144043
    6. ' ' → logprob: -20.25001335144043
    7. '       ' → logprob: -20.50001335144043
    8. '           ' → logprob: -20.62501335144043
    9. '  ' → logprob: -21.25001335144043
    10. '=W' → logprob: -21.25001335144043

Token 1051: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6931482553482056
    2. ' -' → logprob: -0.6931482553482056
    3. '-R' → logprob: -14.443148612976074
    4. ' ' → logprob: -14.943148612976074
    5. '−' → logprob: -16.568147659301758
    6. '   ' → logprob: -16.818147659301758
    7. '–' → logprob: -17.443147659301758
    8. '\-' → logprob: -17.568147659301758
    9. 'minus' → logprob: -18.193147659301758
    10. '```' → logprob: -18.568147659301758

Token 1052: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -1.700132997939363e-05
    2. ' R' → logprob: -11.000017166137695
    3. 'x' → logprob: -16.125017166137695
    4. ' ' → logprob: -17.000017166137695
    5. '   ' → logprob: -17.500017166137695
    6. '	R' → logprob: -18.125017166137695
    7. '_R' → logprob: -18.500017166137695
    8. 'r' → logprob: -19.500017166137695
    9. '       ' → logprob: -19.750017166137695
    10. 'y' → logprob: -19.750017166137695

Token 1053: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.42819464206695557
    2. ':
' → logprob: -1.3031946420669556
    3. ':' → logprob: -3.053194522857666
    4. 'and' → logprob: -3.678194522857666
    5. '           ' → logprob: -6.178194522857666
    6. '   ' → logprob: -7.053194522857666
    7. '               ' → logprob: -7.428194522857666
    8. '       ' → logprob: -7.678194522857666
    9. ' ' → logprob: -10.428194999694824
    10. '<|end|>' → logprob: -11.053194999694824

Token 1054: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.01815064437687397
    2. ' not' → logprob: -4.018150806427002
    3. 'x' → logprob: -14.893150329589844
    4. '(not' → logprob: -15.768150329589844
    5. '   ' → logprob: -15.893150329589844
    6. '	not' → logprob: -16.643150329589844
    7. '
' → logprob: -17.518150329589844
    8. 'True' → logprob: -17.893150329589844
    9. '!' → logprob: -18.268150329589844
    10. ' ' → logprob: -19.518150329589844

Token 1055: ' safe' (ID: 7703)
  Prédit: 'safe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'safe' → logprob: -0.00015872348740231246
    2. ' safe' → logprob: -8.750158309936523
    3. '_safe' → logprob: -15.750158309936523
    4. 'x' → logprob: -17.625158309936523
    5. 'not' → logprob: -18.375158309936523
    6. '   ' → logprob: -19.375158309936523
    7. '.safe' → logprob: -19.625158309936523
    8. 'Safe' → logprob: -19.875158309936523
    9. '```' → logprob: -20.875158309936523
    10. '
' → logprob: -21.125158309936523

Token 1056: '_found' (ID: 50825)
  Prédit: '_found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_found' → logprob: -0.0005572011577896774
    2. 'found' → logprob: -7.5005574226379395
    3. 'Found' → logprob: -12.625556945800781
    4. '_FOUND' → logprob: -15.500556945800781
    5. '```' → logprob: -15.500556945800781
    6. 'x' → logprob: -15.750556945800781
    7. 'FOUND' → logprob: -15.875556945800781
    8. '	found' → logprob: -16.75055694580078
    9. '-found' → logprob: -17.50055694580078
    10. '(x' → logprob: -17.75055694580078

Token 1057: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6341283917427063
    2. ':' → logprob: -0.7591283917427063
    3. '               ' → logprob: -6.634128570556641
    4. '           ' → logprob: -8.88412857055664
    5. '):
' → logprob: -10.88412857055664
    6. ' and' → logprob: -11.75912857055664
    7. '=' → logprob: -11.75912857055664
    8. ':

' → logprob: -12.00912857055664
    9. ' :
' → logprob: -12.00912857055664
    10. '       ' → logprob: -12.13412857055664

Token 1058: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005625653429888189
    2. '           ' → logprob: -8.37556266784668
    3. '<|end|>' → logprob: -9.00056266784668
    4. '              ' → logprob: -10.37556266784668
    5. '                
' → logprob: -10.37556266784668
    6. '	           ' → logprob: -10.62556266784668
    7. '       ' → logprob: -10.75056266784668
    8. ':
' → logprob: -11.75056266784668
    9. '                               ' → logprob: -11.75056266784668
    10. '                   ' → logprob: -11.75056266784668

Token 1059: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.09670168906450272
    2. '               ' → logprob: -3.0967016220092773
    3. ' if' → logprob: -3.0967016220092773
    4. '                   ' → logprob: -6.346701622009277
    5. '                ' → logprob: -12.096701622009277
    6. '           ' → logprob: -12.096701622009277
    7. '              ' → logprob: -12.596701622009277
    8. '   ' → logprob: -13.096701622009277
    9. '                 ' → logprob: -13.096701622009277
    10. '                
' → logprob: -13.971701622009277

Token 1060: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.10020678490400314
    2. ' is' → logprob: -2.3502068519592285
    3. '	is' → logprob: -16.97520637512207
    4. '(is' → logprob: -18.10020637512207
    5. '                   ' → logprob: -18.60020637512207
    6. '               ' → logprob: -18.97520637512207
    7. ' ' → logprob: -19.22520637512207
    8. '   ' → logprob: -19.47520637512207
    9. ' ' → logprob: -19.47520637512207
    10. 'not' → logprob: -19.72520637512207

Token 1061: '_safe' (ID: 87847)
  Prédit: '_safe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_safe' → logprob: -2.15310683415737e-05
    2. 'safe' → logprob: -10.875021934509277
    3. '_' → logprob: -13.375021934509277
    4. ' safe' → logprob: -14.750021934509277
    5. ' _' → logprob: -15.500021934509277
    6. '_SAFE' → logprob: -16.00002098083496
    7. '```' → logprob: -16.25002098083496
    8. '\' → logprob: -16.62502098083496
    9. 's' → logprob: -17.37502098083496
    10. '_s' → logprob: -17.75002098083496

Token 1062: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -1.981667537620524e-06
    2. '_points' → logprob: -14.625001907348633
    3. '(x' → logprob: -14.750001907348633
    4. 'point' → logprob: -15.125001907348633
    5. '```' → logprob: -15.750001907348633
    6. '_Point' → logprob: -16.000001907348633
    7. '_' → logprob: -16.125001907348633
    8. '(point' → logprob: -16.750001907348633
    9. '_p' → logprob: -16.750001907348633
    10. ' _' → logprob: -17.125001907348633

Token 1063: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0074388510547578335
    2. '(int' → logprob: -5.007438659667969
    3. '(' → logprob: -7.257438659667969
    4. '(
' → logprob: -11.257438659667969
    5. '(round' → logprob: -12.757438659667969
    6. '((' → logprob: -14.382438659667969
    7. ' (' → logprob: -14.382438659667969
    8. '(i' → logprob: -14.382438659667969
    9. '(float' → logprob: -14.757438659667969
    10. 'int' → logprob: -14.757438659667969

Token 1064: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003079334564972669
    2. ' ,' → logprob: -8.1253080368042
    3. ',y' → logprob: -11.8753080368042
    4. ',
' → logprob: -12.8753080368042
    5. ',p' → logprob: -14.1253080368042
    6. '‌,' → logprob: -15.2503080368042
    7. ',int' → logprob: -15.6253080368042
    8. '               ' → logprob: -15.6253080368042
    9. ',x' → logprob: -15.8753080368042
    10. ',float' → logprob: -16.250307083129883

Token 1065: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.4736459888808895e-05
    2. 'py' → logprob: -11.500014305114746
    3. ' y' → logprob: -12.375014305114746
    4. 'x' → logprob: -15.500014305114746
    5. '<|end|>' → logprob: -17.125015258789062
    6. ')y' → logprob: -18.125015258789062
    7. ')' → logprob: -18.250015258789062
    8. ',y' → logprob: -18.375015258789062
    9. 'px' → logprob: -18.750015258789062
    10. ',' → logprob: -18.875015258789062

Token 1066: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0926632210612297
    2. '):' → logprob: -2.592663288116455
    3. '):
' → logprob: -4.342663288116455
    4. ' ,' → logprob: -7.842663288116455
    5. ')' → logprob: -8.717662811279297
    6. ' ):' → logprob: -10.467662811279297
    7. '):
' → logprob: -11.342662811279297
    8. '   ' → logprob: -11.467662811279297
    9. ',
' → logprob: -11.467662811279297
    10. '):

' → logprob: -11.717662811279297

Token 1067: ' beams' (ID: 81992)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -1.1637164789135568e-05
    2. ' beams' → logprob: -11.375011444091797
    3. 'Be' → logprob: -16.875011444091797
    4. 'beam' → logprob: -17.000011444091797
    5. '   ' → logprob: -17.875011444091797
    6. '(be' → logprob: -17.875011444091797
    7. '```' → logprob: -18.000011444091797
    8. 'b' → logprob: -18.000011444091797
    9. 'beats' → logprob: -18.250011444091797
    10. '	be' → logprob: -19.125011444091797

Token 1068: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.813969957875088e-05
    2. ' ,' → logprob: -9.625067710876465
    3. ',
' → logprob: -14.500067710876465
    4. '               ' → logprob: -15.125067710876465
    5. ',R' → logprob: -15.125067710876465
    6. ',r' → logprob: -15.375067710876465
    7. '           ' → logprob: -15.875067710876465
    8. '                   ' → logprob: -16.00006866455078
    9. '```' → logprob: -16.12506866455078
    10. '       ' → logprob: -16.50006866455078

Token 1069: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -4.60414821645827e-06
    2. 'float' → logprob: -13.000004768371582
    3. ' R' → logprob: -13.125004768371582
    4. 'r' → logprob: -16.500003814697266
    5. '   ' → logprob: -16.875003814697266
    6. '
' → logprob: -17.875003814697266
    7. 'radius' → logprob: -18.000003814697266
    8. '
' → logprob: -18.125003814697266
    9. '	R' → logprob: -18.250003814697266
    10. ' ' → logprob: -18.250003814697266

Token 1070: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.030876941978931427
    2. '):' → logprob: -3.530876874923706
    3. '               ' → logprob: -7.280877113342285
    4. ')' → logprob: -8.280877113342285
    5. '                   ' → logprob: -8.780877113342285
    6. '):
' → logprob: -11.030877113342285
    7. '):

' → logprob: -12.030877113342285
    8. ':' → logprob: -13.530877113342285
    9. ')==' → logprob: -13.780877113342285
    10. '                       ' → logprob: -13.905877113342285

Token 1071: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0015527134528383613
    2. ':
' → logprob: -6.876552581787109
    3. '               ' → logprob: -9.25155258178711
    4. '                       ' → logprob: -9.25155258178711
    5. '                  ' → logprob: -9.50155258178711
    6. ':' → logprob: -9.50155258178711
    7. 'return' → logprob: -10.25155258178711
    8. '                    
' → logprob: -10.37655258178711
    9. '{
' → logprob: -10.62655258178711
    10. '):
' → logprob: -11.00155258178711

Token 1072: ' safe' (ID: 7703)
  Prédit: 'safe'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'safe' (adapté à ' safe') → logprob: -0.0765855610370636
    2. '                   ' → logprob: -2.826585531234741
    3. ' safe' → logprob: -4.57658576965332
    4. '                       ' → logprob: -5.57658576965332
    5. '               ' → logprob: -7.82658576965332
    6. '
' → logprob: -10.82658576965332
    7. '           ' → logprob: -12.57658576965332
    8. '                    
' → logprob: -12.70158576965332
    9. '                        
' → logprob: -13.57658576965332
    10. '                  ' → logprob: -13.70158576965332

Token 1073: '_found' (ID: 50825)
  Prédit: '_found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_found' → logprob: -2.641841820150148e-05
    2. 'Found' → logprob: -11.00002670288086
    3. '_FOUND' → logprob: -11.75002670288086
    4. 'found' → logprob: -14.12502670288086
    5. '                   ' → logprob: -14.87502670288086
    6. 'FOUND' → logprob: -15.50002670288086
    7. '_' → logprob: -15.87502670288086
    8. '               ' → logprob: -16.37502670288086
    9. '	found' → logprob: -16.50002670288086
    10. '_f' → logprob: -17.00002670288086

Token 1074: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007112398743629456
    2. ' =' → logprob: -7.250711441040039
    3. '=
' → logprob: -14.125711441040039
    4. '=True' → logprob: -14.500711441040039
    5. ' =
' → logprob: -19.50071144104004
    6. '=

' → logprob: -19.50071144104004
    7. '=False' → logprob: -19.75071144104004
    8. '＝' → logprob: -20.37571144104004
    9. ' ' → logprob: -20.75071144104004
    10. '.=' → logprob: -21.12571144104004

Token 1075: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -3.7697225252486533e-06
    2. ' True' → logprob: -12.500003814697266
    3. '(True' → logprob: -17.125003814697266
    4. '   ' → logprob: -18.500003814697266
    5. '=True' → logprob: -18.750003814697266
    6. 'true' → logprob: -18.875003814697266
    7. 'Tr' → logprob: -22.250003814697266
    8. '
' → logprob: -22.375003814697266
    9. '1' → logprob: -23.000003814697266
    10. '    ' → logprob: -23.375003814697266

Token 1076: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08316317200660706
    2. '               ' → logprob: -2.583163261413574
    3. '                    
' → logprob: -6.083163261413574
    4. '
' → logprob: -7.208163261413574
    5. '                       ' → logprob: -7.458163261413574
    6. '                
' → logprob: -8.333163261413574
    7. '                        
' → logprob: -9.458163261413574
    8. '                  ' → logprob: -9.458163261413574
    9. '           ' → logprob: -10.333163261413574
    10. '                           ' → logprob: -10.458163261413574

Token 1077: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0015089125372469425
    2. '                       ' → logprob: -6.876508712768555
    3. '               ' → logprob: -7.876508712768555
    4. 'break' → logprob: -10.251508712768555
    5. '                           ' → logprob: -10.876508712768555
    6. '                    
' → logprob: -11.626508712768555
    7. '                  ' → logprob: -12.126508712768555
    8. '
' → logprob: -12.251508712768555
    9. '```' → logprob: -12.376508712768555
    10. '                    ' → logprob: -12.501508712768555

Token 1078: ' x' (ID: 1215)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008381948806345463
    2. '                   ' → logprob: -5.2583818435668945
    3. 'x' (adapté à ' x') → logprob: -5.8833818435668945
    4. ' x' → logprob: -9.383381843566895
    5. '
' → logprob: -9.508381843566895
    6. '                
' → logprob: -9.758381843566895
    7. '                       ' → logprob: -10.383381843566895
    8. '              ' → logprob: -10.758381843566895
    9. '                ' → logprob: -10.883381843566895
    10. '```' → logprob: -11.133381843566895

Token 1079: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0009126556105911732
    2. ' +=' → logprob: -7.000912666320801
    3. ']+=' → logprob: -14.8759126663208
    4. '=' → logprob: -15.1259126663208
    5. '   ' → logprob: -15.6259126663208
    6. '+=(' → logprob: -15.7509126663208
    7. '+' → logprob: -16.000911712646484
    8. '```' → logprob: -16.375911712646484
    9. '+="' → logprob: -16.625911712646484
    10. '	' → logprob: -17.125911712646484

Token 1080: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.0001234428636962548
    2. ' step' → logprob: -9.000123023986816
    3. '(step' → logprob: -17.750123977661133
    4. 'Step' → logprob: -20.125123977661133
    5. '	step' → logprob: -20.500123977661133
    6. '1' → logprob: -20.500123977661133
    7. '```' → logprob: -21.000123977661133
    8. 'steps' → logprob: -22.000123977661133
    9. '0' → logprob: -22.375123977661133
    10. '`' → logprob: -22.875123977661133

Token 1081: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011971374973654747
    2. '
' → logprob: -4.511971473693848
    3. '            
' → logprob: -8.386971473693848
    4. '\n' → logprob: -8.886971473693848
    5. '       ' → logprob: -9.386971473693848
    6. '    
' → logprob: -9.511971473693848
    7. '   ' → logprob: -9.511971473693848
    8. '```' → logprob: -9.886971473693848
    9. '\' → logprob: -10.136971473693848
    10. '        
' → logprob: -10.136971473693848

Token 1082: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002142650482710451
    2. '       ' → logprob: -8.875214576721191
    3. '```' → logprob: -10.250214576721191
    4. '
' → logprob: -10.625214576721191
    5. '   ' → logprob: -11.625214576721191
    6. '               ' → logprob: -13.625214576721191
    7. '		' → logprob: -14.125214576721191
    8. '          ' → logprob: -14.250214576721191
    9. '\n' → logprob: -14.875214576721191
    10. '\' → logprob: -15.000214576721191

Token 1083: ' y' (ID: 342)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6848455667495728
    2. '       ' → logprob: -1.3098455667495728
    3. '   ' → logprob: -1.5598455667495728
    4. ' y' → logprob: -4.559845447540283
    5. 'y' (adapté à ' y') → logprob: -5.309845447540283
    6. ' ' → logprob: -8.309845924377441
    7. '    ' → logprob: -10.309845924377441
    8. '  ' → logprob: -10.559845924377441
    9. '```' → logprob: -10.809845924377441
    10. '
' → logprob: -10.934845924377441

Token 1084: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.014164221473038197
    2. ' +=' → logprob: -4.264164447784424
    3. ']+=' → logprob: -15.014163970947266
    4. '+' → logprob: -15.139163970947266
    5. '=' → logprob: -16.139163970947266
    6. '   ' → logprob: -18.389163970947266
    7. '+=(' → logprob: -18.764163970947266
    8. '+='' → logprob: -18.764163970947266
    9. '+="' → logprob: -19.014163970947266
    10. '```' → logprob: -19.889163970947266

Token 1085: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -7.941850526549388e-06
    2. ' step' → logprob: -11.750007629394531
    3. 'Step' → logprob: -21.12500762939453
    4. '(step' → logprob: -21.62500762939453
    5. '	step' → logprob: -21.87500762939453
    6. '_step' → logprob: -23.75000762939453
    7. '1' → logprob: -24.00000762939453
    8. 'steps' → logprob: -24.25000762939453
    9. '.step' → logprob: -24.50000762939453
    10. 'ste' → logprob: -24.87500762939453

Token 1086: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007352582179009914
    2. 'if' → logprob: -5.507352352142334
    3. '       ' → logprob: -6.757352352142334
    4. ' if' → logprob: -7.007352352142334
    5. '
' → logprob: -7.757352352142334
    6. '    
' → logprob: -7.882352352142334
    7. '```' → logprob: -8.132352828979492
    8. '        
' → logprob: -10.007352828979492
    9. '<|end|>' → logprob: -10.132352828979492
    10. 'print' → logprob: -12.507352828979492

Token 1087: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7645343542098999
    2. 'print' → logprob: -1.0145343542099
    3. '   ' → logprob: -1.7645343542099
    4. '       ' → logprob: -7.8895344734191895
    5. '
' → logprob: -9.139533996582031
    6. ' if' → logprob: -9.264533996582031
    7. '```' → logprob: -10.889533996582031
    8. '    
' → logprob: -11.514533996582031
    9. ' print' → logprob: -12.639533996582031
    10. '        
' → logprob: -13.014533996582031

Token 1088: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.20157960057258606
    2. 'if' → logprob: -1.7015795707702637
    3. '       ' → logprob: -9.201580047607422
    4. '   ' → logprob: -9.701580047607422
    5. '```' → logprob: -13.201580047607422
    6. ' if' → logprob: -13.326580047607422
    7. ' print' → logprob: -14.451580047607422
    8. '
' → logprob: -15.701580047607422
    9. '        
' → logprob: -17.326580047607422
    10. '    
' → logprob: -18.326580047607422

Token 1089: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0004670153430197388
    2. '(' → logprob: -7.750466823577881
    3. '('' → logprob: -10.250467300415039
    4. '"' → logprob: -14.375467300415039
    5. '(
' → logprob: -15.500467300415039
    6. '(True' → logprob: -16.25046730041504
    7. '(("' → logprob: -16.50046730041504
    8. ' ("' → logprob: -18.37546730041504
    9. '(""' → logprob: -18.62546730041504
    10. '(

' → logprob: -20.00046730041504

Token 1090: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -3.128163257315464e-07
    2. 'YES' → logprob: -16.0
    3. '"' → logprob: -16.5
    4. 'Oui' → logprob: -18.75
    5. ' Yes' → logprob: -18.875
    6. 'No' → logprob: -20.0
    7. '“Yes' → logprob: -22.875
    8. 'Ye' → logprob: -24.5
    9. '{"' → logprob: -24.5
    10. 'Y' → logprob: -24.875

Token 1091: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.981667537620524e-06
    2. '")' → logprob: -13.250001907348633
    3. 'if' → logprob: -16.375001907348633
    4. '")
' → logprob: -16.625001907348633
    5. '```' → logprob: -17.250001907348633
    6. ' if' → logprob: -17.750001907348633
    7. ''' → logprob: -17.750001907348633
    8. '   ' → logprob: -20.250001907348633
    9. '""' → logprob: -20.375001907348633
    10. '"If' → logprob: -21.000001907348633

Token 1092: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.11021720618009567
    2. ')' → logprob: -2.3602170944213867
    3. 'if' → logprob: -4.610217094421387
    4. '   ' → logprob: -12.360217094421387
    5. '"' → logprob: -13.485217094421387
    6. '	if' → logprob: -13.985217094421387
    7. ')
' → logprob: -14.110217094421387
    8. '()' → logprob: -14.235217094421387
    9. '```' → logprob: -14.360217094421387
    10. '")' → logprob: -14.485217094421387

Token 1093: ' safe' (ID: 7703)
  Prédit: ' safe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' safe' → logprob: -0.01814994215965271
    2. 'safe' → logprob: -4.0181498527526855
    3. ' ' → logprob: -19.518150329589844
    4. '_safe' → logprob: -19.768150329589844
    5. 'Safe' → logprob: -20.893150329589844
    6. '.safe' → logprob: -21.643150329589844
    7. 's' → logprob: -21.893150329589844
    8. ' ' → logprob: -22.518150329589844
    9. ' not' → logprob: -24.018150329589844
    10. '   ' → logprob: -24.393150329589844

Token 1094: '_found' (ID: 50825)
  Prédit: '_found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_found' → logprob: 0.0
    2. '_' → logprob: -17.375
    3. '_FOUND' → logprob: -17.625
    4. 'found' → logprob: -18.25
    5. 'Found' → logprob: -18.75
    6. '	found' → logprob: -20.875
    7. '-found' → logprob: -21.125
    8. '_find' → logprob: -21.25
    9. '_used' → logprob: -21.25
    10. '_added' → logprob: -21.25

Token 1095: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.042010851204395294
    2. 'else' → logprob: -3.54201078414917
    3. ')' → logprob: -4.41701078414917
    4. ' )' → logprob: -9.792011260986328
    5. '<|end|>' → logprob: -10.292011260986328
    6. ' ' → logprob: -11.292011260986328
    7. '	else' → logprob: -11.792011260986328
    8. ',' → logprob: -14.292011260986328
    9. ' ' → logprob: -14.292011260986328
    10. '```' → logprob: -14.417011260986328

Token 1096: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10059148073196411
    2. '"No' → logprob: -2.3505914211273193
    3. ' "' → logprob: -7.975591659545898
    4. 'No' → logprob: -10.350591659545898
    5. ' No' → logprob: -11.850591659545898
    6. ''' → logprob: -13.975591659545898
    7. ')' → logprob: -14.100591659545898
    8. '("' → logprob: -16.2255916595459
    9. '   ' → logprob: -16.8505916595459
    10. '
' → logprob: -17.4755916595459

Token 1097: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -1.0206720617134124e-05
    2. '"No' → logprob: -11.50001049041748
    3. ' No' → logprob: -19.125009536743164
    4. '"' → logprob: -19.500009536743164
    5. 'NO' → logprob: -21.500009536743164
    6. 'no' → logprob: -22.375009536743164
    7. '_No' → logprob: -22.875009536743164
    8. '“No' → logprob: -23.250009536743164
    9. '.No' → logprob: -23.750009536743164
    10. '>No' → logprob: -24.125009536743164

Token 1098: '")

' (ID: 10822)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006755752023309469
    2. '")' → logprob: -5.006755828857422
    3. ')")' → logprob: -10.131755828857422
    4. '')' → logprob: -15.506755828857422
    5. ')"' → logprob: -16.006755828857422
    6. ')
' → logprob: -16.131755828857422
    7. '`)' → logprob: -16.756755828857422
    8. ' )' → logprob: -17.506755828857422
    9. '())' → logprob: -17.756755828857422
    10. ')`' → logprob: -18.131755828857422

Token 1099: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1100: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.04858941584825516
    2. '__' → logprob: -3.0485894680023193
    3. 'name' → logprob: -14.048589706420898
    4. '_name' → logprob: -14.673589706420898
    5. '_' → logprob: -15.173589706420898
    6. '___' → logprob: -15.298589706420898
    7. ' ' → logprob: -16.1735897064209
    8. '/__' → logprob: -16.9235897064209
    9. ' "__' → logprob: -17.1735897064209
    10. ' ' → logprob: -17.1735897064209

Token 1101: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.023319432511925697
    2. ' ==' → logprob: -4.148319244384766
    3. '==' → logprob: -5.023319244384766
    4. ' __' → logprob: -7.898319244384766
    5. '=="' → logprob: -9.148319244384766
    6. 'if' → logprob: -9.773319244384766
    7. '.__' → logprob: -10.148319244384766
    8. 'name' → logprob: -10.773319244384766
    9. '__.__' → logprob: -11.023319244384766
    10. '=='' → logprob: -11.273319244384766

Token 1102: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0003000696888193488
    2. '__.__' → logprob: -8.875300407409668
    3. '==' → logprob: -9.000300407409668
    4. '=="' → logprob: -10.625300407409668
    5. ' ==' → logprob: -12.125300407409668
    6. '____' → logprob: -13.500300407409668
    7. '___' → logprob: -13.500300407409668
    8. '__["' → logprob: -14.000300407409668
    9. '__
' → logprob: -14.125300407409668
    10. '=='' → logprob: -14.500300407409668

Token 1103: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.08620120584964752
    2. '==' → logprob: -2.5862011909484863
    3. ' ==' → logprob: -5.336201190948486
    4. '=="' → logprob: -6.086201190948486
    5. '=='' → logprob: -8.961201667785645
    6. '__.__' → logprob: -10.211201667785645
    7. '___' → logprob: -12.086201667785645
    8. '_' → logprob: -12.336201667785645
    9. '==
' → logprob: -12.336201667785645
    10. '=' → logprob: -12.461201667785645

Token 1104: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.003365216078236699
    2. ''' → logprob: -5.7533650398254395
    3. '__' → logprob: -8.628365516662598
    4. ' "__' → logprob: -11.753365516662598
    5. '"name' → logprob: -14.753365516662598
    6. ' '__' → logprob: -15.878365516662598
    7. '"user' → logprob: -17.37836456298828
    8. '   ' → logprob: -17.62836456298828
    9. '("__' → logprob: -17.75336456298828
    10. 'main' → logprob: -18.00336456298828

Token 1105: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.04909221827983856
    2. '__' → logprob: -3.0490922927856445
    3. '"' → logprob: -7.6740922927856445
    4. ''' → logprob: -10.299092292785645
    5. 'name' → logprob: -12.424092292785645
    6. '___' → logprob: -14.799092292785645
    7. '__":
' → logprob: -15.174092292785645
    8. ' "__' → logprob: -15.299092292785645
    9. '__
' → logprob: -15.299092292785645
    10. ''m' → logprob: -15.424092292785645

Token 1106: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.13627898693084717
    2. '__' → logprob: -2.1362791061401367
    3. '__':
' → logprob: -4.761279106140137
    4. '__["' → logprob: -8.511279106140137
    5. '__:' → logprob: -9.261279106140137
    6. '__.__' → logprob: -9.761279106140137
    7. '->____' → logprob: -10.011279106140137
    8. '==' → logprob: -10.136279106140137
    9. '__.' → logprob: -10.136279106140137
    10. ':
' → logprob: -10.261279106140137

Token 1107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007256492506712675
    2. 'solve' → logprob: -5.007256507873535
    3. ' solve' → logprob: -7.632256507873535
    4. 'main' → logprob: -10.632256507873535
    5. '   ' → logprob: -11.632256507873535
    6. '    
' → logprob: -12.257256507873535
    7. '	s' → logprob: -12.632256507873535
    8. '.solve' → logprob: -12.757256507873535
    9. '```' → logprob: -12.882256507873535
    10. '__' → logprob: -13.007256507873535

Token 1108: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -1.6240566083070007e-06
    2. '   ' → logprob: -13.500001907348633
    3. ' solve' → logprob: -15.500001907348633
    4. 'import' → logprob: -20.875001907348633
    5. '.solve' → logprob: -21.125001907348633
    6. '  ' → logprob: -21.750001907348633
    7. '```' → logprob: -22.500001907348633
    8. 'resolve' → logprob: -22.875001907348633
    9. 'sys' → logprob: -23.125001907348633
    10. 'main' → logprob: -23.875001907348633

Token 1109: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03429155424237251
    2. '<|end|>' → logprob: -3.6592915058135986
    3. '(' → logprob: -5.034291744232178
    4. '()
' → logprob: -8.03429126739502
    5. ')' → logprob: -8.28429126739502
    6. '
' → logprob: -8.53429126739502
    7. '```' → logprob: -8.53429126739502
    8. '#' → logprob: -9.28429126739502
    9. '(
' → logprob: -9.40929126739502
    10. '();' → logprob: -9.53429126739502


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1107
Tokens correctement prédits (1ère position, stricte): 427
Tokens correctement prédits (1ère position, avec adaptation): 453
Tokens correctement prédits (top 10): 863
Précision stricte (1ère position): 38.57%
Précision adaptée (1ère position): 40.92%
Précision (top 10): 77.96%
================================================================================
