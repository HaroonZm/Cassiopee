================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:12
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Solution pour le problème "Rectangular Stamps"
# 
# Approche :
# Le problème demande de colorier une grille 4x4 avec le minimum de pressions de tampons rectangulaires.
# Chaque tampon peut être placé n'importe où, même en débordant la grille, et peint la zone couverte d'une unique couleur choisie.
# On peut utiliser n'importe quel tampon plusieurs fois, et changer la couleur à chaque utilisation.
# L'objectif est de couvrir chaque case avec la bonne couleur (R, G, B) avec le nombre minimal de tampons.
#
# Observons que:
# - Les tampons ont un nombre limité de tailles (max 16 avec h,w ≤ 4).
# - La grille est petite (4x4).
# 
# Cette petite taille suggère une recherche exhaustive avec mémoïsation :
# - On peut représenter l'état actuel de la grille avec (4x4)=16 cases.
# - Chaque case peut être R/G/B ou encore non peintée au cours de la recherche.
# - Mais les cases déjà peintes partiellement ne gênent pas car l'encre d'un tampon recouvre totalement la couleur précédente.
# - On cherche donc le nombre minimal de tampons à poser pour arriver à la cible à partir d'un état initial vide.
#
# Représentation:
# - On codera l'état actuel de la grille avec un tuple de 16 caractères.
#
# Stratégie:
# - BFS ou DFS+mémo sur les états de la grille.
# - Depuis l'état actuel, on tente toutes les poses possibles (tampon i, position (x,y), couleur c).
# - On applique le tampon, obtenant un nouvel état.
# - On répète jusqu'à l'état final.
# 
# optimisation:
# - La taille de l'espace d'état est grosse (3^16 ~ 43 millions), mais la recherche sera réduite par mémoïsation et pruning.
# - On évite de refaire les états déjà rencontrés.
# - On peut stopper dès qu'on trouve le premier résultat (car recherche en BFS).
#
# Implementation:
# - Lecture entrée
# - Préparation des tampons
# - BFS sur états, stockage via dictionnaire (état -> nb tapes)
# - Calcul du minimal au final

from collections import deque

def main():
    N = int(input())
    stamps = []
    for _ in range(N):
        h,w = map(int, input().split())
        stamps.append((h,w))
    target = [input().strip() for _ in range(4)]

    # Convert target to a tuple for comparison
    target_flat = tuple(''.join(row) for row in target)
    # We'll flatten to length 16 string for states
    target_state = tuple(c for row in target for c in row)

    # initial state: all '.'
    empty_state = tuple('.' for _ in range(16))

    # Precompute all possible stamp placements with all colors R, G, B
    colors = ['R','G','B']

    # Function pour appliquer un tampon sur un état et retourner le nouvel état
    def apply_stamp(state, stamp_h, stamp_w, top, left, color):
        # state est un tuple 16 caractères
        new_state = list(state)
        for i in range(stamp_h):
            for j in range(stamp_w):
                x = top + i
                y = left + j
                if 0 <= x < 4 and 0 <= y < 4:
                    idx = x*4 + y
                    new_state[idx] = color
        return tuple(new_state)

    # BFS
    visited = dict()
    queue = deque()

    visited[empty_state] = 0
    queue.append(empty_state)

    while queue:
        state = queue.popleft()
        dist = visited[state]
        # Si état atteint, finir
        if state == target_state:
            print(dist)
            return
        # sinon essayer toutes les poses possibles
        for (h,w) in stamps:
            for top in range(-h+1, 4):
                for left in range(-w+1, 4):
                    for color in colors:
                        new_state = apply_stamp(state, h, w, top, left, color)
                        # Pruning rapide: on ne garde que les états qui sont un "progrès" vers la cible
                        # C'est délicat, mais on peut regarder que le nouvel état doit être au moins aussi proche
                        # i.e. pour chaque case, si la couleur est correcte ou progressée vers la cible.
                        # Mais ce sera compliqué. 
                        # On se contente d'enregistrer si non visité.
                        if new_state not in visited:
                            visited[new_state] = dist + 1
                            queue.append(new_state)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Solution' (ID: 20858)
  → Token d'amorce (pas de prédiction)

Token 2: ' pour' (ID: 1930)
  → Token d'amorce (pas de prédiction)

Token 3: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.8389296531677246
    2. ' résoudre' → logprob: -0.9639296531677246
    3. 'l' → logprob: -2.7139296531677246
    4. 'le' → logprob: -3.9639296531677246
    5. ' l' → logprob: -4.213929653167725
    6. ' ' → logprob: -4.338929653167725
    7. ' les' → logprob: -4.588929653167725
    8. ' Python' → logprob: -4.588929653167725
    9. ' la' → logprob: -4.963929653167725
    10. '#' → logprob: -5.213929653167725

Token 4: ' problème' (ID: 35630)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.08267203718423843
    2. 'jour' → logprob: -3.707672119140625
    3. ' problème' → logprob: -4.332672119140625
    4. 'code' → logprob: -5.207672119140625
    5. 'proble' → logprob: -5.207672119140625
    6. 'tri' → logprob: -5.582672119140625
    7. ' prochain' → logprob: -5.707672119140625
    8. ' #' → logprob: -6.207672119140625
    9. '#' → logprob: -6.207672119140625
    10. '```' → logprob: -6.457672119140625

Token 5: ' "' (ID: 392)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27289414405822754
    2. ' :' → logprob: -1.5228941440582275
    3. '```' → logprob: -4.897893905639648
    4. 's' → logprob: -5.647893905639648
    5. '_' → logprob: -6.397893905639648
    6. ' ' → logprob: -6.647893905639648
    7. '.' → logprob: -6.897893905639648
    8. '#' → logprob: -7.022893905639648
    9. '`' → logprob: -7.147893905639648
    10. '\' → logprob: -7.147893905639648

Token 6: 'Rect' (ID: 7872)
  Prédit: 'Two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Two' → logprob: -1.1892545223236084
    2. ' Two' → logprob: -2.0642545223236084
    3. ' des' → logprob: -2.3142545223236084
    4. '2' → logprob: -2.4392545223236084
    5. 'two' → logprob: -3.1892545223236084
    6. 'de' → logprob: -3.5642545223236084
    7. ' deux' → logprob: -3.6892545223236084
    8. ' du' → logprob: -3.6892545223236084
    9. '"' → logprob: -3.6892545223236084
    10. 'Deux' → logprob: -3.9392545223236084

Token 7: 'angular' (ID: 8802)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.18172623217105865
    2. 'angles' → logprob: -1.8067262172698975
    3. 'ang' → logprob: -6.931726455688477
    4. 'angular' → logprob: -7.056726455688477
    5. 'angled' → logprob: -10.431726455688477
    6. '#' → logprob: -10.931726455688477
    7. 'ange' → logprob: -11.056726455688477
    8. 'an' → logprob: -11.056726455688477
    9. 'ANGLE' → logprob: -11.056726455688477
    10. 'angulo' → logprob: -11.181726455688477

Token 8: ' St' (ID: 901)
  Prédit: ' prism'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' prism' → logprob: -0.7253791689872742
    2. 'Pr' → logprob: -1.850379228591919
    3. ' Prism' → logprob: -1.850379228591919
    4. ' pris' → logprob: -2.225379228591919
    5. 's' → logprob: -3.600379228591919
    6. '_pr' → logprob: -4.35037899017334
    7. '-pr' → logprob: -4.60037899017334
    8. 'pr' → logprob: -4.72537899017334
    9. ' Pr' → logprob: -5.10037899017334
    10. ' ' → logprob: -5.97537899017334

Token 9: 'amps' (ID: 13580)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.0857924371957779
    2. 'angles' → logprob: -2.8357925415039062
    3. 'a' → logprob: -4.710792541503906
    4. 'angular' → logprob: -4.710792541503906
    5. 'r' → logprob: -6.460792541503906
    6. 's' → logprob: -6.585792541503906
    7. 'ang' → logprob: -6.835792541503906
    8. 'an' → logprob: -7.460792541503906
    9. 'angler' → logprob: -8.210792541503906
    10. 'riangle' → logprob: -8.585792541503906

Token 10: '"
' (ID: 1092)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04068974405527115
    2. '"' → logprob: -4.040689945220947
    3. ':' → logprob: -4.540689945220947
    4. '"""' → logprob: -5.790689945220947
    5. '\n' → logprob: -6.165689945220947
    6. '#' → logprob: -6.540689945220947
    7. 'def' → logprob: -6.790689945220947
    8. ' :' → logprob: -6.915689945220947
    9. '```' → logprob: -7.040689945220947
    10. ' s' → logprob: -7.790689945220947

Token 11: '#' (ID: 2)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20325466990470886
    2. '```' → logprob: -2.4532546997070312
    3. '\n' → logprob: -3.5782546997070312
    4. '#' → logprob: -4.203254699707031
    5. 'def' → logprob: -4.203254699707031
    6. 's' → logprob: -4.453254699707031
    7. '\' → logprob: -4.703254699707031
    8. 'n' → logprob: -5.328254699707031
    9. '
' → logprob: -5.828254699707031
    10. ':
' → logprob: -5.953254699707031

Token 12: ' 
' (ID: 793)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07291530817747116
    2. '#' → logprob: -2.9479153156280518
    3. ' #' → logprob: -4.822915077209473
    4. '\' → logprob: -6.572915077209473
    5. 'def' → logprob: -6.947915077209473
    6. '-' → logprob: -7.197915077209473
    7. 'd' → logprob: -7.322915077209473
    8. '_' → logprob: -7.447915077209473
    9. '\n' → logprob: -7.447915077209473
    10. ' 
' → logprob: -7.572915077209473

Token 13: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5471377968788147
    2. '#' → logprob: -1.29713773727417
    3. 'import' → logprob: -2.92213773727417
    4. 'from' → logprob: -3.67213773727417
    5. ' ' → logprob: -3.79713773727417
    6. ' #' → logprob: -3.79713773727417
    7. ' def' → logprob: -4.79713773727417
    8. ' 
' → logprob: -5.79713773727417
    9. 'class' → logprob: -5.79713773727417
    10. '\' → logprob: -6.29713773727417

Token 14: ' Appro' (ID: 24145)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.741403341293335
    2. 'd' → logprob: -1.116403341293335
    3. ' ' → logprob: -1.991403341293335
    4. ' def' → logprob: -3.866403341293335
    5. ' d' → logprob: -4.241403579711914
    6. 'import' → logprob: -4.616403579711914
    7. '#' → logprob: -5.366403579711914
    8. ' #' → logprob: -6.116403579711914
    9. 'de' → logprob: -6.491403579711914
    10. ' de' → logprob: -6.491403579711914

Token 15: 'che' (ID: 926)
  Prédit: 'che'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'che' → logprob: -0.12365211546421051
    2. '#' → logprob: -3.123652219772339
    3. 'ches' → logprob: -3.373652219772339
    4. 'x' → logprob: -3.998652219772339
    5. 'visionnement' → logprob: -4.24865198135376
    6. 'ch' → logprob: -6.24865198135376
    7. ' che' → logprob: -6.87365198135376
    8. 'xim' → logprob: -7.74865198135376
    9. 'xi' → logprob: -7.87365198135376
    10. 'ach' → logprob: -8.373652458190918

Token 16: ' :
' (ID: 10039)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.16015851497650146
    2. ':' → logprob: -2.410158634185791
    3. ' ' → logprob: -3.410158634185791
    4. ' =' → logprob: -3.785158634185791
    5. '=' → logprob: -7.285158634185791
    6. 's' → logprob: -7.660158634185791
    7. '_' → logprob: -8.035158157348633
    8. 'e' → logprob: -8.535158157348633
    9. ' ' → logprob: -8.660158157348633
    10. ' de' → logprob: -9.160158157348633

Token 17: '#' (ID: 2)
  Prédit: ' Util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Util' → logprob: -0.26395630836486816
    2. '#' → logprob: -2.638956308364868
    3. ' #' → logprob: -2.763956308364868
    4. ' ' → logprob: -3.638956308364868
    5. 'Util' → logprob: -3.888956308364868
    6. ' utiliser' → logprob: -4.513956069946289
    7. ' on' → logprob: -4.763956069946289
    8. ' On' → logprob: -4.888956069946289
    9. 'On' → logprob: -5.638956069946289
    10. ' 
' → logprob: -6.138956069946289

Token 18: ' Le' (ID: 2018)
  Prédit: ' Util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Util' → logprob: -0.5833309292793274
    2. ' #' → logprob: -1.3333308696746826
    3. ' ' → logprob: -2.0833308696746826
    4. '#' → logprob: -3.4583308696746826
    5. ' On' → logprob: -5.583331108093262
    6. 'Util' → logprob: -6.083331108093262
    7. ' utiliser' → logprob: -6.208331108093262
    8. ' Expl' → logprob: -6.333331108093262
    9. ' La' → logprob: -7.083331108093262
    10. ' on' → logprob: -7.083331108093262

Token 19: ' problème' (ID: 35630)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.5855849385261536
    2. 's' → logprob: -2.335584878921509
    3. 'a' → logprob: -3.335584878921509
    4. 'c' → logprob: -3.460584878921509
    5. ' plus' → logprob: -3.585584878921509
    6. 't' → logprob: -3.835584878921509
    7. '_' → logprob: -4.335585117340088
    8. 'pro' → logprob: -4.335585117340088
    9. ' =' → logprob: -4.335585117340088
    10. ' a' → logprob: -4.460585117340088

Token 20: ' demande' (ID: 26737)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03176421299576759
    2. ':' → logprob: -4.781764030456543
    3. ' est' → logprob: -4.906764030456543
    4. ' s' → logprob: -5.281764030456543
    5. ' consiste' → logprob: -5.906764030456543
    6. ' :' → logprob: -6.156764030456543
    7. 's' → logprob: -6.906764030456543
    8. ',' → logprob: -7.031764030456543
    9. ' de' → logprob: -7.281764030456543
    10. ' ,' → logprob: -7.656764030456543

Token 21: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.41116487979888916
    2. ' de' → logprob: -1.7861648797988892
    3. ' d' → logprob: -1.9111648797988892
    4. '  ' → logprob: -4.4111647605896
    5. '   ' → logprob: -5.6611647605896
    6. 'd' → logprob: -6.1611647605896
    7. 's' → logprob: -7.4111647605896
    8. ' ' → logprob: -7.4111647605896
    9. ' une' → logprob: -7.7861647605896
    10. ' s' → logprob: -8.036165237426758

Token 22: ' color' (ID: 3089)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.9108792543411255
    2. ' trouver' → logprob: -1.0358792543411255
    3. ' déterminer' → logprob: -2.160879135131836
    4. ' calcul' → logprob: -3.535879135131836
    5. 'dé' → logprob: -3.660879135131836
    6. 'calcul' → logprob: -4.285879135131836
    7. '#' → logprob: -4.410879135131836
    8. 'placer' → logprob: -5.035879135131836
    9. ' dé' → logprob: -5.285879135131836
    10. 'chercher' → logprob: -5.785879135131836

Token 23: 'ier' (ID: 905)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.006062821019440889
    2. 'ier' → logprob: -5.506062984466553
    3. ' r' → logprob: -7.506062984466553
    4. ' ' → logprob: -7.506062984466553
    5. 'i' → logprob: -8.256062507629395
    6. '#' → logprob: -8.631062507629395
    7. '	r' → logprob: -9.006062507629395
    8. 'er' → logprob: -9.756062507629395
    9. 's' → logprob: -10.131062507629395
    10. 'ir' → logprob: -10.381062507629395

Token 24: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.008380413986742496
    2. ' les' → logprob: -5.75838041305542
    3. ' l' → logprob: -6.50838041305542
    4. ' un' → logprob: -6.75838041305542
    5. '  ' → logprob: -7.13338041305542
    6. ' le' → logprob: -7.88338041305542
    7. ' une' → logprob: -8.258380889892578
    8. ' chaque' → logprob: -8.758380889892578
    9. ' toute' → logprob: -9.008380889892578
    10. ' la' → logprob: -9.258380889892578

Token 25: ' grille' (ID: 99153)
  Prédit: ' grille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grille' → logprob: -1.0816515684127808
    2. ' zone' → logprob: -2.0816516876220703
    3. ' région' → logprob: -2.2066516876220703
    4. ' ' → logprob: -2.2066516876220703
    5. ' portion' → logprob: -2.8316516876220703
    6. 'r' → logprob: -2.9566516876220703
    7. ' surface' → logprob: -3.0816516876220703
    8. ' partie' → logprob: -3.5816516876220703
    9. ' matr' → logprob: -3.5816516876220703
    10. 'gr' → logprob: -3.9566516876220703

Token 26: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03856465592980385
    2. ' en' → logprob: -3.663564682006836
    3. '.' → logprob: -5.163564682006836
    4. ',' → logprob: -6.038564682006836
    5. ' avec' → logprob: -7.038564682006836
    6. ' de' → logprob: -7.163564682006836
    7. ' entière' → logprob: -7.663564682006836
    8. ' selon' → logprob: -8.163564682006836
    9. 'en' → logprob: -8.413564682006836
    10. ' ,' → logprob: -8.663564682006836

Token 27: '4' (ID: 19)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07792305946350098
    2. ' en' → logprob: -3.452923059463501
    3. ' de' → logprob: -3.827923059463501
    4. '.' → logprob: -5.202922821044922
    5. 'en' → logprob: -5.452922821044922
    6. ',' → logprob: -5.577922821044922
    7. ' avec' → logprob: -6.327922821044922
    8. 'de' → logprob: -6.827922821044922
    9. ' à' → logprob: -7.327922821044922
    10. '#' → logprob: -7.452922821044922

Token 28: 'x' (ID: 87)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.513188898563385
    2. 'x' → logprob: -1.5131888389587402
    3. ' x' → logprob: -1.7631888389587402
    4. ' *' → logprob: -5.63818883895874
    5. '*' → logprob: -6.01318883895874
    6. '0' → logprob: -6.63818883895874
    7. ' ×' → logprob: -7.01318883895874
    8. ' fois' → logprob: -8.388189315795898
    9. '-' → logprob: -8.513189315795898
    10. '4' → logprob: -8.513189315795898

Token 29: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.20604488253593445
    2. '3' → logprob: -2.331044912338257
    3. '2' → logprob: -3.456044912338257
    4. '5' → logprob: -3.706044912338257
    5. ' ' → logprob: -3.831044912338257
    6. '6' → logprob: -4.831044673919678
    7. '7' → logprob: -6.956044673919678
    8. '1' → logprob: -7.206044673919678
    9. '8' → logprob: -7.206044673919678
    10. '9' → logprob: -8.081045150756836

Token 30: ' avec' (ID: 3937)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16374236345291138
    2. ' avec' → logprob: -3.2887423038482666
    3. ' en' → logprob: -3.4137423038482666
    4. '.' → logprob: -3.6637423038482666
    5. ',' → logprob: -4.038742542266846
    6. ' ,' → logprob: -4.288742542266846
    7. ' de' → logprob: -5.913742542266846
    8. ' #' → logprob: -6.038742542266846
    9. ' 
' → logprob: -6.163742542266846
    10. ' with' → logprob: -6.163742542266846

Token 31: ' le' (ID: 505)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.35287317633628845
    2. ' ' → logprob: -1.3528732061386108
    3. 'des' → logprob: -5.3528733253479
    4. ' une' → logprob: -5.4778733253479
    5. ' un' → logprob: -5.6028733253479
    6. ' quatre' → logprob: -5.6028733253479
    7. ' deux' → logprob: -5.9778733253479
    8. '4' → logprob: -5.9778733253479
    9. ' uniquement' → logprob: -5.9778733253479
    10. ' différentes' → logprob: -6.4778733253479

Token 32: ' minimum' (ID: 11085)
  Prédit: ' même'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' même' → logprob: -0.030249902978539467
    2. ' mêmes' → logprob: -4.155250072479248
    3. 's' → logprob: -4.780250072479248
    4. 'm' → logprob: -6.530250072479248
    5. ' plus' → logprob: -7.030250072479248
    6. ' caractère' → logprob: -7.405250072479248
    7. ' code' → logprob: -7.530250072479248
    8. ' ' → logprob: -8.53024959564209
    9. ' motif' → logprob: -8.78024959564209
    10. ' m' → logprob: -8.90524959564209

Token 33: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.2790549397468567
    2. ' de' → logprob: -1.529054880142212
    3. ' ' → logprob: -3.654054880142212
    4. 'd' → logprob: -7.779055118560791
    5. ' des' → logprob: -8.779054641723633
    6. '<|end|>' → logprob: -9.404054641723633
    7. 's' → logprob: -9.779054641723633
    8. '  ' → logprob: -10.029054641723633
    9. ' #' → logprob: -10.654054641723633
    10. 'de' → logprob: -11.029054641723633

Token 34: ' press' (ID: 4989)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2663104236125946
    2. ' tam' → logprob: -2.891310453414917
    3. ' tim' → logprob: -3.266310453414917
    4. 't' → logprob: -3.266310453414917
    5. 's' → logprob: -3.766310453414917
    6. ' t' → logprob: -4.016310214996338
    7. 'tam' → logprob: -4.516310214996338
    8. ' rectangles' → logprob: -5.016310214996338
    9. ' couleurs' → logprob: -5.141310214996338
    10. 'st' → logprob: -5.266310214996338

Token 35: 'ions' (ID: 756)
  Prédit: 'ions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ions' → logprob: -0.21314887702465057
    2. 'i' → logprob: -2.338148832321167
    3. 'ion' → logprob: -2.463148832321167
    4. 'e' → logprob: -5.088149070739746
    5. 'es' → logprob: -6.963149070739746
    6. 'é' → logprob: -6.963149070739746
    7. 'io' → logprob: -7.713149070739746
    8. ' i' → logprob: -8.338149070739746
    9. 'ets' → logprob: -8.588149070739746
    10. 'et' → logprob: -9.088149070739746

Token 36: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0647210031747818
    2. ' sur' → logprob: -3.81472110748291
    3. ' de' → logprob: -4.18972110748291
    4. 'sur' → logprob: -4.56472110748291
    5. '  ' → logprob: -5.31472110748291
    6. ' d' → logprob: -5.68972110748291
    7. 's' → logprob: -6.43972110748291
    8. ' ,' → logprob: -7.18972110748291
    9. 'import' → logprob: -7.56472110748291
    10. '```' → logprob: -7.56472110748291

Token 37: ' tam' (ID: 10663)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7749507427215576
    2. ' touches' → logprob: -1.7749507427215576
    3. ' ' → logprob: -2.5249507427215576
    4. 'tam' → logprob: -3.1499507427215576
    5. 'bout' → logprob: -3.1499507427215576
    6. 'p' → logprob: -3.2749507427215576
    7. ' boutons' → logprob: -3.3999507427215576
    8. ' touche' → logprob: -3.6499507427215576
    9. ' bouton' → logprob: -3.8999507427215576
    10. ' tampon' → logprob: -4.274950981140137

Token 38: 'pons' (ID: 2987)
  Prédit: 'pons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pons' → logprob: -0.48505333065986633
    2. 'pon' → logprob: -0.985053300857544
    3. 'p' → logprob: -5.235053539276123
    4. '\' → logprob: -7.110053539276123
    5. 'pond' → logprob: -7.110053539276123
    6. 'ponse' → logprob: -7.485053539276123
    7. '|' → logprob: -7.735053539276123
    8. 'pont' → logprob: -8.485053062438965
    9. '^' → logprob: -8.860053062438965
    10. '#' → logprob: -9.110053062438965

Token 39: ' rect' (ID: 13107)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5323663949966431
    2. ' ' → logprob: -1.282366394996643
    3. ',' → logprob: -2.6573662757873535
    4. ' ,' → logprob: -3.7823662757873535
    5. ' .' → logprob: -4.4073662757873535
    6. ' en' → logprob: -5.0323662757873535
    7. 's' → logprob: -5.1573662757873535
    8. '#' → logprob: -5.5323662757873535
    9. ' 

' → logprob: -6.2823662757873535
    10. 'import' → logprob: -6.4073662757873535

Token 40: 'ang' (ID: 516)
  Prédit: 'angles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angles' → logprob: -0.7274858355522156
    2. 'a' → logprob: -1.1024858951568604
    3. 'ang' → logprob: -2.2274858951568604
    4. '#' → logprob: -3.9774858951568604
    5. '```' → logprob: -4.352485656738281
    6. 'angle' → logprob: -4.602485656738281
    7. 'angular' → logprob: -4.727485656738281
    8. 'an' → logprob: -4.977485656738281
    9. 'o' → logprob: -5.477485656738281
    10. '##' → logprob: -5.727485656738281

Token 41: 'ul' (ID: 361)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.32913288474082947
    2. 'angles' → logprob: -2.7041327953338623
    3. 'an' → logprob: -2.9541327953338623
    4. 'es' → logprob: -3.3291327953338623
    5. 'e' → logprob: -3.4541327953338623
    6. 'ang' → logprob: -3.4541327953338623
    7. '#' → logprob: -3.7041327953338623
    8. 's' → logprob: -4.329133033752441
    9. '```' → logprob: -4.704133033752441
    10. 'o' → logprob: -4.954133033752441

Token 42: 'aires' (ID: 8507)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.2426845282316208
    2. 'e' → logprob: -1.7426844835281372
    3. 'aires' → logprob: -3.6176846027374268
    4. 'a' → logprob: -4.367684364318848
    5. 'aire' → logprob: -8.242684364318848
    6. '#' → logprob: -8.242684364318848
    7. '```' → logprob: -9.117684364318848
    8. 'ai' → logprob: -9.742684364318848
    9. 'air' → logprob: -9.992684364318848
    10. 'i' → logprob: -10.992684364318848

Token 43: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.524888813495636
    2. ' ' → logprob: -1.8998887538909912
    3. ',' → logprob: -2.649888753890991
    4. '#' → logprob: -3.024888753890991
    5. ' 

' → logprob: -3.524888753890991
    6. '
' → logprob: -3.649888753890991
    7. ' ,' → logprob: -3.899888753890991
    8. '<|end|>' → logprob: -4.77488899230957
    9. 's' → logprob: -4.89988899230957
    10. 'import' → logprob: -5.02488899230957

Token 44: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2262164205312729
    2. '#' → logprob: -2.2262163162231445
    3. 'def' → logprob: -3.4762163162231445
    4. '\' → logprob: -4.2262163162231445
    5. ' 

' → logprob: -4.2262163162231445
    6. ' 
' → logprob: -4.8512163162231445
    7. 'import' → logprob: -5.2262163162231445
    8. 'd' → logprob: -5.4762163162231445
    9. 'n' → logprob: -5.9762163162231445
    10. ' #' → logprob: -6.2262163162231445

Token 45: ' Chaque' (ID: 94758)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2387653887271881
    2. '.' → logprob: -2.7387654781341553
    3. '\' → logprob: -2.9887654781341553
    4. ' ' → logprob: -3.4887654781341553
    5. 'def' → logprob: -4.113765239715576
    6. 'import' → logprob: -4.363765239715576
    7. ' 

' → logprob: -4.988765239715576
    8. ' 
' → logprob: -4.988765239715576
    9. '
' → logprob: -5.238765239715576
    10. '```' → logprob: -5.488765239715576

Token 46: ' tampon' (ID: 176995)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13942790031433105
    2. ' pression' → logprob: -3.389427900314331
    3. ' ligne' → logprob: -3.389427900314331
    4. ' case' → logprob: -4.01442813873291
    5. ' cellule' → logprob: -4.63942813873291
    6. ' espace' → logprob: -4.76442813873291
    7. '  ' → logprob: -5.38942813873291
    8. 'case' → logprob: -6.01442813873291
    9. 'pression' → logprob: -6.01442813873291
    10. ' press' → logprob: -6.13942813873291

Token 47: ' peut' (ID: 9216)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.26256063580513
    2. ' peut' → logprob: -2.2625606060028076
    3. ' est' → logprob: -3.3875606060028076
    4. ' rect' → logprob: -3.6375606060028076
    5. ' doit' → logprob: -3.8875606060028076
    6. ' représente' → logprob: -4.637560844421387
    7. ' a' → logprob: -5.512560844421387
    8. ' rectangular' → logprob: -5.637560844421387
    9. ' couvre' → logprob: -5.762560844421387
    10. 'rect' → logprob: -5.887560844421387

Token 48: ' être' (ID: 9104)
  Prédit: ' couvrir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couvrir' → logprob: -1.041763186454773
    2. ' rec' → logprob: -1.541763186454773
    3. ' color' → logprob: -1.666763186454773
    4. ' être' → logprob: -1.791763186454773
    5. ' s' → logprob: -3.6667633056640625
    6. 'color' → logprob: -4.1667633056640625
    7. ' ' → logprob: -4.6667633056640625
    8. 'être' → logprob: -4.9167633056640625
    9. ' avoir' → logprob: -5.9167633056640625
    10. ' remplir' → logprob: -6.1667633056640625

Token 49: ' placé' (ID: 147030)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -2.168243646621704
    2. ' placé' → logprob: -2.168243646621704
    3. ' appli' → logprob: -2.293243646621704
    4. ' de' → logprob: -2.293243646621704
    5. 'dé' → logprob: -2.293243646621704
    6. 'de' → logprob: -2.418243646621704
    7. ' utilisé' → logprob: -2.418243646621704
    8. ' posé' → logprob: -2.668243646621704
    9. ' un' → logprob: -3.668243646621704
    10. 'un' → logprob: -4.043243408203125

Token 50: ' n' (ID: 297)
  Prédit: ' sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.5472449660301208
    2. 'sur' → logprob: -1.0472450256347656
    3. ' ' → logprob: -3.1722450256347656
    4. ' partout' → logprob: -4.422245025634766
    5. 's' → logprob: -5.422245025634766
    6. ' n' → logprob: -5.547245025634766
    7. ' anywhere' → logprob: -6.422245025634766
    8. ' dans' → logprob: -6.797245025634766
    9. 'n' → logprob: -7.047245025634766
    10. ' uniquement' → logprob: -7.297245025634766

Token 51: ''importe' (ID: 103032)
  Prédit: ''importe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''importe' → logprob: -0.005870371125638485
    2. ''' → logprob: -5.505870342254639
    3. ' '' → logprob: -7.505870342254639
    4. '’importe' → logprob: -7.880870342254639
    5. ''import' → logprob: -8.505870819091797
    6. 'u' → logprob: -8.755870819091797
    7. ''im' → logprob: -9.130870819091797
    8. ''u' → logprob: -9.255870819091797
    9. 'e' → logprob: -9.630870819091797
    10. ''imp' → logprob: -10.255870819091797

Token 52: ' où' (ID: 15113)
  Prédit: 'où'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'où' → logprob: -0.5265416502952576
    2. ' où' → logprob: -0.9015416502952576
    3. ' o' → logprob: -6.526541709899902
    4. ' where' → logprob: -7.276541709899902
    5. '```' → logprob: -8.276541709899902
    6. ' ' → logprob: -8.276541709899902
    7. 'o' → logprob: -8.651541709899902
    8. '#' → logprob: -9.151541709899902
    9. ''où' → logprob: -9.276541709899902
    10. 'where' → logprob: -9.401541709899902

Token 53: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2803289294242859
    2. ' et' → logprob: -2.0303289890289307
    3. ' sur' → logprob: -2.9053289890289307
    4. '.' → logprob: -3.6553289890289307
    5. ' ,' → logprob: -4.780328750610352
    6. ' dans' → logprob: -5.405328750610352
    7. 'sur' → logprob: -5.405328750610352
    8. ' ' → logprob: -5.655328750610352
    9. ' avec' → logprob: -6.030328750610352
    10. '#' → logprob: -6.155328750610352

Token 54: ' même' (ID: 9679)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' et' → logprob: -1.2693856954574585
    2. '#' → logprob: -1.3943856954574585
    3. ' couvr' → logprob: -1.8943856954574585
    4. ' en' → logprob: -2.144385814666748
    5. ' avec' → logprob: -2.769385814666748
    6. ' sur' → logprob: -2.894385814666748
    7. ' de' → logprob: -4.019385814666748
    8. ' mais' → logprob: -4.144385814666748
    9. ' ' → logprob: -4.394385814666748
    10. ' #' → logprob: -5.019385814666748

Token 55: ' en' (ID: 469)
  Prédit: ' sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.7781486511230469
    2. 'sur' → logprob: -1.6531486511230469
    3. ' dessus' → logprob: -3.278148651123047
    4. ' en' → logprob: -3.403148651123047
    5. ' à' → logprob: -3.528148651123047
    6. ' si' → logprob: -3.528148651123047
    7. ' super' → logprob: -3.653148651123047
    8. ' au' → logprob: -3.903148651123047
    9. 'à' → logprob: -3.903148651123047
    10. ' ' → logprob: -3.903148651123047

Token 56: ' déb' (ID: 37874)
  Prédit: ' super'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' super' → logprob: -1.1883800029754639
    2. ' chev' → logprob: -1.1883800029754639
    3. ' rec' → logprob: -1.4383800029754639
    4. 'super' → logprob: -2.813380002975464
    5. 'che' → logprob: -3.188380002975464
    6. 'rec' → logprob: -4.563380241394043
    7. ' ' → logprob: -5.063380241394043
    8. 'part' → logprob: -5.313380241394043
    9. 'dé' → logprob: -5.813380241394043
    10. ' overlapping' → logprob: -6.063380241394043

Token 57: 'ord' (ID: 604)
  Prédit: 'ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.2922869920730591
    2. 'ut' → logprob: -1.417286992073059
    3. 'utt' → logprob: -5.4172868728637695
    4. '>' → logprob: -6.1672868728637695
    5. '```' → logprob: -7.5422868728637695
    6. 'or' → logprob: -8.04228687286377
    7. '#' → logprob: -8.16728687286377
    8. '=' → logprob: -8.29228687286377
    9. '0' → logprob: -8.29228687286377
    10. '"' → logprob: -8.29228687286377

Token 58: 'ant' (ID: 493)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8211246132850647
    2. 's' → logprob: -1.69612455368042
    3. '#' → logprob: -1.82112455368042
    4. '_' → logprob: -3.07112455368042
    5. '.' → logprob: -3.69612455368042
    6. 'e' → logprob: -3.82112455368042
    7. 'r' → logprob: -3.82112455368042
    8. ',' → logprob: -4.19612455368042
    9. 'u' → logprob: -4.57112455368042
    10. ')' → logprob: -4.82112455368042

Token 59: ' la' (ID: 557)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9542320966720581
    2. ' ' → logprob: -1.329232096672058
    3. '.' → logprob: -1.954232096672058
    4. ' ,' → logprob: -2.0792322158813477
    5. '<|end|>' → logprob: -3.2042322158813477
    6. '#' → logprob: -4.204232215881348
    7. ' :' → logprob: -5.579232215881348
    8. 's' → logprob: -5.704232215881348
    9. ' .' → logprob: -6.079232215881348
    10. ':' → logprob: -6.079232215881348

Token 60: ' grille' (ID: 99153)
  Prédit: ' grille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grille' → logprob: -0.6896229386329651
    2. 'gr' → logprob: -1.1896228790283203
    3. ' ' → logprob: -2.4396228790283203
    4. 'g' → logprob: -3.6896228790283203
    5. ' gr' → logprob: -3.9396228790283203
    6. '#' → logprob: -4.56462287902832
    7. 'ligne' → logprob: -4.56462287902832
    8. 'l' → logprob: -5.06462287902832
    9. ' ligne' → logprob: -5.18962287902832
    10. ' g' → logprob: -5.25212287902832

Token 61: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.429726243019104
    2. ' ' → logprob: -1.554726243019104
    3. '.' → logprob: -1.679726243019104
    4. ' 

' → logprob: -1.804726243019104
    5. '\' → logprob: -3.3047261238098145
    6. ',' → logprob: -3.4297261238098145
    7. ':' → logprob: -3.6797261238098145
    8. ' 
' → logprob: -3.6797261238098145
    9. 'import' → logprob: -4.3047261238098145
    10. '<|end|>' → logprob: -4.6797261238098145

Token 62: ' et' (ID: 859)
  Prédit: ' mais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mais' → logprob: -0.2813141345977783
    2. ' ' → logprob: -2.5313141345977783
    3. '#' → logprob: -2.9063141345977783
    4. ' et' → logprob: -3.4063141345977783
    5. ' but' → logprob: -3.7813141345977783
    6. ' en' → logprob: -4.031313896179199
    7. ',' → logprob: -4.656313896179199
    8. ' #' → logprob: -4.781313896179199
    9. ' ,' → logprob: -4.906313896179199
    10. '.' → logprob: -6.406313896179199

Token 63: ' peint' (ID: 56848)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.37896493077278137
    2. ' chaque' → logprob: -2.503964900970459
    3. ' peut' → logprob: -2.628964900970459
    4. ' color' → logprob: -2.753964900970459
    5. ' la' → logprob: -4.503964900970459
    6. ' appliquer' → logprob: -4.628964900970459
    7. ' on' → logprob: -4.753964900970459
    8. ' doit' → logprob: -5.128964900970459
    9. 'color' → logprob: -5.128964900970459
    10. ' #' → logprob: -5.128964900970459

Token 64: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5346896052360535
    2. ' uniquement' → logprob: -1.7846896648406982
    3. '#' → logprob: -3.2846896648406982
    4. '.' → logprob: -3.6596896648406982
    5. ' partout' → logprob: -3.7846896648406982
    6. ' une' → logprob: -3.7846896648406982
    7. 'r' → logprob: -3.7846896648406982
    8. ' la' → logprob: -3.9096896648406982
    9. ' seulement' → logprob: -4.034689426422119
    10. ' un' → logprob: -4.409689426422119

Token 65: ' zone' (ID: 15070)
  Prédit: ' grille'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grille' → logprob: -1.0823421478271484
    2. ' ' → logprob: -1.7073421478271484
    3. ' case' → logprob: -2.3323421478271484
    4. ' même' → logprob: -2.3323421478271484
    5. ' zone' → logprob: -2.3323421478271484
    6. ' partie' → logprob: -2.8323421478271484
    7. ' portion' → logprob: -3.5823421478271484
    8. ' totalité' → logprob: -3.8323421478271484
    9. ' surface' → logprob: -3.9573421478271484
    10. '   ' → logprob: -4.707342147827148

Token 66: ' cou' (ID: 3840)
  Prédit: ' entière'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' entière' → logprob: -0.6830246448516846
    2. '.' → logprob: -2.8080246448516846
    3. ' ' → logprob: -2.9330246448516846
    4. ' complète' → logprob: -2.9330246448516846
    5. ' rect' → logprob: -3.0580246448516846
    6. ' de' → logprob: -3.0580246448516846
    7. ' adj' → logprob: -3.1830246448516846
    8. ' suivante' → logprob: -4.0580244064331055
    9. ' #' → logprob: -4.1830244064331055
    10. ' comprise' → logprob: -4.4330244064331055

Token 67: 'verte' (ID: 44260)
  Prédit: 'verte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'verte' → logprob: -0.2871112525463104
    2. 'vr' → logprob: -1.6621112823486328
    3. 'v' → logprob: -3.412111282348633
    4. '#' → logprob: -4.412111282348633
    5. 'vert' → logprob: -5.787111282348633
    6. 'verture' → logprob: -5.787111282348633
    7. '\' → logprob: -6.787111282348633
    8. '-' → logprob: -7.037111282348633
    9. '+' → logprob: -7.287111282348633
    10. '"' → logprob: -7.662111282348633

Token 68: ' d' (ID: 272)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4879216253757477
    2. ',' → logprob: -2.112921714782715
    3. ' ' → logprob: -2.237921714782715
    4. '#' → logprob: -3.237921714782715
    5. ' en' → logprob: -3.612921714782715
    6. ' par' → logprob: -3.737921714782715
    7. ' ,' → logprob: -3.987921714782715
    8. ' de' → logprob: -4.112921714782715
    9. ' d' → logprob: -4.612921714782715
    10. ' #' → logprob: -5.487921714782715

Token 69: ''une' (ID: 13337)
  Prédit: ''un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.9420857429504395
    2. ''une' → logprob: -1.0670857429504395
    3. 'e' → logprob: -2.0670857429504395
    4. 'u' → logprob: -2.4420857429504395
    5. ''' → logprob: -4.1920857429504395
    6. ''u' → logprob: -4.4420857429504395
    7. ''au' → logprob: -5.1920857429504395
    8. ' la' → logprob: -5.5670857429504395
    9. ' ' → logprob: -6.3170857429504395
    10. ' un' → logprob: -6.4420857429504395

Token 70: ' unique' (ID: 5746)
  Prédit: ' couleur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' couleur' → logprob: -0.2109518200159073
    2. ' ' → logprob: -3.085951805114746
    3. '#' → logprob: -3.210951805114746
    4. 'cou' → logprob: -3.585951805114746
    5. ' #' → logprob: -4.335951805114746
    6. 'case' → logprob: -4.835951805114746
    7. ' seule' → logprob: -4.960951805114746
    8. ' case' → logprob: -4.960951805114746
    9. ' color' → logprob: -5.210951805114746
    10. ' même' → logprob: -5.210951805114746

Token 71: ' couleur' (ID: 48005)
  Prédit: ' couleur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couleur' → logprob: -0.0705103948712349
    2. ' ' → logprob: -3.0705103874206543
    3. 'cou' → logprob: -4.195510387420654
    4. ' color' → logprob: -5.945510387420654
    5. 'c' → logprob: -7.070510387420654
    6. ' couleurs' → logprob: -7.320510387420654
    7. '#' → logprob: -8.133010864257812
    8. ' c' → logprob: -8.258010864257812
    9. 'color' → logprob: -8.633010864257812
    10. ' coul' → logprob: -8.945510864257812

Token 72: ' chois' (ID: 33475)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3990744948387146
    2. ' ' → logprob: -1.7740745544433594
    3. ',' → logprob: -2.5240745544433594
    4. '#' → logprob: -3.6490745544433594
    5. ' ,' → logprob: -4.274074554443359
    6. '\' → logprob: -5.149074554443359
    7. 's' → logprob: -5.399074554443359
    8. '<|end|>' → logprob: -5.649074554443359
    9. ':' → logprob: -5.899074554443359
    10. ' 

' → logprob: -6.024074554443359

Token 73: 'ie' (ID: 396)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0018048917409032583
    2. ' e' → logprob: -7.251804828643799
    3. 'ie' → logprob: -7.501804828643799
    4. 'é' → logprob: -9.126805305480957
    5. ' ' → logprob: -9.126805305480957
    6. '#' → logprob: -9.626805305480957
    7. 'r' → logprob: -10.626805305480957
    8. 'ue' → logprob: -10.626805305480957
    9. ',' → logprob: -11.064305305480957
    10. ' en' → logprob: -11.251805305480957

Token 74: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.09450950473546982
    2. ',' → logprob: -2.9695096015930176
    3. ' ' → logprob: -3.9695096015930176
    4. '#' → logprob: -4.469509601593018
    5. '\' → logprob: -6.594509601593018
    6. ':' → logprob: -6.719509601593018
    7. 'e' → logprob: -7.469509601593018
    8. ' ,' → logprob: -7.469509601593018
    9. ',
' → logprob: -7.719509601593018
    10. '.
' → logprob: -7.844509601593018

Token 75: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.36345216631889343
    2. ' ' → logprob: -2.113452196121216
    3. '
' → logprob: -2.863452196121216
    4. ' 

' → logprob: -3.113452196121216
    5. 'def' → logprob: -3.988452196121216
    6. '\' → logprob: -4.113451957702637
    7. '.' → logprob: -4.488451957702637
    8. '

' → logprob: -4.738451957702637
    9. ' 
' → logprob: -5.113451957702637
    10. '' → logprob: -5.613451957702637

Token 76: ' On' (ID: 2160)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3194320797920227
    2. '#' → logprob: -1.819432020187378
    3. ' 

' → logprob: -3.194432020187378
    4. '\' → logprob: -4.069432258605957
    5. ' 
' → logprob: -4.194432258605957
    6. '.' → logprob: -4.444432258605957
    7. '
' → logprob: -5.069432258605957
    8. 'def' → logprob: -5.569432258605957
    9. '' → logprob: -5.819432258605957
    10. 'n' → logprob: -6.194432258605957

Token 77: ' peut' (ID: 9216)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.014107799157500267
    2. ' peut' → logprob: -5.139107704162598
    3. ' a' → logprob: -6.389107704162598
    4. ' '' → logprob: -6.764107704162598
    5. ' doit' → logprob: -7.639107704162598
    6. '_' → logprob: -7.764107704162598
    7. ' #' → logprob: -8.014107704162598
    8. ' considère' → logprob: -8.139107704162598
    9. ' ' → logprob: -8.389107704162598
    10. ''' → logprob: -8.389107704162598

Token 78: ' utiliser' (ID: 43227)
  Prédit: ' utiliser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utiliser' → logprob: -0.8833619952201843
    2. ' color' → logprob: -1.758362054824829
    3. ' continuer' → logprob: -2.133362054824829
    4. ' rec' → logprob: -3.133362054824829
    5. ' choisir' → logprob: -3.758362054824829
    6. ' placer' → logprob: -3.883362054824829
    7. ' considérer' → logprob: -3.883362054824829
    8. ' appliquer' → logprob: -4.00836181640625
    9. ' aussi' → logprob: -4.38336181640625
    10. ' penser' → logprob: -4.88336181640625

Token 79: ' n' (ID: 297)
  Prédit: ' plusieurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plusieurs' → logprob: -0.4335082173347473
    2. ' une' → logprob: -2.1835081577301025
    3. ' des' → logprob: -2.6835081577301025
    4. ' les' → logprob: -3.4335081577301025
    5. ' différentes' → logprob: -3.4335081577301025
    6. ' n' → logprob: -3.6835081577301025
    7. ' un' → logprob: -4.058508396148682
    8. ' uniquement' → logprob: -4.558508396148682
    9. ' la' → logprob: -4.683508396148682
    10. ' plus' → logprob: -5.183508396148682

Token 80: ''importe' (ID: 103032)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4970867335796356
    2. ''importe' → logprob: -0.997086763381958
    3. ''import' → logprob: -5.247086524963379
    4. ''u' → logprob: -5.247086524963379
    5. ''im' → logprob: -5.747086524963379
    6. ' '' → logprob: -6.122086524963379
    7. ''i' → logprob: -6.122086524963379
    8. ''imp' → logprob: -6.872086524963379
    9. 'e' → logprob: -7.622086524963379
    10. 'u' → logprob: -7.747086524963379

Token 81: ' quel' (ID: 10613)
  Prédit: ' quelle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' quelle' → logprob: -1.406209945678711
    2. 'où' → logprob: -2.156209945678711
    3. '```' → logprob: -2.406209945678711
    4. '-' → logprob: -2.406209945678711
    5. 'quelle' → logprob: -2.781209945678711
    6. ' ' → logprob: -2.781209945678711
    7. ' quel' → logprob: -2.781209945678711
    8. ' où' → logprob: -3.031209945678711
    9. '#' → logprob: -3.406209945678711
    10. ''importe' → logprob: -3.656209945678711

Token 82: ' tampon' (ID: 176995)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8122538328170776
    2. ' nombre' → logprob: -1.0622538328170776
    3. 'es' → logprob: -2.937253952026367
    4. ' ' → logprob: -3.062253952026367
    5. ' espace' → logprob: -3.437253952026367
    6. ' couleur' → logprob: -4.187253952026367
    7. ' e' → logprob: -4.312253952026367
    8. ' rectangle' → logprob: -4.562253952026367
    9. ' color' → logprob: -5.062253952026367
    10. '   ' → logprob: -5.562253952026367

Token 83: ' plusieurs' (ID: 20875)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05325622856616974
    2. ' ' → logprob: -3.3032562732696533
    3. '.' → logprob: -5.178256034851074
    4. ' s' → logprob: -5.303256034851074
    5. ',' → logprob: -6.678256034851074
    6. '_' → logprob: -6.678256034851074
    7. ' ,' → logprob: -7.928256034851074
    8. '<|end|>' → logprob: -8.178256034851074
    9. '(s' → logprob: -8.178256034851074
    10. ''s' → logprob: -8.928256034851074

Token 84: ' fois' (ID: 14697)
  Prédit: ' fois'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fois' → logprob: -0.0902675911784172
    2. 'fois' → logprob: -2.9652676582336426
    3. ' ' → logprob: -3.8402676582336426
    4. 's' → logprob: -5.715267658233643
    5. ' de' → logprob: -6.090267658233643
    6. '  ' → logprob: -6.215267658233643
    7. ' ' → logprob: -7.090267658233643
    8. '_' → logprob: -7.215267658233643
    9. '-' → logprob: -7.215267658233643
    10. '```' → logprob: -7.340267658233643

Token 85: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.30799955129623413
    2. '#' → logprob: -1.932999610900879
    3. '.' → logprob: -3.182999610900879
    4. ' 
' → logprob: -3.932999610900879
    5. '_' → logprob: -3.932999610900879
    6. ',' → logprob: -4.432999610900879
    7. '\' → logprob: -5.057999610900879
    8. '
' → logprob: -5.432999610900879
    9. ' 

' → logprob: -5.557999610900879
    10. 'n' → logprob: -6.682999610900879

Token 86: ' et' (ID: 859)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7212445735931396
    2. ' ' → logprob: -1.5962445735931396
    3. ' mais' → logprob: -2.3462445735931396
    4. ' et' → logprob: -3.4712445735931396
    5. 'e' → logprob: -3.5962445735931396
    6. 's' → logprob: -3.5962445735931396
    7. '.' → logprob: -3.7212445735931396
    8. ',' → logprob: -3.8462445735931396
    9. ' 
' → logprob: -4.096244812011719
    10. ' en' → logprob: -4.596244812011719

Token 87: ' changer' (ID: 47099)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.170395851135254
    2. ' chaque' → logprob: -1.545395851135254
    3. ' la' → logprob: -2.170395851135254
    4. ' n' → logprob: -2.545395851135254
    5. ' les' → logprob: -2.670395851135254
    6. ' on' → logprob: -3.295395851135254
    7. ' color' → logprob: -3.920395851135254
    8. ' l' → logprob: -4.170395851135254
    9. ' #' → logprob: -4.420395851135254
    10. 'n' → logprob: -4.420395851135254

Token 88: ' la' (ID: 557)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.29244574904441833
    2. ' ' → logprob: -1.5424457788467407
    3. ' d' → logprob: -3.917445659637451
    4. ' la' → logprob: -4.542445659637451
    5. ' l' → logprob: -6.042445659637451
    6. 's' → logprob: -6.167445659637451
    7. 'd' → logprob: -6.542445659637451
    8. ' les' → logprob: -7.292445659637451
    9. 'de' → logprob: -7.417445659637451
    10. '  ' → logprob: -7.667445659637451

Token 89: ' couleur' (ID: 48005)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06427406519651413
    2. 'c' → logprob: -3.6892740726470947
    3. ' couleur' → logprob: -3.8142740726470947
    4. 'cou' → logprob: -5.439273834228516
    5. ' c' → logprob: -5.689273834228516
    6. ' espace' → logprob: -6.314273834228516
    7. ' 
' → logprob: -6.814273834228516
    8. ' color' → logprob: -6.814273834228516
    9. '' → logprob: -7.564273834228516
    10. 'n' → logprob: -8.314273834228516

Token 90: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08709419518709183
    2. '.' → logprob: -2.712094306945801
    3. ' 
' → logprob: -5.337094306945801
    4. '#' → logprob: -5.712094306945801
    5. ',' → logprob: -5.837094306945801
    6. ' 

' → logprob: -6.462094306945801
    7. 's' → logprob: -6.712094306945801
    8. ' ,' → logprob: -7.337094306945801
    9. '_' → logprob: -7.837094306945801
    10. '<|end|>' → logprob: -8.0870943069458

Token 91: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.023282168433070183
    2. ' ' → logprob: -4.148282051086426
    3. 'cha' → logprob: -6.523282051086426
    4. 'n' → logprob: -6.648282051086426
    5. 'a' → logprob: -6.898282051086426
    6. ' la' → logprob: -7.273282051086426
    7. 'l' → logprob: -8.023282051086426
    8. 'Chaque' → logprob: -8.273282051086426
    9. 'à' → logprob: -8.398282051086426
    10. ' cha' → logprob: -8.523282051086426

Token 92: ' utilisation' (ID: 80058)
  Prédit: ' pression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pression' → logprob: -0.9390063285827637
    2. 'pression' → logprob: -1.5640063285827637
    3. ' ' → logprob: -1.8140063285827637
    4. ' fois' → logprob: -2.3140063285827637
    5. 'placement' → logprob: -3.0640063285827637
    6. 'press' → logprob: -3.9390063285827637
    7. 'fois' → logprob: -3.9390063285827637
    8. ' placement' → logprob: -4.689006328582764
    9. 'app' → logprob: -4.939006328582764
    10. ' application' → logprob: -5.064006328582764

Token 93: '.
' (ID: 558)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9158562421798706
    2. '.' → logprob: -1.2908562421798706
    3. ' ' → logprob: -1.4158562421798706
    4. ' 
' → logprob: -3.79085636138916
    5. ' 

' → logprob: -4.29085636138916
    6. '
' → logprob: -4.29085636138916
    7. '\' → logprob: -4.91585636138916
    8. ',' → logprob: -5.04085636138916
    9. '' → logprob: -6.04085636138916
    10. 'n' → logprob: -6.29085636138916

Token 94: '#' (ID: 2)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4542003273963928
    2. '#' → logprob: -1.454200267791748
    3. ' ' → logprob: -3.454200267791748
    4. '_' → logprob: -3.704200267791748
    5. ' 
' → logprob: -4.204200267791748
    6. 'i' → logprob: -4.579200267791748
    7. '
' → logprob: -4.704200267791748
    8. '\' → logprob: -4.829200267791748
    9. 'def' → logprob: -4.829200267791748
    10. '-' → logprob: -5.454200267791748

Token 95: ' L' (ID: 451)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.1112617254257202
    2. '#' → logprob: -1.4862617254257202
    3. ' ' → logprob: -1.4862617254257202
    4. '\' → logprob: -3.1112618446350098
    5. ' 
' → logprob: -3.1112618446350098
    6. 'def' → logprob: -3.3612618446350098
    7. ' 

' → logprob: -3.6112618446350098
    8. 'import' → logprob: -3.9862618446350098
    9. 'i' → logprob: -4.36126184463501
    10. '
' → logprob: -4.98626184463501

Token 96: ''objectif' (ID: 194227)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6453061699867249
    2. 'e' → logprob: -1.39530611038208
    3. ''' → logprob: -1.64530611038208
    4. '#' → logprob: -3.89530611038208
    5. 'i' → logprob: -5.14530611038208
    6. 'u' → logprob: -6.02030611038208
    7. ''\' → logprob: -6.89530611038208
    8. ' '' → logprob: -7.39530611038208
    9. ''é' → logprob: -7.89530611038208
    10. ''
' → logprob: -8.020306587219238

Token 97: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.00384662882424891
    2. ' est' → logprob: -6.003846645355225
    3. ' d' → logprob: -7.628846645355225
    4. ' de' → logprob: -8.253846168518066
    5. ' :' → logprob: -8.378846168518066
    6. ':' → logprob: -8.753846168518066
    7. ' ' → logprob: -9.628846168518066
    8. '_' → logprob: -10.003846168518066
    9. 's' → logprob: -10.253846168518066
    10. '.' → logprob: -11.003846168518066

Token 98: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5565747022628784
    2. ' de' → logprob: -1.4315747022628784
    3. ' d' → logprob: -1.6815747022628784
    4. 'd' → logprob: -7.431574821472168
    5. '  ' → logprob: -7.431574821472168
    6. 'de' → logprob: -8.431574821472168
    7. '  
' → logprob: -9.931574821472168
    8. ' donc' → logprob: -10.181574821472168
    9. '   ' → logprob: -10.306574821472168
    10. ' ' → logprob: -10.431574821472168

Token 99: ' couvrir' (ID: 197187)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3911709785461426
    2. ' minim' → logprob: -1.5161709785461426
    3. ' trouver' → logprob: -3.2661709785461426
    4. 'tr' → logprob: -3.5161709785461426
    5. 'color' → logprob: -4.766170978546143
    6. ' color' → logprob: -5.016170978546143
    7. ' couvrir' → logprob: -5.016170978546143
    8. 'ob' → logprob: -6.391170978546143
    9. ' remplir' → logprob: -6.891170978546143
    10. ' min' → logprob: -6.891170978546143

Token 100: ' chaque' (ID: 21194)
  Prédit: ' toute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' toute' → logprob: -0.8779670000076294
    2. ' ' → logprob: -1.0029670000076294
    3. ' entièrement' → logprob: -2.75296688079834
    4. ' l' → logprob: -2.87796688079834
    5. ' la' → logprob: -3.25296688079834
    6. ' tout' → logprob: -3.87796688079834
    7. 'tout' → logprob: -4.75296688079834
    8. ' entire' → logprob: -5.12796688079834
    9. 'l' → logprob: -5.37796688079834
    10. ' ' → logprob: -5.50296688079834

Token 101: ' case' (ID: 1890)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24466300010681152
    2. ' case' → logprob: -2.1196630001068115
    3. 'case' → logprob: -3.3696630001068115
    4. ' cell' → logprob: -3.7446630001068115
    5. ' pixel' → logprob: -4.619663238525391
    6. ' cellule' → logprob: -4.744663238525391
    7. 'c' → logprob: -5.369663238525391
    8. ' c' → logprob: -5.494663238525391
    9. ' espace' → logprob: -6.119663238525391
    10. ' carré' → logprob: -6.119663238525391

Token 102: ' avec' (ID: 3937)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2544006407260895
    2. ' de' → logprob: -1.629400610923767
    3. ' d' → logprob: -4.629400730133057
    4. '.' → logprob: -5.754400730133057
    5. ' du' → logprob: -5.754400730133057
    6. ' avec' → logprob: -5.879400730133057
    7. ',' → logprob: -6.879400730133057
    8. ' non' → logprob: -6.879400730133057
    9. ' #' → logprob: -7.129400730133057
    10. ' en' → logprob: -7.254400730133057

Token 103: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.3596477806568146
    2. ' une' → logprob: -1.4846477508544922
    3. ' au' → logprob: -3.609647750854492
    4. ' sa' → logprob: -3.609647750854492
    5. ' ' → logprob: -4.984647750854492
    6. 'au' → logprob: -5.234647750854492
    7. 'une' → logprob: -5.609647750854492
    8. 'la' → logprob: -6.609647750854492
    9. ' un' → logprob: -7.234647750854492
    10. ' l' → logprob: -7.234647750854492

Token 104: ' bonne' (ID: 24450)
  Prédit: ' couleur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' couleur' → logprob: -0.7812092304229736
    2. ' ' → logprob: -0.9062092304229736
    3. 'cou' → logprob: -2.7812092304229736
    4. ' case' → logprob: -3.7812092304229736
    5. ' même' → logprob: -4.2812089920043945
    6. 'c' → logprob: -4.5312089920043945
    7. ' color' → logprob: -4.6562089920043945
    8. 'case' → logprob: -5.1562089920043945
    9. 'color' → logprob: -6.0312089920043945
    10. ' seule' → logprob: -6.9062089920043945

Token 105: ' couleur' (ID: 48005)
  Prédit: ' couleur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couleur' → logprob: -0.01956963911652565
    2. ' ' → logprob: -4.3945698738098145
    3. 'cou' → logprob: -5.1445698738098145
    4. ' color' → logprob: -7.3945698738098145
    5. ' case' → logprob: -8.269569396972656
    6. 'c' → logprob: -9.394569396972656
    7. ' couleurs' → logprob: -9.394569396972656
    8. ' cou' → logprob: -10.394569396972656
    9. ' c' → logprob: -10.644569396972656
    10. 'case' → logprob: -10.894569396972656

Token 106: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0208491086959839
    2. '.' → logprob: -1.1458491086959839
    3. ',' → logprob: -2.1458492279052734
    4. '#' → logprob: -2.1458492279052734
    5. '\' → logprob: -3.5208492279052734
    6. ' 
' → logprob: -3.7708492279052734
    7. '
' → logprob: -5.145849227905273
    8. '\n' → logprob: -5.270849227905273
    9. '' → logprob: -5.395849227905273
    10. ':' → logprob: -5.520849227905273

Token 107: 'R' (ID: 49)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5789307355880737
    2. ' )' → logprob: -1.0789307355880737
    3. ').' → logprob: -3.5789308547973633
    4. '.' → logprob: -4.078930854797363
    5. ' ' → logprob: -4.203930854797363
    6. ',' → logprob: -4.453930854797363
    7. ' ).' → logprob: -4.703930854797363
    8. '.)' → logprob: -4.953930854797363
    9. ' ),' → logprob: -6.328930854797363
    10. '),' → logprob: -6.328930854797363

Token 108: ',' (ID: 11)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -1.1982276439666748
    2. 'e' → logprob: -1.1982276439666748
    3. ',' → logprob: -1.5732276439666748
    4. ')' → logprob: -2.698227643966675
    5. 'O' → logprob: -3.448227643966675
    6. 'E' → logprob: -4.198227882385254
    7. 'ed' → logprob: -4.448227882385254
    8. 'V' → logprob: -4.698227882385254
    9. 'a' → logprob: -4.698227882385254
    10. 'o' → logprob: -5.198227882385254

Token 109: ' G' (ID: 499)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.7794824838638306
    2. ' V' → logprob: -0.7794824838638306
    3. ' ' → logprob: -3.779482364654541
    4. 'G' → logprob: -3.779482364654541
    5. 'B' → logprob: -4.404482364654541
    6. ' G' → logprob: -4.529482364654541
    7. ' B' → logprob: -4.529482364654541
    8. ' )' → logprob: -7.529482364654541
    9. ',' → logprob: -7.779482364654541
    10. 'J' → logprob: -7.904482364654541

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.031692035496234894
    2. ' ou' → logprob: -4.156692028045654
    3. 'B' → logprob: -4.781692028045654
    4. ' ,' → logprob: -5.656692028045654
    5. ')' → logprob: -6.781692028045654
    6. ',B' → logprob: -7.531692028045654
    7. 'ou' → logprob: -7.906692028045654
    8. ' or' → logprob: -8.031692504882812
    9. '),' → logprob: -8.031692504882812
    10. ' ' → logprob: -8.156692504882812

Token 111: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.4762413799762726
    2. 'B' → logprob: -0.9762413501739502
    3. ' ou' → logprob: -6.726241588592529
    4. ' ' → logprob: -7.976241588592529
    5. ' or' → logprob: -8.101241111755371
    6. ' et' → logprob: -9.226241111755371
    7. ' ' → logprob: -10.726241111755371
    8. ' )' → logprob: -10.788741111755371
    9. ''' → logprob: -10.851241111755371
    10. 'et' → logprob: -11.038741111755371

Token 112: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14853721857070923
    2. ',' → logprob: -2.2735371589660645
    3. ' )' → logprob: -4.3985371589660645
    4. ' ou' → logprob: -4.3985371589660645
    5. ').' → logprob: -5.1485371589660645
    6. '),' → logprob: -6.1485371589660645
    7. ' ,' → logprob: -7.2735371589660645
    8. ' ' → logprob: -7.6485371589660645
    9. '.' → logprob: -8.023537635803223
    10. ' or' → logprob: -8.148537635803223

Token 113: ' avec' (ID: 3937)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8541979193687439
    2. '#' → logprob: -0.9791979193687439
    3. ' 
' → logprob: -2.2291979789733887
    4. 'def' → logprob: -3.9791979789733887
    5. ' ' → logprob: -4.229197978973389
    6. '\' → logprob: -4.354197978973389
    7. '

' → logprob: -5.104197978973389
    8. 'import' → logprob: -5.104197978973389
    9. '.' → logprob: -5.229197978973389
    10. ',' → logprob: -5.479197978973389

Token 114: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.45643875002861023
    2. ' un' → logprob: -1.7064387798309326
    3. 'le' → logprob: -2.5814387798309326
    4. ' la' → logprob: -3.5814387798309326
    5. ' au' → logprob: -3.9564387798309326
    6. 'un' → logprob: -4.0814385414123535
    7. 'au' → logprob: -4.8314385414123535
    8. ' une' → logprob: -5.0814385414123535
    9. 'la' → logprob: -5.3314385414123535
    10. ' minimal' → logprob: -5.7064385414123535

Token 115: ' nombre' (ID: 9733)
  Prédit: ' minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimum' → logprob: -0.43679752945899963
    2. ' même' → logprob: -1.8117974996566772
    3. ' nombre' → logprob: -2.311797618865967
    4. ' minimal' → logprob: -3.561797618865967
    5. ' code' → logprob: -3.936797618865967
    6. ' plus' → logprob: -4.686797618865967
    7. ' moindre' → logprob: -4.686797618865967
    8. ' maximum' → logprob: -4.811797618865967
    9. 'minimum' → logprob: -5.436797618865967
    10. 'nombre' → logprob: -6.061797618865967

Token 116: ' minimal' (ID: 19957)
  Prédit: ' minimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -1.1893075704574585
    2. ' ' → logprob: -1.5643075704574585
    3. ' de' → logprob: -1.8143075704574585
    4. ' d' → logprob: -1.8143075704574585
    5. ' minimum' → logprob: -2.689307689666748
    6. ' maximal' → logprob: -3.564307689666748
    7. ' total' → logprob: -3.814307689666748
    8. '  ' → logprob: -3.939307689666748
    9. ' optimal' → logprob: -5.064307689666748
    10. ' maximum' → logprob: -6.189307689666748

Token 117: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.4325992166996002
    2. ' ' → logprob: -1.6825991868972778
    3. ' de' → logprob: -1.8075991868972778
    4. 'd' → logprob: -7.932599067687988
    5. '  ' → logprob: -8.307599067687988
    6. '<|end|>' → logprob: -8.807599067687988
    7. 'de' → logprob: -9.182599067687988
    8. '_' → logprob: -9.432599067687988
    9. '_de' → logprob: -9.557599067687988
    10. ' des' → logprob: -9.932599067687988

Token 118: ' tam' (ID: 10663)
  Prédit: 'pressions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pressions' → logprob: -0.7230045795440674
    2. ' press' → logprob: -1.0980045795440674
    3. 'press' → logprob: -2.5980045795440674
    4. ' presses' → logprob: -3.3480045795440674
    5. ' ' → logprob: -3.5980045795440674
    6. ' app' → logprob: -4.723004341125488
    7. 'app' → logprob: -4.723004341125488
    8. '  
' → logprob: -5.098004341125488
    9. ' ' → logprob: -5.723004341125488
    10. 'pression' → logprob: -5.973004341125488

Token 119: 'pons' (ID: 2987)
  Prédit: 'pons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pons' → logprob: -0.22523675858974457
    2. 'p' → logprob: -1.7252367734909058
    3. 'pon' → logprob: -5.225236892700195
    4. 'ponses' → logprob: -6.350236892700195
    5. 'pom' → logprob: -6.350236892700195
    6. 'ps' → logprob: -6.475236892700195
    7. 'pressions' → logprob: -6.600236892700195
    8. 'po' → logprob: -7.100236892700195
    9. 'pas' → logprob: -7.100236892700195
    10. '   ' → logprob: -7.350236892700195

Token 120: '.
' (ID: 558)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0174933671951294
    2. '
' → logprob: -1.1424933671951294
    3. ' 
' → logprob: -2.26749324798584
    4. ' 

' → logprob: -2.89249324798584
    5. ' ' → logprob: -3.01749324798584
    6. '

' → logprob: -3.26749324798584
    7. '\' → logprob: -4.01749324798584
    8. 'def' → logprob: -4.26749324798584
    9. 'import' → logprob: -4.26749324798584
    10. '' → logprob: -5.26749324798584

Token 121: '#
' (ID: 11240)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6855860948562622
    2. '#' → logprob: -1.1855860948562622
    3. 'd' → logprob: -2.4355859756469727
    4. 'def' → logprob: -3.1855859756469727
    5. ' 
' → logprob: -3.5605859756469727
    6. '.' → logprob: -5.310585975646973
    7. 'i' → logprob: -5.810585975646973
    8. 'import' → logprob: -5.810585975646973
    9. '
' → logprob: -6.060585975646973
    10. '_' → logprob: -6.060585975646973

Token 122: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20224902033805847
    2. 'import' → logprob: -2.452249050140381
    3. '#' → logprob: -2.577249050140381
    4. 'n' → logprob: -4.202249050140381
    5. 'from' → logprob: -6.202249050140381
    6. 'd' → logprob: -7.077249050140381
    7. '\' → logprob: -7.202249050140381
    8. ' 
' → logprob: -7.702249050140381
    9. '
' → logprob: -7.952249050140381
    10. 'a' → logprob: -8.202248573303223

Token 123: ' Observ' (ID: 54666)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5622767210006714
    2. '#' → logprob: -2.062276840209961
    3. 'd' → logprob: -2.062276840209961
    4. 'import' → logprob: -2.062276840209961
    5. 'i' → logprob: -4.187276840209961
    6. 'n' → logprob: -4.687276840209961
    7. 'from' → logprob: -5.187276840209961
    8. ' ' → logprob: -5.687276840209961
    9. 'a' → logprob: -5.812276840209961
    10. ' 
' → logprob: -6.437276840209961

Token 124: 'ons' (ID: 1808)
  Prédit: 'ation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.19848079979419708
    2. 'ations' → logprob: -2.1984808444976807
    3. 'a' → logprob: -3.0734808444976807
    4. '#' → logprob: -3.9484808444976807
    5. 'at' → logprob: -6.573480606079102
    6. 'e' → logprob: -7.573480606079102
    7. 'ati' → logprob: -7.698480606079102
    8. 'atio' → logprob: -8.073480606079102
    9. ' at' → logprob: -9.073480606079102
    10. 's' → logprob: -9.073480606079102

Token 125: ' que' (ID: 661)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05976002290844917
    2. '_' → logprob: -3.684760093688965
    3. ':' → logprob: -4.809760093688965
    4. ' ' → logprob: -5.059760093688965
    5. ' que' → logprob: -5.184760093688965
    6. ' :' → logprob: -5.434760093688965
    7. '  ' → logprob: -6.309760093688965
    8. ' #' → logprob: -6.559760093688965
    9. ',' → logprob: -6.934760093688965
    10. 's' → logprob: -7.309760093688965

Token 126: ':
' (ID: 734)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.769156813621521
    2. ' le' → logprob: -1.894156813621521
    3. ' on' → logprob: -2.3941569328308105
    4. ' chaque' → logprob: -2.7691569328308105
    5. ' l' → logprob: -3.0191569328308105
    6. 'le' → logprob: -3.5191569328308105
    7. ' les' → logprob: -3.8941569328308105
    8. '#' → logprob: -4.0191569328308105
    9. ' pour' → logprob: -4.1441569328308105
    10. 'l' → logprob: -4.1441569328308105

Token 127: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.007006624713540077
    2. ' #' → logprob: -5.507006645202637
    3. '#
' → logprob: -6.632006645202637
    4. '\n' → logprob: -8.132006645202637
    5. ' 
' → logprob: -8.382006645202637
    6. '\' → logprob: -8.507006645202637
    7. ' Le' → logprob: -9.132006645202637
    8. 'On' → logprob: -9.132006645202637
    9. 'Le' → logprob: -9.257006645202637
    10. ' #
' → logprob: -9.507006645202637

Token 128: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0432593896985054
    2. ' #' → logprob: -4.668259620666504
    3. ' Le' → logprob: -5.168259620666504
    4. 'On' → logprob: -5.293259620666504
    5. 'Le' → logprob: -6.168259620666504
    6. 'La' → logprob: -6.293259620666504
    7. 'from' → logprob: -6.293259620666504
    8. ' 
' → logprob: -6.293259620666504
    9. ' La' → logprob: -6.418259620666504
    10. 'Pour' → logprob: -6.418259620666504

Token 129: ' Les' (ID: 7029)
  Prédit: 'On'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'On' → logprob: -1.898339033126831
    2. ' Chaque' → logprob: -2.023339033126831
    3. 'Chaque' → logprob: -2.273339033126831
    4. ' Le' → logprob: -2.273339033126831
    5. ' On' → logprob: -2.398339033126831
    6. 'La' → logprob: -2.648339033126831
    7. ' La' → logprob: -2.648339033126831
    8. 'Le' → logprob: -3.023339033126831
    9. 'Les' → logprob: -3.773339033126831
    10. 'Une' → logprob: -3.898339033126831

Token 130: ' tam' (ID: 10663)
  Prédit: ' couleurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couleurs' → logprob: -1.4085582494735718
    2. 'tam' → logprob: -1.5335582494735718
    3. ' cases' → logprob: -1.7835582494735718
    4. 'cases' → logprob: -2.2835583686828613
    5. 't' → logprob: -2.7835583686828613
    6. ' tam' → logprob: -3.0335583686828613
    7. 'gr' → logprob: -3.4085583686828613
    8. ' lignes' → logprob: -4.033558368682861
    9. ' ' → logprob: -4.533558368682861
    10. ' rectangles' → logprob: -4.971058368682861

Token 131: 'pons' (ID: 2987)
  Prédit: 'pons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pons' → logprob: -0.07381777465343475
    2. 'pon' → logprob: -2.948817729949951
    3. 'p' → logprob: -4.198817729949951
    4. '_' → logprob: -7.698817729949951
    5. '\' → logprob: -8.01131820678711
    6. 'poons' → logprob: -8.07381820678711
    7. '-' → logprob: -8.13631820678711
    8. '#' → logprob: -8.19881820678711
    9. 'ps' → logprob: -9.07381820678711
    10. '	' → logprob: -9.07381820678711

Token 132: ' ont' (ID: 4930)
  Prédit: ' peuvent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' peuvent' → logprob: -1.2181599140167236
    2. ' ' → logprob: -1.3431599140167236
    3. ' rect' → logprob: -2.0931599140167236
    4. ' sont' → logprob: -2.5931599140167236
    5. ' ' → logprob: -2.8431599140167236
    6. ' #' → logprob: -3.2181599140167236
    7. ' rectangles' → logprob: -3.3431599140167236
    8. '#' → logprob: -3.9681599140167236
    9. 's' → logprob: -4.3431596755981445
    10. ' possibles' → logprob: -4.4681596755981445

Token 133: ' un' (ID: 537)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.6876130104064941
    2. 'une' → logprob: -1.8126130104064941
    3. ' une' → logprob: -1.8126130104064941
    4. 't' → logprob: -2.187613010406494
    5. ' toujours' → logprob: -2.687613010406494
    6. 'des' → logprob: -2.812613010406494
    7. 'n' → logprob: -3.312613010406494
    8. 'un' → logprob: -3.437613010406494
    9. ' un' → logprob: -3.687613010406494
    10. ' la' → logprob: -3.937613010406494

Token 134: ' nombre' (ID: 9733)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.5602504014968872
    2. 'rectangle' → logprob: -2.0602502822875977
    3. ' rectangle' → logprob: -2.1852502822875977
    4. 'nombre' → logprob: -2.4352502822875977
    5. 'rect' → logprob: -2.5602502822875977
    6. ' nombre' → logprob: -3.0602502822875977
    7. 't' → logprob: -3.1852502822875977
    8. 'es' → logprob: -3.8102502822875977
    9. 'large' → logprob: -3.9352502822875977
    10. ' côté' → logprob: -4.185250282287598

Token 135: ' limité' (ID: 135767)
  Prédit: ' maximal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximal' → logprob: -0.3424694836139679
    2. ' limité' → logprob: -2.3424694538116455
    3. ' quelcon' → logprob: -3.3424694538116455
    4. ' ' → logprob: -3.4674694538116455
    5. ' maximum' → logprob: -3.4674694538116455
    6. ' minimal' → logprob: -4.217469692230225
    7. 's' → logprob: -4.342469692230225
    8. ' rest' → logprob: -4.467469692230225
    9. ' ind' → logprob: -4.592469692230225
    10. ' ill' → logprob: -4.717469692230225

Token 136: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5709776282310486
    2. ' d' → logprob: -1.4459776878356934
    3. ' ' → logprob: -2.0709776878356934
    4. ' maximal' → logprob: -3.0709776878356934
    5. ' limité' → logprob: -4.945977687835693
    6. 'd' → logprob: -5.445977687835693
    7. ' maximum' → logprob: -5.570977687835693
    8. ' rest' → logprob: -5.695977687835693
    9. 'de' → logprob: -6.070977687835693
    10. ' total' → logprob: -6.695977687835693

Token 137: ' tailles' (ID: 169460)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cases' → logprob: -0.26390376687049866
    2. ' cases' → logprob: -2.263903856277466
    3. ' couleurs' → logprob: -3.638903856277466
    4. 'positions' → logprob: -3.638903856277466
    5. 'cou' → logprob: -4.888903617858887
    6. 'car' → logprob: -4.888903617858887
    7. ' ' → logprob: -5.013903617858887
    8. 'c' → logprob: -5.263903617858887
    9. ' lignes' → logprob: -5.263903617858887
    10. ' formes' → logprob: -5.263903617858887

Token 138: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.1721324920654297
    2. ',' → logprob: -1.5471324920654297
    3. '.' → logprob: -1.7971324920654297
    4. ' ' → logprob: -2.2971324920654297
    5. ' possibles' → logprob: -2.4221324920654297
    6. ' possible' → logprob: -2.6721324920654297
    7. ' allant' → logprob: -5.04713249206543
    8. 's' → logprob: -5.29713249206543
    9. '(' → logprob: -5.42213249206543
    10. 'possible' → logprob: -5.42213249206543

Token 139: 'max' (ID: 3228)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.41068318486213684
    2. ' ' → logprob: -1.4106831550598145
    3. ' de' → logprob: -3.7856831550598145
    4. '4' → logprob: -3.9106831550598145
    5. '(' → logprob: -4.5356831550598145
    6. '[' → logprob: -5.1606831550598145
    7. ' (' → logprob: -5.1606831550598145
    8. '5' → logprob: -5.5356831550598145
    9. '9' → logprob: -5.7856831550598145
    10. '16' → logprob: -6.0356831550598145

Token 140: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7863137722015381
    2. ' de' → logprob: -1.036313772201538
    3. ' =' → logprob: -2.786313772201538
    4. '=' → logprob: -3.036313772201538
    5. '_' → logprob: -3.661313772201538
    6. ' _' → logprob: -4.161314010620117
    7. 'e' → logprob: -4.786314010620117
    8. ')' → logprob: -5.161314010620117
    9. '4' → logprob: -5.411314010620117
    10. ' d' → logprob: -5.536314010620117

Token 141: '16' (ID: 1125)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.12766136229038239
    2. ' ' → logprob: -2.6276614665985107
    3. '=' → logprob: -3.3776614665985107
    4. '16' → logprob: -4.627661228179932
    5. ' =' → logprob: -6.627661228179932
    6. '1' → logprob: -7.252661228179932
    7. ' de' → logprob: -7.877661228179932
    8. ':' → logprob: -8.75266170501709
    9. '="' → logprob: -8.87766170501709
    10. 'de' → logprob: -9.31516170501709

Token 142: ' avec' (ID: 3937)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26313337683677673
    2. ' )' → logprob: -1.6381334066390991
    3. ',' → logprob: -4.513133525848389
    4. ').' → logprob: -5.263133525848389
    5. '),' → logprob: -5.263133525848389
    6. ' ),' → logprob: -5.513133525848389
    7. ' ,' → logprob: -5.763133525848389
    8. 'x' → logprob: -6.138133525848389
    9. ' ).' → logprob: -6.638133525848389
    10. ' ' → logprob: -6.888133525848389

Token 143: ' h' (ID: 312)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.38479816913604736
    2. ' ' → logprob: -2.134798049926758
    3. 'les' → logprob: -2.884798049926758
    4. 'la' → logprob: -3.634798049926758
    5. ' les' → logprob: -3.884798049926758
    6. ' la' → logprob: -3.884798049926758
    7. ' des' → logprob: -4.134798049926758
    8. 'l' → logprob: -4.884798049926758
    9. ' une' → logprob: -5.009798049926758
    10. 'une' → logprob: -5.009798049926758

Token 144: ',w' (ID: 49598)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1625549793243408
    2. 'e' → logprob: -1.5375549793243408
    3. ')' → logprob: -2.162554979324341
    4. '>' → logprob: -2.287554979324341
    5. 'a' → logprob: -2.412554979324341
    6. '_' → logprob: -3.662554979324341
    7. ',' → logprob: -3.912554979324341
    8. 'i' → logprob: -4.162554740905762
    9. 't' → logprob: -4.287554740905762
    10. '4' → logprob: -4.412554740905762

Token 145: ' ≤' (ID: 72554)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.355600506067276
    2. '=' → logprob: -1.3556004762649536
    3. ' =' → logprob: -4.355600357055664
    4. ' ' → logprob: -5.355600357055664
    5. '<=' → logprob: -5.355600357055664
    6. ',' → logprob: -5.480600357055664
    7. ' )' → logprob: -5.980600357055664
    8. ' <=' → logprob: -6.355600357055664
    9. '>' → logprob: -6.480600357055664
    10. '),' → logprob: -6.730600357055664

Token 146: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.020555900409817696
    2. ' ' → logprob: -3.8955559730529785
    3. ' ' → logprob: -12.27055549621582
    4. '16' → logprob: -12.77055549621582
    5. '1' → logprob: -13.70805549621582
    6. '5' → logprob: -14.20805549621582
    7. '3' → logprob: -14.64555549621582
    8. '  ' → logprob: -14.64555549621582
    9. '   ' → logprob: -14.70805549621582
    10. '"' → logprob: -14.77055549621582

Token 147: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.00014120421838015318
    2. ' ' → logprob: -8.875141143798828
    3. '16' → logprob: -14.625141143798828
    4. '5' → logprob: -15.312641143798828
    5. '3' → logprob: -15.687641143798828
    6. '44' → logprob: -16.000141143798828
    7. '1' → logprob: -16.000141143798828
    8. ')' → logprob: -16.750141143798828
    9. '14' → logprob: -16.875141143798828
    10. '2' → logprob: -17.000141143798828

Token 148: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00676463358104229
    2. ').' → logprob: -5.5067644119262695
    3. ' )' → logprob: -6.1317644119262695
    4. ',' → logprob: -8.50676441192627
    5. '),' → logprob: -8.88176441192627
    6. '#' → logprob: -9.88176441192627
    7. ')
' → logprob: -10.38176441192627
    8. '.' → logprob: -10.38176441192627
    9. ')#' → logprob: -11.25676441192627
    10. ')

' → logprob: -12.25676441192627

Token 149: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.23566541075706482
    2. ',
' → logprob: -2.4856653213500977
    3. '#
' → logprob: -2.8606653213500977
    4. ',' → logprob: -3.3606653213500977
    5. 's' → logprob: -4.235665321350098
    6. '.' → logprob: -4.610665321350098
    7. '.
' → logprob: -6.360665321350098
    8. '
' → logprob: -6.860665321350098
    9. ' 
' → logprob: -7.110665321350098
    10. '  
' → logprob: -7.110665321350098

Token 150: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.024112366139888763
    2. '#
' → logprob: -3.8991124629974365
    3. '\' → logprob: -7.149112224578857
    4. ',' → logprob: -7.149112224578857
    5. ' #' → logprob: -7.649112224578857
    6. ',
' → logprob: -7.899112224578857
    7. '\n' → logprob: -8.774112701416016
    8. 'import' → logprob: -8.899112701416016
    9. ' ' → logprob: -9.024112701416016
    10. '[
' → logprob: -9.149112701416016

Token 151: ' La' (ID: 3038)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7810454964637756
    2. ' On' → logprob: -2.031045436859131
    3. 'On' → logprob: -2.406045436859131
    4. ' Chaque' → logprob: -3.031045436859131
    5. ' #' → logprob: -3.156045436859131
    6. ' Le' → logprob: -3.281045436859131
    7. ' Il' → logprob: -3.406045436859131
    8. '-' → logprob: -4.031045436859131
    9. ' Pour' → logprob: -4.156045436859131
    10. 'Pour' → logprob: -4.281045436859131

Token 152: ' grille' (ID: 99153)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 153: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.5768797397613525
    2. ' ' → logprob: -1.0768797397613525
    3. ' de' → logprob: -3.5768797397613525
    4. ' peut' → logprob: -3.5768797397613525
    5. ' a' → logprob: -4.201879501342773
    6. ' ' → logprob: -5.451879501342773
    7. '4' → logprob: -6.076879501342773
    8. ',' → logprob: -6.076879501342773
    9. ' ,' → logprob: -6.201879501342773
    10. ' n' → logprob: -6.326879501342773

Token 154: ' petite' (ID: 28119)
  Prédit: ' petite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' petite' → logprob: -0.2624596953392029
    2. ' ' → logprob: -2.3874597549438477
    3. ' de' → logprob: -2.8874597549438477
    4. '4' → logprob: -3.7624597549438477
    5. ' petit' → logprob: -4.137459754943848
    6. ' small' → logprob: -4.262459754943848
    7. ' très' → logprob: -5.137459754943848
    8. ' assez' → logprob: -5.137459754943848
    9. 'pet' → logprob: -5.637459754943848
    10. 'de' → logprob: -6.262459754943848

Token 155: ' (' (ID: 350)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.44616323709487915
    2. ',' → logprob: -1.5711631774902344
    3. '.' → logprob: -2.8211631774902344
    4. ',
' → logprob: -2.8211631774902344
    5. '#
' → logprob: -4.071163177490234
    6. '
' → logprob: -6.071163177490234
    7. '\' → logprob: -6.071163177490234
    8. ' (' → logprob: -6.071163177490234
    9. 'import' → logprob: -6.446163177490234
    10. '.
' → logprob: -6.446163177490234

Token 156: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0490105040371418
    2. ' ' → logprob: -3.0490105152130127
    3. '16' → logprob: -8.174010276794434
    4. ' ' → logprob: -9.674010276794434
    5. '5' → logprob: -11.299010276794434
    6. '   ' → logprob: -11.424010276794434
    7. ' )' → logprob: -11.549010276794434
    8. ')' → logprob: -11.549010276794434
    9. '1' → logprob: -11.924010276794434
    10. ' ,' → logprob: -12.486510276794434

Token 157: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.22790826857089996
    2. ')' → logprob: -2.2279083728790283
    3. '*' → logprob: -2.9779083728790283
    4. ' x' → logprob: -3.8529083728790283
    5. '4' → logprob: -4.352908134460449
    6. ',' → logprob: -5.852908134460449
    7. '0' → logprob: -6.102908134460449
    8. ' *' → logprob: -6.602908134460449
    9. ' ' → logprob: -6.977908134460449
    10. '#' → logprob: -7.227908134460449

Token 158: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.00023154958034865558
    2. ' ' → logprob: -8.375231742858887
    3. ')' → logprob: -14.500231742858887
    4. ' ' → logprob: -16.25023078918457
    5. '' → logprob: -16.37523078918457
    6. '3' → logprob: -17.06273078918457
    7. ' )' → logprob: -17.31273078918457
    8. ',' → logprob: -17.56273078918457
    9. '```' → logprob: -17.56273078918457
    10. '5' → logprob: -17.81273078918457

Token 159: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5142307281494141
    2. ').' → logprob: -1.014230728149414
    3. ')
' → logprob: -4.389230728149414
    4. '),' → logprob: -4.639230728149414
    5. ' )' → logprob: -5.014230728149414
    6. ').
' → logprob: -5.264230728149414
    7. ' ).' → logprob: -6.139230728149414
    8. ',' → logprob: -7.014230728149414
    9. '#' → logprob: -7.514230728149414
    10. ' )
' → logprob: -7.889230728149414

Token 160: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.574917733669281
    2. ' 
' → logprob: -1.9499177932739258
    3. '\' → logprob: -2.074917793273926
    4. '
' → logprob: -2.324917793273926
    5. ' ' → logprob: -4.449917793273926
    6. 'def' → logprob: -4.574917793273926
    7. 'import' → logprob: -4.699917793273926
    8. ',' → logprob: -4.699917793273926
    9. '\n' → logprob: -4.824917793273926
    10. '  
' → logprob: -5.199917793273926

Token 161: ' 
' (ID: 793)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.201967254281044
    2. ' ' → logprob: -2.451967239379883
    3. ' 
' → logprob: -3.326967239379883
    4. '\' → logprob: -3.951967239379883
    5. 'def' → logprob: -4.076967239379883
    6. 'import' → logprob: -5.076967239379883
    7. '
' → logprob: -5.201967239379883
    8. ',' → logprob: -6.076967239379883
    9. 'n' → logprob: -6.201967239379883
    10. '[' → logprob: -6.701967239379883

Token 162: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.48335257172584534
    2. 'def' → logprob: -1.108352541923523
    3. 'import' → logprob: -3.1083526611328125
    4. 'from' → logprob: -4.9833526611328125
    5. '\' → logprob: -8.108352661132812
    6. '#
' → logprob: -8.108352661132812
    7. 'n' → logprob: -8.608352661132812
    8. ' 
' → logprob: -8.733352661132812
    9. 'd' → logprob: -8.858352661132812
    10. 'A' → logprob: -9.358352661132812

Token 163: ' Cette' (ID: 27383)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.614980161190033
    2. 'def' → logprob: -1.3649802207946777
    3. '#' → logprob: -1.7399802207946777
    4. 'from' → logprob: -4.489980220794678
    5. '\' → logprob: -4.614980220794678
    6. ' 
' → logprob: -5.989980220794678
    7. 'n' → logprob: -6.239980220794678
    8. '```' → logprob: -7.239980220794678
    9. '\n' → logprob: -7.364980220794678
    10. 'd' → logprob: -8.23997974395752

Token 164: ' petite' (ID: 28119)
  Prédit: ' solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solution' → logprob: -0.5980600714683533
    2. ' approche' → logprob: -1.223060131072998
    3. ' #' → logprob: -2.598060131072998
    4. '#' → logprob: -3.348060131072998
    5. ' méthode' → logprob: -4.723060131072998
    6. ' ' → logprob: -5.098060131072998
    7. ' espace' → logprob: -5.723060131072998
    8. 'import' → logprob: -5.848060131072998
    9. 'solution' → logprob: -5.848060131072998
    10. ' code' → logprob: -6.098060131072998

Token 165: ' taille' (ID: 41644)
  Prédit: ' taille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' taille' → logprob: -0.3104380965232849
    2. ' grille' → logprob: -1.6854381561279297
    3. 'tail' → logprob: -3.0604381561279297
    4. 'gr' → logprob: -4.43543815612793
    5. ' partie' → logprob: -5.31043815612793
    6. 'impl' → logprob: -5.93543815612793
    7. ' portion' → logprob: -5.93543815612793
    8. ' résolution' → logprob: -6.43543815612793
    9. ' étape' → logprob: -6.93543815612793
    10. ' grid' → logprob: -7.31043815612793

Token 166: ' sugg' (ID: 6014)
  Prédit: ' permet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' permet' → logprob: -0.09226664900779724
    2. ' facilite' → logprob: -3.46726655960083
    3. ' ' → logprob: -3.59226655960083
    4. ' de' → logprob: -5.34226655960083
    5. ',' → logprob: -5.46726655960083
    6. ' ,' → logprob: -5.59226655960083
    7. ' du' → logprob: -5.59226655960083
    8. ' nous' → logprob: -5.84226655960083
    9. ' ' → logprob: -5.96726655960083
    10. ' n' → logprob: -6.59226655960083

Token 167: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.006069221533834934
    2. 'è' → logprob: -5.756069183349609
    3. 'ire' → logprob: -7.256069183349609
    4. 'ére' → logprob: -8.13106918334961
    5. 'èr' → logprob: -8.13106918334961
    6. 'érer' → logprob: -8.75606918334961
    7. 'ere' → logprob: -8.75606918334961
    8. 'er' → logprob: -8.75606918334961
    9. 'g' → logprob: -9.25606918334961
    10. 'èrent' → logprob: -9.38106918334961

Token 168: ' une' (ID: 2463)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.307186484336853
    2. ' une' → logprob: -1.432186484336853
    3. 'd' → logprob: -4.182186603546143
    4. ' de' → logprob: -5.557186603546143
    5. 'une' → logprob: -5.807186603546143
    6. ' un' → logprob: -6.432186603546143
    7. ' l' → logprob: -7.057186603546143
    8. ' la' → logprob: -8.682186126708984
    9. ' que' → logprob: -8.807186126708984
    10. ' ' → logprob: -8.932186126708984

Token 169: ' recherche' (ID: 24975)
  Prédit: ' recherche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' recherche' → logprob: -0.8491963744163513
    2. ' programmation' → logprob: -0.9741963744163513
    3. ' approche' → logprob: -2.474196434020996
    4. 'programm' → logprob: -3.974196434020996
    5. 'mé' → logprob: -4.224196434020996
    6. 'appro' → logprob: -4.724196434020996
    7. 're' → logprob: -4.849196434020996
    8. 'd' → logprob: -4.974196434020996
    9. 'p' → logprob: -4.974196434020996
    10. ' solution' → logprob: -5.099196434020996

Token 170: ' exhaustive' (ID: 115863)
  Prédit: ' exhaustive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exhaustive' → logprob: -0.07194589823484421
    2. 'ex' → logprob: -3.696945905685425
    3. ' exhaust' → logprob: -4.071945667266846
    4. ' approfond' → logprob: -4.571945667266846
    5. ' brute' → logprob: -5.446945667266846
    6. 'dfs' → logprob: -5.946945667266846
    7. ' complète' → logprob: -6.321945667266846
    8. ' ' → logprob: -6.821945667266846
    9. ' en' → logprob: -6.821945667266846
    10. ' DFS' → logprob: -7.321945667266846

Token 171: ' avec' (ID: 3937)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8357328772544861
    2. '.' → logprob: -0.8357328772544861
    3. ' avec' → logprob: -3.585732936859131
    4. ' ' → logprob: -3.835732936859131
    5. ' ,' → logprob: -3.960732936859131
    6. ' .' → logprob: -4.335732936859131
    7. ' ' → logprob: -4.835732936859131
    8. ' (' → logprob: -4.960732936859131
    9. ':' → logprob: -5.335732936859131
    10. ' en' → logprob: -5.710732936859131

Token 172: ' mé' (ID: 11291)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'memo' → logprob: -1.0774106979370117
    2. ' programmation' → logprob: -1.0774106979370117
    3. ' back' → logprob: -1.7024106979370117
    4. ' memo' → logprob: -2.9524106979370117
    5. 'back' → logprob: -3.4524106979370117
    6. ' une' → logprob: -4.577410697937012
    7. 'programm' → logprob: -4.827410697937012
    8. ' mém' → logprob: -4.827410697937012
    9. 'mé' → logprob: -5.202410697937012
    10. ' optimisation' → logprob: -5.702410697937012

Token 173: 'mo' (ID: 3690)
  Prédit: 'mo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mo' → logprob: -0.7654308676719666
    2. 'mor' → logprob: -1.0154309272766113
    3. 'm' → logprob: -1.7654309272766113
    4. 'moire' → logprob: -6.640430927276611
    5. 'mos' → logprob: -10.015430450439453
    6. 'мо' → logprob: -10.140430450439453
    7. ']' → logprob: -11.140430450439453
    8. 'moor' → logprob: -11.390430450439453
    9. '"' → logprob: -11.765430450439453
    10. 'mog' → logprob: -11.765430450439453

Token 174: 'ïs' (ID: 96230)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.006360658910125494
    2. 'ri' → logprob: -5.7563605308532715
    3. 'ir' → logprob: -6.5063605308532715
    4. 'ry' → logprob: -7.6313605308532715
    5. 'ris' → logprob: -7.6313605308532715
    6. 'isation' → logprob: -8.75636100769043
    7. 'ization' → logprob: -8.75636100769043
    8. 'rise' → logprob: -8.88136100769043
    9. '```' → logprob: -10.38136100769043
    10. '-r' → logprob: -10.38136100769043

Token 175: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.00023739055905025452
    2. '#' → logprob: -9.250237464904785
    3. 'e' → logprob: -9.500237464904785
    4. 'er' → logprob: -10.875237464904785
    5. 'tion' → logprob: -12.000237464904785
    6. 'a' → logprob: -12.000237464904785
    7. 's' → logprob: -12.125237464904785
    8. 'at' → logprob: -12.625237464904785
    9. '##' → logprob: -13.000237464904785
    10. 'ion' → logprob: -13.000237464904785

Token 176: ' :
' (ID: 10039)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2611135244369507
    2. ',' → logprob: -2.5111136436462402
    3. '#' → logprob: -2.6361136436462402
    4. ' ' → logprob: -3.3861136436462402
    5. ':' → logprob: -4.01111364364624
    6. '\' → logprob: -5.01111364364624
    7. '_' → logprob: -5.38611364364624
    8. 'import' → logprob: -5.63611364364624
    9. 'def' → logprob: -6.01111364364624
    10. '
' → logprob: -6.51111364364624

Token 177: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6703094244003296
    2. 'dp' → logprob: -1.0453094244003296
    3. 'import' → logprob: -3.295309543609619
    4. 'd' → logprob: -3.670309543609619
    5. ' dp' → logprob: -3.920309543609619
    6. 'from' → logprob: -3.920309543609619
    7. '#' → logprob: -4.420309543609619
    8. ' def' → logprob: -4.795309543609619
    9. ' from' → logprob: -5.795309543609619
    10. ' 
' → logprob: -6.295309543609619

Token 178: ' -' (ID: 533)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6391476988792419
    2. 'def' → logprob: -1.3891477584838867
    3. 'dp' → logprob: -2.2641477584838867
    4. 'import' → logprob: -2.5141477584838867
    5. 'visited' → logprob: -3.6391477584838867
    6. '#' → logprob: -5.264147758483887
    7. 'memo' → logprob: -5.514147758483887
    8. ' from' → logprob: -7.139147758483887
    9. ' visited' → logprob: -8.264147758483887
    10. 'cache' → logprob: -8.389147758483887

Token 179: ' On' (ID: 2160)
  Prédit: 'On'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'On' → logprob: -1.6585413217544556
    2. 'def' → logprob: -1.7835413217544556
    3. 'import' → logprob: -2.033541202545166
    4. ' on' → logprob: -2.658541202545166
    5. 'É' → logprob: -2.783541202545166
    6. 'from' → logprob: -2.908541202545166
    7. ' On' → logprob: -3.158541202545166
    8. ' É' → logprob: -3.783541202545166
    9. 'dp' → logprob: -3.908541202545166
    10. '#' → logprob: -4.033541202545166

Token 180: ' peut' (ID: 9216)
  Prédit: ' peut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.3942513167858124
    2. ' pourra' → logprob: -3.0192513465881348
    3. ' va' → logprob: -3.1442513465881348
    4. '_' → logprob: -3.2692513465881348
    5. ' peux' → logprob: -3.3942513465881348
    6. ' pourrait' → logprob: -3.6442513465881348
    7. ' ' → logprob: -3.7692513465881348
    8. ' #' → logprob: -4.019251346588135
    9. '#' → logprob: -4.519251346588135
    10. ' a' → logprob: -4.644251346588135

Token 181: ' représ' (ID: 31534)
  Prédit: ' coder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coder' → logprob: -0.9392127394676208
    2. ' représ' → logprob: -1.6892127990722656
    3. ' utiliser' → logprob: -2.5642127990722656
    4. 'coder' → logprob: -2.8142127990722656
    5. 'repr' → logprob: -2.9392127990722656
    6. 're' → logprob: -3.1892127990722656
    7. ' essayer' → logprob: -3.9392127990722656
    8. ' stock' → logprob: -4.064212799072266
    9. 'memo' → logprob: -4.189212799072266
    10. ' explorer' → logprob: -4.439212799072266

Token 182: 'enter' (ID: 3547)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5973497033119202
    2. 'enter' → logprob: -0.8473497033119202
    3. 'ent' → logprob: -4.847349643707275
    4. 'ente' → logprob: -6.347349643707275
    5. 'er' → logprob: -6.347349643707275
    6. 'a' → logprob: -6.472349643707275
    7. 'u' → logprob: -6.472349643707275
    8. ' e' → logprob: -6.972349643707275
    9. '=' → logprob: -7.472349643707275
    10. 'é' → logprob: -7.597349643707275

Token 183: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.06535503268241882
    2. ' ' → logprob: -3.565355062484741
    3. 'l' → logprob: -4.315354824066162
    4. ' la' → logprob: -4.440354824066162
    5. ' chaque' → logprob: -5.190354824066162
    6. ' ' → logprob: -6.190354824066162
    7. 'la' → logprob: -6.940354824066162
    8. ' les' → logprob: -8.19035530090332
    9. ' le' → logprob: -8.19035530090332
    10. 'le' → logprob: -8.31535530090332

Token 184: ''état' (ID: 116357)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.13902682065963745
    2. 'e' → logprob: -2.1390268802642822
    3. ''' → logprob: -5.014026641845703
    4. ''état' → logprob: -5.889026641845703
    5. 'es' → logprob: -6.889026641845703
    6. ''a' → logprob: -7.139026641845703
    7. ''espace' → logprob: -8.139026641845703
    8. ''é' → logprob: -8.889026641845703
    9. ''ensemble' → logprob: -9.139026641845703
    10. ''e' → logprob: -9.139026641845703

Token 185: ' actuel' (ID: 113646)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1828976422548294
    2. ' de' → logprob: -2.3078975677490234
    3. '_' → logprob: -3.3078975677490234
    4. ' d' → logprob: -4.057897567749023
    5. 's' → logprob: -5.557897567749023
    6. ' des' → logprob: -6.182897567749023
    7. '  ' → logprob: -6.182897567749023
    8. ' par' → logprob: -6.432897567749023
    9. ' du' → logprob: -7.182897567749023
    10. ' ' → logprob: -7.182897567749023

Token 186: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6050370931625366
    2. ' de' → logprob: -0.9800370931625366
    3. '_' → logprob: -2.980037212371826
    4. ' d' → logprob: -4.855037212371826
    5. ' du' → logprob: -4.855037212371826
    6. ' des' → logprob: -5.105037212371826
    7. ' par' → logprob: -6.480037212371826
    8. ',' → logprob: -6.855037212371826
    9. '  ' → logprob: -7.480037212371826
    10. 'de' → logprob: -7.480037212371826

Token 187: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.029789837077260017
    2. 'la' → logprob: -4.154789924621582
    3. ' l' → logprob: -4.904789924621582
    4. 'l' → logprob: -5.154789924621582
    5. ' ' → logprob: -8.154789924621582
    6. ' ' → logprob: -9.654789924621582
    7. 'a' → logprob: -9.904789924621582
    8. ' chaque' → logprob: -10.529789924621582
    9. 'c' → logprob: -11.279789924621582
    10. ' a' → logprob: -12.154789924621582

Token 188: ' grille' (ID: 99153)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.0781342163681984
    2. ' grille' → logprob: -2.703134298324585
    3. 'color' → logprob: -6.078134059906006
    4. 'cou' → logprob: -6.203134059906006
    5. ' gr' → logprob: -6.828134059906006
    6. 'case' → logprob: -7.453134059906006
    7. 'grid' → logprob: -7.578134059906006
    8. ' couleur' → logprob: -7.828134059906006
    9. 'g' → logprob: -8.078134536743164
    10. '#' → logprob: -8.203134536743164

Token 189: ' avec' (ID: 3937)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6261677742004395
    2. ' ' → logprob: -1.3761677742004395
    3. ',' → logprob: -2.6261677742004395
    4. ' par' → logprob: -3.0011677742004395
    5. ' en' → logprob: -4.1261677742004395
    6. '.' → logprob: -4.5011677742004395
    7. ' comme' → logprob: -4.5011677742004395
    8. ' _' → logprob: -4.6261677742004395
    9. ' ,' → logprob: -4.7511677742004395
    10. ' sous' → logprob: -5.0011677742004395

Token 190: ' (' (ID: 350)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.8277716636657715
    2. ' ' → logprob: -1.5777716636657715
    3. '16' → logprob: -1.5777716636657715
    4. 'une' → logprob: -2.9527716636657715
    5. ' un' → logprob: -3.2027716636657715
    6. '4' → logprob: -3.5777716636657715
    7. 'un' → logprob: -4.9527716636657715
    8. ''une' → logprob: -5.0777716636657715
    9. ' des' → logprob: -5.3277716636657715
    10. 'a' → logprob: -5.7027716636657715

Token 191: '4' (ID: 19)
  Prédit: '16'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '16' → logprob: -0.6988053321838379
    2. '4' → logprob: -1.573805332183838
    3. ''' → logprob: -2.073805332183838
    4. ' ' → logprob: -2.698805332183838
    5. 'tuple' → logprob: -3.573805332183838
    6. '"' → logprob: -4.448805332183838
    7. ' tuple' → logprob: -4.823805332183838
    8. '3' → logprob: -5.448805332183838
    9. 'len' → logprob: -5.573805332183838
    10. ''\' → logprob: -5.698805332183838

Token 192: 'x' (ID: 87)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4189473092556
    2. ',' → logprob: -1.4189473390579224
    3. ' *' → logprob: -2.668947219848633
    4. 'x' → logprob: -4.293947219848633
    5. ' x' → logprob: -5.168947219848633
    6. ' ,' → logprob: -5.293947219848633
    7. ')' → logprob: -5.668947219848633
    8. ' ' → logprob: -7.168947219848633
    9. '**' → logprob: -7.793947219848633
    10. '0' → logprob: -8.543947219848633

Token 193: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -8.780830830801278e-05
    2. ' ' → logprob: -9.37508773803711
    3. '16' → logprob: -13.00008773803711
    4. ')' → logprob: -15.25008773803711
    5. '1' → logprob: -15.62508773803711
    6. '3' → logprob: -16.25008773803711
    7. '5' → logprob: -16.50008773803711
    8. ' ' → logprob: -17.12508773803711
    9. '```' → logprob: -17.62508773803711
    10. '' → logprob: -17.62508773803711

Token 194: ')=' (ID: 25987)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3725672960281372
    2. '*' → logprob: -2.1225671768188477
    3. ' *' → logprob: -2.3725671768188477
    4. ',' → logprob: -2.7475671768188477
    5. '=' → logprob: -4.372567176818848
    6. ' )' → logprob: -5.122567176818848
    7. ')=' → logprob: -5.247567176818848
    8. ' =' → logprob: -5.622567176818848
    9. ' ' → logprob: -6.372567176818848
    10. ',)' → logprob: -7.372567176818848

Token 195: '16' (ID: 1125)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.607345461845398
    2. '16' → logprob: -0.857345461845398
    3. '48' → logprob: -4.3573455810546875
    4. '32' → logprob: -5.4823455810546875
    5. ' '' → logprob: -5.7323455810546875
    6. '12' → logprob: -5.7323455810546875
    7. '3' → logprob: -6.2323455810546875
    8. ''' → logprob: -6.2323455810546875
    9. '"' → logprob: -7.6073455810546875
    10. '4' → logprob: -7.8573455810546875

Token 196: ' cases' (ID: 7911)
  Prédit: ' bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bits' → logprob: -0.1571168750524521
    2. ' ' → logprob: -2.9071168899536133
    3. 'bits' → logprob: -3.0321168899536133
    4. 'b' → logprob: -4.657116889953613
    5. '_' → logprob: -5.032116889953613
    6. ',' → logprob: -5.407116889953613
    7. ' _' → logprob: -5.657116889953613
    8. ' bytes' → logprob: -6.032116889953613
    9. ' int' → logprob: -6.282116889953613
    10. ' ' → logprob: -6.407116889953613

Token 197: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24800556898117065
    2. ' ' → logprob: -2.6230056285858154
    3. ' ,' → logprob: -2.6230056285858154
    4. '_' → logprob: -3.3730056285858154
    5. '.' → logprob: -4.123005390167236
    6. ')' → logprob: -5.498005390167236
    7. ' _' → logprob: -5.873005390167236
    8. ' de' → logprob: -6.623005390167236
    9. '[]' → logprob: -6.998005390167236
    10. ' (' → logprob: -7.060505390167236

Token 198: '#' (ID: 2)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.6409158706665039
    2. ',' → logprob: -1.765915870666504
    3. '_' → logprob: -2.515915870666504
    4. '#' → logprob: -3.265915870666504
    5. ' ' → logprob: -3.265915870666504
    6. '.' → logprob: -3.390915870666504
    7. '  
' → logprob: -3.640915870666504
    8. '<|end|>' → logprob: -4.140915870666504
    9. ''' → logprob: -4.390915870666504
    10. '[' → logprob: -4.390915870666504

Token 199: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2797670364379883
    2. '\' → logprob: -1.4047670364379883
    3. '[' → logprob: -2.0297670364379883
    4. ' ' → logprob: -2.5297670364379883
    5. ',' → logprob: -2.6547670364379883
    6. '<|end|>' → logprob: -3.6547670364379883
    7. '_' → logprob: -3.9047670364379883
    8. ' 
' → logprob: -4.029767036437988
    9. ''' → logprob: -4.154767036437988
    10. ')' → logprob: -4.279767036437988

Token 200: ' Chaque' (ID: 94758)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7400409579277039
    2. 'On' → logprob: -1.3650410175323486
    3. ' On' → logprob: -2.7400410175323486
    4. 'from' → logprob: -2.8650410175323486
    5. ' on' → logprob: -3.6150410175323486
    6. ' Chaque' → logprob: -3.6150410175323486
    7. 'Chaque' → logprob: -4.2400407791137695
    8. ' from' → logprob: -4.7400407791137695
    9. 'É' → logprob: -4.9900407791137695
    10. ' #' → logprob: -5.2400407791137695

Token 201: ' case' (ID: 1890)
  Prédit: ' case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' case' → logprob: -0.8641815781593323
    2. ' ' → logprob: -1.2391815185546875
    3. '_' → logprob: -1.7391815185546875
    4. ' _' → logprob: -2.6141815185546875
    5. 'case' → logprob: -3.8641815185546875
    6. ' espace' → logprob: -5.4891815185546875
    7. ' space' → logprob: -6.3641815185546875
    8. ' ' → logprob: -6.8641815185546875
    9. ' \' → logprob: -7.2391815185546875
    10. ' token' → logprob: -7.2391815185546875

Token 202: ' peut' (ID: 9216)
  Prédit: ' peut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.34687501192092896
    2. ' can' → logprob: -2.471874952316284
    3. ' ' → logprob: -2.721874952316284
    4. ' a' → logprob: -3.096874952316284
    5. ' est' → logprob: -3.096874952316284
    6. ' ,' → logprob: -4.096875190734863
    7. ',' → logprob: -4.221875190734863
    8. ' soit' → logprob: -5.596875190734863
    9. ' peux' → logprob: -5.971875190734863
    10. ' is' → logprob: -6.346875190734863

Token 203: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.09521608054637909
    2. 'être' → logprob: -3.0952160358428955
    3. ' avoir' → logprob: -3.4702160358428955
    4. ' ' → logprob: -5.470216274261475
    5. ''être' → logprob: -6.095216274261475
    6. ' prendre' → logprob: -6.345216274261475
    7. ' etre' → logprob: -6.595216274261475
    8. 'êt' → logprob: -6.970216274261475
    9. 'avoir' → logprob: -7.095216274261475
    10. ' val' → logprob: -7.720216274261475

Token 204: ' R' (ID: 460)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4334105253219604
    2. ''' → logprob: -2.05841064453125
    3. ' R' → logprob: -2.18341064453125
    4. ' ' → logprob: -2.30841064453125
    5. ' '' → logprob: -2.80841064453125
    6. ' dans' → logprob: -2.80841064453125
    7. ' color' → logprob: -3.05841064453125
    8. 'R' → logprob: -3.30841064453125
    9. ' in' → logprob: -3.43341064453125
    10. ' un' → logprob: -3.68341064453125

Token 205: '/G' (ID: 33222)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18330323696136475
    2. ' ,' → logprob: -2.4333033561706543
    3. ',G' → logprob: -2.5583033561706543
    4. ' G' → logprob: -6.933303356170654
    5. ' ou' → logprob: -7.683303356170654
    6. ' ' → logprob: -8.433302879333496
    7. ',B' → logprob: -8.683302879333496
    8. ',R' → logprob: -8.808302879333496
    9. '/G' → logprob: -10.433302879333496
    10. 'G' → logprob: -10.433302879333496

Token 206: '/B' (ID: 25217)
  Prédit: '/B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/B' → logprob: -0.516258180141449
    2. 'B' → logprob: -1.3912582397460938
    3. ' /' → logprob: -2.7662582397460938
    4. '/' → logprob: -2.7662582397460938
    5. ' B' → logprob: -3.7662582397460938
    6. ',' → logprob: -5.641258239746094
    7. ' ' → logprob: -7.266258239746094
    8. ',B' → logprob: -7.641258239746094
    9. ' ,' → logprob: -8.141258239746094
    10. ',/' → logprob: -9.391258239746094

Token 207: ' ou' (ID: 2031)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9491345286369324
    2. '.' → logprob: -1.0741345882415771
    3. '#' → logprob: -1.9491345882415771
    4. ',
' → logprob: -3.449134588241577
    5. '
' → logprob: -3.949134588241577
    6. '\' → logprob: -4.074134349822998
    7. ' ,' → logprob: -4.074134349822998
    8. ' ' → logprob: -4.449134349822998
    9. ')' → logprob: -5.199134349822998
    10. ' ou' → logprob: -5.699134349822998

Token 208: ' encore' (ID: 14043)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6459978222846985
    2. '_' → logprob: -1.7709977626800537
    3. ' .' → logprob: -2.0209977626800537
    4. ' _' → logprob: -3.1459977626800537
    5. ' un' → logprob: -3.2709977626800537
    6. ' ' → logprob: -3.3959977626800537
    7. ' non' → logprob: -3.6459977626800537
    8. ' None' → logprob: -5.020998001098633
    9. ' vide' → logprob: -5.020998001098633
    10. 'vide' → logprob: -6.145998001098633

Token 209: ' non' (ID: 2893)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5236503481864929
    2. ' non' → logprob: -1.7736504077911377
    3. ' .' → logprob: -1.7736504077911377
    4. ' None' → logprob: -4.148650169372559
    5. '_' → logprob: -4.523650169372559
    6. 'None' → logprob: -5.148650169372559
    7. ' un' → logprob: -5.148650169372559
    8. ' vide' → logprob: -5.148650169372559
    9. ' ' → logprob: -5.273650169372559
    10. ' '' → logprob: -5.523650169372559

Token 210: ' peint' (ID: 56848)
  Prédit: ' pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pe' → logprob: -0.4590986371040344
    2. ' color' → logprob: -1.3340985774993896
    3. ' peint' → logprob: -3.2090985774993896
    4. '_' → logprob: -3.7090985774993896
    5. ' colori' → logprob: -4.209098815917969
    6. 'pe' → logprob: -4.959098815917969
    7. '_color' → logprob: -5.209098815917969
    8. 'color' → logprob: -5.959098815917969
    9. ' colored' → logprob: -6.209098815917969
    10. '_pe' → logprob: -6.959098815917969

Token 211: 'ée' (ID: 2894)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3169765770435333
    2. 'e' → logprob: -1.941976547241211
    3. ',' → logprob: -2.691976547241211
    4. '(e' → logprob: -4.441976547241211
    5. '_' → logprob: -4.566976547241211
    6. ' (' → logprob: -4.691976547241211
    7. 'ée' → logprob: -5.441976547241211
    8. 'é' → logprob: -5.441976547241211
    9. ' e' → logprob: -5.566976547241211
    10. '_e' → logprob: -5.816976547241211

Token 212: ' au' (ID: 2791)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6524244546890259
    2. ',' → logprob: -1.1524244546890259
    3. '_' → logprob: -2.0274243354797363
    4. ' (' → logprob: -4.277424335479736
    5. ' ,' → logprob: -5.152424335479736
    6. '#' → logprob: -5.402424335479736
    7. ' .' → logprob: -6.652424335479736
    8. ',
' → logprob: -6.652424335479736
    9. ' ' → logprob: -6.652424335479736
    10. ' _' → logprob: -7.277424335479736

Token 213: ' cours' (ID: 10138)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.449394166469574
    2. 'cun' → logprob: -2.3243942260742188
    3. 'jourd' → logprob: -2.6993942260742188
    4. 'jour' → logprob: -2.9493942260742188
    5. ' départ' → logprob: -3.4493942260742188
    6. 'n' → logprob: -3.5743942260742188
    7. 'un' → logprob: -3.8243942260742188
    8. 'j' → logprob: -4.824394226074219
    9. '#' → logprob: -5.199394226074219
    10. 'cu' → logprob: -5.324394226074219

Token 214: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.13401156663894653
    2. ' de' → logprob: -2.5090115070343018
    3. '_' → logprob: -3.5090115070343018
    4. 'd' → logprob: -5.009011745452881
    5. ' ' → logprob: -6.259011745452881
    6. ' du' → logprob: -6.634011745452881
    7. ' des' → logprob: -6.884011745452881
    8. '_d' → logprob: -7.384011745452881
    9. '<|end|>' → logprob: -7.509011745452881
    10. ',' → logprob: -7.884011745452881

Token 215: ' la' (ID: 557)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.6294121742248535
    2. ' la' → logprob: -1.2544121742248535
    3. 'l' → logprob: -2.0044121742248535
    4. 'la' → logprob: -3.1294121742248535
    5. '_' → logprob: -6.6294121742248535
    6. ' ' → logprob: -7.1294121742248535
    7. '_l' → logprob: -8.129411697387695
    8. '#' → logprob: -9.129411697387695
    9. 'c' → logprob: -9.254411697387695
    10. ',' → logprob: -9.254411697387695

Token 216: ' recherche' (ID: 24975)
  Prédit: ' process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.5827878713607788
    2. ' processus' → logprob: -1.4577878713607788
    3. ' proces' → logprob: -2.4577879905700684
    4. 'process' → logprob: -3.5827879905700684
    5. ' ' → logprob: -3.9577879905700684
    6. 'proces' → logprob: -4.082787990570068
    7. ' search' → logprob: -4.957787990570068
    8. ' code' → logprob: -5.207787990570068
    9. ' space' → logprob: -5.457787990570068
    10. ' espace' → logprob: -5.457787990570068

Token 217: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3626292645931244
    2. ',' → logprob: -1.6126292943954468
    3. '#' → logprob: -3.6126291751861572
    4. ' ' → logprob: -3.8626291751861572
    5. '_' → logprob: -4.362629413604736
    6. ' ,' → logprob: -4.612629413604736
    7. ',
' → logprob: -5.237629413604736
    8. '
' → logprob: -5.237629413604736
    9. ''' → logprob: -5.487629413604736
    10. ' (' → logprob: -5.612629413604736

Token 218: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.37319010496139526
    2. '
' → logprob: -2.49819016456604
    3. ' 
' → logprob: -2.87319016456604
    4. ' ' → logprob: -3.24819016456604
    5. ',' → logprob: -3.37319016456604
    6. '\' → logprob: -3.74819016456604
    7. '_' → logprob: -4.123189926147461
    8. '<|end|>' → logprob: -4.248189926147461
    9. ''' → logprob: -5.248189926147461
    10. '#
' → logprob: -5.373189926147461

Token 219: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.39210745692253113
    2. ' ' → logprob: -1.7671074867248535
    3. ' 
' → logprob: -3.2671074867248535
    4. '_' → logprob: -3.8921074867248535
    5. '
' → logprob: -3.8921074867248535
    6. 'def' → logprob: -4.1421074867248535
    7. ',' → logprob: -4.3921074867248535
    8. '\' → logprob: -4.8921074867248535
    9. '<|end|>' → logprob: -4.8921074867248535
    10. ' #' → logprob: -5.1421074867248535

Token 220: ' Mais' (ID: 13880)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2955477833747864
    2. 'On' → logprob: -1.9205477237701416
    3. ' On' → logprob: -3.6705477237701416
    4. ' 
' → logprob: -3.7955477237701416
    5. ' #' → logprob: -4.670547962188721
    6. 'Il' → logprob: -4.920547962188721
    7. 'L' → logprob: -5.420547962188721
    8. 'from' → logprob: -5.420547962188721
    9. ' Il' → logprob: -5.545547962188721
    10. ' on' → logprob: -5.545547962188721

Token 221: ' les' (ID: 1341)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31944385170936584
    2. ' l' → logprob: -2.319443941116333
    3. ',' → logprob: -3.319443941116333
    4. ' on' → logprob: -3.569443941116333
    5. ' la' → logprob: -3.819443941116333
    6. ' ' → logprob: -3.819443941116333
    7. ' ,' → logprob: -4.069443702697754
    8. ' il' → logprob: -4.319443702697754
    9. ' le' → logprob: -5.194443702697754
    10. '  ' → logprob: -5.819443702697754

Token 222: ' cases' (ID: 7911)
  Prédit: ' états'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' états' → logprob: -0.3651892840862274
    2. ' ' → logprob: -2.24018931388855
    3. ' couleurs' → logprob: -2.86518931388855
    4. ' espaces' → logprob: -3.11518931388855
    5. ' cases' → logprob: -3.86518931388855
    6. ' states' → logprob: -4.490189075469971
    7. ' ' → logprob: -4.740189075469971
    8. ' cas' → logprob: -4.740189075469971
    9. ' color' → logprob: -5.240189075469971
    10. ' États' → logprob: -6.115189075469971

Token 223: ' déjà' (ID: 21229)
  Prédit: ' non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' non' → logprob: -0.15803262591362
    2. ' ' → logprob: -2.5330326557159424
    3. ' peint' → logprob: -3.9080326557159424
    4. ' déjà' → logprob: -4.408032417297363
    5. ' rest' → logprob: -4.908032417297363
    6. ' color' → logprob: -5.533032417297363
    7. ' restantes' → logprob: -5.658032417297363
    8. ' sont' → logprob: -5.658032417297363
    9. '_' → logprob: -6.283032417297363
    10. ' restent' → logprob: -6.283032417297363

Token 224: ' peint' (ID: 56848)
  Prédit: ' peint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peint' → logprob: -0.23795592784881592
    2. 'pe' → logprob: -2.6129560470581055
    3. ' pe' → logprob: -2.9879560470581055
    4. 'paint' → logprob: -3.3629560470581055
    5. ' color' → logprob: -3.4879560470581055
    6. 'color' → logprob: -4.3629560470581055
    7. ' colori' → logprob: -5.8629560470581055
    8. '_color' → logprob: -6.7379560470581055
    9. ' paint' → logprob: -6.9879560470581055
    10. '_' → logprob: -6.9879560470581055

Token 225: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.15381313860416412
    2. 'ées' → logprob: -2.653813123703003
    3. 'é' → logprob: -3.153813123703003
    4. ' ' → logprob: -4.653813362121582
    5. 'e' → logprob: -5.028813362121582
    6. '#' → logprob: -5.653813362121582
    7. 's' → logprob: -5.903813362121582
    8. 'és' → logprob: -6.028813362121582
    9. ' es' → logprob: -7.528813362121582
    10. ')' → logprob: -7.778813362121582

Token 226: ' part' (ID: 997)
  Prédit: ' ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ne' → logprob: -0.4488193988800049
    2. ' peuvent' → logprob: -1.6988193988800049
    3. ' sont' → logprob: -3.198819398880005
    4. ' restent' → logprob: -3.698819398880005
    5. ' doivent' → logprob: -3.948819398880005
    6. ' ' → logprob: -3.948819398880005
    7. ',' → logprob: -4.073819160461426
    8. ' ou' → logprob: -4.323819160461426
    9. ' n' → logprob: -4.823819160461426
    10. ' seront' → logprob: -5.073819160461426

Token 227: 'iellement' (ID: 70958)
  Prédit: 'ie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.5298493504524231
    2. 'i' → logprob: -1.9048492908477783
    3. 'iellement' → logprob: -2.5298492908477783
    4. 'ies' → logprob: -2.7798492908477783
    5. 'ent' → logprob: -3.5298492908477783
    6. 'aient' → logprob: -3.9048492908477783
    7. 'out' → logprob: -4.154849529266357
    8. 'ag' → logprob: -4.529849529266357
    9. 'ic' → logprob: -4.654849529266357
    10. 'e' → logprob: -4.654849529266357

Token 228: ' ne' (ID: 453)
  Prédit: ' ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ou' → logprob: -1.0323735475540161
    2. ' peuvent' → logprob: -1.6573735475540161
    3. ' ne' → logprob: -1.9073735475540161
    4. 's' → logprob: -2.2823734283447266
    5. ' sont' → logprob: -2.7823734283447266
    6. ' restent' → logprob: -3.6573734283447266
    7. ',' → logprob: -3.9073734283447266
    8. 'es' → logprob: -4.032373428344727
    9. ' doivent' → logprob: -4.157373428344727
    10. ' ' → logprob: -4.532373428344727

Token 229: ' gên' (ID: 198333)
  Prédit: ' peuvent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' peuvent' → logprob: -0.5467619895935059
    2. 'u' → logprob: -1.5467619895935059
    3. 's' → logprob: -2.296761989593506
    4. ' sont' → logprob: -3.046761989593506
    5. ' doivent' → logprob: -4.046761989593506
    6. ' ' → logprob: -5.046761989593506
    7. 'pe' → logprob: -5.421761989593506
    8. ' seront' → logprob: -5.671761989593506
    9. ' pourront' → logprob: -5.671761989593506
    10. 'ont' → logprob: -5.796761989593506

Token 230: 'ent' (ID: 299)
  Prédit: 'ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.048697054386138916
    2. 'e' → logprob: -3.548696994781494
    3. 'er' → logprob: -5.298696994781494
    4. '#' → logprob: -5.548696994781494
    5. 'r' → logprob: -5.923696994781494
    6. 'ant' → logprob: -6.423696994781494
    7. 'aient' → logprob: -7.048696994781494
    8. 'a' → logprob: -7.173696994781494
    9. 'é' → logprob: -7.298696994781494
    10. 'en' → logprob: -7.298696994781494

Token 231: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.03365607559680939
    2. 'ent' → logprob: -4.658656120300293
    3. 'r' → logprob: -5.158656120300293
    4. 'ront' → logprob: -5.283656120300293
    5. 'pas' → logprob: -5.658656120300293
    6. ' ' → logprob: -5.908656120300293
    7. 'aient' → logprob: -6.408656120300293
    8. 'nt' → logprob: -6.783656120300293
    9. ' rien' → logprob: -7.283656120300293
    10. 'ra' → logprob: -7.533656120300293

Token 232: ' car' (ID: 1669)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6230608820915222
    2. ',' → logprob: -0.8730608820915222
    3. '#' → logprob: -4.123060703277588
    4. '<|end|>' → logprob: -4.248060703277588
    5. ' ,' → logprob: -4.998060703277588
    6. ',
' → logprob: -5.623060703277588
    7. 's' → logprob: -7.373060703277588
    8. ' ' → logprob: -7.498060703277588
    9. ' ' → logprob: -7.623060703277588
    10. '<|end|>' → logprob: -7.998060703277588

Token 233: ' l' (ID: 305)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.25850212574005127
    2. ' l' → logprob: -2.6335020065307617
    3. ' elles' → logprob: -3.0085020065307617
    4. ' la' → logprob: -3.1335020065307617
    5. ' le' → logprob: -4.008502006530762
    6. ' nous' → logprob: -4.133502006530762
    7. ' ' → logprob: -5.633502006530762
    8. ' ' → logprob: -5.883502006530762
    9. ' les' → logprob: -5.883502006530762
    10. ',' → logprob: -5.883502006530762

Token 234: ''en' (ID: 16740)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.102102518081665
    2. 'a' → logprob: -1.352102518081665
    3. 'e' → logprob: -1.727102518081665
    4. ''on' → logprob: -2.602102518081665
    5. ''espace' → logprob: -3.227102518081665
    6. 'es' → logprob: -3.602102518081665
    7. ''état' → logprob: -3.602102518081665
    8. 'u' → logprob: -4.727102279663086
    9. ' a' → logprob: -4.727102279663086
    10. ''é' → logprob: -5.102102279663086

Token 235: 'cre' (ID: 894)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8212980628013611
    2. 't' → logprob: -0.9462980628013611
    3. 'cours' → logprob: -3.321298122406006
    4. 'c' → logprob: -3.821298122406006
    5. 'core' → logprob: -3.946298122406006
    6. 'semble' → logprob: -4.071298122406006
    7. 'code' → logprob: -4.196298122406006
    8. ' cours' → logprob: -4.446298122406006
    9. '_c' → logprob: -4.696298122406006
    10. '-c' → logprob: -5.571298122406006

Token 236: ' d' (ID: 272)
  Prédit: ' peut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.7489690780639648
    2. ' n' → logprob: -1.7489690780639648
    3. ' s' → logprob: -2.123969078063965
    4. ' ' → logprob: -2.748969078063965
    5. ' est' → logprob: -2.873969078063965
    6. ' continue' → logprob: -4.123969078063965
    7. ' ne' → logprob: -4.248969078063965
    8. '<|end|>' → logprob: -4.748969078063965
    9. ' des' → logprob: -4.998969078063965
    10. ' a' → logprob: -4.998969078063965

Token 237: ''un' (ID: 9788)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.21359150111675262
    2. 'u' → logprob: -2.9635915756225586
    3. ''un' → logprob: -2.9635915756225586
    4. ''une' → logprob: -3.3385915756225586
    5. 'es' → logprob: -4.088591575622559
    6. 'ans' → logprob: -4.963591575622559
    7. 'é' → logprob: -5.213591575622559
    8. 'une' → logprob: -5.588591575622559
    9. 'eux' → logprob: -5.588591575622559
    10. ''' → logprob: -5.838591575622559

Token 238: ' tampon' (ID: 176995)
  Prédit: ' autre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' autre' → logprob: -0.2628430426120758
    2. ' tampon' → logprob: -2.762843132019043
    3. ' espace' → logprob: -3.387843132019043
    4. ' ' → logprob: -3.512843132019043
    5. 'aut' → logprob: -3.637843132019043
    6. 'e' → logprob: -4.012843132019043
    7. ' nouveau' → logprob: -4.262843132019043
    8. 'es' → logprob: -5.012843132019043
    9. ' nouvel' → logprob: -5.012843132019043
    10. ' aut' → logprob: -5.387843132019043

Token 239: ' rec' (ID: 1369)
  Prédit: ' peut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.36062517762184143
    2. ' s' → logprob: -2.6106252670288086
    3. ' ' → logprob: -3.2356252670288086
    4. ' continue' → logprob: -3.4856252670288086
    5. ' n' → logprob: -3.6106252670288086
    6. ' rec' → logprob: -4.110625267028809
    7. ' est' → logprob: -4.235625267028809
    8. '<|end|>' → logprob: -4.610625267028809
    9. ' se' → logprob: -4.860625267028809
    10. ' pourra' → logprob: -4.985625267028809

Token 240: 'ouvre' (ID: 81331)
  Prédit: 'ouvre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouvre' → logprob: -0.012572160921990871
    2. 'ouvr' → logprob: -5.262572288513184
    3. 'ouv' → logprob: -5.512572288513184
    4. 'ou' → logprob: -6.637572288513184
    5. 'ouvrez' → logprob: -7.262572288513184
    6. 'ouvrir' → logprob: -8.012572288513184
    7. 'ouverte' → logprob: -8.512572288513184
    8. 'ouve' → logprob: -8.762572288513184
    9. 'uvre' → logprob: -8.887572288513184
    10. 'o' → logprob: -9.012572288513184

Token 241: ' totalement' (ID: 75109)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 242: ' la' (ID: 557)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 243: ' couleur' (ID: 48005)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.48629188537597656
    2. ' zone' → logprob: -1.7362918853759766
    3. ' case' → logprob: -2.3612918853759766
    4. 'case' → logprob: -3.2362918853759766
    5. ' précédente' → logprob: -3.4862918853759766
    6. ' grille' → logprob: -4.986291885375977
    7. 'zone' → logprob: -5.236291885375977
    8. ' surface' → logprob: -5.611291885375977
    9. ' couleur' → logprob: -5.986291885375977
    10. ' ligne' → logprob: -5.986291885375977

Token 244: ' précédente' (ID: 177319)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6387142539024353
    2. ',' → logprob: -1.38871431350708
    3. ' ' → logprob: -3.01371431350708
    4. '<|end|>' → logprob: -3.38871431350708
    5. ' ,' → logprob: -3.51371431350708
    6. '_' → logprob: -3.76371431350708
    7. 's' → logprob: -3.88871431350708
    8. '#' → logprob: -4.01371431350708
    9. 'e' → logprob: -5.38871431350708
    10. ' .' → logprob: -5.63871431350708

Token 245: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5987442135810852
    2. '#' → logprob: -1.8487441539764404
    3. ' 
' → logprob: -2.5987441539764404
    4. '\' → logprob: -3.4737441539764404
    5. ',
' → logprob: -3.5987441539764404
    6. 'def' → logprob: -3.7237441539764404
    7. ',' → logprob: -3.8487441539764404
    8. '\n' → logprob: -3.9737441539764404
    9. '#
' → logprob: -4.0987443923950195
    10. '

' → logprob: -4.3487443923950195

Token 246: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5442310571670532
    2. '<|end|>' → logprob: -1.6692310571670532
    3. '
' → logprob: -2.2942309379577637
    4. ' 
' → logprob: -3.7942309379577637
    5. '<|end|>' → logprob: -4.294230937957764
    6. '\' → logprob: -4.294230937957764
    7. ' ' → logprob: -4.419230937957764
    8. ',' → logprob: -4.544230937957764
    9. 'def' → logprob: -4.669230937957764
    10. '#
' → logprob: -5.044230937957764

Token 247: ' -' (ID: 533)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.3851999044418335
    2. '
' → logprob: -1.5101999044418335
    3. '<|end|>' → logprob: -1.5101999044418335
    4. '#' → logprob: -1.6351999044418335
    5. ' ' → logprob: -3.635200023651123
    6. ',' → logprob: -4.385200023651123
    7. '  
' → logprob: -4.385200023651123
    8. 'def' → logprob: -4.635200023651123
    9. '<|end|>' → logprob: -4.760200023651123
    10. '[' → logprob: -4.885200023651123

Token 248: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08687377721071243
    2. 'On' → logprob: -3.586873769760132
    3. ' 
' → logprob: -3.961873769760132
    4. 'def' → logprob: -4.461874008178711
    5. 'from' → logprob: -5.461874008178711
    6. ' ' → logprob: -5.461874008178711
    7. ' #' → logprob: -5.711874008178711
    8. ' On' → logprob: -6.211874008178711
    9. 'Donc' → logprob: -6.836874008178711
    10. 'Pour' → logprob: -6.961874008178711

Token 249: ' cherche' (ID: 52345)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.2656945288181305
    2. 'pour' → logprob: -2.1406946182250977
    3. ' peux' → logprob: -2.8906946182250977
    4. ' peut' → logprob: -3.8906946182250977
    5. ' pour' → logprob: -4.515694618225098
    6. 'n' → logprob: -5.265694618225098
    7. '#' → logprob: -5.390694618225098
    8. 'part' → logprob: -5.890694618225098
    9. ' pe' → logprob: -6.015694618225098
    10. 'continue' → logprob: -6.390694618225098

Token 250: ' donc' (ID: 14206)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.16509436070919037
    2. ' ' → logprob: -2.5400943756103516
    3. ' a' → logprob: -3.7900943756103516
    4. '_' → logprob: -4.165094375610352
    5. '  ' → logprob: -5.165094375610352
    6. ' un' → logprob: -5.290094375610352
    7. ' l' → logprob: -5.540094375610352
    8. ' le' → logprob: -5.540094375610352
    9. ' la' → logprob: -5.665094375610352
    10. ' ' → logprob: -6.290094375610352

Token 251: ' le' (ID: 505)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.22047969698905945
    2. ' la' → logprob: -2.470479726791382
    3. ' l' → logprob: -3.345479726791382
    4. ' le' → logprob: -3.470479726791382
    5. ' une' → logprob: -4.220479488372803
    6. ' un' → logprob: -4.345479488372803
    7. 'à' → logprob: -4.720479488372803
    8. ' de' → logprob: -6.095479488372803
    9. ' a' → logprob: -6.220479488372803
    10. ' d' → logprob: -6.470479488372803

Token 252: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.2092437595129013
    2. 'nombre' → logprob: -1.9592437744140625
    3. ' minimum' → logprob: -4.0842437744140625
    4. 'minimum' → logprob: -4.5842437744140625
    5. ' minimal' → logprob: -5.0842437744140625
    6. 'min' → logprob: -5.0842437744140625
    7. ' meilleur' → logprob: -5.9592437744140625
    8. ' moindre' → logprob: -6.8342437744140625
    9. 'm' → logprob: -7.0842437744140625
    10. ' min' → logprob: -7.4592437744140625

Token 253: ' minimal' (ID: 19957)
  Prédit: ' minimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -0.09820224344730377
    2. ' minimum' → logprob: -3.0982022285461426
    3. ' maximal' → logprob: -3.8482022285461426
    4. ' optimal' → logprob: -4.848202228546143
    5. ' de' → logprob: -4.973202228546143
    6. ' ' → logprob: -5.223202228546143
    7. '_' → logprob: -5.848202228546143
    8. ' d' → logprob: -6.348202228546143
    9. ' minimale' → logprob: -7.848202228546143
    10. ' min' → logprob: -7.848202228546143

Token 254: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.42135167121887207
    2. ' de' → logprob: -1.421351671218872
    3. ' ' → logprob: -2.296351671218872
    4. '_' → logprob: -7.421351432800293
    5. '  ' → logprob: -8.421351432800293
    6. ' ' → logprob: -8.421351432800293
    7. ' des' → logprob: -8.671351432800293
    8. ' optimal' → logprob: -9.171351432800293
    9. ' minimal' → logprob: -9.921351432800293
    10. ')' → logprob: -10.046351432800293

Token 255: ' tam' (ID: 10663)
  Prédit: ' tam'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tam' → logprob: -1.0293331146240234
    2. ' press' → logprob: -1.6543331146240234
    3. 'tam' → logprob: -1.7793331146240234
    4. 'press' → logprob: -2.6543331146240234
    5. ' coups' → logprob: -2.9043331146240234
    6. 'pressions' → logprob: -3.1543331146240234
    7. ' presses' → logprob: -3.1543331146240234
    8. 't' → logprob: -3.2793331146240234
    9. 'app' → logprob: -5.029333114624023
    10. ' ' → logprob: -5.779333114624023

Token 256: 'pons' (ID: 2987)
  Prédit: 'pons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pons' → logprob: -0.0008491750340908766
    2. 'pon' → logprob: -7.37584924697876
    3. '_' → logprob: -10.125848770141602
    4. '-' → logprob: -10.250848770141602
    5. '>' → logprob: -11.000848770141602
    6. 'p' → logprob: -11.125848770141602
    7. 'pp' → logprob: -11.250848770141602
    8. 'ps' → logprob: -11.250848770141602
    9. '_p' → logprob: -11.625848770141602
    10. 'psons' → logprob: -11.875848770141602

Token 257: ' à' (ID: 1221)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5590307116508484
    2. ' ' → logprob: -1.8090307712554932
    3. ' s' → logprob: -2.434030771255493
    4. ' nécessaires' → logprob: -2.434030771255493
    5. ' nécessaire' → logprob: -4.309030532836914
    6. '_' → logprob: -4.434030532836914
    7. ' à' → logprob: -4.684030532836914
    8. '(s' → logprob: -4.684030532836914
    9. ',' → logprob: -5.059030532836914
    10. '.' → logprob: -5.184030532836914

Token 258: ' poser' (ID: 73555)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.9684157371520996
    2. 'poser' → logprob: -1.2184157371520996
    3. ' app' → logprob: -2.4684157371520996
    4. 'pres' → logprob: -2.7184157371520996
    5. ' utiliser' → logprob: -2.8434157371520996
    6. ' poser' → logprob: -2.9684157371520996
    7. 'util' → logprob: -3.2184157371520996
    8. 'aj' → logprob: -5.4684157371521
    9. 'emp' → logprob: -5.5934157371521
    10. ' appliquer' → logprob: -5.5934157371521

Token 259: ' pour' (ID: 1930)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3152203857898712
    2. ',' → logprob: -1.8152203559875488
    3. ' pour' → logprob: -3.065220355987549
    4. ' ' → logprob: -4.065220355987549
    5. 's' → logprob: -4.565220355987549
    6. ' ,' → logprob: -5.315220355987549
    7. '<|end|>' → logprob: -5.565220355987549
    8. ',
' → logprob: -5.690220355987549
    9. '#' → logprob: -5.940220355987549
    10. '.
' → logprob: -6.190220355987549

Token 260: ' arriver' (ID: 78302)
  Prédit: ' obtenir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' obtenir' → logprob: -1.1669491529464722
    2. ' couvrir' → logprob: -1.6669491529464722
    3. ' pe' → logprob: -2.5419492721557617
    4. ' atteindre' → logprob: -2.9169492721557617
    5. 'ob' → logprob: -3.2919492721557617
    6. ' arriver' → logprob: -3.2919492721557617
    7. 're' → logprob: -3.2919492721557617
    8. ' rec' → logprob: -3.5419492721557617
    9. 'pe' → logprob: -3.5419492721557617
    10. ' terminer' → logprob: -3.6669492721557617

Token 261: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.3361125886440277
    2. ' ' → logprob: -1.46111261844635
    3. ' au' → logprob: -3.5861124992370605
    4. '_' → logprob: -4.2111124992370605
    5. 'à' → logprob: -5.0861124992370605
    6. 'au' → logprob: -6.2111124992370605
    7. ' _' → logprob: -6.3361124992370605
    8. '  ' → logprob: -7.5861124992370605
    9. ' a' → logprob: -9.211112976074219
    10. ''à' → logprob: -9.836112976074219

Token 262: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.26402992010116577
    2. 'la' → logprob: -2.6390299797058105
    3. ' l' → logprob: -2.7640299797058105
    4. 'l' → logprob: -3.5140299797058105
    5. ' obtenir' → logprob: -4.0140299797058105
    6. ' pe' → logprob: -4.3890299797058105
    7. ' couvrir' → logprob: -5.1390299797058105
    8. ' terminer' → logprob: -5.5140299797058105
    9. ' atteindre' → logprob: -5.6390299797058105
    10. ' compléter' → logprob: -5.7640299797058105

Token 263: ' cible' (ID: 136857)
  Prédit: ' cible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cible' → logprob: -1.601045846939087
    2. ' solution' → logprob: -1.851045846939087
    3. 'solution' → logprob: -1.851045846939087
    4. 'gr' → logprob: -2.101045846939087
    5. ' grille' → logprob: -2.226045846939087
    6. 'cou' → logprob: -2.476045846939087
    7. 'c' → logprob: -3.101045846939087
    8. 'bonne' → logprob: -3.726045846939087
    9. ' bonne' → logprob: -3.851045846939087
    10. 'objectif' → logprob: -3.851045846939087

Token 264: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 265: ' partir' (ID: 12100)
  Prédit: ' partir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partir' → logprob: -0.10816694051027298
    2. 'part' → logprob: -2.3581669330596924
    3. 'tout' → logprob: -6.2331671714782715
    4. '_part' → logprob: -6.7331671714782715
    5. '#' → logprob: -7.1081671714782715
    6. 'u' → logprob: -7.4831671714782715
    7. ' part' → logprob: -7.4831671714782715
    8. '_' → logprob: -7.4831671714782715
    9. 'bout' → logprob: -8.108166694641113
    10. ' ' → logprob: -8.608166694641113

Token 266: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.006541527807712555
    2. ' de' → logprob: -5.381541728973389
    3. 'd' → logprob: -6.631541728973389
    4. ' du' → logprob: -7.506541728973389
    5. 'de' → logprob: -11.25654125213623
    6. ' ' → logprob: -11.75654125213623
    7. '#' → logprob: -11.75654125213623
    8. '_' → logprob: -12.25654125213623
    9. ' des' → logprob: -12.63154125213623
    10. ' #' → logprob: -12.75654125213623

Token 267: ''un' (ID: 9788)
  Prédit: ''un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -1.3691405057907104
    2. ''une' → logprob: -1.6191405057907104
    3. ' une' → logprob: -2.369140625
    4. 'une' → logprob: -2.494140625
    5. ''' → logprob: -2.619140625
    6. ' un' → logprob: -2.619140625
    7. 'un' → logprob: -2.994140625
    8. ' l' → logprob: -3.119140625
    9. 'e' → logprob: -3.744140625
    10. '_' → logprob: -3.994140625

Token 268: ' état' (ID: 59181)
  Prédit: ' état'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' état' → logprob: -0.026768259704113007
    2. ''état' → logprob: -4.776768207550049
    3. 'ét' → logprob: -5.776768207550049
    4. ' state' → logprob: -5.901768207550049
    5. ' grid' → logprob: -6.276768207550049
    6. '_' → logprob: -6.401768207550049
    7. 'state' → logprob: -6.776768207550049
    8. ' états' → logprob: -6.901768207550049
    9. ' espace' → logprob: -7.276768207550049
    10. ' ' → logprob: -7.401768207550049

Token 269: ' initial' (ID: 4871)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0391653776168823
    2. ' _' → logprob: -1.2891653776168823
    3. ' ' → logprob: -1.6641653776168823
    4. ' 
' → logprob: -2.914165496826172
    5. ' donné' → logprob: -3.914165496826172
    6. ' ,' → logprob: -4.414165496826172
    7. ',' → logprob: -4.539165496826172
    8. ' initial' → logprob: -4.539165496826172
    9. '.' → logprob: -4.664165496826172
    10. ' de' → logprob: -4.789165496826172

Token 270: ' vide' (ID: 21835)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.45398274064064026
    2. ',' → logprob: -2.0789828300476074
    3. '_' → logprob: -2.3289828300476074
    4. '<|end|>' → logprob: -3.3289828300476074
    5. ' ' → logprob: -3.5789828300476074
    6. ':' → logprob: -3.9539828300476074
    7. ' (' → logprob: -4.703982830047607
    8. '#' → logprob: -4.828982830047607
    9. ' .' → logprob: -5.328982830047607
    10. ' ,' → logprob: -5.328982830047607

Token 271: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.738552987575531
    2. '_' → logprob: -0.988552987575531
    3. '

' → logprob: -3.238553047180176
    4. '<|end|>' → logprob: -3.613553047180176
    5. '\' → logprob: -4.488553047180176
    6. ':' → logprob: -4.613553047180176
    7. ' ' → logprob: -4.988553047180176
    8. '#' → logprob: -4.988553047180176
    9. '.' → logprob: -4.988553047180176
    10. ',' → logprob: -5.113553047180176

Token 272: '#
' (ID: 11240)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30706503987312317
    2. 'def' → logprob: -2.057065010070801
    3. ' 
' → logprob: -2.932065010070801
    4. '#' → logprob: -3.432065010070801
    5. 'import' → logprob: -4.557065010070801
    6. '

' → logprob: -4.682065010070801
    7. '\' → logprob: -5.182065010070801
    8. ' ' → logprob: -5.307065010070801
    9. ':' → logprob: -5.432065010070801
    10. ',' → logprob: -5.932065010070801

Token 273: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.151358500123024
    2. ' 
' → logprob: -3.1513586044311523
    3. 'def' → logprob: -3.9013586044311523
    4. 'import' → logprob: -4.151358604431152
    5. '

' → logprob: -4.401358604431152
    6. '\' → logprob: -4.401358604431152
    7. '\n' → logprob: -4.526358604431152
    8. '[' → logprob: -5.151358604431152
    9. '#' → logprob: -5.401358604431152
    10. ' ' → logprob: -5.776358604431152

Token 274: ' Re' (ID: 907)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.553415834903717
    2. 'import' → logprob: -1.0534157752990723
    3. '#' → logprob: -3.3034157752990723
    4. 'from' → logprob: -3.8034157752990723
    5. 'd' → logprob: -5.178415775299072
    6. ' 
' → logprob: -5.678415775299072
    7. '
' → logprob: -6.178415775299072
    8. '\' → logprob: -6.553415775299072
    9. ' import' → logprob: -7.303415775299072
    10. ' def' → logprob: -7.303415775299072

Token 275: 'prés' (ID: 61592)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.2953002452850342
    2. 'pr' → logprob: -1.4203002452850342
    3. 'cherche' → logprob: -1.4203002452850342
    4. 'prés' → logprob: -2.795300245285034
    5. 'cher' → logprob: -3.170300245285034
    6. 'ch' → logprob: -3.670300245285034
    7. 'chercher' → logprob: -3.795300245285034
    8. 'presentation' → logprob: -3.920300245285034
    9. 'search' → logprob: -4.170300483703613
    10. '#' → logprob: -4.670300483703613

Token 276: 'entation' (ID: 100159)
  Prédit: 'entation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entation' → logprob: -0.18587248027324677
    2. 'ent' → logprob: -2.3108725547790527
    3. 'e' → logprob: -3.5608725547790527
    4. 'é' → logprob: -4.185872554779053
    5. '#' → logprob: -4.685872554779053
    6. 'ente' → logprob: -5.310872554779053
    7. 'en' → logprob: -5.435872554779053
    8. 'enta' → logprob: -6.435872554779053
    9. 'enter' → logprob: -6.435872554779053
    10. 'sent' → logprob: -6.810872554779053

Token 277: ':
' (ID: 734)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.902822732925415
    2. ':' → logprob: -1.652822732925415
    3. ' =' → logprob: -1.652822732925415
    4. '_' → logprob: -2.777822732925415
    5. ' de' → logprob: -3.027822732925415
    6. 's' → logprob: -3.527822732925415
    7. ' ' → logprob: -5.027822494506836
    8. ' d' → logprob: -5.152822494506836
    9. ' ' → logprob: -5.277822494506836
    10. 'state' → logprob: -5.277822494506836

Token 278: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9612283110618591
    2. 'state' → logprob: -1.211228370666504
    3. 'grid' → logprob: -1.586228370666504
    4. 'current' → logprob: -3.086228370666504
    5. 'board' → logprob: -4.086228370666504
    6. ' grid' → logprob: -4.461228370666504
    7. 'gr' → logprob: -4.711228370666504
    8. 'etat' → logprob: -4.961228370666504
    9. ' state' → logprob: -5.086228370666504
    10. 'initial' → logprob: -5.461228370666504

Token 279: ' -' (ID: 533)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -1.059400200843811
    2. 'state' → logprob: -1.559400200843811
    3. 'target' → logprob: -1.809400200843811
    4. 'from' → logprob: -2.1844000816345215
    5. 'current' → logprob: -2.9344000816345215
    6. '#' → logprob: -3.0594000816345215
    7. 'gr' → logprob: -4.6844000816345215
    8. 'def' → logprob: -4.9344000816345215
    9. 'initial' → logprob: -5.0594000816345215
    10. 'colors' → logprob: -5.1844000816345215

Token 280: ' On' (ID: 2160)
  Prédit: 'On'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'On' → logprob: -0.6107582449913025
    2. '#' → logprob: -2.2357583045959473
    3. 'gr' → logprob: -2.3607583045959473
    4. 'grid' → logprob: -2.8607583045959473
    5. 'Chaque' → logprob: -3.2357583045959473
    6. 'state' → logprob: -3.3607583045959473
    7. 'on' → logprob: -3.6107583045959473
    8. 'from' → logprob: -3.9857583045959473
    9. 'La' → logprob: -4.360758304595947
    10. 'L' → logprob: -4.735758304595947

Token 281: ' cod' (ID: 26163)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -1.134613037109375
    2. 'pe' → logprob: -1.259613037109375
    3. 'repr' → logprob: -1.759613037109375
    4. '_re' → logprob: -2.884613037109375
    5. ' représente' → logprob: -2.884613037109375
    6. ' peux' → logprob: -3.134613037109375
    7. '_' → logprob: -3.384613037109375
    8. 'util' → logprob: -5.384613037109375
    9. ' peut' → logprob: -5.509613037109375
    10. ' représ' → logprob: -5.634613037109375

Token 282: 'era' (ID: 2060)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.14881493151187897
    2. 'é' → logprob: -2.0238149166107178
    3. 'er' → logprob: -5.898815155029297
    4. 'ée' → logprob: -6.273815155029297
    5. 'age' → logprob: -6.773815155029297
    6. ' e' → logprob: -9.523815155029297
    7. '#' → logprob: -10.023815155029297
    8. 'a' → logprob: -10.148815155029297
    9. 'i' → logprob: -10.398815155029297
    10. 'ant' → logprob: -10.898815155029297

Token 283: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.4633583724498749
    2. ' chaque' → logprob: -1.0883584022521973
    3. 'l' → logprob: -4.463358402252197
    4. ' ' → logprob: -4.713358402252197
    5. ' les' → logprob: -5.088358402252197
    6. ' la' → logprob: -6.088358402252197
    7. 'les' → logprob: -6.463358402252197
    8. ' ' → logprob: -7.713358402252197
    9. '_l' → logprob: -7.838358402252197
    10. '_' → logprob: -7.963358402252197

Token 284: ''état' (ID: 116357)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.0571242570877075
    2. 'a' → logprob: -1.1821242570877075
    3. ''état' → logprob: -1.5571242570877075
    4. ''' → logprob: -3.182124137878418
    5. 'es' → logprob: -3.557124137878418
    6. ''a' → logprob: -3.682124137878418
    7. ''é' → logprob: -4.307124137878418
    8. ''espace' → logprob: -4.932124137878418
    9. 'u' → logprob: -5.432124137878418
    10. ''e' → logprob: -5.557124137878418

Token 285: ' actuel' (ID: 113646)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.134598731994629
    2. '_' → logprob: -1.384598731994629
    3. ' ' → logprob: -1.384598731994629
    4. ' en' → logprob: -2.884598731994629
    5. ' sous' → logprob: -3.384598731994629
    6. ' des' → logprob: -4.259598731994629
    7. ' =' → logprob: -4.384598731994629
    8. ' _' → logprob: -4.509598731994629
    9. ' ' → logprob: -4.759598731994629
    10. ' initial' → logprob: -4.884598731994629

Token 286: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5257521867752075
    2. ' ' → logprob: -1.9007521867752075
    3. '_' → logprob: -2.025752067565918
    4. ' en' → logprob: -2.525752067565918
    5. ' sous' → logprob: -5.025752067565918
    6. ' comme' → logprob: -5.150752067565918
    7. ' par' → logprob: -5.275752067565918
    8. 'de' → logprob: -5.525752067565918
    9. ' avec' → logprob: -5.525752067565918
    10. ' _' → logprob: -5.775752067565918

Token 287: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5464503765106201
    2. 'la' → logprob: -0.9214503765106201
    3. 'l' → logprob: -4.546450614929199
    4. ' chaque' → logprob: -5.046450614929199
    5. 'cha' → logprob: -6.171450614929199
    6. ' l' → logprob: -6.546450614929199
    7. ' ' → logprob: -6.796450614929199
    8. 'gr' → logprob: -8.0464506149292
    9. ''' → logprob: -8.4214506149292
    10. ' grille' → logprob: -8.7964506149292

Token 288: ' grille' (ID: 99153)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.0710638239979744
    2. ' grille' → logprob: -2.946063756942749
    3. ' gr' → logprob: -4.196063995361328
    4. ' ' → logprob: -8.696063995361328
    5. 'grid' → logprob: -8.821063995361328
    6. 'g' → logprob: -9.196063995361328
    7. '_gr' → logprob: -9.321063995361328
    8. ' couleur' → logprob: -9.696063995361328
    9. '
' → logprob: -9.821063995361328
    10. 'color' → logprob: -10.321063995361328

Token 289: ' avec' (ID: 3937)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.3843553066253662
    2. ' par' → logprob: -2.634355306625366
    3. '_' → logprob: -2.884355306625366
    4. ' sous' → logprob: -3.009355306625366
    5. ' avec' → logprob: -3.134355306625366
    6. ' comme' → logprob: -3.509355306625366
    7. ' ' → logprob: -3.634355306625366
    8. 'en' → logprob: -4.009355545043945
    9. 's' → logprob: -5.384355545043945
    10. ',' → logprob: -5.884355545043945

Token 290: ' un' (ID: 537)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.7337691783905029
    2. ' un' → logprob: -1.733769178390503
    3. 'une' → logprob: -1.983769178390503
    4. ''un' → logprob: -2.983769178390503
    5. ''une' → logprob: -3.233769178390503
    6. 'un' → logprob: -3.483769178390503
    7. '16' → logprob: -3.733769178390503
    8. ' ' → logprob: -3.983769178390503
    9. ''' → logprob: -4.608769416809082
    10. 'a' → logprob: -4.858769416809082

Token 291: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.6621228456497192
    2. 'ent' → logprob: -1.2871228456497192
    3. ' tuple' → logprob: -1.9121228456497192
    4. 'string' → logprob: -3.9121227264404297
    5. 'int' → logprob: -5.41212272644043
    6. 'tu' → logprob: -5.53712272644043
    7. ' entier' → logprob: -5.53712272644043
    8. 'trip' → logprob: -5.66212272644043
    9. ' string' → logprob: -5.66212272644043
    10. ' tableau' → logprob: -5.78712272644043

Token 292: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14228902757167816
    2. ' de' → logprob: -3.26728892326355
    3. ' of' → logprob: -3.64228892326355
    4. '(
' → logprob: -4.142289161682129
    5. ' (' → logprob: -4.267289161682129
    6. '[' → logprob: -4.892289161682129
    7. ')' → logprob: -5.017289161682129
    8. ',' → logprob: -5.267289161682129
    9. '((' → logprob: -5.392289161682129
    10. '(tuple' → logprob: -5.517289161682129

Token 293: ' ' (ID: 220)
  Prédit: '16'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '16' → logprob: -0.09396293014287949
    2. '4' → logprob: -3.0939629077911377
    3. 'tuple' → logprob: -3.9689629077911377
    4. '(' → logprob: -4.343963146209717
    5. 'tu' → logprob: -5.093963146209717
    6. ' ' → logprob: -6.093963146209717
    7. 'strings' → logprob: -6.593963146209717
    8. ' tuples' → logprob: -7.218963146209717
    9. 'str' → logprob: -7.468963146209717
    10. 'length' → logprob: -7.968963146209717

Token 294: '16' (ID: 1125)
  Prédit: '16'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '16' → logprob: -0.43000319600105286
    2. 'tuple' → logprob: -1.8050031661987305
    3. '(' → logprob: -2.4300031661987305
    4. '4' → logprob: -2.8050031661987305
    5. 'str' → logprob: -4.0550031661987305
    6. '('' → logprob: -4.6800031661987305
    7. 'tu' → logprob: -5.4300031661987305
    8. 'strings' → logprob: -6.1800031661987305
    9. ' ' → logprob: -7.0550031661987305
    10. '("' → logprob: -7.8050031661987305

Token 295: ' caractères' (ID: 183106)
  Prédit: 'chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chars' → logprob: -0.5989868640899658
    2. 'strings' → logprob: -2.348986864089966
    3. 'élé' → logprob: -2.723986864089966
    4. ' caractères' → logprob: -2.723986864089966
    5. ' éléments' → logprob: -3.098986864089966
    6. 'elements' → logprob: -3.223986864089966
    7. 'car' → logprob: -3.348986864089966
    8. 'str' → logprob: -3.848986864089966
    9. 'characters' → logprob: -4.348986625671387
    10. 'int' → logprob: -4.348986625671387

Token 296: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2663707733154297
    2. ',' → logprob: -1.2663707733154297
    3. '(' → logprob: -1.8913707733154297
    4. ' (' → logprob: -2.1413707733154297
    5. '.' → logprob: -3.2663707733154297
    6. '_' → logprob: -3.3913707733154297
    7. ':' → logprob: -3.5163707733154297
    8. ''' → logprob: -3.7663707733154297
    9. '(
' → logprob: -4.14137077331543
    10. '\' → logprob: -5.39137077331543

Token 297: '#
' (ID: 11240)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.112868070602417
    2. ')' → logprob: -1.237868070602417
    3. '#' → logprob: -2.487868070602417
    4. ',' → logprob: -2.737868070602417
    5. ' (' → logprob: -2.737868070602417
    6. '<|end|>' → logprob: -3.237868070602417
    7. ''' → logprob: -3.362868070602417
    8. '[' → logprob: -3.487868070602417
    9. '(
' → logprob: -3.987868070602417
    10. '\' → logprob: -4.487868309020996

Token 298: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13259778916835785
    2. '#' → logprob: -2.3825976848602295
    3. 'import' → logprob: -4.882597923278809
    4. '\' → logprob: -5.507597923278809
    5. '
' → logprob: -5.507597923278809
    6. ' 
' → logprob: -5.507597923278809
    7. '  
' → logprob: -6.757597923278809
    8. '(' → logprob: -7.007597923278809
    9. '' → logprob: -7.007597923278809
    10. 'd' → logprob: -7.007597923278809

Token 299: ' Str' (ID: 5641)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09031780064105988
    2. 'import' → logprob: -2.715317726135254
    3. 'from' → logprob: -3.965317726135254
    4. '#' → logprob: -6.840317726135254
    5. 'target' → logprob: -10.465317726135254
    6. ' def' → logprob: -10.965317726135254
    7. ' from' → logprob: -11.715317726135254
    8. 'state' → logprob: -11.715317726135254
    9. 'cache' → logprob: -11.840317726135254
    10. '
' → logprob: -11.840317726135254

Token 300: 'atég' (ID: 25440)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.02443895861506462
    2. 'i' → logprob: -4.649438858032227
    3. '_' → logprob: -5.149438858032227
    4. '#' → logprob: -5.649438858032227
    5. 'é' → logprob: -6.274438858032227
    6. 'uct' → logprob: -6.774438858032227
    7. 'atég' → logprob: -8.024438858032227
    8. 'in' → logprob: -8.024438858032227
    9. 'e' → logprob: -8.649438858032227
    10. ')' → logprob: -8.649438858032227

Token 301: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.05689304322004318
    2. 'y' → logprob: -3.8068931102752686
    3. 'e' → logprob: -4.1818928718566895
    4. 'gie' → logprob: -4.1818928718566895
    5. 'é' → logprob: -6.5568928718566895
    6. 'ié' → logprob: -8.306893348693848
    7. 'ies' → logprob: -8.431893348693848
    8. 'gy' → logprob: -8.931893348693848
    9. 'me' → logprob: -9.181893348693848
    10. 'm' → logprob: -10.181893348693848

Token 302: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5504724979400635
    2. ':' → logprob: -1.3004724979400635
    3. '=' → logprob: -2.0504724979400635
    4. ' :' → logprob: -3.9254724979400635
    5. ' ' → logprob: -7.425472259521484
    6. '[:]' → logprob: -7.550472259521484
    7. '_' → logprob: -7.675472259521484
    8. ',' → logprob: -8.300472259521484
    9. '[' → logprob: -8.425472259521484
    10. '#' → logprob: -9.550472259521484

Token 303: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2092849463224411
    2. ' #' → logprob: -2.709285020828247
    3. ' 
' → logprob: -2.959285020828247
    4. ' ' → logprob: -3.209285020828247
    5. 'def' → logprob: -4.709284782409668
    6. 'for' → logprob: -5.834284782409668
    7. '\' → logprob: -6.084284782409668
    8. '   ' → logprob: -6.084284782409668
    9. ' ' → logprob: -6.334284782409668
    10. '
' → logprob: -6.459284782409668

Token 304: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.44828420877456665
    2. 'def' → logprob: -1.6982841491699219
    3. 'Faire' → logprob: -3.198284149169922
    4. ' #' → logprob: -3.323284149169922
    5. 'for' → logprob: -3.948284149169922
    6. 'On' → logprob: -4.573284149169922
    7. 'from' → logprob: -4.948284149169922
    8. ' for' → logprob: -5.073284149169922
    9. 'Util' → logprob: -5.073284149169922
    10. ' def' → logprob: -5.198284149169922

Token 305: ' BFS' (ID: 190016)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.19825029373168945
    2. 'def' → logprob: -2.6982502937316895
    3. ' from' → logprob: -2.8232502937316895
    4. 'import' → logprob: -3.0732502937316895
    5. '#' → logprob: -6.0732502937316895
    6. ' import' → logprob: -7.1982502937316895
    7. 'Explorer' → logprob: -7.1982502937316895
    8. ' def' → logprob: -7.3232502937316895
    9. 'Expl' → logprob: -7.6982502937316895
    10. 'Dé' → logprob: -8.323249816894531

Token 306: ' ou' (ID: 2031)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 307: ' DFS' (ID: 115767)
  Prédit: ' DFS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' DFS' → logprob: -0.20753183960914612
    2. 'DFS' → logprob: -1.7075318098068237
    3. 'dfs' → logprob: -5.457531929016113
    4. ' dfs' → logprob: -6.457531929016113
    5. 'DP' → logprob: -8.832531929016113
    6. ' DP' → logprob: -9.332531929016113
    7. 'D' → logprob: -11.332531929016113
    8. ' back' → logprob: -11.582531929016113
    9. 'A' → logprob: -12.957531929016113
    10. 'dp' → logprob: -12.957531929016113

Token 308: '+' (ID: 10)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6276788115501404
    2. '<|end|>' → logprob: -0.8776788115501404
    3. '#' → logprob: -3.752678871154785
    4. '<|end|>' → logprob: -4.627678871154785
    5. ')' → logprob: -5.627678871154785
    6. ':' → logprob: -5.752678871154785
    7. ',' → logprob: -5.877678871154785
    8. '(' → logprob: -6.377678871154785
    9. ' (' → logprob: -6.502678871154785
    10. '
' → logprob: -7.377678871154785

Token 309: 'mé' (ID: 35328)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.04707595333456993
    2. ' memo' → logprob: -3.2970759868621826
    3. 'mé' → logprob: -4.7970757484436035
    4. 'mem' → logprob: -8.172076225280762
    5. 'm' → logprob: -8.672076225280762
    6. ' mé' → logprob: -9.422076225280762
    7. 'memor' → logprob: -9.422076225280762
    8. '1' → logprob: -9.797076225280762
    9. ' mém' → logprob: -11.172076225280762
    10. 'Memo' → logprob: -11.922076225280762

Token 310: 'mo' (ID: 3690)
  Prédit: 'mo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mo' → logprob: -0.007848883047699928
    2. 'm' → logprob: -5.507848739624023
    3. 'mor' → logprob: -5.632848739624023
    4. 'o' → logprob: -9.882848739624023
    5. 'moire' → logprob: -10.257848739624023
    6. 'mon' → logprob: -10.882848739624023
    7. 'mos' → logprob: -11.257848739624023
    8. ']' → logprob: -12.007848739624023
    9. 'mog' → logprob: -12.007848739624023
    10. '()' → logprob: -12.132848739624023

Token 311: ' sur' (ID: 1512)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5305376648902893
    2. '#' → logprob: -2.2805376052856445
    3. ')' → logprob: -2.4055376052856445
    4. '<|end|>' → logprob: -2.9055376052856445
    5. ' ' → logprob: -4.0305376052856445
    6. ' =' → logprob: -4.1555376052856445
    7. ']' → logprob: -4.1555376052856445
    8. ':' → logprob: -4.4055376052856445
    9. 'def' → logprob: -4.5305376052856445
    10. 'n' → logprob: -4.6555376052856445

Token 312: ' les' (ID: 1341)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.24512183666229248
    2. 'l' → logprob: -1.6201218366622925
    3. ' la' → logprob: -4.620121955871582
    4. 'la' → logprob: -6.245121955871582
    5. ' les' → logprob: -6.745121955871582
    6. ' ' → logprob: -6.995121955871582
    7. ' le' → logprob: -7.120121955871582
    8. 'le' → logprob: -7.245121955871582
    9. ' états' → logprob: -7.495121955871582
    10. 'les' → logprob: -7.870121955871582

Token 313: ' états' (ID: 184259)
  Prédit: ' états'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' états' → logprob: -0.025046268478035927
    2. 'ét' → logprob: -4.275046348571777
    3. ' tuples' → logprob: -5.400046348571777
    4. ' États' → logprob: -5.775046348571777
    5. ' et' → logprob: -7.525046348571777
    6. ' states' → logprob: -7.775046348571777
    7. 'states' → logprob: -8.150046348571777
    8. ' ' → logprob: -8.150046348571777
    9. ' estados' → logprob: -8.400046348571777
    10. 'est' → logprob: -8.650046348571777

Token 314: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2213060855865479
    2. ':' → logprob: -1.3463060855865479
    3. '<|end|>' → logprob: -1.8463060855865479
    4. '
' → logprob: -2.596306085586548
    5. '#' → logprob: -3.221306085586548
    6. ' ' → logprob: -3.346306085586548
    7. '<|end|>' → logprob: -3.846306085586548
    8. 'def' → logprob: -3.971306085586548
    9. ',' → logprob: -4.096305847167969
    10. '\' → logprob: -4.346305847167969

Token 315: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.1724971979856491
    2. ' la' → logprob: -2.172497272491455
    3. 'l' → logprob: -3.547497272491455
    4. 'gr' → logprob: -4.422497272491455
    5. ' grille' → logprob: -6.422497272491455
    6. ' l' → logprob: -6.672497272491455
    7. ' ' → logprob: -8.922496795654297
    8. ' peinture' → logprob: -9.422496795654297
    9. 'color' → logprob: -9.547496795654297
    10. 'code' → logprob: -9.797496795654297

Token 316: ' grille' (ID: 99153)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.024478623643517494
    2. ' grille' → logprob: -3.7744786739349365
    3. ' gr' → logprob: -6.899478435516357
    4. 'grid' → logprob: -8.899478912353516
    5. '#' → logprob: -10.899478912353516
    6. 'pile' → logprob: -12.024478912353516
    7. ' #' → logprob: -12.274478912353516
    8. ' ' → logprob: -12.524478912353516
    9. 'solution' → logprob: -12.524478912353516
    10. ' grid' → logprob: -12.524478912353516

Token 317: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 318: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.187398076057434
    2. 'def' → logprob: -1.562398076057434
    3. '_' → logprob: -1.687398076057434
    4. ':' → logprob: -2.4373979568481445
    5. '#' → logprob: -2.8123979568481445
    6. '<|end|>' → logprob: -3.5623979568481445
    7. ',' → logprob: -3.9373979568481445
    8. ' 
' → logprob: -4.3123979568481445
    9. '\' → logprob: -4.3123979568481445
    10. ')' → logprob: -4.6873979568481445

Token 319: ' -' (ID: 533)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.4071033000946045
    2. '
' → logprob: -1.4071033000946045
    3. '<|end|>' → logprob: -2.1571033000946045
    4. ':' → logprob: -2.2821033000946045
    5. '(' → logprob: -3.0321033000946045
    6. '#' → logprob: -3.2821033000946045
    7. '[' → logprob: -3.5321033000946045
    8. ')' → logprob: -3.6571033000946045
    9. ' ' → logprob: -3.6571033000946045
    10. ',' → logprob: -3.6571033000946045

Token 320: ' Depuis' (ID: 76325)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3257187604904175
    2. 'import' → logprob: -1.4507187604904175
    3. '#' → logprob: -3.450718879699707
    4. 'def' → logprob: -4.825718879699707
    5. ' from' → logprob: -7.075718879699707
    6. 'for' → logprob: -7.825718879699707
    7. 'D' → logprob: -8.075718879699707
    8. ' import' → logprob: -8.200718879699707
    9. ' 
' → logprob: -8.325718879699707
    10. 'Pour' → logprob: -8.325718879699707

Token 321: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.04809657484292984
    2. ' chaque' → logprob: -3.7980966567993164
    3. 'l' → logprob: -4.423096656799316
    4. ' la' → logprob: -5.798096656799316
    5. ' ' → logprob: -6.048096656799316
    6. ' le' → logprob: -6.173096656799316
    7. ' un' → logprob: -6.548096656799316
    8. ' current' → logprob: -7.548096656799316
    9. ' une' → logprob: -7.673096656799316
    10. ' n' → logprob: -7.798096656799316

Token 322: ''état' (ID: 116357)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.44800272583961487
    2. ''état' → logprob: -1.1980026960372925
    3. ''espace' → logprob: -4.198002815246582
    4. ''é' → logprob: -4.198002815246582
    5. 'e' → logprob: -4.573002815246582
    6. '’état' → logprob: -5.698002815246582
    7. ' '' → logprob: -5.823002815246582
    8. 'a' → logprob: -5.948002815246582
    9. '_' → logprob: -6.073002815246582
    10. '''' → logprob: -6.573002815246582

Token 323: ' actuel' (ID: 113646)
  Prédit: ' actuel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' actuel' → logprob: -0.7834232449531555
    2. '_' → logprob: -1.1584231853485107
    3. ' courant' → logprob: -2.5334231853485107
    4. ' _' → logprob: -2.7834231853485107
    5. ' ' → logprob: -2.9084231853485107
    6. ' current' → logprob: -3.9084231853485107
    7. ' ' → logprob: -5.65842342376709
    8. '_c' → logprob: -6.40842342376709
    9. ',' → logprob: -6.53342342376709
    10. ' actuelle' → logprob: -6.53342342376709

Token 324: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008548264391720295
    2. ' ,' → logprob: -4.883548259735107
    3. '_,' → logprob: -8.258548736572266
    4. '_' → logprob: -8.508548736572266
    5. ' courant' → logprob: -9.133548736572266
    6. ' actuel' → logprob: -9.508548736572266
    7. ' ' → logprob: -9.633548736572266
    8. ' de' → logprob: -10.133548736572266
    9. ' on' → logprob: -10.133548736572266
    10. ' actuelle' → logprob: -10.633548736572266

Token 325: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.270479291677475
    2. 'on' → logprob: -2.020479202270508
    3. ' essayer' → logprob: -3.020479202270508
    4. ' pour' → logprob: -4.020479202270508
    5. ' for' → logprob: -4.520479202270508
    6. 'for' → logprob: -4.770479202270508
    7. 'pour' → logprob: -5.145479202270508
    8. ' ' → logprob: -5.645479202270508
    9. ' explorer' → logprob: -6.020479202270508
    10. ' tester' → logprob: -6.145479202270508

Token 326: ' tente' (ID: 75234)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8380737900733948
    2. ' peut' → logprob: -1.33807373046875
    3. ' _' → logprob: -2.33807373046875
    4. ' place' → logprob: -2.58807373046875
    5. ' pose' → logprob: -3.33807373046875
    6. ' chois' → logprob: -4.33807373046875
    7. ' continue' → logprob: -4.46307373046875
    8. ' applique' → logprob: -4.46307373046875
    9. '_pe' → logprob: -4.83807373046875
    10. '_place' → logprob: -4.83807373046875

Token 327: ' toutes' (ID: 17502)
  Prédit: ' toutes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' toutes' → logprob: -0.6759873628616333
    2. ' de' → logprob: -1.4259873628616333
    3. ' d' → logprob: -1.9259873628616333
    4. ' tous' → logprob: -3.1759872436523438
    5. 'd' → logprob: -3.6759872436523438
    6. 'de' → logprob: -4.300987243652344
    7. ' chaque' → logprob: -4.550987243652344
    8. 't' → logprob: -5.425987243652344
    9. ' ' → logprob: -5.925987243652344
    10. '_' → logprob: -6.425987243652344

Token 328: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.039844706654548645
    2. ' ' → logprob: -3.6648447513580322
    3. 'les' → logprob: -4.789844512939453
    4. 's' → logprob: -5.914844512939453
    5. '_' → logprob: -6.414844512939453
    6. ' l' → logprob: -8.414844512939453
    7. '  
' → logprob: -9.414844512939453
    8. ' possible' → logprob: -9.539844512939453
    9. '   ' → logprob: -9.664844512939453
    10. '#' → logprob: -9.914844512939453

Token 329: ' poses' (ID: 50899)
  Prédit: 'poss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'poss' → logprob: -0.6585566401481628
    2. 'positions' → logprob: -1.0335566997528076
    3. ' ' → logprob: -4.1585564613342285
    4. ' tailles' → logprob: -4.1585564613342285
    5. 'pos' → logprob: -4.2835564613342285
    6. ' positions' → logprob: -4.4085564613342285
    7. 'pressions' → logprob: -4.6585564613342285
    8. ' poss' → logprob: -4.9085564613342285
    9. 'cases' → logprob: -5.1585564613342285
    10. 'poses' → logprob: -5.1585564613342285

Token 330: ' possibles' (ID: 97753)
  Prédit: ' possibles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possibles' → logprob: -0.3263626992702484
    2. ' possible' → logprob: -1.3263627290725708
    3. 'possible' → logprob: -5.326362609863281
    4. '_possible' → logprob: -5.951362609863281
    5. ' posibles' → logprob: -6.076362609863281
    6. ' de' → logprob: -6.076362609863281
    7. ' ' → logprob: -7.701362609863281
    8. '_' → logprob: -8.201362609863281
    9. ' d' → logprob: -9.826362609863281
    10. 'poss' → logprob: -10.201362609863281

Token 331: ' (' (ID: 350)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2806360125541687
    2. ' possible' → logprob: -2.6556360721588135
    3. ' de' → logprob: -2.7806360721588135
    4. ' possibles' → logprob: -3.2806360721588135
    5. '_possible' → logprob: -3.7806360721588135
    6. 'possible' → logprob: -3.9056360721588135
    7. ' ' → logprob: -4.405635833740234
    8. ' _' → logprob: -4.905635833740234
    9. ',' → logprob: -5.030635833740234
    10. ' ,' → logprob: -6.655635833740234

Token 332: 'tam' (ID: 78855)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5970801115036011
    2. ' )' → logprob: -0.8470801115036011
    3. ' ' → logprob: -5.222080230712891
    4. ',' → logprob: -5.347080230712891
    5. ' de' → logprob: -5.972080230712891
    6. ' ,' → logprob: -6.097080230712891
    7. ' (' → logprob: -6.222080230712891
    8. ' ),' → logprob: -7.347080230712891
    9. 'tam' → logprob: -7.472080230712891
    10. '(' → logprob: -8.09708023071289

Token 333: 'pon' (ID: 716)
  Prédit: 'pons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pons' → logprob: -0.043876465409994125
    2. 'pon' → logprob: -3.1688764095306396
    3. '_' → logprob: -8.418876647949219
    4. 'ponse' → logprob: -9.293876647949219
    5. 'p' → logprob: -9.418876647949219
    6. '\' → logprob: -9.668876647949219
    7. ' p' → logprob: -10.293876647949219
    8. '_p' → logprob: -10.418876647949219
    9. ')' → logprob: -10.543876647949219
    10. 'pond' → logprob: -10.543876647949219

Token 334: ' i' (ID: 575)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33169782161712646
    2. ' )' → logprob: -1.8316978216171265
    3. 's' → logprob: -2.956697940826416
    4. ',' → logprob: -3.331697940826416
    5. ' ,' → logprob: -4.206697940826416
    6. '),' → logprob: -5.206697940826416
    7. ' ),' → logprob: -5.456697940826416
    8. ' ' → logprob: -6.081697940826416
    9. '_' → logprob: -6.456697940826416
    10. ' s' → logprob: -7.081697940826416

Token 335: ',' (ID: 11)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7455930113792419
    2. 'n' → logprob: -1.6205930709838867
    3. ')' → logprob: -2.1205930709838867
    4. ',' → logprob: -2.2455930709838867
    5. '_' → logprob: -4.495593070983887
    6. '+' → logprob: -4.495593070983887
    7. 't' → logprob: -4.495593070983887
    8. 'l' → logprob: -4.620593070983887
    9. 's' → logprob: -5.120593070983887
    10. '),' → logprob: -5.245593070983887

Token 336: ' position' (ID: 4010)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.552477478981018
    2. ' ' → logprob: -2.1774773597717285
    3. ' ,' → logprob: -2.4274773597717285
    4. ' color' → logprob: -3.1774773597717285
    5. ' j' → logprob: -3.1774773597717285
    6. ' couleur' → logprob: -3.1774773597717285
    7. ' la' → logprob: -3.3024773597717285
    8. ' t' → logprob: -3.5524773597717285
    9. ')' → logprob: -3.5524773597717285
    10. 'w' → logprob: -3.9274773597717285

Token 337: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6250877380371094
    2. ')' → logprob: -1.5000877380371094
    3. ' ,' → logprob: -1.8750877380371094
    4. '),' → logprob: -3.3750877380371094
    5. ' )' → logprob: -4.125087738037109
    6. ' ),' → logprob: -4.500087738037109
    7. ' ' → logprob: -4.500087738037109
    8. 's' → logprob: -4.875087738037109
    9. '_,' → logprob: -6.375087738037109
    10. '=' → logprob: -6.625087738037109

Token 338: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2825034260749817
    2. ')' → logprob: -2.532503366470337
    3. ',' → logprob: -2.907503366470337
    4. '),' → logprob: -2.907503366470337
    5. ' x' → logprob: -3.657503366470337
    6. ' ,' → logprob: -4.532503604888916
    7. ' ),' → logprob: -5.282503604888916
    8. 'y' → logprob: -5.532503604888916
    9. 'i' → logprob: -5.782503604888916
    10. ' )' → logprob: -6.407503604888916

Token 339: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08046788722276688
    2. ',y' → logprob: -2.580467939376831
    3. ' ,' → logprob: -6.580467700958252
    4. 'y' → logprob: -9.33046817779541
    5. '),' → logprob: -10.08046817779541
    6. ' ' → logprob: -10.95546817779541
    7. ',j' → logprob: -11.33046817779541
    8. ')' → logprob: -11.33046817779541
    9. '+' → logprob: -12.83046817779541
    10. ' y' → logprob: -13.33046817779541

Token 340: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.6081188917160034
    2. ')' → logprob: -1.4831188917160034
    3. '))' → logprob: -1.4831188917160034
    4. ' ),' → logprob: -7.108119010925293
    5. ',' → logprob: -7.733119010925293
    6. ' )' → logprob: -8.858119010925293
    7. ' ))' → logprob: -9.233119010925293
    8. ' ' → logprob: -9.233119010925293
    9. ')),' → logprob: -9.608119010925293
    10. ')))' → logprob: -10.358119010925293

Token 341: ' couleur' (ID: 48005)
  Prédit: ' couleur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couleur' → logprob: -0.16932642459869385
    2. ' color' → logprob: -2.9193263053894043
    3. ')' → logprob: -3.5443263053894043
    4. 'color' → logprob: -3.7943263053894043
    5. ' taille' → logprob: -3.9193263053894043
    6. 'cou' → logprob: -4.044326305389404
    7. 'c' → logprob: -5.669326305389404
    8. ' ' → logprob: -6.419326305389404
    9. ' couleurs' → logprob: -6.419326305389404
    10. ' ' → logprob: -6.544326305389404

Token 342: ' c' (ID: 274)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016560014337301254
    2. ' )' → logprob: -4.266560077667236
    3. '),' → logprob: -6.266560077667236
    4. ',' → logprob: -9.141559600830078
    5. '))' → logprob: -9.516559600830078
    6. ' ),' → logprob: -9.516559600830078
    7. ' ' → logprob: -9.641559600830078
    8. ')#' → logprob: -10.641559600830078
    9. ' ' → logprob: -11.141559600830078
    10. ').' → logprob: -11.266559600830078

Token 343: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0035387747921049595
    2. '),' → logprob: -6.003538608551025
    3. ' )' → logprob: -7.003538608551025
    4. ',' → logprob: -10.128539085388184
    5. '))' → logprob: -10.503539085388184
    6. ').' → logprob: -10.628539085388184
    7. '):' → logprob: -10.753539085388184
    8. ' ),' → logprob: -12.003539085388184
    9. '_' → logprob: -12.128539085388184
    10. ')#' → logprob: -12.128539085388184

Token 344: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8494288921356201
    2. '<|end|>' → logprob: -1.8494288921356201
    3. '_' → logprob: -2.09942889213562
    4. '#' → logprob: -2.84942889213562
    5. ')' → logprob: -3.22442889213562
    6. ',' → logprob: -3.34942889213562
    7. ' 
' → logprob: -3.47442889213562
    8. '[' → logprob: -3.72442889213562
    9. '\' → logprob: -3.84942889213562
    10. '
' → logprob: -3.97442889213562

Token 345: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.367040991783142
    2. '<|end|>' → logprob: -1.367040991783142
    3. ')' → logprob: -1.617040991783142
    4. '
' → logprob: -2.3670411109924316
    5. ',' → logprob: -3.1170411109924316
    6. '_' → logprob: -3.7420411109924316
    7. ':' → logprob: -3.7420411109924316
    8. ' ' → logprob: -3.8670411109924316
    9. '<|end|>' → logprob: -4.117041110992432
    10. ' 
' → logprob: -4.492041110992432

Token 346: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7889866828918457
    2. ' ' → logprob: -1.4139866828918457
    3. '<|end|>' → logprob: -1.9139866828918457
    4. ' 
' → logprob: -2.2889866828918457
    5. '
' → logprob: -4.163986682891846
    6. '\' → logprob: -4.663986682891846
    7. '\n' → logprob: -5.663986682891846
    8. ' ' → logprob: -5.913986682891846
    9. '<|end|>' → logprob: -5.913986682891846
    10. '...' → logprob: -6.288986682891846

Token 347: ' applique' (ID: 180579)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.5303260684013367
    2. ' explore' → logprob: -2.1553261280059814
    3. 'continue' → logprob: -2.9053261280059814
    4. '_' → logprob: -2.9053261280059814
    5. 'expl' → logprob: -3.0303261280059814
    6. ' peux' → logprob: -4.030325889587402
    7. ' peut' → logprob: -4.405325889587402
    8. 'contin' → logprob: -4.405325889587402
    9. ' avance' → logprob: -4.780325889587402
    10. ' cherche' → logprob: -4.905325889587402

Token 348: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9106110334396362
    2. ' le' → logprob: -1.0356110334396362
    3. ' l' → logprob: -1.9106110334396362
    4. '()' → logprob: -3.660611152648926
    5. '_le' → logprob: -4.285611152648926
    6. '_' → logprob: -4.410611152648926
    7. 'le' → logprob: -4.410611152648926
    8. ' ' → logprob: -5.160611152648926
    9. ' the' → logprob: -5.535611152648926
    10. 'l' → logprob: -5.785611152648926

Token 349: ' tampon' (ID: 176995)
  Prédit: ' tampon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tampon' → logprob: -0.4564807415008545
    2. ' tam' → logprob: -1.4564807415008545
    3. ' code' → logprob: -2.7064807415008545
    4. ' space' → logprob: -3.9564807415008545
    5. 'tam' → logprob: -4.081480979919434
    6. ' ' → logprob: -5.331480979919434
    7. ' ' → logprob: -5.956480979919434
    8. ' espace' → logprob: -6.206480979919434
    9. ' patch' → logprob: -6.331480979919434
    10. ' color' → logprob: -6.456480979919434

Token 350: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16922618448734283
    2. ',' → logprob: -2.6692261695861816
    3. ' ,' → logprob: -3.9192261695861816
    4. ')' → logprob: -4.169226169586182
    5. '_' → logprob: -4.419226169586182
    6. ' sur' → logprob: -4.669226169586182
    7. ' à' → logprob: -5.169226169586182
    8. '.' → logprob: -5.919226169586182
    9. 's' → logprob: -5.919226169586182
    10. ' (' → logprob: -6.169226169586182

Token 351: ' obten' (ID: 28150)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.0163555145263672
    2. ' puis' → logprob: -1.1413555145263672
    3. ' et' → logprob: -2.891355514526367
    4. ' obt' → logprob: -3.016355514526367
    5. '#' → logprob: -3.266355514526367
    6. 'on' → logprob: -3.516355514526367
    7. ' met' → logprob: -3.516355514526367
    8. ' obten' → logprob: -3.766355514526367
    9. ' calc' → logprob: -3.766355514526367
    10. ' rec' → logprob: -4.891355514526367

Token 352: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.7076917290687561
    2. 'e' → logprob: -1.5826916694641113
    3. 't' → logprob: -1.5826916694641113
    4. 'u' → logprob: -2.4576916694641113
    5. 'ue' → logprob: -5.207691669464111
    6. 'd' → logprob: -5.957691669464111
    7. 'a' → logprob: -6.332691669464111
    8. '#' → logprob: -8.33269214630127
    9. 'ent' → logprob: -9.08269214630127
    10. 'é' → logprob: -9.08269214630127

Token 353: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.0058157374151051044
    2. 'un' → logprob: -6.005815505981445
    3. ' une' → logprob: -6.380815505981445
    4. '_' → logprob: -7.505815505981445
    5. ' ' → logprob: -8.005815505981445
    6. ' le' → logprob: -8.505815505981445
    7. ' ' → logprob: -8.755815505981445
    8. ' l' → logprob: -9.005815505981445
    9. ' u' → logprob: -9.630815505981445
    10. 's' → logprob: -10.255815505981445

Token 354: ' nouvel' (ID: 76298)
  Prédit: ' nouvel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nouvel' → logprob: -0.013271404430270195
    2. 'nou' → logprob: -4.513271331787109
    3. ' nou' → logprob: -7.263271331787109
    4. ' nouveau' → logprob: -7.513271331787109
    5. ' nouv' → logprob: -7.638271331787109
    6. ' new' → logprob: -8.76327133178711
    7. ' état' → logprob: -9.13827133178711
    8. 'n' → logprob: -10.26327133178711
    9. ' nouvelle' → logprob: -10.26327133178711
    10. '```' → logprob: -10.63827133178711

Token 355: ' état' (ID: 59181)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.005446008872240782
    2. ' _' → logprob: -5.255445957183838
    3. ' espace' → logprob: -9.255446434020996
    4. ' état' → logprob: -9.755446434020996
    5. ' ' → logprob: -11.130446434020996
    6. '_s' → logprob: -11.880446434020996
    7. ''état' → logprob: -12.130446434020996
    8. '_e' → logprob: -12.505446434020996
    9. ' ' → logprob: -12.880446434020996
    10. 'e' → logprob: -13.005446434020996

Token 356: '.
' (ID: 558)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5507790446281433
    2. ',' → logprob: -1.050779104232788
    3. '
' → logprob: -4.175778865814209
    4. ')' → logprob: -4.300778865814209
    5. '.' → logprob: -4.425778865814209
    6. ' _' → logprob: -4.550778865814209
    7. ' ,' → logprob: -4.925778865814209
    8. '<|end|>' → logprob: -5.425778865814209
    9. ',
' → logprob: -6.675778865814209
    10. ':' → logprob: -6.925778865814209

Token 357: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7028793096542358
    2. '<|end|>' → logprob: -1.8278793096542358
    3. ')' → logprob: -2.5778794288635254
    4. '_' → logprob: -2.8278794288635254
    5. '\' → logprob: -2.9528794288635254
    6. ',' → logprob: -3.3278794288635254
    7. '.' → logprob: -3.4528794288635254
    8. '
' → logprob: -3.9528794288635254
    9. '<|end|>' → logprob: -4.077879428863525
    10. '[' → logprob: -4.577879428863525

Token 358: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7621970176696777
    2. '#' → logprob: -1.1371970176696777
    3. 'def' → logprob: -2.2621970176696777
    4. 'import' → logprob: -3.8871970176696777
    5. ' ' → logprob: -4.137197017669678
    6. ',' → logprob: -4.387197017669678
    7. '
' → logprob: -4.512197017669678
    8. 'from' → logprob: -4.512197017669678
    9. ' )' → logprob: -5.137197017669678
    10. ' 
' → logprob: -5.512197017669678

Token 359: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4477068781852722
    2. 'On' → logprob: -2.197706937789917
    3. 'En' → logprob: -2.447706937789917
    4. 'Ajouter' → logprob: -3.072706937789917
    5. 'from' → logprob: -3.572706937789917
    6. 'enqueue' → logprob: -4.072706699371338
    7. 'import' → logprob: -5.072706699371338
    8. ' En' → logprob: -5.322706699371338
    9. ' enqueue' → logprob: -5.322706699371338
    10. ' Ajouter' → logprob: -5.322706699371338

Token 360: ' rép' (ID: 64372)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.5288786888122559
    2. 'continue' → logprob: -2.153878688812256
    3. ' ajoute' → logprob: -2.903878688812256
    4. ' explore' → logprob: -3.153878688812256
    5. 'enqueue' → logprob: -3.153878688812256
    6. 'aj' → logprob: -3.653878688812256
    7. ' met' → logprob: -3.653878688812256
    8. 'expl' → logprob: -4.278878688812256
    9. ' visite' → logprob: -4.528878688812256
    10. ' enqueue' → logprob: -4.653878688812256

Token 361: 'ète' (ID: 28789)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -1.1003469228744507
    2. 'e' → logprob: -1.4753469228744507
    3. 'r' → logprob: -2.1003470420837402
    4. 'é' → logprob: -2.7253470420837402
    5. 'ort' → logprob: -3.7253470420837402
    6. 'os' → logprob: -3.9753470420837402
    7. 'orte' → logprob: -3.9753470420837402
    8. 'ro' → logprob: -4.22534704208374
    9. 'lace' → logprob: -4.22534704208374
    10. 'éc' → logprob: -4.47534704208374

Token 362: ' jusqu' (ID: 21961)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5190274119377136
    2. ' ' → logprob: -1.1440274715423584
    3. 'e' → logprob: -4.019027233123779
    4. ',' → logprob: -4.144027233123779
    5. ':' → logprob: -4.394027233123779
    6. '\' → logprob: -4.644027233123779
    7. 's' → logprob: -5.269027233123779
    8. '   ' → logprob: -5.394027233123779
    9. '\n' → logprob: -5.519027233123779
    10. '.' → logprob: -5.894027233123779

Token 363: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.643610954284668
    2. '_' → logprob: -0.893610954284668
    3. ''' → logprob: -3.893610954284668
    4. ''au' → logprob: -4.393610954284668
    5. 'à' → logprob: -4.768610954284668
    6. '’à' → logprob: -5.018610954284668
    7. ' d' → logprob: -6.018610954284668
    8. '#' → logprob: -6.018610954284668
    9. ' de' → logprob: -6.268610954284668
    10. ' à' → logprob: -6.518610954284668

Token 364: ' l' (ID: 305)
  Prédit: ' ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ce' → logprob: -0.9684966206550598
    2. 'l' → logprob: -1.343496561050415
    3. 'ce' → logprob: -2.093496561050415
    4. 'la' → logprob: -2.718496561050415
    5. '#' → logprob: -3.843496561050415
    6. ' trouver' → logprob: -3.843496561050415
    7. 'tr' → logprob: -3.968496561050415
    8. 'ob' → logprob: -4.093496799468994
    9. 'atte' → logprob: -4.343496799468994
    10. ' la' → logprob: -4.593496799468994

Token 365: ''état' (ID: 116357)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05596262589097023
    2. ''état' → logprob: -3.180962562561035
    3. 'e' → logprob: -5.555962562561035
    4. ''' → logprob: -5.930962562561035
    5. ''é' → logprob: -6.555962562561035
    6. ''a' → logprob: -7.055962562561035
    7. 'é' → logprob: -7.555962562561035
    8. 'i' → logprob: -7.805962562561035
    9. 'égal' → logprob: -8.305962562561035
    10. 'ég' → logprob: -8.305962562561035

Token 366: ' final' (ID: 1721)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.45137226581573486
    2. 'final' → logprob: -2.4513721466064453
    3. '_final' → logprob: -2.4513721466064453
    4. ' final' → logprob: -2.7013721466064453
    5. '_target' → logprob: -3.0763721466064453
    6. '_c' → logprob: -3.0763721466064453
    7. ' cible' → logprob: -4.576372146606445
    8. ' ==' → logprob: -5.201372146606445
    9. ' target' → logprob: -5.826372146606445
    10. ' _' → logprob: -6.451372146606445

Token 367: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22093568742275238
    2. ')' → logprob: -2.845935583114624
    3. '.' → logprob: -3.345935583114624
    4. ',' → logprob: -3.470935583114624
    5. '#' → logprob: -3.970935583114624
    6. '_' → logprob: -4.220935821533203
    7. 'def' → logprob: -4.345935821533203
    8. 'import' → logprob: -5.095935821533203
    9. '):' → logprob: -5.095935821533203
    10. ':
' → logprob: -5.595935821533203

Token 368: '#' (ID: 2)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.3268311023712158
    2. 'def' → logprob: -1.7018311023712158
    3. ':' → logprob: -1.8268311023712158
    4. 'import' → logprob: -2.201831102371216
    5. '#' → logprob: -2.951831102371216
    6. ' ' → logprob: -3.076831102371216
    7. ' 
' → logprob: -3.576831102371216
    8. '(' → logprob: -3.826831102371216
    9. '\' → logprob: -3.826831102371216
    10. ')' → logprob: -3.951831102371216

Token 369: ' 
' (ID: 793)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6546962857246399
    2. 'def' → logprob: -0.7796962857246399
    3. 'import' → logprob: -5.029696464538574
    4. 'from' → logprob: -5.404696464538574
    5. '#' → logprob: -6.029696464538574
    6. 'de' → logprob: -6.279696464538574
    7. ')' → logprob: -6.279696464538574
    8. '(' → logprob: -6.654696464538574
    9. ':' → logprob: -7.154696464538574
    10. ' ' → logprob: -7.404696464538574

Token 370: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23332226276397705
    2. 'd' → logprob: -2.1083221435546875
    3. 'import' → logprob: -2.6083221435546875
    4. 'from' → logprob: -4.4833221435546875
    5. '#' → logprob: -7.2333221435546875
    6. 'de' → logprob: -8.108322143554688
    7. 'D' → logprob: -8.608322143554688
    8. '```' → logprob: -8.733322143554688
    9. 'i' → logprob: -9.983322143554688
    10. 'dé' → logprob: -10.108322143554688

Token 371: ' optimisation' (ID: 139802)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13572001457214355
    2. 'import' → logprob: -2.1357200145721436
    3. 'from' → logprob: -4.760720252990723
    4. '```' → logprob: -9.135720252990723
    5. '#' → logprob: -9.510720252990723
    6. 'D' → logprob: -13.010720252990723
    7. 'dé' → logprob: -13.135720252990723
    8. 'n' → logprob: -13.635720252990723
    9. 'Dé' → logprob: -13.885720252990723
    10. 'N' → logprob: -14.135720252990723

Token 372: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28331318497657776
    2. ':' → logprob: -2.033313274383545
    3. ' :' → logprob: -2.783313274383545
    4. 's' → logprob: -3.408313274383545
    5. '_' → logprob: -4.658313274383545
    6. '=' → logprob: -5.158313274383545
    7. '#' → logprob: -6.783313274383545
    8. ' #' → logprob: -7.158313274383545
    9. ' :
' → logprob: -7.533313274383545
    10. ' =
' → logprob: -7.658313274383545

Token 373: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.011145438067615032
    2. ' #' → logprob: -5.38614559173584
    3. 'Util' → logprob: -6.13614559173584
    4. 'On' → logprob: -6.38614559173584
    5. ' Util' → logprob: -6.76114559173584
    6. ' utiliser' → logprob: -8.01114559173584
    7. ' On' → logprob: -8.13614559173584
    8. 'import' → logprob: -8.76114559173584
    9. 'Pour' → logprob: -8.88614559173584
    10. ' on' → logprob: -9.01114559173584

Token 374: ' -' (ID: 533)
  Prédit: 'Util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Util' → logprob: -1.7263615131378174
    2. ' Util' → logprob: -1.7263615131378174
    3. 'import' → logprob: -2.3513615131378174
    4. 'from' → logprob: -2.3513615131378174
    5. ' utiliser' → logprob: -2.4763615131378174
    6. '#' → logprob: -2.6013615131378174
    7. 'On' → logprob: -2.8513615131378174
    8. ' On' → logprob: -2.9763615131378174
    9. ' Pr' → logprob: -3.3513615131378174
    10. 'Pr' → logprob: -3.7263615131378174

Token 375: ' La' (ID: 3038)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.1771519184112549
    2. 'Util' → logprob: -1.4271519184112549
    3. 'On' → logprob: -1.9271519184112549
    4. 'import' → logprob: -2.052151918411255
    5. 'Pr' → logprob: -3.177151918411255
    6. 'Pour' → logprob: -3.677151918411255
    7. 'util' → logprob: -3.802151918411255
    8. 'memo' → logprob: -4.177151679992676
    9. ' utiliser' → logprob: -4.177151679992676
    10. 'on' → logprob: -4.677151679992676

Token 376: ' taille' (ID: 41644)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.4690699279308319
    2. 'mé' → logprob: -1.7190699577331543
    3. 're' → logprob: -2.3440699577331543
    4. 'memo' → logprob: -3.7190699577331543
    5. '#' → logprob: -4.469069957733154
    6. 'm' → logprob: -4.969069957733154
    7. ' recherche' → logprob: -4.969069957733154
    8. 'raison' → logprob: -5.219069957733154
    9. 'pr' → logprob: -5.469069957733154
    10. 'r' → logprob: -5.719069957733154

Token 377: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2608542740345001
    2. ' des' → logprob: -2.6358542442321777
    3. ' du' → logprob: -2.6358542442321777
    4. ' limitée' → logprob: -4.385854244232178
    5. ' maximale' → logprob: -4.510854244232178
    6. ' limit' → logprob: -4.510854244232178
    7. ' d' → logprob: -4.760854244232178
    8. ' _' → logprob: -4.760854244232178
    9. ' s' → logprob: -4.885854244232178
    10. ' limite' → logprob: -5.260854244232178

Token 378: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.07904037833213806
    2. ' l' → logprob: -3.079040288925171
    3. 'la' → logprob: -3.579040288925171
    4. ' la' → logprob: -6.95404052734375
    5. 'cha' → logprob: -7.95404052734375
    6. ' chaque' → logprob: -8.95404052734375
    7. ' ' → logprob: -9.20404052734375
    8. 'search' → logprob: -9.57904052734375
    9. ' search' → logprob: -9.70404052734375
    10. 't' → logprob: -9.95404052734375

Token 379: ''espace' (ID: 118124)
  Prédit: ''état'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''état' → logprob: -0.5679244995117188
    2. ''' → logprob: -1.1929244995117188
    3. ''é' → logprob: -3.4429244995117188
    4. 'é' → logprob: -4.192924499511719
    5. 'e' → logprob: -4.317924499511719
    6. '#' → logprob: -4.817924499511719
    7. ''espace' → logprob: -4.942924499511719
    8. 'gr' → logprob: -5.192924499511719
    9. ' #' → logprob: -5.192924499511719
    10. 'a' → logprob: -5.442924499511719

Token 380: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.11986014991998672
    2. ' d' → logprob: -2.2448601722717285
    3. ' des' → logprob: -6.1198601722717285
    4. '_' → logprob: -6.3698601722717285
    5. ' _' → logprob: -6.7448601722717285
    6. ' search' → logprob: -7.9948601722717285
    7. ' limitée' → logprob: -8.11985969543457
    8. 'de' → logprob: -8.24485969543457
    9. ' est' → logprob: -8.61985969543457
    10. ' ' → logprob: -8.74485969543457

Token 381: ''état' (ID: 116357)
  Prédit: 'ét'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ét' → logprob: -0.3425362706184387
    2. ''état' → logprob: -1.967536211013794
    3. '#' → logprob: -3.342536211013794
    4. ' recherche' → logprob: -3.592536211013794
    5. 'l' → logprob: -3.842536211013794
    6. ' l' → logprob: -4.092536449432373
    7. 're' → logprob: -4.342536449432373
    8. ''ét' → logprob: -4.717536449432373
    9. 'e' → logprob: -5.592536449432373
    10. ' états' → logprob: -6.092536449432373

Token 382: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.8133392930030823
    2. '_' → logprob: -1.3133392333984375
    3. ' =' → logprob: -2.6883392333984375
    4. ' ' → logprob: -2.8133392333984375
    5. ' _' → logprob: -3.6883392333984375
    6. ' s' → logprob: -3.6883392333984375
    7. ' complète' → logprob: -4.4383392333984375
    8. 'e' → logprob: -4.5633392333984375
    9. ' ' → logprob: -4.9383392333984375
    10. ' de' → logprob: -4.9383392333984375

Token 383: ' grosse' (ID: 77662)
  Prédit: ' limitée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' limitée' → logprob: -0.37862899899482727
    2. 'limit' → logprob: -2.378628969192505
    3. ' trop' → logprob: -2.753628969192505
    4. ' limité' → logprob: -3.003628969192505
    5. 'raison' → logprob: -4.128629207611084
    6. 'lim' → logprob: -4.253629207611084
    7. ' rédu' → logprob: -4.253629207611084
    8. 'tr' → logprob: -4.378629207611084
    9. ' limit' → logprob: -5.003629207611084
    10. ' très' → logprob: -5.003629207611084

Token 384: ' (' (ID: 350)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8857614398002625
    2. ',' → logprob: -1.7607614994049072
    3. '.' → logprob: -1.7607614994049072
    4. 'r' → logprob: -2.1357614994049072
    5. 'ur' → logprob: -3.6357614994049072
    6. ' ,' → logprob: -3.7607614994049072
    7. ' e' → logprob: -4.010761260986328
    8. ' ' → logprob: -4.260761260986328
    9. 'u' → logprob: -4.885761260986328
    10. '#' → logprob: -5.260761260986328

Token 385: '3' (ID: 18)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -2.150299072265625
    2. 'l' → logprob: -2.400299072265625
    3. 'm' → logprob: -2.900299072265625
    4. 'c' → logprob: -3.150299072265625
    5. ' l' → logprob: -3.150299072265625
    6. ' très' → logprob: -3.150299072265625
    7. 'ex' → logprob: -3.275299072265625
    8. 't' → logprob: -3.275299072265625
    9. ' )' → logprob: -3.462799072265625
    10. ' exponent' → logprob: -3.462799072265625

Token 386: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.37689584493637085
    2. '^' → logprob: -1.5018959045410156
    3. ' **' → logprob: -2.5018959045410156
    4. ' ^' → logprob: -5.501895904541016
    5. '^{' → logprob: -6.876895904541016
    6. '0' → logprob: -7.251895904541016
    7. '6' → logprob: -7.626895904541016
    8. '*' → logprob: -7.626895904541016
    9. '**)' → logprob: -7.876895904541016
    10. ')' → logprob: -8.001895904541016

Token 387: '16' (ID: 1125)
  Prédit: '16'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '16' → logprob: -0.010697120800614357
    2. '4' → logprob: -5.135696887969971
    3. ' ' → logprob: -5.760696887969971
    4. '^' → logprob: -7.010696887969971
    5. '(' → logprob: -9.010697364807129
    6. '*' → logprob: -9.260697364807129
    7. '
' → logprob: -9.385697364807129
    8. '1' → logprob: -9.885697364807129
    9. '^{' → logprob: -9.885697364807129
    10. '0' → logprob: -10.260697364807129

Token 388: ' ~' (ID: 6574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00849070306867361
    2. ' )' → logprob: -5.758490562438965
    3. '),' → logprob: -6.133490562438965
    4. '+' → logprob: -7.133490562438965
    5. '**' → logprob: -7.133490562438965
    6. ')**' → logprob: -7.883490562438965
    7. ')+' → logprob: -8.008490562438965
    8. '+)' → logprob: -8.258490562438965
    9. ',' → logprob: -9.133490562438965
    10. ').' → logprob: -9.258490562438965

Token 389: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.27920570969581604
    2. ' ' → logprob: -2.779205799102783
    3. '4' → logprob: -3.404205799102783
    4. '1' → logprob: -3.529205799102783
    5. '100' → logprob: -3.779205799102783
    6. '655' → logprob: -3.904205799102783
    7. '7' → logprob: -4.029205799102783
    8. '2' → logprob: -4.029205799102783
    9. '430' → logprob: -5.279205799102783
    10. '700' → logprob: -5.404205799102783

Token 390: '43' (ID: 5320)
  Prédit: '430'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '430' → logprob: -0.005915404763072729
    2. '4' → logprob: -6.630915641784668
    3. '450' → logprob: -7.005915641784668
    4. '=' → logprob: -7.630915641784668
    5. '(' → logprob: -7.755915641784668
    6. '100' → logprob: -7.880915641784668
    7. '435' → logprob: -8.130915641784668
    8. '429' → logprob: -8.130915641784668
    9. '456' → logprob: -8.255915641784668
    10. '1' → logprob: -8.505915641784668

Token 391: ' millions' (ID: 15568)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.6373412609100342
    2. ' **' → logprob: -1.6373412609100342
    3. '^' → logprob: -2.262341260910034
    4. ')' → logprob: -2.512341260910034
    5. '0' → logprob: -4.262341499328613
    6. '7' → logprob: -4.387341499328613
    7. '6' → logprob: -4.637341499328613
    8. '2' → logprob: -4.637341499328613
    9. ' ' → logprob: -4.887341499328613
    10. ' )' → logprob: -5.012341499328613

Token 392: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025476007722318172
    2. ' )' → logprob: -6.502547740936279
    3. '),' → logprob: -7.877547740936279
    4. ',' → logprob: -8.752547264099121
    5. ')
' → logprob: -9.127547264099121
    6. ').' → logprob: -9.377547264099121
    7. '#' → logprob: -9.627547264099121
    8. ')#' → logprob: -9.752547264099121
    9. '+' → logprob: -10.002547264099121
    10. ' states' → logprob: -10.877547264099121

Token 393: ' mais' (ID: 2899)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5204479694366455
    2. ' mais' → logprob: -1.0204479694366455
    3. ' but' → logprob: -3.6454479694366455
    4. ' #' → logprob: -4.145447731018066
    5. 'mais' → logprob: -6.645447731018066
    6. ' donc' → logprob: -7.020447731018066
    7. ' ' → logprob: -8.270447731018066
    8. 'but' → logprob: -8.270447731018066
    9. ' ' → logprob: -8.645447731018066
    10. ' il' → logprob: -8.895447731018066

Token 394: ' la' (ID: 557)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.9539685249328613
    2. ' la' → logprob: -1.0789685249328613
    3. ' l' → logprob: -2.7039685249328613
    4. ' le' → logprob: -2.7039685249328613
    5. 'le' → logprob: -3.5789685249328613
    6. '#' → logprob: -3.8289685249328613
    7. 'on' → logprob: -4.453968524932861
    8. ' nous' → logprob: -4.578968524932861
    9. ' une' → logprob: -4.703968524932861
    10. 'l' → logprob: -4.703968524932861

Token 395: ' recherche' (ID: 24975)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -1.087797999382019
    2. '#' → logprob: -1.462797999382019
    3. 'import' → logprob: -2.2127981185913086
    4. 'mé' → logprob: -3.0877981185913086
    5. ' recherche' → logprob: -3.0877981185913086
    6. 'from' → logprob: -3.2127981185913086
    7. ' taille' → logprob: -3.4627981185913086
    8. 're' → logprob: -3.9627981185913086
    9. ' #' → logprob: -4.587798118591309
    10. 'pr' → logprob: -4.962798118591309

Token 396: ' sera' (ID: 15511)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.1933412551879883
    2. ' peut' → logprob: -2.0683412551879883
    3. '<|end|>' → logprob: -2.0683412551879883
    4. ' est' → logprob: -2.5683412551879883
    5. ' continue' → logprob: -2.5683412551879883
    6. ' ' → logprob: -2.5683412551879883
    7. ' se' → logprob: -3.8183412551879883
    8. ' complète' → logprob: -3.9433412551879883
    9. ' pourra' → logprob: -4.193341255187988
    10. 'n' → logprob: -4.568341255187988

Token 397: ' rédu' (ID: 42105)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.2681204080581665
    2. ' limitée' → logprob: -1.8931204080581665
    3. 'limit' → logprob: -4.768120288848877
    4. ' guid' → logprob: -5.393120288848877
    5. ' coup' → logprob: -5.518120288848877
    6. ' possible' → logprob: -5.518120288848877
    7. ' pruning' → logprob: -5.643120288848877
    8. ' pr' → logprob: -5.643120288848877
    9. ' limité' → logprob: -5.643120288848877
    10. ' prune' → logprob: -5.768120288848877

Token 398: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.006433394737541676
    2. 'uite' → logprob: -5.631433486938477
    3. '
' → logprob: -7.381433486938477
    4. '#' → logprob: -7.756433486938477
    5. 'it' → logprob: -7.881433486938477
    6. 'e' → logprob: -8.506433486938477
    7. '   ' → logprob: -8.631433486938477
    8. 'ie' → logprob: -9.381433486938477
    9. '<' → logprob: -9.381433486938477
    10. '</' → logprob: -9.756433486938477

Token 399: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.8424775004386902
    2. ' à' → logprob: -1.092477560043335
    3. 'e' → logprob: -2.342477560043335
    4. 'import' → logprob: -3.467477560043335
    5. ' ' → logprob: -3.842477560043335
    6. ' by' → logprob: -3.967477560043335
    7. '<|end|>' → logprob: -4.092477321624756
    8. ',' → logprob: -4.967477321624756
    9. '.' → logprob: -5.092477321624756
    10. ' de' → logprob: -5.592477321624756

Token 400: ' mé' (ID: 11291)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9301690459251404
    2. 'l' → logprob: -1.0551691055297852
    3. ' l' → logprob: -1.8051691055297852
    4. 'la' → logprob: -2.430169105529785
    5. ' pruning' → logprob: -6.430169105529785
    6. ' une' → logprob: -6.805169105529785
    7. ' des' → logprob: -7.180169105529785
    8. 'pr' → logprob: -8.680169105529785
    9. 'import' → logprob: -8.805169105529785
    10. 'une' → logprob: -8.805169105529785

Token 401: 'mo' (ID: 3690)
  Prédit: 'mo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mo' → logprob: -0.06255462020635605
    2. 'moire' → logprob: -3.3125545978546143
    3. 'm' → logprob: -4.312554836273193
    4. 'mor' → logprob: -4.812554836273193
    5. '
' → logprob: -7.562554836273193
    6. ']' → logprob: -8.062554359436035
    7. '#' → logprob: -8.312554359436035
    8. '```' → logprob: -8.812554359436035
    9. 'mog' → logprob: -9.062554359436035
    10. '%' → logprob: -9.312554359436035

Token 402: 'ïs' (ID: 96230)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7722269296646118
    2. 'n' → logprob: -1.1472269296646118
    3. '_' → logprob: -2.5222268104553223
    4. 'ization' → logprob: -3.3972268104553223
    5. 's' → logprob: -3.7722268104553223
    6. 'r' → logprob: -3.8972268104553223
    7. '#' → logprob: -4.522226810455322
    8. ' ' → logprob: -4.772226810455322
    9. 'ry' → logprob: -4.772226810455322
    10. 'z' → logprob: -5.397226810455322

Token 403: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.6240562200546265
    2. 'ration' → logprob: -1.6240562200546265
    3. 'r' → logprob: -1.9990562200546265
    4. 't' → logprob: -3.499056339263916
    5. 'z' → logprob: -4.124056339263916
    6. '#' → logprob: -4.124056339263916
    7. 's' → logprob: -4.249056339263916
    8. 'def' → logprob: -4.499056339263916
    9. 'é' → logprob: -5.249056339263916
    10. 'tion' → logprob: -5.249056339263916

Token 404: ' et' (ID: 859)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.5479778051376343
    2. 'def' → logprob: -1.6729778051376343
    3. '_' → logprob: -2.172977924346924
    4. ' ' → logprob: -2.422977924346924
    5. 'import' → logprob: -2.422977924346924
    6. ':' → logprob: -3.047977924346924
    7. '<|end|>' → logprob: -3.047977924346924
    8. '\' → logprob: -3.422977924346924
    9. ',' → logprob: -3.422977924346924
    10. ' 
' → logprob: -3.797977924346924

Token 405: ' pruning' (ID: 135775)
  Prédit: ' pruning'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pruning' → logprob: -0.17303697764873505
    2. 'pr' → logprob: -2.423037052154541
    3. ' la' → logprob: -3.923037052154541
    4. ' heur' → logprob: -4.173037052154541
    5. ' l' → logprob: -4.548037052154541
    6. 'l' → logprob: -5.923037052154541
    7. '
' → logprob: -6.048037052154541
    8. ' prune' → logprob: -6.048037052154541
    9. 'heur' → logprob: -6.298037052154541
    10. ' pr' → logprob: -6.298037052154541

Token 406: '.
' (ID: 558)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -2.0807037353515625
    2. '
' → logprob: -2.2057037353515625
    3. '#' → logprob: -2.3307037353515625
    4. ' ' → logprob: -2.3307037353515625
    5. 'def' → logprob: -2.4557037353515625
    6. '\' → logprob: -2.5807037353515625
    7. '<|end|>' → logprob: -2.5807037353515625
    8. ':' → logprob: -2.7057037353515625
    9. ',' → logprob: -2.8307037353515625
    10. ' 
' → logprob: -3.4557037353515625

Token 407: '#' (ID: 2)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.2231603860855103
    2. '
' → logprob: -1.5981603860855103
    3. ' 
' → logprob: -1.9731603860855103
    4. 'def' → logprob: -1.9731603860855103
    5. '\n' → logprob: -3.2231602668762207
    6. 'd' → logprob: -3.4731602668762207
    7. ' ' → logprob: -3.7231602668762207
    8. '  
' → logprob: -3.7231602668762207
    9. '' → logprob: -3.8481602668762207
    10. 'import' → logprob: -3.9731602668762207

Token 408: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7584426403045654
    2. 'd' → logprob: -1.5084426403045654
    3. ' 
' → logprob: -2.6334426403045654
    4. ' ' → logprob: -2.7584426403045654
    5. '
' → logprob: -3.0084426403045654
    6. '#' → logprob: -3.3834426403045654
    7. '\' → logprob: -3.5084426403045654
    8. 'import' → logprob: -3.8834426403045654
    9. ':' → logprob: -4.6334428787231445
    10. '  
' → logprob: -5.0084428787231445

Token 409: ' On' (ID: 2160)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8311784863471985
    2. 'def' → logprob: -0.8311784863471985
    3. 'from' → logprob: -2.0811784267425537
    4. '#' → logprob: -5.581178665161133
    5. ' from' → logprob: -9.081178665161133
    6. ' 
' → logprob: -9.956178665161133
    7. '
' → logprob: -10.206178665161133
    8. ' import' → logprob: -10.331178665161133
    9. '```' → logprob: -10.456178665161133
    10. 'dé' → logprob: -11.081178665161133

Token 410: ' év' (ID: 23692)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.706762671470642
    2. ' continue' → logprob: -1.706762671470642
    3. 'continue' → logprob: -1.956762671470642
    4. '#' → logprob: -2.3317627906799316
    5. 'pe' → logprob: -2.5817627906799316
    6. ' peut' → logprob: -2.7067627906799316
    7. '_' → logprob: -2.8317627906799316
    8. 'contin' → logprob: -3.8317627906799316
    9. ' va' → logprob: -3.8317627906799316
    10. 'util' → logprob: -3.9567627906799316

Token 411: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.09402012079954147
    2. 'itera' → logprob: -2.469020128250122
    3. 'a' → logprob: -6.844019889831543
    4. 'iter' → logprob: -6.969019889831543
    5. '#' → logprob: -7.094019889831543
    6. 'ité' → logprob: -7.844019889831543
    7. 'it' → logprob: -8.219019889831543
    8. 'al' → logprob: -8.469019889831543
    9. 'ide' → logprob: -8.719019889831543
    10. 'itere' → logprob: -8.844019889831543

Token 412: ' de' (ID: 334)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.40677398443222046
    2. ' d' → logprob: -1.9067740440368652
    3. 'les' → logprob: -2.7817740440368652
    4. ' l' → logprob: -3.2817740440368652
    5. ' de' → logprob: -3.4067740440368652
    6. 'd' → logprob: -3.7817740440368652
    7. ' la' → logprob: -4.281774044036865
    8. '_' → logprob: -5.906774044036865
    9. 'l' → logprob: -6.156774044036865
    10. '_de' → logprob: -6.281774044036865

Token 413: ' refaire' (ID: 182834)
  Prédit: 'expl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expl' → logprob: -1.4789241552352905
    2. 'contin' → logprob: -1.6039241552352905
    3. 're' → logprob: -2.10392427444458
    4. ' continuer' → logprob: -2.10392427444458
    5. ' explorer' → logprob: -3.10392427444458
    6. ' visiter' → logprob: -3.22892427444458
    7. 'mettre' → logprob: -3.35392427444458
    8. 'vis' → logprob: -3.72892427444458
    9. 'repr' → logprob: -3.72892427444458
    10. ' revis' → logprob: -3.85392427444458

Token 414: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.34869882464408875
    2. ' ' → logprob: -1.8486988544464111
    3. ' des' → logprob: -2.473698854446411
    4. ' l' → logprob: -3.348698854446411
    5. ' states' → logprob: -5.598698616027832
    6. ' le' → logprob: -6.098698616027832
    7. 'les' → logprob: -6.098698616027832
    8. ' la' → logprob: -6.223698616027832
    9. 's' → logprob: -6.348698616027832
    10. ' états' → logprob: -7.223698616027832

Token 415: ' états' (ID: 184259)
  Prédit: ' états'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' états' → logprob: -0.19845518469810486
    2. ' appels' → logprob: -2.5734550952911377
    3. ' visites' → logprob: -3.1984550952911377
    4. ' states' → logprob: -4.448455333709717
    5. 'ét' → logprob: -4.573455333709717
    6. ' calcul' → logprob: -4.948455333709717
    7. 'states' → logprob: -4.948455333709717
    8. 'calcul' → logprob: -5.073455333709717
    9. 'visited' → logprob: -6.073455333709717
    10. ' ' → logprob: -6.198455333709717

Token 416: ' déjà' (ID: 21229)
  Prédit: ' vus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vus' → logprob: -0.8746945261955261
    2. '_' → logprob: -0.9996945261955261
    3. 's' → logprob: -2.874694585800171
    4. ' visited' → logprob: -3.624694585800171
    5. ' vues' → logprob: -3.999694585800171
    6. '_v' → logprob: -4.124694347381592
    7. ',' → logprob: -4.249694347381592
    8. ' ' → logprob: -4.374694347381592
    9. ' visit' → logprob: -4.749694347381592
    10. 'visited' → logprob: -4.874694347381592

Token 417: ' rencontr' (ID: 49751)
  Prédit: 'vis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vis' → logprob: -0.5112544298171997
    2. ' vus' → logprob: -2.13625431060791
    3. ' explor' → logprob: -2.63625431060791
    4. 'visit' → logprob: -2.76125431060791
    5. 'vus' → logprob: -2.88625431060791
    6. 'expl' → logprob: -3.01125431060791
    7. 'vist' → logprob: -4.63625431060791
    8. 'visited' → logprob: -4.63625431060791
    9. ' rencontr' → logprob: -4.88625431060791
    10. ' visit' → logprob: -4.88625431060791

Token 418: 'és' (ID: 1756)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.014256240800023079
    2. 'és' → logprob: -4.764256477355957
    3. 'u' → logprob: -5.264256477355957
    4. 'is' → logprob: -8.764256477355957
    5. 'es' → logprob: -9.014256477355957
    6. 'ues' → logprob: -9.389256477355957
    7. 'ús' → logprob: -10.889256477355957
    8. '```' → logprob: -10.889256477355957
    9. 'é' → logprob: -11.139256477355957
    10. 'eus' → logprob: -11.514256477355957

Token 419: '.
' (ID: 558)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8631277084350586
    2. ')' → logprob: -2.1131277084350586
    3. ':' → logprob: -2.3631277084350586
    4. 'def' → logprob: -2.6131277084350586
    5. '
' → logprob: -2.6131277084350586
    6. 'import' → logprob: -2.9881277084350586
    7. ' ' → logprob: -3.3631277084350586
    8. ',' → logprob: -3.6131277084350586
    9. ' 
' → logprob: -3.8631277084350586
    10. '#' → logprob: -3.9881277084350586

Token 420: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.7616939544677734
    2. ':' → logprob: -1.8866939544677734
    3. '
' → logprob: -2.0116939544677734
    4. '(' → logprob: -2.3866939544677734
    5. 'd' → logprob: -2.6366939544677734
    6. ')' → logprob: -3.1366939544677734
    7. '```' → logprob: -3.1366939544677734
    8. '_' → logprob: -3.2616939544677734
    9. ',' → logprob: -3.2616939544677734
    10. ' 
' → logprob: -3.5116939544677734

Token 421: ' -' (ID: 533)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.33657461404800415
    2. ' ' → logprob: -1.7115745544433594
    3. ' 
' → logprob: -3.7115745544433594
    4. 'def' → logprob: -3.7115745544433594
    5. '#' → logprob: -4.711574554443359
    6. '[' → logprob: -4.836574554443359
    7. ':' → logprob: -4.836574554443359
    8. 'import' → logprob: -4.961574554443359
    9. '(' → logprob: -5.461574554443359
    10. ')' → logprob: -5.711574554443359

Token 422: ' On' (ID: 2160)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8938441872596741
    2. 'from' → logprob: -0.8938441872596741
    3. 'def' → logprob: -2.3938441276550293
    4. '#' → logprob: -2.7688441276550293
    5. 'visited' → logprob: -3.6438441276550293
    6. 'cache' → logprob: -8.143844604492188
    7. ' from' → logprob: -8.143844604492188
    8. '
' → logprob: -8.643844604492188
    9. ' 
' → logprob: -9.143844604492188
    10. ' visited' → logprob: -9.643844604492188

Token 423: ' peut' (ID: 9216)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.8371723890304565
    2. 'util' → logprob: -1.9621723890304565
    3. ' continue' → logprob: -2.087172508239746
    4. 'import' → logprob: -2.337172508239746
    5. '#' → logprob: -2.962172508239746
    6. 'from' → logprob: -3.712172508239746
    7. 'expl' → logprob: -3.837172508239746
    8. 'contin' → logprob: -3.962172508239746
    9. 'optim' → logprob: -4.337172508239746
    10. ' utilise' → logprob: -4.712172508239746

Token 424: ' stopper' (ID: 154160)
  Prédit: ' utiliser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utiliser' → logprob: -0.2362939417362213
    2. ' continuer' → logprob: -2.2362940311431885
    3. 'import' → logprob: -3.1112940311431885
    4. 'util' → logprob: -3.6112940311431885
    5. 'contin' → logprob: -4.611293792724609
    6. ' ajouter' → logprob: -5.611293792724609
    7. ' stock' → logprob: -6.236293792724609
    8. ''utiliser' → logprob: -6.236293792724609
    9. '#' → logprob: -6.361293792724609
    10. ' import' → logprob: -6.611293792724609

Token 425: ' dès' (ID: 37926)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8083329796791077
    2. ' dès' → logprob: -1.433332920074463
    3. 'l' → logprob: -1.808332920074463
    4. ' early' → logprob: -3.183332920074463
    5. ' l' → logprob: -3.558332920074463
    6. 'la' → logprob: -3.683332920074463
    7. ' tôt' → logprob: -3.933332920074463
    8. 'early' → logprob: -4.933332920074463
    9. 'le' → logprob: -5.058332920074463
    10. ' ici' → logprob: -5.183332920074463

Token 426: ' qu' (ID: 474)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.634595513343811
    2. ' la' → logprob: -2.0095953941345215
    3. ' que' → logprob: -2.6345953941345215
    4. 'l' → logprob: -2.6345953941345215
    5. ' une' → logprob: -2.6345953941345215
    6. 'le' → logprob: -4.0095953941345215
    7. 'que' → logprob: -4.0095953941345215
    8. ' le' → logprob: -4.2595953941345215
    9. 'la' → logprob: -4.3845953941345215
    10. 'une' → logprob: -4.6345953941345215

Token 427: ''on' (ID: 25812)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.7135436534881592
    2. ' l' → logprob: -1.4635436534881592
    3. ' ' → logprob: -2.963543653488159
    4. ' ' → logprob: -3.088543653488159
    5. ' le' → logprob: -3.463543653488159
    6. 'on' → logprob: -3.838543653488159
    7. ''on' → logprob: -3.838543653488159
    8. ' la' → logprob: -3.838543653488159
    9. ' len' → logprob: -4.213543891906738
    10. ' une' → logprob: -4.338543891906738

Token 428: ' trouve' (ID: 30913)
  Prédit: ' trouve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trouve' → logprob: -0.07141683250665665
    2. ' atteint' → logprob: -3.3214168548583984
    3. ' a' → logprob: -4.196416854858398
    4. 'tr' → logprob: -5.196416854858398
    5. '_' → logprob: -5.446416854858398
    6. '_tr' → logprob: -6.196416854858398
    7. ' découvre' → logprob: -6.946416854858398
    8. ' rencontre' → logprob: -7.071416854858398
    9. ' trou' → logprob: -7.321416854858398
    10. 'a' → logprob: -7.321416854858398

Token 429: ' le' (ID: 505)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.7775198221206665
    2. ' un' → logprob: -0.9025198221206665
    3. ' l' → logprob: -2.777519702911377
    4. '_' → logprob: -3.402519702911377
    5. ' la' → logprob: -4.152519702911377
    6. ' le' → logprob: -4.777519702911377
    7. ' ' → logprob: -5.277519702911377
    8. 'le' → logprob: -6.027519702911377
    9. 'un' → logprob: -6.027519702911377
    10. 'une' → logprob: -6.402519702911377

Token 430: ' premier' (ID: 15506)
  Prédit: ' meilleur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' meilleur' → logprob: -0.6077210307121277
    2. ' solution' → logprob: -1.3577210903167725
    3. ' ' → logprob: -1.9827210903167725
    4. ''' → logprob: -3.8577210903167725
    5. ' résultat' → logprob: -5.107720851898193
    6. ' best' → logprob: -5.482720851898193
    7. ' premier' → logprob: -5.732720851898193
    8. ' final' → logprob: -5.982720851898193
    9. 'u' → logprob: -6.357720851898193
    10. ' ' → logprob: -6.357720851898193

Token 431: ' résultat' (ID: 62556)
  Prédit: ' état'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' état' → logprob: -0.35946714878082275
    2. ' ' → logprob: -2.234467029571533
    3. '_' → logprob: -2.734467029571533
    4. ' solution' → logprob: -3.109467029571533
    5. ' meilleur' → logprob: -3.984467029571533
    6. ' É' → logprob: -4.359467029571533
    7. 'é' → logprob: -4.484467029571533
    8. ' optimal' → logprob: -4.734467029571533
    9. 'É' → logprob: -5.359467029571533
    10. ' ' → logprob: -5.359467029571533

Token 432: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0744078159332275
    2. ' ' → logprob: -1.1994078159332275
    3. '
' → logprob: -2.6994078159332275
    4. 'def' → logprob: -2.6994078159332275
    5. '_' → logprob: -3.4494078159332275
    6. ',' → logprob: -3.4494078159332275
    7. 'import' → logprob: -3.8244078159332275
    8. '#' → logprob: -3.9494078159332275
    9. ' 
' → logprob: -3.9494078159332275
    10. ')' → logprob: -4.074407577514648

Token 433: 'car' (ID: 6830)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12782880663871765
    2. ' )' → logprob: -2.25282883644104
    3. ').' → logprob: -5.127828598022461
    4. ' ' → logprob: -6.502828598022461
    5. ' optimal' → logprob: -6.752828598022461
    6. '1' → logprob: -7.377828598022461
    7. 'n' → logprob: -7.627828598022461
    8. ' ).' → logprob: -7.752828598022461
    9. ' optimale' → logprob: -7.752828598022461
    10. 'optimal' → logprob: -7.752828598022461

Token 434: ' recherche' (ID: 24975)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.1204726696014404
    2. ' le' → logprob: -1.7454726696014404
    3. ' l' → logprob: -1.8704726696014404
    4. ' la' → logprob: -1.9954726696014404
    5. ' minimal' → logprob: -2.8704726696014404
    6. ' nous' → logprob: -3.4954726696014404
    7. 'le' → logprob: -3.7454726696014404
    8. 'l' → logprob: -4.6204729080200195
    9. 'on' → logprob: -4.6204729080200195
    10. ')' → logprob: -4.7454729080200195

Token 435: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.6579968333244324
    2. ' approfond' → logprob: -2.657996892929077
    3. ' optimale' → logprob: -2.907996892929077
    4. ' à' → logprob: -3.157996892929077
    5. 'en' → logprob: -3.157996892929077
    6. ' de' → logprob: -3.282996892929077
    7. ' d' → logprob: -3.407996892929077
    8. ')' → logprob: -4.157996654510498
    9. 'prof' → logprob: -4.282996654510498
    10. ' s' → logprob: -4.282996654510498

Token 436: ' BFS' (ID: 190016)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'large' → logprob: -0.06850592792034149
    2. 'pro' → logprob: -3.3185060024261475
    3. 'b' → logprob: -4.443505764007568
    4. ' largeur' → logprob: -5.568505764007568
    5. 'bread' → logprob: -5.568505764007568
    6. 'B' → logprob: -5.693505764007568
    7. 'prof' → logprob: -6.318505764007568
    8. 'larg' → logprob: -6.693505764007568
    9. ' profondeur' → logprob: -6.943505764007568
    10. 'width' → logprob: -7.318505764007568

Token 437: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003304858226329088
    2. ' )' → logprob: -6.003304958343506
    3. ').' → logprob: -8.003304481506348
    4. '#' → logprob: -8.878304481506348
    5. '),' → logprob: -9.128304481506348
    6. '_' → logprob: -10.128304481506348
    7. '_)' → logprob: -10.753304481506348
    8. ')
' → logprob: -11.003304481506348
    9. ')\' → logprob: -11.003304481506348
    10. ')#' → logprob: -11.003304481506348

Token 438: '#
' (ID: 11240)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3199080228805542
    2. 'import' → logprob: -1.6949080228805542
    3. 'd' → logprob: -1.9449080228805542
    4. ' 
' → logprob: -2.1949081420898438
    5. ' ' → logprob: -2.1949081420898438
    6. '\' → logprob: -2.9449081420898438
    7. '#' → logprob: -3.0699081420898438
    8. '
' → logprob: -4.069908142089844
    9. 'from' → logprob: -4.194908142089844
    10. ':' → logprob: -4.569908142089844

Token 439: '#' (ID: 2)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0893070325255394
    2. 'def' → logprob: -2.5893070697784424
    3. 'import' → logprob: -5.464306831359863
    4. 'i' → logprob: -6.339306831359863
    5. 'from' → logprob: -6.589306831359863
    6. '#' → logprob: -6.589306831359863
    7. 'f' → logprob: -7.839306831359863
    8. ' ' → logprob: -8.089306831359863
    9. 'de' → logprob: -8.589306831359863
    10. ' 
' → logprob: -8.964306831359863

Token 440: ' Implementation' (ID: 60216)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1696668416261673
    2. 'from' → logprob: -1.9196668863296509
    3. 'import' → logprob: -4.669666767120361
    4. '#' → logprob: -11.66966724395752
    5. '```' → logprob: -11.66966724395752
    6. ' from' → logprob: -13.29466724395752
    7. 'n' → logprob: -13.79466724395752
    8. 'de' → logprob: -14.16966724395752
    9. 'target' → logprob: -14.16966724395752
    10. 'class' → logprob: -15.04466724395752

Token 441: ':
' (ID: 734)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.30384743213653564
    2. 'import' → logprob: -1.5538474321365356
    3. 'from' → logprob: -3.303847312927246
    4. 'd' → logprob: -4.928847312927246
    5. '```' → logprob: -6.428847312927246
    6. 'n' → logprob: -6.803847312927246
    7. '
' → logprob: -7.178847312927246
    8. '#' → logprob: -7.178847312927246
    9. ' 
' → logprob: -7.303847312927246
    10. 'de' → logprob: -7.678847312927246

Token 442: '#' (ID: 2)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9653902649879456
    2. 'from' → logprob: -0.9653902649879456
    3. 'def' → logprob: -1.4653902053833008
    4. '```' → logprob: -5.590390205383301
    5. ' from' → logprob: -6.215390205383301
    6. ' import' → logprob: -6.590390205383301
    7. ' def' → logprob: -9.5903902053833
    8. 'target' → logprob: -9.8403902053833
    9. '#' → logprob: -9.9653902053833
    10. '
' → logprob: -11.0903902053833

Token 443: ' -' (ID: 533)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6385330557823181
    2. 'def' → logprob: -1.138533115386963
    3. 'import' → logprob: -1.888533115386963
    4. '```' → logprob: -8.263532638549805
    5. ' from' → logprob: -10.138532638549805
    6. 'target' → logprob: -10.513532638549805
    7. '#' → logprob: -11.263532638549805
    8. ' import' → logprob: -11.763532638549805
    9. ' def' → logprob: -13.763532638549805
    10. 'n' → logprob: -13.888532638549805

Token 444: ' Lecture' (ID: 106534)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.043417952954769135
    2. 'def' → logprob: -3.7934179306030273
    3. 'import' → logprob: -3.9184179306030273
    4. ' from' → logprob: -9.793417930603027
    5. '```' → logprob: -10.918417930603027
    6. '#' → logprob: -11.043417930603027
    7. ' import' → logprob: -12.293417930603027
    8. 'Voici' → logprob: -13.668417930603027
    9. ' def' → logprob: -15.043417930603027
    10. 'target' → logprob: -15.543417930603027

Token 445: ' entrée' (ID: 95590)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.5289387702941895
    2. '#' → logprob: -2.0289387702941895
    3. ' ' → logprob: -2.2789387702941895
    4. ' des' → logprob: -2.4039387702941895
    5. ',' → logprob: -2.5289387702941895
    6. ' de' → logprob: -2.5289387702941895
    7. ' =' → logprob: -2.9039387702941895
    8. 'n' → logprob: -3.7789387702941895
    9. ':' → logprob: -3.9039387702941895
    10. ')' → logprob: -3.9039387702941895

Token 446: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004094666335731745
    2. 'import' → logprob: -5.62909460067749
    3. 'input' → logprob: -9.004095077514648
    4. 'for' → logprob: -9.129095077514648
    5. 'def' → logprob: -9.629095077514648
    6. 'ligne' → logprob: -10.379095077514648
    7. ' n' → logprob: -10.754095077514648
    8. ',' → logprob: -10.754095077514648
    9. '```' → logprob: -10.879095077514648
    10. 'N' → logprob: -10.879095077514648

Token 447: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08937486261129379
    2. 'import' → logprob: -3.3393747806549072
    3. 'def' → logprob: -3.8393747806549072
    4. '#' → logprob: -4.964375019073486
    5. 'target' → logprob: -5.089375019073486
    6. 'for' → logprob: -5.339375019073486
    7. 'grid' → logprob: -5.464375019073486
    8. 'input' → logprob: -5.839375019073486
    9. 'size' → logprob: -7.839375019073486
    10. '
' → logprob: -7.964375019073486

Token 448: ' -' (ID: 533)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0006455989787355065
    2. 'import' → logprob: -8.000645637512207
    3. ' n' → logprob: -8.250645637512207
    4. 'for' → logprob: -11.375645637512207
    5. 'def' → logprob: -12.250645637512207
    6. '#' → logprob: -12.250645637512207
    7. '
' → logprob: -12.500645637512207
    8. 'input' → logprob: -12.625645637512207
    9. ' lines' → logprob: -12.625645637512207
    10. '```' → logprob: -12.750645637512207

Token 449: ' Pré' (ID: 86400)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07949045300483704
    2. 'from' → logprob: -3.3294904232025146
    3. 'import' → logprob: -3.7044904232025146
    4. '#' → logprob: -4.954490661621094
    5. 'target' → logprob: -4.954490661621094
    6. 'grid' → logprob: -7.579490661621094
    7. 'n' → logprob: -7.954490661621094
    8. 'gr' → logprob: -8.079490661621094
    9. 'tam' → logprob: -8.704490661621094
    10. 'tail' → logprob: -9.204490661621094

Token 450: 'paration' (ID: 27466)
  Prédit: 'paration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paration' → logprob: -0.15281543135643005
    2. 'cision' → logprob: -3.027815341949463
    3. 'c' → logprob: -3.277815341949463
    4. 'parer' → logprob: -4.027815341949463
    5. 'def' → logprob: -4.152815341949463
    6. 'cis' → logprob: -5.402815341949463
    7. '#' → logprob: -5.777815341949463
    8. 'pa' → logprob: -6.152815341949463
    9. 'sent' → logprob: -6.277815341949463
    10. 'd' → logprob: -6.527815341949463

Token 451: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -1.4730838537216187
    2. 'target' → logprob: -2.098083972930908
    3. 'n' → logprob: -2.223083972930908
    4. 'de' → logprob: -2.348083972930908
    5. 'import' → logprob: -2.473083972930908
    6. '#' → logprob: -2.598083972930908
    7. 'gr' → logprob: -2.598083972930908
    8. 'def' → logprob: -3.348083972930908
    9. 'for' → logprob: -3.473083972930908
    10. 'grid' → logprob: -3.973083972930908

Token 452: ' tam' (ID: 10663)
  Prédit: 'tam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tam' → logprob: -0.2145090401172638
    2. 'st' → logprob: -2.8395090103149414
    3. 'data' → logprob: -3.3395090103149414
    4. 'gr' → logprob: -3.5895090103149414
    5. 't' → logprob: -4.464509010314941
    6. ' données' → logprob: -5.089509010314941
    7. ' data' → logprob: -5.214509010314941
    8. '#' → logprob: -5.214509010314941
    9. ' tam' → logprob: -5.339509010314941
    10. 'import' → logprob: -5.589509010314941

Token 453: 'pons' (ID: 2987)
  Prédit: 'pons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pons' → logprob: -0.011106777004897594
    2. 'pon' → logprob: -4.511106967926025
    3. '_' → logprob: -10.886106491088867
    4. 'poons' → logprob: -12.261106491088867
    5. '\' → logprob: -12.386106491088867
    6. '_p' → logprob: -12.761106491088867
    7. 'ponses' → logprob: -12.886106491088867
    8. 'ponse' → logprob: -12.886106491088867
    9. 'psons' → logprob: -13.386106491088867
    10. '#' → logprob: -13.511106491088867

Token 454: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4729653596878052
    2. 'import' → logprob: -1.4729653596878052
    3. 'tam' → logprob: -2.7229652404785156
    4. '#' → logprob: -3.8479652404785156
    5. '
' → logprob: -3.9729652404785156
    6. 't' → logprob: -4.972965240478516
    7. 'def' → logprob: -5.347965240478516
    8. 'for' → logprob: -5.722965240478516
    9. '[
' → logprob: -5.847965240478516
    10. 'st' → logprob: -6.222965240478516

Token 455: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.06809017807245255
    2. '#
' → logprob: -3.3180902004241943
    3. 'import' → logprob: -3.9430902004241943
    4. '-' → logprob: -5.568089962005615
    5. '
' → logprob: -6.693089962005615
    6. ' -' → logprob: -7.068089962005615
    7. ',' → logprob: -7.068089962005615
    8. '[
' → logprob: -7.568089962005615
    9. 'def' → logprob: -7.568089962005615
    10. 'for' → logprob: -7.693089962005615

Token 456: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.23498085141181946
    2. 'import' → logprob: -2.234980821609497
    3. 'n' → logprob: -3.234980821609497
    4. 'def' → logprob: -3.859980821609497
    5. '[
' → logprob: -4.859981060028076
    6. 'for' → logprob: -4.984981060028076
    7. '#
' → logprob: -4.984981060028076
    8. '
' → logprob: -5.734981060028076
    9. 'input' → logprob: -5.984981060028076
    10. ' for' → logprob: -6.359981060028076

Token 457: ' BFS' (ID: 190016)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1707322746515274
    2. 'from' → logprob: -2.170732259750366
    3. 'import' → logprob: -3.295732259750366
    4. '#' → logprob: -5.295732498168945
    5. 'dé' → logprob: -8.170732498168945
    6. 'dfs' → logprob: -8.795732498168945
    7. 'Dé' → logprob: -8.920732498168945
    8. 'Recherche' → logprob: -9.545732498168945
    9. 'b' → logprob: -10.545732498168945
    10. '
' → logprob: -11.045732498168945

Token 458: ' sur' (ID: 1512)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4660292863845825
    2. 'import' → logprob: -1.0910292863845825
    3. '#' → logprob: -4.466029167175293
    4. 'def' → logprob: -4.841029167175293
    5. '
' → logprob: -5.591029167175293
    6. '(
' → logprob: -5.841029167175293
    7. ' from' → logprob: -6.091029167175293
    8. ',' → logprob: -6.341029167175293
    9. 'n' → logprob: -6.466029167175293
    10. ',
' → logprob: -7.216029167175293

Token 459: ' états' (ID: 184259)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.11565987020730972
    2. ' les' → logprob: -2.9906599521636963
    3. 'l' → logprob: -3.6156599521636963
    4. 'les' → logprob: -4.865659713745117
    5. ' états' → logprob: -5.115659713745117
    6. ' la' → logprob: -5.490659713745117
    7. 'states' → logprob: -5.865659713745117
    8. ' states' → logprob: -5.865659713745117
    9. ' ' → logprob: -6.490659713745117
    10. 'collections' → logprob: -6.490659713745117

Token 460: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6718382835388184
    2. 'import' → logprob: -1.6718382835388184
    3. '\n' → logprob: -2.1718382835388184
    4. '\' → logprob: -2.9218382835388184
    5. 'n' → logprob: -2.9218382835388184
    6. '#' → logprob: -3.6718382835388184
    7. ' 
' → logprob: -4.421838283538818
    8. 'def' → logprob: -4.546838283538818
    9. 'from' → logprob: -5.546838283538818
    10. '

' → logprob: -5.671838283538818

Token 461: ' stockage' (ID: 101149)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.708970308303833
    2. '#' → logprob: -1.458970308303833
    3. 'import' → logprob: -2.083970308303833
    4. 'visited' → logprob: -2.958970308303833
    5. 'queue' → logprob: -3.833970308303833
    6. ' queue' → logprob: -4.083970069885254
    7. ' #' → logprob: -4.208970069885254
    8. 'deque' → logprob: -4.333970069885254
    9. ' from' → logprob: -4.458970069885254
    10. ' visited' → logprob: -5.208970069885254

Token 462: ' via' (ID: 4493)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.04917428642511368
    2. 'import' → logprob: -3.6741743087768555
    3. 'de' → logprob: -5.2991743087768555
    4. '#' → logprob: -5.6741743087768555
    5. '{' → logprob: -5.7991743087768555
    6. ' from' → logprob: -6.0491743087768555
    7. ',' → logprob: -6.0491743087768555
    8. ')' → logprob: -6.2991743087768555
    9. 'deque' → logprob: -6.6741743087768555
    10. '(
' → logprob: -7.5491743087768555

Token 463: ' diction' (ID: 155259)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -1.1173564195632935
    2. 'deque' → logprob: -1.2423564195632935
    3. 'un' → logprob: -1.6173564195632935
    4. ' un' → logprob: -2.617356300354004
    5. 'd' → logprob: -3.367356300354004
    6. ' diction' → logprob: -4.117356300354004
    7. 'collections' → logprob: -4.242356300354004
    8. ' deque' → logprob: -4.242356300354004
    9. ' dict' → logprob: -4.367356300354004
    10. 'queue' → logprob: -4.617356300354004

Token 464: 'naire' (ID: 30464)
  Prédit: 'naire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -0.4634043574333191
    2. 'aire' → logprob: -1.8384044170379639
    3. 'ary' → logprob: -1.9634044170379639
    4. '{' → logprob: -3.213404417037964
    5. '{}' → logprob: -3.713404417037964
    6. 'ar' → logprob: -6.463404178619385
    7. '{"' → logprob: -6.963404178619385
    8. 'a' → logprob: -6.963404178619385
    9. 'naires' → logprob: -7.713404178619385
    10. 'aires' → logprob: -7.838404178619385

Token 465: ' (' (ID: 350)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3728831112384796
    2. 'from' → logprob: -1.6228830814361572
    3. 'n' → logprob: -2.7478830814361572
    4. 'def' → logprob: -3.4978830814361572
    5. '#' → logprob: -4.622883319854736
    6. '
' → logprob: -5.372883319854736
    7. '```' → logprob: -6.997883319854736
    8. 'input' → logprob: -6.997883319854736
    9. ' from' → logprob: -7.372883319854736
    10. '(
' → logprob: -8.372882843017578

Token 466: 'ét' (ID: 3913)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8792451024055481
    2. 'visited' → logprob: -0.8792451024055481
    3. 'dict' → logprob: -2.8792450428009033
    4. 'deque' → logprob: -3.6292450428009033
    5. '{' → logprob: -4.004245281219482
    6. 'queue' → logprob: -4.629245281219482
    7. 'state' → logprob: -4.754245281219482
    8. ' visited' → logprob: -4.879245281219482
    9. 'collections' → logprob: -5.254245281219482
    10. 'states' → logprob: -5.379245281219482

Token 467: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.0021343177650123835
    2. 'ats' → logprob: -6.752134323120117
    3. ')' → logprob: -7.627134323120117
    4. 'a' → logprob: -8.377134323120117
    5. 'ât' → logprob: -10.252134323120117
    6. 'ат' → logprob: -10.252134323120117
    7. 'tat' → logprob: -10.252134323120117
    8. '}' → logprob: -10.377134323120117
    9. '{' → logprob: -11.252134323120117
    10. '
' → logprob: -11.502134323120117

Token 468: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009841673076152802
    2. ' )' → logprob: -5.259841442108154
    3. '_states' → logprob: -7.134841442108154
    4. ' =' → logprob: -7.384841442108154
    5. '_)' → logprob: -7.634841442108154
    6. ',' → logprob: -8.009841918945312
    7. 'es' → logprob: -8.259841918945312
    8. '_' → logprob: -8.384841918945312
    9. 's' → logprob: -8.634841918945312
    10. '_state' → logprob: -8.759841918945312

Token 469: ' nb' (ID: 28791)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.4712340831756592
    2. ' nombre' → logprob: -1.5962340831756592
    3. 'distance' → logprob: -2.346234083175659
    4. 'int' → logprob: -3.221234083175659
    5. 'nb' → logprob: -4.846234321594238
    6. ' int' → logprob: -4.846234321594238
    7. ' distance' → logprob: -5.096234321594238
    8. ' coût' → logprob: -5.346234321594238
    9. 'steps' → logprob: -5.971234321594238
    10. 'cost' → logprob: -6.096234321594238

Token 470: ' tapes' (ID: 76679)
  Prédit: '_p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.6736282706260681
    2. '_steps' → logprob: -1.798628330230713
    3. ' de' → logprob: -2.548628330230713
    4. '_press' → logprob: -2.548628330230713
    5. '_t' → logprob: -3.048628330230713
    6. '_' → logprob: -3.173628330230713
    7. ')' → logprob: -4.048628330230713
    8. ' d' → logprob: -4.423628330230713
    9. '_moves' → logprob: -4.548628330230713
    10. '_de' → logprob: -4.798628330230713

Token 471: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0080583356320858
    2. 's' → logprob: -5.008058547973633
    3. ' )' → logprob: -7.133058547973633
    4. 'pressions' → logprob: -9.383058547973633
    5. '")' → logprob: -10.008058547973633
    6. '#' → logprob: -10.258058547973633
    7. 'def' → logprob: -10.633058547973633
    8. 'import' → logprob: -10.758058547973633
    9. '_' → logprob: -10.883058547973633
    10. ',' → logprob: -10.883058547973633

Token 472: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9188252091407776
    2. 'import' → logprob: -1.2938251495361328
    3. '
' → logprob: -2.918825149536133
    4. 'n' → logprob: -2.918825149536133
    5. 'i' → logprob: -3.543825149536133
    6. ' ' → logprob: -3.668825149536133
    7. 'def' → logprob: -3.668825149536133
    8. ',' → logprob: -3.668825149536133
    9. ':' → logprob: -3.793825149536133
    10. ' 
' → logprob: -3.918825149536133

Token 473: ' -' (ID: 533)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.49096745252609253
    2. 'n' → logprob: -1.7409675121307373
    3. '
' → logprob: -2.6159675121307373
    4. 'def' → logprob: -2.9909675121307373
    5. 'from' → logprob: -3.1159675121307373
    6. '#' → logprob: -3.7409675121307373
    7. 'input' → logprob: -5.240967273712158
    8. '\' → logprob: -5.615967273712158
    9. '\n' → logprob: -6.490967273712158
    10. '

' → logprob: -6.490967273712158

Token 474: ' Calcul' (ID: 57243)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.03124142438173294
    2. 'import' → logprob: -3.7812414169311523
    3. ' from' → logprob: -5.906241416931152
    4. 'def' → logprob: -6.031241416931152
    5. '#' → logprob: -6.031241416931152
    6. ' import' → logprob: -8.781241416931152
    7. '
' → logprob: -9.156241416931152
    8. '```' → logprob: -10.406241416931152
    9. 'queue' → logprob: -10.531241416931152
    10. 'while' → logprob: -11.281241416931152

Token 475: ' du' (ID: 1462)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.288205862045288
    2. '_' → logprob: -1.413205862045288
    3. ' ' → logprob: -1.788205862045288
    4. '
' → logprob: -2.663205862045288
    5. 'def' → logprob: -2.663205862045288
    6. '#' → logprob: -2.788205862045288
    7. ')' → logprob: -4.038206100463867
    8. 's' → logprob: -4.163206100463867
    9. ',' → logprob: -4.288206100463867
    10. ' =' → logprob: -4.413206100463867

Token 476: ' minimal' (ID: 19957)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.7272704839706421
    2. 'minimum' → logprob: -0.8522704839706421
    3. 'result' → logprob: -2.9772706031799316
    4. 'rés' → logprob: -4.227270603179932
    5. 'nombre' → logprob: -4.352270603179932
    6. ' minimum' → logprob: -5.477270603179932
    7. 'minimal' → logprob: -5.602270603179932
    8. 'res' → logprob: -7.227270603179932
    9. ' résultat' → logprob: -7.227270603179932
    10. ' min' → logprob: -7.352270603179932

Token 477: ' au' (ID: 2791)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6956677436828613
    2. '
' → logprob: -1.3206677436828613
    3. 'def' → logprob: -3.0706677436828613
    4. ' ' → logprob: -3.0706677436828613
    5. '#' → logprob: -3.1956677436828613
    6. ' 
' → logprob: -3.6956677436828613
    7. 's' → logprob: -4.320667743682861
    8. ')' → logprob: -4.445667743682861
    9. 'from' → logprob: -4.820667743682861
    10. 'n' → logprob: -4.945667743682861

Token 478: ' final' (ID: 1721)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.040545642375946045
    2. 'bout' → logprob: -3.665545701980591
    3. 'plus' → logprob: -5.040545463562012
    4. 'finish' → logprob: -6.290545463562012
    5. 'fur' → logprob: -6.790545463562012
    6. 'fin' → logprob: -7.540545463562012
    7. 'moins' → logprob: -7.665545463562012
    8. 'pass' → logprob: -7.915545463562012
    9. 'n' → logprob: -8.040545463562012
    10. 'c' → logprob: -8.165545463562012

Token 479: '

' (ID: 279)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.22155311703681946
    2. 'n' → logprob: -2.596553087234497
    3. 'def' → logprob: -2.596553087234497
    4. '#' → logprob: -3.971553087234497
    5. 'from' → logprob: -3.971553087234497
    6. '```' → logprob: -4.721553325653076
    7. '\' → logprob: -6.346553325653076
    8. '.' → logprob: -8.346552848815918
    9. '\n' → logprob: -8.346552848815918
    10. 'input' → logprob: -8.596552848815918

Token 480: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.22001773118972778
    2. 'def' → logprob: -1.845017671585083
    3. 'n' → logprob: -3.970017671585083
    4. 'from' → logprob: -4.345017910003662
    5. '#' → logprob: -5.470017910003662
    6. '```' → logprob: -6.470017910003662
    7. 'target' → logprob: -6.970017910003662
    8. 'grid' → logprob: -8.095017433166504
    9. 'T' → logprob: -8.470017433166504
    10. 'input' → logprob: -8.720017433166504

Token 481: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -1.0325924449716695e-05
    2. ' collections' → logprob: -11.50001049041748
    3. 'sys' → logprob: -16.250009536743164
    4. 'collection' → logprob: -18.875009536743164
    5. 'copy' → logprob: -19.000009536743164
    6. 'queue' → logprob: -19.375009536743164
    7. 'collect' → logprob: -19.750009536743164
    8. 'typing' → logprob: -21.125009536743164
    9. 'heap' → logprob: -21.750009536743164
    10. 'col' → logprob: -22.250009536743164

Token 482: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0011766550596803427
    2. ' import' → logprob: -6.751176834106445
    3. 'from' → logprob: -13.251176834106445
    4. '.import' → logprob: -13.751176834106445
    5. '_import' → logprob: -13.751176834106445
    6. '```' → logprob: -14.251176834106445
    7. 'port' → logprob: -14.376176834106445
    8. '.' → logprob: -14.376176834106445
    9. '	import' → logprob: -15.376176834106445
    10. ' ' → logprob: -16.501176834106445

Token 483: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.10020839422941208
    2. ' deque' → logprob: -2.350208282470703
    3. 'de' → logprob: -13.850208282470703
    4. 'collections' → logprob: -14.100208282470703
    5. ' defaultdict' → logprob: -17.350208282470703
    6. '```' → logprob: -17.600208282470703
    7. 'named' → logprob: -19.225208282470703
    8. 'queue' → logprob: -20.100208282470703
    9. 'default' → logprob: -20.350208282470703
    10. 'import' → logprob: -21.600208282470703

Token 484: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3025858998298645
    2. 'import' → logprob: -1.9275858402252197
    3. '<|end|>' → logprob: -3.8025858402252197
    4. '

' → logprob: -4.052586078643799
    5. 'n' → logprob: -4.427586078643799
    6. ',' → logprob: -4.552586078643799
    7. 'target' → logprob: -4.677586078643799
    8. '#' → logprob: -4.677586078643799
    9. 'def' → logprob: -4.802586078643799
    10. 'grid' → logprob: -5.177586078643799

Token 485: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03883657604455948
    2. 'n' → logprob: -3.5388364791870117
    3. 'target' → logprob: -4.788836479187012
    4. '#' → logprob: -7.788836479187012
    5. 'TARGET' → logprob: -8.788836479187012
    6. 'import' → logprob: -9.413836479187012
    7. 'N' → logprob: -10.913836479187012
    8. 'final' → logprob: -10.913836479187012
    9. 'T' → logprob: -11.663836479187012
    10. 'input' → logprob: -11.788836479187012

Token 486: ' main' (ID: 2758)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.4472842514514923
    2. 'min' → logprob: -2.07228422164917
    3. ' solve' → logprob: -2.32228422164917
    4. 'minimal' → logprob: -3.07228422164917
    5. ' minimal' → logprob: -3.32228422164917
    6. 'rect' → logprob: -3.94728422164917
    7. 'read' → logprob: -4.07228422164917
    8. 'main' → logprob: -5.32228422164917
    9. 'minimum' → logprob: -5.44728422164917
    10. 'b' → logprob: -6.19728422164917

Token 487: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.018226739019155502
    2. '(' → logprob: -4.018226623535156
    3. '()' → logprob: -10.768226623535156
    4. ' ():' → logprob: -10.893226623535156
    5. '():
' → logprob: -11.143226623535156
    6. '(:' → logprob: -12.018226623535156
    7. '_' → logprob: -12.143226623535156
    8. '(":' → logprob: -12.518226623535156
    9. '):' → logprob: -13.018226623535156
    10. ' (' → logprob: -13.393226623535156

Token 488: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016412617405876517
    2. ' grid' → logprob: -7.626641273498535
    3. ' import' → logprob: -8.126641273498535
    4. ' target' → logprob: -8.251641273498535
    5. ' input' → logprob: -8.376641273498535
    6. 'n' → logprob: -8.626641273498535
    7. ' n' → logprob: -9.001641273498535
    8. '   ' → logprob: -10.751641273498535
    9. '    ' → logprob: -11.501641273498535
    10. 'import' → logprob: -11.876641273498535

Token 489: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.25678911805152893
    2. 'target' → logprob: -2.256789207458496
    3. '   ' → logprob: -2.381789207458496
    4. ' n' → logprob: -4.506789207458496
    5. 'N' (adapté à ' N') → logprob: -4.881789207458496
    6. ' target' → logprob: -5.756789207458496
    7. '#' → logprob: -6.131789207458496
    8. ' ' → logprob: -6.381789207458496
    9. 'grid' → logprob: -6.506789207458496
    10. 'final' → logprob: -7.631789207458496

Token 490: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02413504756987095
    2. '=' → logprob: -3.774135112762451
    3. '=int' → logprob: -7.399135112762451
    4. ' ' → logprob: -8.899134635925293
    5. ',' → logprob: -9.524134635925293
    6. ' =
' → logprob: -10.774134635925293
    7. ')' → logprob: -11.274134635925293
    8. '4' → logprob: -12.024134635925293
    9. '=input' → logprob: -12.024134635925293
    10. ' ,' → logprob: -12.399134635925293

Token 491: ' int' (ID: 677)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.06958867609500885
    2. '16' → logprob: -3.4445886611938477
    3. 'int' → logprob: -3.9445886611938477
    4. ' ' → logprob: -4.319588661193848
    5. ' int' → logprob: -5.944588661193848
    6. '1' → logprob: -11.694588661193848
    7. '[int' → logprob: -12.944588661193848
    8. '  ' → logprob: -13.194588661193848
    9. '   ' → logprob: -13.319588661193848
    10. '3' → logprob: -13.319588661193848

Token 492: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0011349777923896909
    2. '()' → logprob: -7.001134872436523
    3. 'input' → logprob: -8.501134872436523
    4. '(' → logprob: -10.876134872436523
    5. '()
' → logprob: -14.001134872436523
    6. '=input' → logprob: -15.376134872436523
    7. ' input' → logprob: -16.251134872436523
    8. '())' → logprob: -17.376134872436523
    9. ' ()' → logprob: -17.876134872436523
    10. '('' → logprob: -18.126134872436523

Token 493: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.023313844576478004
    2. '()' → logprob: -3.7733137607574463
    3. ')' → logprob: -10.523313522338867
    4. '())
' → logprob: -10.523313522338867
    5. '(' → logprob: -11.523313522338867
    6. '().' → logprob: -12.773313522338867
    7. '()
' → logprob: -13.773313522338867
    8. ' ())' → logprob: -14.523313522338867
    9. '();)' → logprob: -16.773313522338867
    10. '());' → logprob: -17.148313522338867

Token 494: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2130374312400818
    2. 'target' → logprob: -2.0880374908447266
    3. ' target' → logprob: -3.4630374908447266
    4. 'grid' → logprob: -5.213037490844727
    5. ' grids' → logprob: -5.463037490844727
    6. ' for' → logprob: -5.463037490844727
    7. '#' → logprob: -5.713037490844727
    8. 'targets' → logprob: -6.088037490844727
    9. ' grid' → logprob: -6.213037490844727
    10. ')' → logprob: -6.213037490844727

Token 495: ' stamps' (ID: 77190)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.361336886882782
    2. 'target' → logprob: -1.4863369464874268
    3. 'st' → logprob: -2.9863369464874268
    4. 'tam' → logprob: -4.986336708068848
    5. 'final' → logprob: -5.236336708068848
    6. 'targets' → logprob: -5.986336708068848
    7. ' for' → logprob: -6.111336708068848
    8. 't' → logprob: -6.361336708068848
    9. 'gr' → logprob: -6.361336708068848
    10. 'grid' → logprob: -6.611336708068848

Token 496: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014308293350040913
    2. '=' → logprob: -4.264308452606201
    3. 's' → logprob: -9.514307975769043
    4. '=[]' → logprob: -9.639307975769043
    5. '_' → logprob: -13.264307975769043
    6. '[]' → logprob: -13.514307975769043
    7. '=[]
' → logprob: -14.639307975769043
    8. ',' → logprob: -14.764307975769043
    9. ' ' → logprob: -15.139307975769043
    10. '   ' → logprob: -15.389307975769043

Token 497: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.07998743653297424
    2. ' []' → logprob: -2.5799875259399414
    3. '[' → logprob: -7.329987525939941
    4. ' [' → logprob: -8.579987525939941
    5. '[N' → logprob: -8.579987525939941
    6. '[n' → logprob: -10.079987525939941
    7. '[]
' → logprob: -11.079987525939941
    8. '[int' → logprob: -13.329987525939941
    9. '[size' → logprob: -14.079987525939941
    10. '[s' → logprob: -14.204987525939941

Token 498: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24078111350536346
    2. ' for' → logprob: -1.8657810688018799
    3. '   ' → logprob: -2.86578106880188
    4. '<|end|>' → logprob: -6.615781307220459
    5. '	for' → logprob: -7.115781307220459
    6. '    
' → logprob: -9.8657808303833
    7. ' ' → logprob: -10.8657808303833
    8. ' 
' → logprob: -11.4907808303833
    9. '    ' → logprob: -11.4907808303833
    10. '
' → logprob: -11.7407808303833

Token 499: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -7.612634362885728e-05
    2. ' for' → logprob: -9.500076293945312
    3. '	for' → logprob: -14.250076293945312
    4. '   ' → logprob: -14.250076293945312
    5. '
' → logprob: -18.375076293945312
    6. '    
' → logprob: -19.875076293945312
    7. 'fo' → logprob: -21.750076293945312
    8. '_for' → logprob: -21.875076293945312
    9. '

' → logprob: -22.625076293945312
    10. 'i' → logprob: -23.125076293945312

Token 500: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.003191612893715501
    2. '_i' → logprob: -5.7531914710998535
    3. '_st' → logprob: -13.128191947937012
    4. ' _' → logprob: -13.128191947937012
    5. '_stamp' → logprob: -13.253191947937012
    6. '_t' → logprob: -13.378191947937012
    7. '_in' → logprob: -14.253191947937012
    8. '_range' → logprob: -14.628191947937012
    9. '_ai' → logprob: -14.628191947937012
    10. '_input' → logprob: -14.753191947937012

Token 501: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023338066413998604
    2. 'in' → logprob: -4.1483378410339355
    3. ' range' → logprob: -5.3983378410339355
    4. ' in' → logprob: -6.3983378410339355
    5. '_' → logprob: -6.8983378410339355
    6. 'ange' → logprob: -10.023338317871094
    7. 'i' → logprob: -11.773338317871094
    8. '_range' → logprob: -11.898338317871094
    9. 'ran' → logprob: -12.273338317871094
    10. ' ' → logprob: -12.398338317871094

Token 502: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.615255839889869e-05
    2. ' range' → logprob: -9.250096321105957
    3. '   ' → logprob: -17.87509536743164
    4. '(range' → logprob: -18.37509536743164
    5. 'input' → logprob: -19.50009536743164
    6. '	range' → logprob: -20.12509536743164
    7. 'rang' → logprob: -20.12509536743164
    8. ' ' → logprob: -20.62509536743164
    9. '  ' → logprob: -20.62509536743164
    10. ')' → logprob: -21.37509536743164

Token 503: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.31348687410354614
    2. 'N' → logprob: -1.3134868144989014
    3. ' N' → logprob: -8.81348705291748
    4. '(' → logprob: -9.93848705291748
    5. ' ' → logprob: -11.31348705291748
    6. ' (' → logprob: -11.68848705291748
    7. '   ' → logprob: -12.43848705291748
    8. '	N' → logprob: -13.18848705291748
    9. '  ' → logprob: -15.06348705291748
    10. '(
' → logprob: -15.18848705291748

Token 504: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.433443158864975
    2. '):' → logprob: -1.0584431886672974
    3. ')' → logprob: -5.558443069458008
    4. ' ):
' → logprob: -7.933443069458008
    5. ' ):' → logprob: -7.933443069458008
    6. '):
' → logprob: -8.933443069458008
    7. '   ' → logprob: -11.558443069458008
    8. ' )' → logprob: -12.058443069458008
    9. '):

' → logprob: -12.558443069458008
    10. ':' → logprob: -13.058443069458008

Token 505: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015609274851158261
    2. ' h' → logprob: -7.126561164855957
    3. ' w' → logprob: -8.126561164855957
    4. 'h' → logprob: -8.626561164855957
    5. '       ' → logprob: -9.001561164855957
    6. 'w' → logprob: -9.751561164855957
    7. 'n' → logprob: -11.126561164855957
    8. ' s' → logprob: -11.126561164855957
    9. 'x' → logprob: -11.626561164855957
    10. '   ' → logprob: -11.876561164855957

Token 506: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.0008652491960674524
    2. '   ' → logprob: -7.500865459442139
    3. 'H' → logprob: -8.62586498260498
    4. ' h' → logprob: -9.37586498260498
    5. '	h' → logprob: -11.25086498260498
    6. 'hi' → logprob: -12.12586498260498
    7. 'line' → logprob: -12.25086498260498
    8. 'w' → logprob: -12.50086498260498
    9. ' ' → logprob: -12.50086498260498
    10. 'hx' → logprob: -12.75086498260498

Token 507: ',w' (ID: 49598)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0060017905198037624
    2. ',w' → logprob: -5.131001949310303
    3. ' ,' → logprob: -9.756001472473145
    4. ',width' → logprob: -12.256001472473145
    5. 'w' → logprob: -13.006001472473145
    6. ',W' → logprob: -13.131001472473145
    7. ',s' → logprob: -13.131001472473145
    8. '_,' → logprob: -14.256001472473145
    9. ',int' → logprob: -14.506001472473145
    10. ',h' → logprob: -14.631001472473145

Token 508: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048689104616642
    2. ' =' → logprob: -3.048689126968384
    3. '=input' → logprob: -10.048688888549805
    4. ',' → logprob: -10.298688888549805
    5. '=int' → logprob: -10.798688888549805
    6. ')' → logprob: -13.548688888549805
    7. ')=' → logprob: -14.173688888549805
    8. '   ' → logprob: -14.298688888549805
    9. '=line' → logprob: -15.173688888549805
    10. ',input' → logprob: -15.423688888549805

Token 509: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.04858873412013054
    2. 'map' → logprob: -3.048588752746582
    3. '	map' → logprob: -14.048588752746582
    4. '[' → logprob: -15.423588752746582
    5. '   ' → logprob: -16.298587799072266
    6. ' ' → logprob: -16.548587799072266
    7. ' list' → logprob: -16.673587799072266
    8. ' [' → logprob: -16.798587799072266
    9. 'm' → logprob: -17.798587799072266
    10. '(map' → logprob: -18.173587799072266

Token 510: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -7.040457421680912e-05
    2. 'int' → logprob: -10.000070571899414
    3. '(' → logprob: -11.000070571899414
    4. '(str' → logprob: -12.125070571899414
    5. '(input' → logprob: -13.500070571899414
    6. '=int' → logprob: -14.000070571899414
    7. '[int' → logprob: -15.625070571899414
    8. '<int' → logprob: -16.125070571899414
    9. ',int' → logprob: -16.375070571899414
    10. 'str' → logprob: -16.875070571899414

Token 511: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.32104235887527466
    2. ',' → logprob: -1.3210422992706299
    3. 'input' → logprob: -5.071042537689209
    4. '(input' → logprob: -6.696042537689209
    5. ',int' → logprob: -8.69604206085205
    6. '(' → logprob: -10.19604206085205
    7. ' ,' → logprob: -11.44604206085205
    8. ')' → logprob: -11.94604206085205
    9. '(int' → logprob: -12.32104206085205
    10. ' input' → logprob: -12.57104206085205

Token 512: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00033546582562848926
    2. ' input' → logprob: -8.000335693359375
    3. 'str' → logprob: -18.375335693359375
    4. '_input' → logprob: -18.750335693359375
    5. ')' → logprob: -19.000335693359375
    6. ',input' → logprob: -19.250335693359375
    7. '=input' → logprob: -19.250335693359375
    8. '(input' → logprob: -19.500335693359375
    9. '<input' → logprob: -20.250335693359375
    10. ' ' → logprob: -20.500335693359375

Token 513: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.2200749754119897e-06
    2. '()' → logprob: -13.125001907348633
    3. ' ().' → logprob: -16.375001907348633
    4. '(' → logprob: -16.500001907348633
    5. '   ' → logprob: -19.500001907348633
    6. '.split' → logprob: -19.500001907348633
    7. ')' → logprob: -19.500001907348633
    8. 'split' → logprob: -19.750001907348633
    9. '()
' → logprob: -19.750001907348633
    10. '())' → logprob: -20.875001907348633

Token 514: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.3663626305060461e-05
    2. 'strip' → logprob: -11.25001335144043
    3. ' split' → logprob: -15.37501335144043
    4. 'spl' → logprob: -15.62501335144043
    5. '_split' → logprob: -16.50001335144043
    6. '(split' → logprob: -16.87501335144043
    7. 'rstrip' → logprob: -17.50001335144043
    8. '.split' → logprob: -17.75001335144043
    9. ')' → logprob: -18.00001335144043
    10. '().' → logprob: -18.25001335144043

Token 515: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.003114018589258194
    2. '()' → logprob: -6.128114223480225
    3. '())
' → logprob: -7.753114223480225
    4. ')' → logprob: -7.753114223480225
    5. '(' → logprob: -9.878113746643066
    6. '('' → logprob: -11.753113746643066
    7. '().' → logprob: -12.628113746643066
    8. '()))' → logprob: -12.878113746643066
    9. '())
' → logprob: -13.378113746643066
    10. '()
' → logprob: -13.878113746643066

Token 516: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002791684353724122
    2. 'st' → logprob: -6.502791881561279
    3. '   ' → logprob: -7.252791881561279
    4. '	' → logprob: -8.752791404724121
    5. ' stamps' → logprob: -9.002791404724121
    6. '	st' → logprob: -9.377791404724121
    7. 's' → logprob: -10.127791404724121
    8. 'x' → logprob: -10.627791404724121
    9. ',' → logprob: -10.752791404724121
    10. 't' → logprob: -10.877791404724121

Token 517: ' stamps' (ID: 77190)
  Prédit: 'stamp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stamp' → logprob: -0.6456323862075806
    2. 'pattern' → logprob: -1.3956323862075806
    3. 'colors' → logprob: -2.645632266998291
    4. 'cells' → logprob: -3.020632266998291
    5. 'shape' → logprob: -3.145632266998291
    6. 'st' → logprob: -3.770632266998291
    7. 'mask' → logprob: -4.020632266998291
    8. 'rows' → logprob: -5.145632266998291
    9. 'color' → logprob: -5.520632266998291
    10. 'pixels' → logprob: -6.145632266998291

Token 518: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.3199920178740285e-05
    2. '.app' → logprob: -11.375022888183594
    3. '.' → logprob: -11.625022888183594
    4. '.ap' → logprob: -13.000022888183594
    5. ' .' → logprob: -15.125022888183594
    6. 'append' → logprob: -15.500022888183594
    7. '.extend' → logprob: -17.000022888183594
    8. ').' → logprob: -18.750022888183594
    9. '_append' → logprob: -19.625022888183594
    10. '.a' → logprob: -19.750022888183594

Token 519: '((' (ID: 2054)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 520: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.0280383548888494e-06
    2. ' h' → logprob: -13.875000953674316
    3. '   ' → logprob: -17.375001907348633
    4. '(h' → logprob: -17.625001907348633
    5. '	h' → logprob: -18.000001907348633
    6. ')' → logprob: -19.375001907348633
    7. ',h' → logprob: -19.625001907348633
    8. '"h' → logprob: -19.750001907348633
    9. 'hx' → logprob: -20.375001907348633
    10. '_h' → logprob: -20.375001907348633

Token 521: ',w' (ID: 49598)
  Prédit: ',w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.4741188883781433
    2. ',' → logprob: -0.9741188883781433
    3. ' ,' → logprob: -10.349119186401367
    4. ',W' → logprob: -12.849119186401367
    5. ',
' → logprob: -12.974119186401367
    6. ',width' → logprob: -13.599119186401367
    7. ',h' → logprob: -14.224119186401367
    8. 'w' → logprob: -14.474119186401367
    9. ',)' → logprob: -14.849119186401367
    10. ',v' → logprob: -15.474119186401367

Token 522: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0003144896763842553
    2. ')' → logprob: -8.125314712524414
    3. '))
' → logprob: -11.875314712524414
    4. ',' → logprob: -12.000314712524414
    5. ' ))' → logprob: -12.625314712524414
    6. '));' → logprob: -14.500314712524414
    7. ')))' → logprob: -14.500314712524414
    8. '),' → logprob: -14.875314712524414
    9. '   ' → logprob: -15.375314712524414
    10. ''))' → logprob: -15.750314712524414

Token 523: '   ' (ID: 271)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.09695553034543991
    2. '   ' → logprob: -2.8469555377960205
    3. 'colors' → logprob: -4.846955299377441
    4. 'pattern' → logprob: -5.471955299377441
    5. 'final' → logprob: -5.721955299377441
    6. 'goal' → logprob: -5.721955299377441
    7. 'grid' → logprob: -5.846955299377441
    8. 'c' → logprob: -5.846955299377441
    9. ' target' → logprob: -6.096955299377441
    10. 'state' → logprob: -6.221955299377441

Token 524: ' target' (ID: 3783)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 525: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04873531684279442
    2. '=' → logprob: -3.0487353801727295
    3. '_grid' → logprob: -9.048735618591309
    4. '_colors' → logprob: -11.798735618591309
    5. '=[]' → logprob: -11.798735618591309
    6. 'grid' → logprob: -12.298735618591309
    7. '=[]
' → logprob: -12.798735618591309
    8. '_color' → logprob: -13.173735618591309
    9. '_' → logprob: -13.548735618591309
    10. '=
' → logprob: -14.048735618591309

Token 526: ' [' (ID: 723)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.993262529373169
    2. 'tuple' → logprob: -0.993262529373169
    3. '[' → logprob: -1.368262529373169
    4. '''.' → logprob: -6.11826229095459
    5. '[]' → logprob: -7.24326229095459
    6. '[
' → logprob: -7.61826229095459
    7. '['' → logprob: -8.11826229095459
    8. '''
' → logprob: -8.36826229095459
    9. '(tuple' → logprob: -8.74326229095459
    10. ' tuple' → logprob: -8.86826229095459

Token 527: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.011906113475561142
    2. 'tuple' → logprob: -5.136906147003174
    3. 'list' → logprob: -5.761906147003174
    4. 'c' → logprob: -6.761906147003174
    5. ']' → logprob: -7.386906147003174
    6. 'char' → logprob: -8.261905670166016
    7. '*' → logprob: -9.011905670166016
    8. ' input' → logprob: -9.136905670166016
    9. '[input' → logprob: -9.136905670166016
    10. ']
' → logprob: -9.886905670166016

Token 528: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.048790156841278076
    2. '().' → logprob: -3.048790216445923
    3. '()[' → logprob: -8.923789978027344
    4. 'for' → logprob: -10.298789978027344
    5. '()]' → logprob: -11.423789978027344
    6. '())' → logprob: -11.548789978027344
    7. ' ()' → logprob: -11.923789978027344
    8. ' for' → logprob: -13.298789978027344
    9. '(' → logprob: -13.673789978027344
    10. '()
' → logprob: -13.798789978027344

Token 529: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.000556012790184468
    2. 'split' → logprob: -8.000555992126465
    3. 'rstrip' → logprob: -8.500555992126465
    4. 'replace' → logprob: -11.000555992126465
    5. ' strip' → logprob: -15.375555992126465
    6. 'extend' → logprob: -16.37555694580078
    7. 'join' → logprob: -16.87555694580078
    8. 'str' → logprob: -17.37555694580078
    9. 'r' → logprob: -17.37555694580078
    10. 'read' → logprob: -18.00055694580078

Token 530: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0002494191285222769
    2. ')' → logprob: -9.500249862670898
    3. '()]' → logprob: -9.500249862670898
    4. '())' → logprob: -9.625249862670898
    5. ' for' → logprob: -11.000249862670898
    6. 'for' → logprob: -11.875249862670898
    7. ' ()' → logprob: -12.000249862670898
    8. '()
' → logprob: -13.875249862670898
    9. ')]' → logprob: -14.125249862670898
    10. ']' → logprob: -14.500249862670898

Token 531: ' for' (ID: 395)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 532: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00036287534749135375
    2. ' _' → logprob: -8.50036334991455
    3. '_range' → logprob: -8.87536334991455
    4. '_i' → logprob: -11.12536334991455
    5. '_in' → logprob: -13.37536334991455
    6. '_j' → logprob: -14.75036334991455
    7. '_=' → logprob: -15.37536334991455
    8. ' range' → logprob: -15.50036334991455
    9. '_x' → logprob: -16.000362396240234
    10. '_c' → logprob: -16.000362396240234

Token 533: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01417032815515995
    2. ' range' → logprob: -4.264170169830322
    3. '_' → logprob: -12.51417064666748
    4. '(range' → logprob: -13.51417064666748
    5. '_range' → logprob: -13.88917064666748
    6. '4' → logprob: -15.51417064666748
    7. '	range' → logprob: -15.76417064666748
    8. 'ange' → logprob: -15.88917064666748
    9. 'in' → logprob: -16.014169692993164
    10. ' in' → logprob: -16.264169692993164

Token 534: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002614550176076591
    2. ' range' → logprob: -8.250261306762695
    3. '(range' → logprob: -17.125261306762695
    4. '4' → logprob: -17.250261306762695
    5. '	range' → logprob: -17.375261306762695
    6. '[' → logprob: -18.125261306762695
    7. '```' → logprob: -19.125261306762695
    8. '
' → logprob: -19.875261306762695
    9. 'rang' → logprob: -20.125261306762695
    10. '.range' → logprob: -20.250261306762695

Token 535: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16212767362594604
    2. '4' → logprob: -1.9121277332305908
    3. '16' → logprob: -6.287127494812012
    4. ' (' → logprob: -10.912127494812012
    5. ' ' → logprob: -10.912127494812012
    6. '   ' → logprob: -12.787127494812012
    7. '(
' → logprob: -13.912127494812012
    8. ')' → logprob: -15.162127494812012
    9. ']' → logprob: -15.662127494812012
    10. '{' → logprob: -15.849627494812012

Token 536: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -5.676981345459353e-06
    2. '16' → logprob: -12.125005722045898
    3. ' ' → logprob: -15.625005722045898
    4. ')' → logprob: -18.6250057220459
    5. 'N' → logprob: -18.6250057220459
    6. '   ' → logprob: -19.1875057220459
    7. '' → logprob: -19.5000057220459
    8. '４' → logprob: -19.6875057220459
    9. '
' → logprob: -20.0000057220459
    10. '=' → logprob: -20.0000057220459

Token 537: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00013774730905424803
    2. ')' → logprob: -9.000137329101562
    3. ']' → logprob: -11.500137329101562
    4. ' )' → logprob: -12.625137329101562
    5. '4' → logprob: -15.250137329101562
    6. ' ]' → logprob: -15.625137329101562
    7. '])' → logprob: -15.750137329101562
    8. ')])' → logprob: -16.375137329101562
    9. '])]' → logprob: -16.500137329101562
    10. ')]
' → logprob: -16.500137329101562

Token 538: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0065074204467237
    2. 'state' → logprob: -5.631507396697998
    3. 'current' → logprob: -7.006507396697998
    4. 'start' → logprob: -7.506507396697998
    5. 'initial' → logprob: -7.881507396697998
    6. '    
' → logprob: -8.006507873535156
    7. 'from' → logprob: -8.006507873535156
    8. '
' → logprob: -8.506507873535156
    9. 'def' → logprob: -9.881507873535156
    10. '#' → logprob: -9.881507873535156

Token 539: ' #' (ID: 1069)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.607958972454071
    2. 'initial' → logprob: -1.2329590320587158
    3. 'state' → logprob: -2.482959032058716
    4. 'empty' → logprob: -3.732959032058716
    5. '   ' → logprob: -4.357958793640137
    6. '#' (adapté à ' #') → logprob: -4.482958793640137
    7. 'from' → logprob: -4.732958793640137
    8. 'def' → logprob: -4.857958793640137
    9. 'grid' → logprob: -4.857958793640137
    10. 'current' → logprob: -5.857958793640137

Token 540: ' Convert' (ID: 15629)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3621331453323364
    2. 'state' → logprob: -1.4871331453323364
    3. 'target' → logprob: -1.6121331453323364
    4. 'from' → logprob: -2.612133026123047
    5. 'start' → logprob: -2.862133026123047
    6. 'initial' → logprob: -2.862133026123047
    7. 'grid' → logprob: -3.362133026123047
    8. 'def' → logprob: -3.987133026123047
    9. 'visited' → logprob: -4.237133026123047
    10. ' state' → logprob: -4.487133026123047

Token 541: ' target' (ID: 3783)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.7152713537216187
    2. 'target' → logprob: -1.4652713537216187
    3. '   ' → logprob: -2.465271472930908
    4. ' target' → logprob: -2.590271472930908
    5. '_target' → logprob: -3.090271472930908
    6. ' state' → logprob: -3.465271472930908
    7. '_state' → logprob: -3.590271472930908
    8. '#' → logprob: -5.090271472930908
    9. 'ion' → logprob: -6.090271472930908
    10. 'def' → logprob: -6.840271472930908

Token 542: ' to' (ID: 316)
  Prédit: '_state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.047463905066251755
    2. ' =' → logprob: -3.547463893890381
    3. 'state' → logprob: -4.672463893890381
    4. '_target' → logprob: -5.547463893890381
    5. '_grid' → logprob: -6.422463893890381
    6. '_' → logprob: -7.047463893890381
    7. '_flat' → logprob: -7.422463893890381
    8. '_to' → logprob: -7.922463893890381
    9. '_tuple' → logprob: -8.422464370727539
    10. '_states' → logprob: -8.797464370727539

Token 543: ' a' (ID: 261)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.01926833763718605
    2. ' tuple' → logprob: -4.01926851272583
    3. 'a' → logprob: -6.89426851272583
    4. ' a' → logprob: -10.019268035888672
    5. 'flat' → logprob: -10.894268035888672
    6. 'target' → logprob: -10.894268035888672
    7. 'state' → logprob: -11.394268035888672
    8. '(tuple' → logprob: -12.394268035888672
    9. 'tu' → logprob: -12.769268035888672
    10. 'flatten' → logprob: -13.394268035888672

Token 544: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.0006017650011926889
    2. ' tuple' → logprob: -7.750601768493652
    3. '[' → logprob: -9.125601768493652
    4. 'flat' → logprob: -10.625601768493652
    5. '[]
' → logprob: -11.250601768493652
    6. '[]' → logprob: -11.750601768493652
    7. '['' → logprob: -12.375601768493652
    8. 'list' → logprob: -12.750601768493652
    9. '(tuple' → logprob: -13.000601768493652
    10. 'flatten' → logprob: -13.125601768493652

Token 545: ' for' (ID: 395)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.2872856855392456
    2. '   ' → logprob: -2.162285804748535
    3. 'state' → logprob: -2.162285804748535
    4. '(
' → logprob: -4.912285804748535
    5. ' target' → logprob: -5.537285804748535
    6. ')
' → logprob: -6.412285804748535
    7. '(target' → logprob: -6.537285804748535
    8. 'flat' → logprob: -6.787285804748535
    9. '
' → logprob: -7.162285804748535
    10. ')' → logprob: -7.537285804748535

Token 546: ' comparison' (ID: 19211)
  Prédit: 'immutable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'immutable' → logprob: -1.2789162397384644
    2. 'state' → logprob: -1.6539162397384644
    3. 'flat' → logprob: -2.153916358947754
    4. 'hash' → logprob: -2.403916358947754
    5. ' immutable' → logprob: -2.528916358947754
    6. 'flatten' → logprob: -3.278916358947754
    7. ' hashing' → logprob: -3.653916358947754
    8. 'target' → logprob: -3.653916358947754
    9. ' state' → logprob: -3.778916358947754
    10. ' next' → logprob: -4.153916358947754

Token 547: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012742599472403526
    2. 'target' → logprob: -4.512742519378662
    3. 'state' → logprob: -6.762742519378662
    4. ')' → logprob: -8.76274299621582
    5. '    
' → logprob: -8.88774299621582
    6. '(target' → logprob: -9.63774299621582
    7. '
' → logprob: -10.63774299621582
    8. ' target' → logprob: -10.63774299621582
    9. '_target' → logprob: -10.88774299621582
    10. ',' → logprob: -11.01274299621582

Token 548: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.055529575794935226
    2. 'target' → logprob: -2.9305295944213867
    3. ' target' → logprob: -8.555529594421387
    4. 'state' → logprob: -8.680529594421387
    5. '    
' → logprob: -8.805529594421387
    6. ')' → logprob: -10.180529594421387
    7. '
' → logprob: -10.430529594421387
    8. 't' → logprob: -11.680529594421387
    9. 'tar' → logprob: -11.680529594421387
    10. '	target' → logprob: -11.930529594421387

Token 549: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' (adapté à ' target') → logprob: -0.0005073997308500111
    2. 'state' → logprob: -8.125507354736328
    3. ' target' → logprob: -8.750507354736328
    4. 'flat' → logprob: -10.750507354736328
    5. 't' → logprob: -11.250507354736328
    6. '   ' → logprob: -12.250507354736328
    7. 'current' → logprob: -12.375507354736328
    8. 'final' → logprob: -13.000507354736328
    9. 'tar' → logprob: -13.125507354736328
    10. 'flatten' → logprob: -14.000507354736328

Token 550: '_flat' (ID: 103794)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011056899093091488
    2. ' =' → logprob: -4.511056900024414
    3. '_tuple' → logprob: -12.261056900024414
    4. '_state' → logprob: -12.886056900024414
    5. '_' → logprob: -14.011056900024414
    6. '_t' → logprob: -14.636056900024414
    7. '_target' → logprob: -15.636056900024414
    8. '_=' → logprob: -16.136056900024414
    9. '_states' → logprob: -16.261056900024414
    10. 'state' → logprob: -16.386056900024414

Token 551: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0549871064722538
    2. ' =' → logprob: -2.9299871921539307
    3. '_state' → logprob: -10.179986953735352
    4. '_target' → logprob: -10.304986953735352
    5. '_' → logprob: -11.304986953735352
    6. '=[]' → logprob: -11.679986953735352
    7. 'state' → logprob: -12.429986953735352
    8. '_states' → logprob: -12.804986953735352
    9. 'ed' → logprob: -13.429986953735352
    10. ',' → logprob: -14.179986953735352

Token 552: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.0012151175178587437
    2. ' tuple' → logprob: -6.751214981079102
    3. '(tuple' → logprob: -10.876214981079102
    4. '   ' → logprob: -11.251214981079102
    5. '()
' → logprob: -11.501214981079102
    6. 'sum' → logprob: -14.001214981079102
    7. '()' → logprob: -14.501214981079102
    8. '
' → logprob: -15.126214981079102
    9. 'tu' → logprob: -15.501214981079102
    10. '(
' → logprob: -15.626214981079102

Token 553: '('' (ID: 706)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.6613966226577759
    2. '('' → logprob: -0.7863966226577759
    3. 'c' → logprob: -4.661396503448486
    4. '(cell' → logprob: -4.661396503448486
    5. '("' → logprob: -5.786396503448486
    6. '(char' → logprob: -6.661396503448486
    7. '''.' → logprob: -6.661396503448486
    8. 'char' → logprob: -6.786396503448486
    9. '(ch' → logprob: -6.911396503448486
    10. 'cell' → logprob: -7.286396503448486

Token 554: ''.' (ID: 6120)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.6683962941169739
    2. ''.' → logprob: -1.043396234512329
    3. 'c' → logprob: -2.043396234512329
    4. '".' → logprob: -5.793396472930908
    5. ' c' → logprob: -7.293396472930908
    6. '''' → logprob: -7.418396472930908
    7. ''' → logprob: -7.543396472930908
    8. '"' → logprob: -8.79339599609375
    9. ' ''.' → logprob: -8.79339599609375
    10. ' ' → logprob: -9.29339599609375

Token 555: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.001313809072598815
    2. 'j' → logprob: -7.12631368637085
    3. ''.' → logprob: -8.001314163208008
    4. '''.' → logprob: -8.751314163208008
    5. '.' → logprob: -11.376314163208008
    6. '".' → logprob: -13.501314163208008
    7. 'jo' → logprob: -13.751314163208008
    8. '   ' → logprob: -14.251314163208008
    9. ' join' → logprob: -15.251314163208008
    10. '.join' → logprob: -15.251314163208008

Token 556: '(row' (ID: 15945)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.008501105010509491
    2. '(target' → logprob: -5.258501052856445
    3. 'row' → logprob: -5.758501052856445
    4. 'line' → logprob: -9.508501052856445
    5. ' target' → logprob: -11.008501052856445
    6. '[target' → logprob: -12.258501052856445
    7. 'r' → logprob: -12.383501052856445
    8. '(row' → logprob: -12.508501052856445
    9. 'c' → logprob: -13.883501052856445
    10. '   ' → logprob: -14.258501052856445

Token 557: ')' (ID: 8)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6907835006713867
    2. ' for' → logprob: -0.9407835006713867
    3. ')' → logprob: -2.8157835006713867
    4. 'target' → logprob: -3.6907835006713867
    5. '(target' → logprob: -3.9407835006713867
    6. '   ' → logprob: -5.690783500671387
    7. ' target' → logprob: -7.815783500671387
    8. '[target' → logprob: -9.190783500671387
    9. ')+' → logprob: -9.315783500671387
    10. '
' → logprob: -10.690783500671387

Token 558: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3139694333076477
    2. ' for' → logprob: -1.313969373703003
    3. '   ' → logprob: -7.813969612121582
    4. ')' → logprob: -8.813969612121582
    5. 'target' → logprob: -9.563969612121582
    6. '(target' → logprob: -10.813969612121582
    7. ' ' → logprob: -11.063969612121582
    8. '('' → logprob: -11.563969612121582
    9. '       ' → logprob: -11.813969612121582
    10. '  ' → logprob: -12.188969612121582

Token 559: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.01895853690803051
    2. ' row' → logprob: -4.018958568572998
    3. 'target' → logprob: -7.268958568572998
    4. '	row' → logprob: -10.01895809173584
    5. ' target' → logprob: -10.39395809173584
    6. 'r' → logprob: -11.01895809173584
    7. ' ' → logprob: -12.89395809173584
    8. 'i' → logprob: -13.14395809173584
    9. '=row' → logprob: -13.14395809173584
    10. '(row' → logprob: -13.51895809173584

Token 560: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20151831209659576
    2. 'in' → logprob: -1.7015182971954346
    3. 'target' → logprob: -9.951518058776855
    4. '_in' → logprob: -11.326518058776855
    5. ' ' → logprob: -11.451518058776855
    6. '   ' → logprob: -11.701518058776855
    7. 'i' → logprob: -12.201518058776855
    8. 's' → logprob: -12.201518058776855
    9. ')' → logprob: -13.201518058776855
    10. '  ' → logprob: -13.201518058776855

Token 561: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.0012570185353979468
    2. ' target' → logprob: -6.751256942749023
    3. 'range' → logprob: -9.376256942749023
    4. '['' → logprob: -14.376256942749023
    5. ' range' → logprob: -14.751256942749023
    6. '[' → logprob: -15.251256942749023
    7. '[target' → logprob: -15.251256942749023
    8. 'row' → logprob: -15.501256942749023
    9. '   ' → logprob: -15.751256942749023
    10. '(target' → logprob: -16.001256942749023

Token 562: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026190681383013725
    2. ').' → logprob: -4.026190757751465
    3. ')
' → logprob: -5.276190757751465
    4. ')[' → logprob: -6.776190757751465
    5. ')+' → logprob: -7.151190757751465
    6. '   ' → logprob: -7.276190757751465
    7. 'for' → logprob: -9.526190757751465
    8. ')+'' → logprob: -10.151190757751465
    9. ' )' → logprob: -10.401190757751465
    10. ' for' → logprob: -10.901190757751465

Token 563: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9477978944778442
    2. '   ' → logprob: -1.0727978944778442
    3. '
' → logprob: -2.0727977752685547
    4. '_flat' → logprob: -3.0727977752685547
    5. '#' → logprob: -3.6977977752685547
    6. '[' → logprob: -4.447797775268555
    7. 'target' → logprob: -4.822797775268555
    8. ')
' → logprob: -4.947797775268555
    9. '+' → logprob: -5.072797775268555
    10. ' +' → logprob: -5.197797775268555

Token 564: ' #' (ID: 1069)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.3002466857433319
    2. 'state' → logprob: -1.6752467155456543
    3. '#' (adapté à ' #') → logprob: -3.9252467155456543
    4. ' target' → logprob: -4.050246715545654
    5. ')' → logprob: -4.550246715545654
    6. '
' → logprob: -4.925246715545654
    7. 'flat' → logprob: -5.925246715545654
    8. '   ' → logprob: -6.050246715545654
    9. 'grid' → logprob: -6.175246715545654
    10. 'current' → logprob: -6.300246715545654

Token 565: ' We'll' (ID: 46830)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.06762725114822388
    2. 'state' → logprob: -2.942627191543579
    3. 'grid' → logprob: -5.067627429962158
    4. '#' → logprob: -6.192627429962158
    5. 'current' → logprob: -6.442627429962158
    6. 'flat' → logprob: -6.692627429962158
    7. '   ' → logprob: -7.192627429962158
    8. ' target' → logprob: -8.442626953125
    9. 'def' → logprob: -8.817626953125
    10. 'board' → logprob: -8.942626953125

Token 566: ' flatten' (ID: 61445)
  Prédit: 'flatten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flatten' → logprob: -0.9794041514396667
    2. ' flatten' → logprob: -1.2294042110443115
    3. 'convert' → logprob: -1.7294042110443115
    4. ' represent' → logprob: -2.6044042110443115
    5. ' convert' → logprob: -3.8544042110443115
    6. 'represent' → logprob: -4.229403972625732
    7. 'continue' → logprob: -4.979403972625732
    8. 'need' → logprob: -5.104403972625732
    9. ' use' → logprob: -5.104403972625732
    10. ' continue' → logprob: -5.479403972625732

Token 567: ' to' (ID: 316)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.07913465797901154
    2. ' target' → logprob: -2.954134702682495
    3. ' the' → logprob: -5.454134464263916
    4. '('' → logprob: -5.704134464263916
    5. 'state' → logprob: -5.829134464263916
    6. '(
' → logprob: -5.829134464263916
    7. 'the' → logprob: -6.079134464263916
    8. '_target' → logprob: -6.204134464263916
    9. '(' → logprob: -6.954134464263916
    10. '(target' → logprob: -7.079134464263916

Token 568: ' length' (ID: 5517)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.9936092495918274
    2. 'tuple' → logprob: -1.2436091899871826
    3. ' ''.' → logprob: -1.7436091899871826
    4. ' tuple' → logprob: -1.8686091899871826
    5. ''' → logprob: -6.118609428405762
    6. '''
' → logprob: -6.493609428405762
    7. ' ' → logprob: -6.493609428405762
    8. '('' → logprob: -6.618609428405762
    9. '   ' → logprob: -7.118609428405762
    10. 'sum' → logprob: -7.368609428405762

Token 569: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08611612021923065
    2. '(' → logprob: -3.211116075515747
    3. '16' → logprob: -3.336116075515747
    4. ' =' → logprob: -5.461116313934326
    5. ' ' → logprob: -6.461116313934326
    6. '4' → logprob: -7.836116313934326
    7. '_' → logprob: -9.586115837097168
    8. ' (' → logprob: -9.836115837097168
    9. 'target' → logprob: -10.211115837097168
    10. '(target' → logprob: -10.461115837097168

Token 570: '16' (ID: 1125)
  Prédit: '16'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '16' → logprob: -0.48261353373527527
    2. '=' → logprob: -0.9826135635375977
    3. '(' → logprob: -5.107613563537598
    4. ' =' → logprob: -6.482613563537598
    5. ' ' → logprob: -7.482613563537598
    6. '64' → logprob: -9.107613563537598
    7. '   ' → logprob: -9.607613563537598
    8. '[' → logprob: -9.982613563537598
    9. ':' → logprob: -10.232613563537598
    10. '4' → logprob: -10.982613563537598

Token 571: ' string' (ID: 1621)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.3356650471687317
    2. 'target' → logprob: -1.585664987564087
    3. ')' → logprob: -3.835664987564087
    4. '   ' → logprob: -4.460665225982666
    5. '_flat' → logprob: -4.710665225982666
    6. ',' → logprob: -5.085665225982666
    7. '
' → logprob: -5.335665225982666
    8. ':' → logprob: -5.585665225982666
    9. 'flat' → logprob: -5.585665225982666
    10. ' target' → logprob: -5.835665225982666

Token 572: ' for' (ID: 395)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.5726897120475769
    2. 'state' → logprob: -1.4476897716522217
    3. ')' → logprob: -2.8226897716522217
    4. ' =' → logprob: -3.3226897716522217
    5. '   ' → logprob: -3.6976897716522217
    6. '_flat' → logprob: -3.8226897716522217
    7. ':' → logprob: -4.447689533233643
    8. '_' → logprob: -4.947689533233643
    9. 'flat' → logprob: -5.072689533233643
    10. ',' → logprob: -5.197689533233643

Token 573: ' states' (ID: 9407)
  Prédit: ' target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' target' → logprob: -1.3025648593902588
    2. 'target' → logprob: -1.5525648593902588
    3. ' the' → logprob: -2.052564859390259
    4. ' state' → logprob: -2.552564859390259
    5. 'state' → logprob: -2.552564859390259
    6. '_' → logprob: -3.302564859390259
    7. ' i' → logprob: -3.302564859390259
    8. 'i' → logprob: -3.802564859390259
    9. ' _' → logprob: -3.802564859390259
    10. ' comparison' → logprob: -3.927564859390259

Token 574: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10665876418352127
    2. 'state' → logprob: -2.356658697128296
    3. ' state' → logprob: -6.356658935546875
    4. '
' → logprob: -6.356658935546875
    5. 'target' → logprob: -6.481658935546875
    6. 'current' → logprob: -7.231658935546875
    7. ')' → logprob: -8.356658935546875
    8. 'states' → logprob: -9.481658935546875
    9. ' current' → logprob: -9.606658935546875
    10. ' target' → logprob: -9.731658935546875

Token 575: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04022803157567978
    2. 'state' → logprob: -3.2902281284332275
    3. 'current' → logprob: -7.040227890014648
    4. 'target' → logprob: -7.665227890014648
    5. ' state' → logprob: -8.290227890014648
    6. '    
' → logprob: -8.915227890014648
    7. 'states' → logprob: -9.665227890014648
    8. 'next' → logprob: -9.665227890014648
    9. '
' → logprob: -9.790227890014648
    10. ')' → logprob: -9.915227890014648

Token 576: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' (adapté à ' target') → logprob: -0.18300983309745789
    2. ' target' → logprob: -2.5580098628997803
    3. 'state' → logprob: -3.1830098628997803
    4. '   ' → logprob: -3.3080098628997803
    5. 'current' → logprob: -4.808009624481201
    6. ' state' → logprob: -6.183009624481201
    7. ' current' → logprob: -6.808009624481201
    8. 'initial' → logprob: -8.68301010131836
    9. 'cur' → logprob: -9.68301010131836
    10. 'start' → logprob: -10.18301010131836

Token 577: '_state' (ID: 9479)
  Prédit: '_flat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flat' → logprob: -0.018884604796767235
    2. '_' → logprob: -4.018884658813477
    3. '_state' → logprob: -7.643884658813477
    4. '_str' → logprob: -9.518884658813477
    5. '=' → logprob: -9.518884658813477
    6. '_states' → logprob: -9.768884658813477
    7. ' =' → logprob: -10.643884658813477
    8. '_=' → logprob: -12.143884658813477
    9. '_raw' → logprob: -12.268884658813477
    10. 'flat' → logprob: -12.893884658813477

Token 578: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326398253440857
    2. '=' → logprob: -1.313264012336731
    3. ' =
' → logprob: -14.563263893127441
    4. ')' → logprob: -14.813263893127441
    5. ' ' → logprob: -15.188263893127441
    6. ',' → logprob: -15.188263893127441
    7. '=
' → logprob: -15.688263893127441
    8. '=[]' → logprob: -15.938263893127441
    9. ' =[' → logprob: -16.063264846801758
    10. ' ='' → logprob: -16.188264846801758

Token 579: ' tuple' (ID: 31311)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.06116635724902153
    2. 'tuple' → logprob: -3.061166286468506
    3. ' ''.' → logprob: -4.561166286468506
    4. '''
' → logprob: -7.436166286468506
    5. ' tuple' → logprob: -7.686166286468506
    6. ''' → logprob: -7.811166286468506
    7. '''' → logprob: -8.186166763305664
    8. '('' → logprob: -8.436166763305664
    9. '   ' → logprob: -10.186166763305664
    10. '"' → logprob: -10.436166763305664

Token 580: '(c' (ID: 2410)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0024629333056509495
    2. '(c' → logprob: -6.127462863922119
    3. '''.' → logprob: -9.252463340759277
    4. '(' → logprob: -9.752463340759277
    5. '(cell' → logprob: -10.627463340759277
    6. '(char' → logprob: -10.752463340759277
    7. '(sum' → logprob: -11.252463340759277
    8. '(i' → logprob: -11.502463340759277
    9. '([' → logprob: -11.627463340759277
    10. '(ch' → logprob: -11.627463340759277

Token 581: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4289112091064453
    2. ' for' → logprob: -1.0539112091064453
    3. ' ' → logprob: -9.553911209106445
    4. '('' → logprob: -9.803911209106445
    5. '	for' → logprob: -10.553911209106445
    6. '
' → logprob: -10.678911209106445
    7. 'c' → logprob: -12.053911209106445
    8. '''.' → logprob: -12.303911209106445
    9. '()' → logprob: -12.678911209106445
    10. '   ' → logprob: -13.178911209106445

Token 582: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.02637786790728569
    2. ' row' → logprob: -3.7763779163360596
    3. 'r' → logprob: -6.6513776779174805
    4. '''.' → logprob: -6.6513776779174805
    5. ''' → logprob: -8.27637767791748
    6. 'line' → logprob: -9.52637767791748
    7. ' ''.' → logprob: -9.65137767791748
    8. 'rows' → logprob: -10.27637767791748
    9. ' r' → logprob: -10.52637767791748
    10. '''' → logprob: -10.77637767791748

Token 583: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016036128625273705
    2. 'in' → logprob: -4.141036033630371
    3. ' ' → logprob: -14.266036033630371
    4. ' ' → logprob: -15.766036033630371
    5. '	in' → logprob: -15.891036033630371
    6. 's' → logprob: -16.391036987304688
    7. '   ' → logprob: -16.516036987304688
    8. '_in' → logprob: -16.516036987304688
    9. 'i' → logprob: -16.516036987304688
    10. '<|end|>' → logprob: -16.641036987304688

Token 584: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.0008082019630819559
    2. ' target' → logprob: -7.125808238983154
    3. ''' → logprob: -13.000807762145996
    4. '''.' → logprob: -14.875807762145996
    5. '   ' → logprob: -15.375807762145996
    6. 't' → logprob: -15.875807762145996
    7. '(target' → logprob: -16.000808715820312
    8. '['' → logprob: -16.125808715820312
    9. ' ' → logprob: -16.625808715820312
    10. ''t' → logprob: -16.750808715820312

Token 585: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2102663367986679
    2. ' for' → logprob: -1.710266351699829
    3. ' in' → logprob: -5.46026611328125
    4. 'in' → logprob: -5.58526611328125
    5. '   ' → logprob: -7.58526611328125
    6. ' ' → logprob: -8.96026611328125
    7. ')' → logprob: -9.96026611328125
    8. '    ' → logprob: -10.33526611328125
    9. ''' → logprob: -10.83526611328125
    10. '       ' → logprob: -10.96026611328125

Token 586: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00010902655776590109
    2. ' c' → logprob: -9.12510871887207
    3. '	c' → logprob: -17.25010871887207
    4. 'row' → logprob: -18.75010871887207
    5. ')c' → logprob: -19.50010871887207
    6. 'cation' → logprob: -20.50010871887207
    7. ' ' → logprob: -20.62510871887207
    8. '
' → logprob: -20.75010871887207
    9. '_c' → logprob: -21.12510871887207
    10. 'cell' → logprob: -21.37510871887207

Token 587: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04875415936112404
    2. 'in' → logprob: -3.0487542152404785
    3. 'c' → logprob: -9.04875373840332
    4. 'row' → logprob: -10.79875373840332
    5. ' c' → logprob: -11.17375373840332
    6. ' ' → logprob: -11.42375373840332
    7. ' row' → logprob: -13.04875373840332
    8. '  ' → logprob: -14.54875373840332
    9. ')' → logprob: -14.92375373840332
    10. '   ' → logprob: -15.29875373840332

Token 588: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -1.5570885807392187e-05
    2. ' row' → logprob: -11.125015258789062
    3. 'c' → logprob: -14.125015258789062
    4. '	row' → logprob: -17.625015258789062
    5. '(row' → logprob: -17.875015258789062
    6. 'r' → logprob: -18.625015258789062
    7. '$row' → logprob: -21.125015258789062
    8. 'col' → logprob: -21.125015258789062
    9. '=row' → logprob: -21.250015258789062
    10. 'rown' → logprob: -21.375015258789062

Token 589: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011749862460419536
    2. ' )' → logprob: -6.7511749267578125
    3. '   ' → logprob: -13.001174926757812
    4. ')}' → logprob: -14.751174926757812
    5. ')
' → logprob: -15.126174926757812
    6. ')+' → logprob: -15.251174926757812
    7. ')`' → logprob: -15.376174926757812
    8. ')#' → logprob: -15.501174926757812
    9. '),' → logprob: -15.626174926757812
    10. '))' → logprob: -15.876174926757812

Token 590: '   ' (ID: 271)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.4308456480503082
    2. 'visited' → logprob: -1.5558456182479858
    3. '   ' → logprob: -2.1808457374572754
    4. 'initial' → logprob: -5.430845737457275
    5. 'start' → logprob: -5.555845737457275
    6. 'from' → logprob: -5.680845737457275
    7. 'states' → logprob: -5.680845737457275
    8. '
' → logprob: -5.805845737457275
    9. 'current' → logprob: -6.180845737457275
    10. ' state' → logprob: -6.680845737457275

Token 591: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.5887933373451233
    2. 'state' → logprob: -1.8387932777404785
    3. 'initial' → logprob: -1.8387932777404785
    4. 'from' → logprob: -3.0887932777404785
    5. 'start' → logprob: -3.5887932777404785
    6. 'empty' → logprob: -4.0887932777404785
    7. 'seen' → logprob: -4.5887932777404785
    8. 'queue' → logprob: -4.8387932777404785
    9. '#' (adapté à ' #') → logprob: -5.0887932777404785
    10. '   ' → logprob: -5.3387932777404785

Token 592: ' initial' (ID: 4871)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.9990413188934326
    2. 'initial' → logprob: -1.2490413188934326
    3. 'state' → logprob: -1.6240413188934326
    4. 'start' → logprob: -3.1240413188934326
    5. '#' → logprob: -3.4990413188934326
    6. 'grid' → logprob: -3.9990413188934326
    7. 'queue' → logprob: -4.374041557312012
    8. 'empty' → logprob: -4.374041557312012
    9. 'from' → logprob: -4.499041557312012
    10. 'seen' → logprob: -5.124041557312012

Token 593: ' state' (ID: 2608)
  Prédit: '_state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -3.214019307051785e-05
    2. 'state' → logprob: -10.375032424926758
    3. 'State' → logprob: -14.875032424926758
    4. '_' → logprob: -15.000032424926758
    5. ' =' → logprob: -16.625032424926758
    6. '_states' → logprob: -17.000032424926758
    7. '_STATE' → logprob: -17.500032424926758
    8. ' state' → logprob: -18.375032424926758
    9. '=' → logprob: -18.375032424926758
    10. ')' → logprob: -19.000032424926758

Token 594: ':' (ID: 25)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.5166874527931213
    2. ' =' → logprob: -1.3916873931884766
    3. 'initial' → logprob: -2.6416873931884766
    4. '   ' → logprob: -3.0166873931884766
    5. '=' → logprob: -3.8916873931884766
    6. 'current' → logprob: -4.766687393188477
    7. '_state' → logprob: -5.891687393188477
    8. 'empty' → logprob: -6.516687393188477
    9. 'start' → logprob: -7.516687393188477
    10. ' state' → logprob: -7.766687393188477

Token 595: ' all' (ID: 722)
  Prédit: '('.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('.' → logprob: -0.47098037600517273
    2. 'tuple' → logprob: -1.9709804058074951
    3. 'state' → logprob: -2.095980405807495
    4. '('.',' → logprob: -2.970980405807495
    5. '('' → logprob: -3.345980405807495
    6. '('.')' → logprob: -4.345980167388916
    7. 'empty' → logprob: -5.595980167388916
    8. 'initial' → logprob: -6.095980167388916
    9. ''.' → logprob: -6.095980167388916
    10. 'current' → logprob: -6.595980167388916

Token 596: ' '.' (ID: 12662)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5273393392562866
    2. ''.' → logprob: -1.0273393392562866
    3. ' '.'' → logprob: -4.152339458465576
    4. '('.')' → logprob: -4.652339458465576
    5. '_' → logprob: -4.777339458465576
    6. ''' → logprob: -5.277339458465576
    7. '('' → logprob: -5.902339458465576
    8. ' =' → logprob: -6.277339458465576
    9. '=' → logprob: -6.402339458465576
    10. '('.' → logprob: -6.652339458465576

Token 597: ''
' (ID: 2207)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10761183500289917
    2. ''.' → logprob: -2.732611894607544
    3. ''' → logprob: -3.982611894607544
    4. '.'' → logprob: -5.232611656188965
    5. '....' → logprob: -5.232611656188965
    6. '''''' → logprob: -5.857611656188965
    7. '')' → logprob: -6.982611656188965
    8. ')' → logprob: -7.232611656188965
    9. ''''' → logprob: -7.857611656188965
    10. '........' → logprob: -7.982611656188965

Token 598: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9661161303520203
    2. 'state' → logprob: -1.216116189956665
    3. 'initial' → logprob: -1.591116189956665
    4. 'current' → logprob: -2.216116189956665
    5. 'start' → logprob: -4.841115951538086
    6. 'init' → logprob: -7.216115951538086
    7. ' initial' → logprob: -7.466115951538086
    8. ' state' → logprob: -7.966115951538086
    9. ' current' → logprob: -7.966115951538086
    10. 'cur' → logprob: -8.341115951538086

Token 599: ' empty' (ID: 8213)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.29795801639556885
    2. 'state' → logprob: -1.5479580163955688
    3. 'current' → logprob: -3.5479578971862793
    4. 'start' → logprob: -4.422957897186279
    5. 'init' → logprob: -5.547957897186279
    6. 'cur' → logprob: -8.922958374023438
    7. 'curr' → logprob: -9.047958374023438
    8. '   ' → logprob: -10.297958374023438
    9. ' initial' → logprob: -11.422958374023438
    10. ' state' → logprob: -12.297958374023438

Token 600: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -2.1054253011243418e-05
    2. 'state' → logprob: -11.500020980834961
    3. ' =' → logprob: -12.125020980834961
    4. '_' → logprob: -13.000020980834961
    5. '_states' → logprob: -13.500020980834961
    6. '=' → logprob: -13.750020980834961
    7. '_STATE' → logprob: -14.750020980834961
    8. '_State' → logprob: -16.00002098083496
    9. 'State' → logprob: -16.37502098083496
    10. '=_' → logprob: -16.87502098083496

Token 601: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759400725364685
    2. ' =' → logprob: -0.8259400725364685
    3. '   ' → logprob: -14.950940132141113
    4. '=[]' → logprob: -16.700939178466797
    5. '=('' → logprob: -16.950939178466797
    6. '_' → logprob: -17.325939178466797
    7. ',' → logprob: -17.325939178466797
    8. ' ' → logprob: -17.325939178466797
    9. ')' → logprob: -17.325939178466797
    10. '＝' → logprob: -17.575939178466797

Token 602: ' tuple' (ID: 31311)
  Prédit: '('.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('.' → logprob: -0.585598349571228
    2. '('.',' → logprob: -1.085598349571228
    3. 'tuple' → logprob: -2.3355984687805176
    4. '('.')' → logprob: -4.835598468780518
    5. '('' → logprob: -8.21059799194336
    6. '("."' → logprob: -8.83559799194336
    7. ''.' → logprob: -9.21059799194336
    8. '(tuple' → logprob: -9.21059799194336
    9. ' tuple' → logprob: -9.33559799194336
    10. '(' → logprob: -10.08559799194336

Token 603: '('.' (ID: 7925)
  Prédit: '('.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('.' → logprob: -0.04074937850236893
    2. ''.' → logprob: -3.2907493114471436
    3. '('.')' → logprob: -6.165749549865723
    4. '('.',' → logprob: -7.665749549865723
    5. '("."' → logprob: -9.665749549865723
    6. '['' → logprob: -10.040749549865723
    7. '(' → logprob: -11.415749549865723
    8. '(['' → logprob: -11.665749549865723
    9. '.' → logprob: -12.915749549865723
    10. '('.');
' → logprob: -13.040749549865723

Token 604: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.11455447226762772
    2. '.'' → logprob: -2.6145544052124023
    3. '.' → logprob: -3.9895544052124023
    4. ''.' → logprob: -4.239554405212402
    5. '')' → logprob: -6.739554405212402
    6. ''*' → logprob: -7.989554405212402
    7. 'for' → logprob: -8.239554405212402
    8. ' for' → logprob: -9.114554405212402
    9. '.')' → logprob: -9.614554405212402
    10. '.'.' → logprob: -10.114554405212402

Token 605: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16190087795257568
    2. ' for' → logprob: -2.0369009971618652
    3. '.' → logprob: -4.536900997161865
    4. ')' → logprob: -4.911900997161865
    5. '*' → logprob: -8.161900520324707
    6. '           ' → logprob: -9.161900520324707
    7. ' ' → logprob: -9.161900520324707
    8. '   ' → logprob: -9.911900520324707
    9. ')*' → logprob: -9.911900520324707
    10. '         ' → logprob: -10.036900520324707

Token 606: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0007079057977534831
    2. '_range' → logprob: -7.625708103179932
    3. ' _' → logprob: -9.875707626342773
    4. '_c' → logprob: -10.000707626342773
    5. '_in' → logprob: -10.500707626342773
    6. 'range' → logprob: -10.625707626342773
    7. '_i' → logprob: -11.125707626342773
    8. '_
' → logprob: -11.125707626342773
    9. '.' → logprob: -11.250707626342773
    10. ' range' → logprob: -11.500707626342773

Token 607: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4247625768184662
    2. ' in' → logprob: -1.1747626066207886
    3. 'range' → logprob: -3.299762487411499
    4. ' range' → logprob: -8.299762725830078
    5. ' ' → logprob: -11.049762725830078
    6. '_' → logprob: -11.674762725830078
    7. 'row' → logprob: -11.799762725830078
    8. 'i' → logprob: -12.299762725830078
    9. ' _' → logprob: -12.924762725830078
    10. '_range' → logprob: -14.174762725830078

Token 608: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00034058792516589165
    2. ' range' → logprob: -8.000340461730957
    3. '16' → logprob: -12.750340461730957
    4. '_' → logprob: -14.125340461730957
    5. '(range' → logprob: -14.375340461730957
    6. '_range' → logprob: -15.375340461730957
    7. '[' → logprob: -15.750340461730957
    8. '	range' → logprob: -16.375341415405273
    9. 'r' → logprob: -16.500341415405273
    10. 'rang' → logprob: -16.625341415405273

Token 609: '(' (ID: 7)
  Prédit: '16'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '16' → logprob: -0.0008052219054661691
    2. '(' → logprob: -7.125805377960205
    3. ' ' → logprob: -14.375804901123047
    4. ')' → logprob: -16.875804901123047
    5. '   ' → logprob: -16.875804901123047
    6. ' (' → logprob: -18.375804901123047
    7. '(
' → logprob: -18.375804901123047
    8. '{' → logprob: -19.625804901123047
    9. '1' → logprob: -20.000804901123047
    10. ' sixteen' → logprob: -20.000804901123047

Token 610: '16' (ID: 1125)
  Prédit: '16'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '16' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. ')' → logprob: -16.375001907348633
    4. '1' → logprob: -17.250001907348633
    5. '(' → logprob: -17.625001907348633
    6. '   ' → logprob: -19.000001907348633
    7. '１６' → logprob: -19.750001907348633
    8. '4' → logprob: -20.000001907348633
    9. ' sixteen' → logprob: -20.125001907348633
    10. '
' → logprob: -20.625001907348633

Token 611: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4740813374519348
    2. '))' → logprob: -0.9740813374519348
    3. ')))' → logprob: -13.474081039428711
    4. ' )' → logprob: -14.474081039428711
    5. '   ' → logprob: -14.599081039428711
    6. ' ))' → logprob: -14.849081039428711
    7. '),' → logprob: -15.099081039428711
    8. ''))' → logprob: -15.224081039428711
    9. ')}' → logprob: -16.09908103942871
    10. ')")' → logprob: -16.09908103942871

Token 612: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01427010539919138
    2. 'from' → logprob: -4.889270305633545
    3. 'queue' → logprob: -5.639270305633545
    4. 'visited' → logprob: -5.889270305633545
    5. '    
' → logprob: -8.639269828796387
    6. '
' → logprob: -9.264269828796387
    7. '```' → logprob: -11.514269828796387
    8. 'q' → logprob: -11.514269828796387
    9. 'seen' → logprob: -12.389269828796387
    10. 'def' → logprob: -12.514269828796387

Token 613: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.5320266485214233
    2. 'queue' → logprob: -1.0320266485214233
    3. '   ' → logprob: -3.032026767730713
    4. 'from' → logprob: -5.532026767730713
    5. 'q' → logprob: -6.282026767730713
    6. '
' → logprob: -7.032026767730713
    7. '    
' → logprob: -7.532026767730713
    8. 'seen' → logprob: -7.657026767730713
    9. ' visited' → logprob: -8.907026290893555
    10. 'dist' → logprob: -10.032026290893555

Token 614: ' Pre' (ID: 4659)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.04163733497262001
    2. 'visited' → logprob: -3.291637420654297
    3. 'q' → logprob: -5.791637420654297
    4. 'from' → logprob: -8.541637420654297
    5. 'seen' → logprob: -9.291637420654297
    6. '   ' → logprob: -9.416637420654297
    7. 'que' → logprob: -10.041637420654297
    8. '#' → logprob: -10.416637420654297
    9. 'Q' → logprob: -10.541637420654297
    10. '
' → logprob: -10.666637420654297

Token 615: 'compute' (ID: 54521)
  Prédit: 'pare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pare' → logprob: -0.5330584645271301
    2. 'compute' → logprob: -1.0330584049224854
    3. 'computed' → logprob: -4.2830586433410645
    4. 'pared' → logprob: -4.7830586433410645
    5. 'ss' → logprob: -5.0330586433410645
    6. 'dict' → logprob: -5.5330586433410645
    7. '#' → logprob: -6.0330586433410645
    8. 'parer' → logprob: -6.1580586433410645
    9. 'comput' → logprob: -6.2830586433410645
    10. 'c' → logprob: -6.4080586433410645

Token 616: ' all' (ID: 722)
  Prédit: 'stamp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stamp' → logprob: -0.03878612816333771
    2. 'cover' → logprob: -4.288785934448242
    3. 'covers' → logprob: -4.538785934448242
    4. 'st' → logprob: -5.788785934448242
    5. 'covered' → logprob: -6.163785934448242
    6. 'coverage' → logprob: -6.288785934448242
    7. 'paint' → logprob: -6.288785934448242
    8. ' stamp' → logprob: -6.913785934448242
    9. '#' → logprob: -7.413785934448242
    10. 'all' → logprob: -7.413785934448242

Token 617: ' possible' (ID: 4149)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.1769002228975296
    2. 'possible' → logprob: -2.0519001483917236
    3. 'placements' → logprob: -4.051900386810303
    4. 'stamp' → logprob: -5.301900386810303
    5. 'poss' → logprob: -5.551900386810303
    6. 'pos' → logprob: -6.051900386810303
    7. 'valid' → logprob: -6.926900386810303
    8. 'poses' → logprob: -7.301900386810303
    9. 'places' → logprob: -7.426900386810303
    10. 'covers' → logprob: -7.551900386810303

Token 618: ' stamp' (ID: 29381)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.059340305626392365
    2. 'placements' → logprob: -2.934340238571167
    3. 'stamp' → logprob: -6.434340476989746
    4. 'places' → logprob: -7.309340476989746
    5. 'poses' → logprob: -7.434340476989746
    6. 'pos' → logprob: -8.059340476989746
    7. 'st' → logprob: -8.184340476989746
    8. ' placements' → logprob: -8.309340476989746
    9. ' positions' → logprob: -8.434340476989746
    10. '_positions' → logprob: -8.934340476989746

Token 619: ' placements' (ID: 122051)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.0428696908056736
    2. '_' → logprob: -3.417869806289673
    3. ' placements' → logprob: -5.167869567871094
    4. ' positions' → logprob: -7.167869567871094
    5. 's' → logprob: -7.292869567871094
    6. 'positions' → logprob: -7.542869567871094
    7. '_states' → logprob: -7.667869567871094
    8. '_pos' → logprob: -8.042869567871094
    9. 'placements' → logprob: -8.167869567871094
    10. '_places' → logprob: -8.417869567871094

Token 620: ' with' (ID: 483)
  Prédit: 'placements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'placements' → logprob: -0.40898454189300537
    2. '   ' → logprob: -1.1589845418930054
    3. 'positions' → logprob: -4.408984661102295
    4. 'possible' → logprob: -5.658984661102295
    5. ' placements' → logprob: -6.158984661102295
    6. 'places' → logprob: -6.658984661102295
    7. 'stamp' → logprob: -6.658984661102295
    8. 'all' → logprob: -7.783984661102295
    9. 'place' → logprob: -7.783984661102295
    10. 'poss' → logprob: -8.283984184265137

Token 621: ' all' (ID: 722)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.8047930598258972
    2. 'their' → logprob: -0.9297930598258972
    3. ' their' → logprob: -2.554793119430542
    4. 'offset' → logprob: -3.679793119430542
    5. 'all' → logprob: -4.679792881011963
    6. '#' → logprob: -5.054792881011963
    7. ' positions' → logprob: -5.179792881011963
    8. 'position' → logprob: -5.304792881011963
    9. 'coordinates' → logprob: -5.304792881011963
    10. 'h' → logprob: -5.429792881011963

Token 622: ' colors' (ID: 10803)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.17065981030464172
    2. 'he' → logprob: -2.2956597805023193
    3. 'h' → logprob: -3.6706597805023193
    4. 'possible' → logprob: -4.045660018920898
    5. 'sizes' → logprob: -5.545660018920898
    6. 'colors' → logprob: -6.295660018920898
    7. 'poss' → logprob: -6.295660018920898
    8. 'pos' → logprob: -6.670660018920898
    9. '(' → logprob: -6.920660018920898
    10. 'def' → logprob: -7.545660018920898

Token 623: ' R' (ID: 460)
  Prédit: 'placements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'placements' → logprob: -0.3395041227340698
    2. '   ' → logprob: -1.3395041227340698
    3. 'positions' → logprob: -4.339504241943359
    4. 'possible' → logprob: -5.339504241943359
    5. ' placements' → logprob: -5.464504241943359
    6. 'all' → logprob: -6.464504241943359
    7. 'places' → logprob: -7.339504241943359
    8. 'poss' → logprob: -7.839504241943359
    9. 'placement' → logprob: -8.08950424194336
    10. 'actions' → logprob: -8.58950424194336

Token 624: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3905043601989746
    2. ',G' → logprob: -1.7655043601989746
    3. 'GB' → logprob: -2.6405043601989746
    4. 'G' → logprob: -3.3905043601989746
    5. ' ,' → logprob: -3.8905043601989746
    6. ' G' → logprob: -4.015504360198975
    7. ' ' → logprob: -6.515504360198975
    8. '',' → logprob: -6.515504360198975
    9. 'B' → logprob: -6.640504360198975
    10. ',B' → logprob: -7.140504360198975

Token 625: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.3485567569732666
    2. ' G' → logprob: -1.2235567569732666
    3. 'GB' → logprob: -10.348556518554688
    4. ' ' → logprob: -10.348556518554688
    5. ''' → logprob: -11.098556518554688
    6. ',G' → logprob: -11.598556518554688
    7. '
' → logprob: -12.098556518554688
    8. '	G' → logprob: -12.223556518554688
    9. 'B' → logprob: -13.098556518554688
    10. ' ' → logprob: -13.348556518554688

Token 626: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0858118012547493
    2. 'B' → logprob: -2.8358118534088135
    3. ',B' → logprob: -3.8358118534088135
    4. ' B' → logprob: -7.085811614990234
    5. ' ,' → logprob: -7.085811614990234
    6. ' and' → logprob: -9.210811614990234
    7. 'and' → logprob: -9.960811614990234
    8. '   ' → logprob: -10.210811614990234
    9. ' ' → logprob: -10.710811614990234
    10. ',
' → logprob: -10.960811614990234

Token 627: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.002483626827597618
    2. ' B' → logprob: -6.00248384475708
    3. ' and' → logprob: -12.627483367919922
    4. 'and' → logprob: -12.877483367919922
    5. ' ' → logprob: -14.002483367919922
    6. '
' → logprob: -14.752483367919922
    7. '	B' → logprob: -15.377483367919922
    8. '#' → logprob: -15.502483367919922
    9. ',' → logprob: -16.252483367919922
    10. '```' → logprob: -16.502483367919922

Token 628: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12443556636571884
    2. 'placements' → logprob: -2.2494356632232666
    3. 'possible' → logprob: -5.3744354248046875
    4. 'all' → logprob: -6.2494354248046875
    5. 'positions' → logprob: -6.3744354248046875
    6. ' placements' → logprob: -7.1244354248046875
    7. 'stamp' → logprob: -7.1244354248046875
    8. 'poss' → logprob: -7.6244354248046875
    9. 'actions' → logprob: -7.9994354248046875
    10. 'places' → logprob: -8.624435424804688

Token 629: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30980968475341797
    2. 'placements' → logprob: -1.434809684753418
    3. ' placements' → logprob: -4.559809684753418
    4. 'possible' → logprob: -4.684809684753418
    5. 'positions' → logprob: -5.684809684753418
    6. 'all' → logprob: -6.309809684753418
    7. ' possible' → logprob: -7.309809684753418
    8. 'poss' → logprob: -7.559809684753418
    9. 'stamp' → logprob: -8.184809684753418
    10. 'plac' → logprob: -8.184809684753418

Token 630: ' colors' (ID: 10803)
  Prédit: 'placements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placements' → logprob: -0.13812141120433807
    2. 'possible' → logprob: -3.0131213665008545
    3. 'all' → logprob: -4.138121604919434
    4. '   ' → logprob: -4.138121604919434
    5. 'stamp' → logprob: -4.263121604919434
    6. 'positions' → logprob: -4.513121604919434
    7. 'colors' (adapté à ' colors') → logprob: -4.888121604919434
    8. 'actions' → logprob: -5.263121604919434
    9. ' placements' → logprob: -5.388121604919434
    10. 'poss' → logprob: -5.888121604919434

Token 631: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011076359078288078
    2. '=' → logprob: -4.5110764503479
    3. '=['' → logprob: -10.761075973510742
    4. 's' → logprob: -12.511075973510742
    5. ' ='' → logprob: -14.136075973510742
    6. ',' → logprob: -14.511075973510742
    7. '='' → logprob: -14.761075973510742
    8. 'colors' → logprob: -14.761075973510742
    9. '_colors' → logprob: -15.011075973510742
    10. '['' → logprob: -15.636075973510742

Token 632: ' ['' (ID: 5140)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.000726252153981477
    2. ''' → logprob: -7.500726222991943
    3. '["' → logprob: -9.250726699829102
    4. ' ['' → logprob: -10.000726699829102
    5. '('' → logprob: -10.750726699829102
    6. '"' → logprob: -11.500726699829102
    7. ''r' → logprob: -15.875726699829102
    8. ''Re' → logprob: -17.0007266998291
    9. '[R' → logprob: -17.2507266998291
    10. '("' → logprob: -17.2507266998291

Token 633: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.018177684396505356
    2. ''' → logprob: -4.018177509307861
    3. '\'' → logprob: -10.89317798614502
    4. ' R' → logprob: -12.14317798614502
    5. '"' → logprob: -14.01817798614502
    6. ' '' → logprob: -14.39317798614502
    7. ''''' → logprob: -14.51817798614502
    8. '',' → logprob: -14.64317798614502
    9. '']' → logprob: -14.64317798614502
    10. 'r' → logprob: -14.64317798614502

Token 634: '','' (ID: 4074)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0003408263437449932
    2. '','' → logprob: -8.000340461730957
    3. ''' → logprob: -12.250340461730957
    4. ' ',' → logprob: -15.500340461730957
    5. '",' → logprob: -16.000341415405273
    6. ',' → logprob: -16.125341415405273
    7. '',
' → logprob: -16.625341415405273
    8. 'R' → logprob: -17.500341415405273
    9. '',"' → logprob: -17.500341415405273
    10. 'G' → logprob: -17.625341415405273

Token 635: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.0003983760252594948
    2. ' G' → logprob: -7.8753981590271
    3. ''' → logprob: -11.000398635864258
    4. ',G' → logprob: -14.875398635864258
    5. ' ' → logprob: -15.000398635864258
    6. 'B' → logprob: -15.125398635864258
    7. '','' → logprob: -15.375398635864258
    8. 'GB' → logprob: -16.000398635864258
    9. '	G' → logprob: -16.250398635864258
    10. '
' → logprob: -16.750398635864258

Token 636: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.19295914471149445
    2. '',' → logprob: -1.942959189414978
    3. 'B' → logprob: -3.4429590702056885
    4. ''' → logprob: -9.31795883178711
    5. '',"' → logprob: -9.94295883178711
    6. '','#' → logprob: -10.44295883178711
    7. ',' → logprob: -10.69295883178711
    8. '',
' → logprob: -11.44295883178711
    9. ',B' → logprob: -11.69295883178711
    10. '','','' → logprob: -11.94295883178711

Token 637: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -3.128163257315464e-07
    2. ' B' → logprob: -15.25
    3. ''' → logprob: -17.75
    4. '']' → logprob: -19.375
    5. '	B' → logprob: -19.5
    6. 'b' → logprob: -19.875
    7. '"B' → logprob: -19.875
    8. 'G' → logprob: -20.0
    9. '','' → logprob: -20.4375
    10. '#' → logprob: -20.5625

Token 638: '']

' (ID: 36979)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.043650999665260315
    2. '',' → logprob: -3.5436511039733887
    3. '','' → logprob: -5.168651103973389
    4. ']' → logprob: -5.293651103973389
    5. '']
' → logprob: -6.293651103973389
    6. ''' → logprob: -7.918651103973389
    7. ','' → logprob: -8.04365062713623
    8. ',' → logprob: -8.29365062713623
    9. '']

' → logprob: -8.91865062713623
    10. '']
' → logprob: -9.16865062713623

Token 639: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16708272695541382
    2. 'placements' → logprob: -2.0420827865600586
    3. 'all' → logprob: -4.542082786560059
    4. 'stamp' → logprob: -5.542082786560059
    5. 'possible' → logprob: -5.667082786560059
    6. 'positions' → logprob: -6.042082786560059
    7. '    
' → logprob: -7.292082786560059
    8. 'poss' → logprob: -7.417082786560059
    9. ' placements' → logprob: -7.667082786560059
    10. '
' → logprob: -7.917082786560059

Token 640: ' #' (ID: 1069)
  Prédit: 'placements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placements' → logprob: -0.6365780830383301
    2. 'stamp' → logprob: -1.76157808303833
    3. 'all' → logprob: -2.01157808303833
    4. 'possible' → logprob: -2.26157808303833
    5. '   ' → logprob: -3.76157808303833
    6. 'positions' → logprob: -4.13657808303833
    7. 'poss' → logprob: -4.76157808303833
    8. '#' (adapté à ' #') → logprob: -5.51157808303833
    9. 'states' → logprob: -5.88657808303833
    10. 'queue' → logprob: -6.26157808303833

Token 641: ' Function' (ID: 11035)
  Prédit: 'placements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'placements' → logprob: -0.2320096790790558
    2. 'stamp' → logprob: -2.6070096492767334
    3. 'positions' → logprob: -2.7320096492767334
    4. 'possible' → logprob: -3.6070096492767334
    5. 'actions' → logprob: -3.7320096492767334
    6. 'all' → logprob: -4.7320098876953125
    7. 'poss' → logprob: -6.2320098876953125
    8. '#' → logprob: -6.3570098876953125
    9. 'moves' → logprob: -6.3570098876953125
    10. 'states' → logprob: -6.9820098876953125

Token 642: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009205576032400131
    2. 'apply' → logprob: -4.759205341339111
    3. ' apply' → logprob: -8.25920581817627
    4. ' def' → logprob: -8.50920581817627
    5. ' to' → logprob: -10.00920581817627
    6. 'to' → logprob: -10.13420581817627
    7. '_apply' → logprob: -10.63420581817627
    8. 'get' → logprob: -13.38420581817627
    9. 'calculate' → logprob: -13.50920581817627
    10. 'generate' → logprob: -13.63420581817627

Token 643: ' appliquer' (ID: 172872)
  Prédit: 'apply'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apply' → logprob: -0.6192764043807983
    2. 'app' → logprob: -1.1192764043807983
    3. ' appliquer' → logprob: -2.744276523590088
    4. 'ap' → logprob: -3.369276523590088
    5. ' apply' → logprob: -3.744276523590088
    6. 'def' → logprob: -5.244276523590088
    7. 'pos' → logprob: -6.244276523590088
    8. '   ' → logprob: -6.619276523590088
    9. '_apply' → logprob: -6.619276523590088
    10. '_ap' → logprob: -7.994276523590088

Token 644: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.060792326927185
    2. 'def' → logprob: -1.810792326927185
    3. 'le' → logprob: -2.4357924461364746
    4. '_state' → logprob: -2.5607924461364746
    5. 'un' → logprob: -2.8107924461364746
    6. '_' → logprob: -2.8107924461364746
    7. ' le' → logprob: -2.9357924461364746
    8. '_stamp' → logprob: -3.6857924461364746
    9. '_le' → logprob: -3.6857924461364746
    10. 'state' → logprob: -3.8107924461364746

Token 645: ' tampon' (ID: 176995)
  Prédit: 'stamp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stamp' → logprob: -0.1320454478263855
    2. 'tam' → logprob: -2.5070455074310303
    3. 'st' → logprob: -3.8820455074310303
    4. 'def' → logprob: -4.007045269012451
    5. ' tampon' → logprob: -6.632045269012451
    6. ' stamp' → logprob: -7.007045269012451
    7. 't' → logprob: -8.13204574584961
    8. ' tam' → logprob: -8.88204574584961
    9. 'state' → logprob: -9.00704574584961
    10. 's' → logprob: -9.25704574584961

Token 646: ' sur' (ID: 1512)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013421614654362202
    2. ' def' → logprob: -4.638421535491943
    3. '_state' → logprob: -7.263421535491943
    4. '(state' → logprob: -7.513421535491943
    5. '_def' → logprob: -8.013422012329102
    6. ' (' → logprob: -8.138422012329102
    7. '(
' → logprob: -8.138422012329102
    8. '_apply' → logprob: -8.388422012329102
    9. ':' → logprob: -8.513422012329102
    10. ' on' → logprob: -8.513422012329102

Token 647: ' un' (ID: 537)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7606160640716553
    2. 'state' → logprob: -0.7606160640716553
    3. ' l' → logprob: -3.6356160640716553
    4. 'un' → logprob: -3.6356160640716553
    5. ' state' → logprob: -5.885616302490234
    6. 'une' → logprob: -6.135616302490234
    7. ' un' → logprob: -6.385616302490234
    8. 'def' → logprob: -6.635616302490234
    9. 'la' → logprob: -6.885616302490234
    10. 'le' → logprob: -6.885616302490234

Token 648: ' état' (ID: 59181)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.04730519279837608
    2. 'ét' → logprob: -3.172305107116699
    3. 'etat' → logprob: -5.672305107116699
    4. ' état' → logprob: -8.4223051071167
    5. ''état' → logprob: -8.6723051071167
    6. 'É' → logprob: -8.6723051071167
    7. 'def' → logprob: -9.1723051071167
    8. '#' → logprob: -10.4223051071167
    9. 'estado' → logprob: -10.5473051071167
    10. ' state' → logprob: -10.5473051071167

Token 649: ' et' (ID: 859)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0031856747809797525
    2. '
' → logprob: -6.128185749053955
    3. ' def' → logprob: -7.753185749053955
    4. '_state' → logprob: -8.503185272216797
    5. '(state' → logprob: -9.503185272216797
    6. '(
' → logprob: -9.628185272216797
    7. '_def' → logprob: -9.628185272216797
    8. ':' → logprob: -10.253185272216797
    9. '(def' → logprob: -11.128185272216797
    10. ' (' → logprob: -11.128185272216797

Token 650: ' retourner' (ID: 116656)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.08800514042377472
    2. 'def' → logprob: -2.5880050659179688
    3. ' return' → logprob: -4.963005065917969
    4. 'ob' → logprob: -7.463005065917969
    5. 'returns' → logprob: -7.963005065917969
    6. 'get' → logprob: -8.338005065917969
    7. ' obtenir' → logprob: -8.338005065917969
    8. '#' → logprob: -9.088005065917969
    9. ' returns' → logprob: -9.338005065917969
    10. ' def' → logprob: -9.588005065917969

Token 651: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.7690626978874207
    2. 'un' → logprob: -1.1440627574920654
    3. ' le' → logprob: -1.7690627574920654
    4. ' un' → logprob: -3.5190627574920654
    5. 'l' → logprob: -4.394062519073486
    6. '   ' → logprob: -6.394062519073486
    7. 'nou' → logprob: -6.894062519073486
    8. '```' → logprob: -7.519062519073486
    9. 'une' → logprob: -7.769062519073486
    10. ' ' → logprob: -7.769062519073486

Token 652: ' nouvel' (ID: 76298)
  Prédit: 'nou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nou' → logprob: -0.5524223446846008
    2. ' new' → logprob: -1.552422285079956
    3. 'new' → logprob: -2.177422285079956
    4. ' nouvel' → logprob: -2.802422285079956
    5. ' nouveau' → logprob: -3.552422285079956
    6. 'n' → logprob: -5.552422523498535
    7. 'next' → logprob: -6.302422523498535
    8. ' next' → logprob: -6.427422523498535
    9. ' nou' → logprob: -7.177422523498535
    10. '
' → logprob: -7.927422523498535

Token 653: ' état' (ID: 59181)
  Prédit: '_state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.5180715322494507
    2. '_' → logprob: -1.3930715322494507
    3. 'state' → logprob: -3.0180716514587402
    4. 'def' → logprob: -3.1430716514587402
    5. ' état' → logprob: -3.6430716514587402
    6. ' _' → logprob: -4.26807165145874
    7. ')' → logprob: -5.14307165145874
    8. '_token' → logprob: -5.64307165145874
    9. 'É' → logprob: -6.14307165145874
    10. ''état' → logprob: -6.14307165145874

Token 654: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0018360643880441785
    2. '
' → logprob: -6.37683629989624
    3. ' def' → logprob: -9.501835823059082
    4. '(
' → logprob: -11.251835823059082
    5. ' (' → logprob: -11.751835823059082
    6. '(' → logprob: -11.751835823059082
    7. '(state' → logprob: -11.876835823059082
    8. 'state' → logprob: -12.126835823059082
    9. '(def' → logprob: -12.626835823059082
    10. '   ' → logprob: -12.876835823059082

Token 655: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.4987974029500037e-05
    2. '
' → logprob: -10.875024795532227
    3. '   ' → logprob: -12.875024795532227
    4. ' def' → logprob: -13.250024795532227
    5. ':def' → logprob: -14.125024795532227
    6. '    
' → logprob: -15.375024795532227
    7. '(
' → logprob: -15.750024795532227
    8. '  
' → logprob: -15.750024795532227
    9. '(def' → logprob: -15.750024795532227
    10. ':' → logprob: -16.375024795532227

Token 656: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0003721622342709452
    2. ' def' → logprob: -8.250371932983398
    3. '
' → logprob: -9.125371932983398
    4. ' 
' → logprob: -14.375371932983398
    5. '   ' → logprob: -14.375371932983398
    6. '    
' → logprob: -14.875371932983398
    7. '  
' → logprob: -15.625371932983398
    8. 'dé' → logprob: -16.5003719329834
    9. '```' → logprob: -16.7503719329834
    10. '	def' → logprob: -16.7503719329834

Token 657: ' apply' (ID: 6096)
  Prédit: 'apply'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apply' → logprob: -3.047134305234067e-05
    2. ' apply' → logprob: -11.000030517578125
    3. 'paint' → logprob: -12.125030517578125
    4. 'stamp' → logprob: -12.125030517578125
    5. 'ap' → logprob: -13.250030517578125
    6. 'app' → logprob: -14.125030517578125
    7. '
' → logprob: -16.500030517578125
    8. '_apply' → logprob: -16.625030517578125
    9. 'pour' → logprob: -17.375030517578125
    10. 'pose' → logprob: -17.375030517578125

Token 658: '_stamp' (ID: 136990)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.024547960609197617
    2. '(' → logprob: -3.899548053741455
    3. ' _' → logprob: -7.149548053741455
    4. '_st' → logprob: -7.274548053741455
    5. '_state' → logprob: -7.399548053741455
    6. '_stamp' → logprob: -7.524548053741455
    7. '(st' → logprob: -7.649548053741455
    8. ' (' → logprob: -8.649547576904297
    9. '_(' → logprob: -9.024547576904297
    10. '(state' → logprob: -9.149547576904297

Token 659: '(state' (ID: 16114)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 660: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000573167169932276
    2. ',state' → logprob: -7.62557315826416
    3. ' ,' → logprob: -9.50057315826416
    4. '   ' → logprob: -12.00057315826416
    5. ',current' → logprob: -13.37557315826416
    6. 'state' → logprob: -14.00057315826416
    7. ',index' → logprob: -14.75057315826416
    8. ',pos' → logprob: -14.87557315826416
    9. ',start' → logprob: -15.25057315826416
    10. '       ' → logprob: -15.25057315826416

Token 661: ' stamp' (ID: 29381)
  Prédit: 'stamp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stamp' → logprob: -0.005719265900552273
    2. 'h' → logprob: -5.630719184875488
    3. 'st' → logprob: -6.630719184875488
    4. ' stamp' → logprob: -7.380719184875488
    5. 'x' → logprob: -9.755719184875488
    6. '   ' → logprob: -10.130719184875488
    7. 'pos' → logprob: -10.380719184875488
    8. ' h' → logprob: -11.755719184875488
    9. ' ' → logprob: -12.005719184875488
    10. 'hp' → logprob: -12.880719184875488

Token 662: '_h' (ID: 3434)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.044315729290246964
    2. '):' → logprob: -3.919315814971924
    3. '_idx' → logprob: -4.669315814971924
    4. '_i' → logprob: -6.044315814971924
    5. '_,' → logprob: -6.294315814971924
    6. ',i' → logprob: -6.669315814971924
    7. '   ' → logprob: -6.794315814971924
    8. ' ,' → logprob: -6.794315814971924
    9. '[' → logprob: -6.919315814971924
    10. '_index' → logprob: -7.044315814971924

Token 663: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009350438485853374
    2. ',w' → logprob: -7.750935077667236
    3. ' ,' → logprob: -9.125934600830078
    4. ',
' → logprob: -9.250934600830078
    5. ',size' → logprob: -9.500934600830078
    6. ',h' → logprob: -9.625934600830078
    7. ',n' → logprob: -10.250934600830078
    8. ',width' → logprob: -10.875934600830078
    9. ',length' → logprob: -11.250934600830078
    10. ',s' → logprob: -11.375934600830078

Token 664: ' stamp' (ID: 29381)
  Prédit: 'stamp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stamp' → logprob: -0.0006379772676154971
    2. ' stamp' → logprob: -7.375638008117676
    3. 'st' → logprob: -11.625638008117676
    4. 'w' → logprob: -14.000638008117676
    5. '_stamp' → logprob: -14.750638008117676
    6. 'STAMP' → logprob: -15.125638008117676
    7. '   ' → logprob: -15.625638008117676
    8. 'stroke' → logprob: -15.875638008117676
    9. '
' → logprob: -16.37563705444336
    10. 'stall' → logprob: -16.37563705444336

Token 665: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.00048072010395117104
    2. '_h' → logprob: -8.500480651855469
    3. ',' → logprob: -8.625480651855469
    4. 'w' → logprob: -9.625480651855469
    5. ',w' → logprob: -11.500480651855469
    6. '_,' → logprob: -12.125480651855469
    7. ',_' → logprob: -12.125480651855469
    8. '_x' → logprob: -12.500480651855469
    9. '_' → logprob: -13.125480651855469
    10. '_width' → logprob: -13.625480651855469

Token 666: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.551721889991313e-05
    2. ' ,' → logprob: -9.750065803527832
    3. ',state' → logprob: -12.875065803527832
    4. ',x' → logprob: -13.000065803527832
    5. ',
' → logprob: -14.375065803527832
    6. '   ' → logprob: -14.500065803527832
    7. '):' → logprob: -15.375065803527832
    8. ',row' → logprob: -15.875065803527832
    9. ',y' → logprob: -16.250064849853516
    10. '‌,' → logprob: -16.375064849853516

Token 667: ' top' (ID: 2344)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.007709312252700329
    2. ' x' → logprob: -5.132709503173828
    3. 'top' → logprob: -6.882709503173828
    4. 'pos' → logprob: -8.257709503173828
    5. 'stamp' → logprob: -8.382709503173828
    6. ' top' → logprob: -8.757709503173828
    7. 'px' → logprob: -10.507709503173828
    8. 'start' → logprob: -10.757709503173828
    9. '   ' → logprob: -10.882709503173828
    10. 'sx' → logprob: -11.382709503173828

Token 668: ',' (ID: 11)
  Prédit: ',left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',left' → logprob: -0.9104124307632446
    2. ',' → logprob: -1.0354124307632446
    3. '_left' → logprob: -2.285412311553955
    4. ' ,' → logprob: -3.410412311553955
    5. '_x' → logprob: -3.660412311553955
    6. 'Left' → logprob: -3.785412311553955
    7. 'x' → logprob: -4.035412311553955
    8. '-left' → logprob: -4.160412311553955
    9. ',x' → logprob: -4.535412311553955
    10. 'left' → logprob: -5.410412311553955

Token 669: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.023324325680732727
    2. ' left' → logprob: -3.7733242511749268
    3. 'top' → logprob: -9.898324012756348
    4. 'stamp' → logprob: -10.773324012756348
    5. '	left' → logprob: -12.398324012756348
    6. ' lef' → logprob: -13.398324012756348
    7. '_left' → logprob: -14.648324012756348
    8. ' top' → logprob: -15.273324012756348
    9. 'lef' → logprob: -15.273324012756348
    10. ' stamp' → logprob: -15.398324012756348

Token 670: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18281584978103638
    2. ',' → logprob: -1.8078157901763916
    3. '):
' → logprob: -6.057816028594971
    4. '   ' → logprob: -7.807816028594971
    5. ')' → logprob: -8.557815551757812
    6. ' ):' → logprob: -9.807815551757812
    7. ' ,' → logprob: -10.932815551757812
    8. '):
' → logprob: -11.182815551757812
    9. ',state' → logprob: -11.682815551757812
    10. '):

' → logprob: -11.932815551757812

Token 671: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.02638656459748745
    2. ' color' → logprob: -3.6513864994049072
    3. 'col' → logprob: -10.651386260986328
    4. 'stamp' → logprob: -11.401386260986328
    5. 'new' → logprob: -11.526386260986328
    6. ' ' → logprob: -11.651386260986328
    7. '   ' → logprob: -11.901386260986328
    8. 'c' → logprob: -12.026386260986328
    9. 'state' → logprob: -12.776386260986328
    10. 'colors' → logprob: -12.776386260986328

Token 672: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00023298001906368881
    2. '):
' → logprob: -8.875232696533203
    3. ')' → logprob: -9.375232696533203
    4. ' ):' → logprob: -12.125232696533203
    5. '   ' → logprob: -13.750232696533203
    6. ':' → logprob: -14.375232696533203
    7. '):
' → logprob: -14.625232696533203
    8. ',' → logprob: -15.375232696533203
    9. ''):' → logprob: -15.625232696533203
    10. ' ' → logprob: -16.375232696533203

Token 673: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12600934505462646
    2. '   ' → logprob: -2.751009464263916
    3. ':' → logprob: -4.001009464263916
    4. '    
' → logprob: -4.251009464263916
    5. ')' → logprob: -5.501009464263916
    6. ':
' → logprob: -5.876009464263916
    7. '        
' → logprob: -6.251009464263916
    8. ' 
' → logprob: -6.251009464263916
    9. '#' → logprob: -6.751009464263916
    10. '  
' → logprob: -6.751009464263916

Token 674: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0742068886756897
    2. 'state' → logprob: -2.949206829071045
    3. '       ' → logprob: -4.074206829071045
    4. '   ' → logprob: -6.824206829071045
    5. ' new' → logprob: -7.824206829071045
    6. 'next' → logprob: -8.199207305908203
    7. 'result' → logprob: -8.449207305908203
    8. 'grid' → logprob: -10.074207305908203
    9. 'res' → logprob: -10.949207305908203
    10. '        
' → logprob: -10.949207305908203

Token 675: ' state' (ID: 2608)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.013665991835296154
    2. 'state' → logprob: -5.013666152954102
    3. '       ' → logprob: -5.763666152954102
    4. '   ' → logprob: -6.888666152954102
    5. 'grid' → logprob: -7.013666152954102
    6. 'next' → logprob: -7.013666152954102
    7. 'result' → logprob: -7.888666152954102
    8. 'res' → logprob: -9.138666152954102
    9. ' new' → logprob: -9.388666152954102
    10. 'cells' → logprob: -9.513666152954102

Token 676: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22951161861419678
    2. '=' → logprob: -1.6045116186141968
    3. '_list' → logprob: -6.104511737823486
    4. '_new' → logprob: -7.604511737823486
    5. '=list' → logprob: -7.854511737823486
    6. '_' → logprob: -8.104511260986328
    7. ',' → logprob: -8.354511260986328
    8. '   ' → logprob: -9.354511260986328
    9. ')' → logprob: -9.479511260986328
    10. 'new' → logprob: -9.604511260986328

Token 677: ' un' (ID: 537)
  Prédit: ' tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.36233997344970703
    2. 'tuple' → logprob: -1.987339973449707
    3. 'list' → logprob: -2.112339973449707
    4. ' list' → logprob: -3.112339973449707
    5. ' a' → logprob: -7.487339973449707
    6. '(tuple' → logprob: -8.612339973449707
    7. '[
' → logprob: -9.362339973449707
    8. '[' → logprob: -9.362339973449707
    9. 'a' → logprob: -9.612339973449707
    10. '   ' → logprob: -9.612339973449707

Token 678: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.16176125407218933
    2. 'list' → logprob: -1.9117612838745117
    3. ' tuple' → logprob: -6.536761283874512
    4. ' list' → logprob: -10.536761283874512
    5. 'liste' → logprob: -10.911761283874512
    6. '(tuple' → logprob: -11.036761283874512
    7. '16' → logprob: -11.661761283874512
    8. 'tu' → logprob: -11.786761283874512
    9. '('' → logprob: -13.286761283874512
    10. 'Tuple' → logprob: -13.661761283874512

Token 679: ' ' (ID: 220)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0078685283660889
    2. 'state' → logprob: -1.5078685283660889
    3. '
' → logprob: -2.007868528366089
    4. 'def' → logprob: -3.007868528366089
    5. '(
' → logprob: -3.382868528366089
    6. '   ' → logprob: -3.507868528366089
    7. ')' → logprob: -4.007868766784668
    8. ',
' → logprob: -4.132868766784668
    9. '<|end|>' → logprob: -4.382868766784668
    10. '_state' → logprob: -4.507868766784668

Token 680: '16' (ID: 1125)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.7257770895957947
    2. 'state' → logprob: -1.4757771492004395
    3. '
' → logprob: -2.3507771492004395
    4. '('.' → logprob: -3.3507771492004395
    5. 'def' → logprob: -3.8507771492004395
    6. '('.',' → logprob: -3.9757771492004395
    7. '[str' → logprob: -3.9757771492004395
    8. '(' → logprob: -4.3507771492004395
    9. '('' → logprob: -4.3507771492004395
    10. '(state' → logprob: -4.4757771492004395

Token 681: ' caractères' (ID: 183106)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5100815296173096
    2. '[' → logprob: -2.0100815296173096
    3. ',' → logprob: -2.2600815296173096
    4. '[
' → logprob: -2.5100815296173096
    5. ']' → logprob: -4.0100812911987305
    6. '(' → logprob: -4.6350812911987305
    7. '   ' → logprob: -4.8850812911987305
    8. '(
' → logprob: -4.8850812911987305
    9. 'def' → logprob: -5.0100812911987305
    10. 'for' → logprob: -5.5100812911987305

Token 682: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3666800260543823
    2. '   ' → logprob: -1.6166800260543823
    3. ')' → logprob: -1.7416800260543823
    4. ':' → logprob: -2.241680145263672
    5. '):' → logprob: -2.366680145263672
    6. ',' → logprob: -2.616680145263672
    7. '
' → logprob: -3.366680145263672
    8. '):
' → logprob: -3.741680145263672
    9. ' :' → logprob: -4.866680145263672
    10. ')
' → logprob: -5.366680145263672

Token 683: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04049365967512131
    2. ',' → logprob: -4.165493488311768
    3. '   ' → logprob: -4.790493488311768
    4. ')' → logprob: -5.415493488311768
    5. '):' → logprob: -5.415493488311768
    6. ':' → logprob: -5.790493488311768
    7. '):
' → logprob: -6.040493488311768
    8. ' :' → logprob: -7.790493488311768
    9. '
' → logprob: -8.290493965148926
    10. '        
' → logprob: -8.540493965148926

Token 684: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.35063639283180237
    2. '       ' → logprob: -1.35063636302948
    3. 'state' → logprob: -3.8506364822387695
    4. ' new' → logprob: -4.7256364822387695
    5. '
' → logprob: -5.8506364822387695
    6. 'next' → logprob: -6.2256364822387695
    7. 'result' → logprob: -7.4756364822387695
    8. '   ' → logprob: -7.8506364822387695
    9. '        
' → logprob: -7.9756364822387695
    10. 'n' → logprob: -9.47563648223877

Token 685: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.0022320940624922514
    2. '_' → logprob: -6.127232074737549
    3. 'state' → logprob: -10.252232551574707
    4. '_stat' → logprob: -12.752232551574707
    5. ' _' → logprob: -13.127232551574707
    6. '_s' → logprob: -13.127232551574707
    7. '_states' → logprob: -13.502232551574707
    8. '_
' → logprob: -13.627232551574707
    9. '_chars' → logprob: -14.502232551574707
    10. '_sta' → logprob: -14.627232551574707

Token 686: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602589637041092
    2. ' =' → logprob: -1.9102590084075928
    3. '=list' → logprob: -10.535259246826172
    4. '=[' → logprob: -12.785259246826172
    5. '=
' → logprob: -13.285259246826172
    6. '=[]' → logprob: -13.910259246826172
    7. ' =[' → logprob: -14.035259246826172
    8. ' =
' → logprob: -14.160259246826172
    9. ',' → logprob: -15.535259246826172
    10. ')' → logprob: -15.660259246826172

Token 687: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -7.886803359724581e-05
    2. ' list' → logprob: -9.500079154968262
    3. '[list' → logprob: -12.500079154968262
    4. '[' → logprob: -16.875078201293945
    5. '(list' → logprob: -17.625078201293945
    6. 'tuple' → logprob: -18.000078201293945
    7. '['' → logprob: -18.625078201293945
    8. 'state' → logprob: -19.500078201293945
    9. 'byte' → logprob: -19.750078201293945
    10. '[]' → logprob: -19.875078201293945

Token 688: '(state' (ID: 16114)
  Prédit: '(state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(state' → logprob: -0.001170460251159966
    2. 'state' → logprob: -6.751170635223389
    3. '(' → logprob: -15.50117015838623
    4. ' state' → logprob: -17.126171112060547
    5. ',state' → logprob: -19.376171112060547
    6. '(
' → logprob: -19.626171112060547
    7. '[state' → logprob: -20.001171112060547
    8. '(stat' → logprob: -20.376171112060547
    9. '	state' → logprob: -20.501171112060547
    10. ' (' → logprob: -20.876171112060547

Token 689: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011067275889217854
    2. ')
' → logprob: -4.5110673904418945
    3. '   ' → logprob: -11.761067390441895
    4. '       ' → logprob: -12.136067390441895
    5. ')
' → logprob: -12.261067390441895
    6. ')

' → logprob: -14.386067390441895
    7. ' )' → logprob: -14.511067390441895
    8. ' ' → logprob: -16.011066436767578
    9. '')' → logprob: -16.511066436767578
    10. '")' → logprob: -16.886066436767578

Token 690: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004410416819155216
    2. ' for' → logprob: -6.004410266876221
    3. '   ' → logprob: -7.004410266876221
    4. '<|end|>' → logprob: -7.879410266876221
    5. 'for' → logprob: -8.754410743713379
    6. '	for' → logprob: -8.754410743713379
    7. '           ' → logprob: -10.004410743713379
    8. '	' → logprob: -10.129410743713379
    9. '<|end|>' → logprob: -10.254410743713379
    10. '        
' → logprob: -10.254410743713379

Token 691: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.019306465983390808
    2. '       ' → logprob: -4.019306659698486
    3. ' for' → logprob: -6.769306659698486
    4. '   ' → logprob: -12.019306182861328
    5. '```' → logprob: -14.644306182861328
    6. '	for' → logprob: -15.144306182861328
    7. 'index' → logprob: -15.519306182861328
    8. '           ' → logprob: -15.644306182861328
    9. 'i' → logprob: -16.519306182861328
    10. '        
' → logprob: -16.644306182861328

Token 692: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.026031451299786568
    2. 'r' → logprob: -4.526031494140625
    3. 'dh' → logprob: -5.151031494140625
    4. 'y' → logprob: -5.526031494140625
    5. 'dy' → logprob: -5.526031494140625
    6. 'dx' → logprob: -7.901031494140625
    7. 'x' → logprob: -8.026031494140625
    8. ' i' → logprob: -8.276031494140625
    9. 'row' → logprob: -9.401031494140625
    10. ' dh' → logprob: -10.651031494140625

Token 693: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.34891271591186523
    2. 'in' → logprob: -1.2239127159118652
    3. 'range' → logprob: -8.348913192749023
    4. ' ' → logprob: -9.848913192749023
    5. ',' → logprob: -10.598913192749023
    6. 'x' → logprob: -10.973913192749023
    7. '
' → logprob: -11.098913192749023
    8. '   ' → logprob: -11.223913192749023
    9. ')' → logprob: -11.723913192749023
    10. 'h' → logprob: -11.723913192749023

Token 694: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004078758880496025
    2. ' range' → logprob: -5.5040788650512695
    3. 'r' → logprob: -16.254077911376953
    4. '(range' → logprob: -16.379077911376953
    5. ' ' → logprob: -16.504077911376953
    6. '   ' → logprob: -17.254077911376953
    7. '0' → logprob: -17.504077911376953
    8. 'rang' → logprob: -17.754077911376953
    9. '	range' → logprob: -17.754077911376953
    10. 'top' → logprob: -17.879077911376953

Token 695: '(st' (ID: 4065)
  Prédit: 'stamp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stamp' → logprob: -0.000599976978264749
    2. ' stamp' → logprob: -8.37559986114502
    3. 'top' → logprob: -8.62559986114502
    4. 'st' → logprob: -8.87559986114502
    5. '(st' → logprob: -10.25059986114502
    6. '(' → logprob: -12.25059986114502
    7. '
' → logprob: -13.12559986114502
    8. '   ' → logprob: -13.62559986114502
    9. '(top' → logprob: -13.75059986114502
    10. '0' → logprob: -13.87559986114502

Token 696: 'amp' (ID: 1515)
  Prédit: 'amp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amp' → logprob: -0.002200571121647954
    2. 'stamp' → logprob: -7.002200603485107
    3. 'mp' → logprob: -8.25220012664795
    4. '_amp' → logprob: -8.62720012664795
    5. '(' → logprob: -9.25220012664795
    6. 'map' → logprob: -9.37720012664795
    7. 'ump' → logprob: -9.50220012664795
    8. '_' → logprob: -9.62720012664795
    9. '_stamp' → logprob: -9.62720012664795
    10. '=' → logprob: -10.00220012664795

Token 697: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -1.27099974633893e-05
    2. '_w' → logprob: -11.375012397766113
    3. 'h' → logprob: -15.125012397766113
    4. ' _' → logprob: -16.37501335144043
    5. 's' → logprob: -16.50001335144043
    6. '_height' → logprob: -16.50001335144043
    7. ')' → logprob: -16.62501335144043
    8. '_' → logprob: -16.75001335144043
    9. '_y' → logprob: -16.75001335144043
    10. '   ' → logprob: -17.00001335144043

Token 698: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3134108781814575
    2. '):
' → logprob: -1.3134108781814575
    3. '*' → logprob: -9.938410758972168
    4. '   ' → logprob: -9.938410758972168
    5. '):
' → logprob: -10.813410758972168
    6. ':' → logprob: -11.813410758972168
    7. '#' → logprob: -12.313410758972168
    8. ' ):' → logprob: -12.313410758972168
    9. '       ' → logprob: -12.563410758972168
    10. '**' → logprob: -12.813410758972168

Token 699: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10810317099094391
    2. '       ' → logprob: -2.4831032752990723
    3. ' for' → logprob: -4.483103275299072
    4. '<|end|>' → logprob: -5.483103275299072
    5. '	       ' → logprob: -6.983103275299072
    6. ',' → logprob: -6.983103275299072
    7. '               ' → logprob: -7.733103275299072
    8. '<|end|>' → logprob: -8.108102798461914
    9. '   ' → logprob: -8.733102798461914
    10. '         ' → logprob: -9.233102798461914

Token 700: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.011055129580199718
    2. ' for' → logprob: -4.511054992675781
    3. '	for' → logprob: -12.636054992675781
    4. '           ' → logprob: -13.011054992675781
    5. '   ' → logprob: -14.386054992675781
    6. '       ' → logprob: -14.511054992675781
    7. 'x' → logprob: -15.011054992675781
    8. 'row' → logprob: -15.886054992675781
    9. 'if' → logprob: -15.886054992675781
    10. ' ' → logprob: -16.26105499267578

Token 701: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.796184723294573e-06
    2. ' j' → logprob: -12.125005722045898
    3. '	j' → logprob: -15.500005722045898
    4. '   ' → logprob: -16.5000057220459
    5. '    ' → logprob: -18.6250057220459
    6. 'w' → logprob: -19.0000057220459
    7. '_j' → logprob: -19.3750057220459
    8. '```' → logprob: -19.5000057220459
    9. '$j' → logprob: -20.0000057220459
    10. '  ' → logprob: -20.1250057220459

Token 702: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14267908036708832
    2. 'in' → logprob: -2.01767897605896
    3. '           ' → logprob: -14.017679214477539
    4. ' ' → logprob: -15.017679214477539
    5. 'range' → logprob: -15.017679214477539
    6. '	in' → logprob: -15.017679214477539
    7. ')' → logprob: -15.267679214477539
    8. 'n' → logprob: -15.642679214477539
    9. '            ' → logprob: -15.767679214477539
    10. '        ' → logprob: -15.892679214477539

Token 703: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00043400691356509924
    2. ' range' → logprob: -7.750433921813965
    3. '(range' → logprob: -12.625433921813965
    4. '	range' → logprob: -18.75043487548828
    5. 'rang' → logprob: -19.00043487548828
    6. 'in' → logprob: -19.25043487548828
    7. ' ' → logprob: -19.37543487548828
    8. '   ' → logprob: -19.50043487548828
    9. 'r' → logprob: -19.62543487548828
    10. '(' → logprob: -19.62543487548828

Token 704: '(st' (ID: 4065)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6187735199928284
    2. '(st' → logprob: -0.8687735199928284
    3. 'stamp' → logprob: -3.3687734603881836
    4. '(range' → logprob: -5.243773460388184
    5. ' range' → logprob: -6.743773460388184
    6. 'st' → logprob: -6.993773460388184
    7. '(' → logprob: -9.743773460388184
    8. ' stamp' → logprob: -10.243773460388184
    9. ' (' → logprob: -11.118773460388184
    10. 'in' → logprob: -12.868773460388184

Token 705: 'amp' (ID: 1515)
  Prédit: 'amp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amp' → logprob: -0.5866586565971375
    2. '_w' → logprob: -0.8366586565971375
    3. 'w' → logprob: -4.711658477783203
    4. '   ' → logprob: -6.711658477783203
    5. 'mp' → logprob: -9.336658477783203
    6. '       ' → logprob: -9.461658477783203
    7. 'width' → logprob: -10.461658477783203
    8. 'ow' → logprob: -10.461658477783203
    9. 'range' → logprob: -10.461658477783203
    10. 'ump' → logprob: -10.711658477783203

Token 706: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.001387850963510573
    2. 'w' → logprob: -7.626388072967529
    3. '       ' → logprob: -8.001387596130371
    4. 'range' → logprob: -8.376387596130371
    5. '   ' → logprob: -9.376387596130371
    6. '_h' → logprob: -9.876387596130371
    7. '):' → logprob: -10.001387596130371
    8. '           ' → logprob: -10.501387596130371
    9. 'stamp' → logprob: -10.501387596130371
    10. '):
' → logprob: -11.001387596130371

Token 707: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.22448046505451202
    2. '):' → logprob: -1.7244805097579956
    3. ':' → logprob: -4.599480628967285
    4. '               ' → logprob: -4.849480628967285
    5. ':
' → logprob: -6.349480628967285
    6. '           ' → logprob: -7.099480628967285
    7. '<|end|>' → logprob: -7.224480628967285
    8. ')' → logprob: -7.349480628967285
    9. '):
' → logprob: -8.599480628967285
    10. ',' → logprob: -8.724480628967285

Token 708: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00019293125660624355
    2. ' if' → logprob: -10.625192642211914
    3. '           ' → logprob: -10.625192642211914
    4. '<|end|>' → logprob: -10.625192642211914
    5. '			' → logprob: -11.000192642211914
    6. '                ' → logprob: -11.000192642211914
    7. '                   ' → logprob: -11.500192642211914
    8. '                
' → logprob: -11.500192642211914
    9. '		       ' → logprob: -11.500192642211914
    10. '              ' → logprob: -11.875192642211914

Token 709: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.14672280848026276
    2. 'pos' → logprob: -2.1467227935791016
    3. 'idx' → logprob: -4.771722793579102
    4. 'if' → logprob: -4.896722793579102
    5. ' x' → logprob: -7.021722793579102
    6. 'y' → logprob: -7.271722793579102
    7. 'r' → logprob: -7.271722793579102
    8. 'row' → logprob: -7.396722793579102
    9. '                   ' → logprob: -8.396722793579102
    10. ' pos' → logprob: -8.521722793579102

Token 710: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07014150172472
    2. ' =' → logprob: -2.695141553878784
    3. ',' → logprob: -8.695141792297363
    4. '=
' → logprob: -10.570141792297363
    5. 'x' → logprob: -12.570141792297363
    6. '=int' → logprob: -13.695141792297363
    7. '=x' → logprob: -13.695141792297363
    8. ' ' → logprob: -14.195141792297363
    9. ' =
' → logprob: -14.445141792297363
    10. '=

' → logprob: -14.445141792297363

Token 711: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -3.416665640543215e-05
    2. ' top' → logprob: -10.37503433227539
    3. 'left' → logprob: -13.25003433227539
    4. '   ' → logprob: -14.25003433227539
    5. '	top' → logprob: -15.62503433227539
    6. '(top' → logprob: -15.87503433227539
    7. 'i' → logprob: -16.37503433227539
    8. '
' → logprob: -16.62503433227539
    9. '[top' → logprob: -16.62503433227539
    10. 't' → logprob: -17.62503433227539

Token 712: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6337807774543762
    2. '+' → logprob: -0.7587807774543762
    3. '+i' → logprob: -6.7587809562683105
    4. '+x' → logprob: -11.633780479431152
    5. '+j' → logprob: -12.883780479431152
    6. '*' → logprob: -13.133780479431152
    7. '<|end|>' → logprob: -13.508780479431152
    8. '+k' → logprob: -14.133780479431152
    9. '=' → logprob: -14.258780479431152
    10. '<|end|>' → logprob: -14.383780479431152

Token 713: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.5491004129871726e-05
    2. ' i' → logprob: -10.000045776367188
    3. 'x' → logprob: -16.875045776367188
    4. '<|end|>' → logprob: -18.125045776367188
    5. '<|end|>' → logprob: -19.500045776367188
    6. '	i' → logprob: -19.875045776367188
    7. ' ' → logprob: -20.750045776367188
    8. ')i' → logprob: -20.750045776367188
    9. 'j' → logprob: -21.125045776367188
    10. '   ' → logprob: -21.250045776367188

Token 714: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.042602527886629105
    2. '
' → logprob: -3.5426025390625
    3. '*' → logprob: -5.2926025390625
    4. '#' → logprob: -6.4176025390625
    5. '                   ' → logprob: -6.7926025390625
    6. '<|end|>' → logprob: -6.9176025390625
    7. '                
' → logprob: -7.1676025390625
    8. '                ' → logprob: -7.2926025390625
    9. '           ' → logprob: -8.1676025390625
    10. '[' → logprob: -8.5426025390625

Token 715: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0028293654322624207
    2. ',' → logprob: -7.252829551696777
    3. '<|end|>' → logprob: -7.252829551696777
    4. ' if' → logprob: -7.377829551696777
    5. '			' → logprob: -8.502829551696777
    6. '                ' → logprob: -8.877829551696777
    7. ' ' → logprob: -9.877829551696777
    8. ' =' → logprob: -10.127829551696777
    9. '		       ' → logprob: -10.127829551696777
    10. ' #' → logprob: -10.252829551696777

Token 716: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.3869937062263489
    2. ' y' → logprob: -1.136993646621704
    3. '               ' → logprob: -9.636993408203125
    4. 'x' → logprob: -10.386993408203125
    5. 'j' → logprob: -11.261993408203125
    6. '                ' → logprob: -12.011993408203125
    7. '                   ' → logprob: -12.136993408203125
    8. ' j' → logprob: -14.511993408203125
    9. ',y' → logprob: -14.761993408203125
    10. ' x' → logprob: -15.011993408203125

Token 717: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023245595395565033
    2. ' =' → logprob: -3.7732455730438232
    3. '=
' → logprob: -16.398244857788086
    4. '＝' → logprob: -18.898244857788086
    5. ' ' → logprob: -19.523244857788086
    6. ' =
' → logprob: -20.273244857788086
    7. ')' → logprob: -20.898244857788086
    8. '=

' → logprob: -20.898244857788086
    9. '=int' → logprob: -21.148244857788086
    10. '=}' → logprob: -21.148244857788086

Token 718: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -3.7697225252486533e-06
    2. ' left' → logprob: -12.500003814697266
    3. '	left' → logprob: -21.375003814697266
    4. '(left' → logprob: -22.375003814697266
    5. '[left' → logprob: -22.500003814697266
    6. 'lef' → logprob: -23.500003814697266
    7. ':left' → logprob: -23.750003814697266
    8. '.left' → logprob: -24.500003814697266
    9. 'Left' → logprob: -25.000003814697266
    10. '_left' → logprob: -25.375003814697266

Token 719: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07023173570632935
    2. ' +' → logprob: -2.6952316761016846
    3. '+j' → logprob: -8.445231437683105
    4. '+y' → logprob: -10.445231437683105
    5. '<|end|>' → logprob: -11.195231437683105
    6. '               ' → logprob: -11.445231437683105
    7. '+
' → logprob: -11.445231437683105
    8. '                ' → logprob: -12.570231437683105
    9. '                   ' → logprob: -12.820231437683105
    10. '=' → logprob: -13.070231437683105

Token 720: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -9.627176768844947e-05
    2. ' j' → logprob: -9.250096321105957
    3. 'y' → logprob: -15.625096321105957
    4. 'x' → logprob: -17.00009536743164
    5. '	j' → logprob: -18.50009536743164
    6. '_j' → logprob: -19.50009536743164
    7. '           ' → logprob: -19.50009536743164
    8. '[j' → logprob: -19.62509536743164
    9. '   ' → logprob: -19.75009536743164
    10. '$j' → logprob: -20.50009536743164

Token 721: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03556130453944206
    2. '<|end|>' → logprob: -3.5355613231658936
    3. ' if' → logprob: -6.1605610847473145
    4. '<|end|>' → logprob: -6.7855610847473145
    5. '           ' → logprob: -7.6605610847473145
    6. '       ' → logprob: -8.035561561584473
    7. '                   ' → logprob: -8.035561561584473
    8. '                
' → logprob: -8.285561561584473
    9. 'if' → logprob: -8.285561561584473
    10. ',' → logprob: -8.660561561584473

Token 722: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.041768160182983e-05
    2. '<|end|>' → logprob: -10.250080108642578
    3. '                
' → logprob: -11.500080108642578
    4. ' if' → logprob: -12.000080108642578
    5. 'if' → logprob: -12.375080108642578
    6. '<|end|>' → logprob: -12.500080108642578
    7. '                ' → logprob: -12.625080108642578
    8. ',' → logprob: -12.875080108642578
    9. '		       ' → logprob: -12.875080108642578
    10. '              ' → logprob: -13.000080108642578

Token 723: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0012940469896420836
    2. '               ' → logprob: -6.751294136047363
    3. ' if' → logprob: -9.001294136047363
    4. '                   ' → logprob: -15.126294136047363
    5. '                
' → logprob: -16.251293182373047
    6. '           ' → logprob: -16.501293182373047
    7. '```' → logprob: -17.126293182373047
    8. 'If' → logprob: -17.751293182373047
    9. '	if' → logprob: -17.876293182373047
    10. '       ' → logprob: -17.876293182373047

Token 724: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028057026211172342
    2. ' ' → logprob: -5.877805709838867
    3. 'x' → logprob: -15.127805709838867
    4. '(' → logprob: -15.752805709838867
    5. '   ' → logprob: -16.002805709838867
    6. ' ' → logprob: -16.127805709838867
    7. ' x' → logprob: -16.377805709838867
    8. ' (' → logprob: -16.752805709838867
    9. '۰' → logprob: -17.690305709838867
    10. '00' → logprob: -18.002805709838867

Token 725: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.688212614681106e-05
    2. 'x' → logprob: -11.250017166137695
    3. ' ' → logprob: -12.500017166137695
    4. '(' → logprob: -16.500017166137695
    5. ' x' → logprob: -18.125017166137695
    6. '۰' → logprob: -18.250017166137695
    7. '00' → logprob: -18.375017166137695
    8. '(x' → logprob: -18.875017166137695
    9. '٠' → logprob: -19.312517166137695
    10. '   ' → logprob: -19.937517166137695

Token 726: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.38710150122642517
    2. ' <=' → logprob: -1.1371015310287476
    3. 'x' → logprob: -8.637101173400879
    4. '≤' → logprob: -11.262101173400879
    5. '<' → logprob: -11.637101173400879
    6. '#' → logprob: -11.887101173400879
    7. ' ≤' → logprob: -11.887101173400879
    8. ',' → logprob: -13.012101173400879
    9. ')<=' → logprob: -13.387101173400879
    10. 'le' → logprob: -13.387101173400879

Token 727: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0001584850688232109
    2. ' x' → logprob: -8.750158309936523
    3. ')x' → logprob: -19.625158309936523
    4. '	x' → logprob: -20.375158309936523
    5. '"x' → logprob: -21.000158309936523
    6. '<|end|>' → logprob: -21.000158309936523
    7. '{x' → logprob: -22.375158309936523
    8. '(x' → logprob: -22.750158309936523
    9. '%x' → logprob: -23.250158309936523
    10. '$x' → logprob: -23.500158309936523

Token 728: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.024219995364546776
    2. 'and' → logprob: -3.8992199897766113
    3. ' and' → logprob: -5.899219989776611
    4. ' <' → logprob: -7.274219989776611
    5. '<len' → logprob: -9.02422046661377
    6. '<size' → logprob: -10.64922046661377
    7. '<int' → logprob: -11.14922046661377
    8. '<|end|>' → logprob: -11.14922046661377
    9. '<n' → logprob: -11.89922046661377
    10. 'x' → logprob: -12.02422046661377

Token 729: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '۴' → logprob: -20.125
    4. '' → logprob: -20.375
    5. '٤' → logprob: -20.5
    6. '16' → logprob: -20.625
    7. '४' → logprob: -20.625
    8. '৪' → logprob: -20.75
    9. '
' → logprob: -20.75
    10. '   ' → logprob: -20.75

Token 730: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '
' → logprob: -19.75
    4. '۴' → logprob: -20.25
    5. '' → logprob: -20.375
    6. '৪' → logprob: -20.375
    7. '   ' → logprob: -20.625
    8. '٤' → logprob: -20.625
    9. '४' → logprob: -20.625
    10. '```' → logprob: -21.25

Token 731: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.47408103942871094
    2. 'and' → logprob: -0.9740810394287109
    3. '               ' → logprob: -12.849081039428711
    4. '                   ' → logprob: -14.349081039428711
    5. ' ' → logprob: -15.349081039428711
    6. '           ' → logprob: -15.974081039428711
    7. '	and' → logprob: -16.22408103942871
    8. '                       ' → logprob: -16.72408103942871
    9. '   ' → logprob: -16.72408103942871
    10. '                ' → logprob: -16.84908103942871

Token 732: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.00030388421146199107
    2. ' ' → logprob: -8.125304222106934
    3. 'x' → logprob: -12.250304222106934
    4. 'y' → logprob: -13.500304222106934
    5. '                   ' → logprob: -14.625304222106934
    6. ' x' → logprob: -14.625304222106934
    7. ' y' → logprob: -15.000304222106934
    8. '               ' → logprob: -15.375304222106934
    9. '   ' → logprob: -15.750304222106934
    10. '                ' → logprob: -17.875303268432617

Token 733: '0' (ID: 15)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -12.87500286102295
    3. 'y' → logprob: -14.87500286102295
    4. 'x' → logprob: -15.50000286102295
    5. ' y' → logprob: -18.625003814697266
    6. '   ' → logprob: -20.250003814697266
    7. ' x' → logprob: -20.750003814697266
    8. '' → logprob: -20.875003814697266
    9. '16' → logprob: -20.875003814697266
    10. '
' → logprob: -20.875003814697266

Token 734: ' <=' (ID: 5017)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.012522248551249504
    2. ' <' → logprob: -4.387522220611572
    3. '<int' → logprob: -13.38752269744873
    4. '<size' → logprob: -13.38752269744873
    5. '<len' → logprob: -13.38752269744873
    6. '4' → logprob: -13.63752269744873
    7. '<n' → logprob: -13.76252269744873
    8. '<x' → logprob: -13.88752269744873
    9. 'x' → logprob: -14.26252269744873
    10. 'y' → logprob: -14.76252269744873

Token 735: ' y' (ID: 342)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.014208638109266758
    2. 'y' → logprob: -4.264208793640137
    3. ' y' → logprob: -10.139208793640137
    4. ' ' → logprob: -12.139208793640137
    5. '16' → logprob: -16.13920783996582
    6. 'x' → logprob: -16.26420783996582
    7. '   ' → logprob: -17.76420783996582
    8. '	y' → logprob: -18.26420783996582
    9. '
' → logprob: -19.01420783996582
    10. ''y' → logprob: -19.26420783996582

Token 736: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.20142561197280884
    2. ' <' → logprob: -1.701425552368164
    3. '4' → logprob: -11.951425552368164
    4. '<len' → logprob: -12.826425552368164
    5. '<size' → logprob: -13.451425552368164
    6. '<int' → logprob: -14.951425552368164
    7. '<n' → logprob: -15.451425552368164
    8. ' ' → logprob: -15.701425552368164
    9. '16' → logprob: -15.951425552368164
    10. '()<' → logprob: -16.076425552368164

Token 737: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '۴' → logprob: -20.000019073486328
    4. '   ' → logprob: -20.125019073486328
    5. '४' → logprob: -21.187519073486328
    6. '' → logprob: -21.437519073486328
    7. '৪' → logprob: -21.687519073486328
    8. '٤' → logprob: -21.750019073486328
    9. '４' → logprob: -21.937519073486328
    10. '```' → logprob: -22.250019073486328

Token 738: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '' → logprob: -20.75
    4. '४' → logprob: -21.125
    5. '۴' → logprob: -21.25
    6. '16' → logprob: -21.625
    7. '٤' → logprob: -22.0
    8. '৪' → logprob: -22.0
    9. '
' → logprob: -22.8125
    10. '```' → logprob: -22.9375

Token 739: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3752014636993408
    2. ':' → logprob: -1.8752014636993408
    3. ' and' → logprob: -2.125201463699341
    4. '                   ' → logprob: -3.375201463699341
    5. 'and' → logprob: -6.375201225280762
    6. '               ' → logprob: -6.875201225280762
    7. '                       ' → logprob: -7.000201225280762
    8. 'new' → logprob: -7.125201225280762
    9. ' new' → logprob: -7.625201225280762
    10. ':new' → logprob: -7.875201225280762

Token 740: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0017042214749380946
    2. ' new' → logprob: -6.626704216003418
    3. 'new' → logprob: -8.376704216003418
    4. '                       ' → logprob: -9.501704216003418
    5. '               ' → logprob: -10.001704216003418
    6. '                  ' → logprob: -12.001704216003418
    7. '           ' → logprob: -12.376704216003418
    8. '                    
' → logprob: -12.751704216003418
    9. '   ' → logprob: -13.126704216003418
    10. '                 ' → logprob: -13.376704216003418

Token 741: ' idx' (ID: 14016)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.007739362306892872
    2. 'index' → logprob: -5.382739543914795
    3. ' new' → logprob: -6.507739543914795
    4. 'idx' (adapté à ' idx') → logprob: -6.632739543914795
    5. '                   ' → logprob: -8.507739067077637
    6. 'pos' → logprob: -9.882739067077637
    7. '                       ' → logprob: -10.507739067077637
    8. ' idx' → logprob: -11.757739067077637
    9. 'ind' → logprob: -12.882739067077637
    10. ' index' → logprob: -12.882739067077637

Token 742: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06197362765669823
    2. ' =' → logprob: -2.8119735717773438
    3. 'x' → logprob: -12.311973571777344
    4. 's' → logprob: -14.686973571777344
    5. '=x' → logprob: -14.811973571777344
    6. '=
' → logprob: -15.561973571777344
    7. '＝' → logprob: -16.311973571777344
    8. 'idx' → logprob: -16.311973571777344
    9. ' x' → logprob: -16.436973571777344
    10. '[' → logprob: -16.811973571777344

Token 743: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0033179267775267363
    2. '4' → logprob: -5.753317832946777
    3. ' x' → logprob: -8.878317832946777
    4. ' ' → logprob: -14.878317832946777
    5. '16' → logprob: -16.128318786621094
    6. '                   ' → logprob: -16.378318786621094
    7. '   ' → logprob: -16.628318786621094
    8. '"x' → logprob: -16.753318786621094
    9. '(x' → logprob: -17.128318786621094
    10. '	x' → logprob: -18.753318786621094

Token 744: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.01814994215965271
    2. ' *' → logprob: -4.0181498527526855
    3. '*
' → logprob: -18.893150329589844
    4. '**' → logprob: -18.893150329589844
    5. '4' → logprob: -19.143150329589844
    6. ' ' → logprob: -19.518150329589844
    7. '```' → logprob: -19.518150329589844
    8. '	' → logprob: -20.018150329589844
    9. '   ' → logprob: -20.518150329589844
    10. '#' → logprob: -20.518150329589844

Token 745: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '
' → logprob: -21.25
    4. '```' → logprob: -21.25
    5. '' → logprob: -22.0
    6. '16' → logprob: -22.25
    7. '٤' → logprob: -22.375
    8. '４' → logprob: -22.375
    9. '۴' → logprob: -22.5
    10. '४' → logprob: -22.875

Token 746: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011080714873969555
    2. ' +' → logprob: -4.511080741882324
    3. '+j' → logprob: -10.886080741882324
    4. '+y' → logprob: -11.261080741882324
    5. '4' → logprob: -15.136080741882324
    6. '+
' → logprob: -15.386080741882324
    7. '+k' → logprob: -15.386080741882324
    8. '```' → logprob: -15.511080741882324
    9. '+x' → logprob: -16.011079788208008
    10. 'y' → logprob: -16.511079788208008

Token 747: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.676292231422849e-05
    2. ' y' → logprob: -11.000017166137695
    3. '	y' → logprob: -20.875017166137695
    4. '(y' → logprob: -22.125017166137695
    5. ''y' → logprob: -22.125017166137695
    6. 'yj' → logprob: -22.125017166137695
    7. '   ' → logprob: -22.250017166137695
    8. ')y' → logprob: -22.500017166137695
    9. '                   ' → logprob: -22.750017166137695
    10. 'x' → logprob: -22.750017166137695

Token 748: '
' (ID: 198)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.8967072367668152
    2. ' new' → logprob: -1.27170729637146
    3. '                   ' → logprob: -1.27170729637146
    4. ' =' → logprob: -4.896707057952881
    5. '=' → logprob: -5.396707057952881
    6. '[new' → logprob: -5.396707057952881
    7. ')' → logprob: -6.021707057952881
    8. '               ' → logprob: -6.021707057952881
    9. '       ' → logprob: -6.521707057952881
    10. ')new' → logprob: -6.646707057952881

Token 749: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.019836945459246635
    2. ' new' → logprob: -4.144836902618408
    3. 'new' → logprob: -5.644836902618408
    4. '                       ' → logprob: -9.644837379455566
    5. '               ' → logprob: -9.769837379455566
    6. '           ' → logprob: -9.894837379455566
    7. '                    
' → logprob: -10.394837379455566
    8. '       ' → logprob: -11.269837379455566
    9. '```' → logprob: -11.394837379455566
    10. '                    ' → logprob: -11.644837379455566

Token 750: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -2.165027217415627e-05
    2. ' new' → logprob: -10.750021934509277
    3. '                   ' → logprob: -16.62502098083496
    4. '                       ' → logprob: -18.62502098083496
    5. '	new' → logprob: -19.12502098083496
    6. '               ' → logprob: -19.37502098083496
    7. '[new' → logprob: -19.50002098083496
    8. '```' → logprob: -19.50002098083496
    9. '
' → logprob: -19.75002098083496
    10. '(new' → logprob: -20.37502098083496

Token 751: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -4.024604277219623e-05
    2. 'state' → logprob: -10.125040054321289
    3. '_states' → logprob: -16.87504005432129
    4. '_STATE' → logprob: -17.00004005432129
    5. 'State' → logprob: -17.00004005432129
    6. ' state' → logprob: -18.50004005432129
    7. '_State' → logprob: -19.00004005432129
    8. '_token' → logprob: -19.50004005432129
    9. 's' → logprob: -19.62504005432129
    10. '_' → logprob: -19.62504005432129

Token 752: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -2.236549335066229e-05
    2. '=' → logprob: -10.875021934509277
    3. '[' → logprob: -13.625021934509277
    4. 'idx' → logprob: -14.250021934509277
    5. '[
' → logprob: -14.500021934509277
    6. '```' → logprob: -14.875021934509277
    7. '[token' → logprob: -15.875021934509277
    8. '\[' → logprob: -16.000022888183594
    9. '<|end|>' → logprob: -16.125022888183594
    10. '	idx' → logprob: -16.750022888183594

Token 753: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005930931773036718
    2. ' =' → logprob: -5.6309309005737305
    3. ']=' → logprob: -6.5059309005737305
    4. ']' → logprob: -7.1309309005737305
    5. ')=' → logprob: -10.63093090057373
    6. ')' → logprob: -11.88093090057373
    7. '=
' → logprob: -13.63093090057373
    8. '=color' → logprob: -14.75593090057373
    9. '']=' → logprob: -15.13093090057373
    10. ']='' → logprob: -15.63093090057373

Token 754: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -5.2166411478538066e-05
    2. ' =' → logprob: -9.875052452087402
    3. '=color' → logprob: -14.875052452087402
    4. '=
' → logprob: -15.625052452087402
    5. ']=' → logprob: -16.250051498413086
    6. ')=' → logprob: -17.500051498413086
    7. '=

' → logprob: -18.750051498413086
    8. '＝' → logprob: -19.250051498413086
    9. 'color' → logprob: -19.625051498413086
    10. '.=' → logprob: -20.250051498413086

Token 755: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -6.2729995988775045e-06
    2. ' color' → logprob: -12.000006675720215
    3. '	color' → logprob: -22.1250057220459
    4. 'c' → logprob: -22.2500057220459
    5. '=color' → logprob: -22.8750057220459
    6. ' ' → logprob: -23.1250057220459
    7. '   ' → logprob: -23.6250057220459
    8. '[color' → logprob: -23.8750057220459
    9. 'colors' → logprob: -24.1250057220459
    10. 'colour' → logprob: -24.3750057220459

Token 756: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4220220446586609
    2. '       ' → logprob: -1.6720221042633057
    3. '<|end|>' → logprob: -2.7970221042633057
    4. '        
' → logprob: -3.2970221042633057
    5. '\n' → logprob: -3.6720221042633057
    6. ')' → logprob: -5.297021865844727
    7. ' 
' → logprob: -5.297021865844727
    8. '  
' → logprob: -5.297021865844727
    9. 'return' → logprob: -5.422021865844727
    10. '    
' → logprob: -5.922021865844727

Token 757: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013680225238204002
    2. '<|end|>' → logprob: -5.138680458068848
    3. ')' → logprob: -5.888680458068848
    4. '        
' → logprob: -6.138680458068848
    5. '               ' → logprob: -6.888680458068848
    6. ' return' → logprob: -8.513680458068848
    7. '
' → logprob: -8.638680458068848
    8. '        ' → logprob: -8.638680458068848
    9. '  
' → logprob: -8.888680458068848
    10. '                   ' → logprob: -9.138680458068848

Token 758: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.9788894653320312
    2. '       ' → logprob: -1.1038894653320312
    3. 'return' (adapté à ' return') → logprob: -1.7288894653320312
    4. '   ' → logprob: -2.6038894653320312
    5. '	return' → logprob: -3.2288894653320312
    6. ' ' → logprob: -8.103889465332031
    7. '```' → logprob: -8.103889465332031
    8. '<|end|>' → logprob: -8.353889465332031
    9. '        
' → logprob: -8.728889465332031
    10. ')' → logprob: -8.978889465332031

Token 759: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.00012368128227535635
    2. ' tuple' → logprob: -9.000123977661133
    3. '(tuple' → logprob: -15.875123977661133
    4. 'tu' → logprob: -16.750123977661133
    5. '   ' → logprob: -19.500123977661133
    6. 't' → logprob: -22.500123977661133
    7. '_tuple' → logprob: -22.625123977661133
    8. 'Tuple' → logprob: -23.375123977661133
    9. '''.' → logprob: -23.750123977661133
    10. '       ' → logprob: -23.750123977661133

Token 760: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.00026169343618676066
    2. 'new' → logprob: -8.250261306762695
    3. ')new' → logprob: -15.500261306762695
    4. '(' → logprob: -16.125261306762695
    5. '[new' → logprob: -16.125261306762695
    6. ' new' → logprob: -17.250261306762695
    7. '$new' → logprob: -18.000261306762695
    8. ' (' → logprob: -18.500261306762695
    9. '	new' → logprob: -19.125261306762695
    10. ',new' → logprob: -19.500261306762695

Token 761: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.02990715019404888
    2. 'state' → logprob: -3.5299072265625
    3. 'new' → logprob: -8.7799072265625
    4. 'State' → logprob: -13.1549072265625
    5. ' state' → logprob: -15.2799072265625
    6. '_new' → logprob: -15.6549072265625
    7. '-state' → logprob: -15.7799072265625
    8. '```' → logprob: -16.1549072265625
    9. '_STATE' → logprob: -16.9049072265625
    10. '(new' → logprob: -16.9049072265625

Token 762: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.804671233519912e-05
    2. '<|end|>' → logprob: -9.50008773803711
    3. '   ' → logprob: -12.00008773803711
    4. ' )' → logprob: -12.87508773803711
    5. '<|end|>' → logprob: -13.12508773803711
    6. ')
' → logprob: -14.37508773803711
    7. '       ' → logprob: -14.75008773803711
    8. ')return' → logprob: -15.00008773803711
    9. '[' → logprob: -15.50008773803711
    10. '}' → logprob: -15.50008773803711

Token 763: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017244869843125343
    2. '    
' → logprob: -4.767244815826416
    3. 'queue' → logprob: -5.267244815826416
    4. 'visited' → logprob: -6.142244815826416
    5. '
' → logprob: -6.767244815826416
    6. 'q' → logprob: -10.392245292663574
    7. '#' → logprob: -10.892245292663574
    8. 'def' → logprob: -11.142245292663574
    9. '        
' → logprob: -11.267245292663574
    10. 'from' → logprob: -11.892245292663574

Token 764: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.26147332787513733
    2. '   ' → logprob: -1.511473298072815
    3. 'queue' → logprob: -5.011473178863525
    4. '#' (adapté à ' #') → logprob: -6.261473178863525
    5. '    
' → logprob: -7.511473178863525
    6. 'seen' → logprob: -8.636473655700684
    7. ' visited' → logprob: -9.386473655700684
    8. '
' → logprob: -9.886473655700684
    9. 'def' → logprob: -10.261473655700684
    10. 'from' → logprob: -10.761473655700684

Token 765: ' BFS' (ID: 190016)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.14633052051067352
    2. 'queue' → logprob: -2.3963305950164795
    3. '   ' → logprob: -3.1463305950164795
    4. '#' → logprob: -7.1463303565979
    5. 'seen' → logprob: -7.5213303565979
    6. '    
' → logprob: -7.7713303565979
    7. 'from' → logprob: -8.896330833435059
    8. ' visited' → logprob: -9.896330833435059
    9. 'q' → logprob: -10.021330833435059
    10. 'def' → logprob: -10.146330833435059

Token 766: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05215100198984146
    2. 'queue' → logprob: -3.1771509647369385
    3. ' queue' → logprob: -5.302151203155518
    4. '
' → logprob: -5.677151203155518
    5. '    
' → logprob: -7.677151203155518
    6. 'q' → logprob: -9.42715072631836
    7. '```' → logprob: -9.67715072631836
    8. '	queue' → logprob: -9.92715072631836
    9. 'que' → logprob: -11.17715072631836
    10. '(queue' → logprob: -11.30215072631836

Token 767: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26269200444221497
    2. '(queue' → logprob: -2.5126919746398926
    3. ' =' → logprob: -2.6376919746398926
    4. '(' → logprob: -3.0126919746398926
    5. '(
' → logprob: -4.762691974639893
    6. 'queue' → logprob: -4.762691974639893
    7. ':' → logprob: -5.512691974639893
    8. '=' → logprob: -6.012691974639893
    9. '_queue' → logprob: -6.012691974639893
    10. ' queue' → logprob: -6.387691974639893

Token 768: ' visited' (ID: 18416)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.12901486456394196
    2. '   ' → logprob: -2.1290149688720703
    3. 'visited' (adapté à ' visited') → logprob: -6.37901496887207
    4. 'q' → logprob: -8.75401496887207
    5. ' queue' → logprob: -9.12901496887207
    6. 'que' → logprob: -9.62901496887207
    7. '    
' → logprob: -10.62901496887207
    8. '
' → logprob: -10.62901496887207
    9. 'seen' → logprob: -13.00401496887207
    10. ' visited' → logprob: -13.37901496887207

Token 769: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17990854382514954
    2. '=' → logprob: -1.8049085140228271
    3. '[' → logprob: -9.179908752441406
    4. ' ' → logprob: -11.179908752441406
    5. '=set' → logprob: -11.679908752441406
    6. '={}' → logprob: -11.804908752441406
    7. '.setdefault' → logprob: -12.179908752441406
    8. ',' → logprob: -12.554908752441406
    9. '   ' → logprob: -12.679908752441406
    10. ' ={' → logprob: -12.679908752441406

Token 770: ' dict' (ID: 11878)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.025666454806923866
    2. '{}' → logprob: -3.7756664752960205
    3. 'dict' → logprob: -6.525666236877441
    4. 'set' → logprob: -7.025666236877441
    5. ' {' → logprob: -9.900666236877441
    6. '{}
' → logprob: -11.775666236877441
    7. ' {}' → logprob: -13.775666236877441
    8. '{})' → logprob: -13.775666236877441
    9. '{id' → logprob: -13.900666236877441
    10. '{i' → logprob: -14.525666236877441

Token 771: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.5089870095252991
    2. '()' → logprob: -1.0089869499206543
    3. '   ' → logprob: -3.3839869499206543
    4. ' =' → logprob: -8.758987426757812
    5. '=' → logprob: -9.383987426757812
    6. '{' → logprob: -9.508987426757812
    7. '({' → logprob: -11.133987426757812
    8. '()

' → logprob: -11.258987426757812
    9. '([(' → logprob: -11.383987426757812
    10. '()
' → logprob: -11.883987426757812

Token 772: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0626157596707344
    2. 'queue' → logprob: -2.8126158714294434
    3. 'visited' → logprob: -7.562615871429443
    4. ' queue' → logprob: -9.437615394592285
    5. '```' → logprob: -11.187615394592285
    6. 'from' → logprob: -11.312615394592285
    7. 'q' → logprob: -11.812615394592285
    8. 'que' → logprob: -11.937615394592285
    9. '	queue' → logprob: -12.437615394592285
    10. '
' → logprob: -14.062615394592285

Token 773: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.004292322788387537
    2. 'visited' → logprob: -5.5042924880981445
    3. 'q' → logprob: -8.504292488098145
    4. 'que' → logprob: -12.379292488098145
    5. '   ' → logprob: -12.754292488098145
    6. ' queue' → logprob: -13.254292488098145
    7. 'from' → logprob: -14.254292488098145
    8. '
' → logprob: -14.379292488098145
    9. 'start' → logprob: -14.629292488098145
    10. 'Q' → logprob: -15.004292488098145

Token 774: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3874248266220093
    2. ' =' → logprob: -1.1374248266220093
    3. '.append' → logprob: -7.762424945831299
    4. '   ' → logprob: -10.01242446899414
    5. '(' → logprob: -10.26242446899414
    6. '=[]' → logprob: -10.88742446899414
    7. '(queue' → logprob: -11.76242446899414
    8. ')' → logprob: -12.01242446899414
    9. '.enqueue' → logprob: -12.88742446899414
    10. '.' → logprob: -13.26242446899414

Token 775: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.00861468818038702
    2. ' deque' → logprob: -4.758614540100098
    3. '   ' → logprob: -15.883614540100098
    4. 'de' → logprob: -17.508615493774414
    5. 'Deque' → logprob: -17.633615493774414
    6. 'collections' → logprob: -18.883615493774414
    7. '```' → logprob: -20.258615493774414
    8. ' ' → logprob: -20.508615493774414
    9. '(de' → logprob: -20.883615493774414
    10. '	de' → logprob: -20.883615493774414

Token 776: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.41521894931793213
    2. '([(' → logprob: -1.9152189493179321
    3. '()
' → logprob: -2.1652188301086426
    4. '([' → logprob: -2.6652188301086426
    5. '(empty' → logprob: -5.165218830108643
    6. '([
' → logprob: -6.540218830108643
    7. '([])
' → logprob: -7.790218830108643
    8. '()

' → logprob: -8.2902193069458
    9. '([]' → logprob: -8.9152193069458
    10. '(' → logprob: -9.1652193069458

Token 777: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5417661666870117
    2. 'queue' → logprob: -1.0417661666870117
    3. 'state' → logprob: -2.7917661666870117
    4. ' queue' → logprob: -6.041766166687012
    5. 'initial' → logprob: -7.416766166687012
    6. 'start' → logprob: -7.791766166687012
    7. '    
' → logprob: -7.916766166687012
    8. 'visited' → logprob: -8.541766166687012
    9. ' state' → logprob: -9.541766166687012
    10. '
' → logprob: -10.541766166687012

Token 778: ' visited' (ID: 18416)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.3332868218421936
    2. 'visited' (adapté à ' visited') → logprob: -1.3332867622375488
    3. '   ' → logprob: -4.333286762237549
    4. 'start' → logprob: -5.208286762237549
    5. 'initial' → logprob: -6.833286762237549
    6. 'state' → logprob: -9.083287239074707
    7. 'empty' → logprob: -10.958287239074707
    8. '#' → logprob: -11.833287239074707
    9. ' queue' → logprob: -12.333287239074707
    10. ' visited' → logprob: -12.708287239074707

Token 779: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.85366350505501e-05
    2. 'empty' → logprob: -9.62509822845459
    3. '=' → logprob: -11.87509822845459
    4. ' =' → logprob: -12.12509822845459
    5. '[(' → logprob: -12.12509822845459
    6. '[e' → logprob: -12.50009822845459
    7. '   ' → logprob: -13.25009822845459
    8. '[state' → logprob: -13.25009822845459
    9. '(empty' → logprob: -13.50009822845459
    10. '[end' → logprob: -13.62509822845459

Token 780: 'empty' (ID: 6857)
  Prédit: 'empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' → logprob: -6.749814019713085e-06
    2. '(empty' → logprob: -12.000006675720215
    3. ' empty' → logprob: -14.375006675720215
    4. ')' → logprob: -19.12500762939453
    5. '.empty' → logprob: -19.12500762939453
    6. '{' → logprob: -20.12500762939453
    7. 'EMPTY' → logprob: -21.37500762939453
    8. '_empty' → logprob: -21.62500762939453
    9. '```' → logprob: -22.25000762939453
    10. '   ' → logprob: -22.25000762939453

Token 781: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -8.180258191714529e-06
    2. ' _' → logprob: -12.625008583068848
    3. '_states' → logprob: -13.000008583068848
    4. '_STATE' → logprob: -14.375008583068848
    5. ')_' → logprob: -14.375008583068848
    6. ']_' → logprob: -15.000008583068848
    7. ''_' → logprob: -15.375008583068848
    8. ')' → logprob: -15.500008583068848
    9. '_State' → logprob: -15.875008583068848
    10. '_status' → logprob: -16.50000762939453

Token 782: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0014366621617227793
    2. ']=' → logprob: -6.751436710357666
    3. ' ]' → logprob: -8.251436233520508
    4. '=' → logprob: -12.751436233520508
    5. ' =' → logprob: -13.501436233520508
    6. ')' → logprob: -13.751436233520508
    7. ']=(' → logprob: -16.626436233520508
    8. '   ' → logprob: -17.626436233520508
    9. ']
' → logprob: -17.626436233520508
    10. '[' → logprob: -17.626436233520508

Token 783: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011048762127757072
    2. ' =' → logprob: -4.511048793792725
    3. ']=' → logprob: -14.386048316955566
    4. ']' → logprob: -15.261048316955566
    5. '=True' → logprob: -16.386049270629883
    6. ')=' → logprob: -18.636049270629883
    7. ')' → logprob: -18.761049270629883
    8. '=
' → logprob: -19.011049270629883
    9. '=[' → logprob: -19.261049270629883
    10. '=}' → logprob: -19.636049270629883

Token 784: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '   ' → logprob: -21.375
    4. '۰' → logprob: -22.5
    5. '(' → logprob: -23.5
    6. '00' → logprob: -23.875
    7. '1' → logprob: -24.0
    8. '000' → logprob: -24.0
    9. 'O' → logprob: -24.25
    10. '０' → logprob: -24.5

Token 785: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '   ' → logprob: -21.25
    4. '۰' → logprob: -21.625
    5. '00' → logprob: -22.0
    6. '(' → logprob: -22.0
    7. '000' → logprob: -22.875
    8. ' ' → logprob: -23.125
    9. '[' → logprob: -23.625
    10. '０' → logprob: -24.0

Token 786: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08018726855516434
    2. 'queue' → logprob: -2.5801873207092285
    3. ' queue' → logprob: -6.7051873207092285
    4. '	queue' → logprob: -9.58018684387207
    5. '(queue' → logprob: -13.20518684387207
    6. '.queue' → logprob: -14.33018684387207
    7. '
' → logprob: -14.83018684387207
    8. '_queue' → logprob: -16.58018684387207
    9. '```' → logprob: -16.70518684387207
    10. '    
' → logprob: -17.08018684387207

Token 787: '   ' (ID: 271)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.02349085733294487
    2. '   ' → logprob: -3.7734909057617188
    3. ' queue' → logprob: -8.898490905761719
    4. '	queue' → logprob: -9.148490905761719
    5. '(queue' → logprob: -14.023490905761719
    6. '
' → logprob: -14.648490905761719
    7. '    
' → logprob: -14.773490905761719
    8. '.queue' → logprob: -15.398490905761719
    9. '```' → logprob: -15.398490905761719
    10. '  ' → logprob: -16.14849090576172

Token 788: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -6.704273118884885e-07
    2. '   ' → logprob: -14.500000953674316
    3. ' queue' → logprob: -16.875
    4. '```' → logprob: -17.0
    5. 'for' → logprob: -19.0
    6. '`' → logprob: -19.5
    7. '	queue' → logprob: -20.25
    8. '``' → logprob: -21.625
    9. '
' → logprob: -21.625
    10. '    
' → logprob: -21.875

Token 789: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00017159747949335724
    2. '.p' → logprob: -8.875171661376953
    3. '.' → logprob: -11.125171661376953
    4. '.app' → logprob: -12.125171661376953
    5. '.enqueue' → logprob: -12.250171661376953
    6. '.extend' → logprob: -12.625171661376953
    7. '.put' → logprob: -13.750171661376953
    8. ').' → logprob: -14.625171661376953
    9. 'append' → logprob: -15.125171661376953
    10. '_append' → logprob: -15.250171661376953

Token 790: '(empty' (ID: 56323)
  Prédit: '(empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(empty' → logprob: -0.00010640407708706334
    2. '(' → logprob: -9.625106811523438
    3. '((' → logprob: -10.250106811523438
    4. ' (' → logprob: -12.625106811523438
    5. 'empty' → logprob: -13.500106811523438
    6. '(
' → logprob: -16.000106811523438
    7. '(em' → logprob: -16.500106811523438
    8. '(blank' → logprob: -18.250106811523438
    9. '(initial' → logprob: -18.500106811523438
    10. '(()' → logprob: -18.750106811523438

Token 791: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -2.2200749754119897e-06
    2. 'state' → logprob: -13.250001907348633
    3. 'State' → logprob: -15.250001907348633
    4. '_STATE' → logprob: -16.500001907348633
    5. 'empty' → logprob: -17.125001907348633
    6. '_State' → logprob: -17.750001907348633
    7. '_states' → logprob: -18.000001907348633
    8. '_' → logprob: -18.250001907348633
    9. '(_' → logprob: -19.500001907348633
    10. ')' → logprob: -19.625001907348633

Token 792: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003434488025959581
    2. ')
' → logprob: -8.125343322753906
    3. '   ' → logprob: -10.000343322753906
    4. ' )' → logprob: -13.500343322753906
    5. ')
' → logprob: -16.125343322753906
    6. ')

' → logprob: -16.125343322753906
    7. '
' → logprob: -16.625343322753906
    8. '')' → logprob: -16.875343322753906
    9. ')`' → logprob: -17.375343322753906
    10. '),' → logprob: -17.500343322753906

Token 793: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.00419402914121747
    2. '   ' → logprob: -5.504194259643555
    3. ' while' → logprob: -9.129194259643555
    4. '```' → logprob: -12.004194259643555
    5. '	while' → logprob: -14.379194259643555
    6. 'While' → logprob: -15.254194259643555
    7. '    
' → logprob: -15.754194259643555
    8. '
' → logprob: -17.004194259643555
    9. '``' → logprob: -17.504194259643555
    10. 'for' → logprob: -18.504194259643555

Token 794: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -3.128163257315464e-07
    2. ' while' → logprob: -15.5
    3. 'for' → logprob: -19.75
    4. '
' → logprob: -19.875
    5. '   ' → logprob: -19.875
    6. 'While' → logprob: -20.0
    7. '```' → logprob: -20.0
    8. '    
' → logprob: -21.625
    9. 'from' → logprob: -21.625
    10. '	while' → logprob: -22.25

Token 795: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.38694748282432556
    2. 'queue' → logprob: -1.136947512626648
    3. 'len' → logprob: -10.136947631835938
    4. ' len' → logprob: -10.886947631835938
    5. '   ' → logprob: -11.511947631835938
    6. '(queue' → logprob: -12.011947631835938
    7. '	queue' → logprob: -14.386947631835938
    8. ' True' → logprob: -14.636947631835938
    9. 'True' → logprob: -14.886947631835938
    10. 'que' → logprob: -15.386947631835938

Token 796: ':
' (ID: 734)
  Prédit: '.p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.09868039935827255
    2. ':' → logprob: -3.0986804962158203
    3. '.pop' → logprob: -3.5986804962158203
    4. ':
' → logprob: -4.84868049621582
    5. '.append' → logprob: -4.84868049621582
    6. '.' → logprob: -5.97368049621582
    7. '[' → logprob: -6.97368049621582
    8. '   ' → logprob: -7.09868049621582
    9. ' p' → logprob: -8.09868049621582
    10. 'opleft' → logprob: -8.22368049621582

Token 797: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04911242797970772
    2. 'state' → logprob: -3.049112319946289
    3. '   ' → logprob: -7.924112319946289
    4. ' state' → logprob: -9.299112319946289
    5. 'current' → logprob: -9.799112319946289
    6. ',state' → logprob: -12.049112319946289
    7. ' current' → logprob: -12.549112319946289
    8. '	state' → logprob: -12.924112319946289
    9. '```' → logprob: -13.299112319946289
    10. '_state' → logprob: -13.549112319946289

Token 798: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' (adapté à ' state') → logprob: -0.2039424329996109
    2. 'current' → logprob: -1.7039424180984497
    3. 'curr' → logprob: -6.70394229888916
    4. '   ' → logprob: -7.45394229888916
    5. 'cur' → logprob: -7.70394229888916
    6. ' current' → logprob: -8.70394229888916
    7. ' state' → logprob: -9.20394229888916
    8. '       ' → logprob: -13.20394229888916
    9. ' curr' → logprob: -13.95394229888916
    10. '_state' → logprob: -16.328943252563477

Token 799: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009757624007761478
    2. '=' → logprob: -4.6347575187683105
    3. ')' → logprob: -14.259757995605469
    4. ',' → logprob: -14.634757995605469
    5. '   ' → logprob: -15.384757995605469
    6. ' =
' → logprob: -16.00975799560547
    7. '    ' → logprob: -16.63475799560547
    8. '       ' → logprob: -17.13475799560547
    9. ')=' → logprob: -17.25975799560547
    10. 'state' → logprob: -17.38475799560547

Token 800: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.25193002820014954
    2. ' queue' → logprob: -1.5019299983978271
    3. '	queue' → logprob: -15.001930236816406
    4. '   ' → logprob: -15.126930236816406
    5. '(queue' → logprob: -16.251930236816406
    6. 'que' → logprob: -16.251930236816406
    7. 'deque' → logprob: -17.251930236816406
    8. '       ' → logprob: -17.626930236816406
    9. '.queue' → logprob: -17.876930236816406
    10. ' ' → logprob: -18.126930236816406

Token 801: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.27238598465919495
    2. '=' → logprob: -1.5223859548568726
    3. ' =' → logprob: -4.397386074066162
    4. '.pop' → logprob: -4.897386074066162
    5. '   ' → logprob: -8.522385597229004
    6. 'p' → logprob: -8.897385597229004
    7. '       ' → logprob: -9.897385597229004
    8. ' p' → logprob: -10.897385597229004
    9. '=p' → logprob: -11.022385597229004
    10. '.append' → logprob: -11.272385597229004

Token 802: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.0011953481007367373
    2. 'op' → logprob: -6.751195430755615
    3. 'ople' → logprob: -10.751194953918457
    4. 'opl' → logprob: -12.626194953918457
    5. 'opy' → logprob: -16.876195907592773
    6. '   ' → logprob: -16.876195907592773
    7. '```' → logprob: -16.876195907592773
    8. 'append' → logprob: -17.001195907592773
    9. 'ope' → logprob: -17.126195907592773
    10. 'opped' → logprob: -17.501195907592773

Token 803: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014205467887222767
    2. '
' → logprob: -4.389205455780029
    3. '        
' → logprob: -6.764205455780029
    4. 'if' → logprob: -9.264205932617188
    5. '#' → logprob: -9.389205932617188
    6. ' if' → logprob: -9.639205932617188
    7. ')
' → logprob: -9.764205932617188
    8. ':
' → logprob: -10.014205932617188
    9. ',' → logprob: -10.014205932617188
    10. ')' → logprob: -10.389205932617188

Token 804: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022142579779028893
    2. 'if' → logprob: -4.02214241027832
    3. 'current' → logprob: -6.52214241027832
    4. 'depth' → logprob: -6.89714241027832
    5. 'd' → logprob: -7.77214241027832
    6. 'dist' → logprob: -8.14714241027832
    7. 'distance' → logprob: -8.52214241027832
    8. 'steps' → logprob: -8.52214241027832
    9. ' if' → logprob: -9.52214241027832
    10. 'count' → logprob: -9.64714241027832

Token 805: ' dist' (ID: 3601)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11790985614061356
    2. 'cost' → logprob: -2.8679099082946777
    3. 'dist' (adapté à ' dist') → logprob: -3.3679099082946777
    4. 'current' → logprob: -4.617909908294678
    5. 'steps' → logprob: -5.242909908294678
    6. 'curr' → logprob: -6.867909908294678
    7. 'depth' → logprob: -6.867909908294678
    8. 'd' → logprob: -6.867909908294678
    9. 'cur' → logprob: -7.242909908294678
    10. '       ' → logprob: -7.492909908294678

Token 806: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0677504688501358
    2. '=' → logprob: -3.4427504539489746
    3. ' +' → logprob: -3.5677504539489746
    4. '+' → logprob: -5.317750453948975
    5. ' +=' → logprob: -8.567750930786133
    6. ')' → logprob: -9.317750930786133
    7. '   ' → logprob: -9.567750930786133
    8. '       ' → logprob: -11.567750930786133
    9. ',' → logprob: -11.692750930786133
    10. ']' → logprob: -12.067750930786133

Token 807: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0007100477814674377
    2. ' visited' → logprob: -7.2507100105285645
    3. '   ' → logprob: -16.625709533691406
    4. 'visible' → logprob: -18.375709533691406
    5. 'visit' → logprob: -18.375709533691406
    6. 'vis' → logprob: -18.750709533691406
    7. 'visi' → logprob: -20.250709533691406
    8. '       ' → logprob: -20.625709533691406
    9. 'visitor' → logprob: -21.000709533691406
    10. 'vist' → logprob: -21.750709533691406

Token 808: '[state' (ID: 134476)
  Prédit: '[state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[state' → logprob: -0.029901834204792976
    2. 'state' → logprob: -3.5299017429351807
    3. '(state' → logprob: -9.279901504516602
    4. '[' → logprob: -9.904901504516602
    5. ' state' → logprob: -11.779901504516602
    6. ',state' → logprob: -16.0299015045166
    7. '```' → logprob: -16.4049015045166
    8. '_state' → logprob: -16.9049015045166
    9. ' [' → logprob: -17.0299015045166
    10. 'states' → logprob: -17.4049015045166

Token 809: ']
' (ID: 1592)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9748967885971069
    2. ' +' → logprob: -0.9748967885971069
    3. ')' → logprob: -1.474896788597107
    4. ')+' → logprob: -4.8498969078063965
    5. ')
' → logprob: -5.7248969078063965
    6. ']' → logprob: -6.0998969078063965
    7. '
' → logprob: -6.4748969078063965
    8. '       ' → logprob: -6.8498969078063965
    9. ']+' → logprob: -7.5998969078063965
    10. '+
' → logprob: -8.849896430969238

Token 810: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10069367289543152
    2. 'if' → logprob: -2.350693702697754
    3. ' if' → logprob: -7.725693702697754
    4. '   ' → logprob: -11.100693702697754
    5. '```' → logprob: -11.100693702697754
    6. '        
' → logprob: -11.475693702697754
    7. '	if' → logprob: -13.100693702697754
    8. 'for' → logprob: -13.850693702697754
    9. '	' → logprob: -14.475693702697754
    10. '           ' → logprob: -14.850693702697754

Token 811: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -4.620622712536715e-05
    2. '       ' → logprob: -10.000045776367188
    3. ' if' → logprob: -14.250045776367188
    4. '#' (adapté à ' #') → logprob: -16.500045776367188
    5. '        
' → logprob: -16.750045776367188
    6. '   ' → logprob: -18.500045776367188
    7. '           ' → logprob: -18.875045776367188
    8. '
' → logprob: -19.375045776367188
    9. '```' → logprob: -19.875045776367188
    10. 'If' → logprob: -20.875045776367188

Token 812: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -8.061054359131958e-06
    2. '       ' → logprob: -11.750007629394531
    3. ' if' → logprob: -16.87500762939453
    4. '#' → logprob: -17.25000762939453
    5. '   ' → logprob: -18.75000762939453
    6. '        
' → logprob: -19.37500762939453
    7. 'for' → logprob: -19.37500762939453
    8. '
' → logprob: -20.00000762939453
    9. 'If' → logprob: -20.75000762939453
    10. '           ' → logprob: -20.87500762939453

Token 813: ' état' (ID: 59181)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.5759612321853638
    2. ' state' → logprob: -0.8259612321853638
    3. ' dist' → logprob: -11.450961112976074
    4. 'dist' → logprob: -12.450961112976074
    5. ' ' → logprob: -13.325961112976074
    6. '   ' → logprob: -13.450961112976074
    7. '(state' → logprob: -14.075961112976074
    8. ' ' → logprob: -14.325961112976074
    9. '	state' → logprob: -14.575961112976074
    10. ' état' → logprob: -15.200961112976074

Token 814: ' atteint' (ID: 104876)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25195837020874023
    2. '==' → logprob: -1.5019583702087402
    3. ' !=' → logprob: -11.626958847045898
    4. '```' → logprob: -11.876958847045898
    5. '!=' → logprob: -12.126958847045898
    6. 'state' → logprob: -13.001958847045898
    7. '=' → logprob: -13.876958847045898
    8. ' ' → logprob: -13.876958847045898
    9. '==
' → logprob: -14.251958847045898
    10. '===' → logprob: -14.251958847045898

Token 815: ',' (ID: 11)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.07880067080259323
    2. '==' → logprob: -3.328800678253174
    3. ' ==' → logprob: -3.328800678253174
    4. ' state' → logprob: -5.953800678253174
    5. '       ' → logprob: -6.578800678253174
    6. 'if' → logprob: -9.328800201416016
    7. '   ' → logprob: -11.703800201416016
    8. '           ' → logprob: -11.953800201416016
    9. ' if' → logprob: -12.453800201416016
    10. '==
' → logprob: -12.703800201416016

Token 816: ' finir' (ID: 97022)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08321044594049454
    2. ' if' → logprob: -2.5832104682922363
    3. '       ' → logprob: -5.458210468292236
    4. '           ' → logprob: -10.083209991455078
    5. 'return' → logprob: -12.333209991455078
    6. 'print' → logprob: -13.458209991455078
    7. '   ' → logprob: -13.708209991455078
    8. ' si' → logprob: -14.333209991455078
    9. '        ' → logprob: -15.958209991455078
    10. '	if' → logprob: -16.208209991455078

Token 817: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3306015716807451e-05
    2. 'if' → logprob: -11.87501335144043
    3. ' if' → logprob: -12.75001335144043
    4. '           ' → logprob: -12.75001335144043
    5. ',' → logprob: -15.25001335144043
    6. '```' → logprob: -16.50001335144043
    7. '      ' → logprob: -17.25001335144043
    8. '               ' → logprob: -17.37501335144043
    9. '	' → logprob: -17.50001335144043
    10. '   ' → logprob: -17.87501335144043

Token 818: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.5048530030981055e-06
    2. 'if' → logprob: -13.875001907348633
    3. ' if' → logprob: -15.250001907348633
    4. '           ' → logprob: -15.375001907348633
    5. '```' → logprob: -16.750001907348633
    6. ',' → logprob: -17.625001907348633
    7. '	' → logprob: -17.750001907348633
    8. '   ' → logprob: -18.375001907348633
    9. '      ' → logprob: -18.625001907348633
    10. '               ' → logprob: -18.750001907348633

Token 819: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1003909483551979
    2. 'if' (adapté à ' if') → logprob: -2.350390911102295
    3. ' if' → logprob: -8.600391387939453
    4. '   ' → logprob: -15.475391387939453
    5. '           ' → logprob: -16.975391387939453
    6. '```' → logprob: -17.100391387939453
    7. '	if' → logprob: -17.725391387939453
    8. '      ' → logprob: -18.600391387939453
    9. 'If' → logprob: -18.725391387939453
    10. '	' → logprob: -19.600391387939453

Token 820: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.16022644937038422
    2. ' state' → logprob: -1.9102264642715454
    3. '   ' → logprob: -13.660226821899414
    4. '       ' → logprob: -14.410226821899414
    5. '    ' → logprob: -15.410226821899414
    6. '	state' → logprob: -16.035226821899414
    7. '(state' → logprob: -16.410226821899414
    8. ' ' → logprob: -16.660226821899414
    9. '    ' → logprob: -17.035226821899414
    10. '_state' → logprob: -17.785226821899414

Token 821: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5759941935539246
    2. '==' → logprob: -0.8259941935539246
    3. ')==' → logprob: -10.325994491577148
    4. ')' → logprob: -11.700994491577148
    5. ']==' → logprob: -12.200994491577148
    6. '===' → logprob: -12.950994491577148
    7. '=' → logprob: -12.950994491577148
    8. '==
' → logprob: -13.575994491577148
    9. '[' → logprob: -14.325994491577148
    10. '[:]' → logprob: -14.325994491577148

Token 822: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.00020354038861114532
    2. ' target' → logprob: -8.500203132629395
    3. '   ' → logprob: -17.00020408630371
    4. '(target' → logprob: -18.62520408630371
    5. '	target' → logprob: -19.87520408630371
    6. '[target' → logprob: -22.12520408630371
    7. 't' → logprob: -22.25020408630371
    8. 'tuple' → logprob: -22.25020408630371
    9. ' ' → logprob: -22.25020408630371
    10. '_target' → logprob: -22.50020408630371

Token 823: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -7.465036105713807e-06
    2. ':' → logprob: -12.125007629394531
    3. 'state' → logprob: -14.250007629394531
    4. '_STATE' → logprob: -14.750007629394531
    5. '   ' → logprob: -15.000007629394531
    6. ':
' → logprob: -15.000007629394531
    7. '_' → logprob: -16.75000762939453
    8. '_State' → logprob: -16.75000762939453
    9. '_states' → logprob: -17.00000762939453
    10. ')' → logprob: -17.75000762939453

Token 824: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02148847095668316
    2. ':
' → logprob: -3.8964884281158447
    3. '           ' → logprob: -7.146488666534424
    4. ':return' → logprob: -8.896488189697266
    5. '       ' → logprob: -11.021488189697266
    6. ':
' → logprob: -13.271488189697266
    7. '               ' → logprob: -14.396488189697266
    8. '):
' → logprob: -14.521488189697266
    9. '):' → logprob: -14.896488189697266
    10. ',' → logprob: -15.021488189697266

Token 825: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00017982252757064998
    2. ' return' → logprob: -9.0001802444458
    3. 'return' → logprob: -10.3751802444458
    4. '               ' → logprob: -11.8751802444458
    5. ':
' → logprob: -11.8751802444458
    6. ' break' → logprob: -12.6251802444458
    7. '
' → logprob: -13.2501802444458
    8. ':' → logprob: -13.5001802444458
    9. '		' → logprob: -13.8751802444458
    10. 'break' → logprob: -13.8751802444458

Token 826: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.10147170722484589
    2. '           ' → logprob: -2.3514716625213623
    3. 'return' → logprob: -6.726471900939941
    4. ' print' → logprob: -9.976471900939941
    5. 'break' → logprob: -11.101471900939941
    6. '       ' → logprob: -13.601471900939941
    7. '               ' → logprob: -14.351471900939941
    8. ' return' → logprob: -14.476471900939941
    9. '#print' → logprob: -14.726471900939941
    10. '```' → logprob: -14.851471900939941

Token 827: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.0001238004770129919
    2. 'dist' → logprob: -9.000123977661133
    3. '(' → logprob: -15.500123977661133
    4. ' dist' → logprob: -17.250123977661133
    5. 'Dist' → logprob: -18.500123977661133
    6. '(
' → logprob: -18.875123977661133
    7. '	dist' → logprob: -19.375123977661133
    8. '(distance' → logprob: -19.625123977661133
    9. '(d' → logprob: -20.250123977661133
    10. ' (' → logprob: -20.625123977661133

Token 828: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07242389768362045
    2. '           ' → logprob: -2.8224239349365234
    3. ')' → logprob: -4.572423934936523
    4. ')
' → logprob: -10.197423934936523
    5. '               ' → logprob: -10.947423934936523
    6. ')return' → logprob: -12.197423934936523
    7. '")
' → logprob: -12.822423934936523
    8. '       ' → logprob: -13.072423934936523
    9. '                   ' → logprob: -13.572423934936523
    10. '')
' → logprob: -13.947423934936523

Token 829: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.5451681974809617e-05
    2. '		' → logprob: -11.625015258789062
    3. '	       ' → logprob: -12.750015258789062
    4. '       ' → logprob: -13.250015258789062
    5. '               ' → logprob: -14.750015258789062
    6. '                   ' → logprob: -15.625015258789062
    7. '    	   ' → logprob: -15.625015258789062
    8. '		   ' → logprob: -15.750015258789062
    9. '<|end|>' → logprob: -15.875015258789062
    10. '    	' → logprob: -16.000015258789062

Token 830: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011068337596952915
    2. 'return' (adapté à ' return') → logprob: -4.511068344116211
    3. 'break' → logprob: -11.011068344116211
    4. ' return' → logprob: -12.511068344116211
    5. '		' → logprob: -15.261068344116211
    6. '               ' → logprob: -17.26106834411621
    7. '                   ' → logprob: -17.76106834411621
    8. '```' → logprob: -18.01106834411621
    9. '
' → logprob: -18.38606834411621
    10. ' break' → logprob: -18.88606834411621

Token 831: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.703443770878948e-06
    2. '        
' → logprob: -12.375007629394531
    3. 'for' → logprob: -13.000007629394531
    4. '```' → logprob: -14.375007629394531
    5. '<|end|>' → logprob: -16.12500762939453
    6. '   ' → logprob: -16.25000762939453
    7. '#' → logprob: -16.37500762939453
    8. '           ' → logprob: -16.50000762939453
    9. '	   ' → logprob: -17.25000762939453
    10. ' for' → logprob: -17.50000762939453

Token 832: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001431114797014743
    2. 'for' → logprob: -8.875143051147461
    3. '   ' → logprob: -13.375143051147461
    4. '        
' → logprob: -14.250143051147461
    5. ' for' → logprob: -14.625143051147461
    6. '```' → logprob: -14.750143051147461
    7. '           ' → logprob: -16.25014305114746
    8. '	for' → logprob: -17.50014305114746
    9. '	' → logprob: -18.00014305114746
    10. '	   ' → logprob: -18.12514305114746

Token 833: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08118688315153122
    2. 'for' → logprob: -2.5811867713928223
    3. ' for' → logprob: -6.081186771392822
    4. '```' → logprob: -12.58118724822998
    5. '	for' → logprob: -12.83118724822998
    6. '	' → logprob: -13.95618724822998
    7. '        
' → logprob: -13.95618724822998
    8. '   ' → logprob: -14.20618724822998
    9. '           ' → logprob: -15.95618724822998
    10. '​' → logprob: -16.206186294555664

Token 834: ' sinon' (ID: 52915)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000915039679966867
    2. '       ' → logprob: -7.000915050506592
    3. '#' → logprob: -13.000914573669434
    4. ' for' → logprob: -13.625914573669434
    5. '   ' → logprob: -17.25091552734375
    6. '	for' → logprob: -17.25091552734375
    7. '           ' → logprob: -20.50091552734375
    8. 'For' → logprob: -20.75091552734375
    9. '```' → logprob: -20.75091552734375
    10. '        
' → logprob: -21.25091552734375

Token 835: ' essayer' (ID: 92713)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029015323147177696
    2. 'for' → logprob: -4.02901554107666
    3. ' for' → logprob: -4.52901554107666
    4. '           ' → logprob: -11.65401554107666
    5. '   ' → logprob: -12.52901554107666
    6. '	for' → logprob: -13.52901554107666
    7. '        
' → logprob: -14.52901554107666
    8. '
' → logprob: -14.65401554107666
    9. '#' → logprob: -15.65401554107666
    10. '	' → logprob: -16.654014587402344

Token 836: ' toutes' (ID: 17502)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 837: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.06439858675003052
    2. ' les' → logprob: -2.9393985271453857
    3. '   ' → logprob: -5.064398765563965
    4. 'poss' → logprob: -6.564398765563965
    5. ' ' → logprob: -7.439398765563965
    6. '       ' → logprob: -7.814398765563965
    7. '#' → logprob: -8.314398765563965
    8. '_' → logprob: -9.689398765563965
    9. 'positions' → logprob: -9.814398765563965
    10. 'comb' → logprob: -9.814398765563965

Token 838: ' poses' (ID: 50899)
  Prédit: 'poss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'poss' → logprob: -0.9487557411193848
    2. 'positions' → logprob: -1.3237557411193848
    3. 'tam' → logprob: -1.6987557411193848
    4. 'st' → logprob: -2.4487557411193848
    5. 'pos' → logprob: -3.5737557411193848
    6. 'comb' → logprob: -3.9487557411193848
    7. 't' → logprob: -4.698755741119385
    8. 'poses' → logprob: -5.073755741119385
    9. 'pressions' → logprob: -6.073755741119385
    10. 'ta' → logprob: -6.198755741119385

Token 839: ' possibles' (ID: 97753)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012559447437524796
    2. 'for' → logprob: -5.387559413909912
    3. ':' → logprob: -6.512559413909912
    4. 'pour' → logprob: -6.637559413909912
    5. ' for' → logprob: -7.012559413909912
    6. ' pour' → logprob: -7.387559413909912
    7. '(st' → logprob: -7.512559413909912
    8. ',' → logprob: -7.762559413909912
    9. 'possible' → logprob: -8.01255989074707
    10. '(' → logprob: -8.01255989074707

Token 840: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008410204201936722
    2. ' for' → logprob: -4.8834099769592285
    3. 'for' → logprob: -7.1334099769592285
    4. '        
' → logprob: -12.883410453796387
    5. '           ' → logprob: -13.758410453796387
    6. ',' → logprob: -13.758410453796387
    7. '   ' → logprob: -15.008410453796387
    8. '	for' → logprob: -16.13340950012207
    9. ':' → logprob: -16.50840950012207
    10. '	' → logprob: -16.63340950012207

Token 841: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003208037815056741
    2. ' for' → logprob: -8.250320434570312
    3. 'for' → logprob: -9.750320434570312
    4. '           ' → logprob: -14.750320434570312
    5. '   ' → logprob: -15.250320434570312
    6. '<|end|>' → logprob: -15.750320434570312
    7. '        
' → logprob: -15.875320434570312
    8. '```' → logprob: -16.000320434570312
    9. '	' → logprob: -16.250320434570312
    10. ',' → logprob: -16.625320434570312

Token 842: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06248844042420387
    2. '       ' → logprob: -2.812488555908203
    3. ' for' → logprob: -7.562488555908203
    4. '	for' → logprob: -13.937488555908203
    5. '   ' → logprob: -15.562488555908203
    6. '```' → logprob: -17.687488555908203
    7. '	' → logprob: -17.937488555908203
    8. '        
' → logprob: -18.437488555908203
    9. '           ' → logprob: -18.812488555908203
    10. ' ' → logprob: -19.187488555908203

Token 843: ' (' (ID: 350)
  Prédit: 'stamp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stamp' → logprob: -0.5242992639541626
    2. 'h' → logprob: -1.1492992639541626
    3. '(h' → logprob: -2.899299144744873
    4. 'i' → logprob: -4.399299144744873
    5. '(st' → logprob: -4.649299144744873
    6. 'st' → logprob: -5.399299144744873
    7. 'color' → logprob: -5.774299144744873
    8. '(i' → logprob: -6.399299144744873
    9. ' stamp' → logprob: -6.399299144744873
    10. '   ' → logprob: -7.399299144744873

Token 844: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.256911039352417
    2. 'stamp' → logprob: -1.506911039352417
    3. '(h' → logprob: -5.381911277770996
    4. 'st' → logprob: -8.881911277770996
    5. '(st' → logprob: -9.006911277770996
    6. 'sh' → logprob: -9.881911277770996
    7. '_h' → logprob: -11.631911277770996
    8. '_stamp' → logprob: -12.006911277770996
    9. 'hh' → logprob: -12.256911277770996
    10. 'i' → logprob: -12.506911277770996

Token 845: ',w' (ID: 49598)
  Prédit: ',w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.43279486894607544
    2. ',' → logprob: -1.0577948093414307
    3. 'w' → logprob: -5.55779504776001
    4. ' ,' → logprob: -9.432794570922852
    5. ',
' → logprob: -9.807794570922852
    6. ')' → logprob: -10.807794570922852
    7. '),' → logprob: -10.807794570922852
    8. '
' → logprob: -11.432794570922852
    9. ',)' → logprob: -11.807794570922852
    10. '),(' → logprob: -11.932794570922852

Token 846: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004967728164047003
    2. '),' → logprob: -5.37996768951416
    3. '),(' → logprob: -8.25496768951416
    4. 'in' → logprob: -10.37996768951416
    5. ' )' → logprob: -10.62996768951416
    6. ',' → logprob: -11.12996768951416
    7. ')
' → logprob: -11.75496768951416
    8. ' ),' → logprob: -13.12996768951416
    9. '   ' → logprob: -13.12996768951416
    10. ',)' → logprob: -13.37996768951416

Token 847: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.44932007789611816
    2. ' in' → logprob: -1.0743200778961182
    3. ',' → logprob: -3.949320077896118
    4. ',h' → logprob: -6.949319839477539
    5. ',in' → logprob: -9.824319839477539
    6. '       ' → logprob: -10.324319839477539
    7. ' ,' → logprob: -10.449319839477539
    8. ',w' → logprob: -10.949319839477539
    9. '   ' → logprob: -11.324319839477539
    10. ',(' → logprob: -11.699319839477539

Token 848: ' stamps' (ID: 77190)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.00026217024424113333
    2. ' stamps' → logprob: -8.250262260437012
    3. '   ' → logprob: -14.250262260437012
    4. 'stamp' → logprob: -15.875262260437012
    5. 'sts' → logprob: -17.125261306762695
    6. '	st' → logprob: -17.750261306762695
    7. 'sticks' → logprob: -17.750261306762695
    8. 'stairs' → logprob: -17.875261306762695
    9. '(st' → logprob: -18.250261306762695
    10. 'stones' → logprob: -18.250261306762695

Token 849: ':
' (ID: 734)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 850: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6296862363815308
    2. '           ' → logprob: -1.1296862363815308
    3. ' for' → logprob: -2.1296863555908203
    4. '	       ' → logprob: -3.8796863555908203
    5. '   ' → logprob: -6.12968635559082
    6. '	   ' → logprob: -6.87968635559082
    7. 'for' → logprob: -7.87968635559082
    8. ',' → logprob: -8.25468635559082
    9. '	for' → logprob: -8.25468635559082
    10. '<|end|>' → logprob: -8.87968635559082

Token 851: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03846738487482071
    2. ' for' → logprob: -3.5384674072265625
    3. '       ' → logprob: -4.9134674072265625
    4. '           ' → logprob: -6.6634674072265625
    5. '	for' → logprob: -10.538467407226562
    6. '   ' → logprob: -10.538467407226562
    7. '               ' → logprob: -13.663467407226562
    8. '	       ' → logprob: -14.538467407226562
    9. ' ' → logprob: -15.038467407226562
    10. '	   ' → logprob: -16.288467407226562

Token 852: ' top' (ID: 2344)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 853: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3132772147655487
    2. ' in' → logprob: -1.313277244567871
    3. ',' → logprob: -11.938277244567871
    4. ')' → logprob: -12.063277244567871
    5. '0' → logprob: -14.063277244567871
    6. '   ' → logprob: -14.188277244567871
    7. '=' → logprob: -15.188277244567871
    8. ' ' → logprob: -15.188277244567871
    9. ',in' → logprob: -15.938277244567871
    10. '```' → logprob: -15.938277244567871

Token 854: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001584850688232109
    2. ' range' → logprob: -8.750158309936523
    3. '(range' → logprob: -17.875158309936523
    4. '0' → logprob: -18.625158309936523
    5. '	range' → logprob: -19.500158309936523
    6. '[' → logprob: -20.250158309936523
    7. '   ' → logprob: -21.875158309936523
    8. '[-' → logprob: -22.500158309936523
    9. '
' → logprob: -22.875158309936523
    10. ' ' → logprob: -23.125158309936523

Token 855: '(-' (ID: 8087)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28423401713371277
    2. '5' → logprob: -2.034234046936035
    3. '(-' → logprob: -2.284234046936035
    4. '-' → logprob: -4.409234046936035
    5. ' -' → logprob: -6.909234046936035
    6. ' ' → logprob: -7.284234046936035
    7. '0' → logprob: -7.534234046936035
    8. '4' → logprob: -8.034234046936035
    9. ' (' → logprob: -10.659234046936035
    10. '   ' → logprob: -10.784234046936035

Token 856: 'h' (ID: 71)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.0351879596710205
    2. 'w' → logprob: -1.0351879596710205
    3. 'h' → logprob: -1.6601879596710205
    4. '4' → logprob: -2.4101879596710205
    5. '(w' → logprob: -5.410187721252441
    6. '(h' → logprob: -6.285187721252441
    7. ' w' → logprob: -6.660187721252441
    8. '(' → logprob: -7.535187721252441
    9. ' h' → logprob: -7.785187721252441
    10. ' (' → logprob: -8.035187721252441

Token 857: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003831252979580313
    2. ' +' → logprob: -7.875382900238037
    3. '1' → logprob: -13.250383377075195
    4. '+
' → logprob: -14.000383377075195
    5. '2' → logprob: -16.500383377075195
    6. '[' → logprob: -16.750383377075195
    7. '4' → logprob: -16.750383377075195
    8. '+h' → logprob: -17.125383377075195
    9. '
' → logprob: -17.625383377075195
    10. '       ' → logprob: -17.625383377075195

Token 858: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -14.375001907348633
    3. 'h' → logprob: -14.625001907348633
    4. '0' → logprob: -14.875001907348633
    5. '2' → logprob: -15.625001907348633
    6. 'w' → logprob: -16.375001907348633
    7. '4' → logprob: -17.250001907348633
    8. '
' → logprob: -17.375001907348633
    9. '   ' → logprob: -17.750001907348633
    10. ')' → logprob: -18.375001907348633

Token 859: ',' (ID: 11)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 860: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.3870491683483124
    2. '5' → logprob: -1.1370491981506348
    3. ' ' → logprob: -8.637048721313477
    4. '
' → logprob: -15.387048721313477
    5. '   ' → logprob: -15.512048721313477
    6. ')' → logprob: -16.387048721313477
    7. '1' → logprob: -17.012048721313477
    8. '' → logprob: -17.387048721313477
    9. '(' → logprob: -17.512048721313477
    10. '	' → logprob: -18.137048721313477

Token 861: '4' (ID: 19)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.160243421792984
    2. '4' → logprob: -1.9102433919906616
    3. ' ' → logprob: -11.035243034362793
    4. 'w' → logprob: -12.785243034362793
    5. '(' → logprob: -15.535243034362793
    6. '   ' → logprob: -16.78524398803711
    7. 'max' → logprob: -18.16024398803711
    8. 'h' → logprob: -18.28524398803711
    9. '+' → logprob: -18.34774398803711
    10. '
' → logprob: -18.66024398803711

Token 862: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0508127436041832
    2. '+' → logprob: -3.4258127212524414
    3. '):' → logprob: -4.175812721252441
    4. '4' → logprob: -7.425812721252441
    5. ' +' → logprob: -8.175812721252441
    6. '       ' → logprob: -8.300812721252441
    7. '           ' → logprob: -9.050812721252441
    8. ',' → logprob: -9.425812721252441
    9. '               ' → logprob: -10.050812721252441
    10. '   ' → logprob: -10.175812721252441

Token 863: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.036214783787727356
    2. '	           ' → logprob: -3.661214828491211
    3. '		       ' → logprob: -5.536214828491211
    4. '	       ' → logprob: -6.536214828491211
    5. ' for' → logprob: -6.661214828491211
    6. '			' → logprob: -6.786214828491211
    7. '	            ' → logprob: -7.411214828491211
    8. '	        ' → logprob: -8.286214828491211
    9. '			   ' → logprob: -8.786214828491211
    10. '            ' → logprob: -8.786214828491211

Token 864: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.39459025859832764
    2. '               ' → logprob: -1.5195902585983276
    3. ' for' → logprob: -2.269590377807617
    4. '                   ' → logprob: -6.644590377807617
    5. 'top' → logprob: -7.019590377807617
    6. '                ' → logprob: -7.519590377807617
    7. '           ' → logprob: -7.894590377807617
    8. '            ' → logprob: -8.644590377807617
    9. 'left' → logprob: -9.144590377807617
    10. '              ' → logprob: -9.269590377807617

Token 865: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0002614550176076591
    2. ' left' → logprob: -8.250261306762695
    3. '	left' → logprob: -16.750261306762695
    4. '   ' → logprob: -17.000261306762695
    5. '(left' → logprob: -17.125261306762695
    6. 'top' → logprob: -17.625261306762695
    7. ' ' → logprob: -17.750261306762695
    8. 'bottom' → logprob: -18.750261306762695
    9. 'w' → logprob: -19.750261306762695
    10. ' lef' → logprob: -20.250261306762695

Token 866: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043016545474529266
    2. 'in' → logprob: -3.1680164337158203
    3. '	in' → logprob: -11.54301643371582
    4. ' ' → logprob: -13.41801643371582
    5. '_in' → logprob: -13.41801643371582
    6. ')' → logprob: -14.04301643371582
    7. '                ' → logprob: -14.54301643371582
    8. 'In' → logprob: -14.66801643371582
    9. '<|end|>' → logprob: -14.66801643371582
    10. ' i' → logprob: -15.41801643371582

Token 867: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.000553151941858232
    2. ' range' → logprob: -7.500553131103516
    3. '(range' → logprob: -16.375553131103516
    4. '	range' → logprob: -17.750553131103516
    5. '(-' → logprob: -19.125553131103516
    6. '```' → logprob: -20.250553131103516
    7. '   ' → logprob: -20.375553131103516
    8. '[-' → logprob: -20.625553131103516
    9. '.range' → logprob: -20.750553131103516
    10. '_range' → logprob: -20.875553131103516

Token 868: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.005324597004801035
    2. '-' → logprob: -5.255324363708496
    3. '(' → logprob: -9.380324363708496
    4. '4' → logprob: -12.505324363708496
    5. ' -' → logprob: -13.380324363708496
    6. '0' → logprob: -14.130324363708496
    7. '   ' → logprob: -16.005325317382812
    8. '-(' → logprob: -16.255325317382812
    9. ' (-' → logprob: -16.755325317382812
    10. '               ' → logprob: -16.880325317382812

Token 869: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.5451681974809617e-05
    2. '(w' → logprob: -11.625015258789062
    3. ' w' → logprob: -12.375015258789062
    4. '<w' → logprob: -14.375015258789062
    5. '   ' → logprob: -14.500015258789062
    6. '
' → logprob: -14.875015258789062
    7. 'h' → logprob: -16.250015258789062
    8. '(' → logprob: -16.250015258789062
    9. '[w' → logprob: -16.375015258789062
    10. '	w' → logprob: -16.500015258789062

Token 870: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.786196975852363e-05
    2. '1' → logprob: -11.000038146972656
    3. ' +' → logprob: -11.250038146972656
    4. '()+' → logprob: -12.250038146972656
    5. '+w' → logprob: -13.125038146972656
    6. '0' → logprob: -14.625038146972656
    7. 'w' → logprob: -14.875038146972656
    8. '(' → logprob: -15.625038146972656
    9. ')+' → logprob: -16.250038146972656
    10. '   ' → logprob: -16.625038146972656

Token 871: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1135590672492981
    2. 'w' → logprob: -2.2385590076446533
    3. 'h' → logprob: -8.113558769226074
    4. '(w' → logprob: -8.238558769226074
    5. '0' → logprob: -10.363558769226074
    6. '+' → logprob: -10.488558769226074
    7. '(' → logprob: -10.488558769226074
    8. ' ' → logprob: -10.738558769226074
    9. '(h' → logprob: -10.988558769226074
    10. ' w' → logprob: -10.988558769226074

Token 872: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021382442209869623
    2. '(' → logprob: -6.502138137817383
    3. ' ,' → logprob: -7.502138137817383
    4. '(),' → logprob: -10.002138137817383
    5. '               ' → logprob: -11.002138137817383
    6. '           ' → logprob: -12.377138137817383
    7. '4' → logprob: -12.502138137817383
    8. '                   ' → logprob: -12.752138137817383
    9. '   ' → logprob: -13.127138137817383
    10. '0' → logprob: -13.377138137817383

Token 873: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -8.113290095934644e-05
    2. ' ' → logprob: -9.500081062316895
    3. '5' → logprob: -12.000081062316895
    4. '   ' → logprob: -16.37508201599121
    5. '           ' → logprob: -19.37508201599121
    6. '       ' → logprob: -19.37508201599121
    7. 'for' → logprob: -19.50008201599121
    8. '               ' → logprob: -19.87508201599121
    9. '    ' → logprob: -19.87508201599121
    10. '```' → logprob: -20.37508201599121

Token 874: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '۴' → logprob: -19.625001907348633
    4. '   ' → logprob: -20.250001907348633
    5. '４' → logprob: -20.875001907348633
    6. '' → logprob: -21.625001907348633
    7. '৪' → logprob: -21.875001907348633
    8. '٤' → logprob: -21.937501907348633
    9. 'for' → logprob: -22.062501907348633
    10. '```' → logprob: -22.250001907348633

Token 875: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10528460890054703
    2. '):' → logprob: -2.4802846908569336
    3. '                   ' → logprob: -4.480284690856934
    4. '               ' → logprob: -5.730284690856934
    5. ':' → logprob: -7.480284690856934
    6. '           ' → logprob: -7.855284690856934
    7. ':
' → logprob: -8.730284690856934
    8. '                       ' → logprob: -8.980284690856934
    9. '):
' → logprob: -9.480284690856934
    10. ''):
' → logprob: -9.605284690856934

Token 876: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.017077885568141937
    2. '               ' → logprob: -4.267077922821045
    3. ' for' → logprob: -6.642077922821045
    4. '                       ' → logprob: -7.392077922821045
    5. '	               ' → logprob: -8.517077445983887
    6. '                           ' → logprob: -8.642077445983887
    7. '                ' → logprob: -8.892077445983887
    8. '		           ' → logprob: -9.142077445983887
    9. '			       ' → logprob: -9.517077445983887
    10. '                               ' → logprob: -9.767077445983887

Token 877: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.021755386143922806
    2. '                       ' → logprob: -4.271755218505859
    3. ' for' → logprob: -4.896755218505859
    4. '                   ' → logprob: -9.64675521850586
    5. '   ' → logprob: -11.52175521850586
    6. '	for' → logprob: -12.39675521850586
    7. '       ' → logprob: -12.52175521850586
    8. '           ' → logprob: -12.89675521850586
    9. '                           ' → logprob: -13.02175521850586
    10. '               ' → logprob: -13.14675521850586

Token 878: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.14300759136676788
    2. ' color' → logprob: -2.018007516860962
    3. 'c' → logprob: -8.143007278442383
    4. ' c' → logprob: -10.768007278442383
    5. 'col' → logprob: -11.268007278442383
    6. '	color' → logprob: -12.768007278442383
    7. '   ' → logprob: -13.518007278442383
    8. ' ' → logprob: -14.018007278442383
    9. ' col' → logprob: -14.768007278442383
    10. ' couleur' → logprob: -14.768007278442383

Token 879: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17978635430335999
    2. 'in' → logprob: -1.8047863245010376
    3. ' ' → logprob: -10.679786682128906
    4. '[' → logprob: -12.179786682128906
    5. '<|end|>' → logprob: -12.179786682128906
    6. '<|end|>' → logprob: -13.304786682128906
    7. '	in' → logprob: -13.554786682128906
    8. ')' → logprob: -14.554786682128906
    9. '[
' → logprob: -15.054786682128906
    10. '_in' → logprob: -15.054786682128906

Token 880: ' colors' (ID: 10803)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.008617527782917023
    2. ' colors' → logprob: -4.758617401123047
    3. '['' → logprob: -12.883617401123047
    4. '(colors' → logprob: -15.133617401123047
    5. 'color' → logprob: -16.633617401123047
    6. '.colors' → logprob: -17.008617401123047
    7. ' ['' → logprob: -17.258617401123047
    8. '_colors' → logprob: -19.758617401123047
    9. '('' → logprob: -19.883617401123047
    10. ' ' → logprob: -20.258617401123047

Token 881: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016803979873657227
    2. ':
' → logprob: -4.141803741455078
    3. '                       ' → logprob: -8.016803741455078
    4. ' :' → logprob: -8.641803741455078
    5. '                   ' → logprob: -9.641803741455078
    6. ',' → logprob: -9.891803741455078
    7. '<|end|>' → logprob: -10.141803741455078
    8. '):
' → logprob: -10.891803741455078
    9. '):' → logprob: -11.141803741455078
    10. ' :
' → logprob: -11.266803741455078

Token 882: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0008570278296247125
    2. ' new' → logprob: -8.00085735321045
    3. '                        
' → logprob: -8.12585735321045
    4. '                        ' → logprob: -9.37585735321045
    5. 'new' → logprob: -10.00085735321045
    6. '                           ' → logprob: -11.00085735321045
    7. ')' → logprob: -11.87585735321045
    8. '       ' → logprob: -12.00085735321045
    9. '```' → logprob: -12.00085735321045
    10. '#' → logprob: -12.12585735321045

Token 883: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.0007398230955004692
    2. 'next' → logprob: -7.250740051269531
    3. ' new' → logprob: -10.500740051269531
    4. '                       ' → logprob: -14.250740051269531
    5. '                           ' → logprob: -14.375740051269531
    6. '           ' → logprob: -15.000740051269531
    7. '                               ' → logprob: -15.000740051269531
    8. 'n' → logprob: -15.125740051269531
    9. '   ' → logprob: -16.50074005126953
    10. '               ' → logprob: -16.75074005126953

Token 884: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.00020830852736253291
    2. 'state' → logprob: -8.750207901000977
    3. '_' → logprob: -10.000207901000977
    4. '_token' → logprob: -13.125207901000977
    5. '_states' → logprob: -14.125207901000977
    6. 'State' → logprob: -14.375207901000977
    7. '_code' → logprob: -15.500207901000977
    8. '_s' → logprob: -15.875207901000977
    9. '_estado' → logprob: -16.000207901000977
    10. '_STATE' → logprob: -16.375207901000977

Token 885: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931471824645996
    2. ' =' → logprob: -0.6931471824645996
    3. ')' → logprob: -16.693147659301758
    4. '＝' → logprob: -17.443147659301758
    5. '=create' → logprob: -17.693147659301758
    6. ')=' → logprob: -18.193147659301758
    7. ' =)' → logprob: -18.318147659301758
    8. '=
' → logprob: -18.318147659301758
    9. ' =
' → logprob: -18.818147659301758
    10. '	' → logprob: -19.568147659301758

Token 886: ' apply' (ID: 6096)
  Prédit: 'apply'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apply' → logprob: -0.00020354038861114532
    2. ' apply' → logprob: -8.500203132629395
    3. '.apply' → logprob: -18.00020408630371
    4. 'app' → logprob: -18.62520408630371
    5. '   ' → logprob: -19.12520408630371
    6. '_apply' → logprob: -20.62520408630371
    7. 'application' → logprob: -21.00020408630371
    8. '           ' → logprob: -21.62520408630371
    9. ' ' → logprob: -21.75020408630371
    10. '       ' → logprob: -22.00020408630371

Token 887: '_stamp' (ID: 136990)
  Prédit: '_stamp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stamp' → logprob: -1.2352385965641588e-05
    2. '```' → logprob: -12.500012397766113
    3. 'stamp' → logprob: -12.750012397766113
    4. '_' → logprob: -13.250012397766113
    5. '_sta' → logprob: -14.125012397766113
    6. ' _' → logprob: -14.500012397766113
    7. '_timestamp' → logprob: -15.000012397766113
    8. '_state' → logprob: -15.125012397766113
    9. 'state' → logprob: -15.250012397766113
    10. '\' → logprob: -15.875012397766113

Token 888: '(state' (ID: 16114)
  Prédit: '(state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(state' → logprob: -2.558399319241289e-05
    2. ',state' → logprob: -11.500025749206543
    3. 'state' → logprob: -11.875025749206543
    4. '(st' → logprob: -12.500025749206543
    5. '(' → logprob: -12.500025749206543
    6. '[state' → logprob: -14.625025749206543
    7. ' (' → logprob: -14.875025749206543
    8. '(
' → logprob: -15.625025749206543
    9. ' state' → logprob: -17.000024795532227
    10. '(status' → logprob: -17.250024795532227

Token 889: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03817793354392052
    2. ',h' → logprob: -3.288177967071533
    3. ',s' → logprob: -9.663177490234375
    4. ' ,' → logprob: -10.413177490234375
    5. ',n' → logprob: -12.038177490234375
    6. ',w' → logprob: -12.163177490234375
    7. ',(' → logprob: -12.538177490234375
    8. '                           ' → logprob: -12.663177490234375
    9. ',p' → logprob: -12.788177490234375
    10. ',state' → logprob: -12.913177490234375

Token 890: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -6.682846287731081e-05
    2. ' h' → logprob: -9.625066757202148
    3. '(h' → logprob: -14.750066757202148
    4. '_h' → logprob: -16.62506675720215
    5. '[h' → logprob: -16.87506675720215
    6. '	h' → logprob: -17.25006675720215
    7. ',h' → logprob: -17.37506675720215
    8. '<|end|>' → logprob: -17.50006675720215
    9. '<h' → logprob: -17.62506675720215
    10. 'H' → logprob: -18.62506675720215

Token 891: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2520018219947815
    2. ',w' → logprob: -1.5020017623901367
    3. ' ,' → logprob: -9.877001762390137
    4. 'w' → logprob: -11.627001762390137
    5. ',width' → logprob: -12.752001762390137
    6. ')' → logprob: -13.752001762390137
    7. '<|end|>' → logprob: -14.002001762390137
    8. ',h' → logprob: -14.127001762390137
    9. ',
' → logprob: -14.377001762390137
    10. ',s' → logprob: -14.377001762390137

Token 892: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -2.696889623621246e-06
    2. ' w' → logprob: -12.87500286102295
    3. '                               ' → logprob: -17.250001907348633
    4. '                           ' → logprob: -18.250001907348633
    5. '<|end|>' → logprob: -18.250001907348633
    6. '                                ' → logprob: -20.000001907348633
    7. '	w' → logprob: -20.000001907348633
    8. '                                   ' → logprob: -20.625001907348633
    9. ',w' → logprob: -21.125001907348633
    10. '   ' → logprob: -21.125001907348633

Token 893: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.6789137084269896e-05
    2. ' ,' → logprob: -10.37503719329834
    3. ',t' → logprob: -14.00003719329834
    4. '                           ' → logprob: -14.12503719329834
    5. '                               ' → logprob: -14.12503719329834
    6. 'top' → logprob: -14.75003719329834
    7. '                       ' → logprob: -14.87503719329834
    8. '[top' → logprob: -14.87503719329834
    9. ',next' → logprob: -15.75003719329834
    10. '                   ' → logprob: -15.87503719329834

Token 894: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -1.306760805164231e-05
    2. ' top' → logprob: -11.25001335144043
    3. '	top' → logprob: -20.62501335144043
    4. 't' → logprob: -22.12501335144043
    5. '[top' → logprob: -22.25001335144043
    6. '   ' → logprob: -22.37501335144043
    7. '(top' → logprob: -23.00001335144043
    8. '_top' → logprob: -23.62501335144043
    9. '
' → logprob: -23.87501335144043
    10. 'Top' → logprob: -23.87501335144043

Token 895: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008035530336201191
    2. ',left' → logprob: -7.375803470611572
    3. ' ,' → logprob: -9.00080394744873
    4. '                           ' → logprob: -11.25080394744873
    5. '                       ' → logprob: -11.62580394744873
    6. '                               ' → logprob: -12.00080394744873
    7. '					' → logprob: -12.12580394744873
    8. '						' → logprob: -12.50080394744873
    9. '							' → logprob: -13.50080394744873
    10. '                   ' → logprob: -13.75080394744873

Token 896: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -3.547789674485102e-05
    2. ' left' → logprob: -10.250035285949707
    3. '	left' → logprob: -20.125036239624023
    4. '[left' → logprob: -20.875036239624023
    5. '   ' → logprob: -21.000036239624023
    6. '           ' → logprob: -22.125036239624023
    7. '(left' → logprob: -22.250036239624023
    8. '       ' → logprob: -22.625036239624023
    9. ' ' → logprob: -22.625036239624023
    10. 'Left' → logprob: -22.750036239624023

Token 897: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014004756230860949
    2. ',color' → logprob: -6.626400470733643
    3. ' ,' → logprob: -9.6264009475708
    4. '                       ' → logprob: -12.1264009475708
    5. '                        ' → logprob: -14.2514009475708
    6. '                           ' → logprob: -14.8764009475708
    7. '',' → logprob: -15.1264009475708
    8. 'color' → logprob: -15.1264009475708
    9. '`,' → logprob: -15.2514009475708
    10. '                               ' → logprob: -15.6264009475708

Token 898: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.001170225441455841
    2. ' color' → logprob: -6.7511701583862305
    3. '	color' → logprob: -20.126171112060547
    4. '(color' → logprob: -20.126171112060547
    5. '=color' → logprob: -20.501171112060547
    6. '[color' → logprob: -20.501171112060547
    7. 'c' → logprob: -20.626171112060547
    8. '                       ' → logprob: -20.751171112060547
    9. ')' → logprob: -20.876171112060547
    10. '                   ' → logprob: -22.376171112060547

Token 899: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6046763062477112
    2. ')' → logprob: -1.1046762466430664
    3. '                       ' → logprob: -2.1046762466430664
    4. ')
' → logprob: -7.729676246643066
    5. '):
' → logprob: -10.354676246643066
    6. '                        
' → logprob: -10.854676246643066
    7. '                   ' → logprob: -11.979676246643066
    8. '                        ' → logprob: -12.104676246643066
    9. ')`
' → logprob: -12.104676246643066
    10. '                           ' → logprob: -12.229676246643066

Token 900: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.011100166477262974
    2. ' if' → logprob: -5.2611002922058105
    3. '```' → logprob: -5.7611002922058105
    4. '                        
' → logprob: -6.7611002922058105
    5. 'if' → logprob: -6.8861002922058105
    6. '<|end|>' → logprob: -8.511099815368652
    7. '                        ' → logprob: -9.511099815368652
    8. '                           ' → logprob: -9.886099815368652
    9. '               ' → logprob: -10.136099815368652
    10. '``' → logprob: -10.136099815368652

Token 901: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0003839597338810563
    2. '                       ' → logprob: -8.500384330749512
    3. ' if' → logprob: -8.625384330749512
    4. '                        
' → logprob: -14.500384330749512
    5. '#' (adapté à ' #') → logprob: -15.375384330749512
    6. 'key' → logprob: -16.625383377075195
    7. '                           ' → logprob: -17.750383377075195
    8. '```' → logprob: -17.750383377075195
    9. '                   ' → logprob: -17.875383377075195
    10. '                        ' → logprob: -18.125383377075195

Token 902: ' Pr' (ID: 2284)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0004764287732541561
    2. ' if' → logprob: -7.750476360321045
    3. '                       ' → logprob: -10.000476837158203
    4. '                        
' → logprob: -15.875476837158203
    5. '```' → logprob: -16.375476837158203
    6. '                           ' → logprob: -17.750476837158203
    7. 'If' → logprob: -18.000476837158203
    8. '#' → logprob: -18.375476837158203
    9. '                        ' → logprob: -18.500476837158203
    10. ' ' → logprob: -18.875476837158203

Token 903: 'uning' (ID: 30541)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.957751989364624
    2. 'int' → logprob: -1.582751989364624
    3. 'e' → logprob: -1.707751989364624
    4. 'if' → logprob: -2.207751989364624
    5. '#' → logprob: -3.332751989364624
    6. 'ez' → logprob: -4.457752227783203
    7. 'ev' → logprob: -4.457752227783203
    8. 'ed' → logprob: -4.707752227783203
    9. 'es' → logprob: -4.832752227783203
    10. 'od' → logprob: -5.457752227783203

Token 904: ' rapide' (ID: 44887)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0068507008254528046
    2. 'if' → logprob: -5.631850719451904
    3. ' if' → logprob: -6.131850719451904
    4. '                        
' → logprob: -7.006850719451904
    5. '
' → logprob: -10.256850242614746
    6. '                        ' → logprob: -10.256850242614746
    7. '					' → logprob: -11.131850242614746
    8. '                           ' → logprob: -11.631850242614746
    9. ':' → logprob: -11.756850242614746
    10. ',' → logprob: -11.756850242614746

Token 905: ':' (ID: 25)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.008667871356010437
    2. '                        
' → logprob: -5.383667945861816
    3. ' if' → logprob: -5.758667945861816
    4. 'if' → logprob: -7.633667945861816
    5. '                        ' → logprob: -8.883667945861816
    6. ':' → logprob: -10.383667945861816
    7. '
' → logprob: -10.383667945861816
    8. ',' → logprob: -10.508667945861816
    9. '					' → logprob: -10.633667945861816
    10. '                           ' → logprob: -10.633667945861816

Token 906: ' on' (ID: 402)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.6045299172401428
    2. ' if' → logprob: -1.104529857635498
    3. 'if' → logprob: -2.104529857635498
    4. '                        
' → logprob: -8.979530334472656
    5. '                        ' → logprob: -9.229530334472656
    6. '<|end|>' → logprob: -9.604530334472656
    7. '                           ' → logprob: -9.854530334472656
    8. ')' → logprob: -10.729530334472656
    9. '```' → logprob: -11.979530334472656
    10. '                        
' → logprob: -12.479530334472656

Token 907: ' ne' (ID: 453)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.011374239809811115
    2. ' if' → logprob: -5.261374473571777
    3. '                       ' → logprob: -7.386374473571777
    4. 'contin' → logprob: -7.511374473571777
    5. 'continue' → logprob: -7.761374473571777
    6. 'for' → logprob: -7.886374473571777
    7. '           ' → logprob: -7.886374473571777
    8. 'n' → logprob: -7.886374473571777
    9. 'already' → logprob: -8.136374473571777
    10. '#' → logprob: -8.386374473571777

Token 908: ' garde' (ID: 65309)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.6956132054328918
    2. 'if' → logprob: -1.195613145828247
    3. 'continue' → logprob: -2.070613145828247
    4. 'skip' → logprob: -3.695613145828247
    5. 'aj' → logprob: -4.945613384246826
    6. 'ignore' → logprob: -5.570613384246826
    7. 'veux' → logprob: -5.570613384246826
    8. 'contin' → logprob: -5.695613384246826
    9. 'check' → logprob: -5.945613384246826
    10. 's' → logprob: -6.195613384246826

Token 909: ' que' (ID: 661)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.8182545900344849
    2. '                       ' → logprob: -1.3182545900344849
    3. ' que' → logprob: -1.8182545900344849
    4. ' pas' → logprob: -2.1932544708251953
    5. 'que' → logprob: -4.818254470825195
    6. '                           ' → logprob: -6.568254470825195
    7. '                        ' → logprob: -6.693254470825195
    8. 'if' → logprob: -7.193254470825195
    9. '                      ' → logprob: -7.443254470825195
    10. 'new' → logprob: -7.943254470825195

Token 910: ' les' (ID: 1341)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.07374680787324905
    2. 'if' → logprob: -3.073746919631958
    3. ' new' → logprob: -4.198746681213379
    4. 'visited' → logprob: -5.573746681213379
    5. '                       ' → logprob: -6.198746681213379
    6. ' if' → logprob: -6.948746681213379
    7. 'not' → logprob: -7.073746681213379
    8. '                           ' → logprob: -7.698746681213379
    9. '
' → logprob: -7.823746681213379
    10. '                        
' → logprob: -7.948746681213379

Token 911: ' états' (ID: 184259)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.058699771761894226
    2. 'states' → logprob: -3.9336998462677
    3. 'ét' → logprob: -4.308699607849121
    4. 'nou' → logprob: -4.433699607849121
    5. 'visited' → logprob: -5.683699607849121
    6. 'cases' → logprob: -5.808699607849121
    7. ' états' → logprob: -6.808699607849121
    8. ' nouveaux' → logprob: -7.058699607849121
    9. 'n' → logprob: -7.058699607849121
    10. 'if' → logprob: -8.308699607849121

Token 912: ' qui' (ID: 2780)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6077457666397095
    2. 'if' → logprob: -0.9827457666397095
    3. 'si' → logprob: -3.60774564743042
    4. ' si' → logprob: -4.10774564743042
    5. 'diff' → logprob: -4.35774564743042
    6. '                       ' → logprob: -4.60774564743042
    7. ' qui' → logprob: -4.98274564743042
    8. '                           ' → logprob: -5.85774564743042
    9. '                        ' → logprob: -6.60774564743042
    10. 'qui' → logprob: -7.48274564743042

Token 913: ' sont' (ID: 5242)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.8435606360435486
    2. '!=' → logprob: -1.4685606956481934
    3. 'new' → logprob: -2.2185606956481934
    4. 'im' → logprob: -3.0935606956481934
    5. 'not' → logprob: -4.093560695648193
    6. ' !=' → logprob: -4.218560695648193
    7. 'ne' → logprob: -4.343560695648193
    8. 'have' → logprob: -4.468560695648193
    9. 'neq' → logprob: -4.718560695648193
    10. '
' → logprob: -4.718560695648193

Token 914: ' un' (ID: 537)
  Prédit: 'compatible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compatible' → logprob: -0.8198333978652954
    2. 'pot' → logprob: -1.1948333978652954
    3. 'plus' → logprob: -2.819833278656006
    4. 'au' → logprob: -3.444833278656006
    5. 'compat' → logprob: -3.444833278656006
    6. 'correct' → logprob: -3.819833278656006
    7. 'me' → logprob: -4.319833278656006
    8. 'consistent' → logprob: -4.444833278656006
    9. 'co' → logprob: -4.569833278656006
    10. 'cons' → logprob: -4.694833278656006

Token 915: ' "' (ID: 392)
  Prédit: 'compatible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compatible' → logprob: -0.8529515862464905
    2. 'new' → logprob: -2.6029515266418457
    3. 'tuple' → logprob: -2.6029515266418457
    4. 'm' → logprob: -2.7279515266418457
    5. 'better' → logprob: -2.7279515266418457
    6. 'ou' → logprob: -2.7279515266418457
    7. 'subset' → logprob: -2.9779515266418457
    8. 'or' → logprob: -3.2279515266418457
    9. 'any' → logprob: -3.6029515266418457
    10. 'nou' → logprob: -4.852951526641846

Token 916: 'pro' (ID: 823)
  Prédit: 'pro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -1.1784956455230713
    2. 'am' → logprob: -1.4284956455230713
    3. 'pas' → logprob: -1.6784956455230713
    4. 'progress' → logprob: -2.5534956455230713
    5. 's' → logprob: -2.8034956455230713
    6. 'amel' → logprob: -3.5534956455230713
    7. 'av' → logprob: -4.053495407104492
    8. 'compatible' → logprob: -4.178495407104492
    9. 'prox' → logprob: -4.928495407104492
    10. 'possible' → logprob: -4.928495407104492

Token 917: 'gr' (ID: 896)
  Prédit: 'gr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.7339189052581787
    2. 'gress' → logprob: -1.4839189052581787
    3. 'per' → logprob: -2.2339189052581787
    4. 'gram' → logprob: -2.8589189052581787
    5. 'pre' → logprob: -2.9839189052581787
    6. 'long' → logprob: -4.108919143676758
    7. 'duit' → logprob: -4.858919143676758
    8. 'fit' → logprob: -4.983919143676758
    9. 'f' → logprob: -5.108919143676758
    10. 'gre' → logprob: -5.233919143676758

Token 918: 'ès' (ID: 4119)
  Prédit: 'ress'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ress' → logprob: -0.6456300020217896
    2. 'ess' → logprob: -0.7706300020217896
    3. 'res' → logprob: -5.7706298828125
    4. 'ression' → logprob: -5.7706298828125
    5. 'ession' → logprob: -5.8956298828125
    6. 'new' → logprob: -6.6456298828125
    7. 'ressive' → logprob: -7.1456298828125
    8. 'resse' → logprob: -8.1456298828125
    9. 'essing' → logprob: -8.2706298828125
    10. 'ès' → logprob: -8.3956298828125

Token 919: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.1682257652282715
    2. 's' → logprob: -1.1682257652282715
    3. '                       ' → logprob: -1.7932257652282715
    4. 'nt' → logprob: -2.2932257652282715
    5. ')' → logprob: -4.7932257652282715
    6. ' "' → logprob: -4.9182257652282715
    7. '                   ' → logprob: -4.9182257652282715
    8. '                           ' → logprob: -5.0432257652282715
    9. ' if' → logprob: -5.0432257652282715
    10. ' vers' → logprob: -5.1682257652282715

Token 920: ' vers' (ID: 3640)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.15878432989120483
    2. ' if' → logprob: -2.1587843894958496
    3. 'if' → logprob: -3.9087843894958496
    4. '                           ' → logprob: -5.03378438949585
    5. '                   ' → logprob: -7.03378438949585
    6. '                        ' → logprob: -7.03378438949585
    7. ' and' → logprob: -8.033783912658691
    8. ':' → logprob: -8.033783912658691
    9. '                      ' → logprob: -8.033783912658691
    10. ',' → logprob: -8.408783912658691

Token 921: ' la' (ID: 557)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.004061897750943899
    2. 'la' → logprob: -5.754061698913574
    3. 'state' → logprob: -7.754061698913574
    4. 'the' → logprob: -8.629061698913574
    5. ' target' → logprob: -9.254061698913574
    6. 'le' → logprob: -9.254061698913574
    7. 'l' → logprob: -9.879061698913574
    8. ' cible' → logprob: -11.754061698913574
    9. ' la' → logprob: -11.879061698913574
    10. '(target' → logprob: -12.004061698913574

Token 922: ' cible' (ID: 136857)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.0008801387157291174
    2. 'c' → logprob: -7.625880241394043
    3. ' target' → logprob: -9.000880241394043
    4. 'tuple' → logprob: -9.750880241394043
    5. 't' → logprob: -10.125880241394043
    6. 'final' → logprob: -10.500880241394043
    7. '
' → logprob: -10.500880241394043
    8. ' cible' → logprob: -10.500880241394043
    9. 'goal' → logprob: -10.625880241394043
    10. 'objectif' → logprob: -11.000880241394043

Token 923: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.029233114793896675
    2. '                        
' → logprob: -4.279232978820801
    3. ' if' → logprob: -5.029232978820801
    4. 'if' → logprob: -5.654232978820801
    5. '                           ' → logprob: -6.654232978820801
    6. '                        ' → logprob: -7.029232978820801
    7. ',' → logprob: -7.279232978820801
    8. '                            
' → logprob: -7.779232978820801
    9. '```' → logprob: -8.0292329788208
    10. '
' → logprob: -8.5292329788208

Token 924: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0002831464516930282
    2. '                        
' → logprob: -9.125283241271973
    3. '                        ' → logprob: -9.875283241271973
    4. ' if' → logprob: -10.625283241271973
    5. '					' → logprob: -10.750283241271973
    6. '               ' → logprob: -11.625283241271973
    7. 'if' → logprob: -11.750283241271973
    8. '                      ' → logprob: -11.750283241271973
    9. '                           ' → logprob: -11.750283241271973
    10. ',' → logprob: -12.000283241271973

Token 925: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7095576524734497
    2. '                       ' → logprob: -0.7095576524734497
    3. ' if' → logprob: -4.20955753326416
    4. '                        
' → logprob: -7.33455753326416
    5. 'for' → logprob: -8.45955753326416
    6. 'keep' → logprob: -9.45955753326416
    7. '#' (adapté à ' #') → logprob: -9.45955753326416
    8. 'diff' → logprob: -9.83455753326416
    9. 'skip' → logprob: -9.83455753326416
    10. 'is' → logprob: -10.20955753326416

Token 926: ' C' (ID: 363)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06056481972336769
    2. '                       ' → logprob: -3.5605647563934326
    3. ' if' → logprob: -3.5605647563934326
    4. 'match' → logprob: -7.185564994812012
    5. 'valid' → logprob: -8.060564994812012
    6. '#' → logprob: -8.310564994812012
    7. 'compatible' → logprob: -9.060564994812012
    8. 'for' → logprob: -9.310564994812012
    9. 'matches' → logprob: -9.685564994812012
    10. 'keep' → logprob: -9.935564994812012

Token 927: ''est' (ID: 6616)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7064159512519836
    2. 'urrent' → logprob: -2.206415891647339
    3. 'om' → logprob: -2.456415891647339
    4. 'for' → logprob: -2.706415891647339
    5. '                       ' → logprob: -2.956415891647339
    6. 'ont' → logprob: -3.081415891647339
    7. 'ar' → logprob: -3.956415891647339
    8. 'ount' → logprob: -4.081416130065918
    9. ''est' → logprob: -4.206416130065918
    10. 'ell' → logprob: -4.706416130065918

Token 928: ' délic' (ID: 73994)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.11911840736865997
    2. 'any' → logprob: -2.7441184520721436
    3. 'sum' → logprob: -3.9941184520721436
    4. ' all' → logprob: -4.2441182136535645
    5. 'True' → logprob: -5.6191182136535645
    6. '   ' → logprob: -5.9941182136535645
    7. 'state' → logprob: -6.4941182136535645
    8. 'not' → logprob: -6.4941182136535645
    9. 'False' → logprob: -6.4941182136535645
    10. ' any' → logprob: -7.2441182136535645

Token 929: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -3.523948907968588e-05
    2. 'ate' → logprob: -10.750035285949707
    3. 'ats' → logprob: -12.250035285949707
    4. 'atement' → logprob: -12.875035285949707
    5. 'ieux' → logprob: -13.000035285949707
    6. '```' → logprob: -13.750035285949707
    7. 'ât' → logprob: -14.625035285949707
    8. 'ат' → logprob: -14.750035285949707
    9. ' at' → logprob: -14.875035285949707
    10. 't' → logprob: -14.875035285949707

Token 930: ',' (ID: 11)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.016894236207008362
    2. '                        
' → logprob: -4.891894340515137
    3. 'if' → logprob: -6.016894340515137
    4. ',' → logprob: -6.391894340515137
    5. ':' → logprob: -6.641894340515137
    6. ' if' → logprob: -6.891894340515137
    7. '#' → logprob: -7.766894340515137
    8. '                        ' → logprob: -7.766894340515137
    9. ')' → logprob: -8.516894340515137
    10. '...' → logprob: -8.641894340515137

Token 931: ' mais' (ID: 2899)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -1.460424542427063
    2. ' continue' → logprob: -1.710424542427063
    3. 'continue' → logprob: -1.710424542427063
    4. '#' → logprob: -1.960424542427063
    5. 'diff' → logprob: -2.8354244232177734
    6. 'if' → logprob: -3.4604244232177734
    7. 'count' → logprob: -3.4604244232177734
    8. 'car' → logprob: -4.085424423217773
    9. ' #' → logprob: -4.210424423217773
    10. ' if' → logprob: -4.210424423217773

Token 932: ' on' (ID: 402)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.32007426023483276
    2. ' all' → logprob: -1.4450743198394775
    3. 'if' → logprob: -4.195074081420898
    4. 'any' → logprob: -4.945074081420898
    5. '                       ' → logprob: -6.070074081420898
    6. '#' → logprob: -6.570074081420898
    7. 'continue' → logprob: -6.570074081420898
    8. 'new' → logprob: -6.695074081420898
    9. 'try' → logprob: -6.820074081420898
    10. ' any' → logprob: -6.820074081420898

Token 933: ' peut' (ID: 9216)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.3371259868144989
    2. 'est' → logprob: -2.7121260166168213
    3. 'if' → logprob: -2.8371260166168213
    4. 'pe' → logprob: -3.0871260166168213
    5. '                       ' → logprob: -3.7121260166168213
    6. 'can' → logprob: -4.337125778198242
    7. ' peut' → logprob: -4.712125778198242
    8. 'pour' → logprob: -4.962125778198242
    9. ' continue' → logprob: -5.212125778198242
    10. '                           ' → logprob: -5.337125778198242

Token 934: ' regarder' (ID: 73220)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.37558624148368835
    2. 'continue' → logprob: -1.6255862712860107
    3. '                       ' → logprob: -3.3755862712860107
    4. 'ess' → logprob: -4.000586032867432
    5. ' continuer' → logprob: -4.500586032867432
    6. 'continu' → logprob: -4.875586032867432
    7. 'penser' → logprob: -5.000586032867432
    8. '```' → logprob: -5.375586032867432
    9. 'v' → logprob: -5.625586032867432
    10. '                           ' → logprob: -5.625586032867432

Token 935: ' que' (ID: 661)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9427579045295715
    2. '                       ' → logprob: -1.0677578449249268
    3. 'une' → logprob: -3.0677578449249268
    4. 'possible' → logprob: -3.4427578449249268
    5. 'for' → logprob: -3.8177578449249268
    6. 'correct' → logprob: -4.067758083343506
    7. ' if' → logprob: -4.067758083343506
    8. 'valid' → logprob: -4.192758083343506
    9. 'le' → logprob: -4.317758083343506
    10. 'diff' → logprob: -4.692758083343506

Token 936: ' le' (ID: 505)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.3889809548854828
    2. 'any' → logprob: -1.1389809846878052
    3. 'True' → logprob: -7.013980865478516
    4. 'im' → logprob: -8.013980865478516
    5. 'new' → logprob: -8.138980865478516
    6. ' all' → logprob: -9.138980865478516
    7. 'progress' → logprob: -9.138980865478516
    8. ' any' → logprob: -9.763980865478516
    9. 'for' → logprob: -9.888980865478516
    10. 'good' → logprob: -9.888980865478516

Token 937: ' nouvel' (ID: 76298)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.7105803489685059
    2. 'im' → logprob: -1.3355803489685059
    3. 'all' → logprob: -2.585580348968506
    4. 'ok' → logprob: -3.335580348968506
    5. 'new' → logprob: -3.335580348968506
    6. 'diff' → logprob: -3.960580348968506
    7. 'keep' → logprob: -4.835580348968506
    8. 'correct' → logprob: -4.835580348968506
    9. 'is' → logprob: -4.960580348968506
    10. 'changed' → logprob: -4.960580348968506

Token 938: ' état' (ID: 59181)
  Prédit: '_state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.01339456532150507
    2. 'state' → logprob: -4.388394355773926
    3. '_' → logprob: -7.263394355773926
    4. 'etat' → logprob: -10.513394355773926
    5. '_estado' → logprob: -10.763394355773926
    6. ' state' → logprob: -11.013394355773926
    7. '_s' → logprob: -11.263394355773926
    8. '_stat' → logprob: -11.263394355773926
    9. '```' → logprob: -11.388394355773926
    10. ' état' → logprob: -11.638394355773926

Token 939: ' doit' (ID: 21822)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.761201798915863
    2. '!=' → logprob: -1.8862018585205078
    3. '==' → logprob: -2.261201858520508
    4. ' !=' → logprob: -2.636201858520508
    5. 'for' → logprob: -3.761201858520508
    6. 'diff' → logprob: -3.886201858520508
    7. ' ==' → logprob: -4.011201858520508
    8. '=' → logprob: -4.011201858520508
    9. ',' → logprob: -4.136201858520508
    10. '                           ' → logprob: -4.261201858520508

Token 940: ' être' (ID: 9104)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.368166983127594
    2. 'au' → logprob: -1.8681669235229492
    3. 'avoir' → logprob: -3.618166923522949
    4. 'se' → logprob: -3.618166923522949
    5. 'not' → logprob: -4.118166923522949
    6. 'pas' → logprob: -4.493166923522949
    7. 'im' → logprob: -4.743166923522949
    8. 'faire' → logprob: -4.993166923522949
    9. 'be' → logprob: -5.118166923522949
    10. 's' → logprob: -5.243166923522949

Token 941: ' au' (ID: 2791)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.3229566812515259
    2. 'compatible' → logprob: -2.4479565620422363
    3. 'new' → logprob: -2.8229565620422363
    4. 'tuple' → logprob: -3.1979565620422363
    5. 'any' → logprob: -3.3229565620422363
    6. 'state' → logprob: -3.5729565620422363
    7. 'not' → logprob: -4.572956562042236
    8. 'correct' → logprob: -6.572956562042236
    9. ' all' → logprob: -6.697956562042236
    10. '
' → logprob: -6.947956562042236

Token 942: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.01802525669336319
    2. 'minimum' → logprob: -4.2680253982543945
    3. 'm' → logprob: -5.8930253982543945
    4. 'mo' → logprob: -7.5180253982543945
    5. 'plus' → logprob: -8.143025398254395
    6. 'maximum' → logprob: -9.268025398254395
    7. 'min' → logprob: -9.518025398254395
    8. 'least' → logprob: -10.393025398254395
    9. '```' → logprob: -11.268025398254395
    10. 'max' → logprob: -11.768025398254395

Token 943: ' aussi' (ID: 9894)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.17682233452796936
    2. 'égal' → logprob: -2.4268224239349365
    3. ' aussi' → logprob: -3.5518224239349365
    4. 'au' → logprob: -3.9268224239349365
    5. ' égal' → logprob: -4.426822185516357
    6. 'egal' → logprob: -6.051822185516357
    7. '```' → logprob: -6.176822185516357
    8. ' au' → logprob: -6.926822185516357
    9. 'plus' → logprob: -7.051822185516357
    10. 'part' → logprob: -7.176822185516357

Token 944: ' proche' (ID: 61089)
  Prédit: 'bon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bon' → logprob: -0.614590585231781
    2. 'pro' → logprob: -1.4895906448364258
    3. 'correct' → logprob: -1.7395906448364258
    4. 'compatible' → logprob: -4.239590644836426
    5. 'good' → logprob: -4.364590644836426
    6. 'bonne' → logprob: -4.489590644836426
    7. ' bon' → logprob: -5.239590644836426
    8. 'co' → logprob: -5.614590644836426
    9. ' proche' → logprob: -5.989590644836426
    10. 'prox' → logprob: -6.114590644836426

Token 945: '
' (ID: 198)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.7783375382423401
    2. '(target' → logprob: -2.0283374786376953
    3. '_target' → logprob: -2.2783374786376953
    4. ' du' → logprob: -2.9033374786376953
    5. ' de' → logprob: -3.1533374786376953
    6. 'de' → logprob: -3.4033374786376953
    7. ' à' → logprob: -3.5283374786376953
    8. 'à' → logprob: -3.5283374786376953
    9. ' target' → logprob: -3.6533374786376953
    10. 'du' → logprob: -3.6533374786376953

Token 946: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.01674407534301281
    2. '                        ' → logprob: -5.391744136810303
    3. '```' → logprob: -6.016744136810303
    4. '                           ' → logprob: -6.516744136810303
    5. 'des' → logprob: -6.641744136810303
    6. 'de' → logprob: -6.891744136810303
    7. ' du' → logprob: -7.016744136810303
    8. ',' → logprob: -7.016744136810303
    9. '#' → logprob: -7.266744136810303
    10. '                      ' → logprob: -7.766744136810303

Token 947: ' #' (ID: 1069)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -1.0506216287612915
    2. '#' (adapté à ' #') → logprob: -2.050621509552002
    3. 'à' → logprob: -2.425621509552002
    4. 'target' → logprob: -2.425621509552002
    5. '...' → logprob: -2.925621509552002
    6. '                        
' → logprob: -3.300621509552002
    7. 'diff' → logprob: -3.425621509552002
    8. '                        ' → logprob: -3.675621509552002
    9. '```' → logprob: -3.800621509552002
    10. ' #' → logprob: -3.800621509552002

Token 948: ' i' (ID: 575)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9646931290626526
    2. '                       ' → logprob: -1.2146930694580078
    3. 'à' → logprob: -2.339693069458008
    4. 'diff' → logprob: -2.964693069458008
    5. '                           ' → logprob: -3.089693069458008
    6. 'target' → logprob: -3.589693069458008
    7. '                        
' → logprob: -3.964693069458008
    8. '```' → logprob: -4.714693069458008
    9. 'to' → logprob: -5.089693069458008
    10. 'from' → logprob: -5.214693069458008

Token 949: '.e' (ID: 2560)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3173348307609558
    2. 'l' → logprob: -2.8173348903656006
    3. 'm' → logprob: -3.0673348903656006
    4. '   ' → logprob: -3.4423348903656006
    5. '=' → logprob: -3.6923348903656006
    6. 'nd' → logprob: -3.9423348903656006
    7. '#' → logprob: -4.1923346519470215
    8. '       ' → logprob: -4.9423346519470215
    9. '           ' → logprob: -5.5673346519470215
    10. '  ' → logprob: -5.5673346519470215

Token 950: '.' (ID: 13)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.8053414821624756
    2. '=' → logprob: -2.3053414821624756
    3. '   ' → logprob: -2.3053414821624756
    4. 'len' → logprob: -2.4303414821624756
    5. 'if' → logprob: -3.1803414821624756
    6. 'e' → logprob: -3.3053414821624756
    7. '           ' → logprob: -3.3053414821624756
    8. '                       ' → logprob: -3.5553414821624756
    9. '               ' → logprob: -3.8053414821624756
    10. '                   ' → logprob: -3.9303414821624756

Token 951: ' pour' (ID: 1930)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.12215794622898102
    2. 'all' → logprob: -2.3721580505371094
    3. ' sum' → logprob: -4.497158050537109
    4. ' all' → logprob: -4.872158050537109
    5. 'state' → logprob: -6.872158050537109
    6. 'new' → logprob: -6.997158050537109
    7. '   ' → logprob: -8.62215805053711
    8. 'distance' → logprob: -8.62215805053711
    9. '       ' → logprob: -9.87215805053711
    10. '#' → logprob: -9.87215805053711

Token 952: ' chaque' (ID: 21194)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 953: ' case' (ID: 1890)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011645288206636906
    2. 'idx' → logprob: -4.886645317077637
    3. 'pos' → logprob: -6.136645317077637
    4. ' i' → logprob: -6.511645317077637
    5. 'k' → logprob: -8.761645317077637
    6. ' idx' → logprob: -9.386645317077637
    7. '```' → logprob: -10.136645317077637
    8. 'position' → logprob: -10.386645317077637
    9. 'index' → logprob: -10.886645317077637
    10. 'p' → logprob: -11.136645317077637

Token 954: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.591661810874939
    2. ',' → logprob: -1.341661810874939
    3. ':' → logprob: -2.0916619300842285
    4. 'in' → logprob: -3.4666619300842285
    5. 'state' → logprob: -4.8416619300842285
    6. ' :' → logprob: -5.2166619300842285
    7. ' ,' → logprob: -5.4666619300842285
    8. ':
' → logprob: -5.9666619300842285
    9. '   ' → logprob: -6.4666619300842285
    10. ' if' → logprob: -6.7166619300842285

Token 955: ' si' (ID: 1784)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -1.2710990905761719
    2. '(new' → logprob: -1.5210990905761719
    3. 'if' → logprob: -1.8960990905761719
    4. '(target' → logprob: -2.146099090576172
    5. '(state' → logprob: -2.521099090576172
    6. '(' → logprob: -3.521099090576172
    7. '(c' → logprob: -4.021099090576172
    8. 'target' → logprob: -4.271099090576172
    9. '(n' → logprob: -4.271099090576172
    10. 'for' → logprob: -4.896099090576172

Token 956: ' la' (ID: 557)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 957: ' couleur' (ID: 48005)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.27648353576660156
    2. 'state' → logprob: -2.2764835357666016
    3. 'new' → logprob: -2.4014835357666016
    4. ' target' → logprob: -4.026483535766602
    5. ' new' → logprob: -4.526483535766602
    6. ' state' → logprob: -4.651483535766602
    7. 'c' → logprob: -5.276483535766602
    8. 'color' → logprob: -6.776483535766602
    9. ' c' → logprob: -7.151483535766602
    10. 't' → logprob: -7.151483535766602

Token 958: ' est' (ID: 893)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.26996880769729614
    2. 'state' → logprob: -2.1449687480926514
    3. 'target' → logprob: -3.0199687480926514
    4. ' new' → logprob: -3.5199687480926514
    5. '==' → logprob: -3.7699687480926514
    6. 'c' → logprob: -5.3949689865112305
    7. ' state' → logprob: -6.0199689865112305
    8. 'n' → logprob: -6.3949689865112305
    9. '```' → logprob: -6.6449689865112305
    10. ' target' → logprob: -7.1449689865112305

Token 959: ' correcte' (ID: 173783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.07575498521327972
    2. ''.' → logprob: -3.0757548809051514
    3. 'state' → logprob: -4.2007551193237305
    4. ' target' → logprob: -5.7007551193237305
    5. 'new' → logprob: -5.9507551193237305
    6. 'not' → logprob: -6.0757551193237305
    7. 'color' → logprob: -6.3257551193237305
    8. 'c' → logprob: -7.5757551193237305
    9. ' not' → logprob: -7.5757551193237305
    10. ' state' → logprob: -9.45075511932373

Token 960: ' ou' (ID: 2031)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8795809149742126
    2. 'ou' → logprob: -1.5045809745788574
    3. ' or' → logprob: -1.7545809745788574
    4. ' ou' → logprob: -2.6295809745788574
    5. 'new' → logprob: -3.5045809745788574
    6. 'or' → logprob: -3.5045809745788574
    7. ',' → logprob: -4.754580974578857
    8. '                       ' → logprob: -5.129580974578857
    9. ' ==' → logprob: -5.129580974578857
    10. '```' → logprob: -5.129580974578857

Token 961: ' progress' (ID: 7408)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.8616560101509094
    2. 'state' → logprob: -1.2366559505462646
    3. ''.' → logprob: -1.4866559505462646
    4. ' new' → logprob: -3.9866559505462646
    5. ' state' → logprob: -4.486656188964844
    6. '.' → logprob: -4.861656188964844
    7. 'color' → logprob: -5.361656188964844
    8. 'target' → logprob: -5.611656188964844
    9. 'equal' → logprob: -5.736656188964844
    10. 'nou' → logprob: -6.361656188964844

Token 962: 'ée' (ID: 2894)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2967604398727417
    2. 'ivement' → logprob: -2.1717605590820312
    3. 'ing' → logprob: -3.4217605590820312
    4. 'é' → logprob: -3.6717605590820312
    5. 'ant' → logprob: -3.7967605590820312
    6. 'ion' → logprob: -3.7967605590820312
    7. 'ive' → logprob: -4.171760559082031
    8. 'if' → logprob: -4.796760559082031
    9. 'ée' → logprob: -5.046760559082031
    10. 'ively' → logprob: -5.546760559082031

Token 963: ' vers' (ID: 3640)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19594046473503113
    2. '                       ' → logprob: -3.1959404945373535
    3. ':' → logprob: -3.3209404945373535
    4. ' vers' → logprob: -3.8209404945373535
    5. ' (' → logprob: -4.0709404945373535
    6. ' or' → logprob: -5.0709404945373535
    7. '(state' → logprob: -5.0709404945373535
    8. '```' → logprob: -5.1959404945373535
    9. ' ,' → logprob: -5.3209404945373535
    10. '                           ' → logprob: -5.5709404945373535

Token 964: ' la' (ID: 557)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.5024857521057129
    2. 'la' → logprob: -1.002485752105713
    3. 'c' → logprob: -3.877485752105713
    4. 'l' → logprob: -6.127485752105713
    5. ' la' → logprob: -6.877485752105713
    6. 'color' → logprob: -6.877485752105713
    7. 'state' → logprob: -7.127485752105713
    8. 'le' → logprob: -7.127485752105713
    9. 'the' → logprob: -7.877485752105713
    10. 't' → logprob: -8.252485275268555

Token 965: ' cible' (ID: 136857)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.07667499780654907
    2. 'c' → logprob: -2.8266749382019043
    3. ' cible' → logprob: -4.576674938201904
    4. 'but' → logprob: -7.201674938201904
    5. ' target' → logprob: -7.326674938201904
    6. 'color' → logprob: -7.701674938201904
    7. 'objectif' → logprob: -7.701674938201904
    8. 'final' → logprob: -7.826674938201904
    9. 'correct' → logprob: -8.076675415039062
    10. 'bonne' → logprob: -8.326675415039062

Token 966: '.
' (ID: 558)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.342057704925537
    2. '                       ' → logprob: -1.342057704925537
    3. ':' → logprob: -1.717057704925537
    4. ',' → logprob: -1.842057704925537
    5. '                           ' → logprob: -2.592057704925537
    6. ' or' → logprob: -4.342057704925537
    7. ' (' → logprob: -4.842057704925537
    8. ' :
' → logprob: -5.217057704925537
    9. '(state' → logprob: -5.717057704925537
    10. '():
' → logprob: -5.842057704925537

Token 967: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.25815466046333313
    2. '                        ' → logprob: -2.3831546306610107
    3. '<|end|>' → logprob: -2.8831546306610107
    4. '                        
' → logprob: -4.00815486907959
    5. '```' → logprob: -4.50815486907959
    6. ' ' → logprob: -4.75815486907959
    7. ')' → logprob: -5.25815486907959
    8. '                           ' → logprob: -5.38315486907959
    9. ':' → logprob: -5.38315486907959
    10. ' (' → logprob: -5.75815486907959

Token 968: ' #' (ID: 1069)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.008932444266974926
    2. ' if' → logprob: -5.758932590484619
    3. 'if' → logprob: -6.508932590484619
    4. '#' (adapté à ' #') → logprob: -6.508932590484619
    5. '                        
' → logprob: -6.883932590484619
    6. '                           ' → logprob: -8.133932113647461
    7. ' #' → logprob: -8.508932113647461
    8. 'for' → logprob: -8.633932113647461
    9. ' for' → logprob: -8.633932113647461
    10. '```' → logprob: -8.758932113647461

Token 969: ' Mais' (ID: 13880)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.013598607853055
    2. 'if' → logprob: -4.888598442077637
    3. '#' → logprob: -5.388598442077637
    4. ' if' → logprob: -8.013598442077637
    5. 'valid' → logprob: -8.138598442077637
    6. '                           ' → logprob: -8.888598442077637
    7. 'for' → logprob: -8.888598442077637
    8. '                        
' → logprob: -8.888598442077637
    9. '```' → logprob: -9.763598442077637
    10. 'match' → logprob: -10.263598442077637

Token 970: ' ce' (ID: 2357)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.6235918402671814
    2. 'True' → logprob: -1.3735918998718262
    3. '#' → logprob: -3.498591899871826
    4. 'new' → logprob: -3.873591899871826
    5. ' all' → logprob: -3.998591899871826
    6. 'all' → logprob: -3.998591899871826
    7. ' not' → logprob: -4.123591899871826
    8. ' new' → logprob: -4.248591899871826
    9. '
' → logprob: -4.373591899871826
    10. 'not' → logprob: -4.498591899871826

Token 971: ' sera' (ID: 15511)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.770771324634552
    2. 'n' → logprob: -1.1457712650299072
    3. '#' → logprob: -2.3957712650299072
    4. ' est' → logprob: -2.8957712650299072
    5. 'est' → logprob: -5.020771503448486
    6. ':' → logprob: -5.145771503448486
    7. '=' → logprob: -5.270771503448486
    8. ' is' → logprob: -5.520771503448486
    9. 'state' → logprob: -5.520771503448486
    10. ')' → logprob: -5.645771503448486

Token 972: ' compliqué' (ID: 152186)
  Prédit: 'complex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'complex' → logprob: -0.5792739987373352
    2. 't' → logprob: -1.7042739391326904
    3. 'd' → logprob: -2.5792739391326904
    4. 'tr' → logprob: -3.0792739391326904
    5. 'long' → logprob: -3.5792739391326904
    6. 'too' → logprob: -3.8292739391326904
    7. 'fast' → logprob: -4.4542741775512695
    8. 'co' → logprob: -4.4542741775512695
    9. ' trop' → logprob: -4.5792741775512695
    10. ' compliqué' → logprob: -4.9542741775512695

Token 973: '.' (ID: 13)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.012330691330134869
    2. '.' → logprob: -6.012330532073975
    3. '<|end|>' → logprob: -6.137330532073975
    4. '...' → logprob: -6.262330532073975
    5. '                        
' → logprob: -6.637330532073975
    6. ',' → logprob: -6.762330532073975
    7. ')' → logprob: -7.262330532073975
    8. '#' → logprob: -7.262330532073975
    9. '                           ' → logprob: -7.637330532073975
    10. '                        ' → logprob: -8.262331008911133

Token 974: ' 
' (ID: 793)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.007774386554956436
    2. '                        
' → logprob: -5.757774353027344
    3. '#' → logprob: -6.507774353027344
    4. ')' → logprob: -7.007774353027344
    5. '                        ' → logprob: -7.507774353027344
    6. '<|end|>' → logprob: -7.632774353027344
    7. '                           ' → logprob: -8.382774353027344
    8. '\' → logprob: -9.007774353027344
    9. '```' → logprob: -9.382774353027344
    10. '...' → logprob: -9.632774353027344

Token 975: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0007020648336037993
    2. '                        
' → logprob: -7.500701904296875
    3. '#' → logprob: -10.250701904296875
    4. '                        ' → logprob: -10.500701904296875
    5. '<|end|>' → logprob: -11.000701904296875
    6. '					' → logprob: -11.000701904296875
    7. '                           ' → logprob: -11.125701904296875
    8. ')' → logprob: -12.500701904296875
    9. '\x' → logprob: -12.625701904296875
    10. '                   ' → logprob: -12.875701904296875

Token 976: ' #' (ID: 1069)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.5177462100982666
    2. '#' (adapté à ' #') → logprob: -1.3927462100982666
    3. 'if' → logprob: -1.8927462100982666
    4. 'match' → logprob: -6.1427459716796875
    5. '                        
' → logprob: -6.7677459716796875
    6. 'diff' → logprob: -6.8927459716796875
    7. ' if' → logprob: -8.642745971679688
    8. 'matches' → logprob: -9.142745971679688
    9. 'count' → logprob: -9.517745971679688
    10. 'valid' → logprob: -10.267745971679688

Token 977: ' On' (ID: 2160)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.21135304868221283
    2. '#' → logprob: -1.711353063583374
    3. 'if' → logprob: -4.711352825164795
    4. '                        
' → logprob: -7.836352825164795
    5. '```' → logprob: -8.961353302001953
    6. '                   ' → logprob: -9.836353302001953
    7. 'for' → logprob: -10.086353302001953
    8. 'Si' → logprob: -10.086353302001953
    9. '
' → logprob: -10.461353302001953
    10. '                           ' → logprob: -10.586353302001953

Token 978: ' se' (ID: 458)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.10618837922811508
    2. '                       ' → logprob: -3.2311882972717285
    3. 'pour' → logprob: -3.7311882972717285
    4. '#' → logprob: -4.6061882972717285
    5. 'pe' → logprob: -4.7311882972717285
    6. ' continue' → logprob: -5.6061882972717285
    7. '                               ' → logprob: -6.1061882972717285
    8. 'contin' → logprob: -6.4811882972717285
    9. 'continu' → logprob: -6.6061882972717285
    10. 'n' → logprob: -6.7311882972717285

Token 979: ' contente' (ID: 147569)
  Prédit: 'cont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cont' → logprob: -0.6260500550270081
    2. 'content' → logprob: -1.1260499954223633
    3. 'lim' → logprob: -2.1260499954223633
    4. 'limit' → logprob: -4.626049995422363
    5. 'conten' → logprob: -5.001049995422363
    6. ' contente' → logprob: -5.751049995422363
    7. 'borne' → logprob: -8.751049995422363
    8. 'fera' → logprob: -8.751049995422363
    9. 'reste' → logprob: -8.876049995422363
    10. '_content' → logprob: -9.001049995422363

Token 980: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6618306636810303
    2. ' de' → logprob: -1.7868306636810303
    3. '                       ' → logprob: -2.0368306636810303
    4. 'de' → logprob: -2.6618306636810303
    5. ' d' → logprob: -2.9118306636810303
    6. '                           ' → logprob: -4.286830902099609
    7. '                        ' → logprob: -4.661830902099609
    8. ' of' → logprob: -5.161830902099609
    9. 'à' → logprob: -5.286830902099609
    10. ' uniquement' → logprob: -5.286830902099609

Token 981: ''en' (ID: 16740)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2870768904685974
    2. '                       ' → logprob: -2.787076950073242
    3. ' if' → logprob: -3.037076950073242
    4. ' continuer' → logprob: -3.412076950073242
    5. 'continue' → logprob: -3.662076950073242
    6. '                           ' → logprob: -3.912076950073242
    7. ' continue' → logprob: -4.037076950073242
    8. 'contin' → logprob: -4.537076950073242
    9. '```' → logprob: -4.912076950073242
    10. '   ' → logprob: -5.287076950073242

Token 982: 'registrer' (ID: 192246)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.7247158288955688
    2. 'registrer' → logprob: -0.7247158288955688
    3. 'register' → logprob: -4.599715709686279
    4. 'que' → logprob: -4.849715709686279
    5. 'v' → logprob: -5.599715709686279
    6. 'file' → logprob: -6.099715709686279
    7. 'vis' → logprob: -6.599715709686279
    8. 'registr' → logprob: -6.849715709686279
    9. '```' → logprob: -7.099715709686279
    10. '-' → logprob: -7.224715709686279

Token 983: ' si' (ID: 1784)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.25742894411087036
    2. ' new' → logprob: -2.5074288845062256
    3. ' uniquement' → logprob: -3.1324288845062256
    4. 'new' → logprob: -3.3824288845062256
    5. '[new' → logprob: -4.132429122924805
    6. ' seulement' → logprob: -5.007429122924805
    7. '                        ' → logprob: -5.257429122924805
    8. 'if' → logprob: -5.507429122924805
    9. 'si' → logprob: -6.007429122924805
    10. 'les' → logprob: -6.007429122924805

Token 984: ' non' (ID: 2893)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.08916149288415909
    2. ' new' → logprob: -2.4641613960266113
    3. 'visited' → logprob: -8.71416187286377
    4. '   ' → logprob: -10.71416187286377
    5. 'not' → logprob: -11.83916187286377
    6. ' visited' → logprob: -12.21416187286377
    7. '(new' → logprob: -12.58916187286377
    8. ' ' → logprob: -12.71416187286377
    9. '                   ' → logprob: -13.08916187286377
    10. '
' → logprob: -13.21416187286377

Token 985: ' vis' (ID: 1909)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.3337656557559967
    2. '(new' → logprob: -2.583765745162964
    3. 'visited' → logprob: -2.833765745162964
    4. 'state' → logprob: -2.833765745162964
    5. ' new' → logprob: -2.958765745162964
    6. 'dé' → logprob: -4.583765506744385
    7. 'in' → logprob: -4.958765506744385
    8. '   ' → logprob: -5.708765506744385
    9. 'vis' → logprob: -5.833765506744385
    10. '(state' → logprob: -5.958765506744385

Token 986: 'ité' (ID: 3761)
  Prédit: 'ited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ited' → logprob: -0.009523618035018444
    2. 'ité' → logprob: -5.009523391723633
    3. 'visited' → logprob: -6.134523391723633
    4. 'itable' → logprob: -7.884523391723633
    5. 'itated' → logprob: -9.384523391723633
    6. 'isted' → logprob: -9.509523391723633
    7. ' visited' → logprob: -10.884523391723633
    8. 'ite' → logprob: -11.509523391723633
    9. 'ible' → logprob: -11.509523391723633
    10. 'isible' → logprob: -11.509523391723633

Token 987: '.
' (ID: 558)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -2.093505099765025e-05
    2. ',' → logprob: -12.250020980834961
    3. '                           ' → logprob: -12.625020980834961
    4. '                        
' → logprob: -12.875020980834961
    5. '					' → logprob: -13.125020980834961
    6. '           ' → logprob: -13.125020980834961
    7. '                   ' → logprob: -13.500020980834961
    8. '               ' → logprob: -14.000020980834961
    9. '                        ' → logprob: -14.000020980834961
    10. '       ' → logprob: -14.500020980834961

Token 988: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.000192812061868608
    2. '                        
' → logprob: -8.625192642211914
    3. '                        ' → logprob: -12.500192642211914
    4. '```' → logprob: -12.500192642211914
    5. '                      ' → logprob: -13.250192642211914
    6. '					' → logprob: -13.750192642211914
    7. '                           ' → logprob: -14.875192642211914
    8. '                       
' → logprob: -15.000192642211914
    9. '\x' → logprob: -15.125192642211914
    10. '           ' → logprob: -15.500192642211914

Token 989: ' if' (ID: 538)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.021070443093776703
    2. 'if' (adapté à ' if') → logprob: -3.8960704803466797
    3. ' if' → logprob: -7.89607048034668
    4. '                           ' → logprob: -8.89607048034668
    5. '                   ' → logprob: -12.14607048034668
    6. '           ' → logprob: -12.27107048034668
    7. '					' → logprob: -13.14607048034668
    8. '               ' → logprob: -13.39607048034668
    9. '                        ' → logprob: -13.52107048034668
    10. '                               ' → logprob: -14.02107048034668

Token 990: ' new' (ID: 620)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 991: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.0021920178551226854
    2. 'state' → logprob: -6.12719202041626
    3. '_STATE' → logprob: -13.377191543579102
    4. 'st' → logprob: -14.127191543579102
    5. 'State' → logprob: -14.127191543579102
    6. '_status' → logprob: -14.752191543579102
    7. '_st' → logprob: -14.752191543579102
    8. ' state' → logprob: -14.877191543579102
    9. 'estado' → logprob: -15.127191543579102
    10. '[state' → logprob: -15.127191543579102

Token 992: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.2014147937297821
    2. 'not' → logprob: -1.7014148235321045
    3. '	not' → logprob: -14.076415061950684
    4. ')' → logprob: -14.701415061950684
    5. 'and' → logprob: -16.326414108276367
    6. 'in' → logprob: -16.576414108276367
    7. '_not' → logprob: -17.451414108276367
    8. 'n' → logprob: -17.701414108276367
    9. ':not' → logprob: -17.951414108276367
    10. 'n't' → logprob: -18.826414108276367

Token 993: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1275719553232193
    2. ' in' → logprob: -2.1275720596313477
    3. 'visited' → logprob: -7.502572059631348
    4. '[' → logprob: -9.877572059631348
    5. '   ' → logprob: -11.127572059631348
    6. '[in' → logprob: -12.002572059631348
    7. ' visited' → logprob: -12.752572059631348
    8. '	in' → logprob: -13.252572059631348
    9. '                               ' → logprob: -13.377572059631348
    10. ')' → logprob: -13.377572059631348

Token 994: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -7.941850526549388e-06
    2. ' visited' → logprob: -11.750007629394531
    3. '   ' → logprob: -21.00000762939453
    4. '```' → logprob: -21.00000762939453
    5. 'seen' → logprob: -21.75000762939453
    6. 'visible' → logprob: -22.25000762939453
    7. '
' → logprob: -22.87500762939453
    8. '       ' → logprob: -23.25000762939453
    9. ' ' → logprob: -23.50000762939453
    10. '  ' → logprob: -23.62500762939453

Token 995: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1857660710811615
    2. ':
' → logprob: -2.0607659816741943
    3. '                           ' → logprob: -3.3107659816741943
    4. '                       ' → logprob: -6.310766220092773
    5. ' and' → logprob: -6.810766220092773
    6. '[' → logprob: -7.560766220092773
    7. ' :' → logprob: -7.810766220092773
    8. '=' → logprob: -8.060766220092773
    9. '):
' → logprob: -8.060766220092773
    10. ' =' → logprob: -8.435766220092773

Token 996: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -8.745069499127567e-05
    2. '                       ' → logprob: -9.75008773803711
    3. '                               ' → logprob: -11.12508773803711
    4. '                          ' → logprob: -12.37508773803711
    5. '                            ' → logprob: -12.62508773803711
    6. '                         ' → logprob: -14.00008773803711
    7. '```' → logprob: -14.00008773803711
    8. '                        ' → logprob: -14.12508773803711
    9. '                            
' → logprob: -14.25008773803711
    10. '						' → logprob: -14.50008773803711

Token 997: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.007948591373860836
    2. '                           ' → logprob: -5.007948398590088
    3. '                               ' → logprob: -6.757948398590088
    4. ' visited' → logprob: -9.632948875427246
    5. '                       ' → logprob: -13.507948875427246
    6. '           ' → logprob: -14.007948875427246
    7. '   ' → logprob: -14.132948875427246
    8. '                            ' → logprob: -14.382948875427246
    9. '                             ' → logprob: -14.382948875427246
    10. '               ' → logprob: -15.257948875427246

Token 998: '[new' (ID: 89436)
  Prédit: '[new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[new' → logprob: -4.35837464465294e-05
    2. '[state' → logprob: -10.250043869018555
    3. '[' → logprob: -12.000043869018555
    4. '=new' → logprob: -14.000043869018555
    5. 'new' → logprob: -14.375043869018555
    6. ' [' → logprob: -15.375043869018555
    7. '                           ' → logprob: -15.750043869018555
    8. ' new' → logprob: -16.750043869018555
    9. ',new' → logprob: -17.500043869018555
    10. '[next' → logprob: -17.625043869018555

Token 999: '_state' (ID: 9479)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1000: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10222534090280533
    2. '=' → logprob: -2.6022253036499023
    3. ']' → logprob: -3.8522253036499023
    4. ']=' → logprob: -6.352225303649902
    5. ' ]' → logprob: -10.102225303649902
    6. ')' → logprob: -10.727225303649902
    7. '   ' → logprob: -11.352225303649902
    8. '    ' → logprob: -12.477225303649902
    9. ')=' → logprob: -12.852225303649902
    10. '=True' → logprob: -13.102225303649902

Token 1001: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519895136356354
    2. ' =' → logprob: -1.501989483833313
    3. '[' → logprob: -10.126989364624023
    4. '                           ' → logprob: -12.251989364624023
    5. '=
' → logprob: -12.751989364624023
    6. '=True' → logprob: -13.126989364624023
    7. ']=' → logprob: -13.251989364624023
    8. '                            ' → logprob: -13.251989364624023
    9. ' =
' → logprob: -13.626989364624023
    10. ']' → logprob: -14.001989364624023

Token 1002: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00033546582562848926
    2. ' dist' → logprob: -8.000335693359375
    3. '	dist' → logprob: -19.125335693359375
    4. '   ' → logprob: -19.250335693359375
    5. '(dist' → logprob: -21.750335693359375
    6. 'Dist' → logprob: -22.000335693359375
    7. 'd' → logprob: -22.125335693359375
    8. '_dist' → logprob: -22.375335693359375
    9. '                           ' → logprob: -23.750335693359375
    10. 'distance' → logprob: -24.000335693359375

Token 1003: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10020710527896881
    2. ' +' → logprob: -2.3502070903778076
    3. '1' → logprob: -15.475207328796387
    4. '＋' → logprob: -16.47520637512207
    5. '+[' → logprob: -17.35020637512207
    6. ' plus' → logprob: -18.10020637512207
    7. '+
' → logprob: -18.10020637512207
    8. '   ' → logprob: -18.35020637512207
    9. '[' → logprob: -18.35020637512207
    10. '```' → logprob: -18.47520637512207

Token 1004: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '```' → logprob: -18.5
    4. '   ' → logprob: -19.25
    5. '<|end|>' → logprob: -19.375
    6. '                           ' → logprob: -19.5
    7. '                               ' → logprob: -21.5
    8. '۱' → logprob: -21.75
    9. '                                           ' → logprob: -21.75
    10. '১' → logprob: -22.125

Token 1005: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.5
    3. '```' → logprob: -21.0
    4. '   ' → logprob: -22.5
    5. '۱' → logprob: -24.0
    6. '১' → logprob: -24.5
    7. '१' → logprob: -24.625
    8. '１' → logprob: -24.75
    9. '<|end|>' → logprob: -24.75
    10. '                           ' → logprob: -25.375

Token 1006: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -3.702754474943504e-05
    2. '						' → logprob: -11.37503719329834
    3. 'queue' → logprob: -11.62503719329834
    4. ' queue' → logprob: -11.75003719329834
    5. '           ' → logprob: -12.87503719329834
    6. '                       ' → logprob: -13.37503719329834
    7. '                            
' → logprob: -14.00003719329834
    8. '
' → logprob: -14.00003719329834
    9. '                            ' → logprob: -14.25003719329834
    10. '```' → logprob: -14.62503719329834

Token 1007: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.00016468366084154695
    2. 'queue' → logprob: -9.250164985656738
    3. '						' → logprob: -10.500164985656738
    4. ' queue' → logprob: -10.625164985656738
    5. '```' → logprob: -11.875164985656738
    6. '                       ' → logprob: -12.375164985656738
    7. '           ' → logprob: -13.000164985656738
    8. '                            ' → logprob: -13.875164985656738
    9. '                          ' → logprob: -14.875164985656738
    10. '                   ' → logprob: -15.000164985656738

Token 1008: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.003518233075737953
    2. '                           ' → logprob: -5.753518104553223
    3. ' queue' → logprob: -8.003518104553223
    4. '	queue' → logprob: -13.003518104553223
    5. '   ' → logprob: -13.253518104553223
    6. '           ' → logprob: -14.753518104553223
    7. '```' → logprob: -14.878518104553223
    8. '						' → logprob: -15.128518104553223
    9. '       ' → logprob: -15.253518104553223
    10. '                            ' → logprob: -15.253518104553223

Token 1009: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.759734732331708e-05
    2. '.extend' → logprob: -11.125017166137695
    3. '                           ' → logprob: -13.625017166137695
    4. '.' → logprob: -14.375017166137695
    5. '.enqueue' → logprob: -14.750017166137695
    6. '.Append' → logprob: -16.000017166137695
    7. '.push' → logprob: -16.125017166137695
    8. '.p' → logprob: -16.375017166137695
    9. ').' → logprob: -16.875017166137695
    10. '.app' → logprob: -17.500017166137695

Token 1010: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -1.2664456789934775e-06
    2. 'new' → logprob: -13.750000953674316
    3. '(' → logprob: -15.750000953674316
    4. ' new' → logprob: -18.500001907348633
    5. ')new' → logprob: -19.625001907348633
    6. '((' → logprob: -20.500001907348633
    7. ',new' → logprob: -20.500001907348633
    8. '(New' → logprob: -20.500001907348633
    9. '(
' → logprob: -20.625001907348633
    10. ' (' → logprob: -20.875001907348633

Token 1011: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.004268934950232506
    2. 'new' → logprob: -6.129269123077393
    3. 'state' → logprob: -6.254269123077393
    4. 'ew' → logprob: -9.629268646240234
    5. '_new' → logprob: -9.754268646240234
    6. 'w' → logprob: -10.629268646240234
    7. 'State' → logprob: -13.129268646240234
    8. ' new' → logprob: -13.129268646240234
    9. '(new' → logprob: -13.379268646240234
    10. '```' → logprob: -13.879268646240234

Token 1012: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.6537622034084052e-05
    2. '                       ' → logprob: -11.50002670288086
    3. ')
' → logprob: -11.62502670288086
    4. '                           ' → logprob: -12.00002670288086
    5. ' )' → logprob: -15.37502670288086
    6. '           ' → logprob: -15.37502670288086
    7. '       ' → logprob: -15.87502670288086
    8. '))' → logprob: -16.37502670288086
    9. '               ' → logprob: -16.37502670288086
    10. '<|end|>' → logprob: -16.62502670288086

Token 1013: 'main' (ID: 7731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1014: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1012
Tokens correctement prédits (1ère position, stricte): 280
Tokens correctement prédits (1ère position, avec adaptation): 304
Tokens correctement prédits (top 10): 676
Précision stricte (1ère position): 27.67%
Précision adaptée (1ère position): 30.04%
Précision (top 10): 66.80%
================================================================================
