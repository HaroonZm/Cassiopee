================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:25
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    while True:
        line = input()
        if line == "0 0":
            break
        a0_str, L_str = line.split()
        L = int(L_str)
        a0 = int(a0_str)
        sequence = []
        seen = {}

        current = a0

        for i in range(21):  # i up to 20 inclusive
            # format current with leading zeros
            s = f"{current:0{L}d}"
            if s in seen:
                j = seen[s]
                # output: j, a_i, i-j
                # suppress leading zeros by converting to int
                print(j, int(s), i - j)
                break
            seen[s] = i
            sequence.append(current)
            # compute next
            digits = list(s)
            digits_sorted_desc = sorted(digits, reverse=True)
            digits_sorted_asc = sorted(digits)

            max_num = int("".join(digits_sorted_desc))
            min_num = int("".join(digits_sorted_asc))
            current = max_num - min_num


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.2719064950942993
    2. '\n' → logprob: -1.6469064950942993
    3. '   ' → logprob: -3.8969063758850098
    4. '    
' → logprob: -4.89690637588501
    5. '    ' → logprob: -5.77190637588501
    6. ''' → logprob: -5.89690637588501
    7. '```' → logprob: -6.14690637588501
    8. '(' → logprob: -6.39690637588501
    9. ' 
' → logprob: -6.39690637588501
    10. '\r' → logprob: -6.89690637588501

Token 4: ' while' (ID: 2049)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7928017377853394
    2. '   ' → logprob: -1.5428017377853394
    3. 'pass' → logprob: -2.292801856994629
    4. 'r' → logprob: -2.792801856994629
    5. 'p' → logprob: -2.917801856994629
    6. 'return' → logprob: -3.167801856994629
    7. '#' → logprob: -3.792801856994629
    8. 'a' → logprob: -4.167801856994629
    9. 'i' → logprob: -4.417801856994629
    10. '```' → logprob: -5.417801856994629

Token 5: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.49543192982673645
    2. ' ' → logprob: -0.9954319000244141
    3. '  ' → logprob: -4.245431900024414
    4. ' not' → logprob: -5.995431900024414
    5. '    ' → logprob: -6.495431900024414
    6. ' (' → logprob: -6.995431900024414
    7. 'True' → logprob: -7.245431900024414
    8. '"' → logprob: -8.495431900024414
    9. ' )' → logprob: -8.870431900024414
    10. '<|end|>' → logprob: -9.245431900024414

Token 6: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005855606868863106
    2. '():' → logprob: -8.125585556030273
    3. ':
' → logprob: -9.500585556030273
    4. ' :' → logprob: -9.750585556030273
    5. '       ' → logprob: -9.750585556030273
    6. '):' → logprob: -10.750585556030273
    7. '(:' → logprob: -11.500585556030273
    8. ':**' → logprob: -11.625585556030273
    9. '```' → logprob: -11.750585556030273
    10. '   ' → logprob: -11.750585556030273

Token 7: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14568990468978882
    2. '        
' → logprob: -2.3956899642944336
    3. '\n' → logprob: -4.645689964294434
    4. '```' → logprob: -4.770689964294434
    5. '\' → logprob: -5.520689964294434
    6. '   ' → logprob: -5.895689964294434
    7. '    ' → logprob: -6.020689964294434
    8. '    
' → logprob: -6.145689964294434
    9. '`' → logprob: -6.145689964294434
    10. ' 
' → logprob: -6.270689964294434

Token 8: ' line' (ID: 2543)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1805418729782104
    2. '    ' → logprob: -1.5555418729782104
    3. '       ' → logprob: -1.8055418729782104
    4. 'user' → logprob: -2.8055419921875
    5. 'i' → logprob: -2.9305419921875
    6. 'input' → logprob: -3.1805419921875
    7. ' ' → logprob: -3.4305419921875
    8. '        ' → logprob: -3.6805419921875
    9. 'pass' → logprob: -3.9305419921875
    10. 'n' → logprob: -4.5555419921875

Token 9: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013371504843235016
    2. '=' → logprob: -4.513371467590332
    3. ' ' → logprob: -7.013371467590332
    4. 's' → logprob: -7.388371467590332
    5. '.' → logprob: -7.763371467590332
    6. '[:]' → logprob: -9.513371467590332
    7. '[' → logprob: -10.263371467590332
    8. ')' → logprob: -10.263371467590332
    9. '  ' → logprob: -10.388371467590332
    10. '_' → logprob: -10.388371467590332

Token 10: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.0788913294672966
    2. 'input' → logprob: -2.5788912773132324
    3. ' ' → logprob: -14.20389175415039
    4. '=input' → logprob: -14.32889175415039
    5. '   ' → logprob: -15.95389175415039
    6. '(input' → logprob: -16.20389175415039
    7. '<input' → logprob: -16.57889175415039
    8. '	input' → logprob: -17.32889175415039
    9. '_input' → logprob: -18.32889175415039
    10. ' readline' → logprob: -18.95389175415039

Token 11: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002176669891923666
    2. '('' → logprob: -6.377176761627197
    3. '("("' → logprob: -7.877176761627197
    4. '()' → logprob: -10.002176284790039
    5. '("")' → logprob: -10.627176284790039
    6. ''' → logprob: -12.127176284790039
    7. ')' → logprob: -12.752176284790039
    8. '(`' → logprob: -12.877176284790039
    9. '("' → logprob: -12.877176284790039
    10. '```' → logprob: -13.127176284790039

Token 12: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 13: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08043225854635239
    2. ' if' → logprob: -2.705432176589966
    3. 'if' (adapté à ' if') → logprob: -5.205432415008545
    4. '        ' → logprob: -6.205432415008545
    5. ' ' → logprob: -6.830432415008545
    6. '.strip' → logprob: -7.705432415008545
    7. '    ' → logprob: -7.955432415008545
    8. '   ' → logprob: -8.205431938171387
    9. '<|end|>' → logprob: -8.580431938171387
    10. '      ' → logprob: -8.955431938171387

Token 14: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.05039592832326889
    2. ' line' → logprob: -3.050395965576172
    3. ' ' → logprob: -6.675395965576172
    4. 'not' → logprob: -7.675395965576172
    5. 'line' → logprob: -9.550395965576172
    6. '  ' → logprob: -12.300395965576172
    7. ' len' → logprob: -13.300395965576172
    8. ' lines' → logprob: -13.675395965576172
    9. ' ' → logprob: -13.925395965576172
    10. '#line' → logprob: -15.800395965576172

Token 15: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06707101315259933
    2. '.' → logprob: -3.192070960998535
    3. '.startswith' → logprob: -4.442070960998535
    4. ' .' → logprob: -4.942070960998535
    5. '.strip' → logprob: -5.942070960998535
    6. '==' → logprob: -6.442070960998535
    7. ' ' → logprob: -8.942070960998535
    8. '.endswith' → logprob: -8.942070960998535
    9. ' =' → logprob: -9.692070960998535
    10. '<|end|>' → logprob: -9.692070960998535

Token 16: ' "' (ID: 392)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -0.4035791754722595
    2. '"' → logprob: -2.0285792350769043
    3. ' ""' → logprob: -2.4035792350769043
    4. ''' → logprob: -2.7785792350769043
    5. '''' → logprob: -3.1535792350769043
    6. ' ''' → logprob: -5.778579235076904
    7. ' "' → logprob: -6.403579235076904
    8. ' '' → logprob: -8.028578758239746
    9. '"":' → logprob: -9.028578758239746
    10. ' ' → logprob: -10.528578758239746

Token 17: '0' (ID: 15)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.27528536319732666
    2. '"' → logprob: -2.150285243988037
    3. 'quit' → logprob: -2.525285243988037
    4. '":' → logprob: -3.525285243988037
    5. 'EXIT' → logprob: -5.525285243988037
    6. 'stop' → logprob: -6.025285243988037
    7. 'q' → logprob: -6.775285243988037
    8. '"):' → logprob: -6.900285243988037
    9. 'break' → logprob: -7.025285243988037
    10. 'end' → logprob: -7.025285243988037

Token 18: ' ' (ID: 220)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '":' → logprob: -0.007957935333251953
    2. '"' → logprob: -4.882957935333252
    3. '\n' → logprob: -8.382957458496094
    4. '":
' → logprob: -9.382957458496094
    5. ':' → logprob: -11.382957458496094
    6. '":
' → logprob: -11.382957458496094
    7. '"):' → logprob: -11.382957458496094
    8. ' ":' → logprob: -14.382957458496094
    9. '```' → logprob: -14.382957458496094
    10. '0' → logprob: -14.632957458496094

Token 19: '0' (ID: 15)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.1935333013534546
    2. '0' → logprob: -2.068533420562744
    3. '"' → logprob: -3.193533420562744
    4. ' ' → logprob: -4.943533420562744
    5. '\n' → logprob: -8.068532943725586
    6. '"):' → logprob: -8.193532943725586
    7. ' "' → logprob: -8.318532943725586
    8. '":
' → logprob: -8.318532943725586
    9. ' ":' → logprob: -9.068532943725586
    10. '":
' → logprob: -9.693532943725586

Token 20: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.0008740628836676478
    2. '"' → logprob: -7.250874042510986
    3. '\n' → logprob: -9.625874519348145
    4. '":
' → logprob: -9.750874519348145
    5. ':' → logprob: -10.875874519348145
    6. '":
' → logprob: -11.625874519348145
    7. '"):' → logprob: -12.125874519348145
    8. '\":' → logprob: -13.375874519348145
    9. ' ":' → logprob: -13.750874519348145
    10. '```' → logprob: -14.000874519348145

Token 21: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5313637852668762
    2. ':' → logprob: -0.9063637852668762
    3. '       ' → logprob: -5.7813639640808105
    4. '\n' → logprob: -6.2813639640808105
    5. ':
' → logprob: -6.2813639640808105
    6. ' break' → logprob: -7.7813639640808105
    7. '<|end|>' → logprob: -8.656363487243652
    8. '\' → logprob: -9.031363487243652
    9. ':return' → logprob: -9.031363487243652
    10. '
' → logprob: -9.281363487243652

Token 22: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14302009344100952
    2. ' break' → logprob: -2.1430201530456543
    3. 'break' (adapté à ' break') → logprob: -4.393020153045654
    4. '       ' → logprob: -5.643020153045654
    5. '	break' → logprob: -10.893019676208496
    6. '               ' → logprob: -11.768019676208496
    7. '```' → logprob: -11.893019676208496
    8. '   ' → logprob: -12.143019676208496
    9. '_break' → logprob: -12.393019676208496
    10. '\n' → logprob: -12.643019676208496

Token 23: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1062026396393776
    2. '
' → logprob: -2.8562026023864746
    3. '        
' → logprob: -3.6062026023864746
    4. '\n' → logprob: -4.856202602386475
    5. '<|end|>' → logprob: -6.106202602386475
    6. '   ' → logprob: -6.731202602386475
    7. '```' → logprob: -6.856202602386475
    8. '    
' → logprob: -6.856202602386475
    9. '' → logprob: -7.481202602386475
    10. '\' → logprob: -7.481202602386475

Token 24: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2589109241962433
    2. '
' → logprob: -2.883910894393921
    3. '<|end|>' → logprob: -2.883910894393921
    4. '\n' → logprob: -3.258910894393921
    5. '        
' → logprob: -3.383910894393921
    6. '   ' → logprob: -4.3839111328125
    7. '\' → logprob: -4.8839111328125
    8. '    
' → logprob: -5.2589111328125
    9. '```' → logprob: -5.7589111328125
    10. ')' → logprob: -5.8839111328125

Token 25: ' a' (ID: 261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11643251776695251
    2. '        
' → logprob: -3.1164324283599854
    3. ' ' → logprob: -4.3664326667785645
    4. '
' → logprob: -4.4914326667785645
    5. '\n' → logprob: -4.7414326667785645
    6. '        ' → logprob: -4.8664326667785645
    7. '<|end|>' → logprob: -5.1164326667785645
    8. '\' → logprob: -5.3664326667785645
    9. '```' → logprob: -6.1164326667785645
    10. ' 
' → logprob: -6.1164326667785645

Token 26: '0' (ID: 15)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013154702261090279
    2. ' ,' → logprob: -5.13815450668335
    3. '=' → logprob: -5.88815450668335
    4. ' =' → logprob: -6.13815450668335
    5. ',b' → logprob: -6.26315450668335
    6. '[' → logprob: -9.263154983520508
    7. 'r' → logprob: -10.138154983520508
    8. ',n' → logprob: -10.388154983520508
    9. ',r' → logprob: -10.388154983520508
    10. ',s' → logprob: -10.638154983520508

Token 27: '_str' (ID: 6182)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007396961096674204
    2. ' ,' → logprob: -5.757397174835205
    3. ' =' → logprob: -6.382397174835205
    4. '=' → logprob: -6.882397174835205
    5. '[' → logprob: -7.382397174835205
    6. '_' → logprob: -7.507397174835205
    7. ' ' → logprob: -8.632396697998047
    8. '_,' → logprob: -10.007396697998047
    9. ',a' → logprob: -10.757396697998047
    10. ')' → logprob: -11.132396697998047

Token 28: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4818933606147766
    2. '=' → logprob: -1.6068933010101318
    3. ',' → logprob: -1.7318933010101318
    4. ' ,' → logprob: -6.106893539428711
    5. ' ' → logprob: -6.606893539428711
    6. '[' → logprob: -7.356893539428711
    7. '_' → logprob: -8.231893539428711
    8. ')' → logprob: -9.481893539428711
    9. '    ' → logprob: -9.606893539428711
    10. '.' → logprob: -9.856893539428711

Token 29: ' L' (ID: 451)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3417305648326874
    2. 'line' → logprob: -2.2167305946350098
    3. ' a' → logprob: -2.8417305946350098
    4. ' ' → logprob: -3.2167305946350098
    5. ' line' → logprob: -3.3417305946350098
    6. '<|end|>' → logprob: -3.5917305946350098
    7. 'space' → logprob: -5.21673059463501
    8. '_' → logprob: -5.96673059463501
    9. '<|end|>' → logprob: -6.21673059463501
    10. '_a' → logprob: -6.71673059463501

Token 30: '_str' (ID: 6182)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6215941309928894
    2. ' =' → logprob: -1.4965941905975342
    3. ',' → logprob: -1.7465941905975342
    4. '_str' → logprob: -3.621594190597534
    5. 'ine' → logprob: -4.121593952178955
    6. 'a' → logprob: -4.996593952178955
    7. '0' → logprob: -5.496593952178955
    8. 'et' → logprob: -6.746593952178955
    9. 'en' → logprob: -6.746593952178955
    10. '_' → logprob: -6.996593952178955

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02745637483894825
    2. '=' → logprob: -3.652456283569336
    3. ',' → logprob: -6.777456283569336
    4. ' ,' → logprob: -11.402456283569336
    5. ' ' → logprob: -13.277456283569336
    6. ')' → logprob: -14.277456283569336
    7. '  ' → logprob: -15.027456283569336
    8. ' =
' → logprob: -15.152456283569336
    9. '    ' → logprob: -15.152456283569336
    10. ' =)' → logprob: -15.277456283569336

Token 32: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.004085878375917673
    2. 'line' → logprob: -5.504086017608643
    3. ' ' → logprob: -12.879085540771484
    4. '	line' → logprob: -13.129085540771484
    5. '=line' → logprob: -14.129085540771484
    6. '[line' → logprob: -14.254085540771484
    7. ' input' → logprob: -15.004085540771484
    8. ' map' → logprob: -15.254085540771484
    9. ' ' → logprob: -15.629085540771484
    10. ' lin' → logprob: -15.754085540771484

Token 33: '.split' (ID: 10347)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0319945812225342
    2. '=' → logprob: -1.0319945812225342
    3. '.split' → logprob: -1.2819945812225342
    4. ' =' → logprob: -4.656994819641113
    5. '.=' → logprob: -8.531994819641113
    6. 'split' → logprob: -9.531994819641113
    7. '.strip' → logprob: -9.656994819641113
    8. ',' → logprob: -10.406994819641113
    9. ' .' → logprob: -10.531994819641113
    10. ' split' → logprob: -11.031994819641113

Token 34: '()
' (ID: 1234)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.15461194515228271
    2. '("("' → logprob: -2.1546120643615723
    3. '()' → logprob: -4.029612064361572
    4. '(' → logprob: -4.779612064361572
    5. '("' → logprob: -6.904612064361572
    6. ''' → logprob: -9.529611587524414
    7. '('.')' → logprob: -11.404611587524414
    8. '(',' → logprob: -11.529611587524414
    9. '"' → logprob: -12.154611587524414
    10. '('(' → logprob: -12.404611587524414

Token 35: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7071781158447266
    2. '<|end|>' → logprob: -1.3321781158447266
    3. '
' → logprob: -2.2071781158447266
    4. '        
' → logprob: -2.8321781158447266
    5. ' ' → logprob: -3.5821781158447266
    6. '\' → logprob: -4.582178115844727
    7. '\n' → logprob: -4.582178115844727
    8. ' 
' → logprob: -5.457178115844727
    9. '<|end|>' → logprob: -5.457178115844727
    10. '    
' → logprob: -5.707178115844727

Token 36: ' L' (ID: 451)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.530767560005188
    2. '       ' → logprob: -1.780767560005188
    3. ' a' → logprob: -2.4057674407958984
    4. ' 
' → logprob: -2.5307674407958984
    5. '        
' → logprob: -3.6557674407958984
    6. ' ' → logprob: -3.9057674407958984
    7. '<|end|>' → logprob: -5.405767440795898
    8. '        ' → logprob: -5.780767440795898
    9. '   ' → logprob: -5.780767440795898
    10. '    
' → logprob: -5.905767440795898

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04386061057448387
    2. '=' → logprob: -3.418860673904419
    3. '_' → logprob: -4.66886043548584
    4. ' ' → logprob: -8.29386043548584
    5. '_str' → logprob: -8.91886043548584
    6. ')' → logprob: -9.16886043548584
    7. '_space' → logprob: -9.79386043548584
    8. '.' → logprob: -9.79386043548584
    9. ',' → logprob: -10.16886043548584
    10. ' +=' → logprob: -10.79386043548584

Token 38: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.12692831456661224
    2. ' int' → logprob: -2.1269283294677734
    3. 'float' → logprob: -15.876928329467773
    4. ' ' → logprob: -16.376928329467773
    5. '[int' → logprob: -17.001928329467773
    6. ' float' → logprob: -17.251928329467773
    7. '(int' → logprob: -17.751928329467773
    8. 'in' → logprob: -18.001928329467773
    9. '  ' → logprob: -18.126928329467773
    10. '=int' → logprob: -18.376928329467773

Token 39: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.5759549736976624
    2. '(' → logprob: -0.8259549736976624
    3. '(
' → logprob: -11.700955390930176
    4. '('' → logprob: -13.075955390930176
    5. '(

' → logprob: -13.325955390930176
    6. '(S' → logprob: -14.575955390930176
    7. ' (' → logprob: -14.575955390930176
    8. '(A' → logprob: -14.700955390930176
    9. '(Line' → logprob: -14.700955390930176
    10. '(I' → logprob: -15.450955390930176

Token 40: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0036262006033211946
    2. ')' → logprob: -5.628626346588135
    3. '_' → logprob: -11.378625869750977
    4. '_)' → logprob: -11.503625869750977
    5. ' )' → logprob: -13.128625869750977
    6. '_STR' → logprob: -14.753625869750977
    7. ')
' → logprob: -14.753625869750977
    8. 'str' → logprob: -14.753625869750977
    9. ')_' → logprob: -15.253625869750977
    10. '[' → logprob: -15.503625869750977

Token 41: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.8126592193730175e-05
    2. ')
' → logprob: -10.1250581741333
    3. ' )' → logprob: -12.0000581741333
    4. '+' → logprob: -12.6250581741333
    5. '       ' → logprob: -13.5000581741333
    6. '<|end|>' → logprob: -13.6250581741333
    7. ')#' → logprob: -13.7500581741333
    8. '   ' → logprob: -14.2500581741333
    9. '#' → logprob: -14.5000581741333
    10. ')return' → logprob: -14.6250581741333

Token 42: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: ' a' (ID: 261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3325391709804535
    2. '<|end|>' → logprob: -1.9575392007827759
    3. 'a' (adapté à ' a') → logprob: -2.8325390815734863
    4. ')' → logprob: -3.7075390815734863
    5. '```' → logprob: -4.082539081573486
    6. '
' → logprob: -4.457539081573486
    7. ',' → logprob: -4.707539081573486
    8. ' a' → logprob: -5.582539081573486
    9. '        
' → logprob: -5.707539081573486
    10. 'if' → logprob: -6.082539081573486

Token 44: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. '_' → logprob: -13.625001907348633
    3. '[' → logprob: -14.875001907348633
    4. ' ' → logprob: -16.500001907348633
    5. '۰' → logprob: -16.875001907348633
    6. '０' → logprob: -18.250001907348633
    7. ' =' → logprob: -19.875001907348633
    8. '٠' → logprob: -20.875001907348633
    9. '০' → logprob: -21.000001907348633
    10. '०' → logprob: -21.000001907348633

Token 45: ' =' (ID: 314)
  Prédit: '_str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.14401264488697052
    2. '_' → logprob: -2.019012689590454
    3. ' =' → logprob: -6.894012451171875
    4. '=' → logprob: -8.644012451171875
    5. '=_' → logprob: -10.394012451171875
    6. '_=' → logprob: -10.519012451171875
    7. '_s' → logprob: -10.644012451171875
    8. '_val' → logprob: -10.894012451171875
    9. ' _' → logprob: -11.644012451171875
    10. '_idx' → logprob: -11.644012451171875

Token 46: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.6345933079719543
    2. 'int' → logprob: -0.7595933079719543
    3. ' float' → logprob: -6.759593486785889
    4. 'float' → logprob: -7.134593486785889
    5. 'a' → logprob: -11.38459300994873
    6. '0' → logprob: -12.00959300994873
    7. '[int' → logprob: -12.13459300994873
    8. ' a' → logprob: -12.25959300994873
    9. ' ' → logprob: -12.75959300994873
    10. '(int' → logprob: -13.38459300994873

Token 47: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0015239100903272629
    2. '(' → logprob: -6.501523971557617
    3. '(_' → logprob: -11.376523971557617
    4. ' (' → logprob: -13.001523971557617
    5. '(A' → logprob: -13.001523971557617
    6. '((' → logprob: -13.126523971557617
    7. '("("' → logprob: -13.751523971557617
    8. '('' → logprob: -14.001523971557617
    9. '(`' → logprob: -14.876523971557617
    10. '(
' → logprob: -15.251523971557617

Token 48: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00041005798266269267
    2. '_str' → logprob: -7.875410079956055
    3. '_' → logprob: -11.125410079956055
    4. 'o' → logprob: -12.250410079956055
    5. ')' → logprob: -12.750410079956055
    6. 'O' → logprob: -13.500410079956055
    7. '۰' → logprob: -14.000410079956055
    8. '[' → logprob: -14.250410079956055
    9. 'str' → logprob: -14.250410079956055
    10. ' ' → logprob: -14.250410079956055

Token 49: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -1.759734732331708e-05
    2. ')' → logprob: -11.250017166137695
    3. 'str' → logprob: -12.750017166137695
    4. ')_' → logprob: -14.250017166137695
    5. '_)' → logprob: -15.250017166137695
    6. '_' → logprob: -15.625017166137695
    7. '[' → logprob: -16.375017166137695
    8. '```' → logprob: -16.625017166137695
    9. 'a' → logprob: -17.000017166137695
    10. '_s' → logprob: -17.000017166137695

Token 50: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.584239938296378e-06
    2. ')
' → logprob: -12.500007629394531
    3. ' )' → logprob: -13.375007629394531
    4. '+' → logprob: -14.375007629394531
    5. '))' → logprob: -15.250007629394531
    6. '   ' → logprob: -15.375007629394531
    7. '#' → logprob: -15.625007629394531
    8. ')#' → logprob: -15.625007629394531
    9. '*' → logprob: -15.875007629394531
    10. ')a' → logprob: -16.25000762939453

Token 51: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10780438780784607
    2. '<|end|>' → logprob: -2.732804298400879
    3. '        
' → logprob: -4.357804298400879
    4. '
' → logprob: -4.482804298400879
    5. ',' → logprob: -5.357804298400879
    6. '```' → logprob: -5.982804298400879
    7. ')' → logprob: -6.607804298400879
    8. '<|end|>' → logprob: -7.482804298400879
    9. '   ' → logprob: -8.107804298400879
    10. '[' → logprob: -8.232804298400879

Token 52: ' sequence' (ID: 16281)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1664753258228302
    2. 'n' → logprob: -2.916475296020508
    3. 'if' → logprob: -4.166475296020508
    4. 'i' → logprob: -4.541475296020508
    5. 'a' → logprob: -4.666475296020508
    6. '        
' → logprob: -4.916475296020508
    7. '#' → logprob: -5.291475296020508
    8. 's' → logprob: -5.541475296020508
    9. 'x' → logprob: -5.666475296020508
    10. '```' → logprob: -5.791475296020508

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01415340043604374
    2. '_' → logprob: -4.764153480529785
    3. '=' → logprob: -5.264153480529785
    4. 's' → logprob: -9.014153480529785
    5. '.append' → logprob: -9.639153480529785
    6. '[' → logprob: -9.889153480529785
    7. '=[]' → logprob: -10.264153480529785
    8. '[:]' → logprob: -10.389153480529785
    9. '.' → logprob: -11.014153480529785
    10. '[]' → logprob: -12.139153480529785

Token 54: ' []
' (ID: 8911)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.24062500894069672
    2. '[' → logprob: -1.740625023841858
    3. ' []' → logprob: -4.240624904632568
    4. '[a' → logprob: -4.365624904632568
    5. '[]' → logprob: -4.490624904632568
    6. '[int' → logprob: -10.740625381469727
    7. ' ' → logprob: -10.990625381469727
    8. '[n' → logprob: -11.365625381469727
    9. '[s' → logprob: -11.615625381469727
    10. '[i' → logprob: -11.740625381469727

Token 55: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5751606822013855
    2. '        ' → logprob: -1.9501607418060303
    3. '<|end|>' → logprob: -2.4501607418060303
    4. ' for' → logprob: -2.5751607418060303
    5. ' ' → logprob: -3.3251607418060303
    6. '        
' → logprob: -3.4501607418060303
    7. '    ' → logprob: -3.7001607418060303
    8. 'for' → logprob: -3.9501607418060303
    9. '\' → logprob: -5.950160503387451
    10. ' 
' → logprob: -6.075160503387451

Token 56: ' seen' (ID: 6177)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6535596251487732
    2. 'a' → logprob: -2.278559684753418
    3. 'for' → logprob: -2.278559684753418
    4. '       ' → logprob: -2.653559684753418
    5. ' a' → logprob: -2.903559684753418
    6. ' current' → logprob: -3.153559684753418
    7. 'current' → logprob: -3.778559684753418
    8. ' if' → logprob: -4.153559684753418
    9. 'n' → logprob: -4.528559684753418
    10. ' prev' → logprob: -4.653559684753418

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05381014198064804
    2. ' ' → logprob: -3.8038101196289062
    3. '<|end|>' → logprob: -3.8038101196289062
    4. '=' → logprob: -5.428810119628906
    5. '_' → logprob: -6.303810119628906
    6. '.setdefault' → logprob: -7.803810119628906
    7. ')' → logprob: -8.678810119628906
    8. '.add' → logprob: -8.928810119628906
    9. '[' → logprob: -9.053810119628906
    10. '<|end|>' → logprob: -9.178810119628906

Token 58: ' {}

' (ID: 21724)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.6872761249542236
    2. ' set' → logprob: -1.5622761249542236
    3. 'set' → logprob: -1.5622761249542236
    4. ' {}' → logprob: -2.5622761249542236
    5. '{' → logprob: -7.8122758865356445
    6. ' ' → logprob: -9.312275886535645
    7. ' {' → logprob: -9.687275886535645
    8. '	set' → logprob: -11.062275886535645
    9. ' []' → logprob: -12.312275886535645
    10. '   ' → logprob: -12.312275886535645

Token 59: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07162769138813019
    2. 'for' → logprob: -3.571627616882324
    3. ' for' → logprob: -4.071627616882324
    4. '<|end|>' → logprob: -4.071627616882324
    5. '        ' → logprob: -6.696627616882324
    6. '   ' → logprob: -7.196627616882324
    7. '        
' → logprob: -7.446627616882324
    8. 'i' → logprob: -7.446627616882324
    9. ' ' → logprob: -7.696627616882324
    10. 'index' → logprob: -7.821627616882324

Token 60: ' current' (ID: 2208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5050253868103027
    2. 'a' → logprob: -1.8800253868103027
    3. ' for' → logprob: -2.2550253868103027
    4. 'i' → logprob: -3.1300253868103027
    5. '       ' → logprob: -3.2550253868103027
    6. 'current' (adapté à ' current') → logprob: -3.8800253868103027
    7. 'while' → logprob: -4.255025386810303
    8. 'n' → logprob: -5.630025386810303
    9. '   ' → logprob: -5.630025386810303
    10. 'index' → logprob: -5.880025386810303

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1579088568687439
    2. '=' → logprob: -2.0329089164733887
    3. '_' → logprob: -5.157908916473389
    4. '_value' → logprob: -5.407908916473389
    5. '_token' → logprob: -5.782908916473389
    6. '_val' → logprob: -7.657908916473389
    7. '_number' → logprob: -7.907908916473389
    8. '_a' → logprob: -8.53290843963623
    9. '_sequence' → logprob: -9.28290843963623
    10. ' ' → logprob: -9.40790843963623

Token 62: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.16037878394126892
    2. ' a' → logprob: -1.9103788137435913
    3. '0' → logprob: -9.535378456115723
    4. '(a' → logprob: -10.535378456115723
    5. ' (' → logprob: -10.785378456115723
    6. ' ' → logprob: -10.785378456115723
    7. '(' → logprob: -12.035378456115723
    8. '   ' → logprob: -13.785378456115723
    9. ' current' → logprob: -13.785378456115723
    10. '	a' → logprob: -13.910378456115723

Token 63: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.334533878136426e-05
    2. '[' → logprob: -10.250042915344238
    3. '_' → logprob: -12.250042915344238
    4. ' ' → logprob: -13.875042915344238
    5. '[current' → logprob: -14.750042915344238
    6. '<|end|>' → logprob: -15.125042915344238
    7. '۰' → logprob: -15.250042915344238
    8. 'current' → logprob: -15.875042915344238
    9. '```' → logprob: -15.875042915344238
    10. '_sequence' → logprob: -16.250043869018555

Token 64: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 65: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.7815972566604614
    2. ' for' → logprob: -0.9065972566604614
    3. 'while' → logprob: -2.531597137451172
    4. ' while' → logprob: -3.156597137451172
    5. '       ' → logprob: -4.531597137451172
    6. 'if' → logprob: -6.156597137451172
    7. ' if' → logprob: -6.906597137451172
    8. '   ' → logprob: -7.281597137451172
    9. 'sequence' → logprob: -7.531597137451172
    10. ' sequence' → logprob: -7.781597137451172

Token 67: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.09274167567491531
    2. ' i' → logprob: -2.4677417278289795
    3. ' ' → logprob: -5.9677414894104
    4. '_' → logprob: -6.7177414894104
    5. 'i' → logprob: -11.092741966247559
    6. ' in' → logprob: -11.842741966247559
    7. '  ' → logprob: -14.217741966247559
    8. ' ' → logprob: -14.842741966247559
    9. ' ‌' → logprob: -14.967741966247559
    10. '_i' → logprob: -15.217741966247559

Token 68: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016306845471262932
    2. 'in' → logprob: -4.1413068771362305
    3. ' ' → logprob: -8.39130687713623
    4. '	in' → logprob: -11.51630687713623
    5. ',' → logprob: -11.64130687713623
    6. '0' → logprob: -12.26630687713623
    7. '<|end|>' → logprob: -12.26630687713623
    8. '  ' → logprob: -12.89130687713623
    9. ' ,' → logprob: -13.01630687713623
    10. ')' → logprob: -13.14130687713623

Token 69: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.01419064961373806
    2. 'range' → logprob: -4.264190673828125
    3. ' ' → logprob: -11.014190673828125
    4. '	range' → logprob: -11.889190673828125
    5. '(range' → logprob: -12.889190673828125
    6. ' xrange' → logprob: -14.639190673828125
    7. '  ' → logprob: -15.264190673828125
    8. '_range' → logprob: -16.014190673828125
    9. '   ' → logprob: -16.389190673828125
    10. '```' → logprob: -16.389190673828125

Token 70: '(' (ID: 7)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.3133096992969513
    2. '(' → logprob: -1.313309669494629
    3. ' (' → logprob: -10.313309669494629
    4. ' L' → logprob: -11.938309669494629
    5. '(
' → logprob: -12.563309669494629
    6. ')' → logprob: -13.688309669494629
    7. '()' → logprob: -14.438309669494629
    8. '	L' → logprob: -14.563309669494629
    9. '(len' → logprob: -14.688309669494629
    10. '(length' → logprob: -14.938309669494629

Token 71: '21' (ID: 2040)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0010844941716641188
    2. ' L' → logprob: -6.876084327697754
    3. '1' → logprob: -10.751084327697754
    4. '100' → logprob: -11.251084327697754
    5. '0' → logprob: -11.751084327697754
    6. '10' → logprob: -12.126084327697754
    7. '	L' → logprob: -13.376084327697754
    8. '20' → logprob: -14.751084327697754
    9. '(L' → logprob: -15.001084327697754
    10. '   ' → logprob: -15.126084327697754

Token 72: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003913714550435543
    2. '):
' → logprob: -5.753913879394531
    3. ':' → logprob: -7.503913879394531
    4. ' ):' → logprob: -8.753913879394531
    5. ')' → logprob: -11.878913879394531
    6. '():' → logprob: -12.003913879394531
    7. '   ' → logprob: -12.128913879394531
    8. '       ' → logprob: -13.128913879394531
    9. '):
' → logprob: -13.628913879394531
    10. ' :' → logprob: -13.628913879394531

Token 73: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7235081195831299
    2. '
' → logprob: -1.7235081195831299
    3. '           ' → logprob: -1.8485081195831299
    4. '<|end|>' → logprob: -1.8485081195831299
    5. '   ' → logprob: -5.348507881164551
    6. ':' → logprob: -5.598507881164551
    7. '<|end|>' → logprob: -5.723507881164551
    8. '        
' → logprob: -6.473507881164551
    9. '    
' → logprob: -6.598507881164551
    10. ':
' → logprob: -6.973507881164551

Token 75: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.021664049476385117
    2. '    ' → logprob: -4.521664142608643
    3. '        ' → logprob: -5.271664142608643
    4. ' 
' → logprob: -6.896664142608643
    5. '     
' → logprob: -7.146664142608643
    6. '<|end|>' → logprob: -7.146664142608643
    7. ' ' → logprob: -7.521664142608643
    8. 'sequence' → logprob: -7.896664142608643
    9. '            ' → logprob: -8.021663665771484
    10. ' sequence' → logprob: -8.271663665771484

Token 76: ' up' (ID: 869)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 77: ' to' (ID: 316)
  Prédit: 'date'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'date' → logprob: -0.9392374753952026
    2. 'p' → logprob: -1.0642374753952026
    3. 'dates' → logprob: -2.939237594604492
    4. 'per' → logprob: -3.314237594604492
    5. ' to' → logprob: -3.564237594604492
    6. ' ' → logprob: -3.939237594604492
    7. 'to' → logprob: -3.939237594604492
    8. ':' → logprob: -4.189237594604492
    9. '_' → logprob: -4.439237594604492
    10. '+' → logprob: -4.564237594604492

Token 78: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11530652642250061
    2. '20' → logprob: -2.2403066158294678
    3. '21' → logprob: -6.240306377410889
    4. '<|end|>' → logprob: -8.740306854248047
    5. ' and' → logprob: -8.865306854248047
    6. '19' → logprob: -9.615306854248047
    7. '22' → logprob: -10.365306854248047
    8. ' including' → logprob: -10.740306854248047
    9. '0' → logprob: -10.990306854248047
    10. 'inclusive' → logprob: -11.365306854248047

Token 79: '20' (ID: 455)
  Prédit: '20'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.025090554729104042
    2. ' ' → logprob: -3.900090456008911
    3. '21' → logprob: -5.40009069442749
    4. '19' → logprob: -12.025090217590332
    5. 'L' → logprob: -12.525090217590332
    6. '0' → logprob: -13.025090217590332
    7. '22' → logprob: -13.775090217590332
    8. '2' → logprob: -13.775090217590332
    9. 'range' → logprob: -13.775090217590332
    10. '1' → logprob: -13.900090217590332

Token 80: ' inclusive' (ID: 29482)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48660174012184143
    2. '<|end|>' → logprob: -1.986601710319519
    3. '       ' → logprob: -2.2366018295288086
    4. '
' → logprob: -2.4866018295288086
    5. ':
' → logprob: -3.7366018295288086
    6. ',' → logprob: -4.361601829528809
    7. '<|end|>' → logprob: -4.486601829528809
    8. '           ' → logprob: -5.611601829528809
    9. '   ' → logprob: -6.486601829528809
    10. ')' → logprob: -6.861601829528809

Token 81: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1783834844827652
    2. '<|end|>' → logprob: -2.3033835887908936
    3. '       ' → logprob: -3.6783835887908936
    4. ':
' → logprob: -4.3033833503723145
    5. '           ' → logprob: -4.4283833503723145
    6. '<|end|>' → logprob: -5.1783833503723145
    7. ',' → logprob: -5.3033833503723145
    8. '
' → logprob: -7.3033833503723145
    9. '):' → logprob: -8.428383827209473
    10. '   ' → logprob: -8.553383827209473

Token 82: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6758416891098022
    2. '<|end|>' → logprob: -1.3008416891098022
    3. '           ' → logprob: -1.8008416891098022
    4. '       ' → logprob: -3.675841808319092
    5. '<|end|>' → logprob: -3.925841808319092
    6. ':
' → logprob: -5.425841808319092
    7. ',' → logprob: -6.925841808319092
    8. '   ' → logprob: -7.550841808319092
    9. '        ' → logprob: -7.925841808319092
    10. '```' → logprob: -8.175841331481934

Token 83: ' #' (ID: 1069)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.27200788259506226
    2. ' if' → logprob: -2.022007942199707
    3. 'sequence' → logprob: -2.522007942199707
    4. '        ' → logprob: -5.272007942199707
    5. '           ' → logprob: -5.272007942199707
    6. ' ' → logprob: -5.522007942199707
    7. ' current' → logprob: -6.022007942199707
    8. '       ' → logprob: -6.397007942199707
    9. 'if' → logprob: -6.522007942199707
    10. '<|end|>' → logprob: -6.647007942199707

Token 84: ' format' (ID: 6011)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.7973229289054871
    2. ' sequence' → logprob: -1.2973229885101318
    3. ' if' → logprob: -1.5473229885101318
    4. 'if' → logprob: -2.922322988510132
    5. ' current' → logprob: -5.422322750091553
    6. 'current' → logprob: -6.172322750091553
    7. '           ' → logprob: -7.422322750091553
    8. 'token' → logprob: -8.172323226928711
    9. 'print' → logprob: -8.172323226928711
    10. 'seq' → logprob: -8.172323226928711

Token 85: ' current' (ID: 2208)
  Prédit: 'string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'string' → logprob: -1.4729105234146118
    2. '{' → logprob: -1.7229105234146118
    3. ' =' → logprob: -1.8479105234146118
    4. '_string' → logprob: -2.5979104042053223
    5. 'sequence' → logprob: -2.8479104042053223
    6. 'current' → logprob: -3.3479104042053223
    7. '```' → logprob: -3.4729104042053223
    8. ' string' → logprob: -3.4729104042053223
    9. ' sequence' → logprob: -3.5979104042053223
    10. '       ' → logprob: -3.7229104042053223

Token 86: ' with' (ID: 483)
  Prédit: '_str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.8311673998832703
    2. ' =' → logprob: -0.9561673998832703
    3. '=' → logprob: -3.206167459487915
    4. '{' → logprob: -3.331167459487915
    5. '_hex' → logprob: -4.206167221069336
    6. '_token' → logprob: -4.456167221069336
    7. '_' → logprob: -4.581167221069336
    8. '_sequence' → logprob: -4.706167221069336
    9. 'str' → logprob: -4.956167221069336
    10. 's' → logprob: -5.081167221069336

Token 87: ' leading' (ID: 8117)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.1086971759796143
    2. ' f' → logprob: -1.1086971759796143
    3. ' leading' → logprob: -1.4836971759796143
    4. 'leading' → logprob: -3.3586971759796143
    5. ''{' → logprob: -3.9836971759796143
    6. '"{' → logprob: -4.358696937561035
    7. ''' → logprob: -4.733696937561035
    8. ' ' → logprob: -4.983696937561035
    9. '{' → logprob: -5.233696937561035
    10. '06' → logprob: -5.733696937561035

Token 88: ' zeros' (ID: 42274)
  Prédit: ' zeros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zeros' → logprob: -0.6487305760383606
    2. 'zeros' → logprob: -1.0237305164337158
    3. '0' → logprob: -2.773730516433716
    4. '_' → logprob: -3.523730516433716
    5. 'spaces' → logprob: -4.648730754852295
    6. ' zero' → logprob: -5.148730754852295
    7. 'zero' → logprob: -5.273730754852295
    8. ' spaces' → logprob: -6.148730754852295
    9. '_zero' → logprob: -7.023730754852295
    10. ' ' → logprob: -7.398730754852295

Token 89: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6395875215530396
    2. '{' → logprob: -1.0145875215530396
    3. ',' → logprob: -4.13958740234375
    4. ':' → logprob: -4.26458740234375
    5. '<|end|>' → logprob: -4.26458740234375
    6. ' {' → logprob: -4.63958740234375
    7. 'current' → logprob: -4.88958740234375
    8. '       ' → logprob: -5.01458740234375
    9. '{:' → logprob: -5.26458740234375
    10. '<|end|>' → logprob: -5.26458740234375

Token 90: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12931177020072937
    2. '{' → logprob: -2.5043118000030518
    3. ',' → logprob: -5.004311561584473
    4. 'current' → logprob: -5.129311561584473
    5. ' current' → logprob: -5.129311561584473
    6. ' {' → logprob: -5.129311561584473
    7. '            
' → logprob: -6.254311561584473
    8. '{:' → logprob: -6.379311561584473
    9. '       ' → logprob: -6.629311561584473
    10. ' =' → logprob: -6.754311561584473

Token 91: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.9481781721115112
    2. ' current' → logprob: -1.0731781721115112
    3. 's' (adapté à ' s') → logprob: -2.073178291320801
    4. 'current' → logprob: -2.198178291320801
    5. ' formatted' → logprob: -4.573178291320801
    6. 'formatted' → logprob: -5.323178291320801
    7. '{' → logprob: -6.323178291320801
    8. 'num' → logprob: -6.323178291320801
    9. ' sequence' → logprob: -6.698178291320801
    10. ' f' → logprob: -6.698178291320801

Token 92: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01846877858042717
    2. '=' → logprob: -4.768468856811523
    3. 'tr' → logprob: -5.268468856811523
    4. 'tring' → logprob: -5.893468856811523
    5. '_current' → logprob: -6.643468856811523
    6. 'current' → logprob: -8.518468856811523
    7. ' ' → logprob: -9.018468856811523
    8. '=current' → logprob: -9.768468856811523
    9. 'trin' → logprob: -10.268468856811523
    10. '_' → logprob: -10.643468856811523

Token 93: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.1049540787935257
    2. 'f' → logprob: -2.4799540042877197
    3. 'str' → logprob: -4.729954242706299
    4. ' str' → logprob: -4.979954242706299
    5. '"{' → logprob: -9.22995376586914
    6. ' "{' → logprob: -9.85495376586914
    7. ' ' → logprob: -11.35495376586914
    8. ' format' → logprob: -11.85495376586914
    9. ''{' → logprob: -11.97995376586914
    10. 'format' → logprob: -12.22995376586914

Token 94: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.0011892797192558646
    2. ''{' → logprob: -6.751189231872559
    3. '"' → logprob: -11.001189231872559
    4. '{' → logprob: -13.126189231872559
    5. '("{' → logprob: -15.501189231872559
    6. '""' → logprob: -16.251190185546875
    7. ''' → logprob: -16.626190185546875
    8. '0' → logprob: -17.626190185546875
    9. '"${' → logprob: -18.001190185546875
    10. ' "{' → logprob: -18.376190185546875

Token 95: 'current' (ID: 5804)
  Prédit: 'current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.00020580526324920356
    2. '{' → logprob: -8.625205993652344
    3. ' current' → logprob: -10.750205993652344
    4. 'cur' → logprob: -12.875205993652344
    5. ':' → logprob: -14.250205993652344
    6. '0' → logprob: -14.625205993652344
    7. '000' → logprob: -15.250205993652344
    8. 's' → logprob: -16.125205993652344
    9. 'curr' → logprob: -16.250205993652344
    10. '}{' → logprob: -16.375205993652344

Token 96: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1041145626222715e-05
    2. '}"' → logprob: -12.375011444091797
    3. '0' → logprob: -13.375011444091797
    4. '```' → logprob: -13.875011444091797
    5. 'd' → logprob: -14.250011444091797
    6. ':d' → logprob: -14.375011444091797
    7. '}' → logprob: -15.062511444091797
    8. ':z' → logprob: -15.375011444091797
    9. ' :' → logprob: -15.500011444091797
    10. '**' → logprob: -15.625011444091797

Token 97: '0' (ID: 15)
  Prédit: '05'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '05' → logprob: -0.7957674860954285
    2. '0' → logprob: -1.6707675457000732
    3. '020' → logprob: -2.2957675457000732
    4. '021' → logprob: -2.2957675457000732
    5. '04' → logprob: -2.9207675457000732
    6. '06' → logprob: -3.2957675457000732
    7. '02' → logprob: -3.9207675457000732
    8. '07' → logprob: -4.170767307281494
    9. '010' → logprob: -4.295767307281494
    10. '08' → logprob: -5.045767307281494

Token 98: '{' (ID: 90)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.14759257435798645
    2. '4' → logprob: -3.022592544555664
    3. '6' → logprob: -3.647592544555664
    4. '21' → logprob: -3.772592544555664
    5. '7' → logprob: -4.022592544555664
    6. '{' → logprob: -5.147592544555664
    7. '20' → logprob: -5.147592544555664
    8. '8' → logprob: -5.272592544555664
    9. '10' → logprob: -6.397592544555664
    10. '2' → logprob: -7.147592544555664

Token 99: 'L' (ID: 43)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -0.613431990146637
    2. '4' → logprob: -1.4884319305419922
    3. '6' → logprob: -1.9884319305419922
    4. '8' → logprob: -3.613431930541992
    5. 'd' → logprob: -3.863431930541992
    6. '7' → logprob: -3.988431930541992
    7. '{' → logprob: -4.863431930541992
    8. '10' → logprob: -4.988431930541992
    9. '21' → logprob: -5.488431930541992
    10. '20' → logprob: -5.738431930541992

Token 100: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.02758116088807583
    2. 'd' → logprob: -3.902581214904785
    3. '}}"' → logprob: -5.027581214904785
    4. '}"' → logprob: -8.402581214904785
    5. '}}' → logprob: -8.652581214904785
    6. 'x' → logprob: -10.652581214904785
    7. ' }' → logprob: -12.277581214904785
    8. ' }}"' → logprob: -12.402581214904785
    9. '}}\' → logprob: -12.902581214904785
    10. '-' → logprob: -13.027581214904785

Token 101: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0023151186760514975
    2. '}' → logprob: -6.252315044403076
    3. '}"' → logprob: -8.002315521240234
    4. ' d' → logprob: -11.127315521240234
    5. 'x' → logprob: -11.752315521240234
    6. '}}"' → logprob: -11.877315521240234
    7. '"d' → logprob: -12.002315521240234
    8. '
' → logprob: -12.502315521240234
    9. '}"
' → logprob: -12.877315521240234
    10. '"' → logprob: -13.627315521240234

Token 102: '}"
' (ID: 26189)
  Prédit: '}"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}"' → logprob: -0.001723965280689299
    2. '}"
' → logprob: -6.376723766326904
    3. '}' → logprob: -11.626724243164062
    4. '}"

' → logprob: -12.376724243164062
    5. '"' → logprob: -12.876724243164062
    6. ')"' → logprob: -13.501724243164062
    7. ' }' → logprob: -13.501724243164062
    8. '}")' → logprob: -13.501724243164062
    9. '"}' → logprob: -14.126724243164062
    10. '}".' → logprob: -14.501724243164062

Token 103: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0659562349319458
    2. '<|end|>' → logprob: -1.0659562349319458
    3. '       ' → logprob: -1.5659562349319458
    4. ' if' → logprob: -3.3159561157226562
    5. 'sequence' → logprob: -3.8159561157226562
    6. '
' → logprob: -4.190956115722656
    7. '<|end|>' → logprob: -4.440956115722656
    8. ' sequence' → logprob: -5.440956115722656
    9. 'if' (adapté à ' if') → logprob: -5.565956115722656
    10. 'current' → logprob: -6.690956115722656

Token 105: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.10021184384822845
    2. 's' → logprob: -2.3502118587493896
    3. ' ' → logprob: -13.225212097167969
    4. '(s' → logprob: -13.975212097167969
    5. ' current' → logprob: -14.350212097167969
    6. ' not' → logprob: -14.850212097167969
    7. '```' → logprob: -15.350212097167969
    8. '	s' → logprob: -15.662712097167969
    9. ' seen' → logprob: -15.725212097167969
    10. ' ' → logprob: -16.16271209716797

Token 106: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001951826037839055
    2. 'in' → logprob: -6.501951694488525
    3. '<|end|>' → logprob: -8.126952171325684
    4. ' not' → logprob: -9.251952171325684
    5. '<|end|>' → logprob: -10.501952171325684
    6. ' ' → logprob: -11.001952171325684
    7. ')' → logprob: -11.626952171325684
    8. ']' → logprob: -13.001952171325684
    9. 'not' → logprob: -14.751952171325684
    10. ' )' → logprob: -15.126952171325684

Token 107: ' seen' (ID: 6177)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seen' → logprob: -0.4740801155567169
    2. ' seen' → logprob: -0.9740800857543945
    3. '   ' → logprob: -13.724080085754395
    4. '_seen' → logprob: -14.099080085754395
    5. 'se' → logprob: -14.599080085754395
    6. ' ' → logprob: -15.224080085754395
    7. '
' → logprob: -16.09908103942871
    8. '  ' → logprob: -16.53658103942871
    9. 's' → logprob: -16.66158103942871
    10. 'shown' → logprob: -17.09908103942871

Token 108: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010235205991193652
    2. ':
' → logprob: -7.126023292541504
    3. '):' → logprob: -8.751023292541504
    4. ' :' → logprob: -10.751023292541504
    5. '           ' → logprob: -11.626023292541504
    6. ':return' → logprob: -11.876023292541504
    7. ' and' → logprob: -12.376023292541504
    8. '():' → logprob: -12.626023292541504
    9. ']:' → logprob: -12.626023292541504
    10. '):
' → logprob: -12.751023292541504

Token 109: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.26322290301322937
    2. '           ' → logprob: -1.5132229328155518
    3. ':' → logprob: -4.638222694396973
    4. '<|end|>' → logprob: -7.263222694396973
    5. ':
' → logprob: -7.763222694396973
    6. '):' → logprob: -9.513222694396973
    7. '):
' → logprob: -9.513222694396973
    8. '<|end|>' → logprob: -9.888222694396973
    9. ' break' → logprob: -10.513222694396973
    10. ',' → logprob: -10.513222694396973

Token 110: ' j' (ID: 441)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12216417491436005
    2. ' break' → logprob: -2.247164249420166
    3. 'break' → logprob: -5.247164249420166
    4. '               ' → logprob: -5.747164249420166
    5. ' sequence' → logprob: -8.122163772583008
    6. 'print' → logprob: -9.247163772583008
    7. ' print' → logprob: -9.372163772583008
    8. ' return' → logprob: -9.747163772583008
    9. '                   ' → logprob: -9.872163772583008
    10. '       ' → logprob: -9.872163772583008

Token 111: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007111148443073034
    2. '=' → logprob: -5.257111072540283
    3. ',' → logprob: -6.757111072540283
    4. ' ' → logprob: -7.757111072540283
    5. '   ' → logprob: -8.757111549377441
    6. 'ex' → logprob: -10.757111549377441
    7. '    ' → logprob: -10.757111549377441
    8. '  ' → logprob: -10.882111549377441
    9. '     ' → logprob: -11.257111549377441
    10. 'dx' → logprob: -11.382111549377441

Token 112: ' seen' (ID: 6177)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seen' → logprob: -0.17975197732448578
    2. ' seen' → logprob: -1.804751992225647
    3. 's' → logprob: -12.929752349853516
    4. 'se' → logprob: -13.054752349853516
    5. 'shown' → logprob: -14.054752349853516
    6. 'see' → logprob: -14.679752349853516
    7. '           ' → logprob: -15.179752349853516
    8. ' s' → logprob: -15.429752349853516
    9. '               ' → logprob: -15.554752349853516
    10. '   ' → logprob: -16.054752349853516

Token 113: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -5.5577775128767826e-06
    2. 's' → logprob: -12.125005722045898
    3. '[' → logprob: -16.0000057220459
    4. '[
' → logprob: -17.5000057220459
    5. '{s' → logprob: -17.7500057220459
    6. ' s' → logprob: -18.6250057220459
    7. '

' → logprob: -18.8750057220459
    8. '[j' → logprob: -19.0000057220459
    9. '
' → logprob: -19.1250057220459
    10. '   ' → logprob: -19.2500057220459

Token 114: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006265181582421064
    2. '<|end|>' → logprob: -5.881265163421631
    3. '<|end|>' → logprob: -7.006265163421631
    4. ']+' → logprob: -7.006265163421631
    5. ' ]' → logprob: -7.506265163421631
    6. ']
' → logprob: -7.631265163421631
    7. '
' → logprob: -8.631265640258789
    8. ')' → logprob: -8.631265640258789
    9. ')]' → logprob: -9.506265640258789
    10. '               ' → logprob: -10.631265640258789

Token 115: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009059838484972715
    2. '<|end|>' → logprob: -7.500905990600586
    3. '           ' → logprob: -8.500905990600586
    4. '
' → logprob: -10.375905990600586
    5. ')' → logprob: -10.625905990600586
    6. '                
' → logprob: -11.125905990600586
    7. ' break' → logprob: -11.625905990600586
    8. '                   ' → logprob: -11.875905990600586
    9. ',' → logprob: -11.875905990600586
    10. 'return' → logprob: -12.125905990600586

Token 116: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8404108881950378
    2. ' cycle' → logprob: -1.3404109477996826
    3. 'print' → logprob: -2.3404109477996826
    4. 'cycle' → logprob: -2.4654109477996826
    5. 'length' → logprob: -3.3404109477996826
    6. ' length' → logprob: -3.9654109477996826
    7. ' print' → logprob: -4.3404107093811035
    8. ' sequence' → logprob: -4.4654107093811035
    9. 'start' → logprob: -4.5904107093811035
    10. 'period' → logprob: -4.5904107093811035

Token 117: ' output' (ID: 4733)
  Prédit: ' cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cycle' → logprob: -0.9672871828079224
    2. 'cycle' → logprob: -1.3422871828079224
    3. 'period' → logprob: -2.467287063598633
    4. 'print' → logprob: -2.967287063598633
    5. 'length' → logprob: -3.092287063598633
    6. 'loop' → logprob: -3.592287063598633
    7. '               ' → logprob: -3.967287063598633
    8. 'start' → logprob: -4.092287063598633
    9. ' loop' → logprob: -4.092287063598633
    10. ' length' → logprob: -4.342287063598633

Token 118: ':' (ID: 25)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7423368096351624
    2. 'print' → logprob: -0.7423368096351624
    3. ' print' → logprob: -4.242336750030518
    4. ' (' → logprob: -5.117336750030518
    5. '           ' → logprob: -5.367336750030518
    6. 'len' → logprob: -5.742336750030518
    7. 'sequence' → logprob: -5.742336750030518
    8. '(' → logprob: -6.117336750030518
    9. '                   ' → logprob: -6.242336750030518
    10. '       ' → logprob: -6.617336750030518

Token 119: ' j' (ID: 441)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2662663161754608
    2. ' print' → logprob: -2.391266345977783
    3. 'len' → logprob: -3.391266345977783
    4. ' i' → logprob: -3.766266345977783
    5. 'i' → logprob: -3.891266345977783
    6. 'j' → logprob: -4.141266345977783
    7. ' f' → logprob: -4.516266345977783
    8. ' (' → logprob: -4.766266345977783
    9. ' len' → logprob: -5.266266345977783
    10. 'f' → logprob: -5.516266345977783

Token 120: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 121: ' a' (ID: 261)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.007055149879306555
    2. 'len' → logprob: -5.882055282592773
    3. '20' → logprob: -5.882055282592773
    4. ' i' → logprob: -7.382055282592773
    5. '21' → logprob: -8.132055282592773
    6. 'print' → logprob: -9.257055282592773
    7. '(i' → logprob: -9.507055282592773
    8. 'j' → logprob: -9.632055282592773
    9. 'end' → logprob: -10.132055282592773
    10. ' ' → logprob: -10.257055282592773

Token 122: '_i' (ID: 10853)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6491089463233948
    2. 'i' → logprob: -0.8991089463233948
    3. 'j' → logprob: -3.64910888671875
    4. 'b' → logprob: -3.89910888671875
    5. 's' → logprob: -4.77410888671875
    6. 'current' → logprob: -5.89910888671875
    7. 'l' → logprob: -6.39910888671875
    8. '[i' → logprob: -6.52410888671875
    9. 'n' → logprob: -6.52410888671875
    10. 'a' → logprob: -6.77410888671875

Token 123: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9333646297454834
    2. '               ' → logprob: -1.1833646297454834
    3. '           ' → logprob: -1.9333646297454834
    4. ')' → logprob: -3.3083646297454834
    5. '
' → logprob: -3.6833646297454834
    6. 'print' → logprob: -3.8083646297454834
    7. ',
' → logprob: -3.8083646297454834
    8. '<|end|>' → logprob: -4.1833648681640625
    9. '       ' → logprob: -4.6833648681640625
    10. ')
' → logprob: -5.3083648681640625

Token 124: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09721040725708008
    2. ' i' → logprob: -3.09721040725708
    3. '20' → logprob: -4.34721040725708
    4. 'len' → logprob: -4.84721040725708
    5. 'j' → logprob: -4.97221040725708
    6. 'current' → logprob: -5.72221040725708
    7. 'a' → logprob: -6.09721040725708
    8. ' ' → logprob: -6.59721040725708
    9. '0' → logprob: -6.78471040725708
    10. 'sequence' → logprob: -6.84721040725708

Token 125: '-j' (ID: 19720)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30790162086486816
    2. '<|end|>' → logprob: -1.4329016208648682
    3. '
' → logprob: -4.807901382446289
    4. '<|end|>' → logprob: -4.932901382446289
    5. ',
' → logprob: -5.307901382446289
    6. ')' → logprob: -6.432901382446289
    7. '           ' → logprob: -7.557901382446289
    8. ' ' → logprob: -7.557901382446289
    9. '               ' → logprob: -7.932901382446289
    10. ' ,' → logprob: -8.057901382446289

Token 126: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9913602471351624
    2. '               ' → logprob: -1.4913601875305176
    3. 'print' → logprob: -2.2413601875305176
    4. ')' → logprob: -2.2413601875305176
    5. ',
' → logprob: -2.6163601875305176
    6. '           ' → logprob: -3.4913601875305176
    7. '\n' → logprob: -3.8663601875305176
    8. '
' → logprob: -4.366360187530518
    9. ')
' → logprob: -4.366360187530518
    10. '(
' → logprob: -5.116360187530518

Token 127: '               ' (ID: 506)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7356687188148499
    2. '               ' → logprob: -1.610668659210205
    3. '
' → logprob: -1.985668659210205
    4. '           ' → logprob: -3.360668659210205
    5. ',
' → logprob: -3.360668659210205
    6. ')' → logprob: -3.485668659210205
    7. '<|end|>' → logprob: -3.735668659210205
    8. 'print' → logprob: -4.110668659210205
    9. '       ' → logprob: -4.610668659210205
    10. '\n' → logprob: -4.860668659210205

Token 128: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.41656196117401123
    2. ' print' → logprob: -1.1665619611740112
    3. '
' → logprob: -3.916562080383301
    4. '               ' → logprob: -5.541562080383301
    5. ' return' → logprob: -5.791562080383301
    6. 'return' → logprob: -7.041562080383301
    7. '```' → logprob: -7.541562080383301
    8. ',' → logprob: -8.6665620803833
    9. '                   ' → logprob: -9.4165620803833
    10. '           ' → logprob: -9.5415620803833

Token 129: ' suppress' (ID: 36382)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3921792209148407
    2. ' print' → logprob: -1.142179250717163
    3. ' a' → logprob: -6.892179012298584
    4. '               ' → logprob: -6.892179012298584
    5. 'return' → logprob: -7.017179012298584
    6. 'a' → logprob: -7.267179012298584
    7. ' break' → logprob: -7.642179012298584
    8. ' return' → logprob: -7.642179012298584
    9. '   ' → logprob: -9.017179489135742
    10. '                   ' → logprob: -9.142179489135742

Token 130: ' leading' (ID: 8117)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5215864181518555
    2. 'print' → logprob: -2.1465864181518555
    3. ' continue' → logprob: -2.2715864181518555
    4. '<|end|>' → logprob: -3.2715864181518555
    5. '           ' → logprob: -3.8965864181518555
    6. ' the' → logprob: -4.2715864181518555
    7. '       ' → logprob: -4.3965864181518555
    8. 'inue' → logprob: -4.7715864181518555
    9. ' ' → logprob: -5.0215864181518555
    10. '        ' → logprob: -5.5215864181518555

Token 131: ' zeros' (ID: 42274)
  Prédit: ' zeros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zeros' → logprob: -0.7453566789627075
    2. '0' → logprob: -0.9953566789627075
    3. 'zeros' → logprob: -2.620356559753418
    4. ' ' → logprob: -2.620356559753418
    5. ' zero' → logprob: -5.620356559753418
    6. 'zero' → logprob: -5.620356559753418
    7. 'print' → logprob: -6.745356559753418
    8. ' spaces' → logprob: -7.495356559753418
    9. 'space' → logprob: -8.120356559753418
    10. 'spaces' → logprob: -8.245356559753418

Token 132: ' by' (ID: 656)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17064645886421204
    2. '               ' → logprob: -3.1706464290618896
    3. 'print' → logprob: -3.2956464290618896
    4. '<|end|>' → logprob: -3.5456464290618896
    5. ',' → logprob: -3.9206464290618896
    6. '           ' → logprob: -4.795646667480469
    7. '\n' → logprob: -5.545646667480469
    8. ')' → logprob: -5.670646667480469
    9. ',
' → logprob: -5.795646667480469
    10. '       ' → logprob: -6.295646667480469

Token 133: ' converting' (ID: 55111)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10362128913402557
    2. 'int' → logprob: -2.853621244430542
    3. 'str' → logprob: -3.853621244430542
    4. ' print' → logprob: -4.478621482849121
    5. ' int' → logprob: -5.728621482849121
    6. ' str' → logprob: -6.978621482849121
    7. 'strip' → logprob: -7.103621482849121
    8. ' stripping' → logprob: -7.353621482849121
    9. ' converting' → logprob: -7.603621482849121
    10. '
' → logprob: -7.728621482849121

Token 134: ' to' (ID: 316)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16519653797149658
    2. 'to' → logprob: -2.790196418762207
    3. ' to' → logprob: -3.165196418762207
    4. 's' → logprob: -3.665196418762207
    5. 'str' → logprob: -4.665196418762207
    6. ' int' → logprob: -5.165196418762207
    7. '[int' → logprob: -6.415196418762207
    8. '(int' → logprob: -6.665196418762207
    9. 'sequence' → logprob: -7.165196418762207
    10. '=int' → logprob: -7.415196418762207

Token 135: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0005212200339883566
    2. ' int' → logprob: -7.875521183013916
    3. 'str' → logprob: -8.875521659851074
    4. '```' → logprob: -14.125521659851074
    5. ' str' → logprob: -16.000520706176758
    6. '<int' → logprob: -16.125520706176758
    7. '=int' → logprob: -16.375520706176758
    8. '
' → logprob: -16.750520706176758
    9. '[int' → logprob: -16.875520706176758
    10. 'ints' → logprob: -17.125520706176758

Token 136: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.43501806259155273
    2. '
' → logprob: -2.0600180625915527
    3. ',' → logprob: -2.4350180625915527
    4. ')' → logprob: -2.8100180625915527
    5. ',
' → logprob: -3.5600180625915527
    6. 'print' → logprob: -4.435018062591553
    7. '<|end|>' → logprob: -4.685018062591553
    8. ')
' → logprob: -5.060018062591553
    9. '           ' → logprob: -5.560018062591553
    10. '                               ' → logprob: -6.060018062591553

Token 137: '               ' (ID: 506)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.5766839981079102
    2. ')' → logprob: -1.7016839981079102
    3. ',' → logprob: -2.32668399810791
    4. 's' → logprob: -2.32668399810791
    5. '               ' → logprob: -2.45168399810791
    6. '()' → logprob: -2.45168399810791
    7. '(' → logprob: -3.45168399810791
    8. '(s' → logprob: -3.45168399810791
    9. '(
' → logprob: -3.57668399810791
    10. ' s' → logprob: -4.07668399810791

Token 138: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.18521974980831146
    2. ' print' → logprob: -1.8102197647094727
    3. 'a' → logprob: -6.310219764709473
    4. '               ' → logprob: -6.560219764709473
    5. ' a' → logprob: -6.935219764709473
    6. '
' → logprob: -7.435219764709473
    7. ' ai' → logprob: -9.560219764709473
    8. 'ai' → logprob: -10.060219764709473
    9. 'prev' → logprob: -10.060219764709473
    10. 'num' → logprob: -10.185219764709473

Token 139: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.11211686581373215
    2. '(f' → logprob: -2.612116813659668
    3. '(' → logprob: -3.737116813659668
    4. '(int' → logprob: -5.112116813659668
    5. '((' → logprob: -6.612116813659668
    6. '("' → logprob: -7.237116813659668
    7. '(i' → logprob: -7.737116813659668
    8. '()' → logprob: -8.737116813659668
    9. '('' → logprob: -9.862116813659668
    10. 'int' → logprob: -9.862116813659668

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013434555381536484
    2. ',int' → logprob: -4.638434410095215
    3. ' ,' → logprob: -6.013434410095215
    4. 'int' → logprob: -7.888434410095215
    5. ',end' → logprob: -8.138434410095215
    6. ',
' → logprob: -8.763434410095215
    7. ',",' → logprob: -9.513434410095215
    8. '),' → logprob: -9.638434410095215
    9. ')' → logprob: -9.763434410095215
    10. ',s' → logprob: -9.888434410095215

Token 141: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.001327499165199697
    2. ' int' → logprob: -6.6263275146484375
    3. ',int' → logprob: -15.001327514648438
    4. 'current' → logprob: -15.251327514648438
    5. '[int' → logprob: -15.376327514648438
    6. '
' → logprob: -15.501327514648438
    7. '   ' → logprob: -15.626327514648438
    8. '(int' → logprob: -15.626327514648438
    9. '<int' → logprob: -15.751327514648438
    10. ' ' → logprob: -17.376327514648438

Token 142: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.006128345150500536
    2. 's' → logprob: -5.131128311157227
    3. '(a' → logprob: -8.881128311157227
    4. 'a' → logprob: -10.381128311157227
    5. '(sequence' → logprob: -11.256128311157227
    6. '(' → logprob: -11.756128311157227
    7. 'sequence' → logprob: -12.631128311157227
    8. '(current' → logprob: -12.631128311157227
    9. ')' → logprob: -14.381128311157227
    10. 'current' → logprob: -14.756128311157227

Token 143: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0004086275293957442
    2. ')' → logprob: -7.87540864944458
    3. ' ),' → logprob: -11.250408172607422
    4. '))' → logprob: -12.000408172607422
    5. ')),' → logprob: -13.500408172607422
    6. '[j' → logprob: -13.625408172607422
    7. '[' → logprob: -13.625408172607422
    8. ',' → logprob: -13.875408172607422
    9. '),(' → logprob: -14.125408172607422
    10. ',),' → logprob: -14.375408172607422

Token 144: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11285105347633362
    2. ' i' → logprob: -2.237851142883301
    3. ' ' → logprob: -11.3628511428833
    4. '   ' → logprob: -12.2378511428833
    5. '(i' → logprob: -12.9878511428833
    6. ')' → logprob: -13.2378511428833
    7. '  ' → logprob: -13.4878511428833
    8. '    ' → logprob: -13.9878511428833
    9. '
' → logprob: -14.2378511428833
    10. ',i' → logprob: -14.3628511428833

Token 145: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6362435221672058
    2. ' -' → logprob: -1.3862435817718506
    3. '-j' → logprob: -1.5112435817718506
    4. ')' → logprob: -10.63624382019043
    5. ' ' → logprob: -10.88624382019043
    6. ',' → logprob: -11.38624382019043
    7. '-js' → logprob: -12.38624382019043
    8. '   ' → logprob: -13.38624382019043
    9. '-i' → logprob: -13.51124382019043
    10. '-J' → logprob: -13.63624382019043

Token 146: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00010902655776590109
    2. ' j' → logprob: -9.12510871887207
    3. '<|end|>' → logprob: -16.12510871887207
    4. '_j' → logprob: -18.12510871887207
    5. '$j' → logprob: -18.37510871887207
    6. '	j' → logprob: -18.37510871887207
    7. '
' → logprob: -18.87510871887207
    8. ' ' → logprob: -19.12510871887207
    9. '1' → logprob: -20.00010871887207
    10. '```' → logprob: -20.50010871887207

Token 147: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2520425021648407
    2. ')
' → logprob: -1.502042531967163
    3. '           ' → logprob: -10.127042770385742
    4. ')
' → logprob: -10.252042770385742
    5. '               ' → logprob: -11.127042770385742
    6. ')

' → logprob: -12.252042770385742
    7. '       ' → logprob: -12.377042770385742
    8. ')`
' → logprob: -12.502042770385742
    9. ' )' → logprob: -12.877042770385742
    10. '")' → logprob: -13.127042770385742

Token 148: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006813380168750882
    2. '           ' → logprob: -7.500681400299072
    3. 'return' → logprob: -9.500680923461914
    4. '                   ' → logprob: -11.500680923461914
    5. ' return' → logprob: -12.000680923461914
    6. '
' → logprob: -12.000680923461914
    7. '                
' → logprob: -12.125680923461914
    8. 'break' → logprob: -12.500680923461914
    9. ')' → logprob: -12.625680923461914
    10. '   ' → logprob: -12.750680923461914

Token 149: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2734765410423279
    2. 'break' (adapté à ' break') → logprob: -2.2734766006469727
    3. '           ' → logprob: -2.5234766006469727
    4. 'return' → logprob: -3.0234766006469727
    5. ' break' → logprob: -5.023476600646973
    6. ' return' → logprob: -7.148476600646973
    7. ' ' → logprob: -10.273476600646973
    8. '
' → logprob: -10.648476600646973
    9. '       ' → logprob: -10.898476600646973
    10. '            
' → logprob: -11.273476600646973

Token 150: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0025927771348506212
    2. '
' → logprob: -6.50259256362915
    3. '       ' → logprob: -7.50259256362915
    4. '            
' → logprob: -8.252593040466309
    5. 'else' → logprob: -8.877593040466309
    6. '```' → logprob: -10.627593040466309
    7. '        
' → logprob: -11.252593040466309
    8. '          ' → logprob: -11.377593040466309
    9. '               ' → logprob: -11.377593040466309
    10. 's' → logprob: -11.502593040466309

Token 151: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00039730319986119866
    2. 'else' → logprob: -8.375397682189941
    3. '       ' → logprob: -9.625397682189941
    4. '```' → logprob: -9.875397682189941
    5. '
' → logprob: -10.625397682189941
    6. '            
' → logprob: -11.500397682189941
    7. '   ' → logprob: -12.375397682189941
    8. 'seen' → logprob: -13.125397682189941
    9. '               ' → logprob: -13.375397682189941
    10. '          ' → logprob: -13.625397682189941

Token 152: ' seen' (ID: 6177)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17067047953605652
    2. 'seen' (adapté à ' seen') → logprob: -2.295670509338379
    3. 'else' → logprob: -3.295670509338379
    4. ' seen' → logprob: -4.295670509338379
    5. '           ' → logprob: -5.920670509338379
    6. '
' → logprob: -6.670670509338379
    7. ' else' → logprob: -7.170670509338379
    8. '        
' → logprob: -8.295670509338379
    9. '```' → logprob: -8.920670509338379
    10. '   ' → logprob: -9.045670509338379

Token 153: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -1.4021237802808173e-05
    2. '[' → logprob: -11.625014305114746
    3. 's' → logprob: -12.375014305114746
    4. '[S' → logprob: -15.625014305114746
    5. '[f' → logprob: -16.00001335144043
    6. ' [' → logprob: -16.37501335144043
    7. '
' → logprob: -16.62501335144043
    8. '

' → logprob: -16.87501335144043
    9. '=s' → logprob: -17.37501335144043
    10. '[c' → logprob: -17.37501335144043

Token 154: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000820230518002063
    2. ']=' → logprob: -7.375820159912109
    3. '=' → logprob: -8.87582015991211
    4. ' =' → logprob: -9.87582015991211
    5. ' ]' → logprob: -13.00082015991211
    6. ')' → logprob: -15.50082015991211
    7. ']={' → logprob: -18.25082015991211
    8. ']=(' → logprob: -18.50082015991211
    9. '=s' → logprob: -18.75082015991211
    10. ',' → logprob: -19.00082015991211

Token 155: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196891888976097
    2. ' =' → logprob: -2.8119688034057617
    3. ']' → logprob: -15.061968803405762
    4. '=s' → logprob: -15.061968803405762
    5. '[' → logprob: -15.686968803405762
    6. ']=' → logprob: -15.811968803405762
    7. ')' → logprob: -16.561969757080078
    8. '＝' → logprob: -17.436969757080078
    9. '=

' → logprob: -17.561969757080078
    10. ')=' → logprob: -17.811969757080078

Token 156: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00033546582562848926
    2. ' i' → logprob: -8.000335693359375
    3. '	i' → logprob: -18.250335693359375
    4. '<|end|>' → logprob: -19.250335693359375
    5. ' ' → logprob: -19.750335693359375
    6. '{i' → logprob: -20.500335693359375
    7. '_i' → logprob: -21.000335693359375
    8. ')i' → logprob: -21.500335693359375
    9. '*i' → logprob: -22.250335693359375
    10. '[i' → logprob: -22.250335693359375

Token 157: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10710184276103973
    2. 'current' → logprob: -3.4821019172668457
    3. ' current' → logprob: -3.6071019172668457
    4. '   ' → logprob: -3.8571019172668457
    5. '           ' → logprob: -5.482101917266846
    6. '        
' → logprob: -5.482101917266846
    7. ' next' → logprob: -6.107101917266846
    8. 'else' → logprob: -6.232101917266846
    9. '
' → logprob: -6.357101917266846
    10. '    
' → logprob: -6.482101917266846

Token 158: '           ' (ID: 352)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.4346713125705719
    2. '       ' → logprob: -1.6846712827682495
    3. '           ' → logprob: -2.559671401977539
    4. ' current' → logprob: -3.434671401977539
    5. 'next' → logprob: -3.684671401977539
    6. '   ' → logprob: -4.684671401977539
    7. 'else' → logprob: -4.934671401977539
    8. '```' → logprob: -5.309671401977539
    9. ' next' → logprob: -5.684671401977539
    10. '#' → logprob: -6.184671401977539

Token 159: ' sequence' (ID: 16281)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.41883063316345215
    2. 'current' → logprob: -1.5438306331634521
    3. 'digits' → logprob: -3.293830633163452
    4. 'sum' → logprob: -3.543830633163452
    5. 'total' → logprob: -3.793830633163452
    6. 's' → logprob: -4.918830871582031
    7. 'sq' → logprob: -5.168830871582031
    8. '#' → logprob: -5.168830871582031
    9. 'square' → logprob: -5.168830871582031
    10. 'temp' → logprob: -5.918830871582031

Token 160: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.008017071522772312
    2. '.' → logprob: -5.008017063140869
    3. '=' → logprob: -6.758017063140869
    4. ' =' → logprob: -9.258017539978027
    5. 'append' → logprob: -11.008017539978027
    6. ' .' → logprob: -11.383017539978027
    7. ',' → logprob: -12.133017539978027
    8. '.app' → logprob: -12.258017539978027
    9. '.=' → logprob: -13.633017539978027
    10. '.ap' → logprob: -13.758017539978027

Token 161: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.017074719071388245
    2. 'current' → logprob: -4.2670745849609375
    3. '(int' → logprob: -6.2670745849609375
    4. '(s' → logprob: -7.0170745849609375
    5. 'int' → logprob: -9.642074584960938
    6. 's' → logprob: -11.017074584960938
    7. '(' → logprob: -11.017074584960938
    8. ' current' → logprob: -11.517074584960938
    9. '(cur' → logprob: -13.642074584960938
    10. '(str' → logprob: -14.392074584960938

Token 162: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.21569181978702545
    2. ')' → logprob: -1.7156918048858643
    3. 'current' → logprob: -5.465692043304443
    4. '**' → logprob: -5.715692043304443
    5. ' )
' → logprob: -6.215692043304443
    6. '
' → logprob: -6.965692043304443
    7. '(current' → logprob: -7.090692043304443
    8. ' current' → logprob: -7.840692043304443
    9. ' )' → logprob: -8.090691566467285
    10. '%' → logprob: -8.465691566467285

Token 163: '           ' (ID: 352)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.649325430393219
    2. 'next' → logprob: -1.5243253707885742
    3. '=' → logprob: -2.024325370788574
    4. '#' → logprob: -3.774325370788574
    5. 's' → logprob: -4.024325370788574
    6. '            
' → logprob: -4.024325370788574
    7. '           ' → logprob: -4.024325370788574
    8. 'square' → logprob: -4.399325370788574
    9. '```' → logprob: -5.274325370788574
    10. 'temp' → logprob: -5.774325370788574

Token 164: ' #' (ID: 1069)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.6923060417175293
    2. 'next' → logprob: -0.8173060417175293
    3. 'square' → logprob: -4.067306041717529
    4. 's' → logprob: -4.442306041717529
    5. '#' (adapté à ' #') → logprob: -4.942306041717529
    6. 'sq' → logprob: -5.317306041717529
    7. 'temp' → logprob: -6.067306041717529
    8. 'pow' → logprob: -6.067306041717529
    9. 'digits' → logprob: -6.067306041717529
    10. 'new' → logprob: -6.192306041717529

Token 165: ' compute' (ID: 23864)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.7233256697654724
    2. 'current' → logprob: -1.4733257293701172
    3. 's' → logprob: -2.098325729370117
    4. 'digits' → logprob: -2.598325729370117
    5. 'square' → logprob: -3.598325729370117
    6. 'sq' → logprob: -4.098325729370117
    7. '#' → logprob: -4.473325729370117
    8. 'sum' → logprob: -4.723325729370117
    9. 'new' → logprob: -4.848325729370117
    10. 'total' → logprob: -6.223325729370117

Token 166: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.07812649011611938
    2. 'sum' → logprob: -3.3281264305114746
    3. 'current' → logprob: -3.8281264305114746
    4. 'square' → logprob: -5.203126430511475
    5. ' next' → logprob: -5.578126430511475
    6. 's' → logprob: -6.203126430511475
    7. 'sq' → logprob: -6.328126430511475
    8. 'new' → logprob: -6.578126430511475
    9. 'digits' → logprob: -7.078126430511475
    10. 'curr' → logprob: -8.203126907348633

Token 167: '
' (ID: 198)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.7197612524032593
    2. 'next' → logprob: -1.7197612524032593
    3. '=' → logprob: -1.8447612524032593
    4. 'sum' → logprob: -3.469761371612549
    5. ' =' → logprob: -3.844761371612549
    6. 's' → logprob: -4.094761371612549
    7. 'str' → logprob: -4.219761371612549
    8. '_str' → logprob: -4.344761371612549
    9. '_val' → logprob: -4.594761371612549
    10. 'digits' → logprob: -4.594761371612549

Token 168: '           ' (ID: 352)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.1780548095703125
    2. ' =' → logprob: -2.5530548095703125
    3. '=' → logprob: -3.0530548095703125
    4. 's' → logprob: -3.9280548095703125
    5. ' current' → logprob: -5.8030548095703125
    6. 'str' → logprob: -5.8030548095703125
    7. 'num' → logprob: -6.0530548095703125
    8. 'next' → logprob: -6.1780548095703125
    9. 'token' → logprob: -6.4280548095703125
    10. '_current' → logprob: -7.1780548095703125

Token 169: ' digits' (ID: 37806)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.06964349746704102
    2. 'current' → logprob: -3.444643497467041
    3. 's' → logprob: -4.194643497467041
    4. 'digits' (adapté à ' digits') → logprob: -4.819643497467041
    5. 'total' → logprob: -5.569643497467041
    6. 'sum' → logprob: -6.069643497467041
    7. 'square' → logprob: -6.194643497467041
    8. 'sq' → logprob: -6.694643497467041
    9. 'temp' → logprob: -7.444643497467041
    10. 'curr' → logprob: -7.694643497467041

Token 170: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10029972344636917
    2. '=' → logprob: -2.350299835205078
    3. 's' → logprob: -10.475299835205078
    4. ' =[' → logprob: -11.475299835205078
    5. '=[' → logprob: -11.600299835205078
    6. ' ' → logprob: -11.725299835205078
    7. '_digits' → logprob: -11.850299835205078
    8. '_squared' → logprob: -11.975299835205078
    9. '_str' → logprob: -12.100299835205078
    10. 'digits' → logprob: -13.225299835205078

Token 171: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5746222734451294
    2. '[int' → logprob: -1.8246222734451294
    3. '[list' → logprob: -1.8246222734451294
    4. ' [' → logprob: -1.9496222734451294
    5. 'sorted' → logprob: -2.32462215423584
    6. '[s' → logprob: -2.44962215423584
    7. 'list' → logprob: -2.57462215423584
    8. '[str' → logprob: -3.07462215423584
    9. ' list' → logprob: -5.07462215423584
    10. '[len' → logprob: -5.57462215423584

Token 172: '(s' (ID: 1858)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.1669304072856903
    2. '(s' → logprob: -1.9169304370880127
    3. '(str' → logprob: -5.166930198669434
    4. '(int' → logprob: -7.666930198669434
    5. '(f' → logprob: -8.666930198669434
    6. '(' → logprob: -8.916930198669434
    7. 'map' → logprob: -9.041930198669434
    8. 's' → logprob: -9.916930198669434
    9. '(range' → logprob: -10.791930198669434
    10. '(re' → logprob: -12.666930198669434

Token 173: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001894841087050736
    2. '[::-' → logprob: -6.501894950866699
    3. ')
' → logprob: -8.3768949508667
    4. '))' → logprob: -9.3768949508667
    5. ' )' → logprob: -9.7518949508667
    6. '[' → logprob: -12.1268949508667
    7. ')[' → logprob: -12.5018949508667
    8. ')

' → logprob: -12.7518949508667
    9. ')))' → logprob: -13.0018949508667
    10. ')`' → logprob: -14.6268949508667

Token 174: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2235037088394165
    2. '           ' → logprob: -1.2235037088394165
    3. '[::-' → logprob: -1.5985037088394165
    4. 'd' → logprob: -3.098503589630127
    5. '**' → logprob: -3.723503589630127
    6. '=' → logprob: -3.723503589630127
    7. ')' → logprob: -4.223503589630127
    8. ' =' → logprob: -4.348503589630127
    9. '   ' → logprob: -4.598503589630127
    10. '[' → logprob: -4.723503589630127

Token 175: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' (adapté à ' digits') → logprob: -0.18519943952560425
    2. 'd' → logprob: -3.185199499130249
    3. 's' → logprob: -3.185199499130249
    4. 'next' → logprob: -3.310199499130249
    5. ' digits' → logprob: -4.56019926071167
    6. 'sum' → logprob: -4.93519926071167
    7. '           ' → logprob: -5.18519926071167
    8. 'total' → logprob: -5.56019926071167
    9. 'sorted' → logprob: -6.06019926071167
    10. '       ' → logprob: -6.06019926071167

Token 176: '_sorted' (ID: 104993)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.12042750418186188
    2. '=' → logprob: -2.2454276084899902
    3. ' =' → logprob: -5.24542760848999
    4. '.reverse' → logprob: -6.24542760848999
    5. '_sorted' → logprob: -9.120427131652832
    6. 'sort' → logprob: -9.370427131652832
    7. '.' → logprob: -9.620427131652832
    8. '.pop' → logprob: -11.120427131652832
    9. '[::-' → logprob: -11.245427131652832
    10. 'sorted' → logprob: -11.370427131652832

Token 177: '_desc' (ID: 26683)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012544969096779823
    2. ' =' → logprob: -4.512545108795166
    3. '_' → logprob: -7.512545108795166
    4. '_=' → logprob: -7.762545108795166
    5. '()' → logprob: -8.887544631958008
    6. 'asc' → logprob: -9.762544631958008
    7. '_digits' → logprob: -9.887544631958008
    8. '(' → logprob: -10.012544631958008
    9. '_sorted' → logprob: -10.012544631958008
    10. '=d' → logprob: -10.512544631958008

Token 178: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14270532131195068
    2. ' =' → logprob: -2.0177054405212402
    3. '=d' → logprob: -11.517704963684082
    4. 'd' → logprob: -11.892704963684082
    5. ')' → logprob: -12.892704963684082
    6. 'sorted' → logprob: -13.142704963684082
    7. '<|end|>' → logprob: -13.142704963684082
    8. '=[]' → logprob: -13.517704963684082
    9. ' ' → logprob: -13.767704963684082
    10. ']' → logprob: -14.392704963684082

Token 179: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.0031793788075447083
    2. ' sorted' → logprob: -5.753179550170898
    3. '(sorted' → logprob: -13.753179550170898
    4. ' ' → logprob: -15.628179550170898
    5. '   ' → logprob: -15.753179550170898
    6. 'sort' → logprob: -16.1281795501709
    7. '.sorted' → logprob: -16.7531795501709
    8. '  ' → logprob: -17.1281795501709
    9. 's' → logprob: -18.1281795501709
    10. '['' → logprob: -18.3781795501709

Token 180: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -4.3464544432936236e-05
    2. '(' → logprob: -10.125043869018555
    3. 'digits' → logprob: -13.000043869018555
    4. '(
' → logprob: -14.500043869018555
    5. ' (' → logprob: -15.375043869018555
    6. 'd' → logprob: -15.875043869018555
    7. ',d' → logprob: -17.125043869018555
    8. ' digits' → logprob: -17.125043869018555
    9. '(reverse' → logprob: -18.125043869018555
    10. '((' → logprob: -18.250043869018555

Token 181: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.0002614550176076591
    2. 'digits' → logprob: -8.375261306762695
    3. 'igts' → logprob: -11.125261306762695
    4. '(d' → logprob: -11.625261306762695
    5. ' digits' → logprob: -13.250261306762695
    6. 'ig' → logprob: -13.500261306762695
    7. ')' → logprob: -13.750261306762695
    8. '[' → logprob: -14.000261306762695
    9. '```' → logprob: -14.500261306762695
    10. '_digits' → logprob: -14.875261306762695

Token 182: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014716439181938767
    2. ' ,' → logprob: -9.375146865844727
    3. 'reverse' → logprob: -9.875146865844727
    4. '(reverse' → logprob: -12.375146865844727
    5. '(),' → logprob: -12.875146865844727
    6. ',
' → logprob: -14.000146865844727
    7. ')' → logprob: -14.125146865844727
    8. ',de' → logprob: -14.250146865844727
    9. ' reverse' → logprob: -15.125146865844727
    10. ',d' → logprob: -15.250146865844727

Token 183: ' reverse' (ID: 18199)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.00861669983714819
    2. ' reverse' → logprob: -4.758616924285889
    3. '(reverse' → logprob: -13.25861644744873
    4. 'True' → logprob: -15.00861644744873
    5. '.reverse' → logprob: -17.133617401123047
    6. '_reverse' → logprob: -17.883617401123047
    7. 'Reverse' → logprob: -18.383617401123047
    8. ' True' → logprob: -18.883617401123047
    9. '
' → logprob: -19.133617401123047
    10. '   ' → logprob: -19.133617401123047

Token 184: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.00012880703434348106
    2. '=' → logprob: -9.000128746032715
    3. ')' → logprob: -12.750128746032715
    4. ')=' → logprob: -14.125128746032715
    5. '<|end|>' → logprob: -14.250128746032715
    6. '(True' → logprob: -14.500128746032715
    7. '=False' → logprob: -15.625128746032715
    8. 'True' → logprob: -15.875128746032715
    9. '=
' → logprob: -16.12512969970703
    10. ' =' → logprob: -16.50012969970703

Token 185: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003213960910215974
    2. ')
' → logprob: -5.753213882446289
    3. ' )' → logprob: -10.753213882446289
    4. '           ' → logprob: -11.753213882446289
    5. '       ' → logprob: -13.253213882446289
    6. ')

' → logprob: -13.253213882446289
    7. '<|end|>' → logprob: -13.878213882446289
    8. ' )
' → logprob: -14.253213882446289
    9. ')
' → logprob: -15.253213882446289
    10. '))' → logprob: -15.378213882446289

Token 186: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 187: ' digits' (ID: 37806)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' (adapté à ' digits') → logprob: -0.17336547374725342
    2. '           ' → logprob: -1.9233654737472534
    3. ' digits' → logprob: -5.673365592956543
    4. 'd' → logprob: -5.798365592956543
    5. 'k' → logprob: -6.298365592956543
    6. 'K' → logprob: -6.673365592956543
    7. 'x' → logprob: -7.423365592956543
    8. 'xd' → logprob: -8.173365592956543
    9. 'r' → logprob: -8.673365592956543
    10. 'n' → logprob: -8.798365592956543

Token 188: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.0001438266917830333
    2. '=' → logprob: -10.000144004821777
    3. 'sorted' → logprob: -10.000144004821777
    4. '_' → logprob: -10.750144004821777
    5. ' =' → logprob: -11.250144004821777
    6. '_str' → logprob: -11.750144004821777
    7. '_desc' → logprob: -12.875144004821777
    8. '_s' → logprob: -13.000144004821777
    9. '_=' → logprob: -13.375144004821777
    10. 'Sorted' → logprob: -14.000144004821777

Token 189: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004642660729587078
    2. 'asc' → logprob: -5.379642486572266
    3. '_desc' → logprob: -12.004642486572266
    4. 'Asc' → logprob: -13.254642486572266
    5. '_ASC' → logprob: -13.254642486572266
    6. '_=' → logprob: -13.504642486572266
    7. '=' → logprob: -13.504642486572266
    8. '_sorted' → logprob: -13.504642486572266
    9. '_ac' → logprob: -13.754642486572266
    10. ' asc' → logprob: -13.879642486572266

Token 190: 'asc' (ID: 7400)
  Prédit: 'asc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asc' → logprob: -1.3782830137643032e-05
    2. 'True' → logprob: -11.25001335144043
    3. 'desc' → logprob: -15.00001335144043
    4. ' asc' → logprob: -15.25001335144043
    5. 'Asc' → logprob: -16.62501335144043
    6. 'true' → logprob: -17.25001335144043
    7. ' True' → logprob: -17.50001335144043
    8. '.asc' → logprob: -17.87501335144043
    9. 'ascending' → logprob: -18.12501335144043
    10. '```' → logprob: -18.25001335144043

Token 191: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868745267391205
    2. ' =' → logprob: -1.1368745565414429
    3. 'd' → logprob: -13.886874198913574
    4. ' ' → logprob: -14.136874198913574
    5. '           ' → logprob: -14.386874198913574
    6. '=
' → logprob: -15.386874198913574
    7. '=d' → logprob: -15.636874198913574
    8. '   ' → logprob: -15.761874198913574
    9. '＝' → logprob: -16.01187515258789
    10. '       ' → logprob: -16.13687515258789

Token 192: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.1798301637172699
    2. ' sorted' → logprob: -1.8048301935195923
    3. '(sorted' → logprob: -9.679830551147461
    4. ' ' → logprob: -11.054830551147461
    5. '.sorted' → logprob: -13.054830551147461
    6. '   ' → logprob: -13.304830551147461
    7. '  ' → logprob: -14.054830551147461
    8. '    ' → logprob: -14.554830551147461
    9. 'orted' → logprob: -14.679830551147461
    10. '_sorted' → logprob: -15.617330551147461

Token 193: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -7.3458322731312364e-06
    2. '(' → logprob: -12.125007629394531
    3. 'digits' → logprob: -13.250007629394531
    4. 'd' → logprob: -16.37500762939453
    5. '(
' → logprob: -17.00000762939453
    6. ' (' → logprob: -17.62500762939453
    7. ' digits' → logprob: -18.00000762939453
    8. '(de' → logprob: -18.12500762939453
    9. ',d' → logprob: -18.37500762939453
    10. ')' → logprob: -19.37500762939453

Token 194: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.43136414885520935
    2. 'digits' → logprob: -1.0563641786575317
    3. '(d' → logprob: -6.181364059448242
    4. 'd' → logprob: -8.056364059448242
    5. ')' → logprob: -8.556364059448242
    6. ' digits' → logprob: -10.681364059448242
    7. 'igts' → logprob: -10.806364059448242
    8. ')
' → logprob: -12.181364059448242
    9. '),' → logprob: -12.806364059448242
    10. ')d' → logprob: -12.806364059448242

Token 195: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06774746626615524
    2. '(d' → logprob: -2.8177473545074463
    3. 'digits' → logprob: -5.692747592926025
    4. 'd' → logprob: -7.442747592926025
    5. '())' → logprob: -7.817747592926025
    6. ',' → logprob: -7.942747592926025
    7. ')
' → logprob: -8.192747116088867
    8. ')d' → logprob: -8.567747116088867
    9. ',d' → logprob: -8.692747116088867
    10. '(' → logprob: -9.317747116088867

Token 196: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 197: ' max' (ID: 2999)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3128618597984314
    2. 'xd' → logprob: -2.687861919403076
    3. 'X' → logprob: -2.937861919403076
    4. 'g' → logprob: -3.187861919403076
    5. 'max' (adapté à ' max') → logprob: -3.437861919403076
    6. 'desc' → logprob: -3.812861919403076
    7. 'num' → logprob: -4.437861919403076
    8. 'b' → logprob: -5.062861919403076
    9. 'big' → logprob: -5.562861919403076
    10. 'Xd' → logprob: -5.937861919403076

Token 198: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.08608013391494751
    2. '_val' → logprob: -2.5860800743103027
    3. '_' → logprob: -5.836080074310303
    4. '_str' → logprob: -6.336080074310303
    5. '_number' → logprob: -7.086080074310303
    6. 'num' → logprob: -7.211080074310303
    7. '_value' → logprob: -7.711080074310303
    8. '_n' → logprob: -8.461080551147461
    9. 'n' → logprob: -9.461080551147461
    10. '_s' → logprob: -9.711080551147461

Token 199: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.575951337814331
    2. '=' → logprob: -0.825951337814331
    3. '=int' → logprob: -12.07595157623291
    4. ' ' → logprob: -13.20095157623291
    5. 'token' → logprob: -13.95095157623291
    6. '<|end|>' → logprob: -14.20095157623291
    7. ',' → logprob: -14.57595157623291
    8. ')' → logprob: -14.95095157623291
    9. '_token' → logprob: -15.07595157623291
    10. 's' → logprob: -15.20095157623291

Token 200: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00043126524542458355
    2. ' int' → logprob: -7.750431060791016
    3. '[int' → logprob: -15.500431060791016
    4. '   ' → logprob: -16.125431060791016
    5. '           ' → logprob: -16.750431060791016
    6. '<int' → logprob: -17.000431060791016
    7. '(int' → logprob: -17.125431060791016
    8. '	int' → logprob: -17.125431060791016
    9. '=int' → logprob: -18.750431060791016
    10. '
' → logprob: -19.250431060791016

Token 201: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.04878663271665573
    2. '('' → logprob: -3.0487866401672363
    3. '(' → logprob: -8.548786163330078
    4. '"' → logprob: -12.548786163330078
    5. '(("' → logprob: -14.548786163330078
    6. '(
' → logprob: -14.673786163330078
    7. '(""' → logprob: -14.798786163330078
    8. '''.' → logprob: -14.923786163330078
    9. ' ("' → logprob: -16.298786163330078
    10. ' "".' → logprob: -16.673786163330078

Token 202: '".' (ID: 4050)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10062694549560547
    2. '''.' → logprob: -2.3506269454956055
    3. '".' → logprob: -7.9756269454956055
    4. '("' → logprob: -10.350626945495605
    5. '""' → logprob: -11.225626945495605
    6. '('' → logprob: -11.600626945495605
    7. ' "".' → logprob: -12.225626945495605
    8. '{"' → logprob: -12.350626945495605
    9. '```' → logprob: -12.350626945495605
    10. '''' → logprob: -13.225626945495605

Token 203: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -2.1008713702030946e-06
    2. ' join' → logprob: -13.875001907348633
    3. '''.' → logprob: -14.750001907348633
    4. 'j' → logprob: -15.125001907348633
    5. '.' → logprob: -15.500001907348633
    6. '".' → logprob: -16.625001907348633
    7. '.join' → logprob: -16.625001907348633
    8. '"' → logprob: -17.500001907348633
    9. 'jo' → logprob: -17.625001907348633
    10. '```' → logprob: -17.750001907348633

Token 204: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.012752373702824116
    2. 'digits' → logprob: -4.387752532958984
    3. 'd' → logprob: -8.637752532958984
    4. ')' → logprob: -10.137752532958984
    5. '[d' → logprob: -11.512752532958984
    6. ' digits' → logprob: -11.887752532958984
    7. '(' → logprob: -12.512752532958984
    8. '           ' → logprob: -13.637752532958984
    9. ')d' → logprob: -14.387752532958984
    10. '[' → logprob: -14.512752532958984

Token 205: 'igits' (ID: 64824)
  Prédit: 'igits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igits' → logprob: -0.011948289349675179
    2. 'digits' → logprob: -4.511948108673096
    3. 'igts' → logprob: -7.886948108673096
    4. 'g' → logprob: -8.761948585510254
    5. 'its' → logprob: -8.761948585510254
    6. 'd' → logprob: -9.136948585510254
    7. 'ig' → logprob: -10.386948585510254
    8. ' digits' → logprob: -10.761948585510254
    9. '_digits' → logprob: -11.261948585510254
    10. 'i' → logprob: -11.886948585510254

Token 206: '_sorted' (ID: 104993)
  Prédit: '_sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -5.438573680294212e-06
    2. ')' → logprob: -13.250005722045898
    3. 'sorted' → logprob: -13.250005722045898
    4. '_desc' → logprob: -14.000005722045898
    5. '[::-' → logprob: -15.000005722045898
    6. '))' → logprob: -15.500005722045898
    7. '[' → logprob: -15.875005722045898
    8. '_s' → logprob: -16.1250057220459
    9. '(sorted' → logprob: -16.1250057220459
    10. 'Sorted' → logprob: -16.2500057220459

Token 207: '_desc' (ID: 26683)
  Prédit: 'desc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'desc' → logprob: -0.03808509185910225
    2. '_desc' → logprob: -3.2880849838256836
    3. 'descending' → logprob: -10.913084983825684
    4. ')' → logprob: -12.163084983825684
    5. '-desc' → logprob: -12.163084983825684
    6. '	desc' → logprob: -12.288084983825684
    7. ' desc' → logprob: -12.288084983825684
    8. 'Desc' → logprob: -13.913084983825684
    9. '   ' → logprob: -14.163084983825684
    10. '
' → logprob: -14.288084983825684

Token 208: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.18059243261814117
    2. '))' → logprob: -1.80559241771698
    3. ')' → logprob: -7.3055925369262695
    4. ' ))
' → logprob: -10.05559253692627
    5. '))

' → logprob: -10.30559253692627
    6. '"))
' → logprob: -10.43059253692627
    7. ')
' → logprob: -10.55559253692627
    8. '))
' → logprob: -10.55559253692627
    9. ' ))' → logprob: -12.30559253692627
    10. '"))' → logprob: -12.43059253692627

Token 209: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009937642142176628
    2. ')' → logprob: -5.384937763214111
    3. '<|end|>' → logprob: -5.759937763214111
    4. ',' → logprob: -6.759937763214111
    5. ' max' → logprob: -7.884937763214111
    6. '            
' → logprob: -8.384937286376953
    7. '
' → logprob: -9.884937286376953
    8. '            ' → logprob: -10.009937286376953
    9. '<|end|>' → logprob: -10.134937286376953
    10. ' 
' → logprob: -10.384937286376953

Token 210: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.03772986680269241
    2. '           ' → logprob: -3.7877299785614014
    3. ' min' → logprob: -4.287729740142822
    4. '[min' → logprob: -8.53773021697998
    5. '(min' → logprob: -9.03773021697998
    6. '            
' → logprob: -9.28773021697998
    7. '	min' → logprob: -9.91273021697998
    8. '-min' → logprob: -10.03773021697998
    9. '
' → logprob: -10.28773021697998
    10. 'max' → logprob: -10.91273021697998

Token 211: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -1.8670179997570813e-05
    2. '_' → logprob: -11.250019073486328
    3. 'num' → logprob: -12.625019073486328
    4. '_val' → logprob: -13.750019073486328
    5. '_str' → logprob: -15.875019073486328
    6. '_NUM' → logprob: -16.000019073486328
    7. ' _' → logprob: -16.000019073486328
    8. '_Num' → logprob: -16.000019073486328
    9. '```' → logprob: -16.250019073486328
    10. 'Num' → logprob: -16.250019073486328

Token 212: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141880214214325
    2. '=' → logprob: -1.7014187574386597
    3. '=int' → logprob: -12.20141887664795
    4. ' ' → logprob: -15.07641887664795
    5. 'int' → logprob: -15.82641887664795
    6. ')' → logprob: -16.326417922973633
    7. ' =
' → logprob: -17.201417922973633
    8. '=
' → logprob: -18.326417922973633
    9. ',' → logprob: -18.576417922973633
    10. ' ' → logprob: -18.826417922973633

Token 213: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.003178071230649948
    2. ' int' → logprob: -5.753178119659424
    3. '(int' → logprob: -15.128177642822266
    4. '[int' → logprob: -16.753177642822266
    5. '=int' → logprob: -17.003177642822266
    6. '<int' → logprob: -17.128177642822266
    7. '	int' → logprob: -19.128177642822266
    8. ':int' → logprob: -19.253177642822266
    9. '           ' → logprob: -20.003177642822266
    10. '
' → logprob: -20.628177642822266

Token 214: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0016739914426580071
    2. '(' → logprob: -6.501674175262451
    3. '("("' → logprob: -9.001673698425293
    4. '"' → logprob: -10.251673698425293
    5. '(""' → logprob: -11.501673698425293
    6. '(
' → logprob: -14.001673698425293
    7. '("")' → logprob: -14.876673698425293
    8. '(""+' → logprob: -14.876673698425293
    9. '(("' → logprob: -15.126673698425293
    10. '("="' → logprob: -15.251673698425293

Token 215: '".' (ID: 4050)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0002478694950696081
    2. ' "".' → logprob: -9.375247955322266
    3. '''.' → logprob: -9.375247955322266
    4. '""' → logprob: -9.500247955322266
    5. '("' → logprob: -14.125247955322266
    6. '">' → logprob: -14.375247955322266
    7. '",".' → logprob: -14.875247955322266
    8. 'int' → logprob: -15.625247955322266
    9. '".' → logprob: -15.750247955322266
    10. '"os' → logprob: -16.000247955322266

Token 216: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.47412747144699097
    2. '"' → logprob: -0.974127471446991
    3. '.join' → logprob: -10.724127769470215
    4. '''.' → logprob: -11.974127769470215
    5. ' "".' → logprob: -12.474127769470215
    6. '(join' → logprob: -12.724127769470215
    7. '""' → logprob: -12.849127769470215
    8. '```' → logprob: -12.974127769470215
    9. '("' → logprob: -13.224127769470215
    10. '")' → logprob: -13.349127769470215

Token 217: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -5.776898251497187e-05
    2. 'digits' → logprob: -9.8750581741333
    3. ' (' → logprob: -12.7500581741333
    4. 'd' → logprob: -12.8750581741333
    5. '(' → logprob: -14.7500581741333
    6. '("' → logprob: -15.3750581741333
    7. ' digits' → logprob: -16.500057220458984
    8. ')' → logprob: -17.250057220458984
    9. ')(' → logprob: -17.750057220458984
    10. '(("' → logprob: -18.000057220458984

Token 218: 'igits' (ID: 64824)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.1439054012298584
    2. 'igits' → logprob: -2.1439054012298584
    3. '(d' → logprob: -4.1439056396484375
    4. 'd' → logprob: -7.0189056396484375
    5. 'g' → logprob: -10.518905639648438
    6. ' digits' → logprob: -11.393905639648438
    7. ')' → logprob: -11.768905639648438
    8. '[d' → logprob: -11.893905639648438
    9. 's' → logprob: -12.768905639648438
    10. '"' → logprob: -12.893905639648438

Token 219: '_sorted' (ID: 104993)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7128489017486572
    2. 'asc' → logprob: -0.9628489017486572
    3. 'digits' → logprob: -2.8378489017486572
    4. '_sorted' → logprob: -3.4628489017486572
    5. '(' → logprob: -3.8378489017486572
    6. 'sorted' → logprob: -4.462848663330078
    7. '(d' → logprob: -6.337848663330078
    8. '(sorted' → logprob: -6.712848663330078
    9. '_desc' → logprob: -7.712848663330078
    10. ')' → logprob: -7.712848663330078

Token 220: '_' (ID: 62)
  Prédit: 'asc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asc' → logprob: -0.00010306637705070898
    2. 'desc' → logprob: -9.500102996826172
    3. '_' → logprob: -11.250102996826172
    4. '(' → logprob: -12.000102996826172
    5. 'digits' → logprob: -12.375102996826172
    6. ' asc' → logprob: -12.875102996826172
    7. 'd' → logprob: -15.000102996826172
    8. 'Asc' → logprob: -15.000102996826172
    9. '_desc' → logprob: -15.500102996826172
    10. '   ' → logprob: -15.500102996826172

Token 221: 'asc' (ID: 7400)
  Prédit: 'asc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asc' → logprob: -2.8325677703833207e-05
    2. 'desc' → logprob: -10.500028610229492
    3. ' asc' → logprob: -14.125028610229492
    4. 'esc' → logprob: -17.375028610229492
    5. 'asp' → logprob: -18.000028610229492
    6. 'Asc' → logprob: -19.500028610229492
    7. '.asc' → logprob: -19.625028610229492
    8. ')' → logprob: -21.625028610229492
    9. 'arr' → logprob: -22.125028610229492
    10. 'acs' → logprob: -22.375028610229492

Token 222: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.01722131483256817
    2. ')' → logprob: -4.767221450805664
    3. '))
' → logprob: -4.767221450805664
    4. '"))' → logprob: -10.017221450805664
    5. ')
' → logprob: -11.517221450805664
    6. ')))' → logprob: -12.142221450805664
    7. '           ' → logprob: -12.767221450805664
    8. ')")' → logprob: -14.267221450805664
    9. '")' → logprob: -14.392221450805664
    10. '))
' → logprob: -14.642221450805664

Token 223: '           ' (ID: 352)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4288861155509949
    2. 'current' → logprob: -2.1788861751556396
    3. '<|end|>' → logprob: -2.3038861751556396
    4. '           ' → logprob: -2.9288861751556396
    5. ' current' → logprob: -3.8038861751556396
    6. '
' → logprob: -4.1788859367370605
    7. '       ' → logprob: -4.6788859367370605
    8. '            
' → logprob: -4.8038859367370605
    9. ')' → logprob: -5.4288859367370605
    10. 'newline' → logprob: -6.1788859367370605

Token 224: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.03191547840833664
    2. ' current' → logprob: -3.5319154262542725
    3. 'next' → logprob: -6.531915664672852
    4. '
' → logprob: -7.906915664672852
    5. '           ' → logprob: -8.406915664672852
    6. ' next' → logprob: -9.906915664672852
    7. '=current' → logprob: -10.781915664672852
    8. '            
' → logprob: -11.031915664672852
    9. ',current' → logprob: -12.281915664672852
    10. '[current' → logprob: -12.281915664672852

Token 225: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019286326132714748
    2. ' =' → logprob: -6.251928806304932
    3. '-=' → logprob: -18.626928329467773
    4. ' -=' → logprob: -19.126928329467773
    5. '＝' → logprob: -19.376928329467773
    6. '+=' → logprob: -19.876928329467773
    7. '=}' → logprob: -20.626928329467773
    8. '.=' → logprob: -21.001928329467773
    9. '<' → logprob: -21.251928329467773
    10. ')' → logprob: -21.626928329467773

Token 226: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.008616581559181213
    2. ' max' → logprob: -4.7586164474487305
    3. '(max' → logprob: -13.13361644744873
    4. '[max' → logprob: -17.258617401123047
    5. '   ' → logprob: -17.508617401123047
    6. '	max' → logprob: -17.633617401123047
    7. 'str' → logprob: -18.008617401123047
    8. ' ' → logprob: -18.008617401123047
    9. '
' → logprob: -19.508617401123047
    10. ',max' → logprob: -19.508617401123047

Token 227: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -9.849109119386412e-06
    2. 'num' → logprob: -11.875009536743164
    3. '(max' → logprob: -14.000009536743164
    4. '(current' → logprob: -14.500009536743164
    5. '(' → logprob: -14.750009536743164
    6. 'Num' → logprob: -14.875009536743164
    7. '(num' → logprob: -15.375009536743164
    8. 'current' → logprob: -15.625009536743164
    9. '_max' → logprob: -16.500009536743164
    10. '```' → logprob: -16.875009536743164

Token 228: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10021012276411057
    2. '-' → logprob: -2.350210189819336
    3. '-min' → logprob: -12.725210189819336
    4. ' ' → logprob: -15.850210189819336
    5. ' ' → logprob: -16.600210189819336
    6. '-current' → logprob: -16.600210189819336
    7. ' minus' → logprob: -16.850210189819336
    8. ' -
' → logprob: -17.225210189819336
    9. '-
' → logprob: -17.600210189819336
    10. '   ' → logprob: -18.225210189819336

Token 229: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0004306692280806601
    2. ' min' → logprob: -7.750430583953857
    3. '(min' → logprob: -17.875431060791016
    4. '	min' → logprob: -19.625431060791016
    5. '[min' → logprob: -20.000431060791016
    6. 'max' → logprob: -20.875431060791016
    7. '=min' → logprob: -21.875431060791016
    8. ':min' → logprob: -22.125431060791016
    9. ' ' → logprob: -22.375431060791016
    10. '-min' → logprob: -23.250431060791016

Token 230: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.002248388482257724
    2. 'num' → logprob: -6.127248287200928
    3. 'um' → logprob: -9.877248764038086
    4. 'ber' → logprob: -12.877248764038086
    5. 'Num' → logprob: -13.502248764038086
    6. '(num' → logprob: -14.127248764038086
    7. 'b' → logprob: -14.252248764038086
    8. 't' → logprob: -14.252248764038086
    9. '_' → logprob: -14.377248764038086
    10. 'or' → logprob: -14.377248764038086

Token 231: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 232: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 233: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3132776618003845
    2. ' __' → logprob: -1.3132777214050293
    3. 'name' → logprob: -12.063277244567871
    4. '_' → logprob: -12.813277244567871
    5. ' ' → logprob: -13.188277244567871
    6. '___' → logprob: -13.188277244567871
    7. ' ' → logprob: -13.438277244567871
    8. '_name' → logprob: -13.938277244567871
    9. '/__' → logprob: -14.688277244567871
    10. '  ' → logprob: -15.563277244567871

Token 234: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0884082019329071
    2. '==' → logprob: -2.5884082317352295
    3. ' ==' → logprob: -4.83840799331665
    4. '=="' → logprob: -7.21340799331665
    5. 'name' → logprob: -7.46340799331665
    6. '__.__' → logprob: -9.213408470153809
    7. '=' → logprob: -10.213408470153809
    8. ' __' → logprob: -10.588408470153809
    9. '=='' → logprob: -11.338408470153809
    10. '_' → logprob: -11.838408470153809

Token 235: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.4849443838757e-06
    2. '==' → logprob: -12.625004768371582
    3. '__.__' → logprob: -14.000004768371582
    4. '___' → logprob: -16.125003814697266
    5. '=="' → logprob: -16.750003814697266
    6. ' ==' → logprob: -17.250003814697266
    7. '____' → logprob: -17.625003814697266
    8. '__["' → logprob: -17.750003814697266
    9. '__.' → logprob: -18.250003814697266
    10. '"' → logprob: -18.250003814697266

Token 236: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4970969259738922
    2. '==' → logprob: -1.1220968961715698
    3. '__' → logprob: -2.9970970153808594
    4. '=="' → logprob: -4.247097015380859
    5. '=='' → logprob: -6.372097015380859
    6. '===' → logprob: -9.99709701538086
    7. '"' → logprob: -9.99709701538086
    8. '=' → logprob: -10.74709701538086
    9. ''' → logprob: -11.74709701538086
    10. '_' → logprob: -11.99709701538086

Token 237: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0005558936391025782
    2. ''' → logprob: -7.500555992126465
    3. '__' → logprob: -13.500555992126465
    4. ' "__' → logprob: -13.500555992126465
    5. '"user' → logprob: -16.75055503845215
    6. '"name' → logprob: -17.75055503845215
    7. '"class' → logprob: -18.37555503845215
    8. ' '__' → logprob: -19.12555503845215
    9. '"default' → logprob: -19.25055503845215
    10. '"_' → logprob: -19.25055503845215

Token 238: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.002750665182247758
    2. 'name' → logprob: -6.252750873565674
    3. '__' → logprob: -7.127750873565674
    4. '"' → logprob: -11.127750396728516
    5. ''' → logprob: -14.127750396728516
    6. ' main' → logprob: -14.252750396728516
    7. 'built' → logprob: -14.252750396728516
    8. '```' → logprob: -14.502750396728516
    9. '__":
' → logprob: -14.877750396728516
    10. '_main' → logprob: -15.377750396728516

Token 239: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.029987318441271782
    2. '__' → logprob: -3.529987335205078
    3. '__':
' → logprob: -8.404987335205078
    4. '__.' → logprob: -12.279987335205078
    5. '__:' → logprob: -12.279987335205078
    6. '__["' → logprob: -13.529987335205078
    7. '__.__' → logprob: -14.029987335205078
    8. '():
' → logprob: -15.029987335205078
    9. '.' → logprob: -15.029987335205078
    10. '_' → logprob: -15.529987335205078

Token 240: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.019025202840566635
    2. '   ' → logprob: -4.0190253257751465
    3. ' main' → logprob: -7.1440253257751465
    4. '	main' → logprob: -9.394024848937988
    5. '  ' → logprob: -14.144024848937988
    6. ' ' → logprob: -14.519024848937988
    7. '_main' → logprob: -14.769024848937988
    8. '(main' → logprob: -16.019025802612305
    9. '    
' → logprob: -16.269025802612305
    10. '.main' → logprob: -16.769025802612305

Token 241: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -6.704273118884885e-07
    2. ' main' → logprob: -14.250000953674316
    3. '	main' → logprob: -21.25
    4. 'import' → logprob: -22.375
    5. '(main' → logprob: -24.0
    6. '   ' → logprob: -24.0
    7. '.main' → logprob: -25.875
    8. '_main' → logprob: -27.0
    9. 'Main' → logprob: -27.875
    10. '```' → logprob: -28.875

Token 242: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 240
Tokens correctement prédits (1ère position, stricte): 91
Tokens correctement prédits (1ère position, avec adaptation): 98
Tokens correctement prédits (top 10): 184
Précision stricte (1ère position): 37.92%
Précision adaptée (1ère position): 40.83%
Précision (top 10): 76.67%
================================================================================
