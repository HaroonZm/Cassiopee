================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:58:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import threading
sys.setrecursionlimit(10**7)
input = sys.stdin.readline

def main():
    N,Q = map(int,input().split())
    adj = [[] for _ in range(N+1)]
    for _ in range(N-1):
        u,v,w = map(int,input().split())
        adj[u].append((v,w))
        adj[v].append((u,w))

    LOG = 1
    while (1 << LOG) <= N:
        LOG += 1

    depth = [0]*(N+1)
    dist = [0]*(N+1)
    parent = [[-1]*(N+1) for _ in range(LOG)]

    def dfs(u,p):
        for nx,w in adj[u]:
            if nx != p:
                depth[nx] = depth[u]+1
                dist[nx] = dist[u]+w
                parent[0][nx] = u
                dfs(nx,u)

    dfs(1,-1)

    for k in range(LOG-1):
        for v in range(1,N+1):
            if parent[k][v] < 0:
                parent[k+1][v] = -1
            else:
                parent[k+1][v] = parent[k][parent[k][v]]

    def lca(u,v):
        if depth[u] > depth[v]:
            u,v = v,u
        diff = depth[v]-depth[u]
        for i in range(LOG):
            if diff & (1 << i):
                v = parent[i][v]
        if u == v:
            return u
        for i in reversed(range(LOG)):
            if parent[i][u] != parent[i][v]:
                u = parent[i][u]
                v = parent[i][v]
        return parent[0][u]

    def dist_uv(u,v):
        return dist[u]+dist[v]-2*dist[lca(u,v)]

    for _ in range(Q):
        a,b,c = map(int,input().split())
        abc = [a,b,c]
        abc.sort()
        a,b,c = abc
        # Calculate pairwise distance
        dab = dist_uv(a,b)
        dbc = dist_uv(b,c)
        dac = dist_uv(a,c)

        # The minimal maximum distance after meeting in some city
        # The best meeting city is one of the three nodes or LCA points that minimize max distances
        # The cost is (dab + dbc + dac) / 2 - min_distance among pairs
        # To avoid float, use exact evaluation:
        # The minimal max dist = max( (dab+dbc+dac)/2 - min pair dist )

        # We can try all meeting points on the path of these three nodes
        # Explanation (known from problem editorial): answer = (dab+dbc+dac)//2

        # But be careful to choose max distance: the minimal max distance is:
        # = max((dab+dbc-dac)/2, (dab+dac-dbc)/2, (dbc+dac-dab)/2)
        x = (dab+dbc-dac)//2
        y = (dab+dac-dbc)//2
        z = (dbc+dac-dab)//2
        print(max(x,y,z))

threading.Thread(target=main).start()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.21183791756629944
    2. '.' → logprob: -2.3368380069732666
    3. '<|end|>' → logprob: -2.8368380069732666
    4. '\' → logprob: -4.7118377685546875
    5. 'newline' → logprob: -5.0868377685546875
    6. 'import' → logprob: -5.0868377685546875
    7. '
' → logprob: -5.7118377685546875
    8. '' → logprob: -5.8368377685546875
    9. '<|end|>' → logprob: -5.8368377685546875
    10. '\r' → logprob: -6.3368377685546875

Token 4: ' threading' (ID: 72047)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.0006273718317970634
    2. 'os' → logprob: -7.375627517700195
    3. ' re' → logprob: -15.375627517700195
    4. ' math' → logprob: -15.500627517700195
    5. '_os' → logprob: -15.750627517700195
    6. '"os' → logprob: -15.875627517700195
    7. ' json' → logprob: -16.250627517700195
    8. '	os' → logprob: -17.250627517700195
    9. ' argparse' → logprob: -18.125627517700195
    10. ' ' → logprob: -18.125627517700195

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.130672574043274
    2. '\' → logprob: -1.255672574043274
    3. '\n' → logprob: -1.255672574043274
    4. '
' → logprob: -3.2556724548339844
    5. '```' → logprob: -4.005672454833984
    6. 'import' → logprob: -4.130672454833984
    7. '

' → logprob: -4.505672454833984
    8. ',' → logprob: -5.505672454833984
    9. '<|end|>' → logprob: -5.755672454833984
    10. 'newline' → logprob: -5.880672454833984

Token 6: 'sys' (ID: 17324)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9895138740539551
    2. '\n' → logprob: -1.489513874053955
    3. '

' → logprob: -2.364513874053955
    4. '```' → logprob: -2.364513874053955
    5. '.' → logprob: -2.614513874053955
    6. 'import' → logprob: -2.739513874053955
    7. '\' → logprob: -2.989513874053955
    8. '' → logprob: -5.364513874053955
    9. '.Thread' → logprob: -5.614513874053955
    10. 'def' → logprob: -5.614513874053955

Token 7: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.438573680294212e-06
    2. ' .' → logprob: -13.250005722045898
    3. '.​' → logprob: -14.125005722045898
    4. '.
' → logprob: -14.750005722045898
    5. '.`' → logprob: -15.125005722045898
    6. '.[' → logprob: -15.250005722045898
    7. '."""' → logprob: -15.250005722045898
    8. '.]' → logprob: -15.375005722045898
    9. '[' → logprob: -15.375005722045898
    10. '.)' → logprob: -15.750005722045898

Token 8: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.47293445467948914
    2. 's' → logprob: -2.2229344844818115
    3. '_trace' → logprob: -2.9729344844818115
    4. 'rec' → logprob: -3.0979344844818115
    5. '_limit' → logprob: -3.7229344844818115
    6. '_' → logprob: -3.7229344844818115
    7. 'limit' → logprob: -4.222934246063232
    8. '_version' → logprob: -4.222934246063232
    9. '_execution' → logprob: -4.222934246063232
    10. '_ex' → logprob: -4.347934246063232

Token 9: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0003800296690315008
    2. 'ursive' → logprob: -8.25037956237793
    3. 'urs' → logprob: -9.37537956237793
    4. 'ur' → logprob: -11.00037956237793
    5. 'limit' → logprob: -11.62537956237793
    6. 'urse' → logprob: -13.00037956237793
    7. 'ursor' → logprob: -13.37537956237793
    8. '_limit' → logprob: -13.62537956237793
    9. 'urf' → logprob: -13.75037956237793
    10. 'ursively' → logprob: -14.00037956237793

Token 10: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.0010711579816415906
    2. '_limit' → logprob: -6.876070976257324
    3. ' limit' → logprob: -10.376070976257324
    4. 'lim' → logprob: -12.126070976257324
    5. 'depth' → logprob: -14.376070976257324
    6. 'Limit' → logprob: -14.751070976257324
    7. '_depth' → logprob: -15.376070976257324
    8. '-limit' → logprob: -15.376070976257324
    9. '_LIMIT' → logprob: -16.12607192993164
    10. 'l' → logprob: -16.87607192993164

Token 11: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.7697225252486533e-06
    2. ' (' → logprob: -13.500003814697266
    3. '((' → logprob: -14.250003814697266
    4. '(
' → logprob: -14.500003814697266
    5. '(

' → logprob: -14.625003814697266
    6. '("("' → logprob: -15.000003814697266
    7. '()' → logprob: -16.125003814697266
    8. '(.' → logprob: -16.750003814697266
    9. '40' → logprob: -16.750003814697266
    10. '('' → logprob: -16.875003814697266

Token 12: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.02977258712053299
    2. '100' → logprob: -3.5297725200653076
    3. ' ' → logprob: -11.029772758483887
    4. '300' → logprob: -12.779772758483887
    5. '1' → logprob: -13.654772758483887
    6. '500' → logprob: -13.904772758483887
    7. '200' → logprob: -14.654772758483887
    8. '999' → logprob: -15.154772758483887
    9. '150' → logprob: -16.27977180480957
    10. '   ' → logprob: -16.40477180480957

Token 13: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3087139427661896
    2. '000' → logprob: -1.4337139129638672
    3. '00' → logprob: -4.308713912963867
    4. '6' → logprob: -4.433713912963867
    5. '7' → logprob: -7.308713912963867
    6. '4' → logprob: -7.433713912963867
    7. '5' → logprob: -8.433713912963867
    8. '**' → logprob: -8.933713912963867
    9. '2' → logprob: -9.308713912963867
    10. '```' → logprob: -9.433713912963867

Token 14: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00020973898062948138
    2. '6' → logprob: -9.37520980834961
    3. '9' → logprob: -9.37520980834961
    4. '8' → logprob: -10.12520980834961
    5. ' ' → logprob: -19.62520980834961
    6. '```' → logprob: -20.12520980834961
    7. '**' → logprob: -20.37520980834961
    8. '(' → logprob: -20.75020980834961
    9. ')' → logprob: -21.37520980834961
    10. '5' → logprob: -21.87520980834961

Token 15: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. ' )' → logprob: -13.875001907348633
    3. '))' → logprob: -14.125001907348633
    4. ')
' → logprob: -14.625001907348633
    5. ')))' → logprob: -17.500001907348633
    6. '),' → logprob: -17.750001907348633
    7. ',' → logprob: -18.500001907348633
    8. ')
' → logprob: -18.875001907348633
    9. ')`' → logprob: -18.875001907348633
    10. ')

' → logprob: -19.125001907348633

Token 16: 'input' (ID: 2586)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5329198837280273
    2. '#' → logprob: -1.6579198837280273
    3. '\' → logprob: -2.2829198837280273
    4. 'def' → logprob: -3.4079198837280273
    5. 'thread' → logprob: -3.5329198837280273
    6. '```' → logprob: -4.782919883728027
    7. '\n' → logprob: -4.907919883728027
    8. ')' → logprob: -5.032919883728027
    9. 'import' → logprob: -5.157919883728027
    10. '

' → logprob: -5.282919883728027

Token 17: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05710969492793083
    2. '()' → logprob: -3.1821095943450928
    3. '=' → logprob: -4.932109832763672
    4. '_data' → logprob: -5.932109832763672
    5. ' =' → logprob: -6.182109832763672
    6. 'data' → logprob: -7.807109832763672
    7. '_' → logprob: -7.932109832763672
    8. '.' → logprob: -8.557109832763672
    9. '```' → logprob: -8.682109832763672
    10. ')' → logprob: -8.932109832763672

Token 18: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.772901177406311
    2. 'sys' → logprob: -1.022901177406311
    3. 'input' → logprob: -1.897901177406311
    4. ' input' → logprob: -3.6479010581970215
    5. 'lambda' → logprob: -6.5229010581970215
    6. ' lambda' → logprob: -6.6479010581970215
    7. 'raw' → logprob: -11.02290153503418
    8. '	sys' → logprob: -11.02290153503418
    9. '=sys' → logprob: -11.02290153503418
    10. '(sys' → logprob: -12.14790153503418

Token 19: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00579108577221632
    2. '.readline' → logprob: -5.380791187286377
    3. '.stdin' → logprob: -7.255791187286377
    4. ' .' → logprob: -8.005790710449219
    5. '.read' → logprob: -10.880790710449219
    6. '.stdout' → logprob: -11.005790710449219
    7. '.input' → logprob: -11.380790710449219
    8. '.​' → logprob: -12.005790710449219
    9. ').' → logprob: -12.255790710449219
    10. '.

' → logprob: -12.505790710449219

Token 20: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.03164168447256088
    2. '.' → logprob: -3.531641721725464
    3. '.read' → logprob: -6.281641483306885
    4. '.Read' → logprob: -11.656641960144043
    5. '.buffer' → logprob: -12.656641960144043
    6. '.readlines' → logprob: -12.781641960144043
    7. 'read' → logprob: -13.031641960144043
    8. '().' → logprob: -14.781641960144043
    9. '.READ' → logprob: -15.031641960144043
    10. '.write' → logprob: -15.656641960144043

Token 21: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18344613909721375
    2. 'n' → logprob: -2.808446168899536
    3. 'thread' → logprob: -3.183446168899536
    4. '()' → logprob: -3.808446168899536
    5. 't' → logprob: -4.433445930480957
    6. '\' → logprob: -5.558445930480957
    7. 'for' → logprob: -5.808445930480957
    8. '(' → logprob: -5.808445930480957
    9. '#' → logprob: -5.933445930480957
    10. '
' → logprob: -6.058445930480957

Token 22: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09464170038700104
    2. 'class' → logprob: -2.71964168548584
    3. 'n' → logprob: -3.71964168548584
    4. 'N' → logprob: -9.59464168548584
    5. '\' → logprob: -10.59464168548584
    6. '```' → logprob: -10.84464168548584
    7. 'T' → logprob: -11.46964168548584
    8. 'd' → logprob: -11.84464168548584
    9. '
' → logprob: -11.96964168548584
    10. 't' → logprob: -12.21964168548584

Token 23: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.1838575303554535
    2. ' dfs' → logprob: -1.8088575601577759
    3. ' solve' → logprob: -6.058857440948486
    4. ' DFS' → logprob: -7.558857440948486
    5. ' bfs' → logprob: -7.808857440948486
    6. ' factorial' → logprob: -7.933857440948486
    7. ' binary' → logprob: -8.808857917785645
    8. ' ' → logprob: -9.933857917785645
    9. ' process' → logprob: -9.933857917785645
    10. ' factor' → logprob: -9.933857917785645

Token 24: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008059371029958129
    2. '():' → logprob: -7.375805854797363
    3. '(:' → logprob: -9.625805854797363
    4. ':' → logprob: -11.000805854797363
    5. ' (' → logprob: -11.000805854797363
    6. '(
' → logprob: -11.125805854797363
    7. '(**' → logprob: -11.625805854797363
    8. '_' → logprob: -11.625805854797363
    9. '(`' → logprob: -11.875805854797363
    10. '(":' → logprob: -12.500805854797363

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.059795841574668884
    2. 'n' → logprob: -2.93479585647583
    3. '(' → logprob: -6.55979585647583
    4. '    ' → logprob: -6.93479585647583
    5. 'a' → logprob: -7.43479585647583
    6. '(n' → logprob: -7.43479585647583
    7. 't' → logprob: -8.059795379638672
    8. ' n' → logprob: -8.434795379638672
    9. '    
' → logprob: -8.559795379638672
    10. '	n' → logprob: -9.559795379638672

Token 26: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.35981932282447815
    2. ' n' → logprob: -1.2348192930221558
    3. '   ' → logprob: -4.734819412231445
    4. 't' → logprob: -7.109819412231445
    5. ' pass' → logprob: -8.609819412231445
    6. ' while' → logprob: -8.984819412231445
    7. ' t' → logprob: -8.984819412231445
    8. '    ' → logprob: -8.984819412231445
    9. 's' → logprob: -9.234819412231445
    10. ' for' → logprob: -9.234819412231445

Token 27: ',Q' (ID: 130136)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023815220221877098
    2. '=' → logprob: -3.773815155029297
    3. ',' → logprob: -7.648815155029297
    4. '=int' → logprob: -9.523815155029297
    5. ' ' → logprob: -11.773815155029297
    6. ' ,' → logprob: -11.773815155029297
    7. '   ' → logprob: -13.648815155029297
    8. ' =
' → logprob: -14.023815155029297
    9. '.' → logprob: -14.523815155029297
    10. ')' → logprob: -14.898815155029297

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020616278052330017
    2. '=' → logprob: -3.895616292953491
    3. ' ' → logprob: -10.39561653137207
    4. ',' → logprob: -10.39561653137207
    5. '=int' → logprob: -11.89561653137207
    6. '   ' → logprob: -12.77061653137207
    7. '    ' → logprob: -13.39561653137207
    8. ' =
' → logprob: -14.27061653137207
    9. '=input' → logprob: -15.02061653137207
    10. ' ,' → logprob: -15.02061653137207

Token 29: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0067170290276408195
    2. 'map' → logprob: -5.006717205047607
    3. ' ' → logprob: -13.88171672821045
    4. '	map' → logprob: -14.88171672821045
    5. ' input' → logprob: -15.38171672821045
    6. ' list' → logprob: -16.256717681884766
    7. '   ' → logprob: -16.631717681884766
    8. 'input' → logprob: -17.006717681884766
    9. '  ' → logprob: -17.756717681884766
    10. ' ' → logprob: -18.256717681884766

Token 30: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.03276561573147774
    2. '(' → logprob: -3.5327656269073486
    3. '(str' → logprob: -6.4077653884887695
    4. '(input' → logprob: -6.6577653884887695
    5. '(lambda' → logprob: -9.53276538848877
    6. '(list' → logprob: -13.28276538848877
    7. '(in' → logprob: -14.15776538848877
    8. '(eval' → logprob: -14.28276538848877
    9. 'int' → logprob: -14.65776538848877
    10. '(
' → logprob: -14.65776538848877

Token 31: ',input' (ID: 123014)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20173189043998718
    2. ',input' → logprob: -1.7017319202423096
    3. '(input' → logprob: -8.95173168182373
    4. '(' → logprob: -9.07673168182373
    5. ' ,' → logprob: -10.07673168182373
    6. 'input' → logprob: -10.82673168182373
    7. ',int' → logprob: -11.95173168182373
    8. ',(' → logprob: -13.32673168182373
    9. '(sys' → logprob: -14.07673168182373
    10. ' input' → logprob: -14.57673168182373

Token 32: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.641841820150148e-05
    2. '())' → logprob: -10.75002670288086
    3. '()' → logprob: -12.25002670288086
    4. ')' → logprob: -16.62502670288086
    5. ' ().' → logprob: -16.75002670288086
    6. '(' → logprob: -18.50002670288086
    7. '()
' → logprob: -19.00002670288086
    8. '()))' → logprob: -19.12502670288086
    9. '();)' → logprob: -20.50002670288086
    10. '.readline' → logprob: -20.87502670288086

Token 33: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.03162343427538872
    2. 'strip' → logprob: -3.531623363494873
    3. 'rstrip' → logprob: -6.281623363494873
    4. 'read' → logprob: -14.781623840332031
    5. '(split' → logprob: -15.406623840332031
    6. ' split' → logprob: -15.656623840332031
    7. ')' → logprob: -16.40662384033203
    8. '_split' → logprob: -17.53162384033203
    9. 'plit' → logprob: -18.15662384033203
    10. 'rs' → logprob: -18.65662384033203

Token 34: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014207109343260527
    2. '())' → logprob: -6.876420497894287
    3. '()' → logprob: -7.876420497894287
    4. '))' → logprob: -12.376420974731445
    5. ')`' → logprob: -13.376420974731445
    6. ' )' → logprob: -14.376420974731445
    7. ')
' → logprob: -14.376420974731445
    8. '(' → logprob: -14.751420974731445
    9. '),' → logprob: -15.501420974731445
    10. '`)' → logprob: -15.876420974731445

Token 35: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22025398910045624
    2. '    
' → logprob: -2.3452539443969727
    3. ')' → logprob: -3.0952539443969727
    4. '
' → logprob: -3.9702539443969727
    5. ' 
' → logprob: -5.220253944396973
    6. '<|end|>' → logprob: -5.220253944396973
    7. '```' → logprob: -5.220253944396973
    8. '[' → logprob: -5.470253944396973
    9. '\n' → logprob: -5.720253944396973
    10. ',' → logprob: -5.845253944396973

Token 36: ' adj' (ID: 20251)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0620607137680054
    2. ' A' → logprob: -2.437060832977295
    3. 'A' → logprob: -2.562060832977295
    4. ' segment' → logprob: -2.937060832977295
    5. ' tree' → logprob: -2.937060832977295
    6. 'a' → logprob: -3.062060832977295
    7. ' 
' → logprob: -3.312060832977295
    8. ')' → logprob: -3.562060832977295
    9. 'tree' → logprob: -3.562060832977295
    10. 'segment' → logprob: -3.562060832977295

Token 37: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6463083624839783
    2. ' =' → logprob: -0.8963083624839783
    3. '[]' → logprob: -3.896308422088623
    4. 'acency' → logprob: -3.896308422088623
    5. '[u' → logprob: -4.521308422088623
    6. '_list' → logprob: -5.521308422088623
    7. '=' → logprob: -5.521308422088623
    8. '[N' → logprob: -6.271308422088623
    9. 'acent' → logprob: -6.521308422088623
    10. ' [' → logprob: -7.146308422088623

Token 38: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.062069304287433624
    2. ' [[]' → logprob: -2.8120694160461426
    3. ' [' → logprob: -10.062068939208984
    4. '{' → logprob: -10.062068939208984
    5. '[]' → logprob: -11.937068939208984
    6. 'default' → logprob: -12.312068939208984
    7. '{}' → logprob: -12.562068939208984
    8. ' defaultdict' → logprob: -14.062068939208984
    9. '   ' → logprob: -15.062068939208984
    10. ' {' → logprob: -15.687068939208984

Token 39: ' for' (ID: 395)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.22806525230407715
    2. '(' → logprob: -2.228065252304077
    3. 'for' → logprob: -2.853065252304077
    4. ' for' → logprob: -3.353065252304077
    5. ')' → logprob: -6.228065490722656
    6. ']' → logprob: -6.978065490722656
    7. '()' → logprob: -8.353065490722656
    8. '(n' → logprob: -8.603065490722656
    9. ' (' → logprob: -8.853065490722656
    10. '[N' → logprob: -11.228065490722656

Token 40: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2734875977039337
    2. '_' → logprob: -1.8984875679016113
    3. 'range' → logprob: -3.1484875679016113
    4. ' in' → logprob: -3.3984875679016113
    5. ' _' → logprob: -4.398487567901611
    6. '(range' → logprob: -7.898487567901611
    7. '_range' → logprob: -8.14848804473877
    8. 'in' → logprob: -9.02348804473877
    9. ' ' → logprob: -11.02348804473877
    10. '0' → logprob: -11.14848804473877

Token 41: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5298321843147278
    2. 'range' → logprob: -1.904832124710083
    3. ' in' → logprob: -2.654832124710083
    4. '(' → logprob: -2.779832124710083
    5. '(range' → logprob: -3.154832124710083
    6. 'i' → logprob: -3.404832124710083
    7. ' range' → logprob: -3.529832124710083
    8. '_' → logprob: -4.154832363128662
    9. '(N' → logprob: -5.904832363128662
    10. '(i' → logprob: -6.154832363128662

Token 42: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.25193077325820923
    2. 'range' → logprob: -1.5019307136535645
    3. '(range' → logprob: -13.501931190490723
    4. '	range' → logprob: -16.001930236816406
    5. ' ' → logprob: -16.501930236816406
    6. 'rang' → logprob: -17.251930236816406
    7. ' rang' → logprob: -17.751930236816406
    8. 'r' → logprob: -18.126930236816406
    9. '   ' → logprob: -18.251930236816406
    10. '_range' → logprob: -18.251930236816406

Token 43: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -2.7848862373502925e-05
    2. '(' → logprob: -10.500027656555176
    3. 'N' → logprob: -15.375027656555176
    4. '(n' → logprob: -16.750028610229492
    5. ' (' → logprob: -18.125028610229492
    6. '((' → logprob: -19.750028610229492
    7. '	N' → logprob: -20.125028610229492
    8. '(M' → logprob: -20.375028610229492
    9. '(Q' → logprob: -20.625028610229492
    10. ',N' → logprob: -20.875028610229492

Token 44: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.3676733690081164e-05
    2. ')' → logprob: -10.87502384185791
    3. ' )' → logprob: -13.50002384185791
    4. ')]
' → logprob: -14.00002384185791
    5. '+' → logprob: -14.12502384185791
    6. ']' → logprob: -14.25002384185791
    7. ')])' → logprob: -14.37502384185791
    8. ')],' → logprob: -15.75002384185791
    9. '))' → logprob: -16.125022888183594
    10. '])' → logprob: -16.625022888183594

Token 45: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.77022064034827e-05
    2. ' ' → logprob: -9.250097274780273
    3. '2' → logprob: -13.375097274780273
    4. ')' → logprob: -17.625097274780273
    5. '```' → logprob: -17.625097274780273
    6. '１' → logprob: -18.250097274780273
    7. '0' → logprob: -18.375097274780273
    8. '(' → logprob: -18.875097274780273
    9. '   ' → logprob: -18.875097274780273
    10. '7' → logprob: -19.125097274780273

Token 46: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.10806497186422348
    2. ')' → logprob: -2.358064889907837
    3. ']' → logprob: -4.858065128326416
    4. '])' → logprob: -10.733064651489258
    5. ')])' → logprob: -10.858064651489258
    6. ' )' → logprob: -11.608064651489258
    7. '])]' → logprob: -12.608064651489258
    8. '）' → logprob: -12.858064651489258
    9. ' ]' → logprob: -13.358064651489258
    10. '))' → logprob: -13.858064651489258

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2068813592195511
    2. ' ' → logprob: -3.081881284713745
    3. 'for' → logprob: -3.081881284713745
    4. '    
' → logprob: -3.456881284713745
    5. '
' → logprob: -3.956881284713745
    6. '<|end|>' → logprob: -4.581881523132324
    7. ' for' → logprob: -4.831881523132324
    8. ' 
' → logprob: -4.831881523132324
    9. '  
' → logprob: -5.331881523132324
    10. '  ' → logprob: -5.456881523132324

Token 48: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00445539690554142
    2. ' for' → logprob: -5.50445556640625
    3. '   ' → logprob: -8.00445556640625
    4. '	for' → logprob: -11.00445556640625
    5. '```' → logprob: -11.50445556640625
    6. 'For' → logprob: -12.75445556640625
    7. '\' → logprob: -12.87945556640625
    8. ' ' → logprob: -13.00445556640625
    9. '' → logprob: -13.37945556640625
    10. '    
' → logprob: -13.50445556640625

Token 49: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7067635655403137
    2. ' _' → logprob: -0.8317635655403137
    3. ' ' → logprob: -3.081763505935669
    4. '_' → logprob: -3.706763505935669
    5. ' range' → logprob: -7.831763744354248
    6. 'i' → logprob: -8.33176326751709
    7. ' ▁' → logprob: -9.33176326751709
    8. ' ‌' → logprob: -9.33176326751709
    9. '  ' → logprob: -9.58176326751709
    10. ' ​' → logprob: -9.70676326751709

Token 50: ' in' (ID: 306)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9432628154754639
    2. ' in' → logprob: -0.9432628154754639
    3. 'in' → logprob: -1.6932628154754639
    4. ' ' → logprob: -4.068263053894043
    5. ' i' → logprob: -5.068263053894043
    6. ' (' → logprob: -5.443263053894043
    7. '_' → logprob: -5.568263053894043
    8. ' _' → logprob: -6.318263053894043
    9. 'range' → logprob: -7.318263053894043
    10. 'i' → logprob: -7.443263053894043

Token 51: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.07889099419116974
    2. 'range' → logprob: -2.5788910388946533
    3. '(range' → logprob: -14.453890800476074
    4. ' ' → logprob: -14.828890800476074
    5. '	range' → logprob: -15.578890800476074
    6. '  ' → logprob: -17.45389175415039
    7. '```' → logprob: -18.07889175415039
    8. ' ra' → logprob: -18.32889175415039
    9. 'r' → logprob: -18.32889175415039
    10. ' r' → logprob: -18.70389175415039

Token 52: '(N' (ID: 10564)
  Prédit: '(Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.043444328010082245
    2. '(N' → logprob: -3.7934443950653076
    3. '(' → logprob: -4.1684441566467285
    4. ' (' → logprob: -5.4184441566467285
    5. ' Q' → logprob: -9.918444633483887
    6. '(int' → logprob: -11.293444633483887
    7. 'Q' → logprob: -11.793444633483887
    8. ' ' → logprob: -12.418444633483887
    9. '()' → logprob: -13.418444633483887
    10. '(M' → logprob: -13.418444633483887

Token 53: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02285662293434143
    2. ' -' → logprob: -3.8978567123413086
    3. '):' → logprob: -6.147856712341309
    4. ')' → logprob: -8.897856712341309
    5. ' ):' → logprob: -10.772856712341309
    6. '):
' → logprob: -12.522856712341309
    7. '+' → logprob: -12.522856712341309
    8. '   ' → logprob: -12.647856712341309
    9. ' )' → logprob: -13.772856712341309
    10. '1' → logprob: -14.022856712341309

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.375031471252441
    3. '<|end|>' → logprob: -16.750030517578125
    4. '2' → logprob: -17.500030517578125
    5. '１' → logprob: -17.750030517578125
    6. '```' → logprob: -18.000030517578125
    7. ')' → logprob: -18.250030517578125
    8. '   ' → logprob: -18.500030517578125
    9. '0' → logprob: -19.062530517578125
    10. '১' → logprob: -19.375030517578125

Token 55: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006543654948472977
    2. '):
' → logprob: -5.3815436363220215
    3. ')' → logprob: -7.1315436363220215
    4. ' ):' → logprob: -7.1315436363220215
    5. ':' → logprob: -8.63154411315918
    6. '):
' → logprob: -9.38154411315918
    7. ',' → logprob: -10.63154411315918
    8. '   ' → logprob: -11.13154411315918
    9. ' )' → logprob: -11.50654411315918
    10. ' ):
' → logprob: -12.13154411315918

Token 56: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6250523924827576
    2. '   ' → logprob: -1.1250524520874023
    3. '    ' → logprob: -3.0000524520874023
    4. ' u' → logprob: -4.000052452087402
    5. ' ' → logprob: -4.125052452087402
    6. ' line' → logprob: -4.125052452087402
    7. ' x' → logprob: -4.750052452087402
    8. ' a' → logprob: -5.500052452087402
    9. 'u' → logprob: -5.500052452087402
    10. 'n' → logprob: -5.750052452087402

Token 57: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.17300599813461304
    2. ' u' → logprob: -2.048006057739258
    3. 'a' → logprob: -3.548006057739258
    4. ' a' → logprob: -7.048006057739258
    5. '   ' → logprob: -8.548006057739258
    6. 'U' → logprob: -11.923006057739258
    7. '	u' → logprob: -12.423006057739258
    8. 'x' → logprob: -12.548006057739258
    9. ' ' → logprob: -12.798006057739258
    10. '```' → logprob: -13.048006057739258

Token 58: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06551458686590195
    2. ' ,' → logprob: -2.81551456451416
    3. ',v' → logprob: -5.81551456451416
    4. ',u' → logprob: -7.56551456451416
    5. ' ' → logprob: -11.69051456451416
    6. ' v' → logprob: -12.06551456451416
    7. ' u' → logprob: -12.31551456451416
    8. ',int' → logprob: -12.56551456451416
    9. ',user' → logprob: -12.56551456451416
    10. ',n' → logprob: -12.94051456451416

Token 59: ',w' (ID: 49598)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2395744025707245
    2. '=' → logprob: -1.8645744323730469
    3. ',' → logprob: -2.864574432373047
    4. ' ,' → logprob: -7.489574432373047
    5. ' ' → logprob: -7.864574432373047
    6. '.' → logprob: -10.364574432373047
    7. ')' → logprob: -10.489574432373047
    8. '=input' → logprob: -11.364574432373047
    9. '   ' → logprob: -11.739574432373047
    10. '.append' → logprob: -11.989574432373047

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868902027606964
    2. '=' → logprob: -1.136890172958374
    3. '=input' → logprob: -11.261890411376953
    4. ' ' → logprob: -13.261890411376953
    5. '   ' → logprob: -13.511890411376953
    6. ',' → logprob: -13.636890411376953
    7. '=line' → logprob: -14.636890411376953
    8. ')' → logprob: -14.761890411376953
    9. '    ' → logprob: -14.761890411376953
    10. '＝' → logprob: -14.886890411376953

Token 61: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.002476135268807411
    2. 'map' → logprob: -6.002476215362549
    3. '	map' → logprob: -15.00247573852539
    4. ' ' → logprob: -16.75247573852539
    5. ' ' → logprob: -17.00247573852539
    6. ' ma' → logprob: -17.00247573852539
    7. 'm' → logprob: -17.87747573852539
    8. ' m' → logprob: -18.12747573852539
    9. ' mapa' → logprob: -18.37747573852539
    10. '(map' → logprob: -19.62747573852539

Token 62: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.16116483509540558
    2. '(' → logprob: -1.9111648797988892
    3. '(lambda' → logprob: -7.6611647605896
    4. '(str' → logprob: -8.036165237426758
    5. '(in' → logprob: -10.411165237426758
    6. '(input' → logprob: -10.536165237426758
    7. ' (' → logprob: -11.036165237426758
    8. '<|end|>' → logprob: -11.161165237426758
    9. '<int' → logprob: -11.536165237426758
    10. '(tuple' → logprob: -12.036165237426758

Token 63: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.22085750102996826
    2. ',' → logprob: -2.345857620239258
    3. '(input' → logprob: -2.345857620239258
    4. '(' → logprob: -5.220857620239258
    5. ',int' → logprob: -7.095857620239258
    6. '(),' → logprob: -8.845857620239258
    7. ',(' → logprob: -9.220857620239258
    8. '(','' → logprob: -10.595857620239258
    9. ' ,' → logprob: -10.720857620239258
    10. '(int' → logprob: -10.845857620239258

Token 64: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.372294698550832e-06
    2. '()' → logprob: -11.625009536743164
    3. ' ().' → logprob: -15.375009536743164
    4. '())' → logprob: -17.000009536743164
    5. ')' → logprob: -17.250009536743164
    6. '(' → logprob: -17.375009536743164
    7. '()-' → logprob: -18.250009536743164
    8. '().__' → logprob: -18.625009536743164
    9. '()].' → logprob: -18.875009536743164
    10. '()
' → logprob: -19.750009536743164

Token 65: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.704273118884885e-07
    2. ' split' → logprob: -14.875000953674316
    3. '(split' → logprob: -16.0
    4. 'spl' → logprob: -17.0
    5. 'strip' → logprob: -17.375
    6. 's' → logprob: -17.625
    7. 'rstrip' → logprob: -19.0
    8. ')' → logprob: -19.5
    9. '```' → logprob: -19.5
    10. 'sp' → logprob: -19.625

Token 66: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010017547756433487
    2. '())' → logprob: -4.760017395019531
    3. '()' → logprob: -6.635017395019531
    4. '))' → logprob: -9.635017395019531
    5. '(' → logprob: -11.510017395019531
    6. '),' → logprob: -12.760017395019531
    7. ')
' → logprob: -13.010017395019531
    8. ' )' → logprob: -13.260017395019531
    9. '`)' → logprob: -13.635017395019531
    10. ')`' → logprob: -14.010017395019531

Token 67: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03073517605662346
    2. '<|end|>' → logprob: -3.6557352542877197
    3. ')' → logprob: -6.155735015869141
    4. '   ' → logprob: -6.655735015869141
    5. '<|end|>' → logprob: -8.28073501586914
    6. '        
' → logprob: -8.78073501586914
    7. '
' → logprob: -9.03073501586914
    8. ' ' → logprob: -9.03073501586914
    9. ' 
' → logprob: -9.15573501586914
    10. '    
' → logprob: -10.03073501586914

Token 68: ' adj' (ID: 20251)
  Prédit: ' adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.7715902328491211
    2. 'adj' (adapté à ' adj') → logprob: -1.521590232849121
    3. '   ' → logprob: -1.646590232849121
    4. '       ' → logprob: -2.146590232849121
    5. ' 
' → logprob: -6.021590232849121
    6. '    ' → logprob: -6.646590232849121
    7. '        
' → logprob: -7.271590232849121
    8. '
' → logprob: -7.271590232849121
    9. ' ' → logprob: -7.396590232849121
    10. '           ' → logprob: -7.521590232849121

Token 69: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0003200922510586679
    2. '[v' → logprob: -8.250320434570312
    3. '[' → logprob: -9.750320434570312
    4. ' [' → logprob: -15.500320434570312
    5. '[w' → logprob: -16.625320434570312
    6. '```' → logprob: -16.625320434570312
    7. '[int' → logprob: -17.000320434570312
    8. '[user' → logprob: -17.500320434570312
    9. '   ' → logprob: -18.875320434570312
    10. '[node' → logprob: -19.000320434570312

Token 70: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.004435339942574501
    2. '[' → logprob: -6.0044355392456055
    3. ']' → logprob: -7.2544355392456055
    4. '.' → logprob: -7.2544355392456055
    5. '.append' → logprob: -8.504435539245605
    6. ').' → logprob: -8.879435539245605
    7. '[u' → logprob: -9.129435539245605
    8. ' ].' → logprob: -10.379435539245605
    9. '   ' → logprob: -10.629435539245605
    10. '][' → logprob: -11.129435539245605

Token 71: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.320199877838604e-07
    2. ' append' → logprob: -15.25
    3. '.append' → logprob: -16.5
    4. 'appen' → logprob: -17.5
    5. '_append' → logprob: -18.5
    6. 'Append' → logprob: -19.625
    7. '	append' → logprob: -19.75
    8. 'app' → logprob: -20.0
    9. '```' → logprob: -21.25
    10. 'push' → logprob: -21.375

Token 72: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.003178782993927598
    2. '(' → logprob: -5.753178596496582
    3. '(v' → logprob: -14.128178596496582
    4. '([' → logprob: -15.628178596496582
    5. ' (' → logprob: -16.1281795501709
    6. ' ((' → logprob: -16.2531795501709
    7. '(('' → logprob: -17.5031795501709
    8. '(
' → logprob: -17.8781795501709
    9. '```' → logprob: -18.3781795501709
    10. '   ' → logprob: -18.3781795501709

Token 73: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.935296834039036e-06
    2. ' v' → logprob: -12.87500286102295
    3. ')v' → logprob: -15.50000286102295
    4. ',v' → logprob: -17.125003814697266
    5. '	v' → logprob: -17.625003814697266
    6. 'vq' → logprob: -18.000003814697266
    7. '?v' → logprob: -18.625003814697266
    8. '(v' → logprob: -19.000003814697266
    9. '<v' → logprob: -19.375003814697266
    10. '<|end|>' → logprob: -19.500003814697266

Token 74: ',w' (ID: 49598)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20163026452064514
    2. ',w' → logprob: -1.7016302347183228
    3. ' ,' → logprob: -8.451630592346191
    4. ',v' → logprob: -13.951630592346191
    5. ',W' → logprob: -14.326630592346191
    6. ',
' → logprob: -14.701630592346191
    7. 'w' → logprob: -15.076630592346191
    8. ',y' → logprob: -15.826630592346191
    9. '‌,' → logprob: -15.826630592346191
    10. '<|end|>' → logprob: -15.951630592346191

Token 75: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.006468210369348526
    2. ')' → logprob: -5.131468296051025
    3. ',' → logprob: -7.881468296051025
    4. '))
' → logprob: -9.631467819213867
    5. ' ))' → logprob: -9.631467819213867
    6. '),' → logprob: -10.756467819213867
    7. ')))' → logprob: -12.756467819213867
    8. '));' → logprob: -13.506467819213867
    9. ' )' → logprob: -13.506467819213867
    10. ')),' → logprob: -13.631467819213867

Token 76: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009094370761886239
    2. '   ' → logprob: -7.750909328460693
    3. '<|end|>' → logprob: -7.875909328460693
    4. ',' → logprob: -10.625909805297852
    5. ')' → logprob: -11.125909805297852
    6. 'v' → logprob: -11.750909805297852
    7. '<|end|>' → logprob: -11.750909805297852
    8. '           ' → logprob: -11.750909805297852
    9. ' ' → logprob: -12.000909805297852
    10. '
' → logprob: -12.500909805297852

Token 77: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' (adapté à ' adj') → logprob: -0.6116411089897156
    2. ' adj' → logprob: -0.8616411089897156
    3. '       ' → logprob: -3.3616411685943604
    4. '   ' → logprob: -7.986640930175781
    5. '           ' → logprob: -11.361640930175781
    6. ' ' → logprob: -11.611640930175781
    7. 'ad' → logprob: -11.861640930175781
    8. '(adj' → logprob: -11.861640930175781
    9. '    ' → logprob: -12.361640930175781
    10. '	' → logprob: -12.986640930175781

Token 78: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.292907877039397e-06
    2. '[u' → logprob: -13.25000286102295
    3. '[' → logprob: -13.87500286102295
    4. '[w' → logprob: -15.62500286102295
    5. 'v' → logprob: -15.75000286102295
    6. '```' → logprob: -17.125003814697266
    7. '[V' → logprob: -17.625003814697266
    8. '[val' → logprob: -17.875003814697266
    9. ' [' → logprob: -18.250003814697266
    10. '<v' → logprob: -18.375003814697266

Token 79: '].' (ID: 1651)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.164930522441864
    2. '].' → logprob: -1.9149305820465088
    3. '.append' → logprob: -6.16493034362793
    4. '.' → logprob: -6.41493034362793
    5. '   ' → logprob: -8.16493034362793
    6. ')' → logprob: -8.28993034362793
    7. '       ' → logprob: -8.66493034362793
    8. '[' → logprob: -9.41493034362793
    9. '}.' → logprob: -10.41493034362793
    10. ' ).' → logprob: -10.41493034362793

Token 80: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.3856492842023727e-06
    2. 'appen' → logprob: -14.375000953674316
    3. '.append' → logprob: -14.500000953674316
    4. ' append' → logprob: -15.500000953674316
    5. '	append' → logprob: -16.875001907348633
    6. '_append' → logprob: -18.750001907348633
    7. '```' → logprob: -18.750001907348633
    8. 'Append' → logprob: -19.125001907348633
    9. 'adj' → logprob: -19.250001907348633
    10. 'prepend' → logprob: -19.750001907348633

Token 81: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.000104616025055293
    2. '(u' → logprob: -9.875104904174805
    3. ' ((' → logprob: -10.875104904174805
    4. ' (' → logprob: -10.875104904174805
    5. '(' → logprob: -11.125104904174805
    6. '(
' → logprob: -15.375104904174805
    7. ' ' → logprob: -15.875104904174805
    8. '(v' → logprob: -16.125104904174805
    9. ')((' → logprob: -17.250104904174805
    10. '   ' → logprob: -17.625104904174805

Token 82: 'u' (ID: 84)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.10031967610120773
    2. 'u' → logprob: -2.3503196239471436
    3. ' (' → logprob: -9.725319862365723
    4. ',u' → logprob: -10.475319862365723
    5. ' u' → logprob: -11.350319862365723
    6. '(' → logprob: -11.600319862365723
    7. '	u' → logprob: -13.725319862365723
    8. '[u' → logprob: -13.975319862365723
    9. ',' → logprob: -14.350319862365723
    10. '   ' → logprob: -14.350319862365723

Token 83: ',w' (ID: 49598)
  Prédit: ',w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.011193772777915001
    2. ',' → logprob: -4.511193752288818
    3. ' ,' → logprob: -9.386194229125977
    4. ',v' → logprob: -10.261194229125977
    5. ',(' → logprob: -10.636194229125977
    6. ',W' → logprob: -14.011194229125977
    7. ',u' → logprob: -14.511194229125977
    8. ',y' → logprob: -14.761194229125977
    9. '```' → logprob: -15.261194229125977
    10. ',
' → logprob: -15.636194229125977

Token 84: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0025009866803884506
    2. ')' → logprob: -6.002501010894775
    3. ' ))' → logprob: -11.002500534057617
    4. ')))' → logprob: -12.377500534057617
    5. '))
' → logprob: -13.377500534057617
    6. ',' → logprob: -13.627500534057617
    7. '),' → logprob: -14.127500534057617
    8. ' )' → logprob: -15.002500534057617
    9. '));' → logprob: -15.752500534057617
    10. '   ' → logprob: -16.252500534057617

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25865602493286133
    2. '
' → logprob: -2.8836560249328613
    3. 'dist' → logprob: -2.8836560249328613
    4. 'distance' → logprob: -3.1336560249328613
    5. '    
' → logprob: -3.3836560249328613
    6. '```' → logprob: -5.258656024932861
    7. ' 
' → logprob: -5.383656024932861
    8. ' dist' → logprob: -5.508656024932861
    9. 'depth' → logprob: -5.508656024932861
    10. 'd' → logprob: -5.758656024932861

Token 86: ' LOG' (ID: 15000)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.18495146930217743
    2. 'depth' → logprob: -2.9349515438079834
    3. 'distance' → logprob: -3.5599515438079834
    4. '   ' → logprob: -4.059951305389404
    5. 'color' → logprob: -4.059951305389404
    6. 'd' → logprob: -4.434951305389404
    7. 'visited' → logprob: -4.559951305389404
    8. ' dist' → logprob: -4.934951305389404
    9. 'parent' → logprob: -4.934951305389404
    10. 'stack' → logprob: -5.434951305389404

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.093898892402649
    2. '=' → logprob: -1.468898892402649
    3. '2' → logprob: -1.843898892402649
    4. '_' → logprob: -2.2188987731933594
    5. '_MAX' → logprob: -2.2188987731933594
    6. 'N' → logprob: -3.8438987731933594
    7. '_N' → logprob: -3.9688987731933594
    8. ' ' → logprob: -4.718898773193359
    9. 'MAX' → logprob: -6.093898773193359
    10. '```' → logprob: -7.093898773193359

Token 88: ' ' (ID: 220)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.11613909155130386
    2. ' ' → logprob: -2.4911391735076904
    3. '21' → logprob: -3.8661391735076904
    4. '17' → logprob: -5.866138935089111
    5. '18' → logprob: -6.116138935089111
    6. 'N' → logprob: -8.11613941192627
    7. '1' → logprob: -9.11613941192627
    8. '(' → logprob: -9.11613941192627
    9. '(N' → logprob: -9.36613941192627
    10. ' (' → logprob: -10.36613941192627

Token 89: '1' (ID: 16)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.3213854432106018
    2. '18' → logprob: -1.696385383605957
    3. '17' → logprob: -3.071385383605957
    4. '21' → logprob: -3.446385383605957
    5. 'N' → logprob: -4.821385383605957
    6. '(N' → logprob: -5.446385383605957
    7. '19' → logprob: -8.071385383605957
    8. '(' → logprob: -8.196385383605957
    9. '1' → logprob: -9.196385383605957
    10. '30' → logprob: -9.571385383605957

Token 90: '
' (ID: 198)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.48661866784095764
    2. '7' → logprob: -1.1116186380386353
    3. '6' → logprob: -3.736618757247925
    4. '8' → logprob: -4.486618518829346
    5. '+' → logprob: -4.611618518829346
    6. ' ' → logprob: -4.986618518829346
    7. ' +' → logprob: -6.736618518829346
    8. '5' → logprob: -6.861618518829346
    9. ' <<' → logprob: -7.861618518829346
    10. '9' → logprob: -7.861618518829346

Token 91: '   ' (ID: 271)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13423171639442444
    2. '7' → logprob: -2.7592318058013916
    3. '6' → logprob: -4.1342315673828125
    4. '+' → logprob: -4.2592315673828125
    5. ' ' → logprob: -4.2592315673828125
    6. '8' → logprob: -5.2592315673828125
    7. '2' → logprob: -5.7592315673828125
    8. ' +' → logprob: -5.8842315673828125
    9. ' <<' → logprob: -6.1342315673828125
    10. '<<' → logprob: -6.2592315673828125

Token 92: ' while' (ID: 2049)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10378173738718033
    2. '7' → logprob: -2.9787817001342773
    3. '2' → logprob: -3.9787817001342773
    4. '+' → logprob: -3.9787817001342773
    5. '1' → logprob: -5.478781700134277
    6. ' ' → logprob: -5.978781700134277
    7. '6' → logprob: -7.103781700134277
    8. '5' → logprob: -7.228781700134277
    9. ' 
' → logprob: -7.728781700134277
    10. '8' → logprob: -8.103781700134277

Token 93: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.714198887348175
    2. '(' → logprob: -0.839198887348175
    3. '1' → logprob: -3.3391988277435303
    4. '(N' → logprob: -3.9641988277435303
    5. 'N' → logprob: -4.964199066162109
    6. ' ' → logprob: -5.339199066162109
    7. ' N' → logprob: -5.589199066162109
    8. 'LOG' → logprob: -5.839199066162109
    9. '(LOG' → logprob: -5.839199066162109
    10. '2' → logprob: -6.464199066162109

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.504395604133606
    2. '(' → logprob: -1.004395604133606
    3. ' (' → logprob: -3.8793954849243164
    4. ' ' → logprob: -5.379395484924316
    5. 'LOG' → logprob: -6.379395484924316
    6. '(LOG' → logprob: -6.754395484924316
    7. '(N' → logprob: -7.254395484924316
    8. 'N' → logprob: -7.379395484924316
    9. ')' → logprob: -8.754395484924316
    10. ' LOG' → logprob: -9.254395484924316

Token 95: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.02461170218884945
    2. ' <<' → logprob: -3.774611711502075
    3. '<' → logprob: -6.649611473083496
    4. '<<(' → logprob: -10.524611473083496
    5. ' <' → logprob: -11.149611473083496
    6. '0' → logprob: -11.149611473083496
    7. '1' → logprob: -12.024611473083496
    8. '<N' → logprob: -12.274611473083496
    9. '<=' → logprob: -14.024611473083496
    10. ' <<=' → logprob: -14.149611473083496

Token 96: ' LOG' (ID: 15000)
  Prédit: 'LOG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LOG' → logprob: -0.00866113230586052
    2. ' LOG' → logprob: -4.758661270141602
    3. '(LOG' → logprob: -10.133661270141602
    4. '	LOG' → logprob: -12.133661270141602
    5. '_LOG' → logprob: -14.008661270141602
    6. 'LO' → logprob: -15.258661270141602
    7. '(' → logprob: -15.633661270141602
    8. ' ' → logprob: -16.5086612701416
    9. '.LOG' → logprob: -16.5086612701416
    10. ' (' → logprob: -16.8836612701416

Token 97: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011204145848751068
    2. ' )' → logprob: -4.636204242706299
    3. ')<=' → logprob: -6.761204242706299
    4. ' <=' → logprob: -8.63620376586914
    5. '<=' → logprob: -9.26120376586914
    6. ')<' → logprob: -11.26120376586914
    7. ' <' → logprob: -13.13620376586914
    8. '）' → logprob: -14.01120376586914
    9. '<' → logprob: -14.38620376586914
    10. ')<<' → logprob: -16.51120376586914

Token 98: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.20191621780395508
    2. '<=' → logprob: -1.701916217803955
    3. ' <' → logprob: -7.826916217803955
    4. '<' → logprob: -9.201915740966797
    5. ')<=' → logprob: -13.576915740966797
    6. ' ' → logprob: -13.951915740966797
    7. ']<=' → logprob: -15.326915740966797
    8. ' ≤' → logprob: -15.326915740966797
    9. '≤' → logprob: -16.076915740966797
    10. '[' → logprob: -16.451915740966797

Token 99: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0004306692280806601
    2. ' N' → logprob: -7.750430583953857
    3. '	N' → logprob: -16.750431060791016
    4. ' ' → logprob: -18.750431060791016
    5. '>N' → logprob: -18.750431060791016
    6. 'Ｎ' → logprob: -19.125431060791016
    7. '  ' → logprob: -19.750431060791016
    8. '   ' → logprob: -19.750431060791016
    9. '10' → logprob: -19.875431060791016
    10. '100' → logprob: -20.250431060791016

Token 100: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02645379677414894
    2. ':
' → logprob: -3.651453733444214
    3. ' :' → logprob: -8.901453971862793
    4. ' :
' → logprob: -11.151453971862793
    5. ' LOG' → logprob: -14.776453971862793
    6. ':
' → logprob: -14.776453971862793
    7. ':

' → logprob: -15.026453971862793
    8. '):' → logprob: -15.276453971862793
    9. '1' → logprob: -15.401453971862793
    10. '):
' → logprob: -15.401453971862793

Token 101: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1044110581278801
    2. ' LOG' → logprob: -2.3544111251831055
    3. '	LOG' → logprob: -5.8544111251831055
    4. 'LOG' → logprob: -6.9794111251831055
    5. '       ' → logprob: -8.354411125183105
    6. '    ' → logprob: -9.979411125183105
    7. '_LOG' → logprob: -10.354411125183105
    8. '   ' → logprob: -10.854411125183105
    9. '
' → logprob: -11.354411125183105
    10. ' ' → logprob: -11.604411125183105

Token 102: ' LOG' (ID: 15000)
  Prédit: ' LOG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' LOG' → logprob: -0.048598840832710266
    2. 'LOG' (adapté à ' LOG') → logprob: -3.0485987663269043
    3. '	LOG' → logprob: -11.548599243164062
    4. '   ' → logprob: -14.298599243164062
    5. '_LOG' → logprob: -14.298599243164062
    6. '(LOG' → logprob: -15.048599243164062
    7. ' ' → logprob: -16.423599243164062
    8. '.LOG' → logprob: -16.673599243164062
    9. '    ' → logprob: -16.923599243164062
    10. 'log' → logprob: -17.048599243164062

Token 103: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.694013237953186
    2. '+=' → logprob: -0.694013237953186
    3. '+' → logprob: -7.0690131187438965
    4. '=' → logprob: -11.694013595581055
    5. ' +' → logprob: -13.194013595581055
    6. ']+=' → logprob: -13.319013595581055
    7. '+='' → logprob: -14.194013595581055
    8. ' =' → logprob: -14.569013595581055
    9. '```' → logprob: -14.569013595581055
    10. ' ' → logprob: -14.819013595581055

Token 104: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038014890742488205
    2. ' ' → logprob: -7.875380039215088
    3. ' ' → logprob: -17.37537956237793
    4. '   ' → logprob: -17.62537956237793
    5. '１' → logprob: -18.12537956237793
    6. '```' → logprob: -18.25037956237793
    7. '  ' → logprob: -19.06287956237793
    8. '
' → logprob: -19.18787956237793
    9. '`' → logprob: -19.75037956237793
    10. '2' → logprob: -20.37537956237793

Token 105: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -18.625003814697266
    4. '   ' → logprob: -19.500003814697266
    5. '１' → logprob: -20.250003814697266
    6. '
' → logprob: -20.687503814697266
    7. '`' → logprob: -20.812503814697266
    8. '  ' → logprob: -20.875003814697266
    9. '``' → logprob: -21.562503814697266
    10. ' ' → logprob: -21.625003814697266

Token 106: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03787427023053169
    2. '    
' → logprob: -3.787874221801758
    3. '   ' → logprob: -4.537874221801758
    4. '  
' → logprob: -6.287874221801758
    5. '<|end|>' → logprob: -6.912874221801758
    6. ' 
' → logprob: -8.037874221801758
    7. '   
' → logprob: -8.287874221801758
    8. '
' → logprob: -9.412874221801758
    9. '

' → logprob: -9.537874221801758
    10. '
    
' → logprob: -10.162874221801758

Token 107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13626962900161743
    2. 'parent' → logprob: -2.5112695693969727
    3. '    
' → logprob: -3.6362695693969727
    4. ' parent' → logprob: -4.886269569396973
    5. '
' → logprob: -5.261269569396973
    6. '  
' → logprob: -6.886269569396973
    7. 'distance' → logprob: -7.011269569396973
    8. 'depth' → logprob: -7.261269569396973
    9. '```' → logprob: -7.636269569396973
    10. 'par' → logprob: -7.636269569396973

Token 108: ' depth' (ID: 13636)
  Prédit: ' parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parent' → logprob: -0.6311596035957336
    2. 'parent' → logprob: -1.3811595439910889
    3. '   ' → logprob: -2.256159543991089
    4. ' depth' → logprob: -3.006159543991089
    5. 'depth' (adapté à ' depth') → logprob: -3.131159543991089
    6. ' par' → logprob: -4.631159782409668
    7. 'par' → logprob: -5.756159782409668
    8. '    
' → logprob: -6.506159782409668
    9. ' dist' → logprob: -7.256159782409668
    10. 'dist' → logprob: -7.381159782409668

Token 109: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001742650754749775
    2. '=' → logprob: -6.376742839813232
    3. ',' → logprob: -10.751742362976074
    4. '[' → logprob: -11.626742362976074
    5. ' ' → logprob: -12.251742362976074
    6. ' =[' → logprob: -12.876742362976074
    7. ' ,' → logprob: -13.501742362976074
    8. '=[' → logprob: -14.001742362976074
    9. ' [' → logprob: -15.751742362976074
    10. '[]' → logprob: -15.876742362976074

Token 110: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31364405155181885
    2. ' [' → logprob: -1.3136440515518188
    3. '[-' → logprob: -8.063644409179688
    4. ' [-' → logprob: -10.063644409179688
    5. '[N' → logprob: -10.688644409179688
    6. '[n' → logprob: -13.438644409179688
    7. '[int' → logprob: -15.438644409179688
    8. '[node' → logprob: -15.938644409179688
    9. '   ' → logprob: -16.563644409179688
    10. ' ' → logprob: -16.688644409179688

Token 111: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22685150802135468
    2. '-' → logprob: -1.601851463317871
    3. ' ' → logprob: -6.726851463317871
    4. ' -' → logprob: -8.351851463317871
    5. 'None' → logprob: -13.351851463317871
    6. '   ' → logprob: -14.476851463317871
    7. '-f' → logprob: -15.476851463317871
    8. '-depth' → logprob: -15.851851463317871
    9. '  ' → logprob: -16.101852416992188
    10. '-s' → logprob: -16.101852416992188

Token 112: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4314993619918823
    2. ']*(' → logprob: -1.0564993619918823
    3. ' for' → logprob: -6.306499481201172
    4. ',' → logprob: -7.806499481201172
    5. ' ]' → logprob: -8.556499481201172
    6. 'for' → logprob: -8.806499481201172
    7. ']*' → logprob: -8.931499481201172
    8. '*(' → logprob: -10.056499481201172
    9. ']+' → logprob: -10.931499481201172
    10. ')' → logprob: -11.931499481201172

Token 113: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -9.610702363715973e-06
    2. ' N' → logprob: -11.750009536743164
    3. '(N' → logprob: -13.375009536743164
    4. '   ' → logprob: -16.250009536743164
    5. '	N' → logprob: -17.375009536743164
    6. '```' → logprob: -18.375009536743164
    7. ' ' → logprob: -18.500009536743164
    8. ')' → logprob: -18.750009536743164
    9. '[N' → logprob: -19.125009536743164
    10. 'n' → logprob: -19.125009536743164

Token 114: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.2200749754119897e-06
    2. '+
' → logprob: -13.250001907348633
    3. ' +' → logprob: -14.875001907348633
    4. '+)' → logprob: -16.500001907348633
    5. ')' → logprob: -17.625001907348633
    6. '1' → logprob: -19.125001907348633
    7. '```' → logprob: -19.250001907348633
    8. ')+' → logprob: -19.750001907348633
    9. '＋' → logprob: -20.250001907348633
    10. '+[' → logprob: -20.375001907348633

Token 115: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -16.000001907348633
    4. '2' → logprob: -16.125001907348633
    5. '   ' → logprob: -16.750001907348633
    6. ')' → logprob: -17.312501907348633
    7. '１' → logprob: -17.625001907348633
    8. '
' → logprob: -17.687501907348633
    9. '+' → logprob: -18.000001907348633
    10. '

' → logprob: -18.687501907348633

Token 116: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007274442468769848
    2. ')
' → logprob: -7.250727653503418
    3. ' )' → logprob: -11.000727653503418
    4. ' )
' → logprob: -15.500727653503418
    5. ')
' → logprob: -15.625727653503418
    6. ')

' → logprob: -15.750727653503418
    7. '),' → logprob: -16.3757266998291
    8. ',' → logprob: -16.7507266998291
    9. ' ' → logprob: -18.0007266998291
    10. '<|end|>' → logprob: -18.0007266998291

Token 117: '   ' (ID: 271)
  Prédit: ' parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parent' → logprob: -0.6455578207969666
    2. 'parent' → logprob: -0.8955578207969666
    3. '   ' → logprob: -3.6455578804016113
    4. 'par' → logprob: -3.7705578804016113
    5. ' par' → logprob: -4.770557880401611
    6. ' up' → logprob: -6.020557880401611
    7. 'dp' → logprob: -6.395557880401611
    8. ' parents' → logprob: -6.520557880401611
    9. 'up' → logprob: -7.020557880401611
    10. 'parents' → logprob: -7.270557880401611

Token 118: ' dist' (ID: 3601)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.0845012366771698
    2. 'par' → logprob: -2.834501266479492
    3. 'dist' (adapté à ' dist') → logprob: -4.709501266479492
    4. 'up' → logprob: -5.209501266479492
    5. 'dp' → logprob: -5.459501266479492
    6. ' parent' → logprob: -6.959501266479492
    7. 'parents' → logprob: -7.334501266479492
    8. 'fa' → logprob: -7.834501266479492
    9. 'pa' → logprob: -7.959501266479492
    10. 'max' → logprob: -8.959501266479492

Token 119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03806421533226967
    2. '=' → logprob: -3.2880642414093018
    3. ' =[' → logprob: -11.913064002990723
    4. '=[' → logprob: -12.163064002990723
    5. ',' → logprob: -12.163064002990723
    6. '[' → logprob: -13.038064002990723
    7. ' ' → logprob: -13.163064002990723
    8. '=[]' → logprob: -15.163064002990723
    9. '```' → logprob: -15.538064002990723
    10. ']' → logprob: -15.788064002990723

Token 120: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6931514143943787
    2. ' [' → logprob: -0.6931514143943787
    3. ' ' → logprob: -12.943151473999023
    4. '0' → logprob: -13.693151473999023
    5. '   ' → logprob: -15.318151473999023
    6. '[-' → logprob: -15.443151473999023
    7. ' [-' → logprob: -16.193151473999023
    8. ' ' → logprob: -16.443151473999023
    9. '  ' → logprob: -17.568151473999023
    10. '=[' → logprob: -18.068151473999023

Token 121: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.722539834911004e-05
    2. ' ' → logprob: -9.500097274780273
    3. '[' → logprob: -10.750097274780273
    4. ' [' → logprob: -14.250097274780273
    5. '-' → logprob: -15.625097274780273
    6. '(' → logprob: -16.875097274780273
    7. '[int' → logprob: -17.250097274780273
    8. '   ' → logprob: -17.750097274780273
    9. 'float' → logprob: -18.375097274780273
    10. '[-' → logprob: -18.750097274780273

Token 122: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.5721385478973389
    2. ')*(' → logprob: -0.9471385478973389
    3. '*(' → logprob: -3.072138547897339
    4. ')' → logprob: -6.572138786315918
    5. ']' → logprob: -10.197138786315918
    6. ' *' → logprob: -10.697138786315918
    7. ' *(' → logprob: -11.447138786315918
    8. '](' → logprob: -11.697138786315918
    9. ')(' → logprob: -11.697138786315918
    10. '```' → logprob: -12.072138786315918

Token 123: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0009225384565070271
    2. '(N' → logprob: -7.000922679901123
    3. ' N' → logprob: -11.750922203063965
    4. '   ' → logprob: -14.375922203063965
    5. '
' → logprob: -14.500922203063965
    6. '[N' → logprob: -14.500922203063965
    7. '	N' → logprob: -14.750922203063965
    8. '(' → logprob: -15.000922203063965
    9. ' ' → logprob: -15.875922203063965
    10. ' (' → logprob: -16.37592315673828

Token 124: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.8624639324116288e-06
    2. '1' → logprob: -14.000001907348633
    3. ' +' → logprob: -14.250001907348633
    4. '+
' → logprob: -15.500001907348633
    5. ')+' → logprob: -16.750001907348633
    6. '[' → logprob: -17.500001907348633
    7. '＋' → logprob: -17.625001907348633
    8. '+[' → logprob: -18.500001907348633
    9. '```' → logprob: -18.625001907348633
    10. '<|end|>' → logprob: -18.750001907348633

Token 125: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8789383830153383e-05
    2. '+' → logprob: -11.625019073486328
    3. ' ' → logprob: -12.125019073486328
    4. '7' → logprob: -13.625019073486328
    5. ')' → logprob: -14.125019073486328
    6. '(' → logprob: -14.125019073486328
    7. '<|end|>' → logprob: -14.500019073486328
    8. 'N' → logprob: -14.875019073486328
    9. '```' → logprob: -15.250019073486328
    10. '(N' → logprob: -15.750019073486328

Token 126: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000915039679966867
    2. ')
' → logprob: -7.000915050506592
    3. ' )' → logprob: -13.875914573669434
    4. ')
' → logprob: -14.000914573669434
    5. '
' → logprob: -14.625914573669434
    6. '<|end|>' → logprob: -15.250914573669434
    7. ')

' → logprob: -15.375914573669434
    8. '),' → logprob: -15.625914573669434
    9. '   ' → logprob: -15.625914573669434
    10. '#' → logprob: -17.12591552734375

Token 127: '   ' (ID: 271)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.19935184717178345
    2. '   ' → logprob: -2.3243517875671387
    3. ' parent' → logprob: -3.1993517875671387
    4. 'par' → logprob: -3.3243517875671387
    5. 'up' → logprob: -6.699351787567139
    6. ' par' → logprob: -6.699351787567139
    7. 'parents' → logprob: -6.699351787567139
    8. 'dp' → logprob: -7.574351787567139
    9. ' up' → logprob: -8.074352264404297
    10. ' parents' → logprob: -8.199352264404297

Token 128: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -0.06857182085514069
    2. 'par' → logprob: -2.8185718059539795
    3. 'up' → logprob: -5.693572044372559
    4. ' parent' → logprob: -6.568572044372559
    5. 'dp' → logprob: -7.193572044372559
    6. 'parents' → logprob: -8.443572044372559
    7. 'fa' → logprob: -8.693572044372559
    8. 'pa' → logprob: -8.943572044372559
    9. '   ' → logprob: -9.943572044372559
    10. ' ' → logprob: -9.943572044372559

Token 129: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11287204176187515
    2. '=' → logprob: -2.2378721237182617
    3. '[' → logprob: -10.612872123718262
    4. '=[' → logprob: -11.612872123718262
    5. ' =[' → logprob: -11.987872123718262
    6. ' ' → logprob: -12.737872123718262
    7. '```' → logprob: -13.487872123718262
    8. ',' → logprob: -14.237872123718262
    9. '1' → logprob: -14.237872123718262
    10. '0' → logprob: -14.362872123718262

Token 130: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.04860644042491913
    2. ' [[' → logprob: -3.0486063957214355
    3. '[' → logprob: -10.923606872558594
    4. '[(' → logprob: -14.298606872558594
    5. '[-' → logprob: -15.298606872558594
    6. ' [' → logprob: -15.798606872558594
    7. ' ' → logprob: -17.048606872558594
    8. '   ' → logprob: -18.548606872558594
    9. '([[' → logprob: -18.548606872558594
    10. '[['' → logprob: -18.798606872558594

Token 131: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02975616231560707
    2. '0' → logprob: -3.5297560691833496
    3. ' -' → logprob: -12.279756546020508
    4. ' ' → logprob: -15.279756546020508
    5. 'None' → logprob: -16.279756546020508
    6. '
' → logprob: -16.529756546020508
    7. '-n' → logprob: -16.654756546020508
    8. '-f' → logprob: -16.779756546020508
    9. '```' → logprob: -16.779756546020508
    10. '-i' → logprob: -17.154756546020508

Token 132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -17.5
    4. '
' → logprob: -17.625
    5. '-' → logprob: -17.875
    6. '１' → logprob: -17.875
    7. '(' → logprob: -18.0
    8. ' -' → logprob: -19.125
    9. '```' → logprob: -19.125
    10. '

' → logprob: -19.5

Token 133: ']*(' (ID: 92627)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7607042789459229
    2. ']*(' → logprob: -0.7607042789459229
    3. ']' → logprob: -3.260704278945923
    4. 'for' → logprob: -3.635704278945923
    5. ']*' → logprob: -7.510704040527344
    6. '	for' → logprob: -11.260704040527344
    7. '*(' → logprob: -11.385704040527344
    8. ']+' → logprob: -12.135704040527344
    9. '](' → logprob: -12.635704040527344
    10. ' ]' → logprob: -12.635704040527344

Token 134: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.930552313453518e-05
    2. ' N' → logprob: -10.625049591064453
    3. '(N' → logprob: -10.750049591064453
    4. 'LOG' → logprob: -12.875049591064453
    5. '   ' → logprob: -14.875049591064453
    6. '(' → logprob: -15.750049591064453
    7. '	N' → logprob: -16.500049591064453
    8. ' ' → logprob: -16.625049591064453
    9. ' (' → logprob: -16.875049591064453
    10. '
' → logprob: -17.125049591064453

Token 135: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -7.584239938296378e-06
    2. ')' → logprob: -13.250007629394531
    3. '1' → logprob: -13.500007629394531
    4. 'LOG' → logprob: -13.500007629394531
    5. ' +' → logprob: -13.750007629394531
    6. '+
' → logprob: -14.125007629394531
    7. ')]' → logprob: -14.750007629394531
    8. '7' → logprob: -15.625007629394531
    9. '
' → logprob: -15.750007629394531
    10. '```' → logprob: -16.12500762939453

Token 136: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.3822154111694545e-05
    2. '7' → logprob: -10.250043869018555
    3. '+' → logprob: -12.875043869018555
    4. ')' → logprob: -13.500043869018555
    5. ' ' → logprob: -13.625043869018555
    6. '2' → logprob: -13.875043869018555
    7. '   ' → logprob: -14.375043869018555
    8. 'LOG' → logprob: -14.625043869018555
    9. '```' → logprob: -15.000043869018555
    10. 'log' → logprob: -16.000043869018555

Token 137: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004919105558656156
    2. ' )' → logprob: -7.625492095947266
    3. ')]' → logprob: -12.875492095947266
    4. ' for' → logprob: -14.500492095947266
    5. 'for' → logprob: -15.125492095947266
    6. ']' → logprob: -15.875492095947266
    7. ' ' → logprob: -16.000492095947266
    8. ')
' → logprob: -16.250492095947266
    9. '))' → logprob: -17.250492095947266
    10. '   ' → logprob: -17.250492095947266

Token 138: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07925029844045639
    2. 'for' → logprob: -2.5792503356933594
    3. ')' → logprob: -8.07925033569336
    4. ']' → logprob: -10.32925033569336
    5. '	for' → logprob: -11.57925033569336
    6. ' ' → logprob: -12.82925033569336
    7. ')]' → logprob: -12.82925033569336
    8. '   ' → logprob: -13.57925033569336
    9. ' ]' → logprob: -13.70425033569336
    10. ' )' → logprob: -14.45425033569336

Token 139: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0026320191100239754
    2. 'range' → logprob: -6.002632141113281
    3. ' in' → logprob: -9.252632141113281
    4. '(range' → logprob: -9.752632141113281
    5. ' _' → logprob: -14.252632141113281
    6. '(' → logprob: -14.377632141113281
    7. '_' → logprob: -14.877632141113281
    8. '_range' → logprob: -15.002632141113281
    9. ' xrange' → logprob: -15.752632141113281
    10. 'in' → logprob: -16.00263214111328

Token 140: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.025272490456700325
    2. ' range' → logprob: -4.025272369384766
    3. 'in' → logprob: -5.525272369384766
    4. ' in' → logprob: -5.775272369384766
    5. '(range' → logprob: -11.900272369384766
    6. 'LOG' → logprob: -13.900272369384766
    7. 'log' → logprob: -14.400272369384766
    8. ' ' → logprob: -15.400272369384766
    9. 'ange' → logprob: -15.650272369384766
    10. '	range' → logprob: -16.400272369384766

Token 141: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008614808320999146
    2. ' range' → logprob: -4.758615016937256
    3. '(range' → logprob: -16.133615493774414
    4. '
' → logprob: -17.258615493774414
    5. '   ' → logprob: -17.508615493774414
    6. '	range' → logprob: -17.633615493774414
    7. ' ' → logprob: -18.133615493774414
    8. 'r' → logprob: -19.383615493774414
    9. '  ' → logprob: -19.883615493774414
    10. ')' → logprob: -20.008615493774414

Token 142: '(LOG' (ID: 55791)
  Prédit: '(LOG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(LOG' → logprob: -0.0004305500478949398
    2. '(' → logprob: -7.875430583953857
    3. 'LOG' → logprob: -10.5004301071167
    4. ' (' → logprob: -11.6254301071167
    5. '(log' → logprob: -12.1254301071167
    6. ' LOG' → logprob: -12.8754301071167
    7. '	LOG' → logprob: -13.5004301071167
    8. '(Log' → logprob: -13.6254301071167
    9. ' range' → logprob: -14.0004301071167
    10. '(SIG' → logprob: -15.0004301071167

Token 143: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00038693982060067356
    2. ')' → logprob: -7.875386714935303
    3. ']' → logprob: -12.750387191772461
    4. ')]
' → logprob: -13.500387191772461
    5. ' )' → logprob: -13.750387191772461
    6. ')
' → logprob: -14.875387191772461
    7. '))' → logprob: -15.625387191772461
    8. ')],' → logprob: -15.750387191772461
    9. ')][' → logprob: -16.12538719177246
    10. '   ' → logprob: -16.37538719177246

Token 144: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05291709676384926
    2. 'def' → logprob: -3.052917003631592
    3. '    
' → logprob: -5.677917003631592
    4. '
' → logprob: -7.802917003631592
    5. ' def' → logprob: -7.802917003631592
    6. '<|end|>' → logprob: -10.92791748046875
    7. '  
' → logprob: -11.17791748046875
    8. ')' → logprob: -11.42791748046875
    9. '    ' → logprob: -12.30291748046875
    10. ' 
' → logprob: -12.30291748046875

Token 145: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00031162876985035837
    2. 'from' → logprob: -8.625311851501465
    3. 'stack' → logprob: -9.625311851501465
    4. 'import' → logprob: -9.750311851501465
    5. ' def' → logprob: -12.500311851501465
    6. 'visited' → logprob: -13.125311851501465
    7. '   ' → logprob: -13.375311851501465
    8. 'sys' → logprob: -16.00031089782715
    9. '
' → logprob: -16.62531089782715
    10. '#' → logprob: -16.75031089782715

Token 146: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.006726499181240797
    2. 'dfs' → logprob: -5.006726264953613
    3. ' bfs' → logprob: -11.506726264953613
    4. ' ' → logprob: -14.756726264953613
    5. ' DFS' → logprob: -15.006726264953613
    6. ' def' → logprob: -15.756726264953613
    7. 'b' → logprob: -16.50672721862793
    8. 'DFS' → logprob: -18.00672721862793
    9. 'def' → logprob: -18.13172721862793
    10. '   ' → logprob: -18.25672721862793

Token 147: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.38933056592941284
    2. '(node' → logprob: -1.2643306255340576
    3. '(' → logprob: -3.7643306255340576
    4. '(v' → logprob: -4.3893303871154785
    5. '(s' → logprob: -6.0143303871154785
    6. '(x' → logprob: -6.7643303871154785
    7. ' (' → logprob: -7.5143303871154785
    8. '(root' → logprob: -9.264330863952637
    9. '(n' → logprob: -9.639330863952637
    10. '(t' → logprob: -10.264330863952637

Token 148: ',p' (ID: 14835)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5213274309644476e-05
    2. ' ,' → logprob: -11.875015258789062
    3. ',u' → logprob: -12.375015258789062
    4. ',d' → logprob: -13.250015258789062
    5. ',v' → logprob: -13.875015258789062
    6. ',n' → logprob: -15.000015258789062
    7. ',k' → logprob: -15.250015258789062
    8. ',p' → logprob: -15.375015258789062
    9. ',b' → logprob: -16.500015258789062
    10. ',c' → logprob: -16.875015258789062

Token 149: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003517894074320793
    2. '):' → logprob: -8.250351905822754
    3. ',u' → logprob: -9.875351905822754
    4. ' ,' → logprob: -10.875351905822754
    5. ',int' → logprob: -11.500351905822754
    6. '):
' → logprob: -12.625351905822754
    7. ',n' → logprob: -13.375351905822754
    8. ',d' → logprob: -13.625351905822754
    9. ')' → logprob: -14.500351905822754
    10. ',v' → logprob: -15.000351905822754

Token 150: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16863779723644257
    2. '<|end|>' → logprob: -2.418637752532959
    3. '    ' → logprob: -3.668637752532959
    4. '   ' → logprob: -3.793637752532959
    5. ' ' → logprob: -4.918637752532959
    6. '        
' → logprob: -5.668637752532959
    7. '    
' → logprob: -6.043637752532959
    8. ',' → logprob: -6.668637752532959
    9. '  ' → logprob: -7.543637752532959
    10. '
' → logprob: -7.918637752532959

Token 151: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9095536470413208
    2. 'for' (adapté à ' for') → logprob: -0.9095536470413208
    3. ' for' → logprob: -1.6595536470413208
    4. '       ' → logprob: -6.159553527832031
    5. '	for' → logprob: -6.159553527832031
    6. ' ' → logprob: -9.784553527832031
    7. '  ' → logprob: -10.159553527832031
    8. '    
' → logprob: -10.784553527832031
    9. '    ' → logprob: -11.034553527832031
    10. '	   ' → logprob: -13.409553527832031

Token 152: ' nx' (ID: 50118)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.029832633212208748
    2. '(v' → logprob: -3.529832601547241
    3. 'to' → logprob: -10.27983283996582
    4. ' v' → logprob: -11.02983283996582
    5. 'nv' → logprob: -11.27983283996582
    6. 'vv' → logprob: -11.77983283996582
    7. 'x' → logprob: -12.65483283996582
    8. 'nx' → logprob: -13.40483283996582
    9. ',v' → logprob: -13.90483283996582
    10. '`' → logprob: -14.02983283996582

Token 153: ',w' (ID: 49598)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2458634227514267
    2. ' in' → logprob: -1.870863437652588
    3. ',' → logprob: -2.870863437652588
    4. 'u' → logprob: -5.995863437652588
    5. ',u' → logprob: -6.245863437652588
    6. 'n' → logprob: -7.120863437652588
    7. 't' → logprob: -7.370863437652588
    8. ',in' → logprob: -8.37086296081543
    9. ',_' → logprob: -8.62086296081543
    10. ',n' → logprob: -8.62086296081543

Token 154: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5765883922576904
    2. ' in' → logprob: -0.8265883922576904
    3. ',' → logprob: -7.5765886306762695
    4. ')' → logprob: -9.82658863067627
    5. 's' → logprob: -10.57658863067627
    6. ',in' → logprob: -11.32658863067627
    7. ' ' → logprob: -11.45158863067627
    8. 'n' → logprob: -12.20158863067627
    9. '```' → logprob: -12.70158863067627
    10. ' ,' → logprob: -12.70158863067627

Token 155: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.008619539439678192
    2. ' adj' → logprob: -4.75861930847168
    3. '(adj' → logprob: -12.38361930847168
    4. 'ad' → logprob: -14.25861930847168
    5. 'enumer' → logprob: -17.13361930847168
    6. '   ' → logprob: -17.75861930847168
    7. ' ' → logprob: -17.88361930847168
    8. '[' → logprob: -18.00861930847168
    9. '```' → logprob: -18.25861930847168
    10. '_adj' → logprob: -18.38361930847168

Token 156: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -7.107425062713446e-06
    2. 'u' → logprob: -12.250006675720215
    3. '[' → logprob: -13.125006675720215
    4. '[s' → logprob: -16.75000762939453
    5. '][' → logprob: -17.12500762939453
    6. '[user' → logprob: -17.25000762939453
    7. ' [' → logprob: -17.37500762939453
    8. '(u' → logprob: -17.37500762939453
    9. '```' → logprob: -17.75000762939453
    10. '[n' → logprob: -18.62500762939453

Token 157: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.00011272187111899257
    2. ']' → logprob: -9.375112533569336
    3. ']:
' → logprob: -11.625112533569336
    4. ':' → logprob: -12.000112533569336
    5. '):' → logprob: -12.250112533569336
    6. ']:
' → logprob: -12.875112533569336
    7. ']:

' → logprob: -13.125112533569336
    8. ']):' → logprob: -13.750112533569336
    9. '']:' → logprob: -14.500112533569336
    10. '"]:' → logprob: -14.875112533569336

Token 158: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0054806252010166645
    2. '<|end|>' → logprob: -6.755480766296387
    3. '       ' → logprob: -6.880480766296387
    4. '               ' → logprob: -7.130480766296387
    5. ':' → logprob: -7.380480766296387
    6. ' if' → logprob: -7.505480766296387
    7. ' ' → logprob: -8.380480766296387
    8. '            
' → logprob: -8.505480766296387
    9. '   ' → logprob: -8.880480766296387
    10. ',' → logprob: -9.505480766296387

Token 159: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.295403391122818
    2. 'if' (adapté à ' if') → logprob: -2.795403480529785
    3. '               ' → logprob: -2.920403480529785
    4. ' 
' → logprob: -2.920403480529785
    5. ' ' → logprob: -3.170403480529785
    6. '           ' → logprob: -3.920403480529785
    7. '
' → logprob: -4.670403480529785
    8. '            ' → logprob: -5.545403480529785
    9. '            
' → logprob: -6.045403480529785
    10. '                
' → logprob: -6.170403480529785

Token 160: ' nx' (ID: 50118)
  Prédit: ' nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.1269456297159195
    2. 'nx' → logprob: -2.126945734024048
    3. '(nx' → logprob: -11.001945495605469
    4. 'n' → logprob: -14.501945495605469
    5. ' nxt' → logprob: -16.00194549560547
    6. ' nex' → logprob: -16.12694549560547
    7. ' n' → logprob: -17.00194549560547
    8. ' ny' → logprob: -17.37694549560547
    9. ' ' → logprob: -18.25194549560547
    10. '```' → logprob: -18.50194549560547

Token 161: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.1270097941160202
    2. ' !=' → logprob: -2.127009868621826
    3. '==' → logprob: -9.502009391784668
    4. ' ==' → logprob: -12.377009391784668
    5. '!=(' → logprob: -14.377009391784668
    6. ']!=' → logprob: -14.502009391784668
    7. '!=-' → logprob: -15.002009391784668
    8. '()!=' → logprob: -15.002009391784668
    9. '!==' → logprob: -15.127009391784668
    10. ')!=' → logprob: -15.377009391784668

Token 162: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.01815076172351837
    2. ' p' → logprob: -4.018150806427002
    3. ' ' → logprob: -14.643150329589844
    4. 'u' → logprob: -15.143150329589844
    5. '	p' → logprob: -16.018150329589844
    6. ' u' → logprob: -17.268150329589844
    7. '_p' → logprob: -17.768150329589844
    8. '<p' → logprob: -18.018150329589844
    9. ')p' → logprob: -18.268150329589844
    10. '   ' → logprob: -18.393150329589844

Token 163: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04896112158894539
    2. ':
' → logprob: -3.0489611625671387
    3. '):
' → logprob: -8.79896068572998
    4. '):' → logprob: -9.17396068572998
    5. '               ' → logprob: -9.67396068572998
    6. ' and' → logprob: -11.04896068572998
    7. '           ' → logprob: -11.54896068572998
    8. ':

' → logprob: -11.54896068572998
    9. ')' → logprob: -11.79896068572998
    10. ',' → logprob: -12.54896068572998

Token 164: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0021691746078431606
    2. 'depth' → logprob: -6.877169132232666
    3. ' depth' → logprob: -6.877169132232666
    4. '           ' → logprob: -10.127169609069824
    5. '                
' → logprob: -11.252169609069824
    6. '              ' → logprob: -11.502169609069824
    7. '```' → logprob: -12.002169609069824
    8. '                   ' → logprob: -12.127169609069824
    9. '_depth' → logprob: -12.252169609069824
    10. '                ' → logprob: -12.752169609069824

Token 165: ' depth' (ID: 13636)
  Prédit: ' depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' depth' → logprob: -0.43290916085243225
    2. 'depth' (adapté à ' depth') → logprob: -1.0579091310501099
    3. '                   ' → logprob: -5.68290901184082
    4. '   ' → logprob: -7.93290901184082
    5. '               ' → logprob: -8.43290901184082
    6. '                ' → logprob: -9.80790901184082
    7. 'dist' → logprob: -10.30790901184082
    8. '    ' → logprob: -11.05790901184082
    9. '_depth' → logprob: -11.05790901184082
    10. '       ' → logprob: -11.18290901184082

Token 166: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.688212614681106e-05
    2. '[' → logprob: -11.625017166137695
    3. ' [' → logprob: -12.125017166137695
    4. '   ' → logprob: -14.125017166137695
    5. '```' → logprob: -14.250017166137695
    6. 'nx' → logprob: -15.625017166137695
    7. '=' → logprob: -15.750017166137695
    8. '                   ' → logprob: -16.000017166137695
    9. '[u' → logprob: -16.250017166137695
    10. '

' → logprob: -16.375017166137695

Token 167: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00012797261297237128
    2. '[x' → logprob: -9.375127792358398
    3. '[' → logprob: -11.250127792358398
    4. ']' → logprob: -11.375127792358398
    5. '][' → logprob: -12.125127792358398
    6. '[n' → logprob: -12.875127792358398
    7. '```' → logprob: -13.000127792358398
    8. '
' → logprob: -13.625127792358398
    9. ' nx' → logprob: -14.000127792358398
    10. '[u' → logprob: -14.125127792358398

Token 168: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1463770717382431
    2. '=' → logprob: -2.0213770866394043
    3. ']' → logprob: -5.771377086639404
    4. ')' → logprob: -7.521377086639404
    5. ']=' → logprob: -11.021376609802246
    6. ' ' → logprob: -11.896376609802246
    7. ' ]' → logprob: -12.146376609802246
    8. '[' → logprob: -13.146376609802246
    9. ' )' → logprob: -13.521376609802246
    10. ')=' → logprob: -13.646376609802246

Token 169: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740854501724243
    2. '=' → logprob: -0.9740854501724243
    3. ')' → logprob: -12.724085807800293
    4. ' ' → logprob: -13.224085807800293
    5. ']' → logprob: -14.224085807800293
    6. 'depth' → logprob: -14.349085807800293
    7. ' =
' → logprob: -14.849085807800293
    8. '   ' → logprob: -15.099085807800293
    9. '=
' → logprob: -15.474085807800293
    10. '```' → logprob: -15.474085807800293

Token 170: ' depth' (ID: 13636)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.16022524237632751
    2. ' depth' → logprob: -1.91022527217865
    3. '   ' → logprob: -14.535224914550781
    4. '(depth' → logprob: -15.285224914550781
    5. ' ' → logprob: -16.28522491455078
    6. 'd' → logprob: -16.41022491455078
    7. '               ' → logprob: -17.28522491455078
    8. '
' → logprob: -17.91022491455078
    9. '                   ' → logprob: -18.28522491455078
    10. '           ' → logprob: -18.28522491455078

Token 171: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0004315036640036851
    2. 'u' → logprob: -7.750431537628174
    3. '	u' → logprob: -15.125431060791016
    4. '[' → logprob: -15.500431060791016
    5. ' u' → logprob: -15.750431060791016
    6. '<u' → logprob: -16.500431060791016
    7. '```' → logprob: -17.125431060791016
    8. '[n' → logprob: -17.500431060791016
    9. '*u' → logprob: -17.875431060791016
    10. '   ' → logprob: -18.000431060791016

Token 172: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.021126389503479
    2. ']' → logprob: -1.146126389503479
    3. ']+' → logprob: -1.146126389503479
    4. ' +' → logprob: -5.5211262702941895
    5. ')+' → logprob: -10.396126747131348
    6. ' ]' → logprob: -10.896126747131348
    7. ' plus' → logprob: -12.021126747131348
    8. '+]' → logprob: -12.021126747131348
    9. ')' → logprob: -12.146126747131348
    10. '}+' → logprob: -12.521126747131348

Token 173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006408308399841189
    2. 'w' → logprob: -7.375640869140625
    3. ' ' → logprob: -11.500640869140625
    4. ' w' → logprob: -12.500640869140625
    5. '
' → logprob: -16.750640869140625
    6. '   ' → logprob: -17.000640869140625
    7. '<w' → logprob: -17.125640869140625
    8. '```' → logprob: -17.125640869140625
    9. '[w' → logprob: -17.625640869140625
    10. '*w' → logprob: -17.750640869140625

Token 174: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.061623308807611465
    2. '
' → logprob: -2.9366233348846436
    3. 'dist' → logprob: -5.4366230964660645
    4. '<|end|>' → logprob: -6.5616230964660645
    5. ' dist' → logprob: -7.8116230964660645
    6. '                ' → logprob: -8.811623573303223
    7. '                
' → logprob: -8.936623573303223
    8. '
' → logprob: -10.061623573303223
    9. 'distance' → logprob: -10.186623573303223
    10. '           ' → logprob: -10.311623573303223

Token 175: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07941723614931107
    2. 'dist' → logprob: -3.2044172286987305
    3. '
' → logprob: -3.4544172286987305
    4. '                ' → logprob: -6.5794172286987305
    5. '                
' → logprob: -6.7044172286987305
    6. ' dist' → logprob: -7.5794172286987305
    7. '                   ' → logprob: -8.82941722869873
    8. '<|end|>' → logprob: -8.82941722869873
    9. '
' → logprob: -8.95441722869873
    10. '           ' → logprob: -9.07941722869873

Token 176: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.00043162284418940544
    2. ' dist' → logprob: -7.750431537628174
    3. '               ' → logprob: -14.375432014465332
    4. '                   ' → logprob: -15.750432014465332
    5. 'distance' → logprob: -15.875432014465332
    6. '	dist' → logprob: -16.875431060791016
    7. '           ' → logprob: -18.000431060791016
    8. '   ' → logprob: -18.125431060791016
    9. '(dist' → logprob: -18.375431060791016
    10. '_dist' → logprob: -19.000431060791016

Token 177: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -2.2007883671903983e-05
    2. '[' → logprob: -11.375021934509277
    3. ' [' → logprob: -11.875021934509277
    4. '```' → logprob: -12.875021934509277
    5. 'nx' → logprob: -15.000021934509277
    6. '(nx' → logprob: -16.375022888183594
    7. '   ' → logprob: -16.875022888183594
    8. '[
' → logprob: -16.875022888183594
    9. '][' → logprob: -17.000022888183594
    10. '=' → logprob: -17.125022888183594

Token 178: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00017410075815860182
    2. '[x' → logprob: -8.875174522399902
    3. ' x' → logprob: -11.875174522399902
    4. ']' → logprob: -12.000174522399902
    5. '```' → logprob: -12.500174522399902
    6. ' nx' → logprob: -12.625174522399902
    7. '
' → logprob: -12.750174522399902
    8. '[n' → logprob: -12.750174522399902
    9. 'nx' → logprob: -13.750174522399902
    10. '][' → logprob: -13.875174522399902

Token 179: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.699064314365387
    2. ']' → logprob: -1.0740642547607422
    3. ' =' → logprob: -1.9490642547607422
    4. ']=' → logprob: -4.574064254760742
    5. '+' → logprob: -5.199064254760742
    6. ' +' → logprob: -6.574064254760742
    7. ' ]' → logprob: -7.324064254760742
    8. ']+' → logprob: -8.199064254760742
    9. ']+=' → logprob: -8.699064254760742
    10. ')' → logprob: -8.824064254760742

Token 180: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14296677708625793
    2. ' =' → logprob: -2.0179667472839355
    3. '+' → logprob: -8.767967224121094
    4. '+=' → logprob: -9.642967224121094
    5. ' +=' → logprob: -10.517967224121094
    6. ' +' → logprob: -10.767967224121094
    7. '=w' → logprob: -11.017967224121094
    8. ' ' → logprob: -13.267967224121094
    9. ']' → logprob: -13.892967224121094
    10. '[' → logprob: -13.892967224121094

Token 181: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.006716317031532526
    2. ' dist' → logprob: -5.006716251373291
    3. '	dist' → logprob: -14.50671672821045
    4. '(dist' → logprob: -14.88171672821045
    5. '   ' → logprob: -16.631715774536133
    6. 'd' → logprob: -17.381715774536133
    7. ' ' → logprob: -17.756715774536133
    8. '```' → logprob: -17.881715774536133
    9. '.dist' → logprob: -18.256715774536133
    10. '
' → logprob: -19.006715774536133

Token 182: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -5.2524021157296374e-05
    2. 'u' → logprob: -9.875052452087402
    3. '[' → logprob: -14.125052452087402
    4. '```' → logprob: -16.25005340576172
    5. '[n' → logprob: -16.75005340576172
    6. '<u' → logprob: -16.87505340576172
    7. '	u' → logprob: -17.75005340576172
    8. '[user' → logprob: -18.25005340576172
    9. ' u' → logprob: -18.75005340576172
    10. '[x' → logprob: -19.12505340576172

Token 183: ']+' (ID: 15344)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6984000205993652
    2. ']+' → logprob: -0.6984000205993652
    3. '[n' → logprob: -5.698400020599365
    4. '[u' → logprob: -6.573400020599365
    5. '][' → logprob: -7.948400020599365
    6. 'u' → logprob: -9.823400497436523
    7. '[x' → logprob: -11.073400497436523
    8. 'n' → logprob: -11.448400497436523
    9. '[' → logprob: -11.448400497436523
    10. '+' → logprob: -11.448400497436523

Token 184: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0028049908578395844
    2. ' w' → logprob: -5.877804756164551
    3. ' ' → logprob: -16.627805709838867
    4. '
' → logprob: -17.377805709838867
    5. '	w' → logprob: -17.502805709838867
    6. '   ' → logprob: -17.752805709838867
    7. '```' → logprob: -18.502805709838867
    8. ' ' → logprob: -18.752805709838867
    9. '=w' → logprob: -19.002805709838867
    10. '*w' → logprob: -19.002805709838867

Token 185: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004404955543577671
    2. 'parent' → logprob: -5.7544050216674805
    3. '
' → logprob: -7.3794050216674805
    4. '                
' → logprob: -8.00440502166748
    5. ' parent' → logprob: -9.50440502166748
    6. '                ' → logprob: -10.12940502166748
    7. ' dfs' → logprob: -10.50440502166748
    8. 'dfs' → logprob: -10.50440502166748
    9. ',parent' → logprob: -11.12940502166748
    10. '
' → logprob: -11.37940502166748

Token 186: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04601774737238884
    2. 'parent' → logprob: -3.171017646789551
    3. ' parent' → logprob: -6.171017646789551
    4. 'dfs' → logprob: -7.296017646789551
    5. ' dfs' → logprob: -8.54601764678955
    6. '                
' → logprob: -10.79601764678955
    7. '```' → logprob: -11.92101764678955
    8. ',parent' → logprob: -12.17101764678955
    9. '              ' → logprob: -12.42101764678955
    10. '           ' → logprob: -12.42101764678955

Token 187: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -2.8921695047756657e-05
    2. ' parent' → logprob: -10.500028610229492
    3. '               ' → logprob: -13.625028610229492
    4. '                   ' → logprob: -17.000028610229492
    5. '	parent' → logprob: -17.625028610229492
    6. '.parent' → logprob: -17.750028610229492
    7. ',parent' → logprob: -17.750028610229492
    8. 'dfs' → logprob: -18.000028610229492
    9. '(parent' → logprob: -19.125028610229492
    10. '```' → logprob: -19.250028610229492

Token 188: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.0339031834737398e-05
    2. '0' → logprob: -11.375020027160645
    3. '```' → logprob: -12.375020027160645
    4. ' [' → logprob: -12.625020027160645
    5. ' ' → logprob: -15.250020027160645
    6. '
' → logprob: -15.500020027160645
    7. '   ' → logprob: -15.750020027160645
    8. '1' → logprob: -16.00002098083496
    9. '][' → logprob: -16.50002098083496
    10. 'def' → logprob: -16.50002098083496

Token 189: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.7530574849806726e-05
    2. '[' → logprob: -10.250057220458984
    3. ' ' → logprob: -10.750057220458984
    4. '
' → logprob: -15.875057220458984
    5. '   ' → logprob: -16.375057220458984
    6. '```' → logprob: -16.875057220458984
    7. '000' → logprob: -17.125057220458984
    8. '1' → logprob: -17.250057220458984
    9. ')' → logprob: -17.312557220458984
    10. '                   ' → logprob: -17.500057220458984

Token 190: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.009858080185949802
    2. '[n' → logprob: -4.634858131408691
    3. ']' → logprob: -9.884858131408691
    4. '[' → logprob: -11.259858131408691
    5. '[u' → logprob: -11.384858131408691
    6. ' ][' → logprob: -11.384858131408691
    7. '}[' → logprob: -12.134858131408691
    8. '```' → logprob: -12.634858131408691
    9. '"][' → logprob: -13.384858131408691
    10. '   ' → logprob: -13.509858131408691

Token 191: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.00011307948443572968
    2. ' nx' → logprob: -9.125113487243652
    3. 'n' → logprob: -12.625113487243652
    4. '(nx' → logprob: -14.750113487243652
    5. 'xn' → logprob: -14.750113487243652
    6. 'x' → logprob: -17.500112533569336
    7. '[n' → logprob: -19.375112533569336
    8. 'Nx' → logprob: -19.375112533569336
    9. 'mx' → logprob: -19.875112533569336
    10. '
' → logprob: -20.250112533569336

Token 192: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0021961715538054705
    2. ']=' → logprob: -6.502196311950684
    3. '=' → logprob: -8.002196311950684
    4. ' ]' → logprob: -8.127196311950684
    5. ' =' → logprob: -9.877196311950684
    6. '=u' → logprob: -11.502196311950684
    7. '[u' → logprob: -14.127196311950684
    8. 'u' → logprob: -14.377196311950684
    9. ')' → logprob: -14.877196311950684
    10. ' ' → logprob: -16.377195358276367

Token 193: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04869149252772331
    2. ' =' → logprob: -3.048691511154175
    3. '=u' → logprob: -9.173691749572754
    4. 'u' → logprob: -15.298691749572754
    5. '[u' → logprob: -16.673690795898438
    6. '=user' → logprob: -18.048690795898438
    7. '[' → logprob: -18.048690795898438
    8. '=n' → logprob: -18.173690795898438
    9. '＝' → logprob: -18.548690795898438
    10. '=s' → logprob: -18.798690795898438

Token 194: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.002185472520068288
    2. ' u' → logprob: -6.127185344696045
    3. '	u' → logprob: -15.002185821533203
    4. '[u' → logprob: -16.252185821533203
    5. ' ' → logprob: -17.627185821533203
    6. ''u' → logprob: -18.127185821533203
    7. '<|end|>' → logprob: -18.377185821533203
    8. '<u' → logprob: -18.627185821533203
    9. '[' → logprob: -19.002185821533203
    10. '
' → logprob: -19.252185821533203

Token 195: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006084367632865906
    2. '
' → logprob: -7.625608444213867
    3. '                
' → logprob: -9.750608444213867
    4. 'dfs' → logprob: -11.000608444213867
    5. '			' → logprob: -11.375608444213867
    6. ' dfs' → logprob: -11.500608444213867
    7. '           ' → logprob: -12.250608444213867
    8. '              ' → logprob: -12.250608444213867
    9. '   ' → logprob: -13.000608444213867
    10. '  
' → logprob: -13.250608444213867

Token 196: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00012749579036608338
    2. 'dfs' → logprob: -10.000127792358398
    3. '
' → logprob: -10.750127792358398
    4. '                
' → logprob: -11.375127792358398
    5. '              ' → logprob: -11.500127792358398
    6. '           ' → logprob: -11.500127792358398
    7. ' dfs' → logprob: -11.875127792358398
    8. '```' → logprob: -12.000127792358398
    9. '   ' → logprob: -12.125127792358398
    10. '			' → logprob: -12.750127792358398

Token 197: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' (adapté à ' dfs') → logprob: -0.018971523270010948
    2. ' dfs' → logprob: -4.0189714431762695
    3. '               ' → logprob: -7.1439714431762695
    4. 'df' → logprob: -11.14397144317627
    5. 'def' → logprob: -12.01897144317627
    6. '   ' → logprob: -12.51897144317627
    7. '           ' → logprob: -12.89397144317627
    8. '                   ' → logprob: -13.01897144317627
    9. '
' → logprob: -13.89397144317627
    10. '                
' → logprob: -14.64397144317627

Token 198: '(nx' (ID: 189861)
  Prédit: '(nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nx' → logprob: -3.666993507067673e-05
    2. '(' → logprob: -10.250036239624023
    3. 'nx' → logprob: -14.500036239624023
    4. '(
' → logprob: -14.875036239624023
    5. '(n' → logprob: -15.250036239624023
    6. ' (' → logprob: -16.250036239624023
    7. ' nx' → logprob: -17.625036239624023
    8. '(mx' → logprob: -18.625036239624023
    9. '(tx' → logprob: -18.750036239624023
    10. '(x' → logprob: -19.000036239624023

Token 199: ',u' (ID: 80698)
  Prédit: ',n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.2823489308357239
    2. ',' → logprob: -1.407348871231079
    3. ' ,' → logprob: -6.782349109649658
    4. ',u' → logprob: -10.6573486328125
    5. ',
' → logprob: -11.4073486328125
    6. ' nx' → logprob: -11.7823486328125
    7. '(nx' → logprob: -11.9073486328125
    8. 'nx' → logprob: -12.4073486328125
    9. ',x' → logprob: -12.5323486328125
    10. '   ' → logprob: -13.6573486328125

Token 200: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.0722858102526516e-05
    2. ')
' → logprob: -10.125041007995605
    3. ' )' → logprob: -14.500041007995605
    4. ')return' → logprob: -16.75004005432129
    5. ')

' → logprob: -16.87504005432129
    6. ')
' → logprob: -17.37504005432129
    7. '))' → logprob: -18.50004005432129
    8. '
' → logprob: -18.75004005432129
    9. '   ' → logprob: -19.00004005432129
    10. ')#' → logprob: -19.25004005432129

Token 201: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4215024709701538
    2. '   ' → logprob: -1.2965024709701538
    3. '<|end|>' → logprob: -3.2965025901794434
    4. ')' → logprob: -4.046502590179443
    5. '    
' → logprob: -4.546502590179443
    6. '\n' → logprob: -7.171502590179443
    7. 'def' → logprob: -7.171502590179443
    8. '<|end|>' → logprob: -7.296502590179443
    9. '
' → logprob: -7.671502590179443
    10. '' → logprob: -7.796502590179443

Token 202: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' (adapté à ' dfs') → logprob: -0.06668200343847275
    2. '   ' → logprob: -2.8166821002960205
    3. ' dfs' → logprob: -5.441681861877441
    4. '    
' → logprob: -8.691681861877441
    5. '
' → logprob: -9.316681861877441
    6. 'df' → logprob: -9.816681861877441
    7. ' ' → logprob: -11.441681861877441
    8. '  ' → logprob: -11.441681861877441
    9. '  
' → logprob: -11.816681861877441
    10. 'def' → logprob: -11.816681861877441

Token 203: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.320199877838604e-07
    2. '1' → logprob: -15.625
    3. ' (' → logprob: -16.0
    4. '(
' → logprob: -16.5
    5. '<|end|>' → logprob: -18.5
    6. '
' → logprob: -19.25
    7. '()' → logprob: -19.875
    8. ')(' → logprob: -19.875
    9. '((' → logprob: -20.25
    10. ' ' → logprob: -20.25

Token 204: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.125000953674316
    3. '0' → logprob: -15.875000953674316
    4. '   ' → logprob: -17.5
    5. ')' → logprob: -17.625
    6. '
' → logprob: -18.125
    7. 'root' → logprob: -19.125
    8. '(' → logprob: -19.25
    9. '```' → logprob: -20.0
    10. '１' → logprob: -20.6875

Token 205: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.3133138120174408
    2. ',' → logprob: -1.3133138418197632
    3. ')' → logprob: -10.438313484191895
    4. ',None' → logprob: -11.813313484191895
    5. ' ,-' → logprob: -12.438313484191895
    6. ',)' → logprob: -12.563313484191895
    7. ' ,' → logprob: -12.688313484191895
    8. '-' → logprob: -12.813313484191895
    9. ',
' → logprob: -14.063313484191895
    10. ',-
' → logprob: -14.563313484191895

Token 206: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.75
    3. '-' → logprob: -20.5
    4. '１' → logprob: -21.75
    5. '2' → logprob: -22.5
    6. '

' → logprob: -22.5
    7. '   ' → logprob: -22.625
    8. '```' → logprob: -23.875
    9. '
' → logprob: -24.125
    10. '0' → logprob: -24.625

Token 207: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.64708495605737e-05
    2. ')
' → logprob: -9.625066757202148
    3. ')

' → logprob: -16.37506675720215
    4. ')
' → logprob: -16.62506675720215
    5. ' )' → logprob: -16.75006675720215
    6. '   ' → logprob: -17.12506675720215
    7. ')`' → logprob: -18.37506675720215
    8. '))' → logprob: -18.50006675720215
    9. '),' → logprob: -18.87506675720215
    10. ')return' → logprob: -19.50006675720215

Token 208: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0026383185759186745
    2. '   ' → logprob: -6.252638339996338
    3. ' for' → logprob: -7.252638339996338
    4. '	for' → logprob: -13.75263786315918
    5. '
' → logprob: -16.50263786315918
    6. '```' → logprob: -17.62763786315918
    7. '    
' → logprob: -17.75263786315918
    8. 'For' → logprob: -18.12763786315918
    9. 'from' → logprob: -18.50263786315918
    10. '    ' → logprob: -19.50263786315918

Token 209: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -3.8889261304575484e-06
    2. '   ' → logprob: -12.875003814697266
    3. ' for' → logprob: -13.625003814697266
    4. '
' → logprob: -18.125003814697266
    5. 'from' → logprob: -19.125003814697266
    6. '	for' → logprob: -19.500003814697266
    7. '    
' → logprob: -20.000003814697266
    8. '#' → logprob: -21.250003814697266
    9. '`' → logprob: -21.250003814697266
    10. '```' → logprob: -21.375003814697266

Token 210: ' k' (ID: 372)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7060731053352356
    2. 'k' → logprob: -0.9560731053352356
    3. ' i' → logprob: -2.331073045730591
    4. ' k' → logprob: -3.706073045730591
    5. 'l' → logprob: -8.956072807312012
    6. 'j' → logprob: -10.206072807312012
    7. 'h' → logprob: -10.456072807312012
    8. ' l' → logprob: -11.206072807312012
    9. 'd' → logprob: -11.706072807312012
    10. '`' → logprob: -11.831072807312012

Token 211: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00409015454351902
    2. 'in' → logprob: -5.504090309143066
    3. ' ' → logprob: -11.504090309143066
    4. 'range' → logprob: -14.754090309143066
    5. '   ' → logprob: -15.004090309143066
    6. '  ' → logprob: -15.129090309143066
    7. 'k' → logprob: -15.379090309143066
    8. 'n' → logprob: -16.12908935546875
    9. ' i' → logprob: -16.25408935546875
    10. '1' → logprob: -16.37908935546875

Token 212: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019286326132714748
    2. ' range' → logprob: -6.251928806304932
    3. '(range' → logprob: -18.376928329467773
    4. ' ' → logprob: -19.251928329467773
    5. '1' → logprob: -19.501928329467773
    6. '   ' → logprob: -19.876928329467773
    7. 'r' → logprob: -20.251928329467773
    8. '	range' → logprob: -20.251928329467773
    9. '  ' → logprob: -20.876928329467773
    10. 'rang' → logprob: -21.501928329467773

Token 213: '(LOG' (ID: 55791)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: 0.0
    2. '(LOG' → logprob: -19.0
    3. '1' → logprob: -19.125
    4. ' (' → logprob: -21.75
    5. '(
' → logprob: -24.0
    6. ' ' → logprob: -25.875
    7. '(log' → logprob: -26.75
    8. 'LOG' → logprob: -26.875
    9. '(

' → logprob: -27.25
    10. '(L' → logprob: -27.625

Token 214: '-' (ID: 12)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04263634234666824
    2. '):
' → logprob: -3.5426363945007324
    3. ' ):' → logprob: -4.542636394500732
    4. ' -' → logprob: -6.917636394500732
    5. '-' → logprob: -7.667636394500732
    6. '1' → logprob: -7.917636394500732
    7. ')' → logprob: -9.042635917663574
    8. ':' → logprob: -9.417635917663574
    9. ' ):
' → logprob: -9.917635917663574
    10. ' ' → logprob: -9.917635917663574

Token 215: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.623244553338736e-05
    2. ' ' → logprob: -9.625065803527832
    3. '   ' → logprob: -16.87506675720215
    4. '2' → logprob: -16.87506675720215
    5. '  ' → logprob: -18.25006675720215
    6. '```' → logprob: -18.25006675720215
    7. '
' → logprob: -18.50006675720215
    8. '0' → logprob: -18.87506675720215
    9. '１' → logprob: -19.00006675720215
    10. ')' → logprob: -19.18756675720215

Token 216: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0066347247920930386
    2. '):
' → logprob: -5.381634712219238
    3. ' ):' → logprob: -6.256634712219238
    4. '-' → logprob: -10.506634712219238
    5. ',' → logprob: -10.881634712219238
    6. '):
' → logprob: -11.131634712219238
    7. '0' → logprob: -12.131634712219238
    8. '   ' → logprob: -12.256634712219238
    9. ' -' → logprob: -12.381634712219238
    10. ')' → logprob: -12.631634712219238

Token 217: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31439268589019775
    2. '       ' → logprob: -1.3143926858901978
    3. ' for' → logprob: -6.814392566680908
    4. 'for' → logprob: -10.689393043518066
    5. '	for' → logprob: -11.939393043518066
    6. '	   ' → logprob: -13.439393043518066
    7. ',' → logprob: -14.689393043518066
    8. '   ' → logprob: -14.689393043518066
    9. '    ' → logprob: -15.314393043518066
    10. '     ' → logprob: -15.689393043518066

Token 218: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7053632140159607
    2. 'for' (adapté à ' for') → logprob: -0.7053632140159607
    3. ' for' → logprob: -4.4553632736206055
    4. '       ' → logprob: -7.5803632736206055
    5. ' ' → logprob: -11.580363273620605
    6. '           ' → logprob: -12.705363273620605
    7. '	for' → logprob: -13.205363273620605
    8. '    ' → logprob: -14.455363273620605
    9. '  ' → logprob: -14.955363273620605
    10. '     ' → logprob: -16.45536231994629

Token 219: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00538529921323061
    2. 'j' → logprob: -5.255385398864746
    3. ' v' → logprob: -9.505385398864746
    4. 'node' → logprob: -10.255385398864746
    5. 'x' → logprob: -10.380385398864746
    6. 'i' → logprob: -11.630385398864746
    7. 'u' → logprob: -13.255385398864746
    8. ' j' → logprob: -15.755385398864746
    9. ' node' → logprob: -16.63038444519043
    10. 'child' → logprob: -17.88038444519043

Token 220: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03807787224650383
    2. 'in' → logprob: -3.2880778312683105
    3. ' ' → logprob: -11.038078308105469
    4. 'range' → logprob: -12.038078308105469
    5. 'v' → logprob: -12.288078308105469
    6. '   ' → logprob: -12.788078308105469
    7. '```' → logprob: -12.788078308105469
    8. 'n' → logprob: -13.038078308105469
    9. '1' → logprob: -14.163078308105469
    10. '  ' → logprob: -14.663078308105469

Token 221: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001234428636962548
    2. ' range' → logprob: -9.000123023986816
    3. '(range' → logprob: -18.500123977661133
    4. '   ' → logprob: -20.750123977661133
    5. ' ' → logprob: -21.000123977661133
    6. 'r' → logprob: -21.250123977661133
    7. '	range' → logprob: -22.500123977661133
    8. '1' → logprob: -22.875123977661133
    9. '```' → logprob: -23.250123977661133
    10. '  ' → logprob: -23.375123977661133

Token 222: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1041145626222715e-05
    2. '(N' → logprob: -11.500011444091797
    3. '1' → logprob: -14.000011444091797
    4. ' ' → logprob: -17.625011444091797
    5. ' (' → logprob: -19.250011444091797
    6. '   ' → logprob: -20.500011444091797
    7. '(
' → logprob: -21.375011444091797
    8. 'N' → logprob: -21.625011444091797
    9. '[' → logprob: -22.250011444091797
    10. '(n' → logprob: -22.625011444091797

Token 223: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.76759916334413e-05
    2. 'N' → logprob: -9.500077247619629
    3. '(' → logprob: -13.375077247619629
    4. ' ' → logprob: -14.375077247619629
    5. '(N' → logprob: -15.000077247619629
    6. '   ' → logprob: -15.000077247619629
    7. ' N' → logprob: -19.250078201293945
    8. '
' → logprob: -19.875078201293945
    9. '  ' → logprob: -20.750078201293945
    10. '１' → logprob: -21.000078201293945

Token 224: ',N' (ID: 49539)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20166495442390442
    2. ',N' → logprob: -1.701664924621582
    3. ' ,' → logprob: -8.326664924621582
    4. ',v' → logprob: -12.076664924621582
    5. ',n' → logprob: -13.451664924621582
    6. ',len' → logprob: -13.951664924621582
    7. ',
' → logprob: -14.951664924621582
    8. 'N' → logprob: -15.076664924621582
    9. ',V' → logprob: -15.076664924621582
    10. ',num' → logprob: -15.576664924621582

Token 225: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.511406809295295e-06
    2. ' +' → logprob: -12.000006675720215
    3. '+
' → logprob: -15.875006675720215
    4. '):
' → logprob: -16.5000057220459
    5. '＋' → logprob: -17.5000057220459
    6. '```' → logprob: -18.1250057220459
    7. ')+' → logprob: -18.3750057220459
    8. '   ' → logprob: -18.6250057220459
    9. '1' → logprob: -18.6250057220459
    10. '+k' → logprob: -18.8750057220459

Token 226: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -16.750003814697266
    4. ')' → logprob: -16.875003814697266
    5. '```' → logprob: -16.875003814697266
    6. '):
' → logprob: -17.125003814697266
    7. '2' → logprob: -19.437503814697266
    8. '  ' → logprob: -19.687503814697266
    9. '``' → logprob: -19.687503814697266
    10. '１' → logprob: -20.187503814697266

Token 227: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5800194144248962
    2. '):
' → logprob: -0.8300194144248962
    3. ':' → logprob: -5.580019474029541
    4. ':
' → logprob: -9.080018997192383
    5. '       ' → logprob: -9.580018997192383
    6. '   ' → logprob: -10.080018997192383
    7. ' ):' → logprob: -11.080018997192383
    8. ' ):
' → logprob: -11.080018997192383
    9. '           ' → logprob: -11.205018997192383
    10. '):
' → logprob: -11.330018997192383

Token 228: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008089098846539855
    2. 'parent' → logprob: -7.3758087158203125
    3. ' parent' → logprob: -8.875808715820312
    4. ' if' → logprob: -11.000808715820312
    5. 'if' → logprob: -12.375808715820312
    6. ',parent' → logprob: -12.750808715820312
    7. '[parent' → logprob: -12.875808715820312
    8. '   ' → logprob: -13.000808715820312
    9. '       ' → logprob: -13.125808715820312
    10. '```' → logprob: -13.125808715820312

Token 229: ' if' (ID: 538)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.026913903653621674
    2. ' parent' → logprob: -4.401914119720459
    3. '               ' → logprob: -4.526914119720459
    4. 'if' (adapté à ' if') → logprob: -5.776914119720459
    5. ' if' → logprob: -8.5269136428833
    6. '           ' → logprob: -9.0269136428833
    7. '   ' → logprob: -10.5269136428833
    8. '[parent' → logprob: -11.5269136428833
    9. '	parent' → logprob: -11.9019136428833
    10. '.parent' → logprob: -12.0269136428833

Token 230: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.0031797364354133606
    2. ' parent' → logprob: -5.753179550170898
    3. '(parent' → logprob: -13.878179550170898
    4. '[parent' → logprob: -14.628179550170898
    5. '	parent' → logprob: -14.753179550170898
    6. 'paren' → logprob: -16.1281795501709
    7. ' ' → logprob: -16.2531795501709
    8. '   ' → logprob: -16.5031795501709
    9. '.parent' → logprob: -17.8781795501709
    10. ',parent' → logprob: -18.1281795501709

Token 231: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -9.13388703338569e-06
    2. 'k' → logprob: -12.125009536743164
    3. '[' → logprob: -12.750009536743164
    4. '```' → logprob: -15.500009536743164
    5. ' [' → logprob: -15.625009536743164
    6. '{k' → logprob: -15.875009536743164
    7. '[
' → logprob: -16.250009536743164
    8. '(k' → logprob: -17.125009536743164
    9. ' ' → logprob: -17.250009536743164
    10. '   ' → logprob: -17.625009536743164

Token 232: '][' (ID: 2696)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.04385935515165329
    2. '][' → logprob: -3.1688592433929443
    3. 'v' → logprob: -7.168859481811523
    4. '[' → logprob: -9.543859481811523
    5. ' [' → logprob: -12.293859481811523
    6. '```' → logprob: -12.793859481811523
    7. ' ][' → logprob: -13.168859481811523
    8. '
' → logprob: -13.293859481811523
    9. ']' → logprob: -13.918859481811523
    10. '   ' → logprob: -13.918859481811523

Token 233: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -5.5577775128767826e-06
    2. ' v' → logprob: -12.375005722045898
    3. '	v' → logprob: -14.125005722045898
    4. '[v' → logprob: -15.375005722045898
    5. '-v' → logprob: -15.875005722045898
    6. '   ' → logprob: -16.2500057220459
    7. ')v' → logprob: -16.5000057220459
    8. 'parent' → logprob: -18.6250057220459
    9. ',v' → logprob: -19.1250057220459
    10. '<v' → logprob: -19.2500057220459

Token 234: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11989250779151917
    2. ']!=' → logprob: -2.2448925971984863
    3. '!=' → logprob: -4.994892597198486
    4. '!=-' → logprob: -8.744892120361328
    5. '[' → logprob: -9.994892120361328
    6. ' !=' → logprob: -10.494892120361328
    7. ']>=' → logprob: -11.119892120361328
    8. ')!=' → logprob: -11.119892120361328
    9. '][' → logprob: -13.244892120361328
    10. ' ]' → logprob: -13.244892120361328

Token 235: ' <' (ID: 464)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.00558566814288497
    2. '!=-' → logprob: -5.380585670471191
    3. ' !=' → logprob: -7.005585670471191
    4. ']!=' → logprob: -10.880585670471191
    5. '()!=' → logprob: -10.880585670471191
    6. ')!=' → logprob: -11.505585670471191
    7. '!==' → logprob: -12.130585670471191
    8. '>=' → logprob: -12.630585670471191
    9. 'is' → logprob: -14.630585670471191
    10. '!=(' → logprob: -14.755585670471191

Token 236: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002234236104413867
    2. '>' → logprob: -6.12723445892334
    3. ' ' → logprob: -10.00223445892334
    4. '=' → logprob: -14.00223445892334
    5. '
' → logprob: -14.12723445892334
    6. '```' → logprob: -14.12723445892334
    7. '>
' → logprob: -14.25223445892334
    8. '1' → logprob: -15.12723445892334
    9. '   ' → logprob: -15.87723445892334
    10. '[' → logprob: -16.252233505249023

Token 237: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.931863051955588e-05
    2. '>' → logprob: -10.375059127807617
    3. ' ' → logprob: -10.500059127807617
    4. '1' → logprob: -15.750059127807617
    5. '```' → logprob: -15.750059127807617
    6. '=' → logprob: -16.875059127807617
    7. '[' → logprob: -17.500059127807617
    8. '   ' → logprob: -17.625059127807617
    9. ':' → logprob: -17.750059127807617
    10. '>
' → logprob: -18.250059127807617

Token 238: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38666361570358276
    2. ':
' → logprob: -1.7616636753082275
    3. '               ' → logprob: -2.0116636753082275
    4. ' or' → logprob: -4.636663436889648
    5. ':return' → logprob: -5.636663436889648
    6. '           ' → logprob: -6.761663436889648
    7. ' :' → logprob: -8.386663436889648
    8. ',' → logprob: -9.261663436889648
    9. ' :
' → logprob: -9.261663436889648
    10. '):
' → logprob: -9.886663436889648

Token 239: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0098462775349617
    2. 'parent' → logprob: -4.759846210479736
    3. ' parent' → logprob: -7.134846210479736
    4. ',parent' → logprob: -8.884846687316895
    5. '[parent' → logprob: -9.259846687316895
    6. '           ' → logprob: -10.009846687316895
    7. '.parent' → logprob: -10.259846687316895
    8. ':' → logprob: -11.259846687316895
    9. '              ' → logprob: -11.259846687316895
    10. '	parent' → logprob: -11.384846687316895

Token 240: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -0.04139043390750885
    2. '                   ' → logprob: -4.166390419006348
    3. ' parent' → logprob: -4.166390419006348
    4. '               ' → logprob: -4.666390419006348
    5. 'continue' → logprob: -10.416390419006348
    6. '	parent' → logprob: -10.666390419006348
    7. '[parent' → logprob: -10.791390419006348
    8. '           ' → logprob: -11.541390419006348
    9. ',parent' → logprob: -11.541390419006348
    10. '   ' → logprob: -11.541390419006348

Token 241: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.00014859484508633614
    2. 'k' → logprob: -9.37514877319336
    3. '][' → logprob: -10.87514877319336
    4. '   ' → logprob: -11.25014877319336
    5. '           ' → logprob: -11.62514877319336
    6. '               ' → logprob: -11.75014877319336
    7. '[' → logprob: -13.00014877319336
    8. ' [' → logprob: -13.25014877319336
    9. '[v' → logprob: -13.37514877319336
    10. '                   ' → logprob: -13.75014877319336

Token 242: '+' (ID: 10)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.04895000159740448
    2. '[v' → logprob: -3.173949956893921
    3. '+' → logprob: -5.1739501953125
    4. 'v' → logprob: -8.9239501953125
    5. '           ' → logprob: -10.6739501953125
    6. ' ][' → logprob: -10.7989501953125
    7. '[' → logprob: -10.7989501953125
    8. '1' → logprob: -10.9239501953125
    9. '   ' → logprob: -11.4239501953125
    10. ']' → logprob: -11.4239501953125

Token 243: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008090290939435363
    2. 'v' → logprob: -7.125809192657471
    3. ' ' → logprob: -13.125808715820312
    4. '[v' → logprob: -14.000808715820312
    5. '][' → logprob: -14.125808715820312
    6. '   ' → logprob: -14.625808715820312
    7. '0' → logprob: -14.875808715820312
    8. '```' → logprob: -15.875808715820312
    9. ' v' → logprob: -16.250808715820312
    10. ')v' → logprob: -17.500808715820312

Token 244: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -1.7120533811976202e-05
    2. ']' → logprob: -11.500017166137695
    3. ' ][' → logprob: -12.250017166137695
    4. '[v' → logprob: -13.250017166137695
    5. '[' → logprob: -16.375017166137695
    6. '"][' → logprob: -16.750017166137695
    7. '       ' → logprob: -16.875017166137695
    8. 'v' → logprob: -17.875017166137695
    9. ''][' → logprob: -17.875017166137695
    10. '           ' → logprob: -18.125017166137695

Token 245: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.531315314830863e-06
    2. ' v' → logprob: -12.625003814697266
    3. ')v' → logprob: -16.625003814697266
    4. '	v' → logprob: -17.250003814697266
    5. 'vj' → logprob: -18.500003814697266
    6. ',v' → logprob: -19.375003814697266
    7. '[v' → logprob: -19.500003814697266
    8. '<v' → logprob: -19.625003814697266
    9. 'vq' → logprob: -19.625003814697266
    10. '0' → logprob: -20.250003814697266

Token 246: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03046024963259697
    2. '=' → logprob: -3.9054603576660156
    3. ']=' → logprob: -4.655460357666016
    4. ' =' → logprob: -8.280460357666016
    5. ']=-' → logprob: -9.280460357666016
    6. '[' → logprob: -12.155460357666016
    7. ' ]' → logprob: -12.905460357666016
    8. '=-' → logprob: -13.405460357666016
    9. ')' → logprob: -13.530460357666016
    10. 'v' → logprob: -13.780460357666016

Token 247: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0003076950670219958
    2. ' =' → logprob: -8.3753080368042
    3. '=-' → logprob: -9.5003080368042
    4. ']=' → logprob: -14.1253080368042
    5. ']' → logprob: -15.0003080368042
    6. '[' → logprob: -15.5003080368042
    7. ']=-' → logprob: -15.5003080368042
    8. '   ' → logprob: -15.7503080368042
    9. '=(-' → logprob: -15.7503080368042
    10. '=
' → logprob: -16.500307083129883

Token 248: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.5048530030981055e-06
    2. ' -' → logprob: -13.500001907348633
    3. '-parent' → logprob: -18.875001907348633
    4. '               ' → logprob: -19.375001907348633
    5. '                   ' → logprob: -19.625001907348633
    6. '   ' → logprob: -20.875001907348633
    7. '           ' → logprob: -23.125001907348633
    8. '```' → logprob: -23.250001907348633
    9. '\-' → logprob: -23.375001907348633
    10. '‌' → logprob: -23.625001907348633

Token 249: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '１' → logprob: -18.75
    4. '۱' → logprob: -19.625
    5. '১' → logprob: -19.75
    6. '   ' → logprob: -19.875
    7. '```' → logprob: -20.125
    8. '2' → logprob: -20.5625
    9. '१' → logprob: -20.875
    10. '' → logprob: -21.0625

Token 250: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004713141825050116
    2. 'else' → logprob: -5.37971305847168
    3. ' else' → logprob: -9.37971305847168
    4. '		' → logprob: -13.00471305847168
    5. 'elif' → logprob: -13.25471305847168
    6. '<|end|>' → logprob: -13.37971305847168
    7. '	       ' → logprob: -14.12971305847168
    8. '```' → logprob: -14.75471305847168
    9. '               ' → logprob: -14.87971305847168
    10. '          ' → logprob: -15.00471305847168

Token 251: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013379817828536034
    2. 'else' → logprob: -6.626338005065918
    3. ' else' → logprob: -11.876338005065918
    4. '		' → logprob: -12.626338005065918
    5. 'elif' → logprob: -14.001338005065918
    6. '	       ' → logprob: -14.751338005065918
    7. '          ' → logprob: -16.1263370513916
    8. '               ' → logprob: -16.2513370513916
    9. '```' → logprob: -16.2513370513916
    10. '       ' → logprob: -16.8763370513916

Token 252: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7189282774925232
    2. 'else' (adapté à ' else') → logprob: -0.7189282774925232
    3. ' else' → logprob: -3.718928337097168
    4. '       ' → logprob: -6.843928337097168
    5. '		' → logprob: -10.218928337097168
    6. '	else' → logprob: -10.468928337097168
    7. '   ' → logprob: -10.843928337097168
    8. '	       ' → logprob: -10.968928337097168
    9. '               ' → logprob: -11.218928337097168
    10. 'elif' → logprob: -12.468928337097168

Token 253: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.401599645614624
    2. ':' → logprob: -1.901599645614624
    3. ':
' → logprob: -2.151599645614624
    4. ' parent' → logprob: -3.526599645614624
    5. 'parent' → logprob: -3.901599645614624
    6. '[parent' → logprob: -4.401599884033203
    7. ',parent' → logprob: -6.776599884033203
    8. '(parent' → logprob: -7.526599884033203
    9. '.parent' → logprob: -7.901599884033203
    10. '	parent' → logprob: -8.401599884033203

Token 254: '               ' (ID: 506)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.11479438841342926
    2. ' parent' → logprob: -2.3647944927215576
    3. '               ' → logprob: -4.2397942543029785
    4. '	parent' → logprob: -10.239794731140137
    5. '[parent' → logprob: -11.364794731140137
    6. ',parent' → logprob: -11.364794731140137
    7. '.parent' → logprob: -12.489794731140137
    8. '(parent' → logprob: -12.989794731140137
    9. '_parent' → logprob: -13.364794731140137
    10. '   ' → logprob: -13.614794731140137

Token 255: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -0.0232557263225317
    2. ' parent' → logprob: -3.7732558250427246
    3. '                   ' → logprob: -11.773255348205566
    4. '	parent' → logprob: -13.523255348205566
    5. ',parent' → logprob: -15.023255348205566
    6. '[parent' → logprob: -15.273255348205566
    7. '(parent' → logprob: -15.523255348205566
    8. '.parent' → logprob: -15.648255348205566
    9. '               ' → logprob: -15.898255348205566
    10. '_parent' → logprob: -16.023256301879883

Token 256: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -4.961759259458631e-06
    2. 'k' → logprob: -12.500004768371582
    3. '[' → logprob: -13.750004768371582
    4. '][' → logprob: -17.0000057220459
    5. ' [' → logprob: -17.3750057220459
    6. '```' → logprob: -17.7500057220459
    7. '[
' → logprob: -17.8750057220459
    8. '{k' → logprob: -18.6250057220459
    9. ',k' → logprob: -19.3750057220459
    10. '[token' → logprob: -19.3750057220459

Token 257: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.058220457285642624
    2. '[k' → logprob: -2.933220386505127
    3. '][' → logprob: -5.933220386505127
    4. '+k' → logprob: -7.683220386505127
    5. 'k' → logprob: -9.433220863342285
    6. '[' → logprob: -9.433220863342285
    7. ' +' → logprob: -10.183220863342285
    8. ']' → logprob: -12.683220863342285
    9. '   ' → logprob: -13.183220863342285
    10. '```' → logprob: -13.308220863342285

Token 258: '1' (ID: 16)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.10096482932567596
    2. '1' → logprob: -2.3509647846221924
    3. ' k' → logprob: -8.225964546203613
    4. '[k' → logprob: -8.600964546203613
    5. '][' → logprob: -8.850964546203613
    6. ' ' → logprob: -10.350964546203613
    7. '```' → logprob: -10.350964546203613
    8. '
' → logprob: -10.600964546203613
    9. '0' → logprob: -10.725964546203613
    10. '   ' → logprob: -10.975964546203613

Token 259: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.000965891988016665
    2. '[' → logprob: -7.5009660720825195
    3. ']' → logprob: -9.12596607208252
    4. '[v' → logprob: -9.50096607208252
    5. ' ][' → logprob: -9.75096607208252
    6. '[k' → logprob: -9.87596607208252
    7. '[parent' → logprob: -9.87596607208252
    8. ')[' → logprob: -10.50096607208252
    9. '```' → logprob: -11.37596607208252
    10. '}[' → logprob: -12.25096607208252

Token 260: 'v' (ID: 85)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0015180727932602167
    2. 'parent' → logprob: -6.751518249511719
    3. 'v' → logprob: -8.126518249511719
    4. ' k' → logprob: -10.751518249511719
    5. ' parent' → logprob: -11.376518249511719
    6. '[parent' → logprob: -12.126518249511719
    7. '0' → logprob: -12.251518249511719
    8. '[k' → logprob: -12.251518249511719
    9. '][' → logprob: -13.876518249511719
    10. '   ' → logprob: -14.501518249511719

Token 261: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.17017927765846252
    2. ']' → logprob: -2.2951793670654297
    3. '[v' → logprob: -2.9201793670654297
    4. ']=' → logprob: -6.79517936706543
    5. ' ][' → logprob: -8.04517936706543
    6. '[' → logprob: -8.54517936706543
    7. '   ' → logprob: -9.42017936706543
    8. '=' → logprob: -10.92017936706543
    9. 'v' → logprob: -10.92017936706543
    10. '[parent' → logprob: -11.29517936706543

Token 262: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19226861000061035
    2. '[parent' → logprob: -2.1922686100006104
    3. '[' → logprob: -3.0672686100006104
    4. ' =' → logprob: -4.317268371582031
    5. '=[' → logprob: -6.692268371582031
    6. ']' → logprob: -6.942268371582031
    7. ']=' → logprob: -8.442268371582031
    8. '[v' → logprob: -8.567268371582031
    9. '][' → logprob: -8.692268371582031
    10. ' [' → logprob: -8.817268371582031

Token 263: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.000553151941858232
    2. ' parent' → logprob: -7.500553131103516
    3. '[parent' → logprob: -16.625553131103516
    4. '	parent' → logprob: -16.750553131103516
    5. '(parent' → logprob: -17.500553131103516
    6. ' ' → logprob: -19.875553131103516
    7. 'paren' → logprob: -20.000553131103516
    8. '   ' → logprob: -20.000553131103516
    9. ',parent' → logprob: -20.000553131103516
    10. '.parent' → logprob: -21.375553131103516

Token 264: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.00015979631280060858
    2. 'k' → logprob: -8.750160217285156
    3. '[' → logprob: -14.375160217285156
    4. '```' → logprob: -14.375160217285156
    5. '(k' → logprob: -17.250160217285156
    6. ' [' → logprob: -17.375160217285156
    7. '{k' → logprob: -17.625160217285156
    8. '[
' → logprob: -17.625160217285156
    9. '	k' → logprob: -17.750160217285156
    10. ' k' → logprob: -17.875160217285156

Token 265: '][' (ID: 2696)
  Prédit: '[parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[parent' → logprob: -0.32096946239471436
    2. '][' → logprob: -1.4459694623947144
    3. '[k' → logprob: -3.820969581604004
    4. 'k' → logprob: -4.445969581604004
    5. 'parent' → logprob: -5.820969581604004
    6. '[' → logprob: -7.070969581604004
    7. ')[' → logprob: -7.445969581604004
    8. ' ][' → logprob: -8.195969581604004
    9. '```' → logprob: -8.320969581604004
    10. '(parent' → logprob: -9.695969581604004

Token 266: 'parent' (ID: 4903)
  Prédit: 'parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.002483626827597618
    2. ' parent' → logprob: -6.00248384475708
    3. '[parent' → logprob: -12.002483367919922
    4. 'paren' → logprob: -14.377483367919922
    5. '	parent' → logprob: -14.502483367919922
    6. '(parent' → logprob: -14.752483367919922
    7. '   ' → logprob: -15.877483367919922
    8. ' ' → logprob: -17.627483367919922
    9. ',parent' → logprob: -17.877483367919922
    10. '[' → logprob: -18.377483367919922

Token 267: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.008623555302619934
    2. 'k' → logprob: -4.7586236000061035
    3. '```' → logprob: -12.508623123168945
    4. '[' → logprob: -12.758623123168945
    5. '{k' → logprob: -14.133623123168945
    6. ' k' → logprob: -14.633623123168945
    7. '	k' → logprob: -14.633623123168945
    8. '[
' → logprob: -15.383623123168945
    9. '(k' → logprob: -15.508623123168945
    10. '][' → logprob: -15.883623123168945

Token 268: '][' (ID: 2696)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.13092650473117828
    2. '[k' → logprob: -2.1309266090393066
    3. '[v' → logprob: -6.380926609039307
    4. '][' → logprob: -6.630926609039307
    5. 'v' → logprob: -7.005926609039307
    6. ']' → logprob: -10.505926132202148
    7. '```' → logprob: -11.380926132202148
    8. ' k' → logprob: -11.630926132202148
    9. '[' → logprob: -11.755926132202148
    10. '{k' → logprob: -12.755926132202148

Token 269: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.4121114822482923e-06
    2. '[v' → logprob: -13.000003814697266
    3. ' v' → logprob: -14.125003814697266
    4. 'k' → logprob: -15.000003814697266
    5. ')v' → logprob: -17.500003814697266
    6. '	v' → logprob: -18.500003814697266
    7. '```' → logprob: -19.000003814697266
    8. '][' → logprob: -19.625003814697266
    9. ']' → logprob: -19.750003814697266
    10. '(v' → logprob: -19.750003814697266

Token 270: ']]

' (ID: 84024)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5045661330223083
    2. '[v' → logprob: -1.0045661926269531
    3. ']]' → logprob: -4.254566192626953
    4. 'v' → logprob: -4.254566192626953
    5. '])' → logprob: -6.879566192626953
    6. '][' → logprob: -8.129566192626953
    7. ']])' → logprob: -9.004566192626953
    8. '[' → logprob: -9.754566192626953
    9. ']]]' → logprob: -10.504566192626953
    10. ']>' → logprob: -10.504566192626953

Token 271: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.042468175292015076
    2. '   ' → logprob: -3.2924680709838867
    3. ')' → logprob: -6.417468070983887
    4. ' def' → logprob: -6.417468070983887
    5. 'for' → logprob: -7.167468070983887
    6. ' for' → logprob: -8.417468070983887
    7. ':' → logprob: -10.167468070983887
    8. '(' → logprob: -10.417468070983887
    9. '.' → logprob: -10.917468070983887
    10. '    
' → logprob: -11.292468070983887

Token 272: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.17404554784297943
    2. '   ' → logprob: -2.4240455627441406
    3. 'for' → logprob: -2.6740455627441406
    4. ' for' → logprob: -6.299045562744141
    5. ' def' → logprob: -8.54904556274414
    6. '    
' → logprob: -8.79904556274414
    7. '```' → logprob: -10.79904556274414
    8. '
' → logprob: -13.42404556274414
    9. 'import' → logprob: -15.04904556274414
    10. '    ' → logprob: -15.29904556274414

Token 273: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.38689249753952026
    2. 'l' → logprob: -1.136892557144165
    3. 'L' → logprob: -11.261892318725586
    4. ' L' → logprob: -12.386892318725586
    5. '	l' → logprob: -13.011892318725586
    6. ' ' → logprob: -13.761892318725586
    7. '   ' → logprob: -15.136892318725586
    8. '
' → logprob: -15.511892318725586
    9. '

' → logprob: -15.636892318725586
    10. ' get' → logprob: -16.136892318725586

Token 274: 'ca' (ID: 3743)
  Prédit: 'ca'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ca' → logprob: -0.0001544321421533823
    2. 'c' → logprob: -9.250154495239258
    3. '   ' → logprob: -10.750154495239258
    4. '_ca' → logprob: -11.250154495239258
    5. 'a' → logprob: -11.875154495239258
    6. '
' → logprob: -12.500154495239258
    7. 'CA' → logprob: -12.500154495239258
    8. ' ca' → logprob: -12.625154495239258
    9. 'cm' → logprob: -13.875154495239258
    10. 'cas' → logprob: -13.875154495239258

Token 275: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.05805478245019913
    2. '(a' → logprob: -3.0580546855926514
    3. '(' → logprob: -4.6830549240112305
    4. '(x' → logprob: -8.80805492401123
    5. ' (' → logprob: -11.30805492401123
    6. '_(' → logprob: -12.68305492401123
    7. '(b' → logprob: -13.55805492401123
    8. '(A' → logprob: -13.93305492401123
    9. '(s' → logprob: -14.43305492401123
    10. '(l' → logprob: -14.55805492401123

Token 276: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1274169683456421
    2. ',v' → logprob: -2.1274170875549316
    3. ' ,' → logprob: -7.627417087554932
    4. ',
' → logprob: -13.877416610717773
    5. ',u' → logprob: -14.252416610717773
    6. ',b' → logprob: -16.127416610717773
    7. ',int' → logprob: -17.127416610717773
    8. ',y' → logprob: -17.627416610717773
    9. ',w' → logprob: -17.752416610717773
    10. 'v' → logprob: -17.877416610717773

Token 277: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00016599490481894463
    2. '):
' → logprob: -8.750165939331055
    3. ')' → logprob: -12.250165939331055
    4. ' ):' → logprob: -12.875165939331055
    5. ':' → logprob: -16.375165939331055
    6. '):
' → logprob: -16.750165939331055
    7. '   ' → logprob: -16.750165939331055
    8. ')：' → logprob: -18.375165939331055
    9. ' ' → logprob: -18.875165939331055
    10. '):

' → logprob: -19.375165939331055

Token 278: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17839206755161285
    2. '   ' → logprob: -2.303392171859741
    3. '    ' → logprob: -3.178392171859741
    4. '
' → logprob: -5.553391933441162
    5. ' if' → logprob: -5.553391933441162
    6. '    
' → logprob: -5.678391933441162
    7. ' 
' → logprob: -5.678391933441162
    8. '<|end|>' → logprob: -6.553391933441162
    9. '  
' → logprob: -6.678391933441162
    10. ' ' → logprob: -6.678391933441162

Token 279: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.006728634238243103
    2. ' if' → logprob: -5.006728649139404
    3. '   ' → logprob: -11.381728172302246
    4. '       ' → logprob: -13.506728172302246
    5. '	if' → logprob: -14.631728172302246
    6. ' ' → logprob: -17.381729125976562
    7. '    ' → logprob: -17.631729125976562
    8. '           ' → logprob: -19.381729125976562
    9. '#' → logprob: -19.506729125976562
    10. '        
' → logprob: -19.506729125976562

Token 280: ' depth' (ID: 13636)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.0019287518225610256
    2. ' depth' → logprob: -6.251928806304932
    3. '(depth' → logprob: -16.626928329467773
    4. 'deep' → logprob: -17.251928329467773
    5. '_depth' → logprob: -19.126928329467773
    6. '   ' → logprob: -19.126928329467773
    7. ' ' → logprob: -19.376928329467773
    8. 'de' → logprob: -20.501928329467773
    9. 'Depth' → logprob: -20.751928329467773
    10. '	de' → logprob: -21.001928329467773

Token 281: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -3.070975071750581e-05
    2. 'u' → logprob: -10.500030517578125
    3. '[' → logprob: -13.375030517578125
    4. '(u' → logprob: -13.500030517578125
    5. ' u' → logprob: -16.500030517578125
    6. ' [' → logprob: -16.750030517578125
    7. '	u' → logprob: -18.250030517578125
    8. '[v' → logprob: -19.000030517578125
    9. '<u' → logprob: -19.625030517578125
    10. '[
' → logprob: -19.750030517578125

Token 282: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.06245989724993706
    2. ' <' → logprob: -2.812459945678711
    3. '>' → logprob: -7.687459945678711
    4. '<u' → logprob: -11.437459945678711
    5. ']' → logprob: -11.562459945678711
    6. ']<' → logprob: -12.312459945678711
    7. ' >' → logprob: -12.687459945678711
    8. ')' → logprob: -13.437459945678711
    9. '<v' → logprob: -13.562459945678711
    10. ')<' → logprob: -14.312459945678711

Token 283: ' >' (ID: 1424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0019312551012262702
    2. ' <' → logprob: -6.251931190490723
    3. '>' → logprob: -13.251931190490723
    4. '<v' → logprob: -14.626931190490723
    5. '<u' → logprob: -15.001931190490723
    6. '[' → logprob: -17.62693214416504
    7. '\<' → logprob: -17.75193214416504
    8. '   ' → logprob: -19.12693214416504
    9. '<n' → logprob: -19.12693214416504
    10. ' ' → logprob: -19.12693214416504

Token 284: ' depth' (ID: 13636)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.38697370886802673
    2. ' depth' → logprob: -1.1369737386703491
    3. '=' → logprob: -9.26197338104248
    4. '(depth' → logprob: -12.76197338104248
    5. '   ' → logprob: -13.38697338104248
    6. '
' → logprob: -13.51197338104248
    7. 'v' → logprob: -14.26197338104248
    8. ' ' → logprob: -14.38697338104248
    9. '  ' → logprob: -15.88697338104248
    10. '    ' → logprob: -16.386974334716797

Token 285: '[v' (ID: 36561)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.015064439736306667
    2. '[v' → logprob: -4.265064239501953
    3. ' v' → logprob: -7.015064239501953
    4. '	v' → logprob: -13.515064239501953
    5. ')v' → logprob: -15.265064239501953
    6. '=v' → logprob: -15.515064239501953
    7. '
' → logprob: -16.015064239501953
    8. '[' → logprob: -16.265064239501953
    9. '[u' → logprob: -16.640064239501953
    10. '<v' → logprob: -16.890064239501953

Token 286: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2622200548648834
    2. ':' → logprob: -1.637220025062561
    3. '):
' → logprob: -3.3872201442718506
    4. ':
' → logprob: -6.5122199058532715
    5. ']:' → logprob: -7.5122199058532715
    6. ' ):' → logprob: -8.76222038269043
    7. '}:' → logprob: -9.76222038269043
    8. '>:' → logprob: -10.88722038269043
    9. ' :' → logprob: -11.13722038269043
    10. ' ' → logprob: -11.38722038269043

Token 287: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0982362031936646
    2. ' u' → logprob: -1.0982362031936646
    3. 'u' → logprob: -1.2232362031936646
    4. '(u' → logprob: -4.848236083984375
    5. '=u' → logprob: -5.223236083984375
    6. '[u' → logprob: -5.348236083984375
    7. 'v' → logprob: -5.473236083984375
    8. ' 
' → logprob: -5.598236083984375
    9. ',u' → logprob: -5.973236083984375
    10. ' v' → logprob: -6.223236083984375

Token 288: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.10021496564149857
    2. ' u' → logprob: -2.350214958190918
    3. '       ' → logprob: -12.100214958190918
    4. '	u' → logprob: -13.475214958190918
    5. ',u' → logprob: -14.850214958190918
    6. '(u' → logprob: -15.100214958190918
    7. '[u' → logprob: -15.225214958190918
    8. '           ' → logprob: -15.350214958190918
    9. '=u' → logprob: -16.725215911865234
    10. '   ' → logprob: -17.100215911865234

Token 289: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020951840560883284
    2. ',v' → logprob: -6.2520952224731445
    3. ' ,' → logprob: -8.752095222473145
    4. ',u' → logprob: -11.877095222473145
    5. ',d' → logprob: -14.127095222473145
    6. ',b' → logprob: -15.502095222473145
    7. ',parent' → logprob: -16.002094268798828
    8. ',p' → logprob: -16.627094268798828
    9. ',user' → logprob: -16.627094268798828
    10. ',n' → logprob: -17.252094268798828

Token 290: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3869023621082306
    2. '=' → logprob: -1.1369023323059082
    3. '=u' → logprob: -11.011902809143066
    4. ',' → logprob: -11.261902809143066
    5. '=v' → logprob: -14.011902809143066
    6. 'u' → logprob: -14.886902809143066
    7. '[' → logprob: -15.636902809143066
    8. ' ' → logprob: -15.636902809143066
    9. '=user' → logprob: -16.01190185546875
    10. '＝' → logprob: -16.38690185546875

Token 291: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.023247340694069862
    2. ' v' → logprob: -3.773247241973877
    3. '	v' → logprob: -13.273247718811035
    4. '   ' → logprob: -16.14824676513672
    5. ')v' → logprob: -17.27324676513672
    6. '    ' → logprob: -17.77324676513672
    7. '(v' → logprob: -18.27324676513672
    8. ',v' → logprob: -18.27324676513672
    9. ' ' → logprob: -18.39824676513672
    10. '[v' → logprob: -19.02324676513672

Token 292: ',u' (ID: 80698)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012689977302215993
    2. '<|end|>' → logprob: -9.500126838684082
    3. ',u' → logprob: -10.250126838684082
    4. ',v' → logprob: -12.000126838684082
    5. ',user' → logprob: -12.625126838684082
    6. 'u' → logprob: -13.250126838684082
    7. ',None' → logprob: -13.625126838684082
    8. ' ,' → logprob: -14.000126838684082
    9. ',
' → logprob: -14.375126838684082
    10. '<|end|>' → logprob: -14.750126838684082

Token 293: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.97218257188797
    2. ' 
' → logprob: -0.97218257188797
    3. '  
' → logprob: -1.7221825122833252
    4. '        
' → logprob: -3.597182512283325
    5. '<|end|>' → logprob: -4.347182750701904
    6. '
' → logprob: -4.597182750701904
    7. '    
' → logprob: -4.847182750701904
    8. ' ' → logprob: -5.847182750701904
    9. '        ' → logprob: -6.847182750701904
    10. '   ' → logprob: -7.097182750701904

Token 294: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1544174700975418
    2. '       ' → logprob: -2.6544175148010254
    3. ' 
' → logprob: -3.4044175148010254
    4. '        
' → logprob: -3.9044175148010254
    5. '    
' → logprob: -4.654417514801025
    6. '  
' → logprob: -4.779417514801025
    7. '
' → logprob: -7.529417514801025
    8. '   ' → logprob: -8.154417037963867
    9. '\n' → logprob: -8.529417037963867
    10. '   
' → logprob: -8.904417037963867

Token 295: ' diff' (ID: 8868)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05316772684454918
    2. 'diff' (adapté à ' diff') → logprob: -3.0531678199768066
    3. ' for' → logprob: -5.553167819976807
    4. '   ' → logprob: -8.053167343139648
    5. '       ' → logprob: -8.053167343139648
    6. ' diff' → logprob: -10.428167343139648
    7. 'depth' → logprob: -10.803167343139648
    8. '#' → logprob: -12.803167343139648
    9. '	diff' → logprob: -13.553167343139648
    10. '
' → logprob: -13.928167343139648

Token 296: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029751529917120934
    2. '=' → logprob: -3.5297515392303467
    3. ' ' → logprob: -14.279751777648926
    4. '_' → logprob: -15.529751777648926
    5. ' +=' → logprob: -16.15475082397461
    6. ' =
' → logprob: -17.77975082397461
    7. '_=' → logprob: -17.90475082397461
    8. '＝' → logprob: -18.02975082397461
    9. 's' → logprob: -18.02975082397461
    10. ' =(' → logprob: -18.15475082397461

Token 297: ' depth' (ID: 13636)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.00317783304490149
    2. ' depth' → logprob: -5.753177642822266
    3. '   ' → logprob: -16.378177642822266
    4. '(depth' → logprob: -17.253177642822266
    5. ' ' → logprob: -21.003177642822266
    6. '       ' → logprob: -21.128177642822266
    7. '
' → logprob: -21.253177642822266
    8. '-depth' → logprob: -22.003177642822266
    9. '    ' → logprob: -22.628177642822266
    10. '  ' → logprob: -23.003177642822266

Token 298: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.023274948820471764
    2. 'v' → logprob: -3.7732748985290527
    3. '	v' → logprob: -11.273275375366211
    4. '[' → logprob: -11.773275375366211
    5. ' v' → logprob: -12.148275375366211
    6. '(v' → logprob: -13.398275375366211
    7. '[u' → logprob: -14.148275375366211
    8. '<v' → logprob: -15.023275375366211
    9. ',v' → logprob: -15.273275375366211
    10. '<|end|>' → logprob: -15.773275375366211

Token 299: ']-' (ID: 27107)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10035613179206848
    2. '-' → logprob: -2.350356101989746
    3. ']' → logprob: -8.975356101989746
    4. ')' → logprob: -11.600356101989746
    5. ']-' → logprob: -11.975356101989746
    6. '-u' → logprob: -12.600356101989746
    7. ' ' → logprob: -13.225356101989746
    8. '[' → logprob: -14.225356101989746
    9. ')-' → logprob: -14.600356101989746
    10. '[u' → logprob: -15.475356101989746

Token 300: 'depth' (ID: 41022)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.03837607055902481
    2. 'depth' → logprob: -3.2883760929107666
    3. ' depth' → logprob: -8.413375854492188
    4. ' u' → logprob: -9.288375854492188
    5. '[u' → logprob: -11.288375854492188
    6. 'user' → logprob: -12.413375854492188
    7. '[' → logprob: -13.288375854492188
    8. '(depth' → logprob: -13.788375854492188
    9. '<|end|>' → logprob: -15.288375854492188
    10. '_depth' → logprob: -15.288375854492188

Token 301: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0007125511183403432
    2. 'u' → logprob: -7.2507123947143555
    3. '[' → logprob: -13.875712394714355
    4. '[v' → logprob: -14.000712394714355
    5. '[user' → logprob: -14.375712394714355
    6. '	u' → logprob: -16.750713348388672
    7. '```' → logprob: -17.000713348388672
    8. '[
' → logprob: -17.250713348388672
    9. '<u' → logprob: -17.500713348388672
    10. ' u' → logprob: -17.625713348388672

Token 302: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17093557119369507
    2. '<|end|>' → logprob: -2.67093563079834
    3. '
' → logprob: -2.79593563079834
    4. ')
' → logprob: -3.92093563079834
    5. '<|end|>' → logprob: -5.42093563079834
    6. ' 
' → logprob: -7.54593563079834
    7. ' )' → logprob: -7.54593563079834
    8. '  
' → logprob: -8.42093563079834
    9. '       ' → logprob: -8.42093563079834
    10. '    
' → logprob: -8.54593563079834

Token 303: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.537214994430542
    2. ' for' → logprob: -1.412214994430542
    3. 'for' → logprob: -1.787214994430542
    4. '       ' → logprob: -5.412215232849121
    5. '	for' → logprob: -10.037215232849121
    6. '    
' → logprob: -10.287215232849121
    7. ' ' → logprob: -10.787215232849121
    8. '    ' → logprob: -10.787215232849121
    9. '```' → logprob: -12.537215232849121
    10. '
' → logprob: -12.787215232849121

Token 304: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -3.643152740551159e-05
    2. ' for' → logprob: -10.750036239624023
    3. '   ' → logprob: -11.500036239624023
    4. '       ' → logprob: -12.250036239624023
    5. '```' → logprob: -17.500036239624023
    6. '
' → logprob: -17.625036239624023
    7. '	for' → logprob: -18.625036239624023
    8. 'while' → logprob: -19.250036239624023
    9. '           ' → logprob: -19.750036239624023
    10. ' ' → logprob: -20.000036239624023

Token 305: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.023400846868753433
    2. 'k' → logprob: -3.7734007835388184
    3. ' i' → logprob: -8.773401260375977
    4. ' k' → logprob: -14.648401260375977
    5. '_i' → logprob: -16.023401260375977
    6. '	i' → logprob: -17.523401260375977
    7. 'j' → logprob: -18.148401260375977
    8. ' ' → logprob: -18.898401260375977
    9. '_k' → logprob: -19.273401260375977
    10. 'bit' → logprob: -19.523401260375977

Token 306: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0013504724483937025
    2. 'in' → logprob: -6.626350402832031
    3. ' ' → logprob: -10.626350402832031
    4. '	in' → logprob: -16.37635040283203
    5. ',' → logprob: -16.87635040283203
    6. '  ' → logprob: -17.12635040283203
    7. '=' → logprob: -17.50135040283203
    8. ' 
' → logprob: -17.75135040283203
    9. 's' → logprob: -18.12635040283203
    10. 'In' → logprob: -18.25135040283203

Token 307: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0067154900170862675
    2. ' range' → logprob: -5.006715297698975
    3. ' ' → logprob: -16.506715774536133
    4. '   ' → logprob: -17.256715774536133
    5. 'r' → logprob: -17.631715774536133
    6. '	range' → logprob: -18.131715774536133
    7. '(range' → logprob: -18.381715774536133
    8. '
' → logprob: -18.506715774536133
    9. 'rang' → logprob: -18.506715774536133
    10. '  ' → logprob: -18.631715774536133

Token 308: '(LOG' (ID: 55791)
  Prédit: '(LOG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(LOG' → logprob: -0.003181159496307373
    2. 'LOG' → logprob: -5.753180980682373
    3. '	LOG' → logprob: -13.253181457519531
    4. ' LOG' → logprob: -14.128181457519531
    5. '(' → logprob: -14.878181457519531
    6. '.LOG' → logprob: -15.378181457519531
    7. '(log' → logprob: -15.503181457519531
    8. '(len' → logprob: -16.25318145751953
    9. '_LOG' → logprob: -16.75318145751953
    10. '(
' → logprob: -17.62818145751953

Token 309: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.05500279366970062
    2. '):' → logprob: -3.1800026893615723
    3. ' ):
' → logprob: -5.180002689361572
    4. ',' → logprob: -6.305002689361572
    5. '       ' → logprob: -7.055002689361572
    6. ' ):' → logprob: -7.180002689361572
    7. ':
' → logprob: -8.05500316619873
    8. ':' → logprob: -8.18000316619873
    9. '<|end|>' → logprob: -8.18000316619873
    10. ' ,' → logprob: -8.18000316619873

Token 310: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005376641638576984
    2. ' if' → logprob: -5.505376815795898
    3. 'if' → logprob: -7.255376815795898
    4. '	       ' → logprob: -7.755376815795898
    5. '       ' → logprob: -10.005376815795898
    6. '        ' → logprob: -10.755376815795898
    7. '<|end|>' → logprob: -10.880376815795898
    8. '		' → logprob: -11.130376815795898
    9. '               ' → logprob: -11.380376815795898
    10. '          ' → logprob: -11.505376815795898

Token 311: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16294831037521362
    2. ' if' → logprob: -2.1629483699798584
    3. '           ' → logprob: -3.4129483699798584
    4. '               ' → logprob: -6.037948131561279
    5. '	       ' → logprob: -11.162948608398438
    6. '   ' → logprob: -11.412948608398438
    7. '       ' → logprob: -11.537948608398438
    8. '	if' → logprob: -11.662948608398438
    9. '		' → logprob: -13.912948608398438
    10. '	           ' → logprob: -14.037948608398438

Token 312: ' diff' (ID: 8868)
  Prédit: '(diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(diff' → logprob: -0.7713955640792847
    2. 'diff' → logprob: -1.1463955640792847
    3. ' diff' → logprob: -1.5213955640792847
    4. ' (' → logprob: -6.771395683288574
    5. '	diff' → logprob: -8.271395683288574
    6. '(d' → logprob: -10.896395683288574
    7. '   ' → logprob: -11.021395683288574
    8. '(' → logprob: -13.146395683288574
    9. ' ' → logprob: -13.146395683288574
    10. '((' → logprob: -13.521395683288574

Token 313: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.47411707043647766
    2. '&' → logprob: -0.9741170406341553
    3. '>>' → logprob: -11.224117279052734
    4. '&amp' → logprob: -12.099117279052734
    5. '＆' → logprob: -12.474117279052734
    6. '&r' → logprob: -12.474117279052734
    7. '&
' → logprob: -12.724117279052734
    8. '&(' → logprob: -12.849117279052734
    9. '&nbsp' → logprob: -13.474117279052734
    10. '&i' → logprob: -13.599117279052734

Token 314: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.026976903900504112
    2. '(' → logprob: -4.151977062225342
    3. '1' → logprob: -4.526977062225342
    4. '(i' → logprob: -10.276976585388184
    5. ' ' → logprob: -10.401976585388184
    6. '   ' → logprob: -13.401976585388184
    7. '           ' → logprob: -13.526976585388184
    8. '               ' → logprob: -14.026976585388184
    9. '                   ' → logprob: -15.151976585388184
    10. '            ' → logprob: -15.401976585388184

Token 315: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002873346209526062
    2. '(' → logprob: -5.877873420715332
    3. ' ' → logprob: -9.752873420715332
    4. ' (' → logprob: -12.002873420715332
    5. '   ' → logprob: -13.127873420715332
    6. '           ' → logprob: -14.127873420715332
    7. '               ' → logprob: -14.377873420715332
    8. ')' → logprob: -14.627873420715332
    9. '                   ' → logprob: -15.127873420715332
    10. '[' → logprob: -15.627873420715332

Token 316: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.12699204683303833
    2. ' <<' → logprob: -2.1269919872283936
    3. '1' → logprob: -9.751992225646973
    4. '<' → logprob: -13.626992225646973
    5. ' ' → logprob: -13.626992225646973
    6. '   ' → logprob: -13.876992225646973
    7. ' ' → logprob: -14.626992225646973
    8. '	' → logprob: -15.001992225646973
    9. ')' → logprob: -15.501992225646973
    10. '                   ' → logprob: -15.626992225646973

Token 317: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.15310683415737e-05
    2. ' i' → logprob: -10.750021934509277
    3. '	i' → logprob: -16.87502098083496
    4. '   ' → logprob: -19.37502098083496
    5. ')i' → logprob: -20.00002098083496
    6. ' ' → logprob: -21.25002098083496
    7. '[i' → logprob: -22.00002098083496
    8. '```' → logprob: -22.12502098083496
    9. '(i' → logprob: -22.50002098083496
    10. ')' → logprob: -22.62502098083496

Token 318: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06115424633026123
    2. '):
' → logprob: -2.936154365539551
    3. ')' → logprob: -5.186154365539551
    4. ':' → logprob: -7.936154365539551
    5. ')!=' → logprob: -8.43615436553955
    6. ')>' → logprob: -10.18615436553955
    7. ' ):' → logprob: -11.06115436553955
    8. '>' → logprob: -11.56115436553955
    9. '):
' → logprob: -12.06115436553955
    10. '!=' → logprob: -12.43615436553955

Token 319: '               ' (ID: 506)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.07097798585891724
    2. '               ' → logprob: -3.1959779262542725
    3. ' v' → logprob: -3.6959779262542725
    4. '	v' → logprob: -6.195978164672852
    5. ',v' → logprob: -7.820978164672852
    6. '(v' → logprob: -9.570978164672852
    7. '           ' → logprob: -9.570978164672852
    8. ')v' → logprob: -9.695978164672852
    9. '   ' → logprob: -9.945978164672852
    10. '[v' → logprob: -10.695978164672852

Token 320: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -4.56102097814437e-05
    2. ' v' → logprob: -10.000045776367188
    3. '               ' → logprob: -16.750045776367188
    4. '	v' → logprob: -16.750045776367188
    5. '                   ' → logprob: -16.750045776367188
    6. '   ' → logprob: -19.750045776367188
    7. ')v' → logprob: -21.125045776367188
    8. '           ' → logprob: -21.500045776367188
    9. ',v' → logprob: -21.625045776367188
    10. '[v' → logprob: -21.875045776367188

Token 321: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011047814972698689
    2. ' =' → logprob: -4.511047840118408
    3. '＝' → logprob: -20.26104736328125
    4. 'parent' → logprob: -21.26104736328125
    5. '=
' → logprob: -22.51104736328125
    6. ')' → logprob: -22.51104736328125
    7. '=

' → logprob: -22.63604736328125
    8. '.=' → logprob: -23.01104736328125
    9. ')=' → logprob: -23.01104736328125
    10. ',' → logprob: -23.13604736328125

Token 322: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.0024756586644798517
    2. ' parent' → logprob: -6.002475738525391
    3. '[parent' → logprob: -17.12747573852539
    4. '(parent' → logprob: -18.00247573852539
    5. '	parent' → logprob: -18.12747573852539
    6. 'paren' → logprob: -19.75247573852539
    7. ',parent' → logprob: -20.37747573852539
    8. '_parent' → logprob: -20.62747573852539
    9. '.parent' → logprob: -20.62747573852539
    10. 'Parent' → logprob: -21.00247573852539

Token 323: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. 'i' → logprob: -15.250000953674316
    3. '[' → logprob: -15.750000953674316
    4. '[
' → logprob: -16.375
    5. '```' → logprob: -16.875
    6. '
' → logprob: -18.25
    7. ' ' → logprob: -18.875
    8. '(i' → logprob: -19.375
    9. '[k' → logprob: -19.75
    10. ' [' → logprob: -20.125

Token 324: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.011211690492928028
    2. '[v' → logprob: -4.51121187210083
    3. 'v' → logprob: -8.761211395263672
    4. ']' → logprob: -12.636211395263672
    5. ' ][' → logprob: -13.011211395263672
    6. ')[' → logprob: -14.511211395263672
    7. '```' → logprob: -15.011211395263672
    8. '	v' → logprob: -15.511211395263672
    9. '[' → logprob: -15.636211395263672
    10. '   ' → logprob: -16.261211395263672

Token 325: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.1008713702030946e-06
    2. ' v' → logprob: -13.125001907348633
    3. ')v' → logprob: -18.500001907348633
    4. '[v' → logprob: -19.750001907348633
    5. '	v' → logprob: -19.875001907348633
    6. '(v' → logprob: -21.000001907348633
    7. '```' → logprob: -22.250001907348633
    8. '-v' → logprob: -22.500001907348633
    9. '$v' → logprob: -22.625001907348633
    10. '?v' → logprob: -23.250001907348633

Token 326: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001617035741219297
    2. ')
' → logprob: -9.000162124633789
    3. ']' → logprob: -10.250162124633789
    4. ')]' → logprob: -13.500162124633789
    5. '）' → logprob: -14.750162124633789
    6. '               ' → logprob: -15.000162124633789
    7. '       ' → logprob: -15.250162124633789
    8. ')

' → logprob: -15.875162124633789
    9. '   ' → logprob: -16.12516212463379
    10. ')
' → logprob: -16.37516212463379

Token 327: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5235729217529297
    2. '   ' → logprob: -0.8985729217529297
    3. 'u' → logprob: -8.89857292175293
    4. ' return' → logprob: -9.52357292175293
    5. '        
' → logprob: -9.64857292175293
    6. '    
' → logprob: -10.14857292175293
    7. ' u' → logprob: -10.14857292175293
    8. 'return' → logprob: -10.27357292175293
    9. ' ' → logprob: -10.64857292175293
    10. '<|end|>' → logprob: -11.77357292175293

Token 328: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.13781121373176575
    2. '   ' → logprob: -2.8878111839294434
    3. ' if' → logprob: -3.0128111839294434
    4. '       ' → logprob: -4.137811183929443
    5. 'for' → logprob: -4.887811183929443
    6. ' for' → logprob: -8.137811660766602
    7. '        
' → logprob: -10.262811660766602
    8. 'return' → logprob: -11.262811660766602
    9. '	if' → logprob: -11.262811660766602
    10. '    
' → logprob: -11.512811660766602

Token 329: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.005235648714005947
    2. ' u' → logprob: -5.25523567199707
    3. '       ' → logprob: -14.13023567199707
    4. '   ' → logprob: -14.25523567199707
    5. '	u' → logprob: -15.00523567199707
    6. '           ' → logprob: -17.25523567199707
    7. '    ' → logprob: -17.50523567199707
    8. '[u' → logprob: -19.00523567199707
    9. '        ' → logprob: -19.13023567199707
    10. '
' → logprob: -19.38023567199707

Token 330: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12693440914154053
    2. '==' → logprob: -2.12693452835083
    3. '=' → logprob: -12.751934051513672
    4. '==
' → logprob: -13.876934051513672
    5. ' ==
' → logprob: -14.126934051513672
    6. ' =' → logprob: -14.251934051513672
    7. ' !=' → logprob: -14.876934051513672
    8. ' ' → logprob: -15.251934051513672
    9. ']==' → logprob: -15.501934051513672
    10. ')==' → logprob: -15.876934051513672

Token 331: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0007100477814674377
    2. ' v' → logprob: -7.2507100105285645
    3. '	v' → logprob: -18.000709533691406
    4. ' ' → logprob: -19.875709533691406
    5. '   ' → logprob: -20.000709533691406
    6. ')v' → logprob: -20.750709533691406
    7. '
' → logprob: -20.875709533691406
    8. '    ' → logprob: -22.625709533691406
    9. '  ' → logprob: -23.375709533691406
    10. '```' → logprob: -23.500709533691406

Token 332: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34829601645469666
    2. ':
' → logprob: -1.348296046257019
    3. '           ' → logprob: -3.7232959270477295
    4. ':return' → logprob: -4.723296165466309
    5. '       ' → logprob: -7.223296165466309
    6. '   ' → logprob: -8.723296165466309
    7. ' :
' → logprob: -8.723296165466309
    8. ' :' → logprob: -9.348296165466309
    9. ' return' → logprob: -9.348296165466309
    10. 'return' → logprob: -10.348296165466309

Token 333: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4982711672782898
    2. 'return' → logprob: -1.7482712268829346
    3. ' return' → logprob: -1.9982712268829346
    4. '       ' → logprob: -2.4982712268829346
    5. '   ' → logprob: -7.9982709884643555
    6. '	return' → logprob: -8.873270988464355
    7. '{return' → logprob: -10.498270988464355
    8. '	       ' → logprob: -11.373270988464355
    9. '		' → logprob: -11.498270988464355
    10. ':return' → logprob: -11.623270988464355

Token 334: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005685360636562109
    2. ' return' → logprob: -5.255685329437256
    3. '           ' → logprob: -7.755685329437256
    4. '       ' → logprob: -11.130685806274414
    5. '   ' → logprob: -12.130685806274414
    6. '	return' → logprob: -13.380685806274414
    7. '{return' → logprob: -14.005685806274414
    8. '               ' → logprob: -15.130685806274414
    9. ':return' → logprob: -16.255685806274414
    10. 'print' → logprob: -16.380685806274414

Token 335: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.00033546582562848926
    2. ' u' → logprob: -8.000335693359375
    3. 'v' → logprob: -17.375335693359375
    4. '	u' → logprob: -20.000335693359375
    5. '[u' → logprob: -22.250335693359375
    6. '(u' → logprob: -22.250335693359375
    7. ' ' → logprob: -22.750335693359375
    8. '   ' → logprob: -22.875335693359375
    9. '<u' → logprob: -23.250335693359375
    10. '```' → logprob: -23.500335693359375

Token 336: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5536367297172546
    2. '
' → logprob: -0.9286367297172546
    3. '   ' → logprob: -4.30363655090332
    4. ' for' → logprob: -4.80363655090332
    5. '  
' → logprob: -5.67863655090332
    6. '<|end|>' → logprob: -6.42863655090332
    7. '        
' → logprob: -6.67863655090332
    8. 'for' → logprob: -7.42863655090332
    9. '    
' → logprob: -7.55363655090332
    10. ' 
' → logprob: -7.92863655090332

Token 337: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05148453265428543
    2. ' for' → logprob: -4.17648458480835
    3. '   ' → logprob: -4.55148458480835
    4. '
' → logprob: -4.92648458480835
    5. 'for' → logprob: -4.92648458480835
    6. '	' → logprob: -5.30148458480835
    7. '	for' → logprob: -6.67648458480835
    8. '<|end|>' → logprob: -7.17648458480835
    9. '        
' → logprob: -7.55148458480835
    10. '  
' → logprob: -7.92648458480835

Token 338: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0016639928799122572
    2. ' for' → logprob: -6.501664161682129
    3. '   ' → logprob: -9.001664161682129
    4. '       ' → logprob: -10.251664161682129
    5. '
' → logprob: -12.751664161682129
    6. '	for' → logprob: -16.126663208007812
    7. '```' → logprob: -16.876663208007812
    8. ' ' → logprob: -17.626663208007812
    9. '        
' → logprob: -18.376663208007812
    10. '           ' → logprob: -18.501663208007812

Token 339: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0001584850688232109
    2. ' i' → logprob: -8.750158309936523
    3. '	i' → logprob: -20.500158309936523
    4. 'k' → logprob: -21.000158309936523
    5. '
' → logprob: -21.375158309936523
    6. ' ' → logprob: -22.375158309936523
    7. 'j' → logprob: -22.875158309936523
    8. '(i' → logprob: -23.000158309936523
    9. '[i' → logprob: -23.125158309936523
    10. '   ' → logprob: -23.125158309936523

Token 340: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.15597215294837952
    2. 'in' → logprob: -2.6559722423553467
    3. ' reversed' → logprob: -2.6559722423553467
    4. ' range' → logprob: -6.280972003936768
    5. 'range' → logprob: -6.655972003936768
    6. 're' → logprob: -7.155972003936768
    7. 'reverse' → logprob: -11.905972480773926
    8. '   ' → logprob: -12.655972480773926
    9. '
' → logprob: -13.030972480773926
    10. '[::-' → logprob: -13.030972480773926

Token 341: ' reversed' (ID: 57184)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018172889947891235
    2. 're' → logprob: -4.018172740936279
    3. ' range' → logprob: -11.268173217773438
    4. ' reversed' → logprob: -11.518173217773438
    5. '
' → logprob: -16.143173217773438
    6. 'r' → logprob: -16.643173217773438
    7. 'reverse' → logprob: -18.268173217773438
    8. 'ran' → logprob: -19.018173217773438
    9. 'rang' → logprob: -19.018173217773438
    10. '   ' → logprob: -19.768173217773438

Token 342: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.0015029559144750237
    2. 'range' → logprob: -6.501502990722656
    3. ' range' → logprob: -14.501502990722656
    4. '(' → logprob: -16.751502990722656
    5. '	range' → logprob: -18.876502990722656
    6. '
' → logprob: -21.376502990722656
    7. '```' → logprob: -21.626502990722656
    8. 'Range' → logprob: -21.626502990722656
    9. '(
' → logprob: -21.876502990722656
    10. '(r' → logprob: -22.001502990722656

Token 343: '(LOG' (ID: 55791)
  Prédit: '(LOG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(LOG' → logprob: -3.4121114822482923e-06
    2. '(' → logprob: -12.875003814697266
    3. 'LOG' → logprob: -14.500003814697266
    4. '	LOG' → logprob: -15.375003814697266
    5. '(
' → logprob: -16.625003814697266
    6. ' (' → logprob: -17.875003814697266
    7. '(log' → logprob: -18.625003814697266
    8. '   ' → logprob: -18.750003814697266
    9. '
' → logprob: -19.500003814697266
    10. ' LOG' → logprob: -19.750003814697266

Token 344: ')):
' (ID: 22530)
  Prédit: ')):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):
' → logprob: -0.35037463903427124
    2. ')):' → logprob: -1.225374698638916
    3. '       ' → logprob: -7.100374698638916
    4. '):
' → logprob: -7.725374698638916
    5. '))' → logprob: -8.350374221801758
    6. ')):
' → logprob: -8.725374221801758
    7. '):' → logprob: -8.850374221801758
    8. '   ' → logprob: -9.975374221801758
    9. ' ' → logprob: -10.975374221801758
    10. '           ' → logprob: -11.725374221801758

Token 345: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004136699251830578
    2. ' if' → logprob: -6.379136562347412
    3. '<|end|>' → logprob: -6.504136562347412
    4. ':' → logprob: -8.25413703918457
    5. '       ' → logprob: -8.75413703918457
    6. 'if' → logprob: -9.62913703918457
    7. ' :' → logprob: -9.62913703918457
    8. ':
' → logprob: -9.75413703918457
    9. '               ' → logprob: -10.00413703918457
    10. '        ' → logprob: -10.12913703918457

Token 346: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.06336581707000732
    2. ' if' → logprob: -2.813365936279297
    3. '               ' → logprob: -7.063365936279297
    4. '           ' → logprob: -7.563365936279297
    5. '   ' → logprob: -11.938365936279297
    6. '       ' → logprob: -12.188365936279297
    7. '
' → logprob: -12.688365936279297
    8. ' ' → logprob: -12.813365936279297
    9. '	if' → logprob: -12.938365936279297
    10. 'If' → logprob: -14.063365936279297

Token 347: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.008624386973679066
    2. ' parent' → logprob: -4.75862455368042
    3. '(parent' → logprob: -11.633624076843262
    4. '	parent' → logprob: -14.633624076843262
    5. '[parent' → logprob: -14.758624076843262
    6. '   ' → logprob: -16.258625030517578
    7. ',parent' → logprob: -16.508625030517578
    8. '.parent' → logprob: -17.758625030517578
    9. ' ' → logprob: -18.008625030517578
    10. '
' → logprob: -19.008625030517578

Token 348: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.45848218582978e-06
    2. 'i' → logprob: -13.75000286102295
    3. '[k' → logprob: -14.00000286102295
    4. '[' → logprob: -14.75000286102295
    5. '
' → logprob: -17.375001907348633
    6. '```' → logprob: -17.500001907348633
    7. '[
' → logprob: -17.625001907348633
    8. '(i' → logprob: -18.125001907348633
    9. ' [' → logprob: -18.625001907348633
    10. '[u' → logprob: -19.125001907348633

Token 349: '][' (ID: 2696)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.00027420982951298356
    2. 'u' → logprob: -8.875274658203125
    3. '[i' → logprob: -9.125274658203125
    4. '][' → logprob: -11.000274658203125
    5. '[' → logprob: -12.250274658203125
    6. ')[' → logprob: -14.125274658203125
    7. '
' → logprob: -14.250274658203125
    8. '}[' → logprob: -14.500274658203125
    9. '```' → logprob: -14.625274658203125
    10. '(u' → logprob: -14.625274658203125

Token 350: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -7.3458322731312364e-06
    2. ' u' → logprob: -12.250007629394531
    3. '[u' → logprob: -13.125007629394531
    4. '	u' → logprob: -15.250007629394531
    5. '<u' → logprob: -16.62500762939453
    6. ',u' → logprob: -17.12500762939453
    7. ''u' → logprob: -17.50000762939453
    8. '(u' → logprob: -17.75000762939453
    9. '-u' → logprob: -18.37500762939453
    10. 'user' → logprob: -18.50000762939453

Token 351: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011060673743486404
    2. ']!=' → logprob: -4.51106071472168
    3. '!=' → logprob: -11.51106071472168
    4. '[' → logprob: -13.26106071472168
    5. ' ]' → logprob: -14.88606071472168
    6. ')!=' → logprob: -15.76106071472168
    7. '0' → logprob: -15.88606071472168
    8. ' !=' → logprob: -15.88606071472168
    9. '```' → logprob: -16.38606071472168
    10. '][' → logprob: -16.63606071472168

Token 352: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.006027388386428356
    2. ' !=' → logprob: -5.1310272216796875
    3. '!=-' → logprob: -9.881027221679688
    4. ']!=' → logprob: -11.006027221679688
    5. ')!=' → logprob: -11.131027221679688
    6. '!==' → logprob: -12.131027221679688
    7. '()!=' → logprob: -12.256027221679688
    8. '[' → logprob: -12.381027221679688
    9. '```' → logprob: -13.756027221679688
    10. '<>' → logprob: -15.256027221679688

Token 353: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.00012403888104017824
    2. ' parent' → logprob: -9.000123977661133
    3. '-' → logprob: -15.125123977661133
    4. '[parent' → logprob: -16.000123977661133
    5. '	parent' → logprob: -16.250123977661133
    6. '   ' → logprob: -16.875123977661133
    7. '(parent' → logprob: -17.375123977661133
    8. '-parent' → logprob: -17.625123977661133
    9. ',parent' → logprob: -18.250123977661133
    10. ' ' → logprob: -18.250123977661133

Token 354: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1517960956552997e-05
    2. 'i' → logprob: -12.000011444091797
    3. '[' → logprob: -13.000011444091797
    4. '[
' → logprob: -13.875011444091797
    5. '<|end|>' → logprob: -14.000011444091797
    6. '```' → logprob: -15.000011444091797
    7. '(i' → logprob: -15.375011444091797
    8. ' i' → logprob: -15.375011444091797
    9. '[int' → logprob: -16.500011444091797
    10. '[I' → logprob: -16.500011444091797

Token 355: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001354824344161898
    2. '][' → logprob: -9.00013542175293
    3. 'i' → logprob: -12.12513542175293
    4. '[' → logprob: -12.25013542175293
    5. '[
' → logprob: -14.75013542175293
    6. ')[' → logprob: -15.00013542175293
    7. ' [' → logprob: -15.50013542175293
    8. '```' → logprob: -15.75013542175293
    9. ',i' → logprob: -16.12513542175293
    10. '[u' → logprob: -16.25013542175293

Token 356: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.8193366486229934e-05
    2. 'i' → logprob: -11.000018119812012
    3. ' v' → logprob: -14.375018119812012
    4. '[i' → logprob: -14.750018119812012
    5. '[v' → logprob: -15.000018119812012
    6. 'u' → logprob: -15.750018119812012
    7. '```' → logprob: -18.250019073486328
    8. '   ' → logprob: -19.000019073486328
    9. ' ' → logprob: -19.125019073486328
    10. '	v' → logprob: -19.625019073486328

Token 357: ']:
' (ID: 22152)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6394856572151184
    2. '):
' → logprob: -0.8894856572151184
    3. 'and' → logprob: -3.6394855976104736
    4. ')' → logprob: -4.639485836029053
    5. ']:
' → logprob: -5.139485836029053
    6. ']' → logprob: -5.139485836029053
    7. ']):
' → logprob: -5.389485836029053
    8. ':
' → logprob: -5.889485836029053
    9. '):' → logprob: -6.264485836029053
    10. '[u' → logprob: -7.139485836029053

Token 358: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004729753360152245
    2. ' u' → logprob: -5.504729747772217
    3. 'u' → logprob: -7.629729747772217
    4. ',u' → logprob: -9.504730224609375
    5. '<|end|>' → logprob: -10.379730224609375
    6. '[u' → logprob: -11.129730224609375
    7. '                
' → logprob: -12.379730224609375
    8. '	u' → logprob: -12.504730224609375
    9. '           ' → logprob: -12.754730224609375
    10. ' ' → logprob: -13.004730224609375

Token 359: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.011106541380286217
    2. ' u' → logprob: -4.511106491088867
    3. '               ' → logprob: -9.886106491088867
    4. '	u' → logprob: -12.011106491088867
    5. '                   ' → logprob: -13.511106491088867
    6. ',u' → logprob: -15.386106491088867
    7. '   ' → logprob: -16.011106491088867
    8. '           ' → logprob: -16.761106491088867
    9. '[u' → logprob: -17.136106491088867
    10. ' ' → logprob: -17.511106491088867

Token 360: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023245826363563538
    2. ' =' → logprob: -3.7732458114624023
    3. ',' → logprob: -15.023245811462402
    4. ')' → logprob: -17.39824676513672
    5. '=
' → logprob: -18.52324676513672
    6. ')=' → logprob: -18.64824676513672
    7. '＝' → logprob: -18.77324676513672
    8. ',parent' → logprob: -18.77324676513672
    9. '=

' → logprob: -19.27324676513672
    10. ']=' → logprob: -19.39824676513672

Token 361: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.0067154900170862675
    2. ' parent' → logprob: -5.006715297698975
    3. '	parent' → logprob: -16.881715774536133
    4. '(parent' → logprob: -17.006715774536133
    5. '[parent' → logprob: -17.006715774536133
    6. '.parent' → logprob: -19.006715774536133
    7. '
' → logprob: -19.256715774536133
    8. ',parent' → logprob: -19.506715774536133
    9. '_parent' → logprob: -19.756715774536133
    10. 'Parent' → logprob: -19.756715774536133

Token 362: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.165027217415627e-05
    2. 'i' → logprob: -10.875021934509277
    3. '```' → logprob: -13.750021934509277
    4. '[' → logprob: -14.000021934509277
    5. '
' → logprob: -15.625021934509277
    6. '[k' → logprob: -15.875021934509277
    7. '(i' → logprob: -16.12502098083496
    8. '][' → logprob: -16.12502098083496
    9. 's' → logprob: -16.62502098083496
    10. ' i' → logprob: -17.50002098083496

Token 363: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002509666606783867
    2. '[u' → logprob: -6.002509593963623
    3. '[v' → logprob: -11.377510070800781
    4. '[i' → logprob: -11.627510070800781
    5. ']' → logprob: -12.627510070800781
    6. '```' → logprob: -12.752510070800781
    7. 'u' → logprob: -13.002510070800781
    8. ')[' → logprob: -13.127510070800781
    9. ' ][' → logprob: -14.377510070800781
    10. ']][' → logprob: -14.502510070800781

Token 364: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.14506132900714874
    2. 'i' → logprob: -2.1450612545013428
    3. 'v' → logprob: -4.020061492919922
    4. '[i' → logprob: -11.520061492919922
    5. '[u' → logprob: -12.520061492919922
    6. ' u' → logprob: -13.770061492919922
    7. '```' → logprob: -14.020061492919922
    8. ' i' → logprob: -14.020061492919922
    9. ']' → logprob: -14.520061492919922
    10. ' ' → logprob: -15.270061492919922

Token 365: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.4737265408039093
    2. ')
' → logprob: -1.223726511001587
    3. '               ' → logprob: -3.098726511001587
    4. ']' → logprob: -3.598726511001587
    5. ')' → logprob: -4.598726749420166
    6. '           ' → logprob: -7.848726749420166
    7. '])
' → logprob: -9.473726272583008
    8. ']
' → logprob: -10.223726272583008
    9. '                   ' → logprob: -10.598726272583008
    10. ')
' → logprob: -11.098726272583008

Token 366: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09941156208515167
    2. 'v' → logprob: -2.5994114875793457
    3. ' v' → logprob: -4.224411487579346
    4. ',v' → logprob: -5.224411487579346
    5. '	v' → logprob: -8.849411964416504
    6. '[v' → logprob: -10.724411964416504
    7. '```' → logprob: -10.849411964416504
    8. '       ' → logprob: -10.974411964416504
    9. '<v' → logprob: -10.974411964416504
    10. '                
' → logprob: -11.224411964416504

Token 367: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -1.6240566083070007e-06
    2. ' v' → logprob: -13.500001907348633
    3. '               ' → logprob: -16.000001907348633
    4. '	v' → logprob: -17.125001907348633
    5. ',v' → logprob: -18.250001907348633
    6. '                   ' → logprob: -18.500001907348633
    7. '                ' → logprob: -20.625001907348633
    8. ')v' → logprob: -21.000001907348633
    9. '           ' → logprob: -21.250001907348633
    10. '       ' → logprob: -21.375001907348633

Token 368: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22788120806217194
    2. ' =' → logprob: -1.9778811931610107
    3. '[i' → logprob: -2.7278811931610107
    4. '=i' → logprob: -9.85288143157959
    5. '=[' → logprob: -12.22788143157959
    6. '=
' → logprob: -13.60288143157959
    7. '[' → logprob: -14.35288143157959
    8. ')' → logprob: -14.60288143157959
    9. ' ' → logprob: -14.72788143157959
    10. '   ' → logprob: -14.72788143157959

Token 369: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.0005893715424463153
    2. ' parent' → logprob: -7.750589370727539
    3. '[parent' → logprob: -8.750589370727539
    4. '	parent' → logprob: -15.875589370727539
    5. '(parent' → logprob: -16.25058937072754
    6. '.parent' → logprob: -16.50058937072754
    7. ',parent' → logprob: -17.37558937072754
    8. '   ' → logprob: -20.12558937072754
    9. '_parent' → logprob: -20.12558937072754
    10. '           ' → logprob: -20.25058937072754

Token 370: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.25
    3. '```' → logprob: -16.25
    4. '[
' → logprob: -18.0
    5. ')[' → logprob: -18.375
    6. '(i' → logprob: -19.25
    7. '[I' → logprob: -19.375
    8. 'i' → logprob: -19.625
    9. ',i' → logprob: -20.375
    10. '   ' → logprob: -20.75

Token 371: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.17255458235740662
    2. '][' → logprob: -1.922554612159729
    3. '[v' → logprob: -4.5475544929504395
    4. ')[' → logprob: -6.6725544929504395
    5. ')][' → logprob: -8.172554969787598
    6. '[u' → logprob: -10.297554969787598
    7. 'v' → logprob: -10.422554969787598
    8. ']][' → logprob: -11.547554969787598
    9. ')' → logprob: -11.672554969787598
    10. ']' → logprob: -12.047554969787598

Token 372: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.935296834039036e-06
    2. 'i' → logprob: -12.75000286102295
    3. ' v' → logprob: -17.125003814697266
    4. '[i' → logprob: -18.625003814697266
    5. '[v' → logprob: -19.875003814697266
    6. '```' → logprob: -20.375003814697266
    7. '	v' → logprob: -20.875003814697266
    8. ')v' → logprob: -21.000003814697266
    9. 'parent' → logprob: -21.000003814697266
    10. 'u' → logprob: -21.375003814697266

Token 373: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.626030445098877
    2. ')
' → logprob: -1.001030445098877
    3. '       ' → logprob: -2.376030445098877
    4. '   ' → logprob: -6.001030445098877
    5. '           ' → logprob: -6.501030445098877
    6. '
' → logprob: -7.626030445098877
    7. '               ' → logprob: -8.626029968261719
    8. ')return' → logprob: -9.876029968261719
    9. '    
' → logprob: -10.376029968261719
    10. 'return' → logprob: -10.626029968261719

Token 374: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18640926480293274
    2. '   ' → logprob: -2.4364092350006104
    3. '               ' → logprob: -3.5614092350006104
    4. '  
' → logprob: -3.8114092350006104
    5. '
' → logprob: -4.8114094734191895
    6. '    
' → logprob: -5.8114094734191895
    7. ')' → logprob: -5.9364094734191895
    8. '\n' → logprob: -5.9364094734191895
    9. '        
' → logprob: -6.1864094734191895
    10. '                
' → logprob: -6.1864094734191895

Token 375: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0005581548321060836
    2. ' return' → logprob: -7.500558376312256
    3. 'parent' → logprob: -12.500557899475098
    4. '   ' → logprob: -14.500557899475098
    5. '       ' → logprob: -14.625557899475098
    6. '               ' → logprob: -15.375557899475098
    7. '
' → logprob: -15.625557899475098
    8. '           ' → logprob: -16.875558853149414
    9. '	return' → logprob: -17.500558853149414
    10. ':return' → logprob: -17.500558853149414

Token 376: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.00015872348740231246
    2. ' parent' → logprob: -8.750158309936523
    3. '	parent' → logprob: -15.750158309936523
    4. '[parent' → logprob: -16.875158309936523
    5. 'paren' → logprob: -18.125158309936523
    6. '(parent' → logprob: -18.250158309936523
    7. '   ' → logprob: -18.250158309936523
    8. '
' → logprob: -20.125158309936523
    9. ' ' → logprob: -20.250158309936523
    10. '.parent' → logprob: -20.375158309936523

Token 377: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.012544145807623863
    2. '0' → logprob: -4.38754415512085
    3. '```' → logprob: -10.637543678283691
    4. '`' → logprob: -12.137543678283691
    5. ' ' → logprob: -13.262543678283691
    6. '
' → logprob: -13.887543678283691
    7. ' [' → logprob: -13.887543678283691
    8. 'def' → logprob: -15.012543678283691
    9. '   ' → logprob: -15.637543678283691
    10. '﻿' → logprob: -15.887543678283691

Token 378: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '０' → logprob: -19.5
    4. '۰' → logprob: -20.125
    5. '   ' → logprob: -21.375
    6. '000' → logprob: -21.625
    7. '
' → logprob: -22.125
    8. '[' → logprob: -22.875
    9. '00' → logprob: -22.875
    10. '٠' → logprob: -23.375

Token 379: '][' (ID: 2696)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.3306015716807451e-05
    2. '][' → logprob: -11.62501335144043
    3. '[' → logprob: -13.12501335144043
    4. 'u' → logprob: -13.12501335144043
    5. '}[' → logprob: -16.50001335144043
    6. '```' → logprob: -16.50001335144043
    7. ' [' → logprob: -17.00001335144043
    8. ')[' → logprob: -17.00001335144043
    9. '   ' → logprob: -17.25001335144043
    10. '	u' → logprob: -17.87501335144043

Token 380: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -4.320199877838604e-07
    2. ' u' → logprob: -15.625
    3. '[u' → logprob: -17.125
    4. '	u' → logprob: -17.375
    5. 'user' → logprob: -18.125
    6. ''u' → logprob: -19.625
    7. '<u' → logprob: -20.0
    8. '(u' → logprob: -20.875
    9. '<|end|>' → logprob: -20.875
    10. 'v' → logprob: -21.125

Token 381: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030529167503118515
    2. ']' → logprob: -3.530529260635376
    3. '])' → logprob: -7.780529022216797
    4. '<|end|>' → logprob: -8.780529022216797
    5. ')
' → logprob: -9.655529022216797
    6. ')]' → logprob: -9.780529022216797
    7. ' )' → logprob: -10.030529022216797
    8. ')return' → logprob: -11.780529022216797
    9. '```' → logprob: -12.155529022216797
    10. '}' → logprob: -12.280529022216797

Token 382: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6280861496925354
    2. 'for' → logprob: -1.6280860900878906
    3. 'def' → logprob: -1.8780860900878906
    4. '```' → logprob: -2.6280860900878906
    5. '    
' → logprob: -3.6280860900878906
    6. ' for' → logprob: -5.003086090087891
    7. '
' → logprob: -5.128086090087891
    8. '  
' → logprob: -6.003086090087891
    9. '<|end|>' → logprob: -7.003086090087891
    10. '   
' → logprob: -7.878086090087891

Token 383: ' def' (ID: 1056)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00048536903341300786
    2. '   ' → logprob: -7.750485420227051
    3. 'def' (adapté à ' def') → logprob: -10.00048542022705
    4. ' for' → logprob: -11.62548542022705
    5. '    
' → logprob: -15.62548542022705
    6. 'while' → logprob: -15.87548542022705
    7. '
' → logprob: -16.125484466552734
    8. '```' → logprob: -17.250484466552734
    9. '	for' → logprob: -17.875484466552734
    10. 'return' → logprob: -18.500484466552734

Token 384: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.9327901005744934
    2. 'distance' → logprob: -1.0577900409698486
    3. 'main' → logprob: -2.0577900409698486
    4. 'query' → logprob: -2.4327900409698486
    5. ' main' → logprob: -4.432790279388428
    6. ' dist' → logprob: -4.432790279388428
    7. 'solve' → logprob: -4.432790279388428
    8. ' distance' → logprob: -5.307790279388428
    9. ' query' → logprob: -6.932790279388428
    10. 'answer' → logprob: -7.307790279388428

Token 385: '_uv' (ID: 150764)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.001392973237670958
    2. '(' → logprob: -7.001392841339111
    3. '(a' → logprob: -7.751392841339111
    4. 'u' → logprob: -10.50139331817627
    5. ' (' → logprob: -11.75139331817627
    6. '_' → logprob: -12.62639331817627
    7. '(x' → logprob: -13.00139331817627
    8. '_u' → logprob: -13.62639331817627
    9. '[u' → logprob: -13.75139331817627
    10. 'a' → logprob: -13.87639331817627

Token 386: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.625000953674316
    3. '(a' → logprob: -15.375000953674316
    4. ' (' → logprob: -16.125
    5. '(U' → logprob: -18.5
    6. 'u' → logprob: -18.75
    7. '(x' → logprob: -19.625
    8. '(user' → logprob: -20.25
    9. '[u' → logprob: -21.125
    10. '(i' → logprob: -21.625

Token 387: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5769650936126709
    2. ',v' → logprob: -0.8269650936126709
    3. ' ,' → logprob: -7.20196533203125
    4. ',u' → logprob: -8.20196533203125
    5. ',b' → logprob: -13.20196533203125
    6. ',w' → logprob: -13.45196533203125
    7. ',d' → logprob: -14.57696533203125
    8. ',
' → logprob: -14.95196533203125
    9. ',y' → logprob: -15.07696533203125
    10. ',user' → logprob: -15.32696533203125

Token 388: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005276091862469912
    2. '):
' → logprob: -5.255276203155518
    3. ')' → logprob: -10.13027572631836
    4. ' ):' → logprob: -13.63027572631836
    5. '):
' → logprob: -14.00527572631836
    6. '   ' → logprob: -15.50527572631836
    7. ':' → logprob: -16.63027572631836
    8. '):

' → logprob: -16.63027572631836
    9. '(u' → logprob: -17.00527572631836
    10. 'u' → logprob: -17.25527572631836

Token 389: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.06495752930641174
    2. '   ' → logprob: -3.064957618713379
    3. ' return' → logprob: -4.439957618713379
    4. '       ' → logprob: -5.439957618713379
    5. '
' → logprob: -10.064957618713379
    6. '    ' → logprob: -10.814957618713379
    7. '	return' → logprob: -11.064957618713379
    8. '    
' → logprob: -12.064957618713379
    9. 'ret' → logprob: -12.689957618713379
    10. 'dist' → logprob: -12.689957618713379

Token 390: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005477790255099535
    2. 'dist' → logprob: -5.2554779052734375
    3. '   ' → logprob: -8.755477905273438
    4. ' return' → logprob: -9.380477905273438
    5. ' dist' → logprob: -14.380477905273438
    6. 'ret' → logprob: -14.880477905273438
    7. '       ' → logprob: -14.880477905273438
    8. '	return' → logprob: -15.380477905273438
    9. '
' → logprob: -16.005477905273438
    10. 'res' → logprob: -16.130477905273438

Token 391: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -4.1318875446449965e-05
    2. ' dist' → logprob: -10.250041007995605
    3. '   ' → logprob: -12.125041007995605
    4. '(dist' → logprob: -15.500041007995605
    5. '	dist' → logprob: -16.125041961669922
    6. '  ' → logprob: -17.625041961669922
    7. 'depth' → logprob: -18.250041961669922
    8. ' ' → logprob: -18.500041961669922
    9. 'abs' → logprob: -18.625041961669922
    10. '    ' → logprob: -19.250041961669922

Token 392: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.5048530030981055e-06
    2. 'u' → logprob: -13.500001907348633
    3. '[v' → logprob: -16.875001907348633
    4. '```' → logprob: -19.750001907348633
    5. '	u' → logprob: -20.375001907348633
    6. '[' → logprob: -20.500001907348633
    7. '
' → logprob: -21.250001907348633
    8. ' [' → logprob: -21.625001907348633
    9. '[user' → logprob: -22.500001907348633
    10. '(u' → logprob: -22.750001907348633

Token 393: ']+' (ID: 15344)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.25528594851493835
    2. ']+' → logprob: -1.5052859783172607
    3. '[' → logprob: -6.380285739898682
    4. '+' → logprob: -7.005285739898682
    5. ')' → logprob: -7.880285739898682
    6. ')+' → logprob: -8.63028621673584
    7. '[u' → logprob: -9.13028621673584
    8. '[v' → logprob: -10.25528621673584
    9. ' ]' → logprob: -10.75528621673584
    10. '+]' → logprob: -12.38028621673584

Token 394: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.018150178715586662
    2. ' dist' → logprob: -4.018150329589844
    3. '(dist' → logprob: -15.143150329589844
    4. '	dist' → logprob: -18.268150329589844
    5. '_dist' → logprob: -18.393150329589844
    6. '-dist' → logprob: -18.643150329589844
    7. '.dist' → logprob: -19.518150329589844
    8. ' ' → logprob: -19.643150329589844
    9. '```' → logprob: -19.768150329589844
    10. '   ' → logprob: -21.018150329589844

Token 395: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.1875571544806007e-05
    2. '[' → logprob: -11.500011444091797
    3. 'v' → logprob: -13.375011444091797
    4. '[u' → logprob: -16.125011444091797
    5. ' [' → logprob: -17.875011444091797
    6. '(v' → logprob: -17.875011444091797
    7. '-v' → logprob: -18.750011444091797
    8. '-' → logprob: -18.875011444091797
    9. '[-' → logprob: -18.875011444091797
    10. '[
' → logprob: -19.250011444091797

Token 396: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.41196221113204956
    2. '-dist' → logprob: -1.6619622707366943
    3. ' -' → logprob: -1.9119622707366943
    4. '-D' → logprob: -9.536962509155273
    5. '-distance' → logprob: -11.286962509155273
    6. '-d' → logprob: -12.286962509155273
    7. '-dis' → logprob: -13.411962509155273
    8. '-div' → logprob: -14.661962509155273
    9. ')-' → logprob: -14.911962509155273
    10. ' ' → logprob: -15.536962509155273

Token 397: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002637199067976326
    2. ' ' → logprob: -8.250264167785645
    3. '   ' → logprob: -13.250264167785645
    4. '  ' → logprob: -15.625264167785645
    5. '```' → logprob: -15.625264167785645
    6. '２' → logprob: -16.000263214111328
    7. '	' → logprob: -17.125263214111328
    8. '(' → logprob: -17.125263214111328
    9. '`' → logprob: -17.500263214111328
    10. ' ' → logprob: -17.625263214111328

Token 398: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.652451464906335e-05
    2. 'dist' → logprob: -11.375016212463379
    3. '[' → logprob: -12.625016212463379
    4. ' *' → logprob: -13.500016212463379
    5. '(dist' → logprob: -16.750017166137695
    6. '*[' → logprob: -17.000017166137695
    7. '	dist' → logprob: -17.500017166137695
    8. ' dist' → logprob: -18.000017166137695
    9. '*object' → logprob: -18.250017166137695
    10. '_dist' → logprob: -18.500017166137695

Token 399: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.5048530030981055e-06
    2. ' dist' → logprob: -13.500001907348633
    3. '	dist' → logprob: -18.375001907348633
    4. '(dist' → logprob: -19.125001907348633
    5. '.dist' → logprob: -22.125001907348633
    6. '```' → logprob: -22.625001907348633
    7. '_dist' → logprob: -23.625001907348633
    8. '
' → logprob: -24.375001907348633
    9. 'd' → logprob: -24.500001907348633
    10. 'Dist' → logprob: -24.625001907348633

Token 400: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -3.054500666621607e-06
    2. '[' → logprob: -13.00000286102295
    3. 'l' → logprob: -14.25000286102295
    4. ' l' → logprob: -17.875003814697266
    5. '(l' → logprob: -19.000003814697266
    6. '[L' → logprob: -19.500003814697266
    7. '	l' → logprob: -19.625003814697266
    8. '[
' → logprob: -19.875003814697266
    9. '[u' → logprob: -20.750003814697266
    10. '[a' → logprob: -21.875003814697266

Token 401: 'ca' (ID: 3743)
  Prédit: 'ca'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ca' → logprob: -0.0007123126997612417
    2. 'c' → logprob: -7.2507123947143555
    3. ' ca' → logprob: -14.750712394714355
    4. 'cao' → logprob: -15.375712394714355
    5. 'cas' → logprob: -15.375712394714355
    6. 'a' → logprob: -15.625712394714355
    7. '	c' → logprob: -15.625712394714355
    8. 'l' → logprob: -15.875712394714355
    9. 'cal' → logprob: -15.875712394714355
    10. 'caq' → logprob: -16.12571144104004

Token 402: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -7.064297824399546e-05
    2. '(' → logprob: -9.750070571899414
    3. 'u' → logprob: -11.375070571899414
    4. '[u' → logprob: -15.375070571899414
    5. ' (' → logprob: -16.000070571899414
    6. '_uv' → logprob: -16.125070571899414
    7. ' u' → logprob: -16.625070571899414
    8. ')' → logprob: -16.625070571899414
    9. '(
' → logprob: -16.750070571899414
    10. 'uv' → logprob: -16.875070571899414

Token 403: ',v' (ID: 30680)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.48166024684906006
    2. '(v' → logprob: -0.9816602468490601
    3. '(u' → logprob: -5.35666036605835
    4. ',v' → logprob: -6.35666036605835
    5. ')v' → logprob: -7.48166036605835
    6. '(' → logprob: -8.356659889221191
    7. '](' → logprob: -9.481659889221191
    8. ')]' → logprob: -9.856659889221191
    9. ')' → logprob: -10.106659889221191
    10. ' v' → logprob: -10.606659889221191

Token 404: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.8220266103744507
    2. '(u' → logprob: -1.1970266103744507
    3. ')])' → logprob: -1.8220266103744507
    4. '(' → logprob: -3.1970267295837402
    5. '(v' → logprob: -3.6970267295837402
    6. ')' → logprob: -4.32202672958374
    7. '])]' → logprob: -4.69702672958374
    8. '])' → logprob: -5.07202672958374
    9. 'v' → logprob: -6.44702672958374
    10. 'u' → logprob: -8.072026252746582

Token 405: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021334676072001457
    2. '
' → logprob: -4.646334648132324
    3. '    
' → logprob: -5.021334648132324
    4. 'for' → logprob: -5.646334648132324
    5. ' for' → logprob: -6.771334648132324
    6. '<|end|>' → logprob: -9.396334648132324
    7. '  
' → logprob: -9.646334648132324
    8. '	for' → logprob: -10.396334648132324
    9. '```' → logprob: -11.146334648132324
    10. ' 
' → logprob: -11.146334648132324

Token 406: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0002651503309607506
    2. '   ' → logprob: -8.250265121459961
    3. ' for' → logprob: -12.500265121459961
    4. '
' → logprob: -16.12526512145996
    5. '    
' → logprob: -17.62526512145996
    6. '	for' → logprob: -18.25026512145996
    7. '```' → logprob: -18.75026512145996
    8. 'while' → logprob: -19.62526512145996
    9. 'output' → logprob: -20.00026512145996
    10. 'result' → logprob: -20.87526512145996

Token 407: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.38688895106315613
    2. ' _' → logprob: -1.1368889808654785
    3. '_i' → logprob: -11.26188850402832
    4. '_query' → logprob: -13.51188850402832
    5. '__' → logprob: -13.63688850402832
    6. '_q' → logprob: -13.76188850402832
    7. '_in' → logprob: -14.76188850402832
    8. '_s' → logprob: -15.76188850402832
    9. ' ' → logprob: -15.88688850402832
    10. ' in' → logprob: -15.88688850402832

Token 408: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001328095211647451
    2. 'in' → logprob: -6.626327991485596
    3. ' ' → logprob: -13.376328468322754
    4. ' _' → logprob: -15.251328468322754
    5. 'range' → logprob: -16.126327514648438
    6. '  ' → logprob: -16.376327514648438
    7. '_' → logprob: -16.501327514648438
    8. '	in' → logprob: -17.626327514648438
    9. ' i' → logprob: -18.001327514648438
    10. ',' → logprob: -18.126327514648438

Token 409: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.8444881536415778e-05
    2. ' range' → logprob: -10.500028610229492
    3. '(range' → logprob: -15.000028610229492
    4. 'in' → logprob: -15.500028610229492
    5. '_' → logprob: -16.375028610229492
    6. '	range' → logprob: -17.625028610229492
    7. 'input' → logprob: -18.000028610229492
    8. 'ran' → logprob: -18.000028610229492
    9. 'Q' → logprob: -18.250028610229492
    10. 'rang' → logprob: -18.375028610229492

Token 410: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -9.710618905955926e-05
    2. 'Q' → logprob: -9.250097274780273
    3. ' Q' → logprob: -14.125097274780273
    4. '(' → logprob: -16.875097274780273
    5. ',Q' → logprob: -17.625097274780273
    6. '   ' → logprob: -18.000097274780273
    7. '	Q' → logprob: -18.000097274780273
    8. ' (' → logprob: -18.250097274780273
    9. ',' → logprob: -20.000097274780273
    10. '<Q' → logprob: -20.000097274780273

Token 411: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3365158438682556
    2. '):
' → logprob: -1.3365159034729004
    3. ',' → logprob: -3.8365159034729004
    4. '   ' → logprob: -6.8365159034729
    5. ' ):' → logprob: -8.961515426635742
    6. ':' → logprob: -9.461515426635742
    7. '):
' → logprob: -9.961515426635742
    8. ')' → logprob: -10.336515426635742
    9. ' ):
' → logprob: -11.086515426635742
    10. ',u' → logprob: -11.586515426635742

Token 412: '       ' (ID: 309)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.22364318370819092
    2. '       ' → logprob: -2.0986433029174805
    3. '   ' → logprob: -2.5986433029174805
    4. ' u' → logprob: -5.8486433029174805
    5. '	u' → logprob: -8.09864330291748
    6. 'a' → logprob: -9.09864330291748
    7. ' ' → logprob: -10.34864330291748
    8. 's' → logprob: -10.84864330291748
    9. 'x' → logprob: -11.22364330291748
    10. 'U' → logprob: -11.34864330291748

Token 413: ' a' (ID: 261)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07806584984064102
    2. 'u' → logprob: -2.953065872192383
    3. 'a' (adapté à ' a') → logprob: -3.828065872192383
    4. 'c' → logprob: -7.203065872192383
    5. '   ' → logprob: -8.328065872192383
    6. 'p' → logprob: -10.203065872192383
    7. ' x' → logprob: -10.453065872192383
    8. ' ' → logprob: -10.828065872192383
    9. 'U' → logprob: -10.828065872192383
    10. 's' → logprob: -10.953065872192383

Token 414: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.2573622167110443
    2. ',' → logprob: -1.5073622465133667
    3. ' ,' → logprob: -5.257362365722656
    4. 'b' → logprob: -8.757362365722656
    5. ' b' → logprob: -10.007362365722656
    6. ',v' → logprob: -12.507362365722656
    7. ',a' → logprob: -14.257362365722656
    8. ',p' → logprob: -14.257362365722656
    9. ',d' → logprob: -15.007362365722656
    10. '_,' → logprob: -15.507362365722656

Token 415: ',c' (ID: 22261)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6326746940612793
    2. '=' → logprob: -0.7576746940612793
    3. ',' → logprob: -9.757675170898438
    4. ')' → logprob: -12.257675170898438
    5. '=input' → logprob: -12.382675170898438
    6. '   ' → logprob: -13.382675170898438
    7. ' ,' → logprob: -13.632675170898438
    8. '=int' → logprob: -13.632675170898438
    9. '=line' → logprob: -13.632675170898438
    10. ')=' → logprob: -13.882675170898438

Token 416: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10044799000024796
    2. '=' → logprob: -2.3504478931427
    3. ',' → logprob: -9.225447654724121
    4. ',d' → logprob: -9.600447654724121
    5. ',a' → logprob: -10.725447654724121
    6. '=input' → logprob: -10.850447654724121
    7. ',x' → logprob: -11.850447654724121
    8. ',q' → logprob: -12.975447654724121
    9. ',w' → logprob: -12.975447654724121
    10. ' ' → logprob: -12.975447654724121

Token 417: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.47407805919647217
    2. 'map' → logprob: -0.9740780591964722
    3. '	map' → logprob: -14.474078178405762
    4. '   ' → logprob: -14.849078178405762
    5. '    ' → logprob: -16.474077224731445
    6. ' ' → logprob: -16.474077224731445
    7. 'm' → logprob: -16.849077224731445
    8. '  ' → logprob: -17.474077224731445
    9. '(map' → logprob: -18.099077224731445
    10. '.map' → logprob: -18.224077224731445

Token 418: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005271345842629671
    2. 'int' → logprob: -5.2552714347839355
    3. ',int' → logprob: -11.380270957946777
    4. '[int' → logprob: -11.505270957946777
    5. '```' → logprob: -11.755270957946777
    6. '=int' → logprob: -13.005270957946777
    7. '<int' → logprob: -13.130270957946777
    8. ' (' → logprob: -13.505270957946777
    9. ']int' → logprob: -14.380270957946777
    10. ' int' → logprob: -14.380270957946777

Token 419: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.0006463141762651503
    2. ',' → logprob: -7.875646114349365
    3. '(input' → logprob: -8.375646591186523
    4. ',int' → logprob: -10.625646591186523
    5. ',(' → logprob: -11.750646591186523
    6. 'input' → logprob: -13.125646591186523
    7. ' ,' → logprob: -14.125646591186523
    8. '   ' → logprob: -14.875646591186523
    9. '(' → logprob: -15.250646591186523
    10. ' input' → logprob: -16.750646591186523

Token 420: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.45848218582978e-06
    2. ' ().' → logprob: -13.62500286102295
    3. '()' → logprob: -13.87500286102295
    4. ')' → logprob: -15.62500286102295
    5. '.' → logprob: -17.625001907348633
    6. '(' → logprob: -18.250001907348633
    7. '   ' → logprob: -18.625001907348633
    8. ' ' → logprob: -18.875001907348633
    9. ').' → logprob: -19.125001907348633
    10. '())' → logprob: -19.625001907348633

Token 421: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.512236498361744e-07
    2. ' split' → logprob: -15.500000953674316
    3. 'strip' → logprob: -16.375
    4. 'spl' → logprob: -16.5
    5. '(split' → logprob: -16.5
    6. ')' → logprob: -19.25
    7. 'plit' → logprob: -19.75
    8. '```' → logprob: -20.25
    9. '.split' → logprob: -20.875
    10. 'rstrip' → logprob: -21.125

Token 422: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.49282708764076233
    2. ')' → logprob: -0.9928270578384399
    3. '()' → logprob: -3.9928271770477295
    4. '())
' → logprob: -9.242827415466309
    5. ')
' → logprob: -11.117827415466309
    6. '(' → logprob: -11.992827415466309
    7. ' ())' → logprob: -12.492827415466309
    8. ' )' → logprob: -13.492827415466309
    9. '))' → logprob: -13.742827415466309
    10. '(),' → logprob: -14.242827415466309

Token 423: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010234917514026165
    2. '   ' → logprob: -5.010234832763672
    3. '
' → logprob: -6.385234832763672
    4. '<|end|>' → logprob: -7.260234832763672
    5. ')' → logprob: -7.760234832763672
    6. '        
' → logprob: -8.135234832763672
    7. '```' → logprob: -9.510234832763672
    8. '  
' → logprob: -9.760234832763672
    9. '    
' → logprob: -9.885234832763672
    10. '           ' → logprob: -10.135234832763672

Token 424: ' abc' (ID: 75094)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9933941960334778
    2. 'x' → logprob: -1.368394136428833
    3. 'res' → logprob: -1.868394136428833
    4. 'ab' → logprob: -2.493394136428833
    5. 'ans' → logprob: -2.868394136428833
    6. 'dab' → logprob: -3.618394136428833
    7. 'abc' (adapté à ' abc') → logprob: -4.493394374847412
    8. 'print' → logprob: -4.743394374847412
    9. 'r' → logprob: -5.493394374847412
    10. 'dist' → logprob: -5.618394374847412

Token 425: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.44673779606819153
    2. ' =' → logprob: -1.0717377662658691
    3. '_dist' → logprob: -4.821737766265869
    4. 'dist' → logprob: -6.071737766265869
    5. 'd' → logprob: -6.196737766265869
    6. '=[' → logprob: -7.196737766265869
    7. '_distance' → logprob: -7.196737766265869
    8. '_' → logprob: -7.321737766265869
    9. 'a' → logprob: -7.321737766265869
    10. '_d' → logprob: -7.446737766265869

Token 426: ' [' (ID: 723)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.159174382686615
    2. '[' → logprob: -2.5341744422912598
    3. '(dist' → logprob: -3.5341744422912598
    4. ' dist' → logprob: -4.28417444229126
    5. '[a' → logprob: -4.40917444229126
    6. 'a' → logprob: -6.03417444229126
    7. '[
' → logprob: -6.03417444229126
    8. '[min' → logprob: -6.40917444229126
    9. '[(' → logprob: -6.90917444229126
    10. '[max' → logprob: -7.03417444229126

Token 427: 'a' (ID: 64)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6415985822677612
    2. 'a' → logprob: -0.8915985822677612
    3. '(a' → logprob: -3.141598701477051
    4. '0' → logprob: -4.891598701477051
    5. '(dist' → logprob: -4.891598701477051
    6. '(' → logprob: -5.516598701477051
    7. ' dist' → logprob: -7.391598701477051
    8. '[a' → logprob: -7.766598701477051
    9. ' (' → logprob: -9.76659870147705
    10. ' a' → logprob: -10.39159870147705

Token 428: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.004110103938728571
    2. ',' → logprob: -5.504110336303711
    3. ' ,' → logprob: -10.629110336303711
    4. ',
' → logprob: -12.629110336303711
    5. 'b' → logprob: -13.254110336303711
    6. ',c' → logprob: -13.504110336303711
    7. ',a' → logprob: -14.879110336303711
    8. ',B' → logprob: -14.879110336303711
    9. '   ' → logprob: -15.879110336303711
    10. ',int' → logprob: -17.00411033630371

Token 429: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.0001733855315251276
    2. ',' → logprob: -8.750173568725586
    3. 'c' → logprob: -11.375173568725586
    4. ' ,' → logprob: -12.750173568725586
    5. ',
' → logprob: -15.375173568725586
    6. ',a' → logprob: -16.000173568725586
    7. ',b' → logprob: -16.500173568725586
    8. ',C' → logprob: -17.625173568725586
    9. '	c' → logprob: -18.750173568725586
    10. ',k' → logprob: -18.875173568725586

Token 430: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.029957585036754608
    2. ']' → logprob: -3.5299575328826904
    3. ',' → logprob: -9.40495777130127
    4. '].' → logprob: -9.77995777130127
    5. ']
' → logprob: -10.40495777130127
    6. ',
' → logprob: -11.52995777130127
    7. '   ' → logprob: -12.02995777130127
    8. ' ]
' → logprob: -12.02995777130127
    9. ']

' → logprob: -12.15495777130127
    10. ')
' → logprob: -12.27995777130127

Token 431: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2860065698623657
    2. 'abc' → logprob: -2.036006450653076
    3. '       ' → logprob: -2.286006450653076
    4. 'def' → logprob: -5.786006450653076
    5. '
' → logprob: -5.911006450653076
    6. 'from' → logprob: -6.161006450653076
    7. 'a' → logprob: -6.411006450653076
    8. ' abc' → logprob: -6.536006450653076
    9. 'max' → logprob: -6.911006450653076
    10. 'dist' → logprob: -7.161006450653076

Token 432: ' abc' (ID: 75094)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' (adapté à ' abc') → logprob: -0.12534241378307343
    2. 'res' → logprob: -3.25034236907959
    3. '       ' → logprob: -3.62534236907959
    4. '   ' → logprob: -4.37534236907959
    5. 'dist' → logprob: -4.50034236907959
    6. 'from' → logprob: -5.12534236907959
    7. 'def' → logprob: -5.25034236907959
    8. 'd' → logprob: -5.50034236907959
    9. 'ans' → logprob: -5.62534236907959
    10. 'max' → logprob: -6.25034236907959

Token 433: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0069595081731677055
    2. '.' → logprob: -5.006959438323975
    3. '=' → logprob: -8.506959915161133
    4. 'sort' → logprob: -10.506959915161133
    5. ' =' → logprob: -11.506959915161133
    6. '.s' → logprob: -13.631959915161133
    7. '.=' → logprob: -13.756959915161133
    8. '.remove' → logprob: -14.131959915161133
    9. '.append' → logprob: -15.006959915161133
    10. ' .' → logprob: -15.256959915161133

Token 434: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4779559373855591
    2. '()
' → logprob: -0.9779559373855591
    3. 'def' → logprob: -5.7279558181762695
    4. 'a' → logprob: -8.35295581817627
    5. '   ' → logprob: -9.72795581817627
    6. '()\' → logprob: -9.72795581817627
    7. 'reverse' → logprob: -10.22795581817627
    8. ')
' → logprob: -10.35295581817627
    9. '       ' → logprob: -10.47795581817627
    10. '()

' → logprob: -10.60295581817627

Token 435: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4769367277622223
    2. 'a' → logprob: -2.4769368171691895
    3. 'x' → logprob: -2.4769368171691895
    4. 'd' → logprob: -2.7269368171691895
    5. 'u' → logprob: -2.9769368171691895
    6. '   ' → logprob: -3.1019368171691895
    7. 'dp' → logprob: -4.2269368171691895
    8. '[' → logprob: -5.7269368171691895
    9. '
' → logprob: -5.8519368171691895
    10. '```' → logprob: -5.8519368171691895

Token 436: ' a' (ID: 261)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.19539447128772736
    2. 'u' → logprob: -2.820394515991211
    3. 'l' → logprob: -3.445394515991211
    4. 'a' (adapté à ' a') → logprob: -3.695394515991211
    5. 'd' → logprob: -3.945394515991211
    6. 'A' → logprob: -4.445394515991211
    7. 'print' → logprob: -4.945394515991211
    8. 'for' → logprob: -5.320394515991211
    9. 'res' → logprob: -5.695394515991211
    10. 'abc' → logprob: -5.820394515991211

Token 437: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.48067140579223633
    2. ',' → logprob: -0.9806714057922363
    3. 'b' → logprob: -5.355671405792236
    4. ' ,' → logprob: -6.855671405792236
    5. ',a' → logprob: -7.480671405792236
    6. '=' → logprob: -10.355670928955078
    7. ',s' → logprob: -10.605670928955078
    8. ' =' → logprob: -10.730670928955078
    9. 'a' → logprob: -10.855670928955078
    10. '_,' → logprob: -11.230670928955078

Token 438: ',c' (ID: 22261)
  Prédit: ',b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.0638827309012413
    2. ',c' → logprob: -3.063882827758789
    3. ',' → logprob: -4.188882827758789
    4. 'b' → logprob: -12.313882827758789
    5. ' ,' → logprob: -12.313882827758789
    6. 'c' → logprob: -12.688882827758789
    7. ',a' → logprob: -13.563882827758789
    8. '=' → logprob: -14.563882827758789
    9. ',
' → logprob: -14.813882827758789
    10. ',d' → logprob: -15.438882827758789

Token 439: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20951160788536072
    2. '=' → logprob: -1.709511637687683
    3. ' =' → logprob: -4.834511756896973
    4. ',b' → logprob: -9.834511756896973
    5. ' ,' → logprob: -10.459511756896973
    6. ',c' → logprob: -11.834511756896973
    7. ',a' → logprob: -11.959511756896973
    8. '<|end|>' → logprob: -12.834511756896973
    9. ')' → logprob: -13.334511756896973
    10. ',_' → logprob: -13.459511756896973

Token 440: ' abc' (ID: 75094)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.008618000894784927
    2. ' abc' → logprob: -4.758617877960205
    3. ' ' → logprob: -13.258618354797363
    4. '   ' → logprob: -14.883618354797363
    5. 'ab' → logprob: -15.133618354797363
    6. 'tuple' → logprob: -15.383618354797363
    7. ' ' → logprob: -15.508618354797363
    8. 'abcdef' → logprob: -15.758618354797363
    9. '  ' → logprob: -15.883618354797363
    10. '
' → logprob: -16.133617401123047

Token 441: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11726783961057663
    2. '[' → logprob: -2.2422678470611572
    3. 'def' → logprob: -6.242267608642578
    4. '       ' → logprob: -6.742267608642578
    5. '        
' → logprob: -7.117267608642578
    6. '
' → logprob: -8.867267608642578
    7. '

' → logprob: -9.242267608642578
    8. '[
' → logprob: -9.992267608642578
    9. '<|end|>' → logprob: -10.242267608642578
    10. '    
' → logprob: -10.367267608642578

Token 442: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.026787634938955307
    2. '       ' → logprob: -5.276787757873535
    3. '<|end|>' → logprob: -5.276787757873535
    4. '   ' → logprob: -6.151787757873535
    5. '```' → logprob: -6.276787757873535
    6. 'def' → logprob: -6.526787757873535
    7. ',
' → logprob: -6.526787757873535
    8. '        
' → logprob: -6.526787757873535
    9. ',' → logprob: -6.776787757873535
    10. 'x' → logprob: -6.901787757873535

Token 443: ' #' (ID: 1069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.1311659812927246
    2. 'x' → logprob: -1.7561659812927246
    3. 'print' → logprob: -1.7561659812927246
    4. 'l' → logprob: -2.5061659812927246
    5. 'res' → logprob: -2.6311659812927246
    6. 'abc' → logprob: -3.3811659812927246
    7. 'u' → logprob: -3.5061659812927246
    8. 'ans' → logprob: -3.7561659812927246
    9. 'ab' → logprob: -3.7561659812927246
    10. 'dab' → logprob: -4.131165981292725

Token 444: ' Calculate' (ID: 38942)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.248924970626831
    2. 'd' → logprob: -1.623924970626831
    3. 'res' → logprob: -1.998924970626831
    4. 'ans' → logprob: -2.248924970626831
    5. 'abc' → logprob: -2.873924970626831
    6. 'ab' → logprob: -2.998924970626831
    7. 'l' → logprob: -3.623924970626831
    8. ' res' → logprob: -4.12392520904541
    9. 'dab' → logprob: -4.24892520904541
    10. 'dp' → logprob: -4.37392520904541

Token 445: ' pair' (ID: 10610)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5475462675094604
    2. 'res' → logprob: -1.4225462675094604
    3. 'ans' → logprob: -2.29754638671875
    4. 'dab' → logprob: -3.17254638671875
    5. 'x' → logprob: -4.17254638671875
    6. 'dist' → logprob: -5.17254638671875
    7. 'ab' → logprob: -5.29754638671875
    8. 'print' → logprob: -5.54754638671875
    9. 'abc' → logprob: -6.42254638671875
    10. 'answer' → logprob: -6.79754638671875

Token 446: 'wise' (ID: 7480)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5850194692611694
    2. 'wise' → logprob: -1.4600194692611694
    3. 's' → logprob: -1.8350194692611694
    4. 'a' → logprob: -4.460019588470459
    5. '1' → logprob: -4.710019588470459
    6. '   ' → logprob: -4.960019588470459
    7. '[' → logprob: -5.085019588470459
    8. '_dist' → logprob: -5.460019588470459
    9. 'd' → logprob: -5.960019588470459
    10. 'max' → logprob: -6.460019588470459

Token 447: ' distance' (ID: 9324)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.39769217371940613
    2. 'd' → logprob: -1.1476922035217285
    3. ' distances' → logprob: -5.3976922035217285
    4. ' d' → logprob: -6.2726922035217285
    5. ' dist' → logprob: -6.3976922035217285
    6. '_dist' → logprob: -6.7726922035217285
    7. 'distance' → logprob: -7.1476922035217285
    8. '_d' → logprob: -9.14769172668457
    9. 'ds' → logprob: -9.14769172668457
    10. 'pairs' → logprob: -9.14769172668457

Token 448: '
' (ID: 198)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.2293611764907837
    2. '   ' → logprob: -1.2293611764907837
    3. '       ' → logprob: -1.3543611764907837
    4. 'dist' → logprob: -2.979361057281494
    5. 'dab' → logprob: -3.354361057281494
    6. 'ab' → logprob: -3.979361057281494
    7. '
' → logprob: -3.979361057281494
    8. '        
' → logprob: -5.229361057281494
    9. 'AB' → logprob: -5.354361057281494
    10. 'dp' → logprob: -5.479361057281494

Token 449: '       ' (ID: 309)
  Prédit: 'dab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dab' → logprob: -0.12322495132684708
    2. 'd' → logprob: -2.873224973678589
    3. '   ' → logprob: -3.748224973678589
    4. 'ab' → logprob: -4.12322473526001
    5. ' dab' → logprob: -4.74822473526001
    6. '       ' → logprob: -5.24822473526001
    7. 'lab' → logprob: -6.12322473526001
    8. '```' → logprob: -7.12322473526001
    9. 'dist' → logprob: -7.24822473526001
    10. 'tab' → logprob: -7.62322473526001

Token 450: ' dab' (ID: 42746)
  Prédit: 'dab'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dab' (adapté à ' dab') → logprob: -0.08356644958257675
    2. 'd' → logprob: -2.708566427230835
    3. 'ab' → logprob: -4.458566665649414
    4. 'dist' → logprob: -6.958566665649414
    5. 'lab' → logprob: -7.833566665649414
    6. 'tab' → logprob: -8.833566665649414
    7. '   ' → logprob: -8.833566665649414
    8. ' dab' → logprob: -9.208566665649414
    9. 'D' → logprob: -9.583566665649414
    10. 'x' → logprob: -10.583566665649414

Token 451: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08972437679767609
    2. '=' → logprob: -2.46472430229187
    3. ',' → logprob: -8.21472454071045
    4. 's' → logprob: -8.58972454071045
    5. '=d' → logprob: -8.96472454071045
    6. '_' → logprob: -10.21472454071045
    7. '1' → logprob: -10.21472454071045
    8. 'd' → logprob: -10.46472454071045
    9. '_ab' → logprob: -10.83972454071045
    10. '=a' → logprob: -11.08972454071045

Token 452: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -3.190178904333152e-05
    2. ' dist' → logprob: -10.375031471252441
    3. '   ' → logprob: -15.125031471252441
    4. '	dist' → logprob: -15.875031471252441
    5. '(dist' → logprob: -16.000032424926758
    6. '       ' → logprob: -18.500032424926758
    7. 'distance' → logprob: -18.500032424926758
    8. 'abs' → logprob: -19.000032424926758
    9. 'd' → logprob: -19.375032424926758
    10. 'Dist' → logprob: -19.500032424926758

Token 453: '_uv' (ID: 150764)
  Prédit: '_uv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_uv' → logprob: -4.263011578586884e-05
    2. '[a' → logprob: -10.875042915344238
    3. '_ab' → logprob: -11.500042915344238
    4. 'uv' → logprob: -12.125042915344238
    5. '[u' → logprob: -12.250042915344238
    6. '(a' → logprob: -13.250042915344238
    7. '_u' → logprob: -15.250042915344238
    8. '_dist' → logprob: -15.250042915344238
    9. '[' → logprob: -15.375042915344238
    10. '_uc' → logprob: -15.750042915344238

Token 454: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -3.054500666621607e-06
    2. 'a' → logprob: -13.25000286102295
    3. '(' → logprob: -14.00000286102295
    4. '(ab' → logprob: -14.87500286102295
    5. '(
' → logprob: -19.000003814697266
    6. 'ab' → logprob: -20.125003814697266
    7. '(A' → logprob: -20.375003814697266
    8. ' (' → logprob: -21.250003814697266
    9. '[a' → logprob: -22.000003814697266
    10. '((' → logprob: -22.000003814697266

Token 455: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.008638443425297737
    2. ',' → logprob: -4.758638381958008
    3. ' ,' → logprob: -11.258638381958008
    4. 'b' → logprob: -12.133638381958008
    5. ',
' → logprob: -12.633638381958008
    6. '   ' → logprob: -14.758638381958008
    7. ')' → logprob: -14.883638381958008
    8. ',d' → logprob: -14.883638381958008
    9. ',)' → logprob: -15.008638381958008
    10. ',a' → logprob: -15.633638381958008

Token 456: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008623320609331131
    2. ')
' → logprob: -4.758623123168945
    3. ')
' → logprob: -12.133623123168945
    4. ')+' → logprob: -13.133623123168945
    5. ')

' → logprob: -14.258623123168945
    6. ' )' → logprob: -15.508623123168945
    7. '),' → logprob: -15.758623123168945
    8. '       ' → logprob: -15.758623123168945
    9. ')#' → logprob: -17.133623123168945
    10. '   ' → logprob: -17.383623123168945

Token 457: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6851488947868347
    2. 'dbc' → logprob: -0.9351488947868347
    3. 'd' → logprob: -2.6851489543914795
    4. 'dac' → logprob: -3.5601489543914795
    5. 'db' → logprob: -5.8101487159729
    6. 'dc' → logprob: -6.5601487159729
    7. ' dbc' → logprob: -7.0601487159729
    8. '        ' → logprob: -7.8101487159729
    9. '   ' → logprob: -7.9351487159729
    10. 'dav' → logprob: -9.060149192810059

Token 458: ' dbc' (ID: 183932)
  Prédit: 'dbc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dbc' (adapté à ' dbc') → logprob: -0.07452359795570374
    2. 'dac' → logprob: -2.824523687362671
    3. 'db' → logprob: -4.449523448944092
    4. ' dbc' → logprob: -7.574523448944092
    5. 'd' → logprob: -9.07452392578125
    6. 'bac' → logprob: -10.07452392578125
    7. '   ' → logprob: -10.32452392578125
    8. '       ' → logprob: -10.94952392578125
    9. 'abc' → logprob: -11.07452392578125
    10. 'bbc' → logprob: -11.19952392578125

Token 459: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.57594233751297
    2. '=' → logprob: -0.82594233751297
    3. '_' → logprob: -13.700942039489746
    4. ' ' → logprob: -14.200942039489746
    5. '=_' → logprob: -15.075942039489746
    6. 'dist' → logprob: -15.575942039489746
    7. ' _' → logprob: -15.575942039489746
    8. ' dist' → logprob: -15.700942039489746
    9. 'ist' → logprob: -16.075942993164062
    10. '[' → logprob: -16.575942993164062

Token 460: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.10020806640386581
    2. ' dist' → logprob: -2.350208044052124
    3. '(dist' → logprob: -13.600208282470703
    4. '	dist' → logprob: -15.850208282470703
    5. '_dist' → logprob: -16.725208282470703
    6. '.dist' → logprob: -18.225208282470703
    7. '   ' → logprob: -18.850208282470703
    8. 'd' → logprob: -20.225208282470703
    9. 'Dist' → logprob: -20.600208282470703
    10. ' ' → logprob: -20.975208282470703

Token 461: '_uv' (ID: 150764)
  Prédit: '_uv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_uv' → logprob: -7.896309739408025e-07
    2. '_uc' → logprob: -14.625000953674316
    3. 'uv' → logprob: -15.750000953674316
    4. '_cv' → logprob: -17.125
    5. '(c' → logprob: -17.25
    6. '[c' → logprob: -17.75
    7. 'ist' → logprob: -18.375
    8. 'UV' → logprob: -18.625
    9. '_bc' → logprob: -18.625
    10. 'c' → logprob: -18.625

Token 462: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.20146897435188293
    2. 'b' → logprob: -1.7014689445495605
    3. '(c' → logprob: -10.076469421386719
    4. ' b' → logprob: -12.201469421386719
    5. '(' → logprob: -12.451469421386719
    6. 'c' → logprob: -12.576469421386719
    7. '	b' → logprob: -14.951469421386719
    8. '   ' → logprob: -15.701469421386719
    9. ' (' → logprob: -15.826469421386719
    10. 'a' → logprob: -16.45146942138672

Token 463: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.181092768907547
    2. 'c' → logprob: -1.8060927391052246
    3. ',' → logprob: -6.681092739105225
    4. ')c' → logprob: -9.556093215942383
    5. '	c' → logprob: -12.556093215942383
    6. '(c' → logprob: -12.556093215942383
    7. ' c' → logprob: -12.806093215942383
    8. '[c' → logprob: -12.931093215942383
    9. ',
' → logprob: -13.181093215942383
    10. '.c' → logprob: -13.306093215942383

Token 464: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.12702438235282898
    2. ')' → logprob: -2.1270244121551514
    3. '       ' → logprob: -9.50202465057373
    4. ')
' → logprob: -10.87702465057373
    5. ')d' → logprob: -13.12702465057373
    6. ')c' → logprob: -15.75202465057373
    7. ' )
' → logprob: -16.002023696899414
    8. '   ' → logprob: -16.127023696899414
    9. ')`
' → logprob: -16.252023696899414
    10. '),' → logprob: -16.377023696899414

Token 465: '       ' (ID: 309)
  Prédit: 'dac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dac' → logprob: -0.6279817223548889
    2. '       ' → logprob: -1.0029816627502441
    3. 'd' → logprob: -2.377981662750244
    4. ' d' → logprob: -5.627981662750244
    5. '   ' → logprob: -6.752981662750244
    6. ' dac' → logprob: -7.252981662750244
    7. 'dad' → logprob: -7.627981662750244
    8. 'dcc' → logprob: -8.377982139587402
    9. 'dc' → logprob: -8.502982139587402
    10. '```' → logprob: -9.252982139587402

Token 466: ' dac' (ID: 144205)
  Prédit: 'dac'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dac' (adapté à ' dac') → logprob: -0.014222975820302963
    2. 'd' → logprob: -4.264223098754883
    3. ' dac' → logprob: -11.264223098754883
    4. 'dad' → logprob: -11.514223098754883
    5. 'dcc' → logprob: -11.639223098754883
    6. 'dab' → logprob: -11.639223098754883
    7. '   ' → logprob: -12.264223098754883
    8. ' d' → logprob: -13.014223098754883
    9. 'dat' → logprob: -13.014223098754883
    10. 'dc' → logprob: -13.389223098754883

Token 467: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07888989895582199
    2. ' =' → logprob: -2.578889846801758
    3. '_' → logprob: -16.203889846801758
    4. ' ' → logprob: -17.078889846801758
    5. 'c' → logprob: -17.703889846801758
    6. '_=' → logprob: -18.203889846801758
    7. '＝' → logprob: -18.203889846801758
    8. 'd' → logprob: -18.328889846801758
    9. ',' → logprob: -18.453889846801758
    10. '=_' → logprob: -18.453889846801758

Token 468: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.38687241077423096
    2. ' dist' → logprob: -1.136872410774231
    3. '(dist' → logprob: -14.011872291564941
    4. '	dist' → logprob: -14.761872291564941
    5. '_dist' → logprob: -16.136873245239258
    6. '.dist' → logprob: -16.761873245239258
    7. '   ' → logprob: -17.261873245239258
    8. 'Dist' → logprob: -18.261873245239258
    9. ' ' → logprob: -19.511873245239258
    10. 'd' → logprob: -20.261873245239258

Token 469: '_uv' (ID: 150764)
  Prédit: '_uv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_uv' → logprob: -2.9160102712921798e-05
    2. '_uc' → logprob: -10.875029563903809
    3. 'uv' → logprob: -11.875029563903809
    4. '(c' → logprob: -13.500029563903809
    5. 'dist' → logprob: -14.375029563903809
    6. '_dist' → logprob: -15.125029563903809
    7. 'c' → logprob: -15.750029563903809
    8. '_cv' → logprob: -15.875029563903809
    9. '_dc' → logprob: -16.125028610229492
    10. ' dist' → logprob: -16.125028610229492

Token 470: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0012078535510227084
    2. 'a' → logprob: -7.0012078285217285
    3. '(c' → logprob: -8.126208305358887
    4. '(' → logprob: -15.751208305358887
    5. 'c' → logprob: -16.12620735168457
    6. ' (' → logprob: -16.25120735168457
    7. '(
' → logprob: -16.37620735168457
    8. '   ' → logprob: -17.50120735168457
    9. ' a' → logprob: -17.50120735168457
    10. '(d' → logprob: -17.75120735168457

Token 471: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.005040794610977173
    2. ',' → logprob: -5.380040645599365
    3. 'c' → logprob: -7.880040645599365
    4. ',
' → logprob: -10.380041122436523
    5. ' ,' → logprob: -11.880041122436523
    6. ',d' → logprob: -14.380041122436523
    7. '
' → logprob: -14.505041122436523
    8. '   ' → logprob: -14.630041122436523
    9. ')c' → logprob: -14.880041122436523
    10. ',a' → logprob: -15.255041122436523

Token 472: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01419406570494175
    2. ')
' → logprob: -4.264194011688232
    3. '       ' → logprob: -10.51419448852539
    4. ')
' → logprob: -13.26419448852539
    5. '   ' → logprob: -13.51419448852539
    6. ')

' → logprob: -15.76419448852539
    7. '()' → logprob: -17.01419448852539
    8. '),' → logprob: -17.26419448852539
    9. ' )' → logprob: -17.26419448852539
    10. ')\
' → logprob: -18.13919448852539

Token 473: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02066018246114254
    2. '        
' → logprob: -5.770660400390625
    3. 'result' → logprob: -5.895660400390625
    4. 'print' → logprob: -6.270660400390625
    5. 'answer' → logprob: -6.270660400390625
    6. 'max' → logprob: -6.270660400390625
    7. 'total' → logprob: -6.395660400390625
    8. 'd' → logprob: -6.395660400390625
    9. 'res' → logprob: -6.520660400390625
    10. 'ans' → logprob: -7.270660400390625

Token 474: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.41559961438179016
    2. 'res' → logprob: -1.4155995845794678
    3. 'print' → logprob: -2.4155995845794678
    4. 'answer' → logprob: -5.665599822998047
    5. 'm' → logprob: -6.665599822998047
    6. 'max' → logprob: -7.415599822998047
    7. 'x' → logprob: -7.540599822998047
    8. 'mx' → logprob: -7.790599822998047
    9. 'mid' → logprob: -8.040599822998047
    10. 'd' → logprob: -8.415599822998047

Token 475: ' The' (ID: 623)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4621600806713104
    2. 'res' → logprob: -1.3371601104736328
    3. 'max' → logprob: -2.962160110473633
    4. 'print' → logprob: -3.837160110473633
    5. 'mid' → logprob: -4.587160110473633
    6. 'm' → logprob: -5.337160110473633
    7. 'x' → logprob: -5.337160110473633
    8. 'answer' → logprob: -5.337160110473633
    9. 'mx' → logprob: -5.837160110473633
    10. '#' → logprob: -6.462160110473633

Token 476: ' minimal' (ID: 19957)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.44076135754585266
    2. ' ans' → logprob: -2.1907613277435303
    3. 'answer' → logprob: -2.5657613277435303
    4. 'res' → logprob: -2.8157613277435303
    5. 'print' → logprob: -2.9407613277435303
    6. ' answer' → logprob: -3.8157613277435303
    7. 'max' → logprob: -4.315761566162109
    8. ' res' → logprob: -4.940761566162109
    9. ' print' → logprob: -5.190761566162109
    10. '#' → logprob: -6.315761566162109

Token 477: ' maximum' (ID: 10562)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -1.531520128250122
    2. 'total' → logprob: -1.906520128250122
    3. 'ans' → logprob: -2.156520128250122
    4. 'd' → logprob: -2.406520128250122
    5. 'path' → logprob: -2.531520128250122
    6. 'cost' → logprob: -2.656520128250122
    7. 'dist' → logprob: -2.781520128250122
    8. 'answer' → logprob: -2.906520128250122
    9. ' total' → logprob: -3.781520128250122
    10. ' d' → logprob: -4.156519889831543

Token 478: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.08712008595466614
    2. ' distance' → logprob: -2.5871200561523438
    3. 'd' → logprob: -5.962120056152344
    4. 'diam' → logprob: -6.587120056152344
    5. 'path' → logprob: -6.837120056152344
    6. 'max' → logprob: -7.212120056152344
    7. 'dist' → logprob: -7.212120056152344
    8. ' diameter' → logprob: -8.337120056152344
    9. ' of' → logprob: -8.587120056152344
    10. ' d' → logprob: -8.837120056152344

Token 479: ' after' (ID: 1934)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06285905838012695
    2. ' =' → logprob: -3.437859058380127
    3. '=' → logprob: -3.562859058380127
    4. ' is' → logprob: -8.687858581542969
    5. '   ' → logprob: -10.062858581542969
    6. 'distance' → logprob: -10.062858581542969
    7. 'is' → logprob: -10.562858581542969
    8. '        ' → logprob: -10.812858581542969
    9. 'max' → logprob: -11.187858581542969
    10. 'answer' → logprob: -11.187858581542969

Token 480: ' meeting' (ID: 9176)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rem' → logprob: -1.1535693407058716
    2. 'max' → logprob: -1.6535693407058716
    3. 'adding' → logprob: -2.153569221496582
    4. ' removing' → logprob: -2.528569221496582
    5. '#' → logprob: -3.403569221496582
    6. 'print' → logprob: -3.528569221496582
    7. ' replacing' → logprob: -3.528569221496582
    8. ' adding' → logprob: -3.778569221496582
    9. 'connecting' → logprob: -3.903569221496582
    10. 'moving' → logprob: -3.903569221496582

Token 481: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7018902897834778
    2. '=' → logprob: -0.9518902897834778
    3. 'point' → logprob: -2.451890230178833
    4. ' point' → logprob: -4.076890468597412
    5. '_point' → logprob: -4.951890468597412
    6. ' is' → logprob: -6.201890468597412
    7. 'is' → logprob: -6.451890468597412
    8. ' at' → logprob: -7.076890468597412
    9. 'max' → logprob: -7.201890468597412
    10. 'at' → logprob: -7.451890468597412

Token 482: ' some' (ID: 1236)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7724796533584595
    2. 'any' → logprob: -1.5224796533584595
    3. 'one' → logprob: -1.7724796533584595
    4. 'a' → logprob: -2.39747953414917
    5. 'some' → logprob: -3.77247953414917
    6. 'abc' → logprob: -5.02247953414917
    7. ' the' → logprob: -5.14747953414917
    8. ' any' → logprob: -5.27247953414917
    9. 'point' → logprob: -5.64747953414917
    10. 'b' → logprob: -6.02247953414917

Token 483: ' city' (ID: 5030)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.5437545776367188
    2. 'point' → logprob: -1.1687545776367188
    3. 'vertex' → logprob: -2.5437545776367188
    4. 'v' → logprob: -4.543754577636719
    5. ' node' → logprob: -4.918754577636719
    6. 'city' → logprob: -5.793754577636719
    7. ' point' → logprob: -6.043754577636719
    8. 'place' → logprob: -6.043754577636719
    9. '#' → logprob: -6.168754577636719
    10. ' vertex' → logprob: -7.543754577636719

Token 484: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9296102523803711
    2. ' =' → logprob: -0.9296102523803711
    3. 'max' → logprob: -2.304610252380371
    4. '=' → logprob: -3.429610252380371
    5. 'answer' → logprob: -4.054610252380371
    6. 'ans' → logprob: -4.179610252380371
    7. 'd' → logprob: -4.804610252380371
    8. 'result' → logprob: -5.179610252380371
    9. 'min' → logprob: -5.304610252380371
    10. 'res' → logprob: -5.429610252380371

Token 485: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.349075556499884e-05
    2. '        
' → logprob: -10.2500638961792
    3. '<|end|>' → logprob: -11.2500638961792
    4. '   ' → logprob: -12.2500638961792
    5. ',' → logprob: -12.7500638961792
    6. '
' → logprob: -13.6250638961792
    7. ' =' → logprob: -13.8750638961792
    8. '        ' → logprob: -14.5000638961792
    9. 'print' → logprob: -14.5000638961792
    10. '=' → logprob: -14.5000638961792

Token 486: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12164223194122314
    2. 'ans' → logprob: -2.8716421127319336
    3. '       ' → logprob: -3.6216421127319336
    4. 'res' → logprob: -3.6216421127319336
    5. 'answer' → logprob: -6.121642112731934
    6. '   ' → logprob: -6.496642112731934
    7. 'm' → logprob: -8.621642112731934
    8. 'result' → logprob: -8.621642112731934
    9. 'mx' → logprob: -9.371642112731934
    10. '
' → logprob: -9.621642112731934

Token 487: ' The' (ID: 623)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5383496880531311
    2. 'res' → logprob: -1.0383496284484863
    3. 'print' → logprob: -3.4133496284484863
    4. 'answer' → logprob: -4.663349628448486
    5. '       ' → logprob: -5.538349628448486
    6. '   ' → logprob: -5.663349628448486
    7. 'max' → logprob: -5.788349628448486
    8. 'm' → logprob: -6.163349628448486
    9. 'meet' → logprob: -6.163349628448486
    10. 'mx' → logprob: -6.913349628448486

Token 488: ' best' (ID: 1636)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.3197355270385742
    2. 'answer' → logprob: -1.4447355270385742
    3. 'res' → logprob: -1.5697355270385742
    4. 'ans' → logprob: -2.069735527038574
    5. ' ans' → logprob: -2.569735527038574
    6. ' answer' → logprob: -3.569735527038574
    7. ' res' → logprob: -4.444735527038574
    8. ' max' → logprob: -4.694735527038574
    9. 'min' → logprob: -4.944735527038574
    10. '#' → logprob: -5.194735527038574

Token 489: ' meeting' (ID: 9176)
  Prédit: 'meeting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'meeting' → logprob: -0.7249447107315063
    2. 'meet' → logprob: -1.8499447107315063
    3. 'city' → logprob: -2.099944591522217
    4. 'answer' → logprob: -2.724944591522217
    5. 'candidate' → logprob: -3.224944591522217
    6. 'point' → logprob: -3.349944591522217
    7. ' meeting' → logprob: -3.599944591522217
    8. 'possible' → logprob: -4.099944591522217
    9. 'ans' → logprob: -4.474944591522217
    10. ' city' → logprob: -4.724944591522217

Token 490: ' city' (ID: 5030)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.043604787439107895
    2. 'place' → logprob: -3.293604850769043
    3. 'city' → logprob: -5.418604850769043
    4. ' point' → logprob: -6.918604850769043
    5. ' place' → logprob: -9.793604850769043
    6. '_point' → logprob: -9.918604850769043
    7. ' city' → logprob: -11.793604850769043
    8. '_place' → logprob: -12.418604850769043
    9. '_city' → logprob: -13.043604850769043
    10. '=' → logprob: -13.168604850769043

Token 491: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6349300742149353
    2. ' =' → logprob: -0.8849300742149353
    3. ' is' → logprob: -3.25993013381958
    4. '       ' → logprob: -5.00993013381958
    5. 'is' → logprob: -5.38493013381958
    6. ',' → logprob: -6.13493013381958
    7. '#' → logprob: -7.13493013381958
    8. 'max' → logprob: -7.13493013381958
    9. 'distance' → logprob: -7.25993013381958
    10. 's' → logprob: -7.50993013381958

Token 492: ' one' (ID: 1001)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.10883629322052
    2. 'l' → logprob: -1.10883629322052
    3. ' l' → logprob: -2.8588361740112305
    4. '(a' → logprob: -2.8588361740112305
    5. ' (' → logprob: -2.9838361740112305
    6. '(l' → logprob: -3.1088361740112305
    7. 'b' → logprob: -3.8588361740112305
    8. ' a' → logprob: -3.9838361740112305
    9. 'abc' → logprob: -4.3588361740112305
    10. 'max' → logprob: -4.4838361740112305

Token 493: ' of' (ID: 328)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -1.319348931312561
    2. ' that' → logprob: -1.444348931312561
    3. 'of' → logprob: -1.694348931312561
    4. '   ' → logprob: -2.3193488121032715
    5. ' of' → logprob: -2.4443488121032715
    6. 'on' → logprob: -3.4443488121032715
    7. 'among' → logprob: -3.4443488121032715
    8. ' among' → logprob: -3.5693488121032715
    9. ' on' → logprob: -4.3193488121032715
    10. '#' → logprob: -5.4443488121032715

Token 494: ' the' (ID: 290)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7320916056632996
    2. '[a' → logprob: -0.7320916056632996
    3. 'the' → logprob: -3.7320916652679443
    4. ' a' → logprob: -5.107091426849365
    5. ' the' → logprob: -5.607091426849365
    6. '(a' → logprob: -6.732091426849365
    7. '[u' → logprob: -7.107091426849365
    8. ' [' → logprob: -7.232091426849365
    9. 'abc' → logprob: -7.232091426849365
    10. '[' → logprob: -7.732091426849365

Token 495: ' three' (ID: 3407)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7914947271347046
    2. '[a' → logprob: -1.2914947271347046
    3. 'abc' → logprob: -1.6664947271347046
    4. 'three' → logprob: -3.041494846343994
    5. '{' → logprob: -4.291494846343994
    6. '[' → logprob: -5.041494846343994
    7. 'vertices' → logprob: -5.541494846343994
    8. '(a' → logprob: -6.166494846343994
    9. ' three' → logprob: -6.291494846343994
    10. ' abc' → logprob: -6.916494846343994

Token 496: ' nodes' (ID: 15749)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00872093252837658
    2. ',' → logprob: -5.633720874786377
    3. '<|end|>' → logprob: -6.883720874786377
    4. ')' → logprob: -7.133720874786377
    5. ')
' → logprob: -7.633720874786377
    6. '        
' → logprob: -7.758720874786377
    7. '
' → logprob: -8.008721351623535
    8. '.' → logprob: -8.008721351623535
    9. 'possible' → logprob: -8.258721351623535
    10. '```' → logprob: -8.383721351623535

Token 497: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024206846952438354
    2. '
' → logprob: -4.274206638336182
    3. '        
' → logprob: -5.649206638336182
    4. 'max' → logprob: -5.774206638336182
    5. ',' → logprob: -6.774206638336182
    6. '```' → logprob: -7.149206638336182
    7. '<|end|>' → logprob: -8.52420711517334
    8. ',
' → logprob: -8.64920711517334
    9. '   ' → logprob: -9.27420711517334
    10. 'distance' → logprob: -9.27420711517334

Token 498: ' L' (ID: 451)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.45453208684921265
    2. 'a' → logprob: -2.0795321464538574
    3. 'any' → logprob: -2.3295321464538574
    4. 'the' → logprob: -3.3295321464538574
    5. 'their' → logprob: -3.5795321464538574
    6. '       ' → logprob: -3.9545321464538574
    7. '   ' → logprob: -4.329532146453857
    8. 'adj' → logprob: -4.454532146453857
    9. 'an' → logprob: -5.204532146453857
    10. 'some' → logprob: -5.579532146453857

Token 499: 'CA' (ID: 6781)
  Prédit: 'ca'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ca' → logprob: -0.0012659442145377398
    2. '   ' → logprob: -7.501266002655029
    3. 'c' → logprob: -8.501265525817871
    4. '```' → logprob: -9.876265525817871
    5. '
' → logprob: -10.001265525817871
    6. '[' → logprob: -10.126265525817871
    7. 'CA' → logprob: -10.251265525817871
    8. '	' → logprob: -10.751265525817871
    9. ' ' → logprob: -10.751265525817871
    10. '       ' → logprob: -10.876265525817871

Token 500: ' points' (ID: 5571)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0671875476837158
    2. '       ' → logprob: -1.1921875476837158
    3. '(' → logprob: -1.4421875476837158
    4. '(u' → logprob: -3.317187547683716
    5. 's' → logprob: -3.692187547683716
    6. '()
' → logprob: -4.692187309265137
    7. '()' → logprob: -5.067187309265137
    8. '(
' → logprob: -5.317187309265137
    9. '.' → logprob: -5.567187309265137
    10. 'def' → logprob: -5.567187309265137

Token 501: ' that' (ID: 484)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026848921552300453
    2. '
' → logprob: -3.7768490314483643
    3. '        
' → logprob: -6.151848793029785
    4. '<|end|>' → logprob: -6.776848793029785
    5. ',' → logprob: -9.776848793029785
    6. '   ' → logprob: -10.151848793029785
    7. '<|end|>' → logprob: -10.526848793029785
    8. '```' → logprob: -10.776848793029785
    9. '#' → logprob: -11.026848793029785
    10. ',
' → logprob: -11.151848793029785

Token 502: ' minimize' (ID: 41776)
  Prédit: 'connect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connect' → logprob: -0.7802367806434631
    2. 'min' → logprob: -1.4052367210388184
    3. ' minimize' → logprob: -2.4052367210388184
    4. 'cover' → logprob: -3.2802367210388184
    5. ' lie' → logprob: -3.4052367210388184
    6. ' minimizes' → logprob: -4.030236721038818
    7. ' covers' → logprob: -4.280236721038818
    8. 'lie' → logprob: -4.405236721038818
    9. 'covers' → logprob: -4.405236721038818
    10. 'are' → logprob: -4.655236721038818

Token 503: ' max' (ID: 2999)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.26178085803985596
    2. ' the' → logprob: -1.886780858039856
    3. 'max' → logprob: -2.8867807388305664
    4. '   ' → logprob: -5.136780738830566
    5. ' max' → logprob: -5.386780738830566
    6. 'dab' → logprob: -5.886780738830566
    7. '#' → logprob: -6.261780738830566
    8. '(max' → logprob: -6.261780738830566
    9. '       ' → logprob: -6.636780738830566
    10. '
' → logprob: -6.761780738830566

Token 504: ' distances' (ID: 48294)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0506383515894413
    2. 'distance' → logprob: -3.675638437271118
    3. '(' → logprob: -4.925638198852539
    4. '(
' → logprob: -5.175638198852539
    5. 'dist' → logprob: -6.050638198852539
    6. '_distance' → logprob: -6.425638198852539
    7. '       ' → logprob: -6.800638198852539
    8. 'd' → logprob: -6.925638198852539
    9. ' distance' → logprob: -7.175638198852539
    10. '([' → logprob: -7.175638198852539

Token 505: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05355989187955856
    2. '
' → logprob: -3.4285597801208496
    3. '<|end|>' → logprob: -4.67855978012085
    4. '        
' → logprob: -4.80355978012085
    5. ',' → logprob: -7.67855978012085
    6. 'max' → logprob: -8.178560256958008
    7. '#' → logprob: -8.553560256958008
    8. '<|end|>' → logprob: -8.928560256958008
    9. ',
' → logprob: -9.303560256958008
    10. ')' → logprob: -9.428560256958008

Token 506: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07927386462688446
    2. '
' → logprob: -2.7042739391326904
    3. '        
' → logprob: -5.454273700714111
    4. '<|end|>' → logprob: -5.829273700714111
    5. ',' → logprob: -7.329273700714111
    6. ',
' → logprob: -8.70427417755127
    7. '```' → logprob: -8.95427417755127
    8. ')' → logprob: -9.07927417755127
    9. '\' → logprob: -9.07927417755127
    10. '  
' → logprob: -9.07927417755127

Token 507: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1457444131374359
    2. 'max' → logprob: -2.3957443237304688
    3. 'res' → logprob: -4.395744323730469
    4. '
' → logprob: -5.270744323730469
    5. 'm' → logprob: -5.395744323730469
    6. 'd' → logprob: -5.395744323730469
    7. '        
' → logprob: -5.770744323730469
    8. 'ans' → logprob: -6.145744323730469
    9. 'answer' → logprob: -6.395744323730469
    10. 'print' → logprob: -6.395744323730469

Token 508: ' The' (ID: 623)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1116360425949097
    2. '       ' → logprob: -1.4866360425949097
    3. 'max' → logprob: -1.7366360425949097
    4. ' max' → logprob: -2.611636161804199
    5. 'm' → logprob: -3.111636161804199
    6. 'd' → logprob: -3.736636161804199
    7. ' d' → logprob: -3.986636161804199
    8. '        
' → logprob: -4.486636161804199
    9. 'res' → logprob: -4.611636161804199
    10. ' m' → logprob: -4.986636161804199

Token 509: ' cost' (ID: 3097)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.2996013164520264
    2. 'max' → logprob: -1.4246013164520264
    3. 'ans' → logprob: -1.6746013164520264
    4. 'answer' → logprob: -2.1746013164520264
    5. 'best' → logprob: -3.0496013164520264
    6. '#' → logprob: -3.6746013164520264
    7. ' ans' → logprob: -4.1746015548706055
    8. ' answer' → logprob: -4.5496015548706055
    9. 'min' → logprob: -4.5496015548706055
    10. ' res' → logprob: -4.6746015548706055

Token 510: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04499630257487297
    2. ' =' → logprob: -3.1699962615966797
    3. '_' → logprob: -6.54499626159668
    4. 's' → logprob: -9.16999626159668
    5. ' is' → logprob: -9.29499626159668
    6. ')' → logprob: -9.29499626159668
    7. '_=' → logprob: -9.29499626159668
    8. 'is' → logprob: -9.91999626159668
    9. ',' → logprob: -10.79499626159668
    10. '_max' → logprob: -11.04499626159668

Token 511: ' (' (ID: 350)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.7007319331169128
    2. 'max' → logprob: -1.7007319927215576
    3. ' (' → logprob: -1.8257319927215576
    4. '(max' → logprob: -2.7007319927215576
    5. ' max' → logprob: -2.8257319927215576
    6. '(min' → logprob: -4.2007317543029785
    7. 'min' → logprob: -4.7007317543029785
    8. ' min' → logprob: -5.4507317543029785
    9. 'dab' → logprob: -5.7007317543029785
    10. '   ' → logprob: -7.9507317543029785

Token 512: 'dab' (ID: 101040)
  Prédit: 'dab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dab' → logprob: -0.13881808519363403
    2. 'max' → logprob: -2.7638180255889893
    3. '(d' → logprob: -3.0138180255889893
    4. ' dab' → logprob: -5.263818264007568
    5. 'dac' → logprob: -5.638818264007568
    6. ' max' → logprob: -5.763818264007568
    7. '(max' → logprob: -6.013818264007568
    8. 'd' → logprob: -7.013818264007568
    9. ' (' → logprob: -7.763818264007568
    10. 'dap' → logprob: -8.01381778717041

Token 513: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3144151568412781
    2. '+' → logprob: -1.3144152164459229
    3. '+d' → logprob: -6.814414978027344
    4. ' ' → logprob: -11.064414978027344
    5. ',' → logprob: -11.439414978027344
    6. ' ' → logprob: -12.064414978027344
    7. ' +
' → logprob: -12.814414978027344
    8. ' ,' → logprob: -12.876914978027344
    9. ')' → logprob: -13.376914978027344
    10. '＋' → logprob: -13.439414978027344

Token 514: ' dbc' (ID: 183932)
  Prédit: 'dbc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dbc' → logprob: -0.00415995717048645
    2. ' dbc' → logprob: -5.504159927368164
    3. 'db' → logprob: -9.754159927368164
    4. 'dac' → logprob: -11.004159927368164
    5. '   ' → logprob: -12.879159927368164
    6. ' ' → logprob: -13.629159927368164
    7. '
' → logprob: -14.129159927368164
    8. 'max' → logprob: -14.379159927368164
    9. '  ' → logprob: -15.129159927368164
    10. 'd' → logprob: -15.254159927368164

Token 515: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.08919474482536316
    2. '+' → logprob: -2.4641947746276855
    3. '+d' → logprob: -8.714194297790527
    4. ' -' → logprob: -9.839194297790527
    5. '+c' → logprob: -11.089194297790527
    6. ' ' → logprob: -11.464194297790527
    7. '-' → logprob: -12.464194297790527
    8. '+++' → logprob: -13.464194297790527
    9. ' +
' → logprob: -13.714194297790527
    10. '＋' → logprob: -14.401694297790527

Token 516: ' dac' (ID: 144205)
  Prédit: 'dac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dac' → logprob: -0.0015068859793245792
    2. ' dac' → logprob: -6.501506805419922
    3. 'd' → logprob: -13.376506805419922
    4. ' ' → logprob: -13.501506805419922
    5. '	d' → logprob: -14.126506805419922
    6. '
' → logprob: -15.126506805419922
    7. '   ' → logprob: -15.126506805419922
    8. '  ' → logprob: -15.501506805419922
    9. 'max' → logprob: -16.251506805419922
    10. 'dcc' → logprob: -16.501506805419922

Token 517: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7848876714706421
    2. '+' → logprob: -1.159887671470642
    3. ' +' → logprob: -1.784887671470642
    4. ')//' → logprob: -2.9098877906799316
    5. ' )' → logprob: -4.909887790679932
    6. ' -' → logprob: -8.284887313842773
    7. '-' → logprob: -8.909887313842773
    8. ')+' → logprob: -9.284887313842773
    9. ' ' → logprob: -9.659887313842773
    10. ')/' → logprob: -11.159887313842773

Token 518: ' /' (ID: 820)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.7703346014022827
    2. '//' → logprob: -1.0203346014022827
    3. '       ' → logprob: -2.7703347206115723
    4. '
' → logprob: -3.8953347206115723
    5. ' -' → logprob: -3.8953347206115723
    6. '   ' → logprob: -4.020334720611572
    7. '-' → logprob: -4.145334720611572
    8. '+' → logprob: -4.270334720611572
    9. ' +' → logprob: -4.520334720611572
    10. ' ' → logprob: -5.020334720611572

Token 519: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007101670489646494
    2. ' ' → logprob: -7.2507100105285645
    3. ' ' → logprob: -15.750710487365723
    4. '
' → logprob: -17.500709533691406
    5. '```' → logprob: -17.625709533691406
    6. '   ' → logprob: -18.000709533691406
    7. '6' → logprob: -18.250709533691406
    8. '  ' → logprob: -19.000709533691406
    9. '２' → logprob: -19.000709533691406
    10. '3' → logprob: -19.125709533691406

Token 520: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00029625516617670655
    2. ' ' → logprob: -8.125296592712402
    3. ' ' → logprob: -16.625295639038086
    4. '3' → logprob: -16.875295639038086
    5. '```' → logprob: -17.750295639038086
    6. '
' → logprob: -18.000295639038086
    7. '4' → logprob: -18.500295639038086
    8. '２' → logprob: -18.875295639038086
    9. '6' → logprob: -19.062795639038086
    10. '=' → logprob: -19.250295639038086

Token 521: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04583967477083206
    2. '
' → logprob: -3.170839786529541
    3. 'print' → logprob: -6.795839786529541
    4. ',' → logprob: -7.795839786529541
    5. '   ' → logprob: -7.920839786529541
    6. '        
' → logprob: -8.170839309692383
    7. '
' → logprob: -8.295839309692383
    8. ',
' → logprob: -9.045839309692383
    9. '    
' → logprob: -10.295839309692383
    10. '```' → logprob: -10.608339309692383

Token 522: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5823765993118286
    2. 'max' → logprob: -0.9573765993118286
    3. ' min' → logprob: -3.332376480102539
    4. ' max' → logprob: -3.832376480102539
    5. 'dab' → logprob: -9.332376480102539
    6. '   ' → logprob: -10.832376480102539
    7. ' ' → logprob: -10.957376480102539
    8. '(min' → logprob: -11.707376480102539
    9. ' dab' → logprob: -12.207376480102539
    10. 'dist' → logprob: -12.207376480102539

Token 523: '_distance' (ID: 45537)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0009705372503958642
    2. '(' → logprob: -7.750970363616943
    3. '([' → logprob: -8.000970840454102
    4. '((' → logprob: -9.750970840454102
    5. 'dab' → logprob: -10.375970840454102
    6. 'd' → logprob: -10.875970840454102
    7. '(dist' → logprob: -10.875970840454102
    8. '(min' → logprob: -11.125970840454102
    9. '(a' → logprob: -11.125970840454102
    10. '(
' → logprob: -11.125970840454102

Token 524: ' among' (ID: 6200)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013182229362428188
    2. '
' → logprob: -5.388182163238525
    3. 'min' → logprob: -6.138182163238525
    4. '_min' → logprob: -6.138182163238525
    5. '        
' → logprob: -7.013182163238525
    6. '<|end|>' → logprob: -7.388182163238525
    7. ',' → logprob: -8.013182640075684
    8. ' =' → logprob: -8.388182640075684
    9. '	' → logprob: -8.638182640075684
    10. ')' → logprob: -8.638182640075684

Token 525: ' pairs' (ID: 24702)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.16516035795211792
    2. 'dab' → logprob: -2.7901604175567627
    3. '[d' → logprob: -3.0401604175567627
    4. 'd' → logprob: -3.1651604175567627
    5. '([' → logprob: -8.040160179138184
    6. '[' → logprob: -8.790160179138184
    7. ' dab' → logprob: -9.915160179138184
    8. '	d' → logprob: -10.040160179138184
    9. '(' → logprob: -10.540160179138184
    10. '```' → logprob: -10.915160179138184

Token 526: '
' (ID: 198)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.8060910701751709
    2. '       ' → logprob: -1.306091070175171
    3. 'min' → logprob: -1.306091070175171
    4. '_min' → logprob: -5.80609130859375
    5. '
' → logprob: -6.55609130859375
    6. 'm' → logprob: -6.68109130859375
    7. 'dist' → logprob: -6.93109130859375
    8. '   ' → logprob: -7.30609130859375
    9. '	min' → logprob: -7.80609130859375
    10. 'd' → logprob: -7.93109130859375

Token 527: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5393056273460388
    2. '       ' → logprob: -1.0393056869506836
    3. ' 
' → logprob: -4.414305686950684
    4. '\n' → logprob: -4.664305686950684
    5. '\' → logprob: -4.914305686950684
    6. '        
' → logprob: -4.914305686950684
    7. '<|end|>' → logprob: -5.289305686950684
    8. '  
' → logprob: -5.539305686950684
    9. '   ' → logprob: -6.164305686950684
    10. ',' → logprob: -6.289305686950684

Token 528: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06364281475543976
    2. 'min' → logprob: -3.688642740249634
    3. ' min' → logprob: -3.813642740249634
    4. '
' → logprob: -5.188642978668213
    5. '        
' → logprob: -5.938642978668213
    6. '_min' → logprob: -6.563642978668213
    7. '\' → logprob: -6.688642978668213
    8. 'm' → logprob: -7.438642978668213
    9. ' 
' → logprob: -7.688642978668213
    10. '   ' → logprob: -8.563642501831055

Token 529: ' To' (ID: 2514)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.6529828310012817
    2. 'ans' → logprob: -1.9029828310012817
    3. 'res' → logprob: -2.027982711791992
    4. 'print' → logprob: -2.652982711791992
    5. '       ' → logprob: -3.777982711791992
    6. ' min' → logprob: -4.027982711791992
    7. 'd' → logprob: -4.152982711791992
    8. ' ans' → logprob: -4.277982711791992
    9. 'm' → logprob: -4.402982711791992
    10. 'x' → logprob: -4.652982711791992

Token 530: ' avoid' (ID: 8397)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6869812607765198
    2. 'min' → logprob: -1.311981201171875
    3. 'print' → logprob: -2.311981201171875
    4. 'complete' → logprob: -3.311981201171875
    5. '
' → logprob: -3.936981201171875
    6. ' continue' → logprob: -4.311981201171875
    7. 'calculate' → logprob: -4.311981201171875
    8. 'max' → logprob: -4.936981201171875
    9. 'dist' → logprob: -5.311981201171875
    10. 'find' → logprob: -5.436981201171875

Token 531: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.3177054524421692
    2. 'floating' → logprob: -1.8177053928375244
    3. ' floating' → logprob: -2.4427053928375244
    4. ' float' → logprob: -4.4427056312561035
    5. '   ' → logprob: -5.4427056312561035
    6. ' using' → logprob: -5.9427056312561035
    7. 'flo' → logprob: -6.5677056312561035
    8. 'using' → logprob: -6.6927056312561035
    9. 'precision' → logprob: -7.9427056312561035
    10. 'overflow' → logprob: -8.317705154418945

Token 532: ',' (ID: 11)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.4506334364414215
    2. '   ' → logprob: -1.2006334066390991
    3. ':' → logprob: -5.075633525848389
    4. 'int' → logprob: -5.075633525848389
    5. '       ' → logprob: -5.200633525848389
    6. ' division' → logprob: -5.325633525848389
    7. 'in' → logprob: -5.950633525848389
    8. '1' → logprob: -5.950633525848389
    9. ',' → logprob: -6.075633525848389
    10. '    ' → logprob: -6.200633525848389

Token 533: ' use' (ID: 1199)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3571222424507141
    2. 'res' → logprob: -1.7321221828460693
    3. 'cost' → logprob: -2.8571221828460693
    4. ' ans' → logprob: -3.8571221828460693
    5. 'print' → logprob: -4.732122421264648
    6. 'answer' → logprob: -4.732122421264648
    7. ' res' → logprob: -4.857122421264648
    8. '       ' → logprob: -5.107122421264648
    9. 'min' → logprob: -5.357122421264648
    10. ' cost' → logprob: -5.732122421264648

Token 534: ' exact' (ID: 6354)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.7763011455535889
    2. ' (' → logprob: -1.0263011455535889
    3. 'max' → logprob: -2.651301145553589
    4. 'dab' → logprob: -3.026301145553589
    5. '(max' → logprob: -4.276301383972168
    6. ' max' → logprob: -4.401301383972168
    7. 'min' → logprob: -4.901301383972168
    8. 'print' → logprob: -5.026301383972168
    9. '(min' → logprob: -5.401301383972168
    10. '((' → logprob: -5.526301383972168

Token 535: ' evaluation' (ID: 21407)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -2.1952707767486572
    2. '_div' → logprob: -2.6952707767486572
    3. '((' → logprob: -2.8202707767486572
    4. '//' → logprob: -2.8202707767486572
    5. 'div' → logprob: -2.8202707767486572
    6. '(d' → logprob: -3.0702707767486572
    7. 'integer' → logprob: -3.0702707767486572
    8. '_' → logprob: -3.1952707767486572
    9. ' integer' → logprob: -3.1952707767486572
    10. 'max' → logprob: -3.1952707767486572

Token 536: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027185291051864624
    2. 'min' → logprob: -3.9021852016448975
    3. '
' → logprob: -5.527185440063477
    4. '        
' → logprob: -7.027185440063477
    5. ' min' → logprob: -7.777185440063477
    6. 'max' → logprob: -8.277185440063477
    7. '   ' → logprob: -8.402185440063477
    8. '_min' → logprob: -8.777185440063477
    9. 'dist' → logprob: -9.527185440063477
    10. ',' → logprob: -9.777185440063477

Token 537: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3081005811691284
    2. 'min' → logprob: -2.183100700378418
    3. ' min' → logprob: -2.683100700378418
    4. '   ' → logprob: -3.058100700378418
    5. ' ans' → logprob: -5.308100700378418
    6. 'max' → logprob: -5.558100700378418
    7. 'ans' → logprob: -5.683100700378418
    8. 'x' → logprob: -5.933100700378418
    9. ' x' → logprob: -5.933100700378418
    10. 'm' → logprob: -6.308100700378418

Token 538: ' #' (ID: 1069)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.7514682412147522
    2. 'm' → logprob: -2.0014681816101074
    3. 'ans' → logprob: -2.3764681816101074
    4. 'mn' → logprob: -2.7514681816101074
    5. 'mx' → logprob: -2.8764681816101074
    6. '       ' → logprob: -3.1264681816101074
    7. 'res' → logprob: -3.1264681816101074
    8. 'x' → logprob: -3.7514681816101074
    9. 'd' → logprob: -4.126468181610107
    10. 'max' → logprob: -4.876468181610107

Token 539: ' The' (ID: 623)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.0067791938781738
    2. 'ans' → logprob: -1.2567791938781738
    3. 'res' → logprob: -1.7567791938781738
    4. 'm' → logprob: -3.256779193878174
    5. 'mx' → logprob: -3.631779193878174
    6. 'total' → logprob: -4.131779193878174
    7. 'mn' → logprob: -4.131779193878174
    8. 'tmp' → logprob: -4.256779193878174
    9. 'max' → logprob: -4.631779193878174
    10. 'x' → logprob: -4.631779193878174

Token 540: ' minimal' (ID: 19957)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.298221617937088
    2. 'answer' → logprob: -2.0482215881347656
    3. 'cost' → logprob: -2.7982215881347656
    4. 'res' → logprob: -3.0482215881347656
    5. 'max' → logprob: -5.048221588134766
    6. 'min' → logprob: -5.173221588134766
    7. 'print' → logprob: -5.798221588134766
    8. 'result' → logprob: -6.673221588134766
    9. '
' → logprob: -7.173221588134766
    10. '   ' → logprob: -7.173221588134766

Token 541: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.08696109056472778
    2. 'cost' → logprob: -2.711961030960083
    3. ' max' → logprob: -5.586961269378662
    4. '_max' → logprob: -5.586961269378662
    5. 'maximum' → logprob: -6.086961269378662
    6. '_cost' → logprob: -6.211961269378662
    7. 'distance' → logprob: -6.836961269378662
    8. 'answer' → logprob: -7.086961269378662
    9. ' cost' → logprob: -7.336961269378662
    10. 'print' → logprob: -7.961961269378662

Token 542: ' dist' (ID: 3601)
  Prédit: '_distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.9844990372657776
    2. 'dist' → logprob: -1.3594989776611328
    3. '_dist' → logprob: -1.6094989776611328
    4. '_' → logprob: -2.359498977661133
    5. 'distance' → logprob: -3.859498977661133
    6. 'd' → logprob: -3.984498977661133
    7. 'max' → logprob: -3.984498977661133
    8. '_d' → logprob: -4.859498977661133
    9. '_max' → logprob: -6.109498977661133
    10. '_cost' → logprob: -6.109498977661133

Token 543: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5154743194580078
    2. ' =' → logprob: -1.0154743194580078
    3. 'ance' → logprob: -3.265474319458008
    4. '   ' → logprob: -7.515474319458008
    5. ' is' → logprob: -7.640474319458008
    6. '       ' → logprob: -7.640474319458008
    7. '=max' → logprob: -7.765474319458008
    8. 'max' → logprob: -8.890474319458008
    9. 'is' → logprob: -9.890474319458008
    10. '           ' → logprob: -10.265474319458008

Token 544: ' max' (ID: 2999)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.13095785677433014
    2. ' (' → logprob: -2.130957841873169
    3. '(max' → logprob: -6.255958080291748
    4. '(min' → logprob: -6.880958080291748
    5. '   ' → logprob: -7.880958080291748
    6. 'max' → logprob: -8.13095760345459
    7. '((' → logprob: -8.63095760345459
    8. ' ' → logprob: -9.63095760345459
    9. 'min' → logprob: -9.75595760345459
    10. ' max' → logprob: -10.38095760345459

Token 545: '(' (ID: 7)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0006293982733041048
    2. '(' → logprob: -8.000629425048828
    3. 'd' → logprob: -9.125629425048828
    4. '((' → logprob: -9.375629425048828
    5. '([' → logprob: -10.250629425048828
    6. '(max' → logprob: -10.500629425048828
    7. 'dab' → logprob: -11.000629425048828
    8. '(
' → logprob: -11.625629425048828
    9. 'max' → logprob: -11.875629425048828
    10. ' (' → logprob: -14.125629425048828

Token 546: ' (' (ID: 350)
  Prédit: 'dab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dab' → logprob: -0.07810399681329727
    2. '(d' → logprob: -2.703104019165039
    3. 'd' → logprob: -5.328104019165039
    4. '[d' → logprob: -5.828104019165039
    5. ' dab' → logprob: -9.203104019165039
    6. 'dac' → logprob: -10.578104019165039
    7. '[' → logprob: -10.578104019165039
    8. ' (' → logprob: -10.703104019165039
    9. '((' → logprob: -10.828104019165039
    10. 'max' → logprob: -10.828104019165039

Token 547: 'dab' (ID: 101040)
  Prédit: 'dab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dab' → logprob: -0.009929266758263111
    2. '(d' → logprob: -5.259929180145264
    3. '[d' → logprob: -5.759929180145264
    4. ' dab' → logprob: -7.509929180145264
    5. 'd' → logprob: -7.884929180145264
    6. 'dac' → logprob: -8.509929656982422
    7. 'max' → logprob: -9.384929656982422
    8. '	d' → logprob: -9.509929656982422
    9. ' ' → logprob: -9.759929656982422
    10. '   ' → logprob: -10.634929656982422

Token 548: '+' (ID: 10)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.31354889273643494
    2. '+' → logprob: -1.3135489225387573
    3. '+d' → logprob: -8.688549041748047
    4. ',' → logprob: -10.063549041748047
    5. ' ' → logprob: -11.188549041748047
    6. ' ' → logprob: -11.313549041748047
    7. ')' → logprob: -11.813549041748047
    8. '+b' → logprob: -12.376049041748047
    9. 'dab' → logprob: -12.438549041748047
    10. ' ,' → logprob: -12.501049041748047

Token 549: 'dbc' (ID: 21003)
  Prédit: 'dbc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dbc' → logprob: -0.006912629585713148
    2. ' dbc' → logprob: -5.006912708282471
    3. 'db' → logprob: -8.631912231445312
    4. ' ' → logprob: -11.881912231445312
    5. '   ' → logprob: -12.756912231445312
    6. '+' → logprob: -13.006912231445312
    7. '
' → logprob: -13.381912231445312
    8. '  ' → logprob: -14.256912231445312
    9. 'dbl' → logprob: -14.506912231445312
    10. ' +' → logprob: -14.506912231445312

Token 550: '+d' (ID: 127807)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5945884585380554
    2. '+' → logprob: -0.8445884585380554
    3. '+d' → logprob: -5.094588279724121
    4. ')' → logprob: -5.469588279724121
    5. '),' → logprob: -5.594588279724121
    6. ')+' → logprob: -6.469588279724121
    7. ',' → logprob: -6.594588279724121
    8. '+c' → logprob: -7.344588279724121
    9. ' ),' → logprob: -8.469588279724121
    10. ' )' → logprob: -8.969588279724121

Token 551: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.000250491953920573
    2. 'dac' → logprob: -8.375250816345215
    3. ' dac' → logprob: -12.125250816345215
    4. 'acf' → logprob: -13.000250816345215
    5. '
' → logprob: -13.375250816345215
    6. 'aac' → logprob: -14.000250816345215
    7. '```' → logprob: -14.000250816345215
    8. '   ' → logprob: -14.125250816345215
    9. 'acd' → logprob: -14.125250816345215
    10. '#ac' → logprob: -14.250250816345215

Token 552: ')/' (ID: 11876)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20041082799434662
    2. ' -' → logprob: -2.200410842895508
    3. '-' → logprob: -3.700410842895508
    4. ')//' → logprob: -3.825410842895508
    5. ')-' → logprob: -4.825410842895508
    6. '+' → logprob: -5.075410842895508
    7. ' )' → logprob: -5.450410842895508
    8. ' +' → logprob: -6.200410842895508
    9. '),' → logprob: -6.700410842895508
    10. ' ' → logprob: -7.325410842895508

Token 553: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001046743243932724
    2. ' ' → logprob: -6.876046657562256
    3. '3' → logprob: -11.876047134399414
    4. '```' → logprob: -13.626047134399414
    5. '   ' → logprob: -13.876047134399414
    6. '6' → logprob: -13.876047134399414
    7. ' ' → logprob: -14.063547134399414
    8. '
' → logprob: -14.188547134399414
    9. ')' → logprob: -14.813547134399414
    10. '  ' → logprob: -15.313547134399414

Token 554: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5379502177238464
    2. ',' → logprob: -1.2879502773284912
    3. '-' → logprob: -2.537950277328491
    4. ' ,' → logprob: -3.662950277328491
    5. ')' → logprob: -4.287950038909912
    6. '+' → logprob: -4.912950038909912
    7. ',d' → logprob: -5.412950038909912
    8. '-d' → logprob: -5.912950038909912
    9. ' +' → logprob: -6.037950038909912
    10. ' )' → logprob: -6.787950038909912

Token 555: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.11810339987277985
    2. ' min' → logprob: -2.243103504180908
    3. 'dab' → logprob: -5.868103504180908
    4. 'max' → logprob: -6.243103504180908
    5. ' max' → logprob: -8.99310302734375
    6. '   ' → logprob: -9.49310302734375
    7. '	min' → logprob: -9.49310302734375
    8. ' dab' → logprob: -9.61810302734375
    9. '(min' → logprob: -9.99310302734375
    10. ' ' → logprob: -10.49310302734375

Token 556: ' pair' (ID: 10610)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.009850997477769852
    2. '(' → logprob: -5.384850978851318
    3. '(min' → logprob: -5.384850978851318
    4. 'dab' → logprob: -8.509851455688477
    5. 'min' → logprob: -9.134851455688477
    6. '(_' → logprob: -9.384851455688477
    7. ' (' → logprob: -9.884851455688477
    8. '([' → logprob: -10.634851455688477
    9. '(
' → logprob: -10.634851455688477
    10. 'd' → logprob: -10.884851455688477

Token 557: ' dist' (ID: 3601)
  Prédit: '_distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.19383461773395538
    2. '_' → logprob: -3.1938345432281494
    3. 'distance' → logprob: -3.1938345432281494
    4. '_dist' → logprob: -3.3188345432281494
    5. ')_' → logprob: -3.6938345432281494
    6. '_d' → logprob: -4.0688347816467285
    7. ' _' → logprob: -4.9438347816467285
    8. ')' → logprob: -5.6938347816467285
    9. 'dist' → logprob: -6.8188347816467285
    10. '(' → logprob: -7.4438347816467285

Token 558: ' )

' (ID: 11467)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.042254846543073654
    2. ',' → logprob: -3.79225492477417
    3. ' )' → logprob: -4.16725492477417
    4. ' ,' → logprob: -7.04225492477417
    5. ')
' → logprob: -7.54225492477417
    6. '))' → logprob: -8.042254447937012
    7. '[' → logprob: -8.542254447937012
    8. '//' → logprob: -8.917254447937012
    9. ',)' → logprob: -9.167254447937012
    10. '[a' → logprob: -9.167254447937012

Token 559: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007277206983417273
    2. '
' → logprob: -6.507277011871338
    3. '        
' → logprob: -6.507277011871338
    4. ',' → logprob: -6.882277011871338
    5. '   ' → logprob: -7.132277011871338
    6. 'max' → logprob: -7.632277011871338
    7. ')' → logprob: -7.882277011871338
    8. ')
' → logprob: -8.632277488708496
    9. 'min' → logprob: -9.007277488708496
    10. '<|end|>' → logprob: -9.132277488708496

Token 560: ' #' (ID: 1069)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.13576561212539673
    2. '       ' → logprob: -2.885765552520752
    3. ' min' → logprob: -4.010765552520752
    4. 'm' → logprob: -4.135765552520752
    5. 'mn' → logprob: -4.510765552520752
    6. 'd' → logprob: -5.260765552520752
    7. 'mind' → logprob: -6.010765552520752
    8. 'dist' → logprob: -6.135765552520752
    9. 'sum' → logprob: -6.385765552520752
    10. ' mn' → logprob: -6.510765552520752

Token 561: ' We' (ID: 1416)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.20852744579315186
    2. 'ans' → logprob: -3.2085275650024414
    3. 'res' → logprob: -3.3335275650024414
    4. 'm' → logprob: -3.4585275650024414
    5. 'mn' → logprob: -3.4585275650024414
    6. 'total' → logprob: -4.333527565002441
    7. 'sum' → logprob: -4.958527565002441
    8. 'mi' → logprob: -5.583527565002441
    9. 'mind' → logprob: -5.833527565002441
    10. 'mx' → logprob: -5.958527565002441

Token 562: ' can' (ID: 665)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.8709216713905334
    2. ' =' → logprob: -1.2459216117858887
    3. '       ' → logprob: -2.8709216117858887
    4. '=' → logprob: -3.2459216117858887
    5. '   ' → logprob: -3.3709216117858887
    6. '_min' → logprob: -3.4959216117858887
    7. ' min' → logprob: -3.6209216117858887
    8. 'max' → logprob: -3.6209216117858887
    9. ')' → logprob: -3.8709216117858887
    10. '_' → logprob: -4.370921611785889

Token 563: ' try' (ID: 2075)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'use' → logprob: -1.469557523727417
    2. 'calculate' → logprob: -1.719557523727417
    3. 'find' → logprob: -1.969557523727417
    4. 'try' → logprob: -2.344557523727417
    5. 'consider' → logprob: -2.969557523727417
    6. 'continue' → logprob: -3.469557523727417
    7. 'compute' → logprob: -3.469557523727417
    8. 'print' → logprob: -3.469557523727417
    9. 'choose' → logprob: -3.594557523727417
    10. 'complete' → logprob: -3.594557523727417

Token 564: ' all' (ID: 722)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.6775915622711182
    2. ' all' → logprob: -1.6775915622711182
    3. '   ' → logprob: -1.9275915622711182
    4. 'all' → logprob: -2.052591562271118
    5. 'pairs' → logprob: -2.927591562271118
    6. 'd' → logprob: -3.052591562271118
    7. 'max' → logprob: -3.677591562271118
    8. ' max' → logprob: -3.802591562271118
    9. ' pairs' → logprob: -4.052591323852539
    10. ' d' → logprob: -4.052591323852539

Token 565: ' meeting' (ID: 9176)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.8027573227882385
    2. '   ' → logprob: -1.8027572631835938
    3. '(' → logprob: -2.6777572631835938
    4. 'abc' → logprob: -3.3027572631835938
    5. 'pair' → logprob: -3.4277572631835938
    6. ' ' → logprob: -3.4277572631835938
    7. ' permutations' → logprob: -3.4277572631835938
    8. '3' → logprob: -3.6777572631835938
    9. '       ' → logprob: -3.8027572631835938
    10. 'trip' → logprob: -4.302757263183594

Token 566: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.13635970652103424
    2. ' points' → logprob: -2.261359691619873
    3. '_points' → logprob: -4.386359691619873
    4. 'cities' → logprob: -4.886359691619873
    5. 'places' → logprob: -7.136359691619873
    6. 'nodes' → logprob: -8.011360168457031
    7. 'point' → logprob: -8.136360168457031
    8. '_city' → logprob: -8.136360168457031
    9. '_point' → logprob: -8.261360168457031
    10. 'city' → logprob: -8.636360168457031

Token 567: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.599236011505127
    2. '<|end|>' → logprob: -1.724236011505127
    3. ' for' → logprob: -2.224236011505127
    4. '   ' → logprob: -3.724236011505127
    5. '        
' → logprob: -3.724236011505127
    6. '
' → logprob: -4.099236011505127
    7. ',' → logprob: -4.224236011505127
    8. ':' → logprob: -4.599236011505127
    9. '<|end|>' → logprob: -4.599236011505127
    10. 'for' → logprob: -4.599236011505127

Token 568: ' the' (ID: 290)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.15764129161834717
    2. ' [' → logprob: -3.0326414108276367
    3. 'abc' → logprob: -4.157641410827637
    4. ' the' → logprob: -4.157641410827637
    5. ' abc' → logprob: -4.157641410827637
    6. 'a' → logprob: -4.282641410827637
    7. '[' → logprob: -4.407641410827637
    8. ' a' → logprob: -4.782641410827637
    9. 'the' → logprob: -5.407641410827637
    10. '[(' → logprob: -5.532641410827637

Token 569: ' path' (ID: 3104)
  Prédit: 'three'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'three' → logprob: -1.4757509231567383
    2. 'path' → logprob: -1.9757509231567383
    3. ' three' → logprob: -2.2257509231567383
    4. 'abc' → logprob: -2.3507509231567383
    5. ' path' → logprob: -2.3507509231567383
    6. ' line' → logprob: -2.9757509231567383
    7. 'paths' → logprob: -3.2257509231567383
    8. 'line' → logprob: -3.2257509231567383
    9. 'edges' → logprob: -3.3507509231567383
    10. '3' → logprob: -3.7257509231567383

Token 570: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1215975284576416
    2. '   ' → logprob: -1.3715975284576416
    3. ' ' → logprob: -2.1215975284576416
    4. 's' → logprob: -2.8715975284576416
    5. 'abc' → logprob: -3.1215975284576416
    6. ',' → logprob: -3.8715975284576416
    7. ' for' → logprob: -4.1215972900390625
    8. ' =' → logprob: -4.3715972900390625
    9. '.' → logprob: -4.3715972900390625
    10. ':' → logprob: -4.6215972900390625

Token 571: ' these' (ID: 1879)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2990509271621704
    2. ' the' → logprob: -1.4240509271621704
    3. ' a' → logprob: -1.9240509271621704
    4. ' pairs' → logprob: -2.049050807952881
    5. 'the' → logprob: -2.674050807952881
    6. ' each' → logprob: -3.549050807952881
    7. ' edges' → logprob: -3.549050807952881
    8. 'ab' → logprob: -4.299050807952881
    9. 'pairs' → logprob: -4.674050807952881
    10. '[a' → logprob: -4.799050807952881

Token 572: ' three' (ID: 3407)
  Prédit: ' three'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' three' → logprob: -0.2699706256389618
    2. 'three' → logprob: -1.5199706554412842
    3. 'points' → logprob: -5.269970417022705
    4. ' points' → logprob: -5.394970417022705
    5. ' ' → logprob: -6.144970417022705
    6. '3' → logprob: -6.144970417022705
    7. 'nodes' → logprob: -7.019970417022705
    8. ' nodes' → logprob: -7.144970417022705
    9. 'pairs' → logprob: -7.144970417022705
    10. '   ' → logprob: -7.644970417022705

Token 573: ' nodes' (ID: 15749)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.7859998345375061
    2. ' points' → logprob: -1.4109997749328613
    3. 'pairs' → logprob: -1.5359997749328613
    4. ' pairs' → logprob: -2.9109997749328613
    5. 'nodes' → logprob: -4.660999774932861
    6. ' nodes' → logprob: -4.660999774932861
    7. 'pair' → logprob: -6.160999774932861
    8. ' edges' → logprob: -6.160999774932861
    9. 'dist' → logprob: -6.535999774932861
    10. ' ' → logprob: -6.910999774932861

Token 574: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41420313715934753
    2. '<|end|>' → logprob: -1.16420316696167
    3. '<|end|>' → logprob: -5.03920316696167
    4. ')' → logprob: -5.28920316696167
    5. '
' → logprob: -5.53920316696167
    6. '   ' → logprob: -5.66420316696167
    7. '        
' → logprob: -6.28920316696167
    8. '#' → logprob: -6.91420316696167
    9. ',' → logprob: -7.03920316696167
    10. '...' → logprob: -7.66420316696167

Token 575: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04962257295846939
    2. '<|end|>' → logprob: -3.2996225357055664
    3. '
' → logprob: -5.049622535705566
    4. ',' → logprob: -6.299622535705566
    5. '<|end|>' → logprob: -6.799622535705566
    6. ')' → logprob: -7.549622535705566
    7. '   ' → logprob: -7.674622535705566
    8. '        
' → logprob: -8.049622535705566
    9. '#' → logprob: -8.424622535705566
    10. ',
' → logprob: -9.549622535705566

Token 576: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0363120473921299
    2. '<|end|>' → logprob: -3.9113121032714844
    3. ')' → logprob: -5.786312103271484
    4. '
' → logprob: -6.036312103271484
    5. 'max' → logprob: -6.161312103271484
    6. '   ' → logprob: -6.286312103271484
    7. '        
' → logprob: -6.661312103271484
    8. ',' → logprob: -7.161312103271484
    9. 'print' → logprob: -7.411312103271484
    10. '#' (adapté à ' #') → logprob: -7.911312103271484

Token 577: ' Explanation' (ID: 134819)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4903736114501953
    2. 'max' → logprob: -1.7403736114501953
    3. 'meet' → logprob: -3.2403736114501953
    4. 'abc' → logprob: -3.4903736114501953
    5. '   ' → logprob: -3.7403736114501953
    6. 'print' → logprob: -3.8653736114501953
    7. 'm' → logprob: -4.240373611450195
    8. 'mid' → logprob: -4.865373611450195
    9. 'meeting' → logprob: -4.865373611450195
    10. '#' → logprob: -4.865373611450195

Token 578: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012278405949473381
    2. '<|end|>' → logprob: -5.2622785568237305
    3. '        
' → logprob: -5.7622785568237305
    4. '
' → logprob: -6.1372785568237305
    5. '<|end|>' → logprob: -8.01227855682373
    6. ',' → logprob: -8.63727855682373
    7. '        ' → logprob: -9.01227855682373
    8. '   ' → logprob: -9.26227855682373
    9. ' max' → logprob: -9.51227855682373
    10. '#' → logprob: -9.63727855682373

Token 579: 'known' (ID: 8520)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9212781190872192
    2. ')' → logprob: -1.1712781190872192
    3. '#' → logprob: -1.4212781190872192
    4. ')
' → logprob: -5.04627799987793
    5. 'continue' → logprob: -5.54627799987793
    6. ' #' → logprob: -5.67127799987793
    7. ' )' → logprob: -5.79627799987793
    8. '
' → logprob: -5.79627799987793
    9. '...' → logprob: -5.92127799987793
    10. '```' → logprob: -6.04627799987793

Token 580: ' from' (ID: 591)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.432536780834198
    2. ' for' → logprob: -2.5575368404388428
    3. '```' → logprob: -2.6825368404388428
    4. 'for' → logprob: -3.5575368404388428
    5. 'from' → logprob: -3.6825368404388428
    6. ' )' → logprob: -3.8075368404388428
    7. ' ' → logprob: -4.182536602020264
    8. ' as' → logprob: -4.307536602020264
    9. ' code' → logprob: -4.807536602020264
    10. ':' → logprob: -4.932536602020264

Token 581: ' problem' (ID: 4792)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.7174174785614014
    2. 'the' → logprob: -1.7174174785614014
    3. 'At' → logprob: -3.0924174785614014
    4. 'code' → logprob: -3.5924174785614014
    5. 'problem' → logprob: -3.5924174785614014
    6. 'editor' → logprob: -3.5924174785614014
    7. 'trees' → logprob: -3.7174174785614014
    8. ' tree' → logprob: -3.8424174785614014
    9. ' At' → logprob: -3.9674174785614014
    10. 'trip' → logprob: -4.0924177169799805

Token 582: ' editorial' (ID: 37857)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6908971071243286
    2. ' statement' → logprob: -2.190896987915039
    3. 'statement' → logprob: -2.315896987915039
    4. ' description' → logprob: -2.440896987915039
    5. 'description' → logprob: -2.815896987915039
    6. ''s' → logprob: -3.690896987915039
    7. 'name' → logprob: -4.315896987915039
    8. 's' → logprob: -4.690896987915039
    9. ' code' → logprob: -4.815896987915039
    10. ' statements' → logprob: -5.440896987915039

Token 583: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.19843007624149323
    2. ')' → logprob: -2.073430061340332
    3. '):
' → logprob: -3.448430061340332
    4. '       ' → logprob: -3.948430061340332
    5. ':' → logprob: -7.573430061340332
    6. '):

' → logprob: -7.698430061340332
    7. ')
' → logprob: -7.823430061340332
    8. '   ' → logprob: -8.073430061340332
    9. ',' → logprob: -8.198430061340332
    10. ' ):' → logprob: -8.323430061340332

Token 584: ' answer' (ID: 6052)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.1511260271072388
    2. '       ' → logprob: -1.2761260271072388
    3. 'res' → logprob: -2.651125907897949
    4. ' ans' → logprob: -3.026125907897949
    5. 'x' → logprob: -3.276125907897949
    6. 'm' → logprob: -3.651125907897949
    7. 'max' → logprob: -4.026125907897949
    8. 's' → logprob: -4.026125907897949
    9. ' res' → logprob: -4.026125907897949
    10. 'mx' → logprob: -4.151125907897949

Token 585: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043042007833719254
    2. '=' → logprob: -3.168041944503784
    3. ' is' → logprob: -11.168042182922363
    4. 's' → logprob: -11.543042182922363
    5. '=max' → logprob: -12.293042182922363
    6. ' ' → logprob: -12.418042182922363
    7. ',' → logprob: -13.043042182922363
    8. ' =
' → logprob: -13.418042182922363
    9. '```' → logprob: -14.043042182922363
    10. ' ' → logprob: -14.043042182922363

Token 586: ' (' (ID: 350)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.45784300565719604
    2. 'max' → logprob: -2.082843065261841
    3. ' (' → logprob: -2.207843065261841
    4. '(max' → logprob: -2.332843065261841
    5. ' max' → logprob: -3.582843065261841
    6. '(min' → logprob: -5.582842826843262
    7. 'min' → logprob: -6.082842826843262
    8. ' min' → logprob: -7.582842826843262
    9. '((' → logprob: -8.207842826843262
    10. 'd' → logprob: -8.207842826843262

Token 587: 'dab' (ID: 101040)
  Prédit: 'dab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dab' → logprob: -0.05540619418025017
    2. '(d' → logprob: -2.930406093597412
    3. ' dab' → logprob: -8.30540657043457
    4. 'max' → logprob: -9.30540657043457
    5. '[d' → logprob: -9.55540657043457
    6. ' (' → logprob: -10.30540657043457
    7. ' ' → logprob: -11.30540657043457
    8. 'd' → logprob: -11.43040657043457
    9. '   ' → logprob: -11.43040657043457
    10. 'dac' → logprob: -11.93040657043457

Token 588: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5760090947151184
    2. ' +' → logprob: -0.8260090947151184
    3. '+d' → logprob: -10.201008796691895
    4. ' ' → logprob: -11.201008796691895
    5. '＋' → logprob: -12.201008796691895
    6. '+b' → logprob: -12.576008796691895
    7. ' plus' → logprob: -12.951008796691895
    8. ' ' → logprob: -13.701008796691895
    9. '+c' → logprob: -13.951008796691895
    10. '   ' → logprob: -14.388508796691895

Token 589: 'dbc' (ID: 21003)
  Prédit: 'dbc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dbc' → logprob: -0.0005165747134014964
    2. ' dbc' → logprob: -7.750516414642334
    3. 'db' → logprob: -9.375516891479492
    4. '+' → logprob: -15.000516891479492
    5. 'dbo' → logprob: -15.375516891479492
    6. '
' → logprob: -15.750516891479492
    7. 'dbh' → logprob: -16.125516891479492
    8. 'd' → logprob: -16.500516891479492
    9. 'dbl' → logprob: -16.500516891479492
    10. 'dc' → logprob: -17.125516891479492

Token 590: '+d' (ID: 127807)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07707304507493973
    2. ' +' → logprob: -2.702073097229004
    3. '+d' → logprob: -4.952073097229004
    4. 'dac' → logprob: -10.577073097229004
    5. '+
' → logprob: -11.827073097229004
    6. '＋' → logprob: -12.577073097229004
    7. ' ' → logprob: -13.952073097229004
    8. ' +
' → logprob: -13.952073097229004
    9. ' dac' → logprob: -14.202073097229004
    10. '+c' → logprob: -14.327073097229004

Token 591: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.00019781860464718193
    2. 'dac' → logprob: -8.750197410583496
    3. 'ab' → logprob: -10.750197410583496
    4. ' dac' → logprob: -12.375197410583496
    5. 'a' → logprob: -12.625197410583496
    6. 'c' → logprob: -12.875197410583496
    7. 'bac' → logprob: -13.625197410583496
    8. 'aac' → logprob: -13.875197410583496
    9. '
' → logprob: -14.125197410583496
    10. 'acf' → logprob: -14.250197410583496

Token 592: ')//' (ID: 60375)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20574864745140076
    2. '+' → logprob: -2.4557485580444336
    3. ')//' → logprob: -2.7057485580444336
    4. '-' → logprob: -4.330748558044434
    5. ' -' → logprob: -4.705748558044434
    6. ' +' → logprob: -5.080748558044434
    7. ' )' → logprob: -5.705748558044434
    8. ')/' → logprob: -7.330748558044434
    9. ')-' → logprob: -7.830748558044434
    10. ')+' → logprob: -8.580748558044434

Token 593: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00020425561524461955
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -15.000204086303711
    4. ' ' → logprob: -15.625204086303711
    5. '```' → logprob: -15.625204086303711
    6. '1' → logprob: -17.25020408630371
    7. '２' → logprob: -17.37520408630371
    8. '
' → logprob: -17.37520408630371
    9. '  ' → logprob: -17.81270408630371
    10. '3' → logprob: -17.87520408630371

Token 594: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013278458267450333
    2. 'print' → logprob: -4.763278484344482
    3. '
' → logprob: -5.638278484344482
    4. '   ' → logprob: -7.388278484344482
    5. ',' → logprob: -8.888278007507324
    6. ')' → logprob: -9.388278007507324
    7. ')
' → logprob: -10.263278007507324
    8. '+' → logprob: -10.763278007507324
    9. ' print' → logprob: -10.763278007507324
    10. '<|end|>' → logprob: -10.763278007507324

Token 595: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11877813935279846
    2. 'print' → logprob: -2.2437782287597656
    3. '   ' → logprob: -5.618778228759766
    4. ' print' → logprob: -7.368778228759766
    5. ',' → logprob: -7.493778228759766
    6. '<|end|>' → logprob: -7.743778228759766
    7. '
' → logprob: -8.243778228759766
    8. ')' → logprob: -8.618778228759766
    9. ')
' → logprob: -10.618778228759766
    10. '        
' → logprob: -10.618778228759766

Token 596: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1439940631389618
    2. '       ' → logprob: -2.018994092941284
    3. ' print' → logprob: -6.768993854522705
    4. '   ' → logprob: -8.768994331359863
    5. 'answer' → logprob: -12.393994331359863
    6. 'res' → logprob: -13.268994331359863
    7. '        
' → logprob: -13.393994331359863
    8. '```' → logprob: -13.643994331359863
    9. '	print' → logprob: -13.893994331359863
    10. '
' → logprob: -13.893994331359863

Token 597: ' But' (ID: 3072)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006749835796654224
    2. 'ans' → logprob: -5.381749629974365
    3. '       ' → logprob: -6.631749629974365
    4. '   ' → logprob: -7.756749629974365
    5. 'res' → logprob: -8.631750106811523
    6. 'answer' → logprob: -8.881750106811523
    7. ' print' → logprob: -9.756750106811523
    8. ' ans' → logprob: -12.756750106811523
    9. 'result' → logprob: -13.881750106811523
    10. '
' → logprob: -14.381750106811523

Token 598: ' be' (ID: 413)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6363160014152527
    2. 'print' → logprob: -1.2613160610198975
    3. ' print' → logprob: -1.7613160610198975
    4. ' ans' → logprob: -5.136315822601318
    5. ' answer' → logprob: -5.261315822601318
    6. 'answer' → logprob: -6.261315822601318
    7. '        
' → logprob: -7.886315822601318
    8. '   ' → logprob: -8.011316299438477
    9. ' if' → logprob: -8.636316299438477
    10. ' for' → logprob: -8.761316299438477

Token 599: ' careful' (ID: 25120)
  Prédit: ' careful'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' careful' → logprob: -1.0202202796936035
    2. '       ' → logprob: -1.1452202796936035
    3. '   ' → logprob: -1.7702202796936035
    4. ' sure' → logprob: -2.6452202796936035
    5. 'cause' → logprob: -3.3952202796936035
    6. 'print' → logprob: -3.8952202796936035
    7. 'd' → logprob: -5.8952202796936035
    8. '```' → logprob: -6.0202202796936035
    9. ' print' → logprob: -6.0202202796936035
    10. '           ' → logprob: -6.2702202796936035

Token 600: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30164507031440735
    2. ' if' → logprob: -1.426645040512085
    3. ':' → logprob: -4.926645278930664
    4. '<|end|>' → logprob: -5.801645278930664
    5. '        
' → logprob: -6.551645278930664
    6. '   ' → logprob: -6.676645278930664
    7. 'if' → logprob: -6.801645278930664
    8. '        ' → logprob: -7.176645278930664
    9. ' with' → logprob: -7.176645278930664
    10. ')' → logprob: -7.176645278930664

Token 601: ' choose' (ID: 5655)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00238016527146101
    2. ' print' → logprob: -6.50238037109375
    3. 'output' → logprob: -8.62738037109375
    4. 'avoid' → logprob: -8.62738037109375
    5. 'write' → logprob: -9.12738037109375
    6. '   ' → logprob: -9.62738037109375
    7. 'import' → logprob: -9.62738037109375
    8. 'ensure' → logprob: -9.75238037109375
    9. 'handle' → logprob: -9.87738037109375
    10. 'continue' → logprob: -10.50238037109375

Token 602: ' max' (ID: 2999)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.1953046321868896
    2. 'print' → logprob: -1.5703046321868896
    3. 'max' → logprob: -1.8203046321868896
    4. ' min' → logprob: -2.0703046321868896
    5. ' max' → logprob: -2.5703046321868896
    6. ' the' → logprob: -3.0703046321868896
    7. ' print' → logprob: -4.320304870605469
    8. 'correct' → logprob: -4.945304870605469
    9. ' a' → logprob: -5.195304870605469
    10. 'a' → logprob: -5.195304870605469

Token 603: ' distance' (ID: 9324)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11203843355178833
    2. '(
' → logprob: -2.8620383739471436
    3. '()' → logprob: -3.9870383739471436
    4. '(d' → logprob: -4.487038612365723
    5. '_' → logprob: -5.362038612365723
    6. 'max' → logprob: -5.612038612365723
    7. '(max' → logprob: -6.112038612365723
    8. '((' → logprob: -6.362038612365723
    9. '_d' → logprob: -6.987038612365723
    10. '=' → logprob: -7.112038612365723

Token 604: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.032042715698480606
    2. '
' → logprob: -4.032042503356934
    3. 'print' → logprob: -5.157042503356934
    4. ',' → logprob: -5.907042503356934
    5. '        
' → logprob: -6.532042503356934
    6. 'answer' → logprob: -6.782042503356934
    7. ' print' → logprob: -8.032042503356934
    8. ')' → logprob: -8.032042503356934
    9. ' =' → logprob: -8.407042503356934
    10. 'result' → logprob: -8.407042503356934

Token 605: ' the' (ID: 290)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8726003170013428
    2. 'print' → logprob: -0.8726003170013428
    3. 'ans' → logprob: -2.3726003170013428
    4. 'answer' → logprob: -3.6226003170013428
    5. ' ans' → logprob: -3.9976003170013428
    6. ' print' → logprob: -4.122600555419922
    7. 'res' → logprob: -5.122600555419922
    8. ' answer' → logprob: -7.247600555419922
    9. '
' → logprob: -7.622600555419922
    10. 'dist' → logprob: -7.872600555419922

Token 606: ' minimal' (ID: 19957)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5886266827583313
    2. 'answer' → logprob: -1.0886266231536865
    3. 'ans' → logprob: -3.0886266231536865
    4. ' answer' → logprob: -3.9636266231536865
    5. ' ans' → logprob: -4.088626861572266
    6. ' print' → logprob: -4.713626861572266
    7. 'res' → logprob: -5.088626861572266
    8. '
' → logprob: -5.963626861572266
    9. 'max' → logprob: -6.088626861572266
    10. '   ' → logprob: -7.088626861572266

Token 607: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.23145729303359985
    2. 'print' → logprob: -2.356457233428955
    3. 'answer' → logprob: -2.731457233428955
    4. ' max' → logprob: -4.356457233428955
    5. '=' → logprob: -4.731457233428955
    6. 'ans' → logprob: -5.231457233428955
    7. ' answer' → logprob: -5.606457233428955
    8. ' =' → logprob: -5.981457233428955
    9. '_' → logprob: -6.606457233428955
    10. '#' → logprob: -6.606457233428955

Token 608: ' distance' (ID: 9324)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6398419141769409
    2. 'distance' → logprob: -1.014841914176941
    3. ' =' → logprob: -3.8898420333862305
    4. '=' → logprob: -3.8898420333862305
    5. '_distance' → logprob: -3.8898420333862305
    6. '_dist' → logprob: -4.2648420333862305
    7. '   ' → logprob: -5.2648420333862305
    8. ' distance' → logprob: -5.2648420333862305
    9. 'dab' → logprob: -5.2648420333862305
    10. 'max' → logprob: -5.6398420333862305

Token 609: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002533567836508155
    2. ',' → logprob: -6.877533435821533
    3. 'print' → logprob: -7.127533435821533
    4. ')' → logprob: -8.877533912658691
    5. ' =' → logprob: -9.377533912658691
    6. '        
' → logprob: -9.377533912658691
    7. '=' → logprob: -9.502533912658691
    8. '
' → logprob: -9.752533912658691
    9. '<|end|>' → logprob: -10.002533912658691
    10. ' print' → logprob: -10.127533912658691

Token 610: ':
' (ID: 734)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6903231739997864
    2. '(d' → logprob: -0.8153231739997864
    3. ' max' → logprob: -3.5653231143951416
    4. 'max' → logprob: -4.065323352813721
    5. '(max' → logprob: -4.690323352813721
    6. '   ' → logprob: -6.940323352813721
    7. 'dab' → logprob: -8.815322875976562
    8. '(min' → logprob: -9.690322875976562
    9. ' min' → logprob: -9.940322875976562
    10. '((' → logprob: -10.315322875976562

Token 611: '       ' (ID: 309)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7257081866264343
    2. '(d' → logprob: -1.100708246231079
    3. '       ' → logprob: -1.850708246231079
    4. '(max' → logprob: -4.9757080078125
    5. ' max' → logprob: -5.1007080078125
    6. 'max' → logprob: -5.2257080078125
    7. '((' → logprob: -5.6007080078125
    8. '   ' → logprob: -6.3507080078125
    9. ' ((' → logprob: -6.9757080078125
    10. 'print' → logprob: -7.3507080078125

Token 612: ' #' (ID: 1069)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.7821906208992004
    2. 'max' → logprob: -1.5321905612945557
    3. ' (' → logprob: -1.9071905612945557
    4. ' max' → logprob: -2.2821905612945557
    5. '(max' → logprob: -2.6571905612945557
    6. '   ' → logprob: -5.532190799713135
    7. 'dab' → logprob: -7.532190799713135
    8. '((' → logprob: -8.157190322875977
    9. ' ' → logprob: -8.407190322875977
    10. 'min' → logprob: -9.032190322875977

Token 613: ' =' (ID: 314)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.22450494766235352
    2. ' (' → logprob: -2.3495049476623535
    3. 'max' → logprob: -3.4745049476623535
    4. 'print' → logprob: -3.4745049476623535
    5. '   ' → logprob: -3.5995049476623535
    6. ' max' → logprob: -4.9745049476623535
    7. '(max' → logprob: -5.0995049476623535
    8. ' print' → logprob: -6.3495049476623535
    9. '       ' → logprob: -7.5995049476623535
    10. '((' → logprob: -8.224504470825195

Token 614: ' max' (ID: 2999)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.23182477056980133
    2. 'max' → logprob: -2.1068248748779297
    3. '(max' → logprob: -2.7318248748779297
    4. ' (' → logprob: -4.23182487487793
    5. ' max' → logprob: -5.35682487487793
    6. '((' → logprob: -7.85682487487793
    7. '   ' → logprob: -8.73182487487793
    8. '(min' → logprob: -8.85682487487793
    9. 'min' → logprob: -9.10682487487793
    10. ' ' → logprob: -9.60682487487793

Token 615: '((' (ID: 2054)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.12243980169296265
    2. '(' → logprob: -2.3724398612976074
    3. '((' → logprob: -3.8724398612976074
    4. '(max' → logprob: -7.122439861297607
    5. ' (' → logprob: -9.24743938446045
    6. '(
' → logprob: -9.87243938446045
    7. '(((' → logprob: -9.99743938446045
    8. '([' → logprob: -10.24743938446045
    9. '   ' → logprob: -10.62243938446045
    10. 'dab' → logprob: -10.87243938446045

Token 616: 'dab' (ID: 101040)
  Prédit: 'dab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dab' → logprob: -0.03692860156297684
    2. '(d' → logprob: -3.536928653717041
    3. '[d' → logprob: -5.411928653717041
    4. 'max' → logprob: -6.286928653717041
    5. 'd' → logprob: -8.536928176879883
    6. ' dab' → logprob: -9.161928176879883
    7. 'dac' → logprob: -9.286928176879883
    8. '(max' → logprob: -9.286928176879883
    9. '{' → logprob: -10.161928176879883
    10. 'dib' → logprob: -10.411928176879883

Token 617: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22555847465991974
    2. ' +' → logprob: -1.6005585193634033
    3. '+d' → logprob: -9.600558280944824
    4. '+b' → logprob: -10.225558280944824
    5. ',' → logprob: -10.475558280944824
    6. '+c' → logprob: -12.475558280944824
    7. '＋' → logprob: -12.975558280944824
    8. '+
' → logprob: -13.975558280944824
    9. ' dbc' → logprob: -13.975558280944824
    10. ' ' → logprob: -14.100558280944824

Token 618: 'dbc' (ID: 21003)
  Prédit: 'dbc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dbc' → logprob: -0.0005550591740757227
    2. ' dbc' → logprob: -7.500555038452148
    3. 'db' → logprob: -13.250555038452148
    4. '
' → logprob: -15.500555038452148
    5. '+' → logprob: -16.62555503845215
    6. 'DBC' → logprob: -17.37555503845215
    7. 'dbh' → logprob: -17.37555503845215
    8. 'dbo' → logprob: -17.62555503845215
    9. '   ' → logprob: -18.12555503845215
    10. ' ' → logprob: -18.12555503845215

Token 619: '-d' (ID: 2469)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5307878851890564
    2. '+d' → logprob: -0.9057878851890564
    3. ' +' → logprob: -4.905787944793701
    4. 'dac' → logprob: -8.905787467956543
    5. '+
' → logprob: -10.530787467956543
    6. ',' → logprob: -11.280787467956543
    7. '),' → logprob: -11.405787467956543
    8. '
' → logprob: -11.780787467956543
    9. ')+' → logprob: -11.780787467956543
    10. '```' → logprob: -12.155787467956543

Token 620: 'ac' (ID: 359)
  Prédit: 'dac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dac' → logprob: -0.1158500462770462
    2. 'ac' → logprob: -2.2408499717712402
    3. 'c' → logprob: -6.49084997177124
    4. ' dac' → logprob: -7.36584997177124
    5. 'xac' → logprob: -8.615850448608398
    6. '   ' → logprob: -8.740850448608398
    7. ' ' → logprob: -8.740850448608398
    8. 'cac' → logprob: -9.240850448608398
    9. '  ' → logprob: -9.990850448608398
    10. 'acf' → logprob: -10.865850448608398

Token 621: ')/' (ID: 11876)
  Prédit: ')//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.0214943066239357
    2. ')' → logprob: -3.8964943885803223
    3. ')>>' → logprob: -7.146494388580322
    4. '),' → logprob: -9.146493911743164
    5. ' )' → logprob: -10.146493911743164
    6. ')
' → logprob: -11.646493911743164
    7. '+' → logprob: -13.146493911743164
    8. '//' → logprob: -13.396493911743164
    9. ')/' → logprob: -13.396493911743164
    10. ')<<' → logprob: -14.271493911743164

Token 622: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.506661833962426e-05
    2. ' ' → logprob: -9.75008487701416
    3. '//' → logprob: -10.62508487701416
    4. ')' → logprob: -14.00008487701416
    5. '
' → logprob: -14.62508487701416
    6. ',' → logprob: -14.62508487701416
    7. ' //' → logprob: -15.00008487701416
    8. ')//' → logprob: -16.125085830688477
    9. '   ' → logprob: -16.375085830688477
    10. '(' → logprob: -16.625085830688477

Token 623: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0454556867480278
    2. ',d' → logprob: -3.6704556941986084
    3. ',
' → logprob: -4.920455455780029
    4. ' ,' → logprob: -5.045455455780029
    5. '),' → logprob: -6.045455455780029
    6. ',(' → logprob: -6.295455455780029
    7. ')' → logprob: -7.295455455780029
    8. '),(' → logprob: -8.795455932617188
    9. '
' → logprob: -10.295455932617188
    10. ' ,
' → logprob: -10.795455932617188

Token 624: ' (' (ID: 350)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.06137310713529587
    2. ' (' → logprob: -2.936372995376587
    3. '(db' → logprob: -5.186373233795166
    4. 'max' → logprob: -8.186372756958008
    5. '(max' → logprob: -8.561372756958008
    6. 'dbc' → logprob: -9.186372756958008
    7. '(dc' → logprob: -9.561372756958008
    8. '   ' → logprob: -9.686372756958008
    9. '(b' → logprob: -10.061372756958008
    10. 'db' → logprob: -10.436372756958008

Token 625: 'dab' (ID: 101040)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.03649009019136429
    2. '(db' → logprob: -3.4114902019500732
    3. 'dbc' → logprob: -6.036489963531494
    4. ' (' → logprob: -9.161490440368652
    5. 'dab' → logprob: -9.286490440368652
    6. '(dc' → logprob: -9.661490440368652
    7. '(' → logprob: -9.661490440368652
    8. 'db' → logprob: -10.036490440368652
    9. '(dic' → logprob: -10.411490440368652
    10. ' dbc' → logprob: -11.411490440368652

Token 626: '+d' (ID: 127807)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0017646668711677194
    2. ' +' → logprob: -6.62676477432251
    3. '+d' → logprob: -8.626764297485352
    4. '+c' → logprob: -8.751764297485352
    5. '+b' → logprob: -10.251764297485352
    6. ' -' → logprob: -10.751764297485352
    7. '-d' → logprob: -10.876764297485352
    8. '-' → logprob: -11.126764297485352
    9. '-b' → logprob: -12.001764297485352
    10. '-db' → logprob: -12.876764297485352

Token 627: 'ac' (ID: 359)
  Prédit: 'bc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bc' → logprob: -0.058194372802972794
    2. 'ac' → logprob: -2.933194398880005
    3. 'bac' → logprob: -6.058194160461426
    4. 'c' → logprob: -7.558194160461426
    5. 'dbc' → logprob: -8.683194160461426
    6. 'b' → logprob: -9.683194160461426
    7. 'abc' → logprob: -9.808194160461426
    8. '```' → logprob: -10.558194160461426
    9. '   ' → logprob: -11.183194160461426
    10. 'dc' → logprob: -11.308194160461426

Token 628: '-d' (ID: 2469)
  Prédit: '-d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-d' → logprob: -0.00765182264149189
    2. '-db' → logprob: -5.6326518058776855
    3. ' -' → logprob: -6.1326518058776855
    4. '-' → logprob: -6.3826518058776855
    5. 'dbc' → logprob: -9.382652282714844
    6. '-dec' → logprob: -9.882652282714844
    7. '-b' → logprob: -11.007652282714844
    8. ' dbc' → logprob: -11.507652282714844
    9. '-д' → logprob: -12.132652282714844
    10. '-doc' → logprob: -12.632652282714844

Token 629: 'bc' (ID: 16715)
  Prédit: 'bc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bc' → logprob: -1.1398757123970427e-05
    2. 'b' → logprob: -11.875011444091797
    3. 'c' → logprob: -12.500011444091797
    4. '_bc' → logprob: -14.875011444091797
    5. 'cb' → logprob: -16.000011444091797
    6. 'dbc' → logprob: -16.375011444091797
    7. ' bc' → logprob: -16.875011444091797
    8. 'bac' → logprob: -18.250011444091797
    9. 'abc' → logprob: -18.250011444091797
    10. 'ic' → logprob: -18.500011444091797

Token 630: ')/' (ID: 11876)
  Prédit: ')//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.026276029646396637
    2. ')' → logprob: -3.776276111602783
    3. ')/' → logprob: -6.026276111602783
    4. ')>>' → logprob: -8.026275634765625
    5. '//' → logprob: -9.026275634765625
    6. ' )' → logprob: -9.151275634765625
    7. '+' → logprob: -11.026275634765625
    8. ')
' → logprob: -11.151275634765625
    9. '   ' → logprob: -11.901275634765625
    10. ')+' → logprob: -12.026275634765625

Token 631: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '1' → logprob: -17.250003814697266
    4. '   ' → logprob: -17.500003814697266
    5. '
' → logprob: -17.500003814697266
    6. '```' → logprob: -18.000003814697266
    7. '  ' → logprob: -19.250003814697266
    8. ')' → logprob: -19.375003814697266
    9. '/' → logprob: -20.000003814697266
    10. ' ' → logprob: -20.375003814697266

Token 632: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010363291017711163
    2. ')' → logprob: -4.8853631019592285
    3. ' ,' → logprob: -6.1353631019592285
    4. ',(' → logprob: -8.385363578796387
    5. ',
' → logprob: -8.510363578796387
    6. '       ' → logprob: -10.510363578796387
    7. '),' → logprob: -10.510363578796387
    8. ' )' → logprob: -10.760363578796387
    9. '   ' → logprob: -10.760363578796387
    10. ')
' → logprob: -11.010363578796387

Token 633: ' (' (ID: 350)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.1578660011291504
    2. ' (' → logprob: -2.6578660011291504
    3. '(' → logprob: -3.1578660011291504
    4. '(db' → logprob: -3.4078660011291504
    5. '(dc' → logprob: -9.157865524291992
    6. '   ' → logprob: -9.532865524291992
    7. '#' → logprob: -9.907865524291992
    8. '       ' → logprob: -10.282865524291992
    9. '(DB' → logprob: -10.657865524291992
    10. ' ' → logprob: -11.907865524291992

Token 634: 'dbc' (ID: 21003)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0025100242346525192
    2. '(db' → logprob: -6.002510070800781
    3. '(' → logprob: -10.502510070800781
    4. '(b' → logprob: -12.877510070800781
    5. '(DB' → logprob: -13.377510070800781
    6. ' (' → logprob: -13.752510070800781
    7. 'dbc' → logprob: -14.252510070800781
    8. '   ' → logprob: -16.00251007080078
    9. '(dc' → logprob: -16.12751007080078
    10. ' dbc' → logprob: -16.12751007080078

Token 635: '+d' (ID: 127807)
  Prédit: '+d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+d' → logprob: -0.10044506937265396
    2. '+' → logprob: -2.350445032119751
    3. ' +' → logprob: -8.350444793701172
    4. '+
' → logprob: -14.475444793701172
    5. '+(' → logprob: -14.475444793701172
    6. '+b' → logprob: -15.350444793701172
    7. '```' → logprob: -15.350444793701172
    8. '＋' → logprob: -16.100444793701172
    9. 'd' → logprob: -16.725444793701172
    10. 'dac' → logprob: -16.975444793701172

Token 636: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.0035691845696419477
    2. 'bac' → logprob: -6.00356912612915
    3. 'ab' → logprob: -7.62856912612915
    4. 'bc' → logprob: -8.128569602966309
    5. 'abc' → logprob: -9.003569602966309
    6. 'b' → logprob: -9.378569602966309
    7. 'c' → logprob: -10.253569602966309
    8. 'dac' → logprob: -10.878569602966309
    9. '```' → logprob: -11.128569602966309
    10. 'cab' → logprob: -11.378569602966309

Token 637: '-d' (ID: 2469)
  Prédit: '-d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-d' → logprob: -0.009256248362362385
    2. '-db' → logprob: -5.634256362915039
    3. '-' → logprob: -5.759256362915039
    4. ' -' → logprob: -6.009256362915039
    5. '-д' → logprob: -11.759256362915039
    6. '-b' → logprob: -12.509256362915039
    7. '```' → logprob: -12.634256362915039
    8. '-D' → logprob: -13.384256362915039
    9. '   ' → logprob: -13.509256362915039
    10. 'dbc' → logprob: -13.509256362915039

Token 638: 'ab' (ID: 378)
  Prédit: 'ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.03393128886818886
    2. 'b' → logprob: -3.408931255340576
    3. 'bc' → logprob: -9.033931732177734
    4. 'abc' → logprob: -9.283931732177734
    5. '-b' → logprob: -10.033931732177734
    6. '```' → logprob: -12.158931732177734
    7. 'bac' → logprob: -12.158931732177734
    8. '
' → logprob: -13.033931732177734
    9. 'аб' → logprob: -13.533931732177734
    10. '	b' → logprob: -13.533931732177734

Token 639: ')/' (ID: 11876)
  Prédit: ')//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.014835203066468239
    2. ')' → logprob: -4.764835357666016
    3. ')/' → logprob: -5.139835357666016
    4. ' )' → logprob: -9.014835357666016
    5. '//' → logprob: -9.264835357666016
    6. ')>>' → logprob: -9.389835357666016
    7. '   ' → logprob: -10.889835357666016
    8. ' ' → logprob: -12.264835357666016
    9. ')
' → logprob: -12.389835357666016
    10. '+' → logprob: -12.514835357666016

Token 640: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -13.62500286102295
    3. '1' → logprob: -13.87500286102295
    4. ')' → logprob: -15.12500286102295
    5. '```' → logprob: -15.12500286102295
    6. '   ' → logprob: -15.25000286102295
    7. '  ' → logprob: -17.750003814697266
    8. '}' → logprob: -17.750003814697266
    9. '4' → logprob: -17.812503814697266
    10. '
' → logprob: -18.062503814697266

Token 641: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0242304690182209
    2. '       ' → logprob: -4.149230480194092
    3. ')
' → logprob: -4.899230480194092
    4. '   ' → logprob: -7.649230480194092
    5. ')
' → logprob: -10.024230003356934
    6. '))' → logprob: -10.149230003356934
    7. ' )' → logprob: -10.524230003356934
    8. '}' → logprob: -10.524230003356934
    9. ')}' → logprob: -10.899230003356934
    10. ',' → logprob: -11.524230003356934

Token 642: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001892222324386239
    2. '        
' → logprob: -7.12689208984375
    3. '   ' → logprob: -8.12689208984375
    4. 'print' → logprob: -8.75189208984375
    5. '
' → logprob: -9.00189208984375
    6. 'result' → logprob: -9.50189208984375
    7. ',' → logprob: -9.62689208984375
    8. 'answer' → logprob: -9.75189208984375
    9. ')' → logprob: -10.12689208984375
    10. '    
' → logprob: -10.25189208984375

Token 643: ' x' (ID: 1215)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01500161923468113
    2. '   ' → logprob: -5.3900017738342285
    3. 'x' (adapté à ' x') → logprob: -5.8900017738342285
    4. 'res' → logprob: -6.6400017738342285
    5. 'ans' → logprob: -7.1400017738342285
    6. 'max' → logprob: -7.1400017738342285
    7. 'vals' → logprob: -7.1400017738342285
    8. 's' → logprob: -7.8900017738342285
    9. '        
' → logprob: -7.8900017738342285
    10. 't' → logprob: -8.01500129699707

Token 644: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2470107227563858
    2. '=' → logprob: -1.7470107078552246
    3. '1' → logprob: -3.4970107078552246
    4. '_' → logprob: -4.747010707855225
    5. 'a' → logprob: -6.122010707855225
    6. ',' → logprob: -6.372010707855225
    7. '0' → logprob: -6.872010707855225
    8. '_a' → logprob: -8.122011184692383
    9. 's' → logprob: -9.622011184692383
    10. 'x' → logprob: -9.622011184692383

Token 645: ' (' (ID: 350)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5694862008094788
    2. '(d' → logprob: -1.319486141204834
    3. '(max' → logprob: -1.819486141204834
    4. ' max' → logprob: -5.819486141204834
    5. ' (' → logprob: -6.569486141204834
    6. '((' → logprob: -8.194486618041992
    7. '[(' → logprob: -10.069486618041992
    8. '(
' → logprob: -10.694486618041992
    9. '(' → logprob: -11.319486618041992
    10. '(min' → logprob: -11.319486618041992

Token 646: 'dab' (ID: 101040)
  Prédit: 'dab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dab' → logprob: -0.0013614245690405369
    2. '(d' → logprob: -6.62636137008667
    3. ' dab' → logprob: -10.626361846923828
    4. ' ' → logprob: -12.626361846923828
    5. 'd' → logprob: -13.376361846923828
    6. '   ' → logprob: -13.501361846923828
    7. '	d' → logprob: -13.501361846923828
    8. 'dap' → logprob: -13.626361846923828
    9. ' (' → logprob: -14.251361846923828
    10. '  ' → logprob: -15.126361846923828

Token 647: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.009793982841074467
    2. ' +' → logprob: -4.634793758392334
    3. '+d' → logprob: -10.384794235229492
    4. '+b' → logprob: -12.384794235229492
    5. '+c' → logprob: -13.259794235229492
    6. '＋' → logprob: -14.634794235229492
    7. '+x' → logprob: -15.384794235229492
    8. '+D' → logprob: -15.509794235229492
    9. '+
' → logprob: -16.009794235229492
    10. '+r' → logprob: -17.384794235229492

Token 648: 'dbc' (ID: 21003)
  Prédit: 'dbc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dbc' → logprob: -6.718606891809031e-05
    2. ' dbc' → logprob: -9.625066757202148
    3. 'db' → logprob: -14.250066757202148
    4. 'b' → logprob: -15.500066757202148
    5. 'd' → logprob: -15.875066757202148
    6. 'abc' → logprob: -17.87506675720215
    7. 'cbc' → logprob: -18.00006675720215
    8. 'dbo' → logprob: -18.00006675720215
    9. 'bbc' → logprob: -18.50006675720215
    10. 'bc' → logprob: -18.75006675720215

Token 649: '-d' (ID: 2469)
  Prédit: '-d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-d' → logprob: -0.10550432652235031
    2. ' -' → logprob: -2.730504274368286
    3. '-' → logprob: -3.355504274368286
    4. '-D' → logprob: -10.855504035949707
    5. 'dac' → logprob: -10.980504035949707
    6. ' dac' → logprob: -12.480504035949707
    7. '-da' → logprob: -13.105504035949707
    8. '−' → logprob: -13.480504035949707
    9. '-д' → logprob: -13.480504035949707
    10. ' ' → logprob: -13.980504035949707

Token 650: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.0005691178957931697
    2. 'dac' → logprob: -7.5005693435668945
    3. ' dac' → logprob: -12.250569343566895
    4. 'c' → logprob: -12.375569343566895
    5. 'xac' → logprob: -13.250569343566895
    6. '	ac' → logprob: -13.500569343566895
    7. '#ac' → logprob: -13.750569343566895
    8. ' ac' → logprob: -13.875569343566895
    9. '(ac' → logprob: -14.750569343566895
    10. 'a' → logprob: -15.000569343566895

Token 651: ')//' (ID: 60375)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39047014713287354
    2. ')//' → logprob: -1.1404701471328735
    3. ')>>' → logprob: -5.640470027923584
    4. ' )' → logprob: -10.515470504760742
    5. ')
' → logprob: -11.640470504760742
    6. ')#' → logprob: -13.390470504760742
    7. '+' → logprob: -13.515470504760742
    8. '   ' → logprob: -13.640470504760742
    9. ')<<' → logprob: -14.390470504760742
    10. '//' → logprob: -15.265470504760742

Token 652: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '```' → logprob: -20.0
    4. '   ' → logprob: -20.125
    5. '1' → logprob: -21.375
    6. '２' → logprob: -21.75
    7. '۲' → logprob: -22.25
    8. '
' → logprob: -22.25
    9. '	' → logprob: -23.5
    10. ' ' → logprob: -23.5

Token 653: '
' (ID: 198)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.06885384768247604
    2. ' y' → logprob: -3.3188538551330566
    3. '       ' → logprob: -3.5688538551330566
    4. '
' → logprob: -7.443853855133057
    5. 'x' → logprob: -7.818853855133057
    6. '   ' → logprob: -7.943853855133057
    7. ',' → logprob: -8.318853378295898
    8. '<|end|>' → logprob: -8.568853378295898
    9. ',y' → logprob: -8.568853378295898
    10. '	y' → logprob: -9.943853378295898

Token 654: '       ' (ID: 309)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.10133469849824905
    2. ' y' → logprob: -2.351334810256958
    3. '       ' → logprob: -6.976334571838379
    4. '   ' → logprob: -9.351334571838379
    5. 'x' → logprob: -9.851334571838379
    6. '	y' → logprob: -10.476334571838379
    7. ',y' → logprob: -11.601334571838379
    8. '<|end|>' → logprob: -12.101334571838379
    9. '    ' → logprob: -13.101334571838379
    10. ',' → logprob: -13.476334571838379

Token 655: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -1.8670179997570813e-05
    2. ' y' → logprob: -11.250019073486328
    3. '       ' → logprob: -12.500019073486328
    4. '   ' → logprob: -13.375019073486328
    5. 'x' → logprob: -16.250019073486328
    6. '```' → logprob: -16.750019073486328
    7. 'max' → logprob: -16.875019073486328
    8. '
' → logprob: -17.000019073486328
    9. '	y' → logprob: -17.125019073486328
    10. '           ' → logprob: -17.500019073486328

Token 656: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692999839782715
    2. ' =' → logprob: -2.126929998397827
    3. '=(' → logprob: -13.626930236816406
    4. ' =(' → logprob: -14.876930236816406
    5. ',' → logprob: -15.626930236816406
    6. 'x' → logprob: -15.751930236816406
    7. ')' → logprob: -16.876930236816406
    8. ' ' → logprob: -17.501930236816406
    9. '(' → logprob: -17.751930236816406
    10. '   ' → logprob: -18.251930236816406

Token 657: ' (' (ID: 350)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.004637791775166988
    2. ' (' → logprob: -5.379637718200684
    3. ' ' → logprob: -11.504637718200684
    4. '   ' → logprob: -12.129637718200684
    5. '(b' → logprob: -14.004637718200684
    6. '(' → logprob: -14.129637718200684
    7. '  ' → logprob: -15.879637718200684
    8. '((' → logprob: -15.879637718200684
    9. '(s' → logprob: -16.754638671875
    10. '    ' → logprob: -17.379638671875

Token 658: 'dab' (ID: 101040)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -5.478889215737581e-05
    2. ' (' → logprob: -9.875054359436035
    3. 'dab' → logprob: -13.000054359436035
    4. ' ' → logprob: -14.500054359436035
    5. '   ' → logprob: -15.375054359436035
    6. 'd' → logprob: -16.37505531311035
    7. '(' → logprob: -16.50005531311035
    8. '     ' → logprob: -17.12505531311035
    9. '  ' → logprob: -17.37505531311035
    10. '(db' → logprob: -17.62505531311035

Token 659: '+d' (ID: 127807)
  Prédit: '+d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+d' → logprob: -0.4746112823486328
    2. '+' → logprob: -0.9746112823486328
    3. ' +' → logprob: -7.599611282348633
    4. '+x' → logprob: -10.974611282348633
    5. '+(' → logprob: -12.099611282348633
    6. '+
' → logprob: -12.224611282348633
    7. '+y' → logprob: -12.599611282348633
    8. '+c' → logprob: -14.099611282348633
    9. '+b' → logprob: -14.224611282348633
    10. '+a' → logprob: -15.099611282348633

Token 660: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.4090349078178406
    2. 'ab' → logprob: -1.1590349674224854
    3. 'abc' → logprob: -4.159034729003906
    4. 'bc' → logprob: -5.284034729003906
    5. 'bac' → logprob: -7.159034729003906
    6. 'b' → logprob: -7.909034729003906
    7. 'cab' → logprob: -10.409034729003906
    8. 'c' → logprob: -10.909034729003906
    9. 'dac' → logprob: -12.034034729003906
    10. 'acf' → logprob: -12.409034729003906

Token 661: '-d' (ID: 2469)
  Prédit: '-db'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-db' → logprob: -0.3076634407043457
    2. '-d' → logprob: -2.0576634407043457
    3. ' -' → logprob: -2.3076634407043457
    4. '-' → logprob: -3.4326634407043457
    5. '-dec' → logprob: -5.682663440704346
    6. '-b' → logprob: -7.307663440704346
    7. '-д' → logprob: -8.807662963867188
    8. '-dist' → logprob: -8.807662963867188
    9. 'dbc' → logprob: -9.182662963867188
    10. '```' → logprob: -9.307662963867188

Token 662: 'bc' (ID: 16715)
  Prédit: 'bc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bc' → logprob: -0.000332485738908872
    2. 'b' → logprob: -8.625332832336426
    3. 'dbc' → logprob: -9.000332832336426
    4. 'xbc' → logprob: -11.250332832336426
    5. 'bbc' → logprob: -12.000332832336426
    6. '   ' → logprob: -13.125332832336426
    7. 'abc' → logprob: -13.250332832336426
    8. '//' → logprob: -13.625332832336426
    9. 'cbc' → logprob: -13.625332832336426
    10. 'c' → logprob: -14.250332832336426

Token 663: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -8.995397365652025e-05
    2. ')' → logprob: -9.375089645385742
    3. '//' → logprob: -12.375089645385742
    4. ')>>' → logprob: -14.375089645385742
    5. ')#' → logprob: -16.250089645385742
    6. '}//' → logprob: -16.500089645385742
    7. ' )' → logprob: -16.750089645385742
    8. '   ' → logprob: -17.125089645385742
    9. ')
' → logprob: -18.250089645385742
    10. '){//' → logprob: -18.625089645385742

Token 664: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -16.750001907348633
    4. '1' → logprob: -17.125001907348633
    5. '```' → logprob: -18.125001907348633
    6. '
' → logprob: -18.562501907348633
    7. '=' → logprob: -18.750001907348633
    8. '  ' → logprob: -18.937501907348633
    9. ',' → logprob: -19.187501907348633
    10. 'x' → logprob: -19.250001907348633

Token 665: '
' (ID: 198)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.000850009499117732
    2. '       ' → logprob: -7.500850200653076
    3. ' z' → logprob: -8.125849723815918
    4. '
' → logprob: -14.875849723815918
    5. '   ' → logprob: -14.875849723815918
    6. ',' → logprob: -15.500849723815918
    7. '	z' → logprob: -16.500850677490234
    8. '```' → logprob: -16.875850677490234
    9. '        ' → logprob: -17.000850677490234
    10. '      ' → logprob: -17.625850677490234

Token 666: '       ' (ID: 309)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.011251175776124
    2. '       ' → logprob: -4.511250972747803
    3. ' z' → logprob: -8.511251449584961
    4. '	z' → logprob: -14.136251449584961
    5. '   ' → logprob: -14.511251449584961
    6. '
' → logprob: -15.136251449584961
    7. '```' → logprob: -15.136251449584961
    8. '      ' → logprob: -16.38625144958496
    9. '	' → logprob: -17.26125144958496
    10. '        ' → logprob: -17.38625144958496

Token 667: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' (adapté à ' z') → logprob: -8.876193169271573e-05
    2. ' z' → logprob: -9.375088691711426
    3. '       ' → logprob: -12.750088691711426
    4. '   ' → logprob: -14.000088691711426
    5. '    ' → logprob: -17.375089645385742
    6. '
' → logprob: -17.500089645385742
    7. '	z' → logprob: -17.625089645385742
    8. '```' → logprob: -18.500089645385742
    9. '  ' → logprob: -18.625089645385742
    10. '     ' → logprob: -18.875089645385742

Token 668: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014167038723826408
    2. ' =' → logprob: -4.264166831970215
    3. '=(' → logprob: -12.639166831970215
    4. ' =(' → logprob: -15.639166831970215
    5. '(' → logprob: -17.26416778564453
    6. ',' → logprob: -17.38916778564453
    7. ' (' → logprob: -18.01416778564453
    8. ')' → logprob: -18.38916778564453
    9. '(x' → logprob: -18.38916778564453
    10. 'x' → logprob: -18.76416778564453

Token 669: ' (' (ID: 350)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0074872421100735664
    2. '(' → logprob: -5.2574872970581055
    3. ' (' → logprob: -6.3824872970581055
    4. '(db' → logprob: -7.5074872970581055
    5. '   ' → logprob: -12.132487297058105
    6. ' ' → logprob: -13.757487297058105
    7. '(DB' → logprob: -14.257487297058105
    8. '(div' → logprob: -14.382487297058105
    9. '(b' → logprob: -14.382487297058105
    10. '((' → logprob: -14.382487297058105

Token 670: 'dbc' (ID: 21003)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0021434780210256577
    2. '(db' → logprob: -6.377143383026123
    3. 'dbc' → logprob: -7.752143383026123
    4. ' (' → logprob: -11.877143859863281
    5. ' dbc' → logprob: -12.877143859863281
    6. 'db' → logprob: -13.502143859863281
    7. 'DBC' → logprob: -15.627143859863281
    8. '(DB' → logprob: -16.25214385986328
    9. '\db' → logprob: -17.12714385986328
    10. '{' → logprob: -17.25214385986328

Token 671: '+d' (ID: 127807)
  Prédit: '+d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+d' → logprob: -0.20190998911857605
    2. '+' → logprob: -1.7019100189208984
    3. ' +' → logprob: -7.701910018920898
    4. '+x' → logprob: -10.576910018920898
    5. '+
' → logprob: -11.576910018920898
    6. '+y' → logprob: -12.451910018920898
    7. '+(' → logprob: -12.826910018920898
    8. '+a' → logprob: -14.326910018920898
    9. 'dab' → logprob: -14.576910018920898
    10. '+b' → logprob: -14.576910018920898

Token 672: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.0014117816463112831
    2. '+' → logprob: -6.7514119148254395
    3. 'abc' → logprob: -9.376411437988281
    4. 'ab' → logprob: -9.501411437988281
    5. 'xac' → logprob: -10.501411437988281
    6. 'acf' → logprob: -11.126411437988281
    7. 'dac' → logprob: -11.376411437988281
    8. 'acz' → logprob: -12.251411437988281
    9. '#ac' → logprob: -12.626411437988281
    10. 'acd' → logprob: -12.626411437988281

Token 673: '-d' (ID: 2469)
  Prédit: '-d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-d' → logprob: -0.0011853496544063091
    2. ' -' → logprob: -7.376185417175293
    3. '-' → logprob: -7.626185417175293
    4. '-ab' → logprob: -10.126185417175293
    5. '-db' → logprob: -11.001185417175293
    6. '-д' → logprob: -12.126185417175293
    7. '-D' → logprob: -12.501185417175293
    8. '-def' → logprob: -13.001185417175293
    9. '```' → logprob: -13.751185417175293
    10. '-b' → logprob: -14.751185417175293

Token 674: 'ab' (ID: 378)
  Prédit: 'ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.00019984507525805384
    2. '```' → logprob: -9.500200271606445
    3. 'z' → logprob: -10.375200271606445
    4. 'abc' → logprob: -10.500200271606445
    5. '//' → logprob: -10.625200271606445
    6. 'аб' → logprob: -11.625200271606445
    7. '#ab' → logprob: -11.625200271606445
    8. '-ab' → logprob: -12.125200271606445
    9. 'xab' → logprob: -12.625200271606445
    10. '-' → logprob: -12.750200271606445

Token 675: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -8.685467764735222e-05
    2. ')' → logprob: -9.375086784362793
    3. '//' → logprob: -13.875086784362793
    4. ' )' → logprob: -14.875086784362793
    5. ')>>' → logprob: -15.000086784362793
    6. ')#' → logprob: -15.250086784362793
    7. ')
' → logprob: -17.87508773803711
    8. '){//' → logprob: -17.87508773803711
    9. ')`' → logprob: -18.62508773803711
    10. '}//' → logprob: -18.62508773803711

Token 676: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '```' → logprob: -17.375
    3. ' ' → logprob: -17.75
    4. '   ' → logprob: -18.125
    5. '
' → logprob: -18.5
    6. ')' → logprob: -19.5
    7. '3' → logprob: -19.75
    8. '２' → logprob: -19.8125
    9. '
' → logprob: -20.3125
    10. '۲' → logprob: -20.375

Token 677: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5777897238731384
    2. 'print' → logprob: -0.8277897238731384
    3. '
' → logprob: -7.452789783477783
    4. '   ' → logprob: -7.952789783477783
    5. 'answer' → logprob: -8.202789306640625
    6. 'result' → logprob: -8.452789306640625
    7. '```' → logprob: -8.452789306640625
    8. ' print' → logprob: -9.577789306640625
    9. '        
' → logprob: -9.952789306640625
    10. 'res' → logprob: -10.577789306640625

Token 678: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2575393617153168
    2. 'print' → logprob: -1.5075393915176392
    3. '   ' → logprob: -5.25753927230835
    4. '```' → logprob: -8.382539749145508
    5. ' print' → logprob: -9.507539749145508
    6. '
' → logprob: -9.757539749145508
    7. 'result' → logprob: -11.882539749145508
    8. '        
' → logprob: -12.382539749145508
    9. '    
' → logprob: -12.632539749145508
    10. 'answer' → logprob: -12.757539749145508

Token 679: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.018844017758965492
    2. '       ' → logprob: -4.143844127655029
    3. '   ' → logprob: -5.893844127655029
    4. 'answer' → logprob: -10.893843650817871
    5. ' print' → logprob: -11.143843650817871
    6. '
' → logprob: -12.518843650817871
    7. 'res' → logprob: -12.518843650817871
    8. 'result' → logprob: -12.643843650817871
    9. '```' → logprob: -12.768843650817871
    10. '	print' → logprob: -13.768843650817871

Token 680: '(max' (ID: 17178)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.008309713564813137
    2. 'min' → logprob: -5.508309841156006
    3. '(max' → logprob: -5.508309841156006
    4. ' max' → logprob: -9.008309364318848
    5. '(min' → logprob: -10.008309364318848
    6. 'x' → logprob: -13.883309364318848
    7. ' min' → logprob: -14.258309364318848
    8. '(x' → logprob: -16.133310317993164
    9. '(' → logprob: -16.633310317993164
    10. '=max' → logprob: -16.633310317993164

Token 681: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.8624639324116288e-06
    2. 'x' → logprob: -13.750001907348633
    3. '(' → logprob: -14.125001907348633
    4. '((' → logprob: -17.875001907348633
    5. '([' → logprob: -17.875001907348633
    6. ')' → logprob: -19.250001907348633
    7. '({' → logprob: -20.625001907348633
    8. '(
' → logprob: -20.875001907348633
    9. '{x' → logprob: -21.000001907348633
    10. '```' → logprob: -21.000001907348633

Token 682: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6937776207923889
    2. ',y' → logprob: -0.6937776207923889
    3. 'y' → logprob: -8.068778038024902
    4. '(y' → logprob: -8.943778038024902
    5. ',x' → logprob: -9.068778038024902
    6. ' ,' → logprob: -9.818778038024902
    7. ',max' → logprob: -12.068778038024902
    8. '(' → logprob: -12.318778038024902
    9. '(x' → logprob: -13.068778038024902
    10. 'x' → logprob: -13.318778038024902

Token 683: ',z' (ID: 54920)
  Prédit: ',z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',z' → logprob: -0.0005200279993005097
    2. ',' → logprob: -7.6255202293396
    3. ' ,' → logprob: -11.125519752502441
    4. 'z' → logprob: -11.250519752502441
    5. ',x' → logprob: -13.125519752502441
    6. ',y' → logprob: -13.750519752502441
    7. ',
' → logprob: -15.000519752502441
    8. ',Z' → logprob: -15.750519752502441
    9. ')' → logprob: -15.875519752502441
    10. ',max' → logprob: -16.375520706176758

Token 684: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01106221228837967
    2. '))' → logprob: -4.511062145233154
    3. ')}' → logprob: -11.636062622070312
    4. ')))' → logprob: -12.886062622070312
    5. ')
' → logprob: -13.636062622070312
    6. ' )' → logprob: -14.261062622070312
    7. '})' → logprob: -14.761062622070312
    8. '   ' → logprob: -15.511062622070312
    9. ')`' → logprob: -15.636062622070312
    10. '())' → logprob: -16.011062622070312

Token 685: 'thread' (ID: 9817)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 686: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -9.088346359931165e-07
    2. '.' → logprob: -15.625000953674316
    3. 'ading' → logprob: -15.875000953674316
    4. '.ing' → logprob: -16.0
    5. '```' → logprob: -16.0
    6. '-ing' → logprob: -16.5
    7. '=' → logprob: -16.625
    8. ' ing' → logprob: -17.125
    9. '.start' → logprob: -17.25
    10. '_ing' → logprob: -17.375

Token 687: '.Thread' (ID: 15531)
  Prédit: '.Thread'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Thread' → logprob: -0.0003697781648952514
    2. '.' → logprob: -8.125370025634766
    3. '.start' → logprob: -9.625370025634766
    4. '.stack' → logprob: -12.875370025634766
    5. '.Stack' → logprob: -13.500370025634766
    6. '.thread' → logprob: -13.625370025634766
    7. '.Threading' → logprob: -13.750370025634766
    8. '.Start' → logprob: -14.250370025634766
    9. '(Thread' → logprob: -14.875370025634766
    10. ' .' → logprob: -15.500370025634766

Token 688: '(target' (ID: 16247)
  Prédit: '(target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(target' → logprob: -4.3226136767771095e-05
    2. 'target' → logprob: -10.500042915344238
    3. '(' → logprob: -11.125042915344238
    4. ' target' → logprob: -15.000042915344238
    5. '```' → logprob: -15.625042915344238
    6. ',target' → logprob: -15.750042915344238
    7. '()' → logprob: -16.250043869018555
    8. '().' → logprob: -16.750043869018555
    9. '-target' → logprob: -17.000043869018555
    10. '[target' → logprob: -17.125043869018555

Token 689: '=' (ID: 28)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.41211071610450745
    2. '(main' → logprob: -1.662110686302185
    3. '=' → logprob: -1.912110686302185
    4. ' main' → logprob: -8.412110328674316
    5. ')' → logprob: -11.912110328674316
    6. '	main' → logprob: -12.162110328674316
    7. '.main' → logprob: -12.287110328674316
    8. '_main' → logprob: -13.787110328674316
    9. 'Main' → logprob: -13.912110328674316
    10. ').' → logprob: -14.662110328674316

Token 690: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -3.128163257315464e-07
    2. ' main' → logprob: -15.25
    3. '(main' → logprob: -21.625
    4. '	main' → logprob: -22.625
    5. 'Main' → logprob: -25.5
    6. '.main' → logprob: -26.125
    7. '_main' → logprob: -28.0
    8. 'mainwindow' → logprob: -28.0
    9. '   ' → logprob: -28.125
    10. ' ' → logprob: -28.625

Token 691: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -3.4881879400927573e-05
    2. ')' → logprob: -10.375035285949707
    3. ' ).' → logprob: -13.625035285949707
    4. ',' → logprob: -13.625035285949707
    5. '()).' → logprob: -13.875035285949707
    6. ' ' → logprob: -16.37503433227539
    7. ',start' → logprob: -16.37503433227539
    8. '()' → logprob: -17.25003433227539
    9. '   ' → logprob: -18.75003433227539
    10. '  ' → logprob: -19.00003433227539

Token 692: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -4.4849443838757e-06
    2. 'run' → logprob: -12.375004768371582
    3. '```' → logprob: -15.875004768371582
    4. ' start' → logprob: -16.500003814697266
    5. '.start' → logprob: -18.000003814697266
    6. '(start' → logprob: -18.375003814697266
    7. ':start' → logprob: -18.750003814697266
    8. 'star' → logprob: -18.875003814697266
    9. '	start' → logprob: -19.250003814697266
    10. ')' → logprob: -19.625003814697266

Token 693: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 691
Tokens correctement prédits (1ère position, stricte): 286
Tokens correctement prédits (1ère position, avec adaptation): 320
Tokens correctement prédits (top 10): 575
Précision stricte (1ère position): 41.39%
Précision adaptée (1ère position): 46.31%
Précision (top 10): 83.21%
================================================================================
