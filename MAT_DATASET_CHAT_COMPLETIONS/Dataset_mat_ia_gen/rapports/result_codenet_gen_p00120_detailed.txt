================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:10:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math
import sys
from itertools import permutations

def calc_width(order):
    """
    Calcule la largeur totale nécessaire pour placer les rouler cakes
    dans un certain ordre donné, en les plaçant côte à côte au sol sans 
    qu'ils ne se superposent verticalement.

    La distance horizontale minimale entre deux cercles de rayons r_i et r_j,
    posés au sol, est calculée par :
      d = sqrt((r_i + r_j)^2 - (r_i - r_j)^2) = 2 * sqrt(r_i * r_j)

    Args:
        order (list of int): Ordre des rayons des gâteaux.

    Returns:
        float: Largeur totale occupée dans cet ordre.
    """
    if not order:
        return 0

    # Position x du centre du premier gâteau
    positions = [order[0]]
    for i in range(1, len(order)):
        # distance horizontale minimale entre gâteau i-1 et i
        dist = 2 * math.sqrt(order[i-1] * order[i])
        positions.append(positions[-1] + dist)
    # La largeur totale est la position du dernier centre plus son rayon
    return positions[-1] + order[-1]

def main():
    # Lecture des données depuis l'entrée standard (plusieurs datasets)
    for line in sys.stdin:
        if not line.strip():
            continue
        data = list(map(int, line.strip().split()))
        # W = longueur de la boîte
        W = data[0]
        # rayons des gâteaux
        radii = data[1:]
        n = len(radii)

        # Si on place les gâteaux dans l'ordre donné, calcule largeur
        # On doit vérifier toutes les permutations car l'ordre peut réduire la longueur nécessaire
        can_fit = False
        # Étant donné n ≤ 12, nous ne testons que permutations uniques (il n'y a pas de changement d'ordre signifiant si radii sont égaux)
        # Mais on teste tous les ordres pour être sûr.
        # Pour optimisation, on peut tester permutations sans répétition si souhaité.
        # Vu contraintes (max 12), on peut faire ça sans soucis dans un temps raisonnable.
        for perm in permutations(radii):
            width = calc_width(perm)
            if width <= W + 1e-9:  # marge numérique
                can_fit = True
                break

        # Affichage résultat
        print("OK" if can_fit else "NA")

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.008858839981257915
    2. '\n' → logprob: -5.883858680725098
    3. '<|end|>' → logprob: -6.008858680725098
    4. '```' → logprob: -6.883858680725098
    5. '\' → logprob: -6.883858680725098
    6. 'import' → logprob: -7.133858680725098
    7. '<|end|>' → logprob: -9.133858680725098
    8. 'def' → logprob: -9.633858680725098
    9. '.pi' → logprob: -9.883858680725098
    10. 'newline' → logprob: -9.883858680725098

Token 4: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.5976262092590332
    2. ' sys' → logprob: -1.2226262092590332
    3. ' ' → logprob: -2.597626209259033
    4. ' numpy' → logprob: -2.847626209259033
    5. ' re' → logprob: -5.097626209259033
    6. ' random' → logprob: -5.222626209259033
    7. ' ' → logprob: -5.847626209259033
    8. '_' → logprob: -6.222626209259033
    9. ' statistics' → logprob: -6.347626209259033
    10. ' math' → logprob: -7.097626209259033

Token 5: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 6: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5080861449241638
    2. '
' → logprob: -1.6330862045288086
    3. 'import' → logprob: -2.6330862045288086
    4. '<|end|>' → logprob: -2.7580862045288086
    5. '```' → logprob: -3.5080862045288086
    6. '.' → logprob: -4.508086204528809
    7. '\' → logprob: -4.508086204528809
    8. '

' → logprob: -4.758086204528809
    9. '<|end|>' → logprob: -6.133086204528809
    10. '#' → logprob: -7.133086204528809

Token 7: ' itertools' (ID: 103178)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.5497189164161682
    2. ' collections' → logprob: -1.0497188568115234
    3. ' math' → logprob: -4.174718856811523
    4. 'os' → logprob: -4.174718856811523
    5. 'collections' → logprob: -4.174718856811523
    6. ' typing' → logprob: -4.299718856811523
    7. ' pathlib' → logprob: -4.924718856811523
    8. ' datetime' → logprob: -6.174718856811523
    9. ' itertools' → logprob: -6.924718856811523
    10. ' io' → logprob: -7.674718856811523

Token 8: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.21077187359333038
    2. 'import' → logprob: -1.710771918296814
    3. '.' → logprob: -4.7107720375061035
    4. ' .' → logprob: -8.960771560668945
    5. '.import' → logprob: -9.460771560668945
    6. '	import' → logprob: -10.085771560668945
    7. ' ' → logprob: -11.085771560668945
    8. '.im' → logprob: -11.460771560668945
    9. ' itertools' → logprob: -11.960771560668945
    10. '.groupby' → logprob: -12.210771560668945

Token 9: ' permutations' (ID: 174595)
  Prédit: ' cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cycle' → logprob: -1.249305009841919
    2. ' permutations' → logprob: -1.499305009841919
    3. 'count' → logprob: -2.624305009841919
    4. 'com' → logprob: -2.624305009841919
    5. 'cycle' → logprob: -2.749305009841919
    6. ' group' → logprob: -2.749305009841919
    7. ' combinations' → logprob: -3.249305009841919
    8. ' chain' → logprob: -3.374305009841919
    9. 'per' → logprob: -3.749305009841919
    10. ' product' → logprob: -3.749305009841919

Token 10: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.33490023016929626
    2. '(' → logprob: -2.084900140762329
    3. '<|end|>' → logprob: -2.709900140762329
    4. '
' → logprob: -3.959900140762329
    5. 'newline' → logprob: -4.459900379180908
    6. 'import' → logprob: -4.584900379180908
    7. '<|end|>' → logprob: -4.959900379180908
    8. '[' → logprob: -5.084900379180908
    9. '\' → logprob: -5.084900379180908
    10. '

' → logprob: -5.084900379180908

Token 11: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.366101861000061
    2. 'import' → logprob: -1.491101861000061
    3. '\n' → logprob: -1.741101861000061
    4. '```' → logprob: -1.991101861000061
    5. 'def' → logprob: -2.4911017417907715
    6. '\' → logprob: -3.1161017417907715
    7. '(' → logprob: -3.8661017417907715
    8. 'a' → logprob: -4.4911017417907715
    9. 'for' → logprob: -4.7411017417907715
    10. ',' → logprob: -5.2411017417907715

Token 12: ' calc' (ID: 25691)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.29878589510917664
    2. ' calculate' → logprob: -2.173785924911499
    3. ' is' → logprob: -3.048785924911499
    4. ' factor' → logprob: -3.798785924911499
    5. ' generate' → logprob: -4.04878568649292
    6. ' count' → logprob: -4.04878568649292
    7. ' find' → logprob: -5.29878568649292
    8. ' solve' → logprob: -5.29878568649292
    9. ' permutations' → logprob: -5.29878568649292
    10. ' main' → logprob: -5.67378568649292

Token 13: '_width' (ID: 17595)
  Prédit: 'ulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ulate' → logprob: -0.5576374530792236
    2. '_factor' → logprob: -1.5576374530792236
    3. 'ulator' → logprob: -2.4326374530792236
    4. '_area' → logprob: -3.5576374530792236
    5. 'ulation' → logprob: -3.8076374530792236
    6. '_' → logprob: -3.9326374530792236
    7. '_distance' → logprob: -4.0576372146606445
    8. '_sum' → logprob: -5.3076372146606445
    9. '_radius' → logprob: -5.5576372146606445
    10. 'ulating' → logprob: -5.6826372146606445

Token 14: '(order' (ID: 33050)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0028199704829603434
    2. '_' → logprob: -6.877820014953613
    3. '():' → logprob: -7.127820014953613
    4. ' (' → logprob: -8.252820014953613
    5. 's' → logprob: -9.002820014953613
    6. '(x' → logprob: -9.752820014953613
    7. '(parent' → logprob: -10.127820014953613
    8. '(a' → logprob: -10.127820014953613
    9. ':' → logprob: -10.252820014953613
    10. '_parent' → logprob: -10.377820014953613

Token 15: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010992640629410744
    2. ')' → logprob: -4.760992527008057
    3. ',' → logprob: -6.760992527008057
    4. '[' → logprob: -7.135992527008057
    5. '(' → logprob: -8.260993003845215
    6. 's' → logprob: -10.510993003845215
    7. '):
' → logprob: -10.510993003845215
    8. '_of' → logprob: -10.635993003845215
    9. '[]):' → logprob: -11.135993003845215
    10. ':' → logprob: -11.260993003845215

Token 16: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8321018218994141
    2. ':' → logprob: -1.207101821899414
    3. '   ' → logprob: -1.457101821899414
    4. '):' → logprob: -4.957101821899414
    5. '():' → logprob: -5.207101821899414
    6. '(width' → logprob: -5.832101821899414
    7. '```' → logprob: -5.832101821899414
    8. 'width' → logprob: -6.457101821899414
    9. ':return' → logprob: -6.957101821899414
    10. '    
' → logprob: -6.957101821899414

Token 17: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3806140124797821
    2. '    ' → logprob: -2.1306140422821045
    3. 'width' → logprob: -2.8806140422821045
    4. ' return' → logprob: -3.2556140422821045
    5. 'return' → logprob: -3.8806140422821045
    6. ' ' → logprob: -4.380613803863525
    7. ' width' → logprob: -4.380613803863525
    8. '    
' → logprob: -4.630613803863525
    9. ':' → logprob: -5.005613803863525
    10. '(' → logprob: -5.630613803863525

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44871824979782104
    2. ')' → logprob: -1.6987183094024658
    3. '"""' → logprob: -2.698718309402466
    4. ' """' → logprob: -3.198718309402466
    5. ' ' → logprob: -3.948718309402466
    6. ' )' → logprob: -4.948718070983887
    7. '"' → logprob: -5.573718070983887
    8. '    ' → logprob: -5.573718070983887
    9. ' """
' → logprob: -5.573718070983887
    10. '#' → logprob: -5.823718070983887

Token 19: ' Cal' (ID: 4453)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'width' → logprob: -1.426236867904663
    2. '   ' → logprob: -1.551236867904663
    3. ' width' → logprob: -1.551236867904663
    4. 'max' → logprob: -2.551236867904663
    5. ' max' → logprob: -2.801236867904663
    6. 'return' → logprob: -3.176236867904663
    7. ' return' → logprob: -3.426236867904663
    8. ' widths' → logprob: -3.426236867904663
    9. 'total' → logprob: -3.676236867904663
    10. ' total' → logprob: -3.676236867904663

Token 20: 'cule' (ID: 45017)
  Prédit: 'cul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.14906513690948486
    2. 'culate' → logprob: -2.0240650177001953
    3. 'cu' → logprob: -6.274065017700195
    4. 'c' → logprob: -6.399065017700195
    5. 'cular' → logprob: -7.024065017700195
    6. 'cule' → logprob: -7.149065017700195
    7. 'culated' → logprob: -7.899065017700195
    8. 'cula' → logprob: -8.149065017700195
    9. 'culation' → logprob: -8.649065017700195
    10. 'culator' → logprob: -9.274065017700195

Token 21: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.001276426832191646
    2. 'r' → logprob: -7.75127649307251
    3. 'te' → logprob: -7.75127649307251
    4. 'd' → logprob: -8.626276016235352
    5. 'ates' → logprob: -9.751276016235352
    6. 'm' → logprob: -10.001276016235352
    7. 'ate' → logprob: -10.126276016235352
    8. 'es' → logprob: -11.001276016235352
    9. 'tes' → logprob: -11.001276016235352
    10. 'brate' → logprob: -11.501276016235352

Token 22: ' largeur' (ID: 180807)
  Prédit: ' largeur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' largeur' → logprob: -0.06757242977619171
    2. ' ' → logprob: -2.9425723552703857
    3. ' somme' → logprob: -5.317572593688965
    4. 's' → logprob: -5.567572593688965
    5. ' longueur' → logprob: -7.317572593688965
    6. '_' → logprob: -7.317572593688965
    7. '   ' → logprob: -7.692572593688965
    8. ' hauteur' → logprob: -7.817572593688965
    9. '  ' → logprob: -7.942572593688965
    10. ' width' → logprob: -8.317572593688965

Token 23: ' totale' (ID: 52898)
  Prédit: ' totale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' totale' → logprob: -0.4812436103820801
    2. ' de' → logprob: -2.48124361038208
    3. '(' → logprob: -2.73124361038208
    4. ' d' → logprob: -2.98124361038208
    5. ' complète' → logprob: -3.48124361038208
    6. ' (' → logprob: -3.73124361038208
    7. ' maximale' → logprob: -3.98124361038208
    8. '   ' → logprob: -4.35624361038208
    9. '_' → logprob: -4.35624361038208
    10. ' total' → logprob: -4.60624361038208

Token 24: ' nécessaire' (ID: 43098)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5457064509391785
    2. ' de' → logprob: -1.4207065105438232
    3. ' du' → logprob: -3.0457065105438232
    4. ' d' → logprob: -3.5457065105438232
    5. ' entre' → logprob: -4.170706272125244
    6. '   ' → logprob: -4.170706272125244
    7. '(' → logprob: -4.420706272125244
    8. ' totale' → logprob: -4.545706272125244
    9. ' ' → logprob: -4.670706272125244
    10. '_' → logprob: -5.170706272125244

Token 25: ' pour' (ID: 1930)
  Prédit: ' pour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.034238796681165695
    2. '   ' → logprob: -4.159238815307617
    3. 'pour' → logprob: -4.534238815307617
    4. ' for' → logprob: -6.159238815307617
    5. ' à' → logprob: -6.909238815307617
    6. ' ' → logprob: -7.034238815307617
    7. '```' → logprob: -7.284238815307617
    8. ' du' → logprob: -7.659238815307617
    9. ' to' → logprob: -8.284238815307617
    10. ' de' → logprob: -8.534238815307617

Token 26: ' placer' (ID: 55591)
  Prédit: ' accueillir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' accueillir' → logprob: -1.4495984315872192
    2. ' assembler' → logprob: -2.0745983123779297
    3. ' chaque' → logprob: -2.1995983123779297
    4. ' l' → logprob: -2.1995983123779297
    5. ' afficher' → logprob: -2.3245983123779297
    6. ' la' → logprob: -2.6995983123779297
    7. ' placer' → logprob: -2.9495983123779297
    8. ' le' → logprob: -3.0745983123779297
    9. ' f' → logprob: -3.5745983123779297
    10. ' que' → logprob: -4.57459831237793

Token 27: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.056329354643821716
    2. ' toutes' → logprob: -3.9313292503356934
    3. ' la' → logprob: -4.181329250335693
    4. ' chaque' → logprob: -5.056329250335693
    5. ' tous' → logprob: -5.181329250335693
    6. ' l' → logprob: -5.431329250335693
    7. ' le' → logprob: -7.181329250335693
    8. ' une' → logprob: -7.431329250335693
    9. '   ' → logprob: -7.931329250335693
    10. '```' → logprob: -8.431329727172852

Token 28: ' rou' (ID: 15191)
  Prédit: ' éléments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' éléments' → logprob: -1.2184371948242188
    2. ' objets' → logprob: -1.8434371948242188
    3. ' rectangles' → logprob: -2.3434371948242188
    4. ' images' → logprob: -2.9684371948242188
    5. ' blocs' → logprob: -2.9684371948242188
    6. ' plaques' → logprob: -3.3434371948242188
    7. 'élé' → logprob: -3.5934371948242188
    8. ' fenêtres' → logprob: -4.093437194824219
    9. ' modules' → logprob: -4.093437194824219
    10. ' composants' → logprob: -4.093437194824219

Token 29: 'ler' (ID: 1639)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.15250207483768463
    2. 'tes' → logprob: -2.0275020599365234
    3. 'lements' → logprob: -6.402502059936523
    4. 'tiles' → logprob: -6.527502059936523
    5. 'les' → logprob: -6.902502059936523
    6. 't' → logprob: -7.027502059936523
    7. 'e' → logprob: -7.152502059936523
    8. 'ges' → logprob: -7.152502059936523
    9. 'ti' → logprob: -7.277502059936523
    10. '```' → logprob: -7.402502059936523

Token 30: ' cakes' (ID: 61222)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0018841347191482782
    2. 'es' → logprob: -6.3768839836120605
    3. '(s' → logprob: -9.501884460449219
    4. 'ies' → logprob: -10.751884460449219
    5. '```' → logprob: -11.126884460449219
    6. '_s' → logprob: -11.376884460449219
    7. 'e' → logprob: -11.376884460449219
    8. ' ' → logprob: -12.251884460449219
    9. 'aux' → logprob: -12.376884460449219
    10. '   ' → logprob: -12.626884460449219

Token 31: '
' (ID: 198)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.323036789894104
    2. 's' → logprob: -2.4480366706848145
    3. ' dans' → logprob: -2.8230366706848145
    4. ' selon' → logprob: -2.9480366706848145
    5. ' sur' → logprob: -3.1980366706848145
    6. ' ' → logprob: -3.9480366706848145
    7. ',' → logprob: -5.8230366706848145
    8. 'es' → logprob: -5.9480366706848145
    9. ' suivant' → logprob: -6.5730366706848145
    10. ' de' → logprob: -6.6980366706848145

Token 32: '   ' (ID: 271)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.11000395566225052
    2. ' dans' → logprob: -2.98500394821167
    3. ' ' → logprob: -4.23500394821167
    4. ' sur' → logprob: -4.36000394821167
    5. ' selon' → logprob: -4.36000394821167
    6. 's' → logprob: -5.86000394821167
    7. ',' → logprob: -5.98500394821167
    8. '   ' → logprob: -5.98500394821167
    9. ' ,' → logprob: -7.23500394821167
    10. ':' → logprob: -7.48500394821167

Token 33: ' dans' (ID: 2671)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.7240379452705383
    2. ' dans' → logprob: -0.8490379452705383
    3. ' sur' → logprob: -3.9740378856658936
    4. ' entre' → logprob: -4.474038124084473
    5. ' for' → logprob: -4.849038124084473
    6. ' in' → logprob: -5.099038124084473
    7. 'dans' (adapté à ' dans') → logprob: -5.099038124084473
    8. ' ' → logprob: -5.224038124084473
    9. '   ' → logprob: -5.349038124084473
    10. ' des' → logprob: -5.849038124084473

Token 34: ' un' (ID: 537)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.09292126446962357
    2. 'l' → logprob: -3.217921257019043
    3. ' un' → logprob: -4.217921257019043
    4. ' la' → logprob: -4.842921257019043
    5. ' une' → logprob: -4.967921257019043
    6. ' cet' → logprob: -4.967921257019043
    7. ' cette' → logprob: -6.092921257019043
    8. 'une' → logprob: -6.092921257019043
    9. ' le' → logprob: -6.717921257019043
    10. 'un' → logprob: -7.092921257019043

Token 35: ' certain' (ID: 4454)
  Prédit: ' ordre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ordre' → logprob: -0.38072001934051514
    2. 'ordre' → logprob: -2.3807201385498047
    3. ' espace' → logprob: -2.7557201385498047
    4. ' order' → logprob: -2.8807201385498047
    5. 'e' → logprob: -3.3807201385498047
    6. ''ordre' → logprob: -3.7557201385498047
    7. ' container' → logprob: -4.380720138549805
    8. ''espace' → logprob: -5.880720138549805
    9. 'es' → logprob: -6.005720138549805
    10. 'order' → logprob: -6.005720138549805

Token 36: ' ordre' (ID: 103061)
  Prédit: ' ordre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ordre' → logprob: -0.35998642444610596
    2. 'ordre' → logprob: -1.234986424446106
    3. ' order' → logprob: -4.734986305236816
    4. ''ordre' → logprob: -6.984986305236816
    5. 'order' → logprob: -7.484986305236816
    6. ' sens' → logprob: -7.609986305236816
    7. '’ordre' → logprob: -8.734986305236816
    8. '<|end|>' → logprob: -8.984986305236816
    9. '```' → logprob: -9.609986305236816
    10. ' arrangement' → logprob: -9.984986305236816

Token 37: ' donné' (ID: 52079)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7516398429870605
    2. '   ' → logprob: -1.7516398429870605
    3. '):' → logprob: -2.0016398429870605
    4. ')' → logprob: -2.2516398429870605
    5. ' :' → logprob: -2.6266398429870605
    6. ',' → logprob: -3.5016398429870605
    7. '.' → logprob: -5.6266398429870605
    8. ' ):' → logprob: -6.6266398429870605
    9. '):
' → logprob: -6.7516398429870605
    10. '(' → logprob: -6.7516398429870605

Token 38: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2596081793308258
    2. ':' → logprob: -2.009608268737793
    3. '):' → logprob: -3.134608268737793
    4. ' :' → logprob: -3.509608268737793
    5. ')' → logprob: -4.134608268737793
    6. ',' → logprob: -6.384608268737793
    7. '.' → logprob: -6.884608268737793
    8. '"""' → logprob: -7.509608268737793
    9. ' """' → logprob: -8.134608268737793
    10. ' ):' → logprob: -8.134608268737793

Token 39: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033625874668359756
    2. ' :' → logprob: -4.783626079559326
    3. ':' → logprob: -4.908626079559326
    4. '```' → logprob: -5.533626079559326
    5. '):' → logprob: -6.283626079559326
    6. '    ' → logprob: -6.283626079559326
    7. ' ):' → logprob: -6.283626079559326
    8. ' )' → logprob: -6.908626079559326
    9. ')' → logprob: -6.908626079559326
    10. '"""' → logprob: -7.033626079559326

Token 40: ' les' (ID: 1341)
  Prédit: ' tenant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tenant' → logprob: -0.21518081426620483
    2. ' prenant' → logprob: -2.4651808738708496
    3. 'tenant' → logprob: -3.4651808738708496
    4. 'consider' → logprob: -3.9651808738708496
    5. '   ' → logprob: -4.71518087387085
    6. ' considér' → logprob: -4.84018087387085
    7. ' ' → logprob: -4.96518087387085
    8. ' respect' → logprob: -5.09018087387085
    9. '```' → logprob: -5.21518087387085
    10. ' addition' → logprob: -5.59018087387085

Token 41: ' pla' (ID: 27140)
  Prédit: ' espa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espa' → logprob: -0.4012439250946045
    2. ' inter' → logprob: -2.0262439250946045
    3. ' pla' → logprob: -3.1512439250946045
    4. ' emp' → logprob: -3.2762439250946045
    5. ' sépar' → logprob: -3.5262439250946045
    6. ' espac' → logprob: -3.6512439250946045
    7. ' mettant' → logprob: -4.901244163513184
    8. ' spacing' → logprob: -5.151244163513184
    9. 'align' → logprob: -5.276244163513184
    10. ' super' → logprob: -5.526244163513184

Token 42: 'çant' (ID: 78714)
  Prédit: 'çant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'çant' → logprob: -0.0011977284448221326
    2. 'cant' → logprob: -7.126197814941406
    3. 'ç' → logprob: -8.251197814941406
    4. 'c' → logprob: -10.126197814941406
    5. 'cent' → logprob: -10.251197814941406
    6. 'ant' → logprob: -12.001197814941406
    7. '#' → logprob: -12.126197814941406
    8. 'cement' → logprob: -12.501197814941406
    9. '\' → logprob: -12.501197814941406
    10. '
' → logprob: -13.001197814941406

Token 43: ' côte' (ID: 143817)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5148361921310425
    2. ' sur' → logprob: -1.2648361921310425
    3. ' en' → logprob: -3.014836311340332
    4. ' dans' → logprob: -4.139836311340332
    5. 'sur' → logprob: -4.764836311340332
    6. ' côte' → logprob: -4.764836311340332
    7. ' entre' → logprob: -4.889836311340332
    8. ' horizontal' → logprob: -5.014836311340332
    9. ' au' → logprob: -5.514836311340332
    10. ' à' → logprob: -5.514836311340332

Token 44: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.24621324241161346
    2. 'à' → logprob: -1.8712131977081299
    3. '-à' → logprob: -2.74621319770813
    4. 'a' → logprob: -9.99621295928955
    5. ' a' → logprob: -10.87121295928955
    6. '   ' → logprob: -10.99621295928955
    7. '-' → logprob: -11.24621295928955
    8. ' ' → logprob: -11.37121295928955
    9. ''à' → logprob: -11.49621295928955
    10. '```' → logprob: -11.99621295928955

Token 45: ' côte' (ID: 143817)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0010642479173839092
    2. 'cot' → logprob: -7.126064300537109
    3. '```' → logprob: -9.50106430053711
    4. '   ' → logprob: -9.87606430053711
    5. ' ' → logprob: -10.62606430053711
    6. ' c' → logprob: -11.00106430053711
    7. 'l' → logprob: -11.12606430053711
    8. '``' → logprob: -11.37606430053711
    9. ' côte' → logprob: -11.37606430053711
    10. '  ' → logprob: -11.50106430053711

Token 46: ' au' (ID: 2791)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -1.2744508981704712
    2. ',' → logprob: -1.3994508981704712
    3. '   ' → logprob: -1.8994508981704712
    4. ':' → logprob: -1.8994508981704712
    5. ')' → logprob: -2.6494507789611816
    6. '.' → logprob: -2.7744507789611816
    7. '):
' → logprob: -4.274450778961182
    8. '
' → logprob: -5.774450778961182
    9. ' ):' → logprob: -5.774450778961182
    10. ',
' → logprob: -5.899450778961182

Token 47: ' sol' (ID: 1887)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -1.3184771537780762
    2. '   ' → logprob: -1.5684771537780762
    3. '```' → logprob: -1.6934771537780762
    4. 'minimum' → logprob: -2.318477153778076
    5. ' plus' → logprob: -3.443477153778076
    6. 'x' → logprob: -3.693477153778076
    7. '-dessus' → logprob: -4.068477153778076
    8. 'moins' → logprob: -4.068477153778076
    9. 'm' → logprob: -4.318477153778076
    10. 'maximum' → logprob: -4.318477153778076

Token 48: ' sans' (ID: 9828)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5656620264053345
    2. ':' → logprob: -0.9406620264053345
    3. '):' → logprob: -4.315661907196045
    4. ' :' → logprob: -4.440661907196045
    5. ',' → logprob: -4.440661907196045
    6. ')' → logprob: -6.315661907196045
    7. '.' → logprob: -6.940661907196045
    8. 'def' → logprob: -8.065662384033203
    9. ' ' → logprob: -8.565662384033203
    10. '(' → logprob: -8.565662384033203

Token 49: ' 
' (ID: 793)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5856528282165527
    2. ' ' → logprob: -2.0856528282165527
    3. ' espaces' → logprob: -2.2106528282165527
    4. 'es' → logprob: -3.0856528282165527
    5. ' espace' → logprob: -3.4606528282165527
    6. 'esp' → logprob: -4.210652828216553
    7. ' dépasser' → logprob: -4.210652828216553
    8. ' ajouter' → logprob: -4.460652828216553
    9. '   ' → logprob: -4.835652828216553
    10. '```' → logprob: -4.960652828216553

Token 50: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6301877498626709
    2. ' espaces' → logprob: -2.380187749862671
    3. 'es' → logprob: -2.505187749862671
    4. ' ' → logprob: -2.755187749862671
    5. 'esp' → logprob: -3.130187749862671
    6. ' espace' → logprob: -3.380187749862671
    7. ' overlap' → logprob: -4.25518798828125
    8. ' inter' → logprob: -4.38018798828125
    9. ' dépasser' → logprob: -4.38018798828125
    10. 'inter' → logprob: -4.50518798828125

Token 51: ' qu' (ID: 474)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.9362143278121948
    2. 'esp' → logprob: -0.9362143278121948
    3. 's' → logprob: -2.4362144470214844
    4. ' espaces' → logprob: -2.6862144470214844
    5. ' espace' → logprob: -3.8112144470214844
    6. ' esp' → logprob: -4.561214447021484
    7. 'inter' → logprob: -5.436214447021484
    8. ' overlap' → logprob: -5.561214447021484
    9. ' ' → logprob: -5.936214447021484
    10. ' inter' → logprob: -6.311214447021484

Token 52: ''ils' (ID: 41108)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.03557268902659416
    2. 'u' → logprob: -4.285572528839111
    3. ''' → logprob: -5.410572528839111
    4. ' e' → logprob: -5.535572528839111
    5. ''il' → logprob: -6.035572528839111
    6. 'une' → logprob: -6.160572528839111
    7. ''ils' → logprob: -6.285572528839111
    8. '   ' → logprob: -6.910572528839111
    9. '```' → logprob: -6.910572528839111
    10. ' aucun' → logprob: -7.285572528839111

Token 53: ' ne' (ID: 453)
  Prédit: ' aient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aient' → logprob: -1.051672101020813
    2. ' se' → logprob: -1.551672101020813
    3. ' dépass' → logprob: -1.926672101020813
    4. 'e' → logprob: -2.4266719818115234
    5. ' ne' → logprob: -3.1766719818115234
    6. 's' → logprob: -3.4266719818115234
    7. ' soient' → logprob: -3.8016719818115234
    8. ' n' → logprob: -3.9266719818115234
    9. 'se' → logprob: -4.051671981811523
    10. 'n' → logprob: -4.551671981811523

Token 54: ' se' (ID: 458)
  Prédit: ' se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' se' → logprob: -0.23446284234523773
    2. 'se' → logprob: -1.609462857246399
    3. 's' → logprob: -5.484462738037109
    4. ' dépass' → logprob: -5.734462738037109
    5. ' soient' → logprob: -8.35946273803711
    6. ' s' → logprob: -8.48446273803711
    7. ' overlap' → logprob: -8.73446273803711
    8. 'over' → logprob: -8.98446273803711
    9. 'e' → logprob: -9.10946273803711
    10. '   ' → logprob: -9.23446273803711

Token 55: ' super' (ID: 2539)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.6422164440155029
    2. ' touch' → logprob: -1.642216444015503
    3. ' chev' → logprob: -1.767216444015503
    4. ' super' → logprob: -3.017216444015503
    5. 'super' → logprob: -3.892216444015503
    6. 'che' → logprob: -3.892216444015503
    7. ' ' → logprob: -5.642216682434082
    8. 't' → logprob: -6.017216682434082
    9. ' rec' → logprob: -6.142216682434082
    10. '  ' → logprob: -6.267216682434082

Token 56: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.017220258712768555
    2. 'p' → logprob: -4.392220497131348
    3. 'posé' → logprob: -6.392220497131348
    4. 'pose' → logprob: -6.642220497131348
    5. 'poser' → logprob: -7.392220497131348
    6. 'position' → logprob: -8.267220497131348
    7. 'posable' → logprob: -8.642220497131348
    8. 'poss' → logprob: -8.767220497131348
    9. 'po' → logprob: -9.267220497131348
    10. 'pong' → logprob: -9.517220497131348

Token 57: 'ent' (ID: 299)
  Prédit: 'ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.6042959094047546
    2. 'os' → logprob: -0.8542959094047546
    3. 'ose' → logprob: -4.47929573059082
    4. 'pos' → logprob: -5.35429573059082
    5. 'er' → logprob: -5.60429573059082
    6. 'e' → logprob: -6.22929573059082
    7. 'sent' → logprob: -6.47929573059082
    8. 'nent' → logprob: -6.85429573059082
    9. 'aient' → logprob: -7.22929573059082
    10. 'pose' → logprob: -7.35429573059082

Token 58: ' vertical' (ID: 17679)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0473800897598267
    2. '   ' → logprob: -1.1723800897598267
    3. '.' → logprob: -2.047379970550537
    4. ':' → logprob: -2.547379970550537
    5. ',' → logprob: -3.047379970550537
    6. '):' → logprob: -3.422379970550537
    7. ' :' → logprob: -3.547379970550537
    8. 'def' → logprob: -5.672379970550537
    9. '
' → logprob: -6.172379970550537
    10. ' )' → logprob: -6.172379970550537

Token 59: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.255251944065094
    2. 'ément' → logprob: -1.6302518844604492
    3. 'e' → logprob: -3.880251884460449
    4. 'ment' → logprob: -6.255251884460449
    5. 'lement' → logprob: -6.880251884460449
    6. 'emment' → logprob: -6.880251884460449
    7. 'iquement' → logprob: -6.880251884460449
    8. 'nement' → logprob: -7.130251884460449
    9. '_' → logprob: -8.13025188446045
    10. 'al' → logprob: -8.38025188446045

Token 60: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4192691445350647
    2. '.' → logprob: -1.54426908493042
    3. ':' → logprob: -2.91926908493042
    4. ',' → logprob: -3.41926908493042
    5. '
' → logprob: -4.54426908493042
    6. ' :' → logprob: -5.04426908493042
    7. ')' → logprob: -5.16926908493042
    8. '"""' → logprob: -5.29426908493042
    9. '.
' → logprob: -5.54426908493042
    10. '):' → logprob: -5.79426908493042

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017246151342988014
    2. ')' → logprob: -4.517246246337891
    3. '):' → logprob: -5.767246246337891
    4. '"""' → logprob: -6.392246246337891
    5. ':' → logprob: -8.01724624633789
    6. '"' → logprob: -8.89224624633789
    7. ' )' → logprob: -9.01724624633789
    8. ' """' → logprob: -9.01724624633789
    9. '
' → logprob: -9.14224624633789
    10. '```' → logprob: -9.14224624633789

Token 62: ' La' (ID: 3038)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.710924506187439
    2. 'width' → logprob: -1.210924506187439
    3. ' width' → logprob: -2.4609246253967285
    4. ' widths' → logprob: -3.4609246253967285
    5. 'total' → logprob: -3.5859246253967285
    6. ' total' → logprob: -3.7109246253967285
    7. 'max' → logprob: -4.5859246253967285
    8. 'length' → logprob: -5.3359246253967285
    9. ' max' → logprob: -5.5859246253967285
    10. ' largeur' → logprob: -5.8359246253967285

Token 63: ' distance' (ID: 9324)
  Prédit: ' largeur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' largeur' → logprob: -0.01658674143254757
    2. ' large' → logprob: -5.516586780548096
    3. ' hauteur' → logprob: -6.141586780548096
    4. '   ' → logprob: -6.141586780548096
    5. 's' → logprob: -6.266586780548096
    6. ' width' → logprob: -6.516586780548096
    7. ' longueur' → logprob: -6.516586780548096
    8. 'large' → logprob: -7.016586780548096
    9. 'width' → logprob: -7.266586780548096
    10. 'larg' → logprob: -8.391586303710938

Token 64: ' horizont' (ID: 69308)
  Prédit: ' entre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.30411961674690247
    2. ' between' → logprob: -2.30411958694458
    3. '_' → logprob: -2.67911958694458
    4. 'entre' → logprob: -3.55411958694458
    5. '_between' → logprob: -4.05411958694458
    6. ' minimale' → logprob: -4.30411958694458
    7. ' maximale' → logprob: -5.05411958694458
    8. '_min' → logprob: -5.30411958694458
    9. ' ' → logprob: -5.30411958694458
    10. '_max' → logprob: -5.80411958694458

Token 65: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.0004294771933928132
    2. 'al' → logprob: -8.125429153442383
    3. '   ' → logprob: -10.125429153442383
    4. 'a' → logprob: -10.875429153442383
    5. 'nelle' → logprob: -11.125429153442383
    6. 'e' → logprob: -11.250429153442383
    7. 'ales' → logprob: -11.375429153442383
    8. '       ' → logprob: -11.750429153442383
    9. '_' → logprob: -12.125429153442383
    10. ' à' → logprob: -12.250429153442383

Token 66: ' minimale' (ID: 143217)
  Prédit: ' entre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.14375311136245728
    2. 'entre' → logprob: -2.5187530517578125
    3. ' between' → logprob: -3.8937530517578125
    4. ' minimale' → logprob: -3.8937530517578125
    5. '   ' → logprob: -5.5187530517578125
    6. ' ' → logprob: -5.8937530517578125
    7. ' maximale' → logprob: -7.1437530517578125
    8. ' à' → logprob: -7.2687530517578125
    9. 'between' → logprob: -7.6437530517578125
    10. '_between' → logprob: -8.018753051757812

Token 67: ' entre' (ID: 3853)
  Prédit: ' entre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.0523640401661396
    2. 'entre' → logprob: -3.0523641109466553
    3. ' between' → logprob: -6.427363872528076
    4. ' ' → logprob: -7.177363872528076
    5. ' nécessaire' → logprob: -7.552363872528076
    6. '   ' → logprob: -8.427364349365234
    7. '```' → logprob: -8.677364349365234
    8. ' à' → logprob: -9.177364349365234
    9. 'between' → logprob: -9.302364349365234
    10. 'pour' → logprob: -9.427364349365234

Token 68: ' deux' (ID: 10301)
  Prédit: ' deux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.436551958322525
    2. 'de' → logprob: -1.1865519285202026
    3. ' les' → logprob: -3.686552047729492
    4. ' chaque' → logprob: -4.686552047729492
    5. ' two' → logprob: -5.186552047729492
    6. 'les' → logprob: -5.811552047729492
    7. ' eux' → logprob: -7.061552047729492
    8. '```' → logprob: -7.186552047729492
    9. 'eux' → logprob: -7.186552047729492
    10. 'l' → logprob: -7.811552047729492

Token 69: ' cer' (ID: 10816)
  Prédit: ' cakes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cakes' → logprob: -0.9812535643577576
    2. ' roule' → logprob: -1.7312536239624023
    3. ' rou' → logprob: -1.9812536239624023
    4. ' roul' → logprob: -2.3562536239624023
    5. 'rou' → logprob: -3.1062536239624023
    6. ' g' → logprob: -3.4812536239624023
    7. ' objets' → logprob: -4.106253623962402
    8. 'cakes' → logprob: -4.606253623962402
    9. ' éléments' → logprob: -4.668753623962402
    10. ' ' → logprob: -4.793753623962402

Token 70: 'cles' (ID: 10934)
  Prédit: 'cles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cles' → logprob: -0.011875729076564312
    2. 'cl' → logprob: -4.511875629425049
    3. 'cle' → logprob: -8.011876106262207
    4. 't' → logprob: -8.011876106262207
    5. 'les' → logprob: -10.386876106262207
    6. 'tes' → logprob: -10.386876106262207
    7. 'ques' → logprob: -10.761876106262207
    8. '```' → logprob: -11.886876106262207
    9. 'amiques' → logprob: -12.011876106262207
    10. 'cakes' → logprob: -12.136876106262207

Token 71: ' de' (ID: 334)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.21004654467105865
    2. ' (' → logprob: -3.4600465297698975
    3. 'adj' → logprob: -3.5850465297698975
    4. ' adjacent' → logprob: -3.7100465297698975
    5. ' adj' → logprob: -3.8350465297698975
    6. ' vois' → logprob: -4.085046768188477
    7. 's' → logprob: -4.835046768188477
    8. ' voisins' → logprob: -4.835046768188477
    9. 'es' → logprob: -5.210046768188477
    10. ',' → logprob: -5.335046768188477

Token 72: ' ray' (ID: 22420)
  Prédit: 'ray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ray' → logprob: -0.9098330140113831
    2. 'r' → logprob: -1.5348329544067383
    3. ' ray' → logprob: -1.7848329544067383
    4. ' r' → logprob: -2.2848329544067383
    5. ' centers' → logprob: -3.1598329544067383
    6. ' centres' → logprob: -3.4098329544067383
    7. ' rayon' → logprob: -4.284832954406738
    8. ' radius' → logprob: -5.284832954406738
    9. ' ' → logprob: -5.659832954406738
    10. ' deux' → logprob: -6.034832954406738

Token 73: 'ons' (ID: 1808)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.014563496224582195
    2. 'ons' → logprob: -4.26456356048584
    3. 'n' → logprob: -9.13956356048584
    4. 'd' → logprob: -9.38956356048584
    5. 'onnement' → logprob: -9.88956356048584
    6. '>' → logprob: -10.38956356048584
    7. '```' → logprob: -10.88956356048584
    8. 's' → logprob: -11.51456356048584
    9. 'onn' → logprob: -11.51456356048584
    10. 'onne' → logprob: -11.63956356048584

Token 74: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.6361016035079956
    2. 'r' → logprob: -0.7611016035079956
    3. 'adj' → logprob: -6.511101722717285
    4. ' cons' → logprob: -7.261101722717285
    5. ' i' → logprob: -8.386101722717285
    6. 'a' → logprob: -8.636101722717285
    7. ' adj' → logprob: -8.886101722717285
    8. ' ' → logprob: -9.261101722717285
    9. ' voisins' → logprob: -9.261101722717285
    10. ' R' → logprob: -9.636101722717285

Token 75: '_i' (ID: 10853)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8243288397789001
    2. 's' → logprob: -1.699328899383545
    3. ' ' → logprob: -2.199328899383545
    4. '_' → logprob: -2.574328899383545
    5. ')' → logprob: -2.699328899383545
    6. 'es' → logprob: -3.449328899383545
    7. '1' → logprob: -3.949328899383545
    8. ' )' → logprob: -4.074328899383545
    9. 'a' → logprob: -4.449328899383545
    10. 'i' → logprob: -4.824328899383545

Token 76: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.2957858443260193
    2. ' ' → logprob: -1.420785903930664
    3. 'et' → logprob: -5.545785903930664
    4. ' and' → logprob: -5.670785903930664
    5. ',' → logprob: -6.420785903930664
    6. 's' → logprob: -6.670785903930664
    7. ' est' → logprob: -7.170785903930664
    8. '1' → logprob: -7.795785903930664
    9. '   ' → logprob: -8.295785903930664
    10. '  ' → logprob: -8.420785903930664

Token 77: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.038184016942977905
    2. 'r' → logprob: -3.2881839275360107
    3. ' ' → logprob: -9.16318416595459
    4. ' ' → logprob: -10.41318416595459
    5. '_r' → logprob: -13.16318416595459
    6. ' `' → logprob: -14.41318416595459
    7. ' _' → logprob: -14.66318416595459
    8. '  ' → logprob: -14.72568416595459
    9. '```' → logprob: -14.78818416595459
    10. ' ' → logprob: -14.85068416595459

Token 78: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.09949994087219238
    2. '_i' → logprob: -2.5994999408721924
    3. 'j' → logprob: -3.9744999408721924
    4. 'i' → logprob: -6.849499702453613
    5. '_' → logprob: -7.974499702453613
    6. '+' → logprob: -8.849499702453613
    7. '1' → logprob: -10.474499702453613
    8. '```' → logprob: -11.349499702453613
    9. 'e' → logprob: -12.599499702453613
    10. 'r' → logprob: -12.599499702453613

Token 79: ',
' (ID: 412)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11095204204320908
    2. ' est' → logprob: -2.360952138900757
    3. 's' → logprob: -5.235951900482178
    4. '   ' → logprob: -6.735951900482178
    5. ',' → logprob: -7.235951900482178
    6. '  ' → logprob: -7.610951900482178
    7. ' s' → logprob: -7.735951900482178
    8. ' )' → logprob: -7.860951900482178
    9. ' is' → logprob: -8.110952377319336
    10. 'e' → logprob: -8.360952377319336

Token 80: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25713595747947693
    2. '    ' → logprob: -2.3821358680725098
    3. '   ' → logprob: -3.1321358680725098
    4. ' c' → logprob: -4.13213586807251
    5. 'r' → logprob: -4.50713586807251
    6. ' r' → logprob: -5.00713586807251
    7. '  ' → logprob: -5.38213586807251
    8. 's' → logprob: -5.50713586807251
    9. ' en' → logprob: -5.63213586807251
    10. ',' → logprob: -5.75713586807251

Token 81: ' pos' (ID: 1253)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.5484516620635986
    2. 'r' → logprob: -1.7984516620635986
    3. ' calcul' → logprob: -3.2984516620635986
    4. ' en' → logprob: -3.4234516620635986
    5. ' d' → logprob: -3.5484516620635986
    6. ' est' → logprob: -3.7984516620635986
    7. '   ' → logprob: -4.1734514236450195
    8. 'def' → logprob: -4.2984514236450195
    9. 'd' → logprob: -4.5484514236450195
    10. ' ' → logprob: -4.9234514236450195

Token 82: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.7658594250679016
    2. 'é' → logprob: -1.1408593654632568
    3. 'ée' → logprob: -2.140859365463257
    4. 's' → logprob: -3.515859365463257
    5. 'e' → logprob: -4.015859603881836
    6. 'ées' → logprob: -4.390859603881836
    7. '=' → logprob: -5.015859603881836
    8. 't' → logprob: -5.140859603881836
    9. 'ant' → logprob: -5.140859603881836
    10. 'i' → logprob: -5.265859603881836

Token 83: ' au' (ID: 2791)
  Prédit: ' sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.1080983579158783
    2. 'sur' → logprob: -2.858098268508911
    3. ' au' → logprob: -3.608098268508911
    4. ' ' → logprob: -5.23309850692749
    5. ' à' → logprob: -5.35809850692749
    6. ' horizontal' → logprob: -5.98309850692749
    7. ' l' → logprob: -6.73309850692749
    8. ' côte' → logprob: -6.73309850692749
    9. '   ' → logprob: -7.48309850692749
    10. 's' → logprob: -8.108098030090332

Token 84: ' sol' (ID: 1887)
  Prédit: 'sol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sol' → logprob: -0.09626967459917068
    2. ' sol' → logprob: -2.4712696075439453
    3. 'm' → logprob: -5.971269607543945
    4. ' même' → logprob: -6.221269607543945
    5. '   ' → logprob: -6.971269607543945
    6. 'niveau' → logprob: -7.471269607543945
    7. '```' → logprob: -8.096269607543945
    8. 'centre' → logprob: -8.471269607543945
    9. 's' → logprob: -8.971269607543945
    10. 'minimum' → logprob: -9.221269607543945

Token 85: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09147781878709793
    2. ' ,' → logprob: -3.216477870941162
    3. ' est' → logprob: -3.341477870941162
    4. ' ' → logprob: -5.091477870941162
    5. 'est' → logprob: -6.716477870941162
    6. 'es' → logprob: -7.216477870941162
    7. 'e' → logprob: -7.341477870941162
    8. 's' → logprob: -7.716477870941162
    9. ' sur' → logprob: -7.716477870941162
    10. '   ' → logprob: -7.966477870941162

Token 86: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.26698586344718933
    2. ' ' → logprob: -1.6419858932495117
    3. 'est' → logprob: -4.641985893249512
    4. '   ' → logprob: -5.016985893249512
    5. 's' → logprob: -5.641985893249512
    6. ',' → logprob: -5.766985893249512
    7. 'e' → logprob: -5.766985893249512
    8. ' is' → logprob: -6.141985893249512
    9. ' e' → logprob: -6.391985893249512
    10. ' i' → logprob: -6.641985893249512

Token 87: ' calcul' (ID: 7559)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7093539834022522
    2. ' math' → logprob: -0.9593539834022522
    3. ':' → logprob: -3.7093539237976074
    4. ' r' → logprob: -3.7093539237976074
    5. ' (' → logprob: -3.8343539237976074
    6. ' sqrt' → logprob: -4.834353923797607
    7. ' ég' → logprob: -5.084353923797607
    8. ' la' → logprob: -5.209353923797607
    9. ' au' → logprob: -5.209353923797607
    10. '2' → logprob: -5.334353923797607

Token 88: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.020991189405322075
    2. 'é' → logprob: -3.895991086959839
    3. 'ées' → logprob: -9.020991325378418
    4. 'e' → logprob: -9.520991325378418
    5. 'és' → logprob: -10.020991325378418
    6. 'er' → logprob: -10.270991325378418
    7. ' é' → logprob: -10.270991325378418
    8. '=' → logprob: -11.270991325378418
    9. '   ' → logprob: -11.270991325378418
    10. 'ee' → logprob: -11.270991325378418

Token 89: ' par' (ID: 686)
  Prédit: ' comme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comme' → logprob: -0.5952131152153015
    2. ' ' → logprob: -1.5952131748199463
    3. ' par' → logprob: -1.9702131748199463
    4. ' en' → logprob: -2.9702131748199463
    5. ' math' → logprob: -4.220212936401367
    6. 'e' → logprob: -4.345212936401367
    7. ' e' → logprob: -5.595212936401367
    8. ' à' → logprob: -5.595212936401367
    9. ' avec' → logprob: -5.595212936401367
    10. ' selon' → logprob: -5.970212936401367

Token 90: ' :
' (ID: 10039)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -1.362167477607727
    2. ' ' → logprob: -1.487167477607727
    3. ' la' → logprob: -1.487167477607727
    4. ' '' → logprob: -2.8621673583984375
    5. ' l' → logprob: -3.2371673583984375
    6. ' `' → logprob: -3.3621673583984375
    7. ' ```' → logprob: -3.7371673583984375
    8. ' (' → logprob: -4.1121673583984375
    9. 'math' → logprob: -4.3621673583984375
    10. '```' → logprob: -4.4871673583984375

Token 91: '     ' (ID: 530)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.4833642542362213
    2. ' ' → logprob: -2.2333643436431885
    3. ' (' → logprob: -2.4833643436431885
    4. 'math' → logprob: -2.7333643436431885
    5. ' `' → logprob: -3.2333643436431885
    6. '   ' → logprob: -4.233364105224609
    7. '```' → logprob: -4.233364105224609
    8. ' sqrt' → logprob: -4.483364105224609
    9. ' ```' → logprob: -4.733364105224609
    10. '2' → logprob: -4.983364105224609

Token 92: ' d' (ID: 272)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.2281336635351181
    2. 'math' → logprob: -2.3531336784362793
    3. ' ' → logprob: -2.7281336784362793
    4. '2' → logprob: -3.9781336784362793
    5. ' (' → logprob: -5.228133678436279
    6. '```' → logprob: -5.478133678436279
    7. '   ' → logprob: -5.853133678436279
    8. ' int' → logprob: -6.228133678436279
    9. 'int' → logprob: -6.728133678436279
    10. ' sqrt' → logprob: -6.728133678436279

Token 93: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20451059937477112
    2. '=' → logprob: -2.4545106887817383
    3. '_' → logprob: -2.7045106887817383
    4. 'istance' → logprob: -3.8295106887817383
    5. 'e' → logprob: -6.079510688781738
    6. '_i' → logprob: -6.329510688781738
    7. '_min' → logprob: -6.329510688781738
    8. 'ist' → logprob: -7.204510688781738
    9. 'i' → logprob: -7.704510688781738
    10. '   ' → logprob: -7.704510688781738

Token 94: ' sqrt' (ID: 44237)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.6905094385147095
    2. 'math' → logprob: -1.3155094385147095
    3. '2' → logprob: -1.9405094385147095
    4. ' ' → logprob: -3.06550931930542
    5. 'r' → logprob: -3.69050931930542
    6. ' r' → logprob: -4.56550931930542
    7. ' (' → logprob: -5.94050931930542
    8. '(math' → logprob: -7.19050931930542
    9. 'm' → logprob: -8.440509796142578
    10. '(' → logprob: -8.690509796142578

Token 95: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.22938622534275055
    2. '(' → logprob: -1.6043862104415894
    3. '(r' → logprob: -5.729386329650879
    4. '(abs' → logprob: -7.854386329650879
    5. '(pow' → logprob: -9.104386329650879
    6. '(
' → logprob: -10.229386329650879
    7. '2' → logprob: -10.604386329650879
    8. '{' → logprob: -10.604386329650879
    9. '```' → logprob: -10.729386329650879
    10. ')' → logprob: -10.854386329650879

Token 96: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.18910163640975952
    2. '2' → logprob: -2.4391016960144043
    3. '(r' → logprob: -2.5641016960144043
    4. '(' → logprob: -5.689101696014404
    5. ')' → logprob: -6.939101696014404
    6. '4' → logprob: -7.064101696014404
    7. ' (' → logprob: -7.064101696014404
    8. ' r' → logprob: -7.064101696014404
    9. 'math' → logprob: -8.189101219177246
    10. ' ' → logprob: -8.689101219177246

Token 97: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0038441363722085953
    2. 'i' → logprob: -5.628844261169434
    3. '[i' → logprob: -8.753844261169434
    4. '_' → logprob: -10.253844261169434
    5. '_j' → logprob: -10.628844261169434
    6. '1' → logprob: -11.753844261169434
    7. ' i' → logprob: -12.253844261169434
    8. 'r' → logprob: -13.003844261169434
    9. 'j' → logprob: -13.128844261169434
    10. 's' → logprob: -13.503844261169434

Token 98: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7523062229156494
    2. '+' → logprob: -1.1273062229156494
    3. '+r' → logprob: -1.6273062229156494
    4. '*' → logprob: -4.87730598449707
    5. 'r' → logprob: -8.50230598449707
    6. '+i' → logprob: -8.62730598449707
    7. ' ' → logprob: -9.50230598449707
    8. '1' → logprob: -10.37730598449707
    9. '   ' → logprob: -10.37730598449707
    10. ' *' → logprob: -10.37730598449707

Token 99: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.04941621422767639
    2. ' r' → logprob: -3.0494163036346436
    3. ')' → logprob: -7.5494160652160645
    4. ' ' → logprob: -8.674416542053223
    5. ' )' → logprob: -10.049416542053223
    6. '_r' → logprob: -10.424416542053223
    7. '   ' → logprob: -11.424416542053223
    8. '<|end|>' → logprob: -11.924416542053223
    9. '	r' → logprob: -12.049416542053223
    10. '_' → logprob: -12.299416542053223

Token 100: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.0007985501433722675
    2. '_i' → logprob: -7.62579870223999
    3. '_' → logprob: -8.625798225402832
    4. 'j' → logprob: -9.000798225402832
    5. '[j' → logprob: -13.375798225402832
    6. 'i' → logprob: -13.625798225402832
    7. ')' → logprob: -14.000798225402832
    8. ' _' → logprob: -14.125798225402832
    9. '+' → logprob: -14.375798225402832
    10. '```' → logprob: -14.500798225402832

Token 101: ')^' (ID: 73602)
  Prédit: ')**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.20512136816978455
    2. ')' → logprob: -1.705121397972107
    3. ')*' → logprob: -5.9551215171813965
    4. ' )' → logprob: -7.4551215171813965
    5. '*' → logprob: -7.7051215171813965
    6. '*)' → logprob: -10.705121040344238
    7. ')^' → logprob: -11.205121040344238
    8. ')*(' → logprob: -11.580121040344238
    9. '   ' → logprob: -11.580121040344238
    10. '2' → logprob: -12.705121040344238

Token 102: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001975802006199956
    2. ' ' → logprob: -9.125197410583496
    3. '**' → logprob: -10.750197410583496
    4. '   ' → logprob: -10.875197410583496
    5. '
' → logprob: -11.125197410583496
    6. ')' → logprob: -11.625197410583496
    7. '*' → logprob: -11.750197410583496
    8. '```' → logprob: -13.062697410583496
    9. '​' → logprob: -13.562697410583496
    10. '22' → logprob: -13.625197410583496

Token 103: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0025103818625211716
    2. '-' → logprob: -6.6275105476379395
    3. ')' → logprob: -7.0025105476379395
    4. ' ' → logprob: -9.002510070800781
    5. '   ' → logprob: -9.377510070800781
    6. ' )' → logprob: -10.002510070800781
    7. '  ' → logprob: -11.752510070800781
    8. '    ' → logprob: -12.502510070800781
    9. '),' → logprob: -12.877510070800781
    10. ',' → logprob: -14.002510070800781

Token 104: ' (' (ID: 350)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.40569812059402466
    2. ' (' → logprob: -1.5306980609893799
    3. '(abs' → logprob: -2.40569806098938
    4. '(' → logprob: -4.405698299407959
    5. ' abs' → logprob: -5.155698299407959
    6. '(math' → logprob: -5.280698299407959
    7. 'abs' → logprob: -6.155698299407959
    8. '   ' → logprob: -7.530698299407959
    9. '(min' → logprob: -8.0306978225708
    10. '2' → logprob: -8.4056978225708

Token 105: 'r' (ID: 81)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.9626696109771729
    2. 'abs' → logprob: -1.5876696109771729
    3. '(r' → logprob: -1.5876696109771729
    4. '(abs' → logprob: -1.7126696109771729
    5. ' (' → logprob: -3.587669610977173
    6. 'min' → logprob: -7.962669372558594
    7. '(min' → logprob: -8.337669372558594
    8. '(math' → logprob: -8.337669372558594
    9. '(' → logprob: -8.587669372558594
    10. ' min' → logprob: -9.087669372558594

Token 106: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0013240495463833213
    2. 'i' → logprob: -7.00132417678833
    3. '_j' → logprob: -7.87632417678833
    4. '[i' → logprob: -10.876323699951172
    5. '_' → logprob: -12.751323699951172
    6. 'j' → logprob: -13.751323699951172
    7. ')' → logprob: -13.751323699951172
    8. 'import' → logprob: -13.751323699951172
    9. '[' → logprob: -13.876323699951172
    10. 'ad' → logprob: -14.126323699951172

Token 107: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.31253111362457275
    2. '-' → logprob: -1.5625311136245728
    3. '+' → logprob: -3.187530994415283
    4. ' +' → logprob: -4.562530994415283
    5. ' ' → logprob: -6.187530994415283
    6. '*' → logprob: -6.437530994415283
    7. '   ' → logprob: -6.562530994415283
    8. ')' → logprob: -6.687530994415283
    9. '+r' → logprob: -8.562531471252441
    10. '-r' → logprob: -9.187531471252441

Token 108: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.20153875648975372
    2. 'r' → logprob: -1.7015388011932373
    3. ' ' → logprob: -9.201539039611816
    4. '2' → logprob: -11.951539039611816
    5. '<|end|>' → logprob: -12.201539039611816
    6. '_r' → logprob: -12.326539039611816
    7. '_j' → logprob: -13.076539039611816
    8. '1' → logprob: -13.326539039611816
    9. 'j' → logprob: -13.826539039611816
    10. ')' → logprob: -14.201539039611816

Token 109: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -1.2471589798224159e-05
    2. '_i' → logprob: -12.125012397766113
    3. '_' → logprob: -12.375012397766113
    4. '__' → logprob: -13.750012397766113
    5. 'j' → logprob: -14.750012397766113
    6. '+' → logprob: -14.750012397766113
    7. ' _' → logprob: -15.375012397766113
    8. '+j' → logprob: -15.500012397766113
    9. '_s' → logprob: -15.875012397766113
    10. ')_' → logprob: -16.25001335144043

Token 110: ')^' (ID: 73602)
  Prédit: ')**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.49123266339302063
    2. ')' → logprob: -0.9912326335906982
    3. ')^' → logprob: -4.116232872009277
    4. ' )' → logprob: -7.366232872009277
    5. '2' → logprob: -10.366232872009277
    6. '   ' → logprob: -11.866232872009277
    7. ')*' → logprob: -12.366232872009277
    8. '**' → logprob: -12.741232872009277
    9. '```' → logprob: -12.741232872009277
    10. ' ' → logprob: -12.866232872009277

Token 111: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005174091784283519
    2. ' ' → logprob: -8.000517845153809
    3. '22' → logprob: -8.875517845153809
    4. ')' → logprob: -11.750517845153809
    5. '21' → logprob: -11.750517845153809
    6. '**' → logprob: -12.000517845153809
    7. '222' → logprob: -12.625517845153809
    8. '20' → logprob: -13.125517845153809
    9. '212' → logprob: -13.250517845153809
    10. '(' → logprob: -13.625517845153809

Token 112: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009979303926229477
    2. ' )' → logprob: -5.259979248046875
    3. '   ' → logprob: -5.384979248046875
    4. ')
' → logprob: -9.759979248046875
    5. '))' → logprob: -10.759979248046875
    6. 'def' → logprob: -11.134979248046875
    7. ' ' → logprob: -11.134979248046875
    8. '  ' → logprob: -12.384979248046875
    9. '**' → logprob: -12.759979248046875
    10. ')+' → logprob: -12.884979248046875

Token 113: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009625876322388649
    2. '   ' → logprob: -5.3846259117126465
    3. ' )' → logprob: -5.3846259117126465
    4. ' ' → logprob: -9.009625434875488
    5. ' +' → logprob: -9.759625434875488
    6. '+' → logprob: -9.884625434875488
    7. '**' → logprob: -10.009625434875488
    8. ')
' → logprob: -10.384625434875488
    9. 'def' → logprob: -11.384625434875488
    10. '=' → logprob: -11.509625434875488

Token 114: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6330954432487488
    2. ' ' → logprob: -0.7580954432487488
    3. '   ' → logprob: -8.133095741271973
    4. ' math' → logprob: -9.508095741271973
    5. '4' → logprob: -9.883095741271973
    6. '  ' → logprob: -10.508095741271973
    7. '    ' → logprob: -10.758095741271973
    8. 'math' → logprob: -11.258095741271973
    9. ')' → logprob: -12.508095741271973
    10. ' ' → logprob: -13.008095741271973

Token 115: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004925139248371124
    2. ' ' → logprob: -5.37992525100708
    3. 'math' → logprob: -8.629924774169922
    4. '   ' → logprob: -9.379924774169922
    5. ' math' → logprob: -10.504924774169922
    6. '4' → logprob: -11.879924774169922
    7. '  ' → logprob: -12.754924774169922
    8. '(' → logprob: -14.004924774169922
    9. 'sqrt' → logprob: -14.129924774169922
    10. 'min' → logprob: -14.254924774169922

Token 116: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6329595446586609
    2. ' *' → logprob: -0.7579595446586609
    3. '*r' → logprob: -8.757959365844727
    4. ' ' → logprob: -9.882959365844727
    5. '   ' → logprob: -10.007959365844727
    6. ' ' → logprob: -10.632959365844727
    7. ')' → logprob: -10.757959365844727
    8. ' math' → logprob: -10.757959365844727
    9. 'import' → logprob: -11.007959365844727
    10. 'r' → logprob: -12.257959365844727

Token 117: ' sqrt' (ID: 44237)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.2985583543777466
    2. 'math' → logprob: -1.4235583543777466
    3. ' math' → logprob: -4.423558235168457
    4. ' min' → logprob: -5.298558235168457
    5. '(math' → logprob: -9.048558235168457
    6. 'sqrt' → logprob: -9.798558235168457
    7. '(min' → logprob: -10.423558235168457
    8. ' ' → logprob: -10.548558235168457
    9. '	min' → logprob: -11.673558235168457
    10. 'm' → logprob: -11.923558235168457

Token 118: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.09219413995742798
    2. '(' → logprob: -2.467194080352783
    3. ' (' → logprob: -6.217194080352783
    4. 'r' → logprob: -6.842194080352783
    5. '(
' → logprob: -8.842194557189941
    6. ' r' → logprob: -10.467194557189941
    7. '(math' → logprob: -12.592194557189941
    8. '(s' → logprob: -13.217194557189941
    9. ' ' → logprob: -13.967194557189941
    10. '_r' → logprob: -14.217194557189941

Token 119: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0009405235759913921
    2. 'i' → logprob: -7.125940322875977
    3. '_' → logprob: -9.000940322875977
    4. 'r' → logprob: -12.250940322875977
    5. '_min' → logprob: -13.375940322875977
    6. '_j' → logprob: -13.500940322875977
    7. '_r' → logprob: -13.750940322875977
    8. '[' → logprob: -14.125940322875977
    9. '1' → logprob: -14.125940322875977
    10. '[i' → logprob: -14.250940322875977

Token 120: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1930045634508133
    2. '*' → logprob: -2.193004608154297
    3. '*r' → logprob: -3.193004608154297
    4. 'r' → logprob: -4.068004608154297
    5. ' r' → logprob: -5.193004608154297
    6. ' ' → logprob: -9.318004608154297
    7. '   ' → logprob: -9.693004608154297
    8. '_r' → logprob: -10.443004608154297
    9. '```' → logprob: -11.443004608154297
    10. ')' → logprob: -11.943004608154297

Token 121: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.023247458040714264
    2. ' r' → logprob: -3.773247480392456
    3. 'ri' → logprob: -14.773247718811035
    4. '(' → logprob: -15.023247718811035
    5. ' (' → logprob: -15.148247718811035
    6. '(r' → logprob: -15.148247718811035
    7. '_r' → logprob: -15.273247718811035
    8. ' ' → logprob: -15.398247718811035
    9. '	r' → logprob: -15.773247718811035
    10. '​' → logprob: -17.27324676513672

Token 122: '_j' (ID: 12021)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.6180063486099243
    2. '_j' → logprob: -0.8680063486099243
    3. '_' → logprob: -3.2430062294006348
    4. 'i' → logprob: -6.368006229400635
    5. 'j' → logprob: -8.118006706237793
    6. ' _' → logprob: -10.118006706237793
    7. '__' → logprob: -10.493006706237793
    8. 'import' → logprob: -11.493006706237793
    9. '```' → logprob: -11.993006706237793
    10. ' ' → logprob: -12.118006706237793

Token 123: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012817698530852795
    2. ' )' → logprob: -4.387817859649658
    3. ')
' → logprob: -9.0128173828125
    4. '   ' → logprob: -9.2628173828125
    5. '))' → logprob: -10.1378173828125
    6. 'def' → logprob: -11.2628173828125
    7. ' )
' → logprob: -11.6378173828125
    8. ' ' → logprob: -11.8878173828125
    9. 'import' → logprob: -12.8878173828125
    10. ')))' → logprob: -12.8878173828125

Token 124: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3243820369243622
    2. ')' → logprob: -1.3243820667266846
    3. ' )' → logprob: -5.8243818283081055
    4. '
' → logprob: -6.5743818283081055
    5. 'def' → logprob: -6.5743818283081055
    6. '):' → logprob: -6.6993818283081055
    7. ')
' → logprob: -6.9493818283081055
    8. ' ' → logprob: -7.0743818283081055
    9. '"""' → logprob: -7.8243818283081055
    10. ':' → logprob: -8.324381828308105

Token 125: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34255683422088623
    2. 'width' → logprob: -2.217556953430176
    3. '
' → logprob: -3.342556953430176
    4. 'positions' → logprob: -3.467556953430176
    5. 'def' → logprob: -3.717556953430176
    6. 'radius' → logprob: -4.217556953430176
    7. ' positions' → logprob: -4.467556953430176
    8. 'r' → logprob: -4.467556953430176
    9. ' width' → logprob: -4.717556953430176
    10. ' widths' → logprob: -4.967556953430176

Token 126: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6031522154808044
    2. '(' → logprob: -1.4781522750854492
    3. ',' → logprob: -2.478152275085449
    4. '   ' → logprob: -2.603152275085449
    5. '):' → logprob: -4.353152275085449
    6. '(order' → logprob: -4.353152275085449
    7. '[' → logprob: -4.478152275085449
    8. 'def' → logprob: -4.853152275085449
    9. '(tokens' → logprob: -5.478152275085449
    10. ' :' → logprob: -6.478152275085449

Token 127: '       ' (ID: 309)
  Prédit: ' order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.3311638832092285
    2. ' orders' → logprob: -1.7061638832092285
    3. '   ' → logprob: -3.2061638832092285
    4. ' self' → logprob: -3.9561638832092285
    5. 'order' → logprob: -4.2061638832092285
    6. ' widths' → logprob: -5.3311638832092285
    7. ' ordre' → logprob: -5.3311638832092285
    8. ' radius' → logprob: -5.8311638832092285
    9. ' r' → logprob: -6.4561638832092285
    10. 'orders' → logprob: -6.8311638832092285

Token 128: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' (adapté à ' order') → logprob: -0.11015795171260834
    2. ' order' → logprob: -2.3601579666137695
    3. 'r' → logprob: -5.2351579666137695
    4. 'orders' → logprob: -6.4851579666137695
    5. 'self' → logprob: -6.7351579666137695
    6. '   ' → logprob: -7.4851579666137695
    7. 'radius' → logprob: -8.36015796661377
    8. 'ordre' → logprob: -8.61015796661377
    9. ' ordre' → logprob: -8.98515796661377
    10. ' self' → logprob: -9.23515796661377

Token 129: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.025814233347773552
    2. ':' → logprob: -3.9008142948150635
    3. '):
' → logprob: -5.650814056396484
    4. ' ):' → logprob: -6.900814056396484
    5. ' :' → logprob: -7.900814056396484
    6. ',' → logprob: -8.650814056396484
    7. '<|end|>' → logprob: -10.025814056396484
    8. '   ' → logprob: -10.150814056396484
    9. ')' → logprob: -10.650814056396484
    10. '):

' → logprob: -11.400814056396484

Token 130: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.06380534172058105
    2. '):' → logprob: -3.063805341720581
    3. ' list' → logprob: -4.56380558013916
    4. 'List' → logprob: -5.81380558013916
    5. ')' → logprob: -6.93880558013916
    6. '[list' → logprob: -8.31380558013916
    7. ':list' → logprob: -8.43880558013916
    8. ' List' → logprob: -10.18880558013916
    9. '):
' → logprob: -10.31380558013916
    10. '[List' → logprob: -10.43880558013916

Token 131: ' of' (ID: 328)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.15353037416934967
    2. ')' → logprob: -2.2785303592681885
    3. '[int' → logprob: -3.5285303592681885
    4. '[' → logprob: -4.903530597686768
    5. '):
' → logprob: -6.778530597686768
    6. ',' → logprob: -7.778530597686768
    7. '<|end|>' → logprob: -7.903530597686768
    8. '   ' → logprob: -8.15353012084961
    9. ' of' → logprob: -8.90353012084961
    10. ' ):' → logprob: -9.15353012084961

Token 132: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.021787814795970917
    2. 'float' → logprob: -4.396787643432617
    3. ' int' → logprob: -4.771787643432617
    4. ' float' → logprob: -7.771787643432617
    5. 'ints' → logprob: -8.396787643432617
    6. ' floats' → logprob: -9.896787643432617
    7. 'flo' → logprob: -10.521787643432617
    8. ' ints' → logprob: -11.146787643432617
    9. '[int' → logprob: -11.271787643432617
    10. ')' → logprob: -12.271787643432617

Token 133: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10807395726442337
    2. ')' → logprob: -2.6080739498138428
    3. '):
' → logprob: -3.6080739498138428
    4. ' ):' → logprob: -7.108074188232422
    5. '   ' → logprob: -8.108074188232422
    6. '):

' → logprob: -8.358074188232422
    7. ' )' → logprob: -9.608074188232422
    8. '[int' → logprob: -9.733074188232422
    9. '[' → logprob: -10.608074188232422
    10. '[]):' → logprob: -10.608074188232422

Token 134: ' Ord' (ID: 40485)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0465439558029175
    2. '   ' → logprob: -1.0465439558029175
    3. ' #' → logprob: -2.421544075012207
    4. '<|end|>' → logprob: -3.046544075012207
    5. ' indices' → logprob: -3.296544075012207
    6. ' The' → logprob: -3.671544075012207
    7. '#' → logprob: -3.671544075012207
    8. '    ' → logprob: -4.421544075012207
    9. ' La' → logprob: -4.421544075012207
    10. 'Indices' → logprob: -4.546544075012207

Token 135: 're' (ID: 264)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.2237093299627304
    2. 'ers' → logprob: -2.4737093448638916
    3. '   ' → logprob: -2.5987093448638916
    4. '[' → logprob: -5.0987091064453125
    5. 'eur' → logprob: -5.0987091064453125
    6. 'inaire' → logprob: -5.0987091064453125
    7. 'eurs' → logprob: -5.3487091064453125
    8. '[]' → logprob: -5.8487091064453125
    9. 'ur' → logprob: -6.5987091064453125
    10. ' ' → logprob: -6.7237091064453125

Token 136: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.8537936210632324
    2. '):' → logprob: -1.2287936210632324
    3. ')' → logprob: -2.1037936210632324
    4. '_des' → logprob: -3.3537936210632324
    5. ' de' → logprob: -3.9787936210632324
    6. '   ' → logprob: -4.103793621063232
    7. ',' → logprob: -4.353793621063232
    8. '_' → logprob: -4.478793621063232
    9. ' of' → logprob: -4.603793621063232
    10. ' =' → logprob: -4.978793621063232

Token 137: ' ray' (ID: 22420)
  Prédit: ' indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' indices' → logprob: -1.153998613357544
    2. 'rou' → logprob: -1.403998613357544
    3. ' indexes' → logprob: -2.028998613357544
    4. ' ray' → logprob: -2.528998613357544
    5. ' roule' → logprob: -2.778998613357544
    6. ' rou' → logprob: -3.903998613357544
    7. 'indexes' → logprob: -4.028998374938965
    8. 'indices' → logprob: -4.028998374938965
    9. ' cakes' → logprob: -4.153998374938965
    10. 'r' → logprob: -4.278998374938965

Token 138: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.001118903630413115
    2. 'es' → logprob: -7.501119136810303
    3. 'on' → logprob: -8.501118659973145
    4. 's' → logprob: -8.751118659973145
    5. 'aux' → logprob: -9.501118659973145
    6. 'onnes' → logprob: -10.001118659973145
    7. 'onn' → logprob: -10.376118659973145
    8. 'os' → logprob: -10.501118659973145
    9. '_' → logprob: -13.001118659973145
    10. '   ' → logprob: -13.126118659973145

Token 139: ' des' (ID: 731)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.23144632577896118
    2. '   ' → logprob: -2.3564462661743164
    3. ')' → logprob: -2.8564462661743164
    4. '):
' → logprob: -3.2314462661743164
    5. ' ):' → logprob: -4.481446266174316
    6. ' )' → logprob: -6.481446266174316
    7. ' ):
' → logprob: -7.231446266174316
    8. '):
' → logprob: -8.106446266174316
    9. ',' → logprob: -8.231446266174316
    10. 'def' → logprob: -9.356446266174316

Token 140: ' g' (ID: 329)
  Prédit: 'rou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rou' → logprob: -0.5425569415092468
    2. ' roule' → logprob: -2.1675570011138916
    3. ' cakes' → logprob: -2.2925570011138916
    4. ' roul' → logprob: -2.9175570011138916
    5. 'cakes' → logprob: -3.0425570011138916
    6. ' rou' → logprob: -3.2925570011138916
    7. 'r' → logprob: -4.4175567626953125
    8. 'roll' → logprob: -4.5425567626953125
    9. ' g' → logprob: -4.9175567626953125
    10. 'g' → logprob: -5.6675567626953125

Token 141: 'âteaux' (ID: 185889)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.06907392293214798
    2. '[' → logprob: -4.1940741539001465
    3. ' r' → logprob: -4.1940741539001465
    4. ')' → logprob: -5.0690741539001465
    5. ' order' → logprob: -5.3190741539001465
    6. 'âteaux' → logprob: -5.6940741539001465
    7. 'order' → logprob: -6.0690741539001465
    8. 'ray' → logprob: -6.0690741539001465
    9. 'enerated' → logprob: -6.3190741539001465
    10. '(' → logprob: -6.5690741539001465

Token 142: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8758457899093628
    2. ')' → logprob: -1.2508457899093628
    3. '):
' → logprob: -1.7508457899093628
    4. '):' → logprob: -2.1258459091186523
    5. ' )' → logprob: -6.875845909118652
    6. '
' → logprob: -6.875845909118652
    7. '):

' → logprob: -7.875845909118652
    8. ' ):
' → logprob: -7.875845909118652
    9. ' ):' → logprob: -8.250845909118652
    10. '```' → logprob: -8.625845909118652

Token 143: '   ' (ID: 271)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6705361008644104
    2. ')' → logprob: -0.9205361008644104
    3. '   ' → logprob: -2.4205360412597656
    4. '"""' → logprob: -7.420536041259766
    5. '):
' → logprob: -8.170536041259766
    6. ' ):' → logprob: -8.295536041259766
    7. ':' → logprob: -9.545536041259766
    8. ' )' → logprob: -9.795536041259766
    9. '    ' → logprob: -10.545536041259766
    10. ' ' → logprob: -10.545536041259766

Token 144: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11837231367826462
    2. ')' → logprob: -2.9933722019195557
    3. '"""' → logprob: -3.1183722019195557
    4. 'Returns' (adapté à ' Returns') → logprob: -4.743372440338135
    5. '):' → logprob: -5.743372440338135
    6. ' """' → logprob: -6.118372440338135
    7. '"""
' → logprob: -6.743372440338135
    8. ' """
' → logprob: -6.993372440338135
    9. '```' → logprob: -8.118371963500977
    10. ' Returns' → logprob: -8.618371963500977

Token 145: ':
' (ID: 734)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.25223591923713684
    2. ':' → logprob: -1.5022358894348145
    3. ' int' → logprob: -9.127236366271973
    4. ' ):' → logprob: -10.127236366271973
    5. '   ' → logprob: -10.377236366271973
    6. ' (' → logprob: -10.752236366271973
    7. ':int' → logprob: -10.877236366271973
    8. ' ' → logprob: -11.002236366271973
    9. '):' → logprob: -11.127236366271973
    10. '```' → logprob: -11.877236366271973

Token 146: '       ' (ID: 309)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.06001409888267517
    2. '   ' → logprob: -3.185014009475708
    3. ' int' → logprob: -4.185014247894287
    4. 'float' → logprob: -6.810014247894287
    5. '    ' → logprob: -7.935014247894287
    6. 'int' → logprob: -8.810013771057129
    7. '       ' → logprob: -10.810013771057129
    8. ' ' → logprob: -12.310013771057129
    9. '(float' → logprob: -12.810013771057129
    10. ' ' → logprob: -12.935013771057129

Token 147: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' (adapté à ' float') → logprob: -0.17787909507751465
    2. ' float' → logprob: -2.0528790950775146
    3. 'int' → logprob: -3.4278790950775146
    4. ' int' → logprob: -6.177879333496094
    5. '   ' → logprob: -9.927879333496094
    6. '(float' → logprob: -12.927879333496094
    7. 'Float' → logprob: -13.052879333496094
    8. '
' → logprob: -13.927879333496094
    9. '       ' → logprob: -14.177879333496094
    10. 'width' → logprob: -14.302879333496094

Token 148: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06396100670099258
    2. ' :' → logprob: -2.8139610290527344
    3. '   ' → logprob: -6.688961029052734
    4. ' :
' → logprob: -8.313961029052734
    5. ':
' → logprob: -8.313961029052734
    6. '):' → logprob: -9.688961029052734
    7. '    ' → logprob: -9.938961029052734
    8. ':return' → logprob: -10.438961029052734
    9. '
' → logprob: -10.688961029052734
    10. '   
' → logprob: -11.063961029052734

Token 149: ' Large' (ID: 27976)
  Prédit: ' La'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' La' → logprob: -0.1305500566959381
    2. ' Large' → logprob: -2.6305501461029053
    3. '   ' → logprob: -3.7555501461029053
    4. ' la' → logprob: -4.630549907684326
    5. 'La' → logprob: -4.630549907684326
    6. ' largeur' → logprob: -6.130549907684326
    7. 'Large' → logprob: -6.630549907684326
    8. ' large' → logprob: -7.005549907684326
    9. ' sum' → logprob: -7.005549907684326
    10. ' Le' → logprob: -7.005549907684326

Token 150: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.02160455845296383
    2. 'ure' → logprob: -3.896604537963867
    3. 'ueur' → logprob: -7.521604537963867
    4. 'eur' → logprob: -7.646604537963867
    5. 'r' → logprob: -11.021604537963867
    6. '   ' → logprob: -11.896604537963867
    7. 'e' → logprob: -11.896604537963867
    8. ' return' → logprob: -13.521604537963867
    9. ' ' → logprob: -13.646604537963867
    10. '_' → logprob: -13.771604537963867

Token 151: ' totale' (ID: 52898)
  Prédit: ' totale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' totale' → logprob: -0.043856386095285416
    2. '_' → logprob: -4.168856620788574
    3. ' nécessaire' → logprob: -4.668856620788574
    4. '_tot' → logprob: -4.668856620788574
    5. '_total' → logprob: -5.543856620788574
    6. '   ' → logprob: -5.793856620788574
    7. ' necess' → logprob: -7.668856620788574
    8. ' total' → logprob: -7.793856620788574
    9. 'tot' → logprob: -8.793856620788574
    10. ' complète' → logprob: -8.918856620788574

Token 152: ' occup' (ID: 14815)
  Prédit: ' nécessaire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nécessaire' → logprob: -0.08666609972715378
    2. '   ' → logprob: -2.8366661071777344
    3. ' du' → logprob: -4.836666107177734
    4. ' nécessaires' → logprob: -5.461666107177734
    5. ' requ' → logprob: -5.836666107177734
    6. ' necess' → logprob: -6.086666107177734
    7. '_needed' → logprob: -6.711666107177734
    8. '_' → logprob: -7.086666107177734
    9. '_required' → logprob: -7.211666107177734
    10. ' necessary' → logprob: -7.586666107177734

Token 153: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.010494716465473175
    2. 'ee' → logprob: -4.635494709014893
    3. 'é' → logprob: -7.760494709014893
    4. 'e' → logprob: -8.13549518585205
    5. '   ' → logprob: -11.76049518585205
    6. 'y' → logprob: -12.38549518585205
    7. 'ie' → logprob: -13.01049518585205
    8. '```' → logprob: -14.26049518585205
    9. 'rée' → logprob: -14.38549518585205
    10. 'ed' → logprob: -14.63549518585205

Token 154: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12170324474573135
    2. ' par' → logprob: -2.6217031478881836
    3. ' by' → logprob: -3.3717031478881836
    4. ':' → logprob: -6.246703147888184
    5. ')' → logprob: -6.371703147888184
    6. ',' → logprob: -7.496703147888184
    7. ' =' → logprob: -7.496703147888184
    8. 'par' → logprob: -7.871703147888184
    9. ' (' → logprob: -7.871703147888184
    10. 'def' → logprob: -8.246703147888184

Token 155: ' cet' (ID: 19505)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.31652671098709106
    2. ' le' → logprob: -1.5665266513824463
    3. ' la' → logprob: -3.3165266513824463
    4. 'l' → logprob: -5.191526889801025
    5. 'le' → logprob: -5.316526889801025
    6. '   ' → logprob: -5.441526889801025
    7. ' horizontal' → logprob: -5.441526889801025
    8. ' ' → logprob: -5.816526889801025
    9. 'x' → logprob: -6.191526889801025
    10. ' x' → logprob: -7.441526889801025

Token 156: ' ordre' (ID: 103061)
  Prédit: ' ordre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ordre' → logprob: -0.278937965631485
    2. ' order' → logprob: -1.5289379358291626
    3. ' espace' → logprob: -4.028937816619873
    4. 'ordre' → logprob: -5.653937816619873
    5. 'order' → logprob: -6.653937816619873
    6. 'e' → logprob: -6.653937816619873
    7. ' ' → logprob: -7.403937816619873
    8. ' cas' → logprob: -7.653937816619873
    9. ' space' → logprob: -8.028938293457031
    10. ' arrangement' → logprob: -8.278938293457031

Token 157: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19231897592544556
    2. '.' → logprob: -2.192318916320801
    3. ':' → logprob: -3.567318916320801
    4. 'def' → logprob: -4.067318916320801
    5. ')' → logprob: -4.942318916320801
    6. '):' → logprob: -5.692318916320801
    7. ',' → logprob: -5.817318916320801
    8. '
' → logprob: -6.692318916320801
    9. '```' → logprob: -7.067318916320801
    10. '.
' → logprob: -7.942318916320801

Token 158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12713734805583954
    2. '"""' → logprob: -2.3771374225616455
    3. ')' → logprob: -4.002137184143066
    4. '
' → logprob: -5.752137184143066
    5. '):' → logprob: -6.252137184143066
    6. '"""
' → logprob: -6.877137184143066
    7. 'def' → logprob: -7.752137184143066
    8. '```' → logprob: -7.877137184143066
    9. '    
' → logprob: -8.002137184143066
    10. '\n' → logprob: -8.127137184143066

Token 159: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011352897621691227
    2. ')' → logprob: -5.511353015899658
    3. '"""' → logprob: -5.636353015899658
    4. ':' → logprob: -6.511353015899658
    5. '):' → logprob: -6.761353015899658
    6. '):
' → logprob: -8.1363525390625
    7. 'def' → logprob: -8.2613525390625
    8. '    
' → logprob: -8.7613525390625
    9. '"""
' (adapté à ' """
') → logprob: -9.3863525390625
    10. '
' → logprob: -10.1363525390625

Token 160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009669321589171886
    2. ' width' → logprob: -5.634669303894043
    3. ' total' → logprob: -6.134669303894043
    4. ' if' → logprob: -6.509669303894043
    5. 'width' → logprob: -6.509669303894043
    6. 'total' → logprob: -7.259669303894043
    7. 'if' → logprob: -9.259669303894043
    8. ' spacing' → logprob: -10.384669303894043
    9. ' length' → logprob: -10.634669303894043
    10. 'length' → logprob: -11.509669303894043

Token 161: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.8240477442741394
    2. '   ' → logprob: -1.1990478038787842
    3. 'width' → logprob: -2.199047803878784
    4. ' if' → logprob: -2.574047803878784
    5. 'total' → logprob: -3.199047803878784
    6. ' width' → logprob: -4.324047565460205
    7. 'n' → logprob: -5.199047565460205
    8. ' total' → logprob: -5.324047565460205
    9. 'position' → logprob: -6.574047565460205
    10. 'x' → logprob: -6.824047565460205

Token 162: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.33414381742477417
    2. 'len' → logprob: -1.584143877029419
    3. ' not' → logprob: -2.584143877029419
    4. ' len' → logprob: -5.70914363861084
    5. '   ' → logprob: -8.83414363861084
    6. '(len' → logprob: -13.45914363861084
    7. ' ' → logprob: -14.58414363861084
    8. '!' → logprob: -14.58414363861084
    9. '```' → logprob: -14.95914363861084
    10. '	not' → logprob: -15.20914363861084

Token 163: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.023246755823493004
    2. ' order' → logprob: -3.7732467651367188
    3. '   ' → logprob: -14.273246765136719
    4. '	order' → logprob: -15.648246765136719
    5. ' ' → logprob: -16.39824676513672
    6. '(order' → logprob: -16.52324676513672
    7. 'Order' → logprob: -17.27324676513672
    8. 'len' → logprob: -17.27324676513672
    9. '$order' → logprob: -17.77324676513672
    10. 'orders' → logprob: -18.39824676513672

Token 164: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12725040316581726
    2. ':
' → logprob: -2.1272504329681396
    3. ' or' → logprob: -8.627250671386719
    4. ':return' → logprob: -9.002250671386719
    5. 'or' → logprob: -11.002250671386719
    6. '[' → logprob: -14.002250671386719
    7. '   ' → logprob: -14.127250671386719
    8. ':

' → logprob: -14.752250671386719
    9. ':
' → logprob: -14.877250671386719
    10. ' :' → logprob: -15.377250671386719

Token 165: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009124542586505413
    2. '0' → logprob: -5.759124755859375
    3. ' return' → logprob: -6.009124755859375
    4. ':' → logprob: -6.759124755859375
    5. ':
' → logprob: -6.884124755859375
    6. '   ' → logprob: -7.259124755859375
    7. 'return' → logprob: -8.009124755859375
    8. ':return' → logprob: -9.884124755859375
    9. '
' → logprob: -10.009124755859375
    10. ' ' → logprob: -11.009124755859375

Token 166: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.39146187901496887
    2. ' return' → logprob: -1.1414618492126465
    3. '   ' → logprob: -5.3914618492126465
    4. '0' → logprob: -11.391462326049805
    5. '       ' → logprob: -11.516462326049805
    6. '    ' → logprob: -13.266462326049805
    7. ' ' → logprob: -14.141462326049805
    8. '	return' → logprob: -14.641462326049805
    9. '  ' → logprob: -15.641462326049805
    10. ':return' → logprob: -15.641462326049805

Token 167: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1269291490316391
    2. ' ' → logprob: -2.1269290447235107
    3. '   ' → logprob: -14.37692928314209
    4. ' ' → logprob: -14.62692928314209
    5. '  ' → logprob: -17.001928329467773
    6. ' 
' → logprob: -19.439428329467773
    7. '
' → logprob: -19.876928329467773
    8. '1' → logprob: -19.939428329467773
    9. '    ' → logprob: -20.001928329467773
    10. '```' → logprob: -20.376928329467773

Token 168: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -16.7500057220459
    4. 'float' → logprob: -19.0000057220459
    5. '  ' → logprob: -19.1250057220459
    6. '00' → logprob: -19.5000057220459
    7. '۰' → logprob: -19.5625057220459
    8. '```' → logprob: -19.5625057220459
    9. '000' → logprob: -20.0625057220459
    10. 'return' → logprob: -20.1250057220459

Token 169: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8514885306358337
    2. '    
' → logprob: -1.2264885902404785
    3. 'width' → logprob: -2.1014885902404785
    4. '
' → logprob: -2.4764885902404785
    5. ' 
' → logprob: -4.1014885902404785
    6. ' width' → logprob: -4.1014885902404785
    7. 'return' → logprob: -4.1014885902404785
    8. '   
' → logprob: -4.8514885902404785
    9. ' return' → logprob: -5.4764885902404785
    10. '0' → logprob: -5.9764885902404785

Token 170: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33924904465675354
    2. 'width' → logprob: -1.4642490148544312
    3. ' width' → logprob: -3.3392491340637207
    4. 'total' → logprob: -4.089249134063721
    5. ' total' → logprob: -5.839249134063721
    6. 'position' → logprob: -7.839249134063721
    7. 'x' → logprob: -8.714248657226562
    8. ' largeur' → logprob: -8.714248657226562
    9. 'pos' → logprob: -8.839248657226562
    10. '    
' → logprob: -9.589248657226562

Token 171: ' #' (ID: 1069)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.5870618224143982
    2. 'positions' → logprob: -1.962061882019043
    3. '   ' → logprob: -2.337061882019043
    4. 'position' → logprob: -2.462061882019043
    5. 'pos' → logprob: -2.837061882019043
    6. 'x' → logprob: -3.212061882019043
    7. 'total' → logprob: -3.837061882019043
    8. ' width' → logprob: -8.337061882019043
    9. 'distance' → logprob: -8.587061882019043
    10. 'current' → logprob: -8.712061882019043

Token 172: ' Position' (ID: 21829)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.0737210065126419
    2. 'width' → logprob: -3.823720932006836
    3. 'pos' → logprob: -4.198720932006836
    4. ' positions' → logprob: -4.323720932006836
    5. 'position' → logprob: -4.698720932006836
    6. 'x' → logprob: -5.323720932006836
    7. '   ' → logprob: -5.698720932006836
    8. 'total' → logprob: -6.573720932006836
    9. ' width' → logprob: -7.448720932006836
    10. ' pos' → logprob: -7.448720932006836

Token 173: ' x' (ID: 1215)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0032938052900135517
    2. ' =' → logprob: -5.753293991088867
    3. '_x' → logprob: -9.503293991088867
    4. '=' → logprob: -10.503293991088867
    5. '_positions' → logprob: -12.378293991088867
    6. 'x' → logprob: -12.628293991088867
    7. 'es' → logprob: -13.253293991088867
    8. '_s' → logprob: -13.628293991088867
    9. '   ' → logprob: -13.878293991088867
    10. ' s' → logprob: -13.878293991088867

Token 174: ' du' (ID: 1462)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6824565529823303
    2. ' =' → logprob: -0.9324565529823303
    3. '_positions' → logprob: -2.3074564933776855
    4. 'es' → logprob: -7.1824564933776855
    5. '=' → logprob: -7.8074564933776855
    6. '_pos' → logprob: -8.807456970214844
    7. '   ' → logprob: -9.932456970214844
    8. 'positions' → logprob: -10.182456970214844
    9. '_list' → logprob: -10.807456970214844
    10. '_s' → logprob: -10.932456970214844

Token 175: ' centre' (ID: 13268)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.5994621515274048
    2. ' order' → logprob: -1.3494621515274048
    3. 'cent' → logprob: -2.8494620323181152
    4. '0' → logprob: -3.5994620323181152
    5. 'r' → logprob: -3.8494620323181152
    6. ' centers' → logprob: -4.099462032318115
    7. 'cir' → logprob: -4.224462032318115
    8. 'positions' → logprob: -4.474462032318115
    9. 'current' → logprob: -5.224462032318115
    10. ' ' → logprob: -5.599462032318115

Token 176: ' du' (ID: 1462)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43994930386543274
    2. '   ' → logprob: -1.1899492740631104
    3. 's' → logprob: -4.0649495124816895
    4. ' du' → logprob: -4.4399495124816895
    5. 'x' → logprob: -5.6899495124816895
    6. ' des' → logprob: -5.8149495124816895
    7. '=' → logprob: -5.9399495124816895
    8. ' x' → logprob: -5.9399495124816895
    9. '_x' → logprob: -5.9399495124816895
    10. 'current' → logprob: -6.6899495124816895

Token 177: ' premier' (ID: 15506)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.5686929225921631
    2. ' first' → logprob: -1.943692922592163
    3. 'first' → logprob: -2.568692922592163
    4. 'prem' → logprob: -2.568692922592163
    5. ' order' → logprob: -2.693692922592163
    6. ' premier' → logprob: -3.193692922592163
    7. 'cer' → logprob: -4.318693161010742
    8. 'c' → logprob: -5.318693161010742
    9. 'circle' → logprob: -5.693693161010742
    10. ' cercle' → logprob: -5.818693161010742

Token 178: ' gâteau' (ID: 182549)
  Prédit: ' cake'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cake' → logprob: -1.3628215789794922
    2. 'circle' → logprob: -1.7378215789794922
    3. 'cake' → logprob: -1.9878215789794922
    4. ' cercle' → logprob: -1.9878215789794922
    5. 'c' → logprob: -2.112821578979492
    6. ' circle' → logprob: -2.362821578979492
    7. ' gâteau' → logprob: -3.487821578979492
    8. '_c' → logprob: -4.362821578979492
    9. ' order' → logprob: -4.987821578979492
    10. 'g' → logprob: -5.112821578979492

Token 179: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5923175811767578
    2. '   ' → logprob: -0.8423175811767578
    3. '=' → logprob: -4.967317581176758
    4. 'x' → logprob: -5.342317581176758
    5. ' x' → logprob: -5.467317581176758
    6. '_x' → logprob: -10.217317581176758
    7. '    ' → logprob: -10.217317581176758
    8. '  ' → logprob: -10.467317581176758
    9. '[' → logprob: -10.967317581176758
    10. 'positions' → logprob: -10.967317581176758

Token 180: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05176416411995888
    2. 'x' → logprob: -3.0517642498016357
    3. ' x' → logprob: -6.426764011383057
    4. 'positions' → logprob: -7.926764011383057
    5. 'pos' → logprob: -8.051764488220215
    6. ' =' → logprob: -8.301764488220215
    7. '=' → logprob: -8.926764488220215
    8. 'position' → logprob: -9.051764488220215
    9. 'current' → logprob: -9.426764488220215
    10. '0' → logprob: -9.551764488220215

Token 181: ' positions' (ID: 15897)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.37975725531578064
    2. 'positions' (adapté à ' positions') → logprob: -1.629757285118103
    3. 'pos' → logprob: -2.7547571659088135
    4. 'position' → logprob: -3.3797571659088135
    5. 'current' → logprob: -4.504757404327393
    6. 'width' → logprob: -5.129757404327393
    7. '   ' → logprob: -5.629757404327393
    8. 'center' → logprob: -7.754757404327393
    9. ' positions' → logprob: -7.879757404327393
    10. ' x' → logprob: -8.004756927490234

Token 182: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038101620972156525
    2. '=' → logprob: -3.2881016731262207
    3. '[' → logprob: -9.788101196289062
    4. ' =[' → logprob: -13.288101196289062
    5. ' ' → logprob: -14.288101196289062
    6. '=[' → logprob: -14.413101196289062
    7. ')' → logprob: -15.288101196289062
    8. '   ' → logprob: -15.288101196289062
    9. 's' → logprob: -15.788101196289062
    10. '```' → logprob: -15.788101196289062

Token 183: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006022418383508921
    2. ' [' → logprob: -7.5006022453308105
    3. '[r' → logprob: -10.125601768493652
    4. '[pos' → logprob: -13.875601768493652
    5. '[o' → logprob: -13.875601768493652
    6. '[root' → logprob: -13.875601768493652
    7. '[result' → logprob: -14.125601768493652
    8. '[len' → logprob: -14.125601768493652
    9. '[p' → logprob: -14.250601768493652
    10. '[class' → logprob: -14.625601768493652

Token 184: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.05542457848787308
    2. '0' → logprob: -2.930424690246582
    3. ' order' → logprob: -7.805424690246582
    4. ' ' → logprob: -9.930424690246582
    5. 'orders' → logprob: -10.930424690246582
    6. '[' → logprob: -11.055424690246582
    7. 'positions' → logprob: -11.180424690246582
    8. 'math' → logprob: -12.055424690246582
    9. 'float' → logprob: -12.305424690246582
    10. 'r' → logprob: -12.305424690246582

Token 185: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00029959288076497614
    2. '.index' → logprob: -8.375299453735352
    3. ']' → logprob: -10.500299453735352
    4. '0' → logprob: -11.125299453735352
    5. 'index' → logprob: -12.125299453735352
    6. '][' → logprob: -12.625299453735352
    7. '   ' → logprob: -12.875299453735352
    8. '])' → logprob: -13.000299453735352
    9. ' [' → logprob: -13.000299453735352
    10. '.' → logprob: -13.000299453735352

Token 186: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.822646693966817e-06
    2. ' ' → logprob: -12.000007629394531
    3. ']' → logprob: -14.125007629394531
    4. '])' → logprob: -14.250007629394531
    5. '1' → logprob: -16.75000762939453
    6. '   ' → logprob: -17.25000762939453
    7. '[' → logprob: -17.50000762939453
    8. ']]' → logprob: -17.87500762939453
    9. ':' → logprob: -18.00000762939453
    10. '])]' → logprob: -18.00000762939453

Token 187: ']]
' (ID: 29446)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0312212705612183
    2. ']' → logprob: -1.1562212705612183
    3. ')]' → logprob: -1.6562212705612183
    4. ']]' → logprob: -2.156221389770508
    5. ')' → logprob: -4.781221389770508
    6. '/' → logprob: -5.281221389770508
    7. ' /' → logprob: -5.406221389770508
    8. '])' → logprob: -6.281221389770508
    9. '])]' → logprob: -7.656221389770508
    10. ' ' → logprob: -8.156221389770508

Token 188: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7436927556991577
    2. 'for' → logprob: -1.2436927556991577
    3. ' for' → logprob: -2.1186928749084473
    4. ' +' → logprob: -3.1186928749084473
    5. '+' → logprob: -3.6186928749084473
    6. '
' → logprob: -4.618692874908447
    7. '*' → logprob: -5.118692874908447
    8. ')' → logprob: -5.118692874908447
    9. '0' → logprob: -5.368692874908447
    10. ' *' → logprob: -5.493692874908447

Token 189: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2923811376094818
    2. ' for' → logprob: -1.4173811674118042
    3. '   ' → logprob: -4.792381286621094
    4. 'x' → logprob: -6.417381286621094
    5. 'width' → logprob: -7.417381286621094
    6. ' x' → logprob: -9.292381286621094
    7. '*' → logprob: -9.292381286621094
    8. '
' → logprob: -10.042381286621094
    9. '    
' → logprob: -10.042381286621094
    10. ' width' → logprob: -10.167381286621094

Token 190: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16026261448860168
    2. 'i' → logprob: -1.9102625846862793
    3. '   ' → logprob: -10.660263061523438
    4. '	i' → logprob: -12.160263061523438
    5. ' ' → logprob: -12.285263061523438
    6. '  ' → logprob: -13.535263061523438
    7. ' idx' → logprob: -13.910263061523438
    8. '    ' → logprob: -14.660263061523438
    9. '_i' → logprob: -14.910263061523438
    10. '(i' → logprob: -15.035263061523438

Token 191: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004655830562114716
    2. 'in' → logprob: -5.379655838012695
    3. ' ' → logprob: -10.879655838012695
    4. ',' → logprob: -12.129655838012695
    5. '   ' → logprob: -12.629655838012695
    6. '1' → logprob: -13.379655838012695
    7. '  ' → logprob: -13.754655838012695
    8. '	in' → logprob: -14.004655838012695
    9. '_in' → logprob: -14.379655838012695
    10. ' ' → logprob: -14.629655838012695

Token 192: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029751643538475037
    2. ' range' → logprob: -3.5297515392303467
    3. ' ' → logprob: -14.654751777648926
    4. '  ' → logprob: -15.404751777648926
    5. '   ' → logprob: -15.654751777648926
    6. '1' → logprob: -15.779751777648926
    7. '(range' → logprob: -15.904751777648926
    8. '	range' → logprob: -17.15475082397461
    9. 'ange' → logprob: -17.27975082397461
    10. ')' → logprob: -17.65475082397461

Token 193: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.900034299585968e-05
    2. '1' → logprob: -9.500088691711426
    3. '(len' → logprob: -11.625088691711426
    4. ' (' → logprob: -12.875088691711426
    5. '   ' → logprob: -13.375088691711426
    6. ' ' → logprob: -14.250088691711426
    7. 'len' → logprob: -14.750088691711426
    8. '(i' → logprob: -18.000089645385742
    9. '(
' → logprob: -18.250089645385742
    10. ' len' → logprob: -18.500089645385742

Token 194: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.3458322731312364e-06
    2. 'len' → logprob: -12.125007629394531
    3. ' ' → logprob: -13.375007629394531
    4. '   ' → logprob: -14.875007629394531
    5. '0' → logprob: -19.50000762939453
    6. ' len' → logprob: -19.75000762939453
    7. '  ' → logprob: -20.00000762939453
    8. '2' → logprob: -20.25000762939453
    9. '(' → logprob: -20.37500762939453
    10. '    ' → logprob: -20.50000762939453

Token 195: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009368319297209382
    2. ' ,' → logprob: -7.500936985015869
    3. ',len' → logprob: -7.875936985015869
    4. 'len' → logprob: -12.875936508178711
    5. '(len' → logprob: -14.125936508178711
    6. ' len' → logprob: -16.00093650817871
    7. '   ' → logprob: -16.25093650817871
    8. ' ' → logprob: -16.37593650817871
    9. '):
' → logprob: -16.50093650817871
    10. '<len' → logprob: -16.62593650817871

Token 196: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -3.7697225252486533e-06
    2. ' len' → logprob: -12.500003814697266
    3. '   ' → logprob: -18.125003814697266
    4. 'length' → logprob: -20.250003814697266
    5. '(len' → logprob: -22.750003814697266
    6. ' ' → logprob: -23.875003814697266
    7. '	len' → logprob: -24.000003814697266
    8. '[len' → logprob: -24.125003814697266
    9. '       ' → logprob: -24.375003814697266
    10. '=len' → logprob: -24.500003814697266

Token 197: '(order' (ID: 33050)
  Prédit: '(order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(order' → logprob: -0.00030697984038852155
    2. 'order' → logprob: -8.625307083129883
    3. '(' → logprob: -9.000307083129883
    4. ' order' → logprob: -12.875307083129883
    5. ')' → logprob: -14.375307083129883
    6. '(ord' → logprob: -15.250307083129883
    7. ' (' → logprob: -15.500307083129883
    8. '$order' → logprob: -15.875307083129883
    9. '	order' → logprob: -16.125307083129883
    10. '(
' → logprob: -16.500307083129883

Token 198: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.015005489811301231
    2. '):' → logprob: -4.515005588531494
    3. ')):
' → logprob: -5.890005588531494
    4. ')' → logprob: -7.265005588531494
    5. ']):
' → logprob: -8.140005111694336
    6. ' ):
' → logprob: -9.640005111694336
    7. ')):' → logprob: -10.015005111694336
    8. '   ' → logprob: -10.640005111694336
    9. ']):' → logprob: -11.015005111694336
    10. '):
' → logprob: -11.265005111694336

Token 199: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022027131635695696
    2. ' spacing' → logprob: -7.00220251083374
    3. ' distance' → logprob: -8.127202987670898
    4. 'd' → logprob: -8.752202987670898
    5. 'distance' → logprob: -8.877202987670898
    6. '   ' → logprob: -9.252202987670898
    7. ' x' → logprob: -9.252202987670898
    8. '        
' → logprob: -9.877202987670898
    9. ' d' → logprob: -10.127202987670898
    10. ' distances' → logprob: -10.127202987670898

Token 200: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8989602327346802
    2. 'prev' → logprob: -1.3989602327346802
    3. 'pos' → logprob: -2.0239601135253906
    4. 'distance' → logprob: -2.3989601135253906
    5. 'positions' → logprob: -2.8989601135253906
    6. 'x' → logprob: -4.273960113525391
    7. ' prev' → logprob: -4.273960113525391
    8. 'dist' → logprob: -4.773960113525391
    9. ' pos' → logprob: -4.898960113525391
    10. ' positions' → logprob: -5.398960113525391

Token 201: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.8782920837402344
    2. 'dist' → logprob: -1.0032920837402344
    3. 'prev' → logprob: -3.1282920837402344
    4. 'd' → logprob: -3.1282920837402344
    5. 'positions' → logprob: -3.6282920837402344
    6. 'pos' → logprob: -3.7532920837402344
    7. '   ' → logprob: -3.8782920837402344
    8. ' distance' → logprob: -4.628292083740234
    9. ' dist' → logprob: -4.753292083740234
    10. 'delta' → logprob: -4.878292083740234

Token 202: ' horizont' (ID: 69308)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12329050898551941
    2. '=' → logprob: -2.623290538787842
    3. '_' → logprob: -3.873290538787842
    4. '_between' → logprob: -3.998290538787842
    5. '_prev' → logprob: -6.748290538787842
    6. '_min' → logprob: -6.998290538787842
    7. '_i' → logprob: -7.748290538787842
    8. '   ' → logprob: -7.748290538787842
    9. '_increment' → logprob: -7.998290538787842
    10. '_to' → logprob: -8.248290061950684

Token 203: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.802988588809967
    2. 'al' → logprob: -1.3029885292053223
    3. '   ' → logprob: -1.5529885292053223
    4. '=' → logprob: -4.052988529205322
    5. ' =' → logprob: -4.427988529205322
    6. '_' → logprob: -4.677988529205322
    7. '       ' → logprob: -5.052988529205322
    8. 'aire' → logprob: -5.177988529205322
    9. '[i' → logprob: -5.802988529205322
    10. 'ion' → logprob: -5.802988529205322

Token 204: ' minimale' (ID: 143217)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2526845633983612
    2. ' =' → logprob: -1.5026845932006836
    3. '       ' → logprob: -7.252684593200684
    4. '   ' → logprob: -10.627684593200684
    5. '           ' → logprob: -12.252684593200684
    6. '_prev' → logprob: -12.627684593200684
    7. '_between' → logprob: -12.752684593200684
    8. '        ' → logprob: -13.502684593200684
    9. '_min' → logprob: -13.627684593200684
    10. '_' → logprob: -13.877684593200684

Token 205: ' entre' (ID: 3853)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5860217809677124
    2. ' =' → logprob: -0.8360217809677124
    3. '       ' → logprob: -4.711021900177002
    4. '   ' → logprob: -7.961021900177002
    5. '+=' → logprob: -8.461021423339844
    6. '+' → logprob: -9.586021423339844
    7. ' +=' → logprob: -9.711021423339844
    8. '        ' → logprob: -10.461021423339844
    9. 'import' → logprob: -10.461021423339844
    10. '    ' → logprob: -10.461021423339844

Token 206: ' gâteau' (ID: 182549)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.5214143991470337
    2. 'positions' → logprob: -1.2714143991470337
    3. ' order' → logprob: -2.896414279937744
    4. 'math' → logprob: -3.021414279937744
    5. ' math' → logprob: -4.521414279937744
    6. ' positions' → logprob: -5.271414279937744
    7. 'orders' → logprob: -5.521414279937744
    8. 'r' → logprob: -6.771414279937744
    9. 'per' → logprob: -9.646414756774902
    10. 'ordre' → logprob: -9.646414756774902

Token 207: ' i' (ID: 575)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7350912094116211
    2. ' =' → logprob: -0.9850912094116211
    3. '       ' → logprob: -3.110091209411621
    4. '=' → logprob: -3.860091209411621
    5. '   ' → logprob: -3.985091209411621
    6. '[i' → logprob: -3.985091209411621
    7. 'prev' → logprob: -4.985091209411621
    8. 'i' → logprob: -5.110091209411621
    9. 'positions' → logprob: -5.110091209411621
    10. ' i' → logprob: -5.485091209411621

Token 208: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.2430710792541504
    2. ']' → logprob: -1.9930710792541504
    3. 'positions' → logprob: -2.3680710792541504
    4. ')' → logprob: -2.4930710792541504
    5. '=' → logprob: -2.6180710792541504
    6. ',' → logprob: -2.8680710792541504
    7. '   ' → logprob: -3.1180710792541504
    8. '_positions' → logprob: -3.2430710792541504
    9. ' -' → logprob: -3.7430710792541504
    10. ' ,' → logprob: -3.9930710792541504

Token 209: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.710618905955926e-05
    2. ' ' → logprob: -9.250097274780273
    3. ']' → logprob: -14.750097274780273
    4. 'i' → logprob: -15.500097274780273
    5. '   ' → logprob: -15.500097274780273
    6. ')' → logprob: -16.125097274780273
    7. '```' → logprob: -16.375097274780273
    8. '  ' → logprob: -18.250097274780273
    9. '}' → logprob: -18.500097274780273
    10. 's' → logprob: -18.500097274780273

Token 210: ' et' (ID: 859)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2122641801834106
    2. 'positions' → logprob: -1.5872641801834106
    3. ']' → logprob: -1.9622641801834106
    4. ' et' → logprob: -2.587264060974121
    5. '+' → logprob: -2.712264060974121
    6. '   ' → logprob: -3.087264060974121
    7. 'et' → logprob: -3.087264060974121
    8. ' and' → logprob: -3.712264060974121
    9. ',' → logprob: -3.962264060974121
    10. 'import' → logprob: -4.462264060974121

Token 211: ' i' (ID: 575)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.4979252219200134
    2. ' order' → logprob: -0.9979252219200134
    3. 'i' → logprob: -4.497925281524658
    4. 'g' → logprob: -5.372925281524658
    5. ' i' → logprob: -5.747925281524658
    6. ' gâteau' → logprob: -6.497925281524658
    7. 'gate' → logprob: -7.747925281524658
    8. ' ordre' → logprob: -7.872925281524658
    9. ' ' → logprob: -8.2479248046875
    10. 'ordre' → logprob: -8.2479248046875

Token 212: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09345156699419022
    2. ' =' → logprob: -3.093451499938965
    3. '=' → logprob: -3.468451499938965
    4. ' +' → logprob: -5.343451499938965
    5. ':' → logprob: -6.343451499938965
    6. 'positions' → logprob: -6.718451499938965
    7. ',' → logprob: -6.718451499938965
    8. ')' → logprob: -6.718451499938965
    9. '+' → logprob: -7.343451499938965
    10. '        ' → logprob: -8.343451499938965

Token 213: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04536864161491394
    2. ' =' → logprob: -3.4203686714172363
    3. '=' → logprob: -4.670368671417236
    4. ':' → logprob: -7.670368671417236
    5. 'positions' → logprob: -8.170368194580078
    6. ')' → logprob: -8.295368194580078
    7. '        ' → logprob: -8.295368194580078
    8. ',' → logprob: -8.545368194580078
    9. ' positions' → logprob: -9.170368194580078
    10. ' +' → logprob: -9.170368194580078

Token 214: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.4912412464618683
    2. 'distance' → logprob: -1.741241216659546
    3. '2' → logprob: -2.741241216659546
    4. '   ' → logprob: -2.991241216659546
    5. ' dist' → logprob: -2.991241216659546
    6. ' distance' → logprob: -3.866241216659546
    7. 'd' → logprob: -4.616241455078125
    8. ' ' → logprob: -5.241241455078125
    9. ' math' → logprob: -5.616241455078125
    10. 'math' → logprob: -6.116241455078125

Token 215: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005951552651822567
    2. '=' → logprob: -5.130951404571533
    3. '_' → logprob: -11.505951881408691
    4. ' ' → logprob: -12.505951881408691
    5. '   ' → logprob: -13.005951881408691
    6. '_x' → logprob: -13.380951881408691
    7. '	' → logprob: -13.880951881408691
    8. ' =
' → logprob: -14.630951881408691
    9. ')' → logprob: -14.755951881408691
    10. 's' → logprob: -14.880951881408691

Token 216: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01618616096675396
    2. ' ' → logprob: -4.141186237335205
    3. '   ' → logprob: -8.891185760498047
    4. '  ' → logprob: -11.766185760498047
    5. 'math' → logprob: -12.766185760498047
    6. 'positions' → logprob: -14.141185760498047
    7. '    ' → logprob: -14.516185760498047
    8. ' math' → logprob: -14.641185760498047
    9. '```' → logprob: -15.391185760498047
    10. 'calc' → logprob: -15.453685760498047

Token 217: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000206401280593127
    2. ' ' → logprob: -8.500205993652344
    3. '   ' → logprob: -12.875205993652344
    4. '  ' → logprob: -15.500205993652344
    5. 'math' → logprob: -16.000205993652344
    6. '    ' → logprob: -18.625205993652344
    7. ' math' → logprob: -18.875205993652344
    8. '```' → logprob: -19.375205993652344
    9. '     ' → logprob: -19.625205993652344
    10. 'calc' → logprob: -19.625205993652344

Token 218: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.25194594264030457
    2. '*' → logprob: -1.501945972442627
    3. '   ' → logprob: -11.501945495605469
    4. ' ' → logprob: -12.126945495605469
    5. ' ' → logprob: -14.626945495605469
    6. '.' → logprob: -15.251945495605469
    7. '```' → logprob: -15.501945495605469
    8. '    ' → logprob: -16.12694549560547
    9. '*Math' → logprob: -16.37694549560547
    10. ' math' → logprob: -16.37694549560547

Token 219: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.16034364700317383
    2. ' math' → logprob: -1.9103436470031738
    3. '(math' → logprob: -9.035343170166016
    4. ' ' → logprob: -15.535343170166016
    5. '.math' → logprob: -15.660343170166016
    6. '   ' → logprob: -17.035343170166016
    7. '/math' → logprob: -17.285343170166016
    8. ' (' → logprob: -18.035343170166016
    9. 'Math' → logprob: -18.910343170166016
    10. 'mat' → logprob: -18.910343170166016

Token 220: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.00021641071361955255
    2. '.' → logprob: -8.875216484069824
    3. 'sqrt' → logprob: -9.500216484069824
    4. '```' → logprob: -14.250216484069824
    5. '   ' → logprob: -14.875216484069824
    6. ' sqrt' → logprob: -15.125216484069824
    7. '.Sqrt' → logprob: -15.375216484069824
    8. ' .' → logprob: -16.250215530395508
    9. 's' → logprob: -16.875215530395508
    10. 'import' → logprob: -17.250215530395508

Token 221: '(order' (ID: 33050)
  Prédit: '(order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(order' → logprob: -0.045149337500333786
    2. 'order' → logprob: -3.295149326324463
    3. '(' → logprob: -5.045149326324463
    4. 'positions' → logprob: -7.420149326324463
    5. ' order' → logprob: -10.670149803161621
    6. 'orders' → logprob: -11.295149803161621
    7. '(ord' → logprob: -12.670149803161621
    8. '(
' → logprob: -13.045149803161621
    9. ' (' → logprob: -14.045149803161621
    10. '	order' → logprob: -14.670149803161621

Token 222: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.13388703338569e-06
    2. '[' → logprob: -12.000009536743164
    3. 'i' → logprob: -13.125009536743164
    4. ' [' → logprob: -14.500009536743164
    5. '   ' → logprob: -15.500009536743164
    6. ')' → logprob: -16.875009536743164
    7. '[j' → logprob: -17.125009536743164
    8. ')[' → logprob: -17.125009536743164
    9. '[
' → logprob: -17.375009536743164
    10. '[idx' → logprob: -18.250009536743164

Token 223: '-' (ID: 12)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.23938870429992676
    2. '-' → logprob: -1.9893887042999268
    3. ']' → logprob: -2.9893887042999268
    4. '[' → logprob: -3.7393887042999268
    5. '[-' → logprob: -7.364388465881348
    6. 'i' → logprob: -7.614388465881348
    7. '[j' → logprob: -7.739388465881348
    8. ' -' → logprob: -9.364388465881348
    9. '   ' → logprob: -9.489388465881348
    10. ' ' → logprob: -9.614388465881348

Token 224: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001129021286033094
    2. ']' → logprob: -7.001129150390625
    3. ' ' → logprob: -9.126129150390625
    4. 'i' → logprob: -9.376129150390625
    5. '])' → logprob: -11.751129150390625
    6. '-' → logprob: -11.876129150390625
    7. '   ' → logprob: -12.501129150390625
    8. '0' → logprob: -13.751129150390625
    9. ']*' → logprob: -13.751129150390625
    10. '```' → logprob: -14.251129150390625

Token 225: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.36849382519721985
    2. '*' → logprob: -1.8684937953948975
    3. ' *' → logprob: -2.1184937953948975
    4. '[' → logprob: -3.8684937953948975
    5. '[i' → logprob: -4.743494033813477
    6. ']*' → logprob: -5.993494033813477
    7. ' ]' → logprob: -7.743494033813477
    8. ')' → logprob: -7.868494033813477
    9. ' ' → logprob: -8.118494033813477
    10. '   ' → logprob: -9.368494033813477

Token 226: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5759656429290771
    2. ' *' → logprob: -0.8259656429290771
    3. ' ' → logprob: -11.325965881347656
    4. ')' → logprob: -12.450965881347656
    5. '[' → logprob: -12.450965881347656
    6. '*object' → logprob: -12.700965881347656
    7. '   ' → logprob: -13.950965881347656
    8. ' ' → logprob: -14.450965881347656
    9. '**' → logprob: -14.825965881347656
    10. '```' → logprob: -15.200965881347656

Token 227: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.002476016292348504
    2. ' order' → logprob: -6.002476215362549
    3. '	order' → logprob: -15.50247573852539
    4. '   ' → logprob: -16.75247573852539
    5. '$order' → logprob: -17.62747573852539
    6. '(order' → logprob: -18.00247573852539
    7. '       ' → logprob: -18.25247573852539
    8. ' ' → logprob: -18.75247573852539
    9. 'orders' → logprob: -19.12747573852539
    10. '  ' → logprob: -19.25247573852539

Token 228: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00025228000595234334
    2. 'i' → logprob: -8.375252723693848
    3. ']' → logprob: -11.500252723693848
    4. '][' → logprob: -12.000252723693848
    5. '[' → logprob: -12.750252723693848
    6. '])' → logprob: -13.250252723693848
    7. ' i' → logprob: -14.750252723693848
    8. '(i' → logprob: -16.37525177001953
    9. '```' → logprob: -16.87525177001953
    10. '[j' → logprob: -17.50025177001953

Token 229: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.002497302368283272
    2. '])
' → logprob: -6.00249719619751
    3. ']' → logprob: -12.002497673034668
    4. ' ])' → logprob: -12.127497673034668
    5. ')' → logprob: -12.627497673034668
    6. '])
' → logprob: -13.002497673034668
    7. '   ' → logprob: -13.752497673034668
    8. ']))' → logprob: -13.877497673034668
    9. '[i' → logprob: -14.502497673034668
    10. ')])' → logprob: -14.877497673034668

Token 230: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006677598576061428
    2. ' positions' → logprob: -8.250667572021484
    3. '   ' → logprob: -8.500667572021484
    4. 'positions' → logprob: -8.625667572021484
    5. '
' → logprob: -12.000667572021484
    6. '        
' → logprob: -12.000667572021484
    7. ')' → logprob: -12.750667572021484
    8. ',' → logprob: -13.000667572021484
    9. '	' → logprob: -13.500667572021484
    10. ' ' → logprob: -13.750667572021484

Token 231: ' positions' (ID: 15897)
  Prédit: ' positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positions' → logprob: -0.1564893275499344
    2. 'positions' (adapté à ' positions') → logprob: -2.031489372253418
    3. '       ' → logprob: -4.406489372253418
    4. '_positions' → logprob: -8.281489372253418
    5. '
' → logprob: -8.531489372253418
    6. '.positions' → logprob: -8.656489372253418
    7. ' x' → logprob: -8.781489372253418
    8. '        
' → logprob: -9.156489372253418
    9. ' ' → logprob: -9.281489372253418
    10. '   ' → logprob: -9.406489372253418

Token 232: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004165302962064743
    2. '.' → logprob: -5.504165172576904
    3. ' .' → logprob: -9.504165649414062
    4. '.ap' → logprob: -12.379165649414062
    5. '.app' → logprob: -12.504165649414062
    6. '[-' → logprob: -12.504165649414062
    7. '.Append' → logprob: -15.629165649414062
    8. ').' → logprob: -16.004165649414062
    9. '].' → logprob: -16.129165649414062
    10. '​.' → logprob: -16.629165649414062

Token 233: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.927930654550437e-05
    2. 'positions' → logprob: -10.500029563903809
    3. ' (' → logprob: -13.500029563903809
    4. ' positions' → logprob: -15.625029563903809
    5. '(
' → logprob: -16.125028610229492
    6. '   ' → logprob: -17.250028610229492
    7. '((' → logprob: -17.625028610229492
    8. '(position' → logprob: -18.125028610229492
    9. '_positions' → logprob: -18.500028610229492
    10. 'Positions' → logprob: -18.500028610229492

Token 234: 'positions' (ID: 32297)
  Prédit: 'positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -1.4855663721391466e-05
    2. ' positions' → logprob: -11.125015258789062
    3. '   ' → logprob: -18.250015258789062
    4. 'position' → logprob: -18.750015258789062
    5. 'dist' → logprob: -19.125015258789062
    6. ')' → logprob: -20.250015258789062
    7. 'pos' → logprob: -20.500015258789062
    8. '.positions' → logprob: -20.500015258789062
    9. '_positions' → logprob: -20.875015258789062
    10. '       ' → logprob: -21.625015258789062

Token 235: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00317783304490149
    2. '[i' → logprob: -5.753177642822266
    3. '[' → logprob: -16.878177642822266
    4. ' [-' → logprob: -17.503177642822266
    5. '-' → logprob: -18.503177642822266
    6. '[j' → logprob: -18.753177642822266
    7. '][-' → logprob: -19.503177642822266
    8. ')' → logprob: -19.628177642822266
    9. '```' → logprob: -19.878177642822266
    10. '[
' → logprob: -20.128177642822266

Token 236: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002036595979006961
    2. '-' → logprob: -8.625204086303711
    3. ']' → logprob: -11.375204086303711
    4. ' -' → logprob: -13.000204086303711
    5. 'i' → logprob: -13.375204086303711
    6. '0' → logprob: -13.375204086303711
    7. ' ' → logprob: -13.500204086303711
    8. '(' → logprob: -13.625204086303711
    9. ')' → logprob: -14.000204086303711
    10. '(i' → logprob: -14.125204086303711

Token 237: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3133479654788971
    2. '+' → logprob: -1.3133479356765747
    3. ')' → logprob: -9.438347816467285
    4. ']' → logprob: -13.063347816467285
    5. ')+' → logprob: -13.188347816467285
    6. ' ' → logprob: -13.938347816467285
    7. '}' → logprob: -14.688347816467285
    8. ' plus' → logprob: -14.938347816467285
    9. ']+' → logprob: -15.063347816467285
    10. '>' → logprob: -15.688347816467285

Token 238: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3868729770183563
    2. ' +' → logprob: -1.1368730068206787
    3. ')' → logprob: -13.761873245239258
    4. ')+' → logprob: -15.136873245239258
    5. '+
' → logprob: -15.636873245239258
    6. ' plus' → logprob: -15.636873245239258
    7. ' ' → logprob: -16.136873245239258
    8. 'plus' → logprob: -17.011873245239258
    9. '=' → logprob: -17.261873245239258
    10. '>' → logprob: -17.386873245239258

Token 239: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.14269126951694489
    2. ' dist' → logprob: -2.0176913738250732
    3. ' ' → logprob: -12.642691612243652
    4. '	dist' → logprob: -12.767691612243652
    5. ')' → logprob: -13.267691612243652
    6. '(dist' → logprob: -13.517691612243652
    7. '
' → logprob: -13.642691612243652
    8. '   ' → logprob: -13.892691612243652
    9. '_dist' → logprob: -13.892691612243652
    10. ' ' → logprob: -14.392691612243652

Token 240: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005463436245918274
    2. ')
' → logprob: -5.505463600158691
    3. '   ' → logprob: -6.630463600158691
    4. ' )' → logprob: -9.880463600158691
    5. ')

' → logprob: -12.005463600158691
    6. ')return' → logprob: -13.255463600158691
    7. '<|end|>' → logprob: -13.755463600158691
    8. ' )
' → logprob: -14.130463600158691
    9. ')
' → logprob: -14.255463600158691
    10. '       ' → logprob: -14.505463600158691

Token 241: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3814089298248291
    2. ' return' → logprob: -1.506408929824829
    3. 'return' → logprob: -2.756408929824829
    4. '    
' → logprob: -4.38140869140625
    5. '
' → logprob: -4.50640869140625
    6. ' 
' → logprob: -5.13140869140625
    7. '  
' → logprob: -6.88140869140625
    8. '	return' → logprob: -8.13140869140625
    9. '   
' → logprob: -8.25640869140625
    10. ')' → logprob: -8.38140869140625

Token 242: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.44181856513023376
    2. ' 
' → logprob: -1.4418185949325562
    3. 'return' → logprob: -3.0668184757232666
    4. '   ' → logprob: -3.3168184757232666
    5. '    
' → logprob: -4.316818714141846
    6. ')' → logprob: -4.691818714141846
    7. '
' → logprob: -5.066818714141846
    8. ' ' → logprob: -5.691818714141846
    9. '  
' → logprob: -6.441818714141846
    10. '   
' → logprob: -6.816818714141846

Token 243: ' La' (ID: 3038)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00862521305680275
    2. ' return' → logprob: -4.758625030517578
    3. '   ' → logprob: -12.383625030517578
    4. '#' → logprob: -12.633625030517578
    5. 'width' → logprob: -13.508625030517578
    6. 'positions' → logprob: -14.008625030517578
    7. 'total' → logprob: -15.258625030517578
    8. '
' → logprob: -15.758625030517578
    9. '	return' → logprob: -15.883625030517578
    10. 'sum' → logprob: -16.008625030517578

Token 244: ' largeur' (ID: 180807)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.07940028607845306
    2. ' return' → logprob: -2.5794003009796143
    3. 'positions' → logprob: -8.329400062561035
    4. ' positions' → logprob: -8.579400062561035
    5. 'width' → logprob: -10.204400062561035
    6. 'eturn' → logprob: -11.829400062561035
    7. ' width' → logprob: -11.829400062561035
    8. ' largeur' → logprob: -11.954400062561035
    9. 'total' → logprob: -12.329400062561035
    10. 'def' → logprob: -12.829400062561035

Token 245: ' totale' (ID: 52898)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.48288384079933167
    2. ' =' → logprob: -0.9828838109970093
    3. 'positions' → logprob: -5.482883930206299
    4. 'return' → logprob: -5.607883930206299
    5. ' return' → logprob: -7.982883930206299
    6. '_positions' → logprob: -8.35788345336914
    7. ' positions' → logprob: -8.48288345336914
    8. '   ' → logprob: -9.23288345336914
    9. '.positions' → logprob: -11.48288345336914
    10. 'def' → logprob: -11.85788345336914

Token 246: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3133144974708557
    2. '=' → logprob: -1.313314437866211
    3. 'return' → logprob: -10.188314437866211
    4. 'positions' → logprob: -12.313314437866211
    5. ' return' → logprob: -12.313314437866211
    6. '   ' → logprob: -12.438314437866211
    7. ' positions' → logprob: -14.438314437866211
    8. ' ' → logprob: -14.563314437866211
    9. 'def' → logprob: -15.063314437866211
    10. ',' → logprob: -16.31331443786621

Token 247: ' la' (ID: 557)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.003600782947614789
    2. ' positions' → logprob: -5.628600597381592
    3. '   ' → logprob: -14.75360107421875
    4. 'position' → logprob: -15.62860107421875
    5. '_positions' → logprob: -16.50360107421875
    6. '.positions' → logprob: -17.12860107421875
    7. 'pos' → logprob: -18.50360107421875
    8. ' ' → logprob: -18.50360107421875
    9. 'posit' → logprob: -19.00360107421875
    10. '
' → logprob: -19.12860107421875

Token 248: ' position' (ID: 4010)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.048588622361421585
    2. ' positions' → logprob: -3.048588514328003
    3. 'position' → logprob: -14.673588752746582
    4. '.positions' → logprob: -15.298588752746582
    5. '_positions' → logprob: -15.298588752746582
    6. 'pos' → logprob: -16.173587799072266
    7. '   ' → logprob: -16.298587799072266
    8. ' ' → logprob: -16.423587799072266
    9. 'posit' → logprob: -16.923587799072266
    10. 'sum' → logprob: -17.423587799072266

Token 249: ' du' (ID: 1462)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.005107695236802101
    2. 'positions' → logprob: -5.630107879638672
    3. 's' → logprob: -7.005107879638672
    4. ' [-' → logprob: -8.380107879638672
    5. '[' → logprob: -8.880107879638672
    6. ' of' → logprob: -9.630107879638672
    7. '   ' → logprob: -10.255107879638672
    8. '[len' → logprob: -10.505107879638672
    9. ' positions' → logprob: -10.880107879638672
    10. '  ' → logprob: -11.380107879638672

Token 250: ' dernier' (ID: 27982)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.00044675805838778615
    2. ' positions' → logprob: -7.750446796417236
    3. 's' → logprob: -11.500446319580078
    4. 'last' → logprob: -12.375446319580078
    5. '_positions' → logprob: -14.875446319580078
    6. 'pos' → logprob: -15.250446319580078
    7. 'position' → logprob: -15.250446319580078
    8. ' last' → logprob: -15.375446319580078
    9. '.positions' → logprob: -15.375446319580078
    10. '[-' → logprob: -16.125446319580078

Token 251: ' centre' (ID: 13268)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -1.1009498834609985
    2. 'positions' → logprob: -2.225949764251709
    3. 'centre' → logprob: -2.225949764251709
    4. 'center' → logprob: -2.350949764251709
    5. ' center' → logprob: -2.350949764251709
    6. ' position' → logprob: -2.850949764251709
    7. ' gâteau' → logprob: -3.225949764251709
    8. ' centre' → logprob: -3.225949764251709
    9. 'c' → logprob: -3.975949764251709
    10. ' élément' → logprob: -4.225949764251709

Token 252: ' plus' (ID: 2932)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.27293264865875244
    2. 'plus' → logprob: -2.022932529449463
    3. ' +' → logprob: -2.522932529449463
    4. ' plus' → logprob: -3.772932529449463
    5. 'positions' → logprob: -6.147932529449463
    6. 's' → logprob: -7.272932529449463
    7. '   ' → logprob: -8.397933006286621
    8. ')' → logprob: -10.022933006286621
    9. ' positions' → logprob: -10.022933006286621
    10. ')+' → logprob: -10.147933006286621

Token 253: ' son' (ID: 2391)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.007624968886375427
    2. ' order' → logprob: -4.882625102996826
    3. 'ordre' → logprob: -11.632624626159668
    4. 'positions' → logprob: -12.257624626159668
    5. 'orders' → logprob: -13.132624626159668
    6. '	order' → logprob: -13.632624626159668
    7. '$order' → logprob: -14.007624626159668
    8. 'ordon' → logprob: -15.132624626159668
    9. '(order' → logprob: -15.507624626159668
    10. '_order' → logprob: -16.132625579833984

Token 254: ' rayon' (ID: 80967)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.09222099930047989
    2. ' order' → logprob: -3.0922210216522217
    3. 'last' → logprob: -3.9672210216522217
    4. ' last' → logprob: -4.467220783233643
    5. 'ordre' → logprob: -5.342220783233643
    6. '[' → logprob: -5.842220783233643
    7. '<|end|>' → logprob: -6.717220783233643
    8. '[last' → logprob: -7.467220783233643
    9. '<|end|>' → logprob: -7.467220783233643
    10. ')' → logprob: -7.717220783233643

Token 255: '
' (ID: 198)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6049371361732483
    2. ' +' → logprob: -0.8549371361732483
    3. '+' → logprob: -3.9799370765686035
    4. 'positions' → logprob: -5.2299370765686035
    5. '-' → logprob: -6.8549370765686035
    6. ' positions' → logprob: -6.9799370765686035
    7. '   ' → logprob: -7.2299370765686035
    8. ' plus' → logprob: -7.4799370765686035
    9. ' ' → logprob: -8.354937553405762
    10. ' minus' → logprob: -8.854937553405762

Token 256: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8144255876541138
    2. ' +' → logprob: -1.1894255876541138
    3. ' -' → logprob: -1.6894255876541138
    4. 'return' → logprob: -3.564425468444824
    5. '   ' → logprob: -4.189425468444824
    6. 'positions' → logprob: -4.689425468444824
    7. ' positions' → logprob: -5.064425468444824
    8. '+' → logprob: -5.439425468444824
    9. ' plus' → logprob: -6.189425468444824
    10. ' minus' → logprob: -6.814425468444824

Token 257: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.15021729469299316
    2. 'return' (adapté à ' return') → logprob: -2.650217294692993
    3. ' positions' → logprob: -3.525217294692993
    4. 'positions' → logprob: -3.775217294692993
    5. ' +' → logprob: -4.150217056274414
    6. '+' → logprob: -8.150217056274414
    7. ' ' → logprob: -8.900217056274414
    8. ' -' → logprob: -9.150217056274414
    9. '   ' → logprob: -9.650217056274414
    10. ' order' → logprob: -9.900217056274414

Token 258: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.2519296407699585
    2. ' positions' → logprob: -1.5019296407699585
    3. '_positions' → logprob: -15.12692928314209
    4. '.positions' → logprob: -15.50192928314209
    5. 'position' → logprob: -17.001930236816406
    6. ' posiciones' → logprob: -18.126930236816406
    7. '```' → logprob: -18.126930236816406
    8. 'pos' → logprob: -18.876930236816406
    9. 'Positions' → logprob: -19.251930236816406
    10. '0' → logprob: -19.376930236816406

Token 259: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -3.404745439183898e-05
    2. '[' → logprob: -10.87503433227539
    3. '[:-' → logprob: -11.25003433227539
    4. ' [-' → logprob: -13.75003433227539
    5. '-' → logprob: -15.12503433227539
    6. '[
' → logprob: -15.75003433227539
    7. '[len' → logprob: -16.12503433227539
    8. '```' → logprob: -16.25003433227539
    9. '
' → logprob: -16.50003433227539
    10. '][-' → logprob: -16.75003433227539

Token 260: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ']' → logprob: -16.25
    3. ' ' → logprob: -16.875
    4. '0' → logprob: -17.125
    5. '```' → logprob: -18.0
    6. 'index' → logprob: -19.1875
    7. ']+' → logprob: -19.3125
    8. '...' → logprob: -19.5
    9. '   ' → logprob: -19.5625
    10. '(' → logprob: -19.6875

Token 261: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.018169960007071495
    2. '+' → logprob: -4.01816987991333
    3. ')' → logprob: -11.018170356750488
    4. ' plus' → logprob: -13.143170356750488
    5. ')+' → logprob: -13.768170356750488
    6. ' )' → logprob: -15.018170356750488
    7. ' ' → logprob: -16.143169403076172
    8. ' +
' → logprob: -16.268169403076172
    9. ']+' → logprob: -17.518169403076172
    10. ' ' → logprob: -17.893169403076172

Token 262: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.016039647161960602
    2. '+' → logprob: -4.141039848327637
    3. ' plus' → logprob: -13.266039848327637
    4. ' *' → logprob: -13.391039848327637
    5. ' +
' → logprob: -13.891039848327637
    6. '*' → logprob: -14.391039848327637
    7. ' ' → logprob: -15.766039848327637
    8. ' ' → logprob: -15.891039848327637
    9. 'plus' → logprob: -16.39103889465332
    10. '<|end|>' → logprob: -16.64103889465332

Token 263: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -2.4391956685576588e-05
    2. ' order' → logprob: -10.625024795532227
    3. '	order' → logprob: -17.500024795532227
    4. '$order' → logprob: -17.875024795532227
    5. '(order' → logprob: -18.625024795532227
    6. 'ordre' → logprob: -18.625024795532227
    7. 'orders' → logprob: -19.375024795532227
    8. 'orde' → logprob: -19.625024795532227
    9. 'ord' → logprob: -20.375024795532227
    10. '_order' → logprob: -20.500024795532227

Token 264: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -9.317247167928144e-05
    2. '[i' → logprob: -9.500093460083008
    3. '[' → logprob: -11.000093460083008
    4. '[len' → logprob: -13.500093460083008
    5. ' [-' → logprob: -17.000093460083008
    6. '[
' → logprob: -17.500093460083008
    7. ' ' → logprob: -17.750093460083008
    8. '```' → logprob: -18.000093460083008
    9. '   ' → logprob: -18.250093460083008
    10. '[:-' → logprob: -19.250093460083008

Token 265: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '0' → logprob: -17.375
    4. ']' → logprob: -17.5
    5. '```' → logprob: -17.75
    6. ')' → logprob: -18.8125
    7. '   ' → logprob: -19.6875
    8. '１' → logprob: -19.875
    9. '...' → logprob: -19.9375
    10. '  ' → logprob: -20.3125

Token 266: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00044902291847392917
    2. ']' → logprob: -7.750449180603027
    3. '])' → logprob: -12.125449180603027
    4. ' )' → logprob: -12.250449180603027
    5. '}' → logprob: -12.375449180603027
    6. ')]' → logprob: -13.500449180603027
    7. '）' → logprob: -13.875449180603027
    8. ')
' → logprob: -14.500449180603027
    9. '   ' → logprob: -15.250449180603027
    10. '<|end|>' → logprob: -15.625449180603027

Token 267: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 268: ' main' (ID: 2758)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -1.473860263824463
    2. ' main' → logprob: -1.473860263824463
    3. ' calc' → logprob: -1.848860263824463
    4. ' min' → logprob: -2.848860263824463
    5. ' total' → logprob: -2.973860263824463
    6. 'min' → logprob: -3.348860263824463
    7. ' best' → logprob: -3.598860263824463
    8. 'total' → logprob: -3.848860263824463
    9. ' all' → logprob: -3.848860263824463
    10. ' generate' → logprob: -3.973860263824463

Token 269: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0003445216570980847
    2. '():
' → logprob: -8.375344276428223
    3. '(' → logprob: -9.875344276428223
    4. ' ():' → logprob: -10.125344276428223
    5. '()' → logprob: -10.875344276428223
    6. '():
' → logprob: -13.625344276428223
    7. '()>' → logprob: -14.125344276428223
    8. ':' → logprob: -14.500344276428223
    9. '():

' → logprob: -15.375344276428223
    10. '(args' → logprob: -15.750344276428223

Token 270: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002735805232077837
    2. '    
' → logprob: -7.127735614776611
    3. '<|end|>' → logprob: -8.25273609161377
    4. 'import' → logprob: -8.50273609161377
    5. ' import' → logprob: -8.62773609161377
    6. 'n' → logprob: -8.62773609161377
    7. '    ' → logprob: -8.75273609161377
    8. ' for' → logprob: -8.87773609161377
    9. ' pass' → logprob: -8.87773609161377
    10. ' readline' → logprob: -9.37773609161377

Token 271: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5383673906326294
    2. ' n' → logprob: -1.9133673906326294
    3. '   ' → logprob: -2.66336727142334
    4. 'r' → logprob: -2.66336727142334
    5. 'radius' → logprob: -3.41336727142334
    6. ' import' → logprob: -3.78836727142334
    7. ' radius' → logprob: -3.78836727142334
    8. 'import' → logprob: -4.03836727142334
    9. ' cakes' → logprob: -4.41336727142334
    10. 'sizes' → logprob: -5.66336727142334

Token 272: ' Lecture' (ID: 106534)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.07534658908844
    2. ' import' → logprob: -1.32534658908844
    3. ' n' → logprob: -2.4503464698791504
    4. 'n' → logprob: -2.8253464698791504
    5. '   ' → logprob: -2.9503464698791504
    6. ' radius' → logprob: -3.3253464698791504
    7. '[]' → logprob: -3.7003464698791504
    8. 'radius' → logprob: -3.9503464698791504
    9. ' sys' → logprob: -4.32534646987915
    10. '#' → logprob: -4.45034646987915

Token 273: ' des' (ID: 731)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.43226951360702515
    2. '   ' → logprob: -1.05726957321167
    3. '():
' → logprob: -7.05726957321167
    4. ' =' → logprob: -7.80726957321167
    5. '=sys' → logprob: -7.80726957321167
    6. ' des' → logprob: -7.93226957321167
    7. ':' → logprob: -8.307269096374512
    8. '=' → logprob: -8.557269096374512
    9. '()
' → logprob: -8.557269096374512
    10. '():' → logprob: -8.807269096374512

Token 274: ' données' (ID: 30580)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2476501315832138
    2. 'r' → logprob: -2.372650146484375
    3. 'input' → logprob: -3.372650146484375
    4. ' n' → logprob: -3.622650146484375
    5. ' input' → logprob: -3.997650146484375
    6. 'ray' → logprob: -4.372650146484375
    7. 'inputs' → logprob: -4.872650146484375
    8. 'sys' → logprob: -5.497650146484375
    9. 'import' → logprob: -5.747650146484375
    10. ' inputs' → logprob: -5.997650146484375

Token 275: ' depuis' (ID: 16277)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29389724135398865
    2. 'n' → logprob: -1.543897271156311
    3. '(n' → logprob: -4.2938971519470215
    4. '<|end|>' → logprob: -4.9188971519470215
    5. '<|end|>' → logprob: -5.6688971519470215
    6. ' n' → logprob: -5.7938971519470215
    7. 'import' → logprob: -5.9188971519470215
    8. '()' → logprob: -6.4188971519470215
    9. ',' → logprob: -6.5438971519470215
    10. 'input' → logprob: -6.5438971519470215

Token 276: ' l' (ID: 305)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.4189167320728302
    2. 'sys' → logprob: -1.4189167022705078
    3. ' stdin' → logprob: -2.918916702270508
    4. 'stdin' → logprob: -3.168916702270508
    5. ' input' → logprob: -6.668916702270508
    6. ' la' → logprob: -6.793916702270508
    7. 'input' → logprob: -7.043916702270508
    8. ' l' → logprob: -7.793916702270508
    9. '=sys' → logprob: -8.418916702270508
    10. 'l' → logprob: -9.043916702270508

Token 277: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.14181286096572876
    2. 'input' → logprob: -2.891812801361084
    3. 'stdin' → logprob: -2.891812801361084
    4. ''' → logprob: -4.266812801361084
    5. 'e' → logprob: -5.641812801361084
    6. 'a' → logprob: -6.391812801361084
    7. ''import' → logprob: -8.016813278198242
    8. 'sys' → logprob: -8.266813278198242
    9. 'entrée' → logprob: -8.516813278198242
    10. ' stdin' → logprob: -8.516813278198242

Token 278: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11703681200742722
    2. '   ' → logprob: -3.492036819458008
    3. '(stdin' → logprob: -4.492036819458008
    4. '():
' → logprob: -4.617036819458008
    5. ' =' → logprob: -4.742036819458008
    6. 'import' → logprob: -4.867036819458008
    7. ' standard' → logprob: -5.242036819458008
    8. 'def' → logprob: -5.367036819458008
    9. 'standard' → logprob: -5.617036819458008
    10. '():' → logprob: -5.617036819458008

Token 279: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026039567310363054
    2. '    
' → logprob: -6.877604007720947
    3. ':' → logprob: -7.377604007720947
    4. '
' → logprob: -8.252603530883789
    5. 'n' → logprob: -8.377603530883789
    6. 'import' → logprob: -8.627603530883789
    7. ',' → logprob: -10.127603530883789
    8. '```' → logprob: -10.252603530883789
    9. ':
' → logprob: -10.377603530883789
    10. '  
' → logprob: -10.377603530883789

Token 280: 'plus' (ID: 11601)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.35653015971183777
    2. ')' → logprob: -1.4815301895141602
    3. ' stdin' → logprob: -3.73153018951416
    4. ' sys' → logprob: -3.85653018951416
    5. 'stdin' → logprob: -4.23153018951416
    6. 'sys' → logprob: -5.23153018951416
    7. 'n' → logprob: -6.60653018951416
    8. ' ):' → logprob: -6.60653018951416
    9. '   ' → logprob: -7.23153018951416
    10. ' n' → logprob: -7.23153018951416

Token 281: 'ieurs' (ID: 18123)
  Prédit: 'ieurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieurs' → logprob: -0.9790418148040771
    2. ')' → logprob: -1.3540418148040771
    3. '=sys' → logprob: -2.979041814804077
    4. '=' → logprob: -3.229041814804077
    5. '```' → logprob: -3.729041814804077
    6. '...' → logprob: -3.729041814804077
    7. 'import' → logprob: -3.979041814804077
    8. ' de' → logprob: -4.104042053222656
    9. ' précisément' → logprob: -4.229042053222656
    10. ' sys' → logprob: -4.604042053222656

Token 282: ' datasets' (ID: 57711)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.6442026495933533
    2. ' lignes' → logprob: -1.519202709197998
    3. 'g' → logprob: -2.519202709197998
    4. 'lines' → logprob: -3.269202709197998
    5. 'cakes' → logprob: -3.269202709197998
    6. ' cakes' → logprob: -3.394202709197998
    7. ' g' → logprob: -3.769202709197998
    8. 'rou' → logprob: -4.394202709197998
    9. ')' → logprob: -4.894202709197998
    10. ' line' → logprob: -5.769202709197998

Token 283: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3278414309024811
    2. '):' → logprob: -1.9528414011001587
    3. '   ' → logprob: -2.4528415203094482
    4. ',' → logprob: -4.077841281890869
    5. '):
' → logprob: -4.577841281890869
    6. '<|end|>' → logprob: -4.577841281890869
    7. '...' → logprob: -5.702841281890869
    8. '<|end|>' → logprob: -5.952841281890869
    9. ':' → logprob: -6.577841281890869
    10. ' )' → logprob: -7.202841281890869

Token 284: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01169523224234581
    2. ':' → logprob: -5.261695384979248
    3. '
' → logprob: -5.761695384979248
    4. '    
' → logprob: -6.136695384979248
    5. '<|end|>' → logprob: -8.01169490814209
    6. ':
' → logprob: -8.51169490814209
    7. 'input' → logprob: -9.38669490814209
    8. ' for' → logprob: -9.51169490814209
    9. '  
' → logprob: -9.51169490814209
    10. ' 
' → logprob: -10.51169490814209

Token 285: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.7182087302207947
    2. ' for' → logprob: -1.3432087898254395
    3. 'n' → logprob: -2.4682087898254395
    4. ' n' → logprob: -2.8432087898254395
    5. ' input' → logprob: -3.0932087898254395
    6. '   ' → logprob: -3.3432087898254395
    7. 'input' → logprob: -4.3432087898254395
    8. ' lines' → logprob: -4.5932087898254395
    9. 'try' → logprob: -6.7182087898254395
    10. ' try' → logprob: -7.3432087898254395

Token 286: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.0002422779070911929
    2. 'line' → logprob: -8.375242233276367
    3. '	line' → logprob: -12.000242233276367
    4. ' ligne' → logprob: -12.875242233276367
    5. ' order' → logprob: -13.250242233276367
    6. ' lignes' → logprob: -15.250242233276367
    7. ' lines' → logprob: -15.625242233276367
    8. '(line' → logprob: -16.125242233276367
    9. '_line' → logprob: -16.375242233276367
    10. 'ligne' → logprob: -16.500242233276367

Token 287: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00026383911608718336
    2. 'in' → logprob: -8.250264167785645
    3. 's' → logprob: -15.000264167785645
    4. 'd' → logprob: -15.125264167785645
    5. ' ' → logprob: -15.375264167785645
    6. '   ' → logprob: -15.375264167785645
    7. 'import' → logprob: -15.750264167785645
    8. 'de' → logprob: -15.875264167785645
    9. '.strip' → logprob: -15.875264167785645
    10. 'line' → logprob: -16.125263214111328

Token 288: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.061972957104444504
    2. ' sys' → logprob: -2.8119728565216064
    3. '=sys' → logprob: -12.436972618103027
    4. '```' → logprob: -14.936972618103027
    5. '(sys' → logprob: -15.061972618103027
    6. '	sys' → logprob: -15.311972618103027
    7. 'import' → logprob: -15.561972618103027
    8. 'in' → logprob: -16.561973571777344
    9. 'input' → logprob: -16.811973571777344
    10. '   ' → logprob: -17.061973571777344

Token 289: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00026884564431384206
    2. 'stdin' → logprob: -8.500268936157227
    3. '.' → logprob: -10.250268936157227
    4. '.readline' → logprob: -10.625268936157227
    5. ' stdin' → logprob: -13.125268936157227
    6. '.stdout' → logprob: -13.125268936157227
    7. '(stdin' → logprob: -13.625268936157227
    8. '.std' → logprob: -15.000268936157227
    9. '.argv' → logprob: -15.625268936157227
    10. 'import' → logprob: -17.000268936157227

Token 290: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.540410578250885
    2. ':' → logprob: -0.915410578250885
    3. '.strip' → logprob: -4.54041051864624
    4. ' in' → logprob: -6.04041051864624
    5. '():
' → logprob: -6.29041051864624
    6. '.rstrip' → logprob: -7.16541051864624
    7. '):
' → logprob: -7.29041051864624
    8. '   ' → logprob: -8.290410995483398
    9. '.readline' → logprob: -8.915410995483398
    10. '.readlines' → logprob: -9.290410995483398

Token 291: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027090968564152718
    2. '<|end|>' → logprob: -5.152091026306152
    3. '        
' → logprob: -5.402091026306152
    4. '.strip' → logprob: -6.027091026306152
    5. ' line' → logprob: -6.027091026306152
    6. ':' → logprob: -6.277091026306152
    7. '   ' → logprob: -6.402091026306152
    8. '.rstrip' → logprob: -6.527091026306152
    9. ',' → logprob: -7.277091026306152
    10. ':
' → logprob: -7.402091026306152

Token 292: ' if' (ID: 538)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.011406772769987583
    2. 'line' → logprob: -5.261406898498535
    3. ' if' → logprob: -6.011406898498535
    4. ' radius' → logprob: -6.511406898498535
    5. 'radius' → logprob: -7.636406898498535
    6. '       ' → logprob: -8.261406898498535
    7. '   ' → logprob: -8.386406898498535
    8. '        
' → logprob: -8.761406898498535
    9. '	line' → logprob: -8.886406898498535
    10. 'if' (adapté à ' if') → logprob: -8.886406898498535

Token 293: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.016482505947351456
    2. ' line' → logprob: -4.516482353210449
    3. 'not' → logprob: -5.266482353210449
    4. 'line' → logprob: -8.26648235321045
    5. '=line' → logprob: -14.51648235321045
    6. ' ' → logprob: -14.64148235321045
    7. '#line' → logprob: -15.39148235321045
    8. '	line' → logprob: -17.266483306884766
    9. '[line' → logprob: -17.516483306884766
    10. '	not' → logprob: -17.641483306884766

Token 294: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.014164102263748646
    2. 'line' → logprob: -4.264163970947266
    3. '(line' → logprob: -15.514163970947266
    4. '	line' → logprob: -15.764163970947266
    5. '#line' → logprob: -16.264163970947266
    6. '=line' → logprob: -16.889163970947266
    7. ' ligne' → logprob: -18.764163970947266
    8. '[line' → logprob: -18.764163970947266
    9. 'ine' → logprob: -19.514163970947266
    10. '_line' → logprob: -19.514163970947266

Token 295: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0089277233928442
    2. '.' → logprob: -4.758927822113037
    3. 'strip' → logprob: -8.133927345275879
    4. '.rstrip' → logprob: -11.508927345275879
    5. '.startswith' → logprob: -12.508927345275879
    6. ' strip' → logprob: -12.633927345275879
    7. '_strip' → logprob: -13.758927345275879
    8. '.readline' → logprob: -15.008927345275879
    9. 'rstrip' → logprob: -15.258927345275879
    10. ' .' → logprob: -15.258927345275879

Token 296: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.576121985912323
    2. '():' → logprob: -0.826121985912323
    3. ':' → logprob: -9.326122283935547
    4. '()' → logprob: -9.826122283935547
    5. ':
' → logprob: -10.826122283935547
    6. '():
' → logprob: -10.951122283935547
    7. '():

' → logprob: -14.451122283935547
    8. '()==' → logprob: -14.701122283935547
    9. '()):
' → logprob: -14.951122283935547
    10. '<|end|>' → logprob: -16.201122283935547

Token 297: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.895480277715251e-06
    2. '       ' → logprob: -13.125008583068848
    3. ':' → logprob: -13.500008583068848
    4. '   ' → logprob: -13.875008583068848
    5. '          ' → logprob: -13.875008583068848
    6. '               ' → logprob: -14.375008583068848
    7. ' break' → logprob: -14.625008583068848
    8. '
' → logprob: -14.875008583068848
    9. '	       ' → logprob: -14.875008583068848
    10. ':
' → logprob: -15.125008583068848

Token 298: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.014499234966933727
    2. ' break' → logprob: -4.264499187469482
    3. 'continue' (adapté à ' continue') → logprob: -8.26449966430664
    4. '           ' → logprob: -9.51449966430664
    5. ' continue' → logprob: -12.63949966430664
    6. '	break' → logprob: -14.76449966430664
    7. '               ' → logprob: -15.01449966430664
    8. '       ' → logprob: -15.38949966430664
    9. 'return' → logprob: -15.38949966430664
    10. '
' → logprob: -17.38949966430664

Token 299: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015284230001270771
    2. '        
' → logprob: -4.640284061431885
    3. '<|end|>' → logprob: -5.515284061431885
    4. '
' → logprob: -6.640284061431885
    5. '<|end|>' → logprob: -9.765284538269043
    6. '  
' → logprob: -10.765284538269043
    7. 'tokens' → logprob: -11.015284538269043
    8. ',' → logprob: -11.265284538269043
    9. '            
' → logprob: -11.390284538269043
    10. '    
' → logprob: -11.890284538269043

Token 300: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017162315780296922
    2. '        
' → logprob: -6.751716136932373
    3. '<|end|>' → logprob: -8.001716613769531
    4. '   ' → logprob: -9.251716613769531
    5. '
' → logprob: -9.751716613769531
    6. '```' → logprob: -11.626716613769531
    7. '    
' → logprob: -12.001716613769531
    8. '<|end|>' → logprob: -12.001716613769531
    9. '  
' → logprob: -12.126716613769531
    10. '           ' → logprob: -12.751716613769531

Token 301: ' data' (ID: 1238)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07314833998680115
    2. 'parts' → logprob: -4.323148250579834
    3. ' parts' → logprob: -4.323148250579834
    4. 'n' → logprob: -4.573148250579834
    5. '       ' → logprob: -4.573148250579834
    6. 'radius' → logprob: -4.948148250579834
    7. ' r' → logprob: -5.573148250579834
    8. 'data' (adapté à ' data') → logprob: -6.073148250579834
    9. 'ray' → logprob: -6.323148250579834
    10. 'tokens' → logprob: -6.323148250579834

Token 302: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20142580568790436
    2. ' =' → logprob: -1.7014257907867432
    3. '_tokens' → logprob: -12.076425552368164
    4. 'tokens' → logprob: -13.076425552368164
    5. '=line' → logprob: -13.826425552368164
    6. 's' → logprob: -13.826425552368164
    7. ')' → logprob: -14.201425552368164
    8. '=[]' → logprob: -14.826425552368164
    9. ')=' → logprob: -15.326425552368164
    10. '   ' → logprob: -15.576425552368164

Token 303: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.000997082912363112
    2. ' list' → logprob: -7.250997066497803
    3. 'line' → logprob: -8.250997543334961
    4. '[line' → logprob: -11.000997543334961
    5. '[list' → logprob: -11.625997543334961
    6. ' line' → logprob: -15.500997543334961
    7. '[' → logprob: -15.625997543334961
    8. '   ' → logprob: -16.50099754333496
    9. '=list' → logprob: -16.87599754333496
    10. ' [' → logprob: -17.87599754333496

Token 304: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -9.849109119386412e-06
    2. 'map' → logprob: -11.875009536743164
    3. '(' → logprob: -12.875009536743164
    4. '(int' → logprob: -15.875009536743164
    5. ' map' → logprob: -17.625009536743164
    6. '   ' → logprob: -17.875009536743164
    7. '	map' → logprob: -18.000009536743164
    8. '()' → logprob: -18.000009536743164
    9. ',map' → logprob: -19.250009536743164
    10. '(data' → logprob: -19.375009536743164

Token 305: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0004113692557439208
    2. 'int' → logprob: -7.875411510467529
    3. '(float' → logprob: -10.625411033630371
    4. '(' → logprob: -12.125411033630371
    5. ' int' → logprob: -14.375411033630371
    6. '=int' → logprob: -15.375411033630371
    7. ',int' → logprob: -15.500411033630371
    8. '(str' → logprob: -16.375411987304688
    9. '   ' → logprob: -16.500411987304688
    10. '[int' → logprob: -16.500411987304688

Token 306: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0002929174806922674
    2. ',line' → logprob: -8.875292778015137
    3. '(' → logprob: -9.375292778015137
    4. ',' → logprob: -10.250292778015137
    5. ' (' → logprob: -11.000292778015137
    6. '       ' → logprob: -11.875292778015137
    7. 'line' → logprob: -13.000292778015137
    8. ' line' → logprob: -13.125292778015137
    9. '   ' → logprob: -14.125292778015137
    10. '[line' → logprob: -14.125292778015137

Token 307: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.004081128165125847
    2. ' line' → logprob: -5.5040812492370605
    3. '(line' → logprob: -13.004080772399902
    4. '[line' → logprob: -15.754080772399902
    5. '#line' → logprob: -16.12908172607422
    6. '	line' → logprob: -16.37908172607422
    7. '=line' → logprob: -17.37908172607422
    8. '   ' → logprob: -17.37908172607422
    9. '       ' → logprob: -17.50408172607422
    10. ',line' → logprob: -17.75408172607422

Token 308: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.00480058416724205
    2. '().' → logprob: -5.504800796508789
    3. '.split' → logprob: -7.254800796508789
    4. '.' → logprob: -12.254800796508789
    5. 'strip' → logprob: -12.254800796508789
    6. '(strip' → logprob: -12.754800796508789
    7. '.rstrip' → logprob: -13.629800796508789
    8. ' .' → logprob: -13.879800796508789
    9. '.readline' → logprob: -14.754800796508789
    10. '.trim' → logprob: -16.87980079650879

Token 309: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.512236498361744e-07
    2. '()' → logprob: -15.125000953674316
    3. '.split' → logprob: -15.625000953674316
    4. ' ().' → logprob: -16.125
    5. '   ' → logprob: -19.75
    6. 'split' → logprob: -20.0
    7. '.' → logprob: -20.375
    8. '(' → logprob: -21.5
    9. '()
' → logprob: -21.625
    10. ' .' → logprob: -21.625

Token 310: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -17.75
    3. '(split' → logprob: -17.875
    4. '.split' → logprob: -19.75
    5. 'spl' → logprob: -20.5
    6. 'rstrip' → logprob: -21.625
    7. 'strip' → logprob: -22.25
    8. 'plit' → logprob: -22.5
    9. '_split' → logprob: -22.75
    10. ')' → logprob: -22.875

Token 311: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.12161415070295334
    2. '()' → logprob: -3.2466142177581787
    3. '())))' → logprob: -3.3716142177581787
    4. '())' → logprob: -3.4966142177581787
    5. '(' → logprob: -5.6216139793396
    6. '('' → logprob: -5.8716139793396
    7. '))' → logprob: -6.2466139793396
    8. ')))' → logprob: -6.8716139793396
    9. ')' → logprob: -7.6216139793396
    10. '()))
' → logprob: -7.7466139793396

Token 312: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006750239408574998
    2. '<|end|>' → logprob: -7.750675201416016
    3. '        
' → logprob: -9.000675201416016
    4. ',' → logprob: -10.500675201416016
    5. '<|end|>' → logprob: -11.250675201416016
    6. '```' → logprob: -11.625675201416016
    7. '[' → logprob: -11.750675201416016
    8. '[::-' → logprob: -11.875675201416016
    9. ' if' → logprob: -11.875675201416016
    10. 'r' → logprob: -12.000675201416016

Token 313: ' #' (ID: 1069)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3074735105037689
    2. 'n' → logprob: -1.9324735403060913
    3. ' if' → logprob: -3.1824734210968018
    4. '       ' → logprob: -3.6824734210968018
    5. 'if' → logprob: -3.8074734210968018
    6. ' n' → logprob: -3.9324734210968018
    7. ' radi' → logprob: -5.557473659515381
    8. 'ray' → logprob: -6.307473659515381
    9. '   ' → logprob: -6.932473659515381
    10. 'radi' → logprob: -7.057473659515381

Token 314: ' W' (ID: 486)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07994452118873596
    2. 'if' → logprob: -3.079944610595703
    3. 'n' → logprob: -3.829944610595703
    4. 'ray' → logprob: -5.954944610595703
    5. ' if' → logprob: -6.204944610595703
    6. 'order' → logprob: -6.579944610595703
    7. 'radius' → logprob: -7.079944610595703
    8. 'for' → logprob: -7.204944610595703
    9. ' n' → logprob: -8.079944610595703
    10. '#' → logprob: -8.204944610595703

Token 315: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22100526094436646
    2. 'idth' → logprob: -2.2210052013397217
    3. '=' → logprob: -2.5960052013397217
    4. '   ' → logprob: -5.221005439758301
    5. 'hile' → logprob: -5.971005439758301
    6. 'hen' → logprob: -6.971005439758301
    7. 'IDTH' → logprob: -7.096005439758301
    8. 'ray' → logprob: -7.471005439758301
    9. 'hat' → logprob: -7.596005439758301
    10. 'ith' → logprob: -7.596005439758301

Token 316: ' longueur' (ID: 104613)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.0028180740773677826
    2. ' data' → logprob: -5.8778181076049805
    3. 'len' → logprob: -11.75281810760498
    4. '2' → logprob: -13.00281810760498
    5. ' ' → logprob: -14.37781810760498
    6. '[data' → logprob: -14.62781810760498
    7. '1' → logprob: -15.12781810760498
    8. 'W' → logprob: -15.62781810760498
    9. '0' → logprob: -15.62781810760498
    10. '   ' → logprob: -15.75281810760498

Token 317: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6410952806472778
    2. ',' → logprob: -0.8910952806472778
    3. '=' → logprob: -3.6410951614379883
    4. 'max' → logprob: -5.016095161437988
    5. 'du' → logprob: -5.516095161437988
    6. 'des' → logprob: -5.766095161437988
    7. '       ' → logprob: -5.891095161437988
    8. '   ' → logprob: -6.141095161437988
    9. '_des' → logprob: -6.516095161437988
    10. 'rest' → logprob: -6.641095161437988

Token 318: ' la' (ID: 557)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.10496310144662857
    2. ' data' → logprob: -2.6049630641937256
    3. 'la' → logprob: -3.8549630641937256
    4. ' la' → logprob: -5.854963302612305
    5. 'l' → logprob: -7.104963302612305
    6. 'line' → logprob: -8.979963302612305
    7. 'cake' → logprob: -8.979963302612305
    8. 'le' → logprob: -9.229963302612305
    9. 'the' → logprob: -9.854963302612305
    10. 'code' → logprob: -9.979963302612305

Token 319: ' boîte' (ID: 104481)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -1.4026578664779663
    2. 'g' → logprob: -1.6526578664779663
    3. 'b' → logprob: -2.027657985687256
    4. 'p' → logprob: -2.152657985687256
    5. 'ligne' → logprob: -2.652657985687256
    6. 'rou' → logprob: -3.527657985687256
    7. 'gate' → logprob: -3.652657985687256
    8. 'liste' → logprob: -4.152657985687256
    9. ' data' → logprob: -4.402657985687256
    10. 'pl' → logprob: -4.652657985687256

Token 320: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5606125593185425
    2. ',' → logprob: -1.0606125593185425
    3. '<|end|>' → logprob: -2.685612678527832
    4. ' =' → logprob: -5.560612678527832
    5. '   ' → logprob: -6.185612678527832
    6. '=' → logprob: -6.185612678527832
    7. '<|end|>' → logprob: -6.810612678527832
    8. '#' → logprob: -6.810612678527832
    9. ')' → logprob: -7.435612678527832
    10. '[' → logprob: -7.685612678527832

Token 321: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18601898849010468
    2. ',' → logprob: -1.811018943786621
    3. '<|end|>' → logprob: -6.186018943786621
    4. 'r' → logprob: -7.061018943786621
    5. ' ,' → logprob: -7.561018943786621
    6. '#' → logprob: -7.811018943786621
    7. ' if' → logprob: -8.186018943786621
    8. 'n' → logprob: -8.311018943786621
    9. ',r' → logprob: -8.436018943786621
    10. 'w' → logprob: -8.561018943786621

Token 322: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' (adapté à ' W') → logprob: -0.05298798158764839
    2. ' W' → logprob: -3.052988052368164
    3. 'w' → logprob: -5.552988052368164
    4. '       ' → logprob: -7.927988052368164
    5. 'n' → logprob: -9.177988052368164
    6. ' n' → logprob: -11.427988052368164
    7. ' w' → logprob: -11.802988052368164
    8. '   ' → logprob: -11.927988052368164
    9. 'r' → logprob: -12.427988052368164
    10. ' =' → logprob: -12.927988052368164

Token 323: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.055557191371917725
    2. '=' → logprob: -2.9305572509765625
    3. ',' → logprob: -7.3055572509765625
    4. '   ' → logprob: -13.555557250976562
    5. '=int' → logprob: -14.555557250976562
    6. ' ,' → logprob: -15.805557250976562
    7. ')' → logprob: -16.055557250976562
    8. ' =)' → logprob: -16.305557250976562
    9. '=data' → logprob: -16.430557250976562
    10. ' ' → logprob: -16.430557250976562

Token 324: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.0024756586644798517
    2. ' data' → logprob: -6.002475738525391
    3. '   ' → logprob: -17.12747573852539
    4. '	data' → logprob: -18.75247573852539
    5. ' ' → logprob: -19.00247573852539
    6. '       ' → logprob: -19.37747573852539
    7. 'Data' → logprob: -19.50247573852539
    8. '[data' → logprob: -19.50247573852539
    9. '(data' → logprob: -19.62747573852539
    10. 'int' → logprob: -20.12747573852539

Token 325: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. '0' → logprob: -15.625
    3. ' [' → logprob: -16.75
    4. '   ' → logprob: -17.0
    5. '[
' → logprob: -17.625
    6. '[-' → logprob: -19.375
    7. '=' → logprob: -20.125
    8. '1' → logprob: -20.125
    9. '```' → logprob: -21.0
    10. ' ' → logprob: -21.0

Token 326: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.583550642360933e-05
    2. '1' → logprob: -11.000036239624023
    3. ' ' → logprob: -11.250036239624023
    4. '[' → logprob: -13.062536239624023
    5. '   ' → logprob: -14.312536239624023
    6. '2' → logprob: -14.562536239624023
    7. '       ' → logprob: -15.062536239624023
    8. ':' → logprob: -15.375036239624023
    9. '           ' → logprob: -15.625036239624023
    10. '=' → logprob: -15.687536239624023

Token 327: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0883440300822258
    2. ']' → logprob: -2.963344097137451
    3. '<|end|>' → logprob: -3.463344097137451
    4. ')
' → logprob: -7.713344097137451
    5. '<|end|>' → logprob: -7.713344097137451
    6. '])' → logprob: -8.088343620300293
    7. ')]' → logprob: -8.338343620300293
    8. ']
' → logprob: -10.088343620300293
    9. ' )' → logprob: -10.338343620300293
    10. '}' → logprob: -10.838343620300293

Token 328: '       ' (ID: 309)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.18561221659183502
    2. '<|end|>' → logprob: -1.9356122016906738
    3. '       ' → logprob: -4.935612201690674
    4. '   ' → logprob: -5.060612201690674
    5. ',' → logprob: -6.310612201690674
    6. ' for' → logprob: -6.685612201690674
    7. 'for' → logprob: -6.810612201690674
    8. '<|end|>' → logprob: -7.185612201690674
    9. 'order' → logprob: -7.310612201690674
    10. 'sizes' → logprob: -7.435612201690674

Token 329: ' #' (ID: 1069)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.004622491542249918
    2. 'n' → logprob: -5.754622459411621
    3. '       ' → logprob: -7.004622459411621
    4. 'rings' → logprob: -8.629622459411621
    5. 'cakes' → logprob: -9.379622459411621
    6. 'N' → logprob: -9.629622459411621
    7. 'ray' → logprob: -9.629622459411621
    8. 'R' → logprob: -9.754622459411621
    9. 'if' → logprob: -10.629622459411621
    10. 'radius' → logprob: -11.629622459411621

Token 330: ' ray' (ID: 22420)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0008217801805585623
    2. 'n' → logprob: -7.625821590423584
    3. 'R' → logprob: -9.375822067260742
    4. 'N' → logprob: -9.500822067260742
    5. 'ray' → logprob: -9.500822067260742
    6. 'cakes' → logprob: -10.375822067260742
    7. 'rings' → logprob: -10.625822067260742
    8. 'radius' → logprob: -10.875822067260742
    9. 'orders' → logprob: -12.125822067260742
    10. 'radi' → logprob: -12.625822067260742

Token 331: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.009963726624846458
    2. 'adii' → logprob: -4.884963512420654
    3. 'on' → logprob: -7.134963512420654
    4. 's' → logprob: -7.384963512420654
    5. '=' → logprob: -8.134963989257812
    6. 'onnes' → logprob: -8.759963989257812
    7. 'es' → logprob: -9.009963989257812
    8. 'onn' → logprob: -9.509963989257812
    9. ' =' → logprob: -9.884963989257812
    10. 'ads' → logprob: -9.884963989257812

Token 332: ' des' (ID: 731)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04302316531538963
    2. '=' → logprob: -3.168023109436035
    3. 's' → logprob: -10.668023109436035
    4. 'import' → logprob: -16.16802406311035
    5. '=[]' → logprob: -16.66802406311035
    6. ' ' → logprob: -16.66802406311035
    7. '<|end|>' → logprob: -16.79302406311035
    8. '＝' → logprob: -16.91802406311035
    9. 'des' → logprob: -16.91802406311035
    10. '=
' → logprob: -17.04302406311035

Token 333: ' g' (ID: 329)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.2256716787815094
    2. ' data' → logprob: -1.600671648979187
    3. ' cakes' → logprob: -9.350671768188477
    4. 'g' → logprob: -9.975671768188477
    5. 'cakes' → logprob: -10.100671768188477
    6. 'rou' → logprob: -11.100671768188477
    7. 'r' → logprob: -11.725671768188477
    8. ' cake' → logprob: -11.850671768188477
    9. 'cake' → logprob: -12.350671768188477
    10. '=data' → logprob: -12.725671768188477

Token 334: 'âteaux' (ID: 185889)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.11128774285316467
    2. 'âteaux' → logprob: -2.361287832260132
    3. ' data' → logprob: -6.111287593841553
    4. 'ate' → logprob: -6.361287593841553
    5. 'cakes' → logprob: -6.486287593841553
    6. '[data' → logprob: -6.486287593841553
    7. '(data' → logprob: -6.736287593841553
    8. '=data' → logprob: -6.861287593841553
    9. 'âteau' → logprob: -7.236287593841553
    10. 'ateau' → logprob: -8.111288070678711

Token 335: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38688984513282776
    2. '=' → logprob: -1.1368898153305054
    3. 's' → logprob: -11.511889457702637
    4. '       ' → logprob: -12.636889457702637
    5. '   ' → logprob: -13.261889457702637
    6. 'r' → logprob: -14.386889457702637
    7. ' cakes' → logprob: -14.386889457702637
    8. 'cakes' → logprob: -14.511889457702637
    9. ' cake' → logprob: -14.761889457702637
    10. ' ' → logprob: -15.511889457702637

Token 336: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38698244094848633
    2. '=' → logprob: -1.1369824409484863
    3. '       ' → logprob: -9.261981964111328
    4. 'r' → logprob: -11.761981964111328
    5. '   ' → logprob: -12.761981964111328
    6. ' cakes' → logprob: -13.761981964111328
    7. 'cakes' → logprob: -13.886981964111328
    8. ' cake' → logprob: -14.011981964111328
    9. 's' → logprob: -14.761981964111328
    10. '=r' → logprob: -15.011981964111328

Token 337: ' radi' (ID: 14041)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0003380846756044775
    2. 'cakes' → logprob: -8.375338554382324
    3. 'order' → logprob: -9.875338554382324
    4. 'rings' → logprob: -10.875338554382324
    5. 'cake' → logprob: -11.375338554382324
    6. ' cakes' → logprob: -12.250338554382324
    7. 'ray' → logprob: -12.500338554382324
    8. 'radius' → logprob: -12.750338554382324
    9. 'orders' → logprob: -12.875338554382324
    10. ' radi' → logprob: -13.000338554382324

Token 338: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0015181921189650893
    2. 'us' → logprob: -7.126518249511719
    3. '=' → logprob: -7.501518249511719
    4. ' =' → logprob: -9.501518249511719
    5. '   ' → logprob: -10.001518249511719
    6. 'uses' → logprob: -10.501518249511719
    7. '=data' → logprob: -12.751518249511719
    8. 'data' → logprob: -12.876518249511719
    9. '       ' → logprob: -13.376518249511719
    10. '
' → logprob: -13.501518249511719

Token 339: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693104147911072
    2. '=' → logprob: -2.1269309520721436
    3. '=data' → logprob: -13.001931190490723
    4. '   ' → logprob: -15.501931190490723
    5. '=r' → logprob: -16.001930236816406
    6. ' ' → logprob: -16.376930236816406
    7. 's' → logprob: -16.501930236816406
    8. ')' → logprob: -16.751930236816406
    9. '＝' → logprob: -17.501930236816406
    10. ',' → logprob: -17.751930236816406

Token 340: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.04858771339058876
    2. ' data' → logprob: -3.0485877990722656
    3. '	data' → logprob: -16.423587799072266
    4. '[data' → logprob: -16.673587799072266
    5. 'list' → logprob: -16.798587799072266
    6. '   ' → logprob: -17.048587799072266
    7. ' ' → logprob: -17.173587799072266
    8. '=data' → logprob: -18.548587799072266
    9. '(data' → logprob: -18.673587799072266
    10. 'dat' → logprob: -18.798587799072266

Token 341: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06648191064596176
    2. '=' → logprob: -3.441481828689575
    3. ' =' → logprob: -3.441481828689575
    4. '=data' → logprob: -8.941481590270996
    5. ':' → logprob: -9.441481590270996
    6. '=[' → logprob: -9.941481590270996
    7. 'data' → logprob: -12.191481590270996
    8. '       ' → logprob: -12.316481590270996
    9. '1' → logprob: -12.691481590270996
    10. ':=' → logprob: -12.941481590270996

Token 342: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -14.00000286102295
    3. ':' → logprob: -14.12500286102295
    4. ':]' → logprob: -14.12500286102295
    5. ']' → logprob: -15.37500286102295
    6. '[' → logprob: -15.62500286102295
    7. '   ' → logprob: -15.62500286102295
    8. '2' → logprob: -16.250003814697266
    9. '```' → logprob: -16.250003814697266
    10. '۱' → logprob: -18.062503814697266

Token 343: ':]
' (ID: 61598)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -2.8444881536415778e-05
    2. ':' → logprob: -10.500028610229492
    3. ' :]' → logprob: -14.750028610229492
    4. ':],' → logprob: -15.875028610229492
    5. ']' → logprob: -16.125028610229492
    6. ':]

' → logprob: -16.500028610229492
    7. ':]
' → logprob: -16.875028610229492
    8. ':].' → logprob: -17.000028610229492
    9. '1' → logprob: -19.625028610229492
    10. '...]' → logprob: -20.500028610229492

Token 344: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5238817930221558
    2. '       ' → logprob: -1.3988817930221558
    3. 'min' → logprob: -2.7738819122314453
    4. '<|end|>' → logprob: -3.3988819122314453
    5. ' min' → logprob: -3.5238819122314453
    6. ':' → logprob: -5.398881912231445
    7. ' for' → logprob: -5.648881912231445
    8. ' if' → logprob: -5.648881912231445
    9. '
' → logprob: -5.898881912231445
    10. '        
' → logprob: -6.273881912231445

Token 345: ' n' (ID: 297)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5277537703514099
    2. 'best' → logprob: -1.1527538299560547
    3. 'import' → logprob: -3.6527538299560547
    4. '   ' → logprob: -4.277753829956055
    5. ' best' → logprob: -4.402753829956055
    6. 'minimal' → logprob: -4.652753829956055
    7. ' min' → logprob: -4.777753829956055
    8. 'minimum' → logprob: -5.652753829956055
    9. ' minimal' → logprob: -5.652753829956055
    10. 'from' → logprob: -5.777753829956055

Token 346: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889242470264435
    2. '=' → logprob: -2.578892469406128
    3. '=len' → logprob: -13.203892707824707
    4. '=int' → logprob: -14.578892707824707
    5. ' =
' → logprob: -15.703892707824707
    6. ' =)' → logprob: -16.20389175415039
    7. ' ' → logprob: -17.32889175415039
    8. ')' → logprob: -17.32889175415039
    9. ',' → logprob: -17.82889175415039
    10. '＝' → logprob: -18.07889175415039

Token 347: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00317783304490149
    2. ' len' → logprob: -5.753177642822266
    3. '(len' → logprob: -16.253177642822266
    4. '=len' → logprob: -18.128177642822266
    5. '[len' → logprob: -19.128177642822266
    6. '	len' → logprob: -19.628177642822266
    7. '   ' → logprob: -20.253177642822266
    8. ' ' → logprob: -21.128177642822266
    9. '       ' → logprob: -21.753177642822266
    10. '<len' → logprob: -21.878177642822266

Token 348: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.750000953674316
    3. ' (' → logprob: -15.750000953674316
    4. 'r' → logprob: -16.5
    5. '(data' → logprob: -17.375
    6. 'data' → logprob: -17.75
    7. '(re' → logprob: -18.0
    8. '(n' → logprob: -19.625
    9. '(R' → logprob: -19.875
    10. '	r' → logprob: -20.125

Token 349: 'adii' (ID: 55572)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5266910195350647
    2. '(r' → logprob: -0.9016910195350647
    3. 'adii' → logprob: -5.90169095993042
    4. ')' → logprob: -7.90169095993042
    5. 'data' → logprob: -8.526691436767578
    6. '	r' → logprob: -9.526691436767578
    7. 's' → logprob: -10.026691436767578
    8. '[r' → logprob: -10.901691436767578
    9. '=r' → logprob: -10.901691436767578
    10. '+r' → logprob: -11.151691436767578

Token 350: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020795092859771103
    2. ')
' → logprob: -8.625207901000977
    3. '<|end|>' → logprob: -11.125207901000977
    4. ' )' → logprob: -12.000207901000977
    5. '   ' → logprob: -12.375207901000977
    6. '<|end|>' → logprob: -13.375207901000977
    7. '       ' → logprob: -14.125207901000977
    8. ')

' → logprob: -15.500207901000977
    9. ' ' → logprob: -15.875207901000977
    10. 'def' → logprob: -16.250207901000977

Token 351: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5001315474510193
    2. 'min' → logprob: -1.750131607055664
    3. ' min' → logprob: -2.125131607055664
    4. ' minimal' → logprob: -2.750131607055664
    5. 'best' → logprob: -4.875131607055664
    6. ' best' → logprob: -4.875131607055664
    7. 'minimal' → logprob: -5.125131607055664
    8. 'minimum' → logprob: -5.625131607055664
    9. ' minimum' → logprob: -5.750131607055664
    10. ' minimale' → logprob: -6.250131607055664

Token 352: ' #' (ID: 1069)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.6075869202613831
    2. 'best' → logprob: -1.1075868606567383
    3. ' min' → logprob: -2.3575868606567383
    4. ' best' → logprob: -3.7325868606567383
    5. 'if' → logprob: -5.857586860656738
    6. ' minimal' → logprob: -6.482586860656738
    7. ' if' → logprob: -7.107586860656738
    8. 'minimal' → logprob: -7.107586860656738
    9. '       ' → logprob: -9.357586860656738
    10. 'minimum' → logprob: -9.607586860656738

Token 353: ' Si' (ID: 7832)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.2709057033061981
    2. 'min' → logprob: -1.5209057331085205
    3. ' min' → logprob: -4.520905494689941
    4. ' best' → logprob: -5.020905494689941
    5. 'if' → logprob: -6.770905494689941
    6. ' if' → logprob: -10.145905494689941
    7. 'minimal' → logprob: -10.145905494689941
    8. 'import' → logprob: -10.520905494689941
    9. ' minimal' → logprob: -11.020905494689941
    10. 'all' → logprob: -11.270905494689941

Token 354: ' on' (ID: 402)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.008676853962242603
    2. 'n' → logprob: -4.758677005767822
    3. ' len' → logprob: -11.008676528930664
    4. ' not' → logprob: -11.508676528930664
    5. ' ' → logprob: -12.008676528930664
    6. 'r' → logprob: -12.821176528930664
    7. ' W' → logprob: -13.133676528930664
    8. '   ' → logprob: -13.258676528930664
    9. 'not' → logprob: -13.258676528930664
    10. '0' → logprob: -13.321176528930664

Token 355: ' place' (ID: 2475)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3886658847332001
    2. ' n' → logprob: -1.1386659145355225
    3. 'r' → logprob: -8.138666152954102
    4. 'n't' → logprob: -8.388666152954102
    5. ' souhaite' → logprob: -8.888666152954102
    6. ' veut' → logprob: -9.013666152954102
    7. ' have' → logprob: -9.263666152954102
    8. ' a' → logprob: -9.388666152954102
    9. '=' → logprob: -10.013666152954102
    10. '<|end|>' → logprob: -10.138666152954102

Token 356: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.9249529242515564
    2. 'r' → logprob: -1.4249529838562012
    3. ' les' → logprob: -1.6749529838562012
    4. 'all' → logprob: -2.799952983856201
    5. '   ' → logprob: -3.799952983856201
    6. 'n' → logprob: -4.174952983856201
    7. 'the' → logprob: -4.299952983856201
    8. 'if' → logprob: -4.549952983856201
    9. 'le' → logprob: -4.549952983856201
    10. 'au' → logprob: -5.174952983856201

Token 357: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.5483868718147278
    2. 'r' → logprob: -1.923386812210083
    3. 'n' → logprob: -2.548386812210083
    4. ' n' → logprob: -2.923386812210083
    5. ' g' → logprob: -3.173386812210083
    6. ' all' → logprob: -4.048387050628662
    7. ' gate' → logprob: -4.048387050628662
    8. ' gates' → logprob: -4.548387050628662
    9. ' cakes' → logprob: -4.798387050628662
    10. 'gate' → logprob: -4.923387050628662

Token 358: 'âteaux' (ID: 185889)
  Prédit: 'âteaux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'âteaux' → logprob: -0.01369351428002119
    2. 'âteau' → logprob: -5.138693332672119
    3. 'r' → logprob: -5.763693332672119
    4. 'â' → logprob: -6.138693332672119
    5. 'âte' → logprob: -7.888693332672119
    6. 'ate' → logprob: -8.138693809509277
    7. 'âts' → logprob: -8.138693809509277
    8. 'ât' → logprob: -8.263693809509277
    9. 'à' → logprob: -9.388693809509277
    10. '```' → logprob: -9.388693809509277

Token 359: ' dans' (ID: 2671)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.7707697153091431
    2. 't' → logprob: -2.0207695960998535
    3. ' dans' → logprob: -2.0207695960998535
    4. ' in' → logprob: -2.6457695960998535
    5. ' côte' → logprob: -3.0207695960998535
    6. ' tous' → logprob: -3.1457695960998535
    7. ' all' → logprob: -3.6457695960998535
    8. ' tels' → logprob: -4.3957695960998535
    9. 'all' → logprob: -4.6457695960998535
    10. 'c' → logprob: -4.8957695960998535

Token 360: ' l' (ID: 305)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7479634284973145
    2. 'l' → logprob: -0.8729634284973145
    3. 'range' → logprob: -3.7479634284973145
    4. 'sorted' → logprob: -4.1229634284973145
    5. 'ordre' → logprob: -4.4979634284973145
    6. 'per' → logprob: -4.4979634284973145
    7. 'list' → logprob: -4.7479634284973145
    8. 'la' → logprob: -5.2479634284973145
    9. 'order' → logprob: -5.3729634284973145
    10. 'perm' → logprob: -5.3729634284973145

Token 361: ''ordre' (ID: 124753)
  Prédit: 'ordre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ordre' → logprob: -0.28917786478996277
    2. ''ordre' → logprob: -1.4141778945922852
    3. 'import' → logprob: -6.289177894592285
    4. 'r' → logprob: -6.289177894592285
    5. 'a' → logprob: -6.539177894592285
    6. ''ensemble' → logprob: -7.289177894592285
    7. ''un' → logprob: -7.414177894592285
    8. ''' → logprob: -8.289177894592285
    9. 'un' → logprob: -8.414177894592285
    10. ' ordre' → logprob: -9.039177894592285

Token 362: ' donné' (ID: 52079)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.16098816692829132
    2. '       ' → logprob: -2.6609880924224854
    3. 'sorted' → logprob: -3.6609880924224854
    4. 'radi' → logprob: -4.5359883308410645
    5. 'normal' → logprob: -5.0359883308410645
    6. 'des' → logprob: -5.0359883308410645
    7. ' naturel' → logprob: -5.2859883308410645
    8. 'tr' → logprob: -6.0359883308410645
    9. '=' → logprob: -6.0359883308410645
    10. 'dans' → logprob: -6.2859883308410645

Token 363: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4539032280445099
    2. '       ' → logprob: -1.0789031982421875
    3. ':' → logprob: -3.8289031982421875
    4. ' or' → logprob: -7.7039031982421875
    5. 'r' → logprob: -8.328903198242188
    6. '.' → logprob: -8.453903198242188
    7. ' if' → logprob: -8.578903198242188
    8. ' des' → logprob: -8.703903198242188
    9. 'if' → logprob: -8.828903198242188
    10. '   ' → logprob: -8.828903198242188

Token 364: ' calc' (ID: 25691)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6478989124298096
    2. ' min' → logprob: -1.8978989124298096
    3. 'min' → logprob: -1.8978989124298096
    4. 'best' → logprob: -2.8978989124298096
    5. ' best' → logprob: -3.0228989124298096
    6. ' minimal' → logprob: -3.5228989124298096
    7. 'width' → logprob: -4.0228986740112305
    8. ' width' → logprob: -4.2728986740112305
    9. '#' → logprob: -5.3978986740112305
    10. 'minimal' → logprob: -6.0228986740112305

Token 365: 'ule' (ID: 1601)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5315932631492615
    2. 'ule' → logprob: -1.5315933227539062
    3. 'width' → logprob: -2.1565933227539062
    4. '_width' → logprob: -3.0315933227539062
    5. 'uler' → logprob: -4.656593322753906
    6. 'large' → logprob: -5.906593322753906
    7. 'ul' → logprob: -6.031593322753906
    8. 'ult' → logprob: -6.156593322753906
    9. '   ' → logprob: -6.531593322753906
    10. 'total' → logprob: -6.656593322753906

Token 366: ' largeur' (ID: 180807)
  Prédit: '_width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_width' → logprob: -0.2881336808204651
    2. ' la' → logprob: -2.0381336212158203
    3. '   ' → logprob: -3.0381336212158203
    4. 'r' → logprob: -3.6631336212158203
    5. '_la' → logprob: -4.16313362121582
    6. 'la' → logprob: -4.78813362121582
    7. 'width' → logprob: -4.91313362121582
    8. '_' → logprob: -6.03813362121582
    9. 'er' → logprob: -6.03813362121582
    10. '       ' → logprob: -6.53813362121582

Token 367: '
' (ID: 198)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_min' → logprob: -1.1484225988388062
    2. 'min' → logprob: -1.3984225988388062
    3. ' =' → logprob: -1.7734225988388062
    4. '_' → logprob: -2.3984227180480957
    5. ' minimale' → logprob: -2.6484227180480957
    6. '_act' → logprob: -3.6484227180480957
    7. '_initial' → logprob: -4.648422718048096
    8. '_width' → logprob: -4.898422718048096
    9. '_init' → logprob: -5.148422718048096
    10. '   ' → logprob: -5.523422718048096

Token 368: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030334550887346268
    2. 'minimum' → logprob: -4.90533447265625
    3. ' =' → logprob: -5.15533447265625
    4. ':' → logprob: -5.53033447265625
    5. ',' → logprob: -6.03033447265625
    6. ' minimale' → logprob: -6.03033447265625
    7. 'min' → logprob: -6.90533447265625
    8. 'current' → logprob: -7.03033447265625
    9. 'possible' → logprob: -7.15533447265625
    10. ' minimum' → logprob: -7.28033447265625

Token 369: ' #' (ID: 1069)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.7183629274368286
    2. ' width' → logprob: -1.3433629274368286
    3. '       ' → logprob: -1.4683629274368286
    4. 'current' → logprob: -5.718362808227539
    5. 'initial' → logprob: -5.718362808227539
    6. ' current' → logprob: -5.968362808227539
    7. ' initial' → logprob: -6.218362808227539
    8. 'w' → logprob: -6.343362808227539
    9. 'total' → logprob: -6.968362808227539
    10. 'min' → logprob: -6.968362808227539

Token 370: ' On' (ID: 2160)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.3924086391925812
    2. 'min' → logprob: -1.8924086093902588
    3. '       ' → logprob: -2.642408609390259
    4. 'best' → logprob: -3.517408609390259
    5. ' width' → logprob: -3.517408609390259
    6. 'initial' → logprob: -4.267408847808838
    7. 'current' → logprob: -4.767408847808838
    8. ' min' → logprob: -4.892408847808838
    9. 'minimal' → logprob: -6.142408847808838
    10. ' minimal' → logprob: -6.642408847808838

Token 371: ' doit' (ID: 21822)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.30857041478157043
    2. ' best' → logprob: -1.433570384979248
    3. '       ' → logprob: -4.308570384979248
    4. 'min' → logprob: -5.433570384979248
    5. '_best' → logprob: -6.183570384979248
    6. 'for' → logprob: -6.433570384979248
    7. 'import' → logprob: -7.183570384979248
    8. ' for' → logprob: -7.683570384979248
    9. 'optimal' → logprob: -7.933570384979248
    10. 'optim' → logprob: -8.058570861816406

Token 372: ' vérifier' (ID: 93671)
  Prédit: 'chercher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chercher' → logprob: -0.8199224472045898
    2. 'tester' → logprob: -1.9449224472045898
    3. 'min' → logprob: -2.56992244720459
    4. ' tester' → logprob: -2.56992244720459
    5. ' essayer' → logprob: -3.19492244720459
    6. ' trouver' → logprob: -3.44492244720459
    7. 'expl' → logprob: -3.56992244720459
    8. 'try' → logprob: -3.69492244720459
    9. 'import' → logprob: -3.94492244720459
    10. ' chercher' → logprob: -4.06992244720459

Token 373: ' toutes' (ID: 17502)
  Prédit: ' si'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.7729247808456421
    2. ' toutes' → logprob: -1.647924780845642
    3. ' if' → logprob: -2.0229249000549316
    4. 'si' → logprob: -2.1479249000549316
    5. 't' → logprob: -3.1479249000549316
    6. 'if' → logprob: -3.5229249000549316
    7. 'all' → logprob: -5.397924900054932
    8. 'la' → logprob: -5.772924900054932
    9. ' s' → logprob: -6.022924900054932
    10. ' all' → logprob: -6.147924900054932

Token 374: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.5862323641777039
    2. ' permutations' → logprob: -1.2112324237823486
    3. 'les' → logprob: -1.9612324237823486
    4. 'per' → logprob: -5.5862321853637695
    5. ' permutation' → logprob: -8.21123218536377
    6. '	per' → logprob: -8.71123218536377
    7. '(per' → logprob: -9.21123218536377
    8. '<|end|>' → logprob: -9.21123218536377
    9. '   ' → logprob: -9.33623218536377
    10. ' perm' → logprob: -9.46123218536377

Token 375: ' permutations' (ID: 174595)
  Prédit: ' permutations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.3162950277328491
    2. 'per' → logprob: -1.3162950277328491
    3. ' perm' → logprob: -7.066295146942139
    4. ' possible' → logprob: -7.191295146942139
    5. 'possible' → logprob: -7.441295146942139
    6. 'perm' → logprob: -7.691295146942139
    7. '	per' → logprob: -9.31629467010498
    8. '_per' → logprob: -9.56629467010498
    9. 'poss' → logprob: -9.69129467010498
    10. 'import' → logprob: -10.06629467010498

Token 376: ' car' (ID: 1669)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0448446124792099
    2. ' for' → logprob: -3.794844627380371
    3. '<|end|>' → logprob: -5.544844627380371
    4. ' pour' → logprob: -5.794844627380371
    5. 'for' → logprob: -6.044844627380371
    6. ' possible' → logprob: -6.169844627380371
    7. ',' → logprob: -6.419844627380371
    8. ' of' → logprob: -6.669844627380371
    9. ' afin' → logprob: -6.794844627380371
    10. ' possibles' → logprob: -6.919844627380371

Token 377: ' l' (ID: 305)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.039237380027771
    2. ' l' → logprob: -2.0392374992370605
    3. 'l' → logprob: -2.1642374992370605
    4. ' il' → logprob: -2.2892374992370605
    5. 'on' → logprob: -2.5392374992370605
    6. 'le' → logprob: -3.2892374992370605
    7. 'il' → logprob: -3.2892374992370605
    8. ' la' → logprob: -3.5392374992370605
    9. ' le' → logprob: -3.6642374992370605
    10. 'la' → logprob: -4.5392374992370605

Token 378: ''ordre' (ID: 124753)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.8222761154174805
    2. 'a' → logprob: -1.9472761154174805
    3. ''' → logprob: -2.0722761154174805
    4. ''ordre' → logprob: -2.1972761154174805
    5. ' best' → logprob: -2.6972761154174805
    6. 'arge' → logprob: -3.3222761154174805
    7. 'best' → logprob: -3.4472761154174805
    8. ' is' → logprob: -3.8222761154174805
    9. 'arg' → logprob: -3.9472761154174805
    10. ' smallest' → logprob: -3.9472761154174805

Token 379: ' peut' (ID: 9216)
  Prédit: ' peut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.5115569829940796
    2. 'import' → logprob: -1.6365569829940796
    3. 'pe' → logprob: -2.886557102203369
    4. 'in' → logprob: -3.261557102203369
    5. 'aff' → logprob: -3.511557102203369
    6. ' affect' → logprob: -4.511557102203369
    7. ' influence' → logprob: -4.511557102203369
    8. '       ' → logprob: -4.886557102203369
    9. '   ' → logprob: -5.011557102203369
    10. ' joue' → logprob: -5.511557102203369

Token 380: ' réduire' (ID: 78295)
  Prédit: ' affect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' affect' → logprob: -1.0050725936889648
    2. 'aff' → logprob: -1.6300725936889648
    3. ' changer' → logprob: -1.8800725936889648
    4. ' influencer' → logprob: -2.880072593688965
    5. 'changer' → logprob: -2.880072593688965
    6. 'modifier' → logprob: -3.255072593688965
    7. 'in' → logprob: -3.255072593688965
    8. 'import' → logprob: -3.380072593688965
    9. '   ' → logprob: -4.005072593688965
    10. 'être' → logprob: -4.755072593688965

Token 381: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.047243114560842514
    2. ' l' → logprob: -3.297243118286133
    3. 'la' → logprob: -5.297243118286133
    4. 'l' → logprob: -6.297243118286133
    5. ' ' → logprob: -7.047243118286133
    6. ' largeur' → logprob: -7.922243118286133
    7. ' the' → logprob: -8.172243118286133
    8. ' ' → logprob: -9.172243118286133
    9. '<|end|>' → logprob: -9.422243118286133
    10. ' considér' → logprob: -9.422243118286133

Token 382: ' longueur' (ID: 104613)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'large' → logprob: -0.4591853618621826
    2. ' largeur' → logprob: -1.2091853618621826
    3. 'width' → logprob: -2.9591853618621826
    4. ' large' → logprob: -4.209185600280762
    5. ' width' → logprob: -6.084185600280762
    6. 'distance' → logprob: -9.084185600280762
    7. 'larg' → logprob: -9.084185600280762
    8. 'total' → logprob: -9.584185600280762
    9. 'place' → logprob: -9.959185600280762
    10. 'space' → logprob: -10.084185600280762

Token 383: ' nécessaire' (ID: 43098)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27644020318984985
    2. '<|end|>' → logprob: -1.526440143585205
    3. '        
' → logprob: -5.151440143585205
    4. '<|end|>' → logprob: -5.276440143585205
    5. ' for' → logprob: -5.776440143585205
    6. ',' → logprob: -6.151440143585205
    7. ':' → logprob: -6.651440143585205
    8. '.' → logprob: -6.901440143585205
    9. 'for' → logprob: -7.026440143585205
    10. '   ' → logprob: -7.026440143585205

Token 384: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011379299685359001
    2. '<|end|>' → logprob: -4.886379241943359
    3. ',' → logprob: -6.386379241943359
    4. '.' → logprob: -8.01137924194336
    5. 'min' → logprob: -8.13637924194336
    6. 'minimum' → logprob: -8.13637924194336
    7. '<|end|>' → logprob: -8.38637924194336
    8. '        
' → logprob: -8.38637924194336
    9. ' minimum' → logprob: -9.01137924194336
    10. 'possible' → logprob: -9.38637924194336

Token 385: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00495669711381197
    2. ' min' → logprob: -6.1299567222595215
    3. 'min' → logprob: -7.3799567222595215
    4. ' minimum' → logprob: -7.5049567222595215
    5. 'minimum' → logprob: -8.004956245422363
    6. '        
' → logprob: -8.254956245422363
    7. ' minimal' → logprob: -8.504956245422363
    8. ',' → logprob: -9.004956245422363
    9. '<|end|>' → logprob: -9.004956245422363
    10. ' shortest' → logprob: -9.129956245422363

Token 386: ' can' (ID: 665)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.7620038986206055
    2. 'best' → logprob: -1.3870038986206055
    3. ' min' → logprob: -1.6370038986206055
    4. ' best' → logprob: -2.7620038986206055
    5. '       ' → logprob: -4.5120038986206055
    6. ' minimal' → logprob: -5.0120038986206055
    7. 'minimum' → logprob: -5.7620038986206055
    8. ' minimum' → logprob: -6.2620038986206055
    9. 'minimal' → logprob: -6.2620038986206055
    10. 'all' → logprob: -8.262003898620605

Token 387: '_fit' (ID: 79598)
  Prédit: '_place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_place' → logprob: -0.07188166677951813
    2. '_fit' → logprob: -3.3218817710876465
    3. '_' → logprob: -3.6968817710876465
    4. 'place' → logprob: -6.4468817710876465
    5. '_best' → logprob: -6.4468817710876465
    6. '_be' → logprob: -6.6968817710876465
    7. '_min' → logprob: -6.9468817710876465
    8. '_use' → logprob: -7.4468817710876465
    9. '_opt' → logprob: -8.071881294250488
    10. '_cover' → logprob: -8.321881294250488

Token 388: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1128358319401741
    2. '=' → logprob: -2.2378358840942383
    3. '=False' → logprob: -11.862835884094238
    4. ' ' → logprob: -13.112835884094238
    5. '=True' → logprob: -13.237835884094238
    6. '   ' → logprob: -14.237835884094238
    7. ',' → logprob: -14.362835884094238
    8. '  ' → logprob: -15.487835884094238
    9. 's' → logprob: -15.612835884094238
    10. '=None' → logprob: -16.112834930419922

Token 389: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0051018837839365005
    2. ' False' → logprob: -5.380101680755615
    3. 'any' → logprob: -7.755101680755615
    4. 'float' → logprob: -10.380102157592773
    5. 'math' → logprob: -11.630102157592773
    6. '   ' → logprob: -12.005102157592773
    7. ' any' → logprob: -12.255102157592773
    8. '  ' → logprob: -15.005102157592773
    9. 'false' → logprob: -15.005102157592773
    10. ' ' → logprob: -15.005102157592773

Token 390: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3907378613948822
    2. '<|end|>' → logprob: -1.3907378911972046
    3. ' for' → logprob: -3.765737771987915
    4. '       ' → logprob: -3.765737771987915
    5. '   ' → logprob: -4.890738010406494
    6. '<|end|>' → logprob: -5.390738010406494
    7. 'for' → logprob: -5.640738010406494
    8. '    
' → logprob: -5.765738010406494
    9. '        
' → logprob: -5.890738010406494
    10. '  
' → logprob: -6.015738010406494

Token 391: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023975610733032227
    2. ' for' → logprob: -4.773975372314453
    3. '
' → logprob: -4.898975372314453
    4. '<|end|>' → logprob: -5.273975372314453
    5. '        
' → logprob: -6.648975372314453
    6. 'for' → logprob: -7.648975372314453
    7. ' =' → logprob: -8.398975372314453
    8. ',' → logprob: -8.648975372314453
    9. '=' → logprob: -9.523975372314453
    10. ':' → logprob: -9.773975372314453

Token 392: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20333728194236755
    2. ' for' → logprob: -1.70333731174469
    3. '       ' → logprob: -6.3283371925354
    4. 'min' → logprob: -10.078337669372559
    5. '
' → logprob: -10.328337669372559
    6. ' min' → logprob: -11.578337669372559
    7. '   ' → logprob: -11.578337669372559
    8. '        
' → logprob: -11.828337669372559
    9. 'from' → logprob: -12.078337669372559
    10. 'per' → logprob: -12.328337669372559

Token 393: ' É' (ID: 10055)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0070550525560975075
    2. ' for' → logprob: -5.007055282592773
    3. '       ' → logprob: -8.632055282592773
    4. 'from' → logprob: -9.007055282592773
    5. 'min' → logprob: -11.132055282592773
    6. 'import' → logprob: -11.507055282592773
    7. 'best' → logprob: -12.132055282592773
    8. '   ' → logprob: -12.632055282592773
    9. 'all' → logprob: -13.382055282592773
    10. 'perm' → logprob: -14.132055282592773

Token 394: 'tant' (ID: 26712)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09635195136070251
    2. 'num' → logprob: -3.2213518619537354
    3. '       ' → logprob: -3.5963518619537354
    4. ' for' → logprob: -4.5963521003723145
    5. 'nums' → logprob: -4.9713521003723145
    6. '   ' → logprob: -5.4713521003723145
    7. 'rror' → logprob: -7.4713521003723145
    8. '```' → logprob: -7.8463521003723145
    9. '     ' → logprob: -8.221351623535156
    10. 'x' → logprob: -8.471351623535156

Token 395: ' donné' (ID: 52079)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7877216935157776
    2. 'for' → logprob: -1.9127216339111328
    3. 'range' → logprob: -2.287721633911133
    4. '       ' → logprob: -2.537721633911133
    5. '...' → logprob: -3.037721633911133
    6. ' permutations' → logprob: -3.287721633911133
    7. ' for' → logprob: -3.537721633911133
    8. 'r' → logprob: -3.787721633911133
    9. '    ' → logprob: -3.787721633911133
    10. 'ranges' → logprob: -5.162721633911133

Token 396: ' n' (ID: 297)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.27001953125
    2. '       ' → logprob: -1.39501953125
    3. 'per' → logprob: -2.02001953125
    4. 'for' → logprob: -2.02001953125
    5. ' permutations' → logprob: -2.39501953125
    6. ' all' → logprob: -2.89501953125
    7. 'range' → logprob: -4.27001953125
    8. 'perm' → logprob: -4.77001953125
    9. 'r' → logprob: -5.02001953125
    10. ' range' → logprob: -5.64501953125

Token 397: ' ≤' (ID: 72554)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.04209724813699722
    2. '<=' → logprob: -3.417097330093384
    3. '=' → logprob: -5.792097091674805
    4. ' =' → logprob: -6.542097091674805
    5. '   ' → logprob: -6.917097091674805
    6. ' in' → logprob: -7.042097091674805
    7. ')' → logprob: -7.292097091674805
    8. ' for' → logprob: -7.667097091674805
    9. ' ==' → logprob: -8.792097091674805
    10. ')<=' → logprob: -8.792097091674805

Token 398: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.020685065537691116
    2. '10' → logprob: -4.145685195922852
    3. '9' → logprob: -5.895685195922852
    4. '7' → logprob: -6.645685195922852
    5. ' ' → logprob: -8.020685195922852
    6. 'len' → logprob: -8.520685195922852
    7. '6' → logprob: -10.520685195922852
    8. '12' → logprob: -11.895685195922852
    9. '11' → logprob: -12.020685195922852
    10. '
' → logprob: -12.270685195922852

Token 399: '12' (ID: 899)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.023955481126904488
    2. '10' → logprob: -3.8989555835723877
    3. '9' → logprob: -5.773955345153809
    4. '7' → logprob: -8.273955345153809
    5. '11' → logprob: -10.898955345153809
    6. '12' → logprob: -11.898955345153809
    7. '6' → logprob: -12.023955345153809
    8. 'len' → logprob: -12.398955345153809
    9. '
' → logprob: -13.023955345153809
    10. '...' → logprob: -13.711455345153809

Token 400: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3742998540401459
    2. '       ' → logprob: -1.2492998838424683
    3. ' for' → logprob: -4.374300003051758
    4. ':' → logprob: -4.999300003051758
    5. ' and' → logprob: -6.124300003051758
    6. ' ,' → logprob: -6.499300003051758
    7. ':
' → logprob: -6.749300003051758
    8. 'for' → logprob: -7.624300003051758
    9. ',
' → logprob: -8.249300003051758
    10. '<|end|>' → logprob: -8.624300003051758

Token 401: ' nous' (ID: 6176)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05506665259599686
    2. 'for' → logprob: -2.9300665855407715
    3. '       ' → logprob: -9.55506706237793
    4. '   ' → logprob: -10.18006706237793
    5. ' permutations' → logprob: -10.43006706237793
    6. '	for' → logprob: -10.68006706237793
    7. ' if' → logprob: -11.93006706237793
    8. ' perms' → logprob: -12.80506706237793
    9. '<|end|>' → logprob: -12.80506706237793
    10. ' from' → logprob: -13.30506706237793

Token 402: ' ne' (ID: 453)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8310670256614685
    2. ' for' → logprob: -1.2060670852661133
    3. ' can' → logprob: -1.7060670852661133
    4. ' continue' → logprob: -3.4560670852661133
    5. ':' → logprob: -4.206067085266113
    6. '       ' → logprob: -4.456067085266113
    7. 'import' → logprob: -5.206067085266113
    8. 'continue' → logprob: -5.331067085266113
    9. 'can' → logprob: -6.206067085266113
    10. 'per' → logprob: -6.331067085266113

Token 403: ' test' (ID: 1746)
  Prédit: ' pouvons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pouvons' → logprob: -0.9342844486236572
    2. ' for' → logprob: -1.5592844486236572
    3. 'for' → logprob: -1.6842844486236572
    4. ' can' → logprob: -2.3092844486236572
    5. ' pas' → logprob: -2.8092844486236572
    6. 'pas' → logprob: -4.184284210205078
    7. ' pour' → logprob: -5.434284210205078
    8. ' continue' → logprob: -5.809284210205078
    9. 'p' → logprob: -5.809284210205078
    10. ' peux' → logprob: -6.059284210205078

Token 404: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.08961398154497147
    2. 'for' → logprob: -3.339613914489746
    3. 'er' → logprob: -3.464613914489746
    4. ' pas' → logprob: -4.964613914489746
    5. 'ions' → logprob: -5.589613914489746
    6. 'pas' → logprob: -5.964613914489746
    7. '   ' → logprob: -6.464613914489746
    8. ' for' → logprob: -7.089613914489746
    9. 'urons' → logprob: -7.214613914489746
    10. '       ' → logprob: -7.589613914489746

Token 405: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.25205129384994507
    2. 'all' → logprob: -2.62705135345459
    3. ' all' → logprob: -2.75205135345459
    4. ' pas' → logprob: -3.37705135345459
    5. 'que' → logprob: -3.75205135345459
    6. 'pas' → logprob: -4.50205135345459
    7. '<|end|>' → logprob: -5.12705135345459
    8. 'for' → logprob: -5.87705135345459
    9. ' only' → logprob: -6.62705135345459
    10. '       ' → logprob: -6.75205135345459

Token 406: ' permutations' (ID: 174595)
  Prédit: ' permutations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.3997364640235901
    2. 'per' → logprob: -1.7747364044189453
    3. 'all' → logprob: -3.0247364044189453
    4. '   ' → logprob: -3.5247364044189453
    5. ' all' → logprob: -3.6497364044189453
    6. 'n' → logprob: -4.524736404418945
    7. ' n' → logprob: -4.649736404418945
    8. ' les' → logprob: -5.149736404418945
    9. ' ' → logprob: -5.649736404418945
    10. ' for' → logprob: -5.899736404418945

Token 407: ' uniques' (ID: 156848)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.05321972444653511
    2. 'for' → logprob: -4.053219795227051
    3. ' for' → logprob: -4.178219795227051
    4. '       ' → logprob: -4.928219795227051
    5. ' =' → logprob: -5.428219795227051
    6. '=' → logprob: -6.428219795227051
    7. '   ' → logprob: -6.803219795227051
    8. 'r' → logprob: -7.053219795227051
    9. ' (' → logprob: -7.303219795227051
    10. ')' → logprob: -7.303219795227051

Token 408: ' (' (ID: 350)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.4310455322265625
    2. '(set' → logprob: -1.4310455322265625
    3. '(per' → logprob: -3.3060455322265625
    4. ' for' → logprob: -3.6810455322265625
    5. 'for' → logprob: -4.0560455322265625
    6. '       ' → logprob: -5.1810455322265625
    7. ' (' → logprob: -5.3060455322265625
    8. '(' → logprob: -5.4310455322265625
    9. ' =' → logprob: -5.5560455322265625
    10. ':' → logprob: -6.4310455322265625

Token 409: 'il' (ID: 311)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.6997457146644592
    2. 'r' → logprob: -1.4497456550598145
    3. '):
' → logprob: -2.8247456550598145
    4. ' set' → logprob: -3.0747456550598145
    5. 'for' → logprob: -3.4497456550598145
    6. ')
' → logprob: -3.4497456550598145
    7. ')' → logprob: -3.6997456550598145
    8. 'per' → logprob: -3.9497456550598145
    9. '):' → logprob: -4.5747456550598145
    10. '(set' → logprob: -4.5747456550598145

Token 410: ' n' (ID: 297)
  Prédit: '=set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=set' → logprob: -1.4852814674377441
    2. ' for' → logprob: -2.360281467437744
    3. '=' → logprob: -2.485281467437744
    4. ' =' → logprob: -2.485281467437744
    5. 'import' → logprob: -2.610281467437744
    6. ' appears' → logprob: -2.610281467437744
    7. 'for' → logprob: -2.860281467437744
    8. ' in' → logprob: -3.110281467437744
    9. ' may' → logprob: -3.235281467437744
    10. '   ' → logprob: -3.735281467437744

Token 411: ''y' (ID: 27913)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.9525992274284363
    2. ' pas' → logprob: -1.452599287033081
    3. ''est' → logprob: -2.577599287033081
    4. 'pas' → logprob: -3.577599287033081
    5. 'r' → logprob: -3.952599287033081
    6. 's' → logprob: -4.327599048614502
    7. 'en' → logprob: -4.327599048614502
    8. '=' → logprob: -4.327599048614502
    9. ''en' → logprob: -4.327599048614502
    10. 'es' → logprob: -4.452599048614502

Token 412: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07599299401044846
    2. 'pas' → logprob: -2.700993061065674
    3. ' pas' → logprob: -6.075993061065674
    4. ' a' → logprob: -6.700993061065674
    5. 'en' → logprob: -7.075993061065674
    6. 'may' → logprob: -7.325993061065674
    7. 'avait' → logprob: -8.325992584228516
    8. 'has' → logprob: -9.200992584228516
    9. ' aura' → logprob: -9.325992584228516
    10. ''a' → logprob: -9.950992584228516

Token 413: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.7316814661026001
    2. ')' → logprob: -1.4816814661026
    3. ' )' → logprob: -2.2316813468933105
    4. ' n' → logprob: -3.3566813468933105
    5. ' len' → logprob: -3.8566813468933105
    6. 'n' → logprob: -4.1066813468933105
    7. 'pas' → logprob: -4.1066813468933105
    8. 'len' → logprob: -4.2316813468933105
    9. ' ' → logprob: -4.2316813468933105
    10. ' no' → logprob: -4.6066813468933105

Token 414: ' de' (ID: 334)
  Prédit: ' duplicates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' duplicates' → logprob: -0.7304349541664124
    2. ' duplicate' → logprob: -1.3554348945617676
    3. 'duplicates' → logprob: -2.3554348945617676
    4. ' de' → logprob: -2.9804348945617676
    5. ')' → logprob: -3.1054348945617676
    6. '_duplicates' → logprob: -3.8554348945617676
    7. 'duplicate' → logprob: -4.730434894561768
    8. 'de' → logprob: -4.980434894561768
    9. ' more' → logprob: -5.480434894561768
    10. 'd' → logprob: -5.480434894561768

Token 415: ' changement' (ID: 61912)
  Prédit: 'duplicates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'duplicates' → logprob: -0.3616443872451782
    2. ' duplicates' → logprob: -1.7366443872451782
    3. 'duplicate' → logprob: -2.8616442680358887
    4. 'd' → logprob: -3.2366442680358887
    5. 'r' → logprob: -5.111644268035889
    6. ' duplicate' → logprob: -5.111644268035889
    7. 'redu' → logprob: -5.861644268035889
    8. 'import' → logprob: -5.986644268035889
    9. ')' → logprob: -6.111644268035889
    10. 'per' → logprob: -6.361644268035889

Token 416: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0164704322814941
    2. ')' → logprob: -1.8914704322814941
    3. ' dans' → logprob: -2.516470432281494
    4. 'de' → logprob: -3.016470432281494
    5. ' des' → logprob: -3.391470432281494
    6. 'import' → logprob: -3.391470432281494
    7. ' in' → logprob: -3.641470432281494
    8. ' possible' → logprob: -3.766470432281494
    9. ' d' → logprob: -3.891470432281494
    10. 'd' → logprob: -4.016470432281494

Token 417: ''ordre' (ID: 124753)
  Prédit: 'ordre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ordre' → logprob: -0.20017403364181519
    2. 'order' → logprob: -2.20017409324646
    3. ' ordre' → logprob: -3.57517409324646
    4. 'per' → logprob: -3.57517409324646
    5. ' order' → logprob: -4.700173854827881
    6. ''ordre' → logprob: -6.575173854827881
    7. ' permutations' → logprob: -6.825173854827881
    8. 'perm' → logprob: -7.700173854827881
    9. 'l' → logprob: -7.950173854827881
    10. '<|end|>' → logprob: -7.950173854827881

Token 418: ' sign' (ID: 2232)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9667383432388306
    2. ' des' → logprob: -0.9667383432388306
    3. ' dans' → logprob: -3.091738224029541
    4. ' possible' → logprob: -3.341738224029541
    5. 's' → logprob: -3.841738224029541
    6. ' permutations' → logprob: -3.841738224029541
    7. 'des' → logprob: -4.216738224029541
    8. 'r' → logprob: -4.591738224029541
    9. ' pour' → logprob: -4.716738224029541
    10. '):
' → logprob: -4.966738224029541

Token 419: 'ifiant' (ID: 91447)
  Prédit: 'ificant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ificant' → logprob: -0.7013022899627686
    2. 'ific' → logprob: -1.0763022899627686
    3. 'if' → logprob: -2.0763022899627686
    4. 'ificance' → logprob: -4.576302528381348
    5. 'ifiant' → logprob: -4.951302528381348
    6. 'es' → logprob: -5.076302528381348
    7. 'ification' → logprob: -5.451302528381348
    8. 'ifi' → logprob: -6.576302528381348
    9. 'ature' → logprob: -6.701302528381348
    10. 'e' → logprob: -6.826302528381348

Token 420: ' si' (ID: 1784)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015991197898983955
    2. ' pour' → logprob: -5.6409912109375
    3. ' )' → logprob: -5.6409912109375
    4. 's' → logprob: -6.2659912109375
    5. ' entre' → logprob: -6.2659912109375
    6. 'pour' → logprob: -7.1409912109375
    7. ' dans' → logprob: -7.2659912109375
    8. 'dans' → logprob: -7.3909912109375
    9. 'r' → logprob: -8.2659912109375
    10. '),' → logprob: -8.5159912109375

Token 421: ' radi' (ID: 14041)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.08451087027788162
    2. 'len' → logprob: -3.0845108032226562
    3. ' n' → logprob: -4.334510803222656
    4. ' radi' → logprob: -4.709510803222656
    5. ' set' → logprob: -5.334510803222656
    6. ' all' → logprob: -5.709510803222656
    7. ')' → logprob: -7.084510803222656
    8. 'r' → logprob: -7.334510803222656
    9. 'n' → logprob: -7.334510803222656
    10. ' not' → logprob: -7.959510803222656

Token 422: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0006696671480312943
    2. 'es' → logprob: -8.750669479370117
    3. 'is' → logprob: -9.000669479370117
    4. '[i' → logprob: -9.125669479370117
    5. 'us' → logprob: -9.750669479370117
    6. '[]' → logprob: -10.250669479370117
    7. '[' → logprob: -10.375669479370117
    8. 'ï' → logprob: -10.625669479370117
    9. 'indices' → logprob: -11.000669479370117
    10. 'и' → logprob: -11.125669479370117

Token 423: ' sont' (ID: 5242)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -1.4269685745239258
    2. '[i' → logprob: -1.8019685745239258
    3. ')' → logprob: -2.051968574523926
    4. 'e' → logprob: -2.676968574523926
    5. '.count' → logprob: -2.801968574523926
    6. 'es' → logprob: -3.176968574523926
    7. '   ' → logprob: -3.176968574523926
    8. ' ==' → logprob: -3.426968574523926
    9. '=' → logprob: -3.676968574523926
    10. ' have' → logprob: -4.301968574523926

Token 424: ' ég' (ID: 33150)
  Prédit: 'ident'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ident' → logprob: -0.15097682178020477
    2. 't' → logprob: -2.9009768962860107
    3. ' ident' → logprob: -3.1509768962860107
    4. 'all' → logprob: -4.150976657867432
    5. ' ég' → logprob: -5.275976657867432
    6. ' tous' → logprob: -5.525976657867432
    7. 'distinct' → logprob: -5.900976657867432
    8. 'duplicates' → logprob: -5.900976657867432
    9. 'uni' → logprob: -6.525976657867432
    10. ' all' → logprob: -6.900976657867432

Token 425: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.021589741110801697
    2. 'als' → logprob: -4.396589756011963
    3. 'al' → logprob: -5.146589756011963
    4. 'ales' → logprob: -6.396589756011963
    5. 'uli' → logprob: -6.646589756011963
    6. 'ale' → logprob: -10.771589279174805
    7. 'ual' → logprob: -10.896589279174805
    8. 'u' → logprob: -11.021589279174805
    9. 'iques' → logprob: -11.396589279174805
    10. 'e' → logprob: -11.396589279174805

Token 426: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025039182975888252
    2. '):' → logprob: -4.025039196014404
    3. ').' → logprob: -5.900039196014404
    4. '):
' → logprob: -6.150039196014404
    5. '()' → logprob: -7.025039196014404
    6. '())' → logprob: -7.525039196014404
    7. ')
' → logprob: -9.775038719177246
    8. '))' → logprob: -9.900038719177246
    9. '):

' → logprob: -9.900038719177246
    10. ' )' → logprob: -9.900038719177246

Token 427: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5556660294532776
    2. ' for' → logprob: -1.1806659698486328
    3. 'for' → logprob: -2.680665969848633
    4. '   ' → logprob: -3.555665969848633
    5. '<|end|>' → logprob: -4.680665969848633
    6. '
' → logprob: -5.305665969848633
    7. '        
' → logprob: -5.430665969848633
    8. '	for' → logprob: -7.055665969848633
    9. '<|end|>' → logprob: -7.180665969848633
    10. ' permutations' → logprob: -7.930665969848633

Token 428: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3497871458530426
    2. 'for' → logprob: -1.2247871160507202
    3. '       ' → logprob: -7.22478723526001
    4. 'per' → logprob: -8.099786758422852
    5. ' unique' → logprob: -8.974786758422852
    6. ' permutations' → logprob: -10.099786758422852
    7. 'unique' → logprob: -10.224786758422852
    8. '   ' → logprob: -10.849786758422852
    9. '	for' → logprob: -11.224786758422852
    10. '        
' → logprob: -11.349786758422852

Token 429: ' Mais' (ID: 13880)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6417478322982788
    2. 'for' → logprob: -0.7667478322982788
    3. '       ' → logprob: -5.766747951507568
    4. ' unique' → logprob: -5.891747951507568
    5. ' radi' → logprob: -7.141747951507568
    6. 'unique' → logprob: -7.266747951507568
    7. 'seen' → logprob: -7.766747951507568
    8. 'r' → logprob: -8.14174747467041
    9. ' seen' → logprob: -8.51674747467041
    10. 'per' → logprob: -8.76674747467041

Token 430: ' on' (ID: 402)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10193848609924316
    2. 'for' → logprob: -2.726938486099243
    3. ' if' → logprob: -3.851938486099243
    4. ' permutations' → logprob: -6.226938247680664
    5. ' les' → logprob: -7.351938247680664
    6. 'import' → logprob: -7.601938247680664
    7. ' pour' → logprob: -7.601938247680664
    8. 'r' → logprob: -7.726938247680664
    9. ' continue' → logprob: -7.726938247680664
    10. ' from' → logprob: -7.851938247680664

Token 431: ' teste' (ID: 62670)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.2121614217758179
    2. 'for' → logprob: -1.2121614217758179
    3. ' for' → logprob: -2.0871615409851074
    4. ':' → logprob: -2.9621615409851074
    5. 'from' → logprob: -2.9621615409851074
    6. '=' → logprob: -3.3371615409851074
    7. 'per' → logprob: -3.4621615409851074
    8. ' in' → logprob: -3.5871615409851074
    9. ' =' → logprob: -4.337161540985107
    10. ' can' → logprob: -4.962161540985107

Token 432: ' tous' (ID: 10688)
  Prédit: ' only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' only' → logprob: -0.8026979565620422
    2. ' all' → logprob: -1.8026978969573975
    3. ' for' → logprob: -2.3026978969573975
    4. 'all' → logprob: -2.5526978969573975
    5. 'for' → logprob: -2.5526978969573975
    6. 'only' → logprob: -2.8026978969573975
    7. ' toutes' → logprob: -3.6776978969573975
    8. ' uniquement' → logprob: -3.9276978969573975
    9. ' seulement' → logprob: -4.927698135375977
    10. ' permutations' → logprob: -5.427698135375977

Token 433: ' les' (ID: 1341)
  Prédit: '(per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(per' → logprob: -0.31012094020843506
    2. '(r' → logprob: -1.560120940208435
    3. '(' → logprob: -4.560121059417725
    4. '(set' → logprob: -4.685121059417725
    5. '(unique' → logprob: -4.685121059417725
    6. 'for' → logprob: -5.060121059417725
    7. 'per' → logprob: -5.185121059417725
    8. '(order' → logprob: -5.185121059417725
    9. '(p' → logprob: -5.560121059417725
    10. 'unique' → logprob: -6.560121059417725

Token 434: ' ord' (ID: 6608)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.6439690589904785
    2. ' permutations' → logprob: -1.2689690589904785
    3. 'perm' → logprob: -2.0189690589904785
    4. 'r' → logprob: -4.2689690589904785
    5. 'set' → logprob: -4.2689690589904785
    6. ' perm' → logprob: -4.7689690589904785
    7. ' unique' → logprob: -4.8939690589904785
    8. 'unique' → logprob: -4.8939690589904785
    9. ' set' → logprob: -5.5189690589904785
    10. 'possible' → logprob: -6.8939690589904785

Token 435: 'res' (ID: 430)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5588693022727966
    2. 'utations' → logprob: -1.3088693618774414
    3. 'per' → logprob: -2.1838693618774414
    4. 'mut' → logprob: -4.058869361877441
    5. 'er' → logprob: -4.558869361877441
    6. 'utions' → logprob: -5.183869361877441
    7. 'ut' → logprob: -5.433869361877441
    8. '(r' → logprob: -6.308869361877441
    9. 'u' → logprob: -6.558869361877441
    10. 'unique' → logprob: -6.808869361877441

Token 436: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.336162269115448
    2. 'for' → logprob: -1.8361623287200928
    3. '       ' → logprob: -2.0861623287200928
    4. '   ' → logprob: -7.711162090301514
    5. ':' → logprob: -7.836162090301514
    6. '<|end|>' → logprob: -8.836162567138672
    7. ',' → logprob: -8.961162567138672
    8. 'r' → logprob: -8.961162567138672
    9. ':
' → logprob: -9.461162567138672
    10. '
' → logprob: -9.711162567138672

Token 437: ' être' (ID: 9104)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.6651321053504944
    2. 'perm' → logprob: -1.0401320457458496
    3. ' order' → logprob: -2.6651320457458496
    4. ' perm' → logprob: -4.04013204574585
    5. 'p' → logprob: -4.29013204574585
    6. 'r' → logprob: -4.29013204574585
    7. 'per' → logprob: -4.54013204574585
    8. 'radius' → logprob: -6.29013204574585
    9. ' p' → logprob: -6.41513204574585
    10. ' r' → logprob: -7.66513204574585

Token 438: ' sûr' (ID: 46415)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.290390133857727
    2. ' sure' → logprob: -1.415390133857727
    3. 'sure' → logprob: -1.415390133857727
    4. ' sûr' → logprob: -2.6653900146484375
    5. 'per' → logprob: -3.0403900146484375
    6. 'exact' → logprob: -3.6653900146484375
    7. ' exhaust' → logprob: -3.9153900146484375
    8. 'True' → logprob: -4.5403900146484375
    9. '
' → logprob: -4.9153900146484375
    10. 'certain' → logprob: -5.0403900146484375

Token 439: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032168070320039988
    2. ':' → logprob: -7.003216743469238
    3. '<|end|>' → logprob: -7.253216743469238
    4. ' for' → logprob: -7.753216743469238
    5. '   ' → logprob: -8.128216743469238
    6. ',' → logprob: -8.503216743469238
    7. 'for' → logprob: -8.878216743469238
    8. '        
' → logprob: -8.878216743469238
    9. '.' → logprob: -9.378216743469238
    10. '
' → logprob: -9.503216743469238

Token 440: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4068654179573059
    2. '       ' → logprob: -1.5318653583526611
    3. 'for' → logprob: -2.156865358352661
    4. '   ' → logprob: -6.53186559677124
    5. '	for' → logprob: -7.28186559677124
    6. '<|end|>' → logprob: -9.281865119934082
    7. '
' → logprob: -9.531865119934082
    8. '        
' → logprob: -9.781865119934082
    9. '```' → logprob: -11.531865119934082
    10. ' ' → logprob: -12.156865119934082

Token 441: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3135845363140106
    2. ' for' → logprob: -1.313584566116333
    3. '       ' → logprob: -8.188584327697754
    4. '   ' → logprob: -10.438584327697754
    5. '	for' → logprob: -12.188584327697754
    6. '
' → logprob: -12.438584327697754
    7. '        
' → logprob: -13.313584327697754
    8. 'per' → logprob: -13.938584327697754
    9. ' permutations' → logprob: -13.938584327697754
    10. '```' → logprob: -14.188584327697754

Token 442: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03372615948319435
    2. ' for' → logprob: -3.408726215362549
    3. '       ' → logprob: -9.90872573852539
    4. 'from' → logprob: -11.03372573852539
    5. '   ' → logprob: -12.28372573852539
    6. 'import' → logprob: -12.90872573852539
    7. '```' → logprob: -13.53372573852539
    8. '
' → logprob: -14.15872573852539
    9. 'all' → logprob: -14.40872573852539
    10. 'perm' → logprob: -14.40872573852539

Token 443: ' optimisation' (ID: 139802)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.5688525438308716
    2. ' order' → logprob: -1.3188525438308716
    3. 'perm' → logprob: -2.068852424621582
    4. ' perm' → logprob: -3.568852424621582
    5. 'r' → logprob: -5.568852424621582
    6. 'p' → logprob: -5.568852424621582
    7. ' p' → logprob: -6.568852424621582
    8. 'per' → logprob: -6.818852424621582
    9. 'radius' → logprob: -6.943852424621582
    10. ' radius' → logprob: -8.318852424621582

Token 444: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4176304340362549
    2. '       ' → logprob: -1.6676304340362549
    3. ' if' → logprob: -1.6676304340362549
    4. 'r' → logprob: -2.042630434036255
    5. ':' → logprob: -3.042630434036255
    6. ' in' → logprob: -3.417630434036255
    7. '   ' → logprob: -3.417630434036255
    8. ' ,' → logprob: -3.417630434036255
    9. 'if' → logprob: -3.792630434036255
    10. 'per' → logprob: -4.417630195617676

Token 445: ' on' (ID: 402)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.4629184305667877
    2. ' if' → logprob: -2.212918519973755
    3. ' for' → logprob: -2.462918519973755
    4. 'break' → logprob: -2.837918519973755
    5. '       ' → logprob: -3.087918519973755
    6. ' import' → logprob: -3.587918519973755
    7. 'import' → logprob: -4.462918281555176
    8. ' permutations' → logprob: -5.087918281555176
    9. ' continue' → logprob: -5.212918281555176
    10. 'for' → logprob: -5.337918281555176

Token 446: ' peut' (ID: 9216)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -1.3133397102355957
    2. ' continue' → logprob: -1.5633397102355957
    3. 'break' → logprob: -1.5633397102355957
    4. 'import' → logprob: -1.8133397102355957
    5. 'continue' → logprob: -2.6883397102355957
    6. ' import' → logprob: -3.5633397102355957
    7. '       ' → logprob: -4.438339710235596
    8. ' for' → logprob: -4.688339710235596
    9. 'for' → logprob: -4.688339710235596
    10. 'from' → logprob: -5.438339710235596

Token 447: ' tester' (ID: 51819)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.4086056053638458
    2. 'import' → logprob: -1.5336055755615234
    3. ' break' → logprob: -2.4086055755615234
    4. 'from' → logprob: -4.408605575561523
    5. ' ajouter' → logprob: -5.908605575561523
    6. 'aj' → logprob: -6.033605575561523
    7. '```' → logprob: -6.158605575561523
    8. ' utiliser' → logprob: -6.408605575561523
    9. 'contin' → logprob: -6.783605575561523
    10. ' import' → logprob: -6.908605575561523

Token 448: ' permutations' (ID: 174595)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.7227298021316528
    2. 'if' → logprob: -1.8477298021316528
    3. 'per' → logprob: -2.2227296829223633
    4. ' permutations' → logprob: -2.3477296829223633
    5. 'all' → logprob: -2.4727296829223633
    6. '   ' → logprob: -2.5977296829223633
    7. 'for' → logprob: -2.8477296829223633
    8. ' if' → logprob: -2.9727296829223633
    9. 'only' → logprob: -2.9727296829223633
    10. ' only' → logprob: -3.2227296829223633

Token 449: ' sans' (ID: 9828)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.1377512812614441
    2. 'for' → logprob: -3.137751340866089
    3. '   ' → logprob: -3.512751340866089
    4. '       ' → logprob: -3.887751340866089
    5. ' for' → logprob: -4.38775110244751
    6. ' =' → logprob: -4.51275110244751
    7. ')' → logprob: -6.51275110244751
    8. 's' → logprob: -6.51275110244751
    9. '=' → logprob: -6.76275110244751
    10. '(set' → logprob: -7.01275110244751

Token 450: ' répét' (ID: 156936)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.5042667984962463
    2. 'replacement' → logprob: -1.7542667388916016
    3. 'import' → logprob: -2.6292667388916016
    4. ' replacement' → logprob: -3.3792667388916016
    5. 'duplicates' → logprob: -3.6292667388916016
    6. 'rem' → logprob: -4.004266738891602
    7. ' duplicates' → logprob: -4.379266738891602
    8. 'repeat' → logprob: -4.379266738891602
    9. 're' → logprob: -4.504266738891602
    10. ' set' → logprob: -4.879266738891602

Token 451: 'ition' (ID: 868)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.26349377632141113
    2. 'ations' → logprob: -2.263493776321411
    3. 'er' → logprob: -2.763493776321411
    4. 'e' → logprob: -3.763493776321411
    5. 'itions' → logprob: -4.388493537902832
    6. 's' → logprob: -5.013493537902832
    7. 'ections' → logprob: -5.513493537902832
    8. 'ictions' → logprob: -6.888493537902832
    9. 'utations' → logprob: -6.888493537902832
    10. 'uplic' → logprob: -7.013493537902832

Token 452: ' si' (ID: 1784)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.4615094065666199
    2. '(set' → logprob: -2.7115094661712646
    3. '       ' → logprob: -2.8365094661712646
    4. '   ' → logprob: -3.0865094661712646
    5. 'for' → logprob: -3.2115094661712646
    6. ' =' → logprob: -3.4615094661712646
    7. ' for' → logprob: -3.7115094661712646
    8. ':' → logprob: -3.9615094661712646
    9. '(unique' → logprob: -4.2115092277526855
    10. 'r' → logprob: -4.7115092277526855

Token 453: ' souhait' (ID: 45344)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.25531622767448425
    2. ' len' → logprob: -1.5053162574768066
    3. 'set' → logprob: -6.255316257476807
    4. ' n' → logprob: -7.380316257476807
    5. 'n' → logprob: -7.880316257476807
    6. ' set' → logprob: -8.005315780639648
    7. '   ' → logprob: -9.630315780639648
    8. 'sorted' → logprob: -11.130315780639648
    9. ' ' → logprob: -11.505315780639648
    10. '```' → logprob: -11.755315780639648

Token 454: 'é' (ID: 377)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.298875629901886
    2. '   ' → logprob: -2.673875570297241
    3. 'ions' → logprob: -3.173875570297241
    4. ':' → logprob: -3.673875570297241
    5. '):' → logprob: -3.798875570297241
    6. '       ' → logprob: -4.04887580871582
    7. 'es' → logprob: -4.29887580871582
    8. ')' → logprob: -4.54887580871582
    9. 'import' → logprob: -4.67387580871582
    10. 'e' → logprob: -4.92387580871582

Token 455: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007445128634572029
    2. ' for' → logprob: -5.257445335388184
    3. 'for' → logprob: -7.382445335388184
    4. '<|end|>' → logprob: -7.507445335388184
    5. '        
' → logprob: -7.632445335388184
    6. ',' → logprob: -8.632445335388184
    7. '.' → logprob: -8.882445335388184
    8. '<|end|>' → logprob: -9.507445335388184
    9. ':' → logprob: -9.632445335388184
    10. '
' → logprob: -10.507445335388184

Token 456: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3051154911518097
    2. '       ' → logprob: -1.8051154613494873
    3. '   ' → logprob: -2.6801154613494873
    4. 'for' → logprob: -3.6801154613494873
    5. '
' → logprob: -6.180115699768066
    6. '	for' → logprob: -6.930115699768066
    7. '        
' → logprob: -7.305115699768066
    8. ' 
' → logprob: -8.305115699768066
    9. '    
' → logprob: -8.430115699768066
    10. '<|end|>' → logprob: -8.430115699768066

Token 457: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7699873447418213
    2. '       ' → logprob: -1.1449873447418213
    3. 'for' → logprob: -1.5199873447418213
    4. '   ' → logprob: -10.894987106323242
    5. '        
' → logprob: -11.894987106323242
    6. '	for' → logprob: -12.269987106323242
    7. '
' → logprob: -12.769987106323242
    8. ' ' → logprob: -14.144987106323242
    9. '```' → logprob: -14.394987106323242
    10. 'from' → logprob: -14.519987106323242

Token 458: ' Vu' (ID: 72315)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023607878014445305
    2. ' for' → logprob: -3.7736079692840576
    3. '       ' → logprob: -8.273608207702637
    4. 'seen' → logprob: -9.773608207702637
    5. 'unique' → logprob: -11.273608207702637
    6. 'from' → logprob: -11.773608207702637
    7. '   ' → logprob: -12.023608207702637
    8. 'perm' → logprob: -12.398608207702637
    9. 'per' → logprob: -12.523608207702637
    10. ' seen' → logprob: -12.898608207702637

Token 459: ' contraintes' (ID: 167366)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -1.1172237396240234
    2. ' n' → logprob: -1.7422237396240234
    3. ' la' → logprob: -1.8672237396240234
    4. ' len' → logprob: -2.1172237396240234
    5. ' that' → logprob: -2.9922237396240234
    6. ' l' → logprob: -3.2422237396240234
    7. ' the' → logprob: -3.2422237396240234
    8. ' les' → logprob: -3.7422237396240234
    9. ' ' → logprob: -4.367223739624023
    10. ' le' → logprob: -4.492223739624023

Token 460: ' (' (ID: 350)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.2629749774932861
    2. ',' → logprob: -1.7629749774932861
    3. '       ' → logprob: -1.7629749774932861
    4. '=' → logprob: -2.137974977493286
    5. '   ' → logprob: -2.262974977493286
    6. 'de' → logprob: -2.887974977493286
    7. ' =' → logprob: -3.512974977493286
    8. 'd' → logprob: -4.262974739074707
    9. 'n' → logprob: -4.887974739074707
    10. 'import' → logprob: -5.137974739074707

Token 461: 'max' (ID: 3228)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.26090535521507263
    2. ' n' → logprob: -1.635905385017395
    3. '),' → logprob: -4.2609052658081055
    4. '   ' → logprob: -5.3859052658081055
    5. ')' → logprob: -5.5109052658081055
    6. '12' → logprob: -6.0109052658081055
    7. 'import' → logprob: -6.8859052658081055
    8. ')n' → logprob: -7.0109052658081055
    9. '       ' → logprob: -7.1359052658081055
    10. 'r' → logprob: -7.2609052658081055

Token 462: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2528010308742523
    2. ' =' → logprob: -2.002800941467285
    3. '12' → logprob: -3.002800941467285
    4. ' n' → logprob: -4.627800941467285
    5. '=n' → logprob: -4.877800941467285
    6. '   ' → logprob: -5.127800941467285
    7. 'n' → logprob: -5.252800941467285
    8. ' ' → logprob: -5.502800941467285
    9. ' <=' → logprob: -6.127800941467285
    10. '       ' → logprob: -6.627800941467285

Token 463: '12' (ID: 899)
  Prédit: '12'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.44399064779281616
    2. '=' → logprob: -1.693990707397461
    3. 'n' → logprob: -1.818990707397461
    4. ' =' → logprob: -5.693990707397461
    5. ' n' → logprob: -5.818990707397461
    6. ' ' → logprob: -6.068990707397461
    7. '=n' → logprob: -6.693990707397461
    8. '   ' → logprob: -7.443990707397461
    9. 'r' → logprob: -8.193990707397461
    10. 'd' → logprob: -8.443990707397461

Token 464: '),' (ID: 936)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3033570647239685
    2. '):' → logprob: -1.6783571243286133
    3. '),' → logprob: -2.8033571243286133
    4. ')' → logprob: -5.178357124328613
    5. 'r' → logprob: -6.553357124328613
    6. '   ' → logprob: -6.678357124328613
    7. ',' → logprob: -7.178357124328613
    8. ' ):
' → logprob: -7.303357124328613
    9. '):

' → logprob: -7.428357124328613
    10. '=' → logprob: -7.678357124328613

Token 465: ' on' (ID: 402)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.09185610711574554
    2. 'for' → logprob: -2.466856002807617
    3. '       ' → logprob: -5.966856002807617
    4. 'import' → logprob: -9.716856002807617
    5. ' permutations' → logprob: -9.716856002807617
    6. ' continue' → logprob: -9.966856002807617
    7. ' import' → logprob: -10.341856002807617
    8. '   ' → logprob: -10.841856002807617
    9. ' all' → logprob: -10.841856002807617
    10. ' if' → logprob: -10.966856002807617

Token 466: ' peut' (ID: 9216)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7100313901901245
    2. ' continue' → logprob: -1.3350313901901245
    3. 'continue' → logprob: -1.9600313901901245
    4. 'for' → logprob: -3.460031509399414
    5. ' for' → logprob: -3.710031509399414
    6. ':' → logprob: -4.085031509399414
    7. ' import' → logprob: -4.460031509399414
    8. ' can' → logprob: -5.085031509399414
    9. '       ' → logprob: -5.460031509399414
    10. '   ' → logprob: -6.210031509399414

Token 467: ' faire' (ID: 8119)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6185004711151123
    2. 'continue' → logprob: -2.3685004711151123
    3. 'import' → logprob: -2.6185004711151123
    4. ' for' → logprob: -2.8685004711151123
    5. 'per' → logprob: -2.8685004711151123
    6. 'perm' → logprob: -2.9935004711151123
    7. 'contin' → logprob: -3.6185004711151123
    8. ' continuer' → logprob: -3.7435004711151123
    9. '   ' → logprob: -3.9935004711151123
    10. 'try' → logprob: -3.9935004711151123

Token 468: ' ça' (ID: 13590)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18385685980319977
    2. '       ' → logprob: -2.558856964111328
    3. ' for' → logprob: -2.558856964111328
    4. 'import' → logprob: -4.808856964111328
    5. 'per' → logprob: -6.683856964111328
    6. '   ' → logprob: -7.183856964111328
    7. 'all' → logprob: -7.183856964111328
    8. ':' → logprob: -7.433856964111328
    9. 'perm' → logprob: -7.808856964111328
    10. '
' → logprob: -8.058856964111328

Token 469: ' sans' (ID: 9828)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01628866419196129
    2. ' for' → logprob: -4.266288757324219
    3. 'for' → logprob: -6.391288757324219
    4. ',' → logprob: -8.891288757324219
    5. ':' → logprob: -9.766288757324219
    6. '.' → logprob: -9.891288757324219
    7. '   ' → logprob: -10.141288757324219
    8. '        
' → logprob: -10.641288757324219
    9. ':
' → logprob: -10.891288757324219
    10. '           ' → logprob: -11.016288757324219

Token 470: ' soucis' (ID: 126991)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.6194846630096436
    2. 'import' → logprob: -1.8694846630096436
    3. 'proble' → logprob: -1.8694846630096436
    4. 'optim' → logprob: -2.2444846630096436
    5. 'problem' → logprob: -4.494484901428223
    6. 'pr' → logprob: -4.494484901428223
    7. ' problème' → logprob: -4.744484901428223
    8. ' optim' → logprob: -5.994484901428223
    9. '```' → logprob: -5.994484901428223
    10. 'per' → logprob: -6.244484901428223

Token 471: ' dans' (ID: 2671)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008064602501690388
    2. ' for' → logprob: -5.2580647468566895
    3. 'for' → logprob: -6.1330647468566895
    4. ':' → logprob: -8.633064270019531
    5. '.' → logprob: -8.883064270019531
    6. '
' → logprob: -9.133064270019531
    7. ',' → logprob: -9.383064270019531
    8. '        
' → logprob: -10.008064270019531
    9. '   ' → logprob: -10.258064270019531
    10. ':
' → logprob: -11.633064270019531

Token 472: ' un' (ID: 537)
  Prédit: ' reasonable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' reasonable' → logprob: -1.2985517978668213
    2. ' this' → logprob: -2.1735517978668213
    3. 'reasonable' → logprob: -2.1735517978668213
    4. 'this' → logprob: -2.2985517978668213
    5. ' une' → logprob: -2.5485517978668213
    6. ' cette' → logprob: -3.0485517978668213
    7. ' code' → logprob: -3.1735517978668213
    8. 'python' → logprob: -3.6735517978668213
    9. ' practice' → logprob: -3.9235517978668213
    10. 'ce' → logprob: -3.9235517978668213

Token 473: ' temps' (ID: 11160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.39362168312072754
    2. ' for' → logprob: -1.3936216831207275
    3. 'import' → logprob: -2.8936216831207275
    4. 'if' → logprob: -4.893621444702148
    5. 'it' → logprob: -5.768621444702148
    6. ' if' → logprob: -6.268621444702148
    7. 'break' → logprob: -6.643621444702148
    8. 'from' → logprob: -6.893621444702148
    9. ' import' → logprob: -7.018621444702148
    10. ' from' → logprob: -7.143621444702148

Token 474: ' raisonn' (ID: 144705)
  Prédit: ' limité'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' limité' → logprob: -0.6427017450332642
    2. '   ' → logprob: -1.2677017450332642
    3. 'rest' → logprob: -3.2677016258239746
    4. 'limit' → logprob: -3.6427016258239746
    5. ' rest' → logprob: -3.8927016258239746
    6. 'for' → logprob: -4.017701625823975
    7. 'lim' → logprob: -4.142701625823975
    8. ' limit' → logprob: -4.267701625823975
    9. ' raisonn' → logprob: -4.642701625823975
    10. 'import' → logprob: -4.892701625823975

Token 475: 'able' (ID: 562)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9159841537475586
    2. '```' → logprob: -1.4159841537475586
    3. 'import' → logprob: -2.4159841537475586
    4. 'e' → logprob: -2.5409841537475586
    5. 'er' → logprob: -3.2909841537475586
    6. '       ' → logprob: -3.2909841537475586
    7. 'if' → logprob: -4.290984153747559
    8. '=' → logprob: -4.290984153747559
    9. 'limit' → logprob: -4.915984153747559
    10. '``' → logprob: -4.915984153747559

Token 476: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018101292662322521
    2. ' for' → logprob: -7.126810073852539
    3. '        
' → logprob: -7.501810073852539
    4. 'for' → logprob: -9.126810073852539
    5. '   ' → logprob: -9.376810073852539
    6. '<|end|>' → logprob: -9.376810073852539
    7. ',' → logprob: -9.876810073852539
    8. '.' → logprob: -10.501810073852539
    9. '
' → logprob: -10.876810073852539
    10. ':' → logprob: -11.126810073852539

Token 477: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029722372069954872
    2. ' for' → logprob: -3.6547224521636963
    3. 'for' → logprob: -6.154722213745117
    4. '	for' → logprob: -7.654722213745117
    5. '	per' → logprob: -8.404722213745117
    6. '        
' → logprob: -8.654722213745117
    7. '   ' → logprob: -8.779722213745117
    8. 'per' → logprob: -9.904722213745117
    9. '```' → logprob: -10.029722213745117
    10. '	   ' → logprob: -10.029722213745117

Token 478: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.23828887939453125
    2. '       ' → logprob: -1.6132888793945312
    3. ' for' → logprob: -4.363288879394531
    4. '   ' → logprob: -10.238288879394531
    5. '        
' → logprob: -12.113288879394531
    6. '```' → logprob: -12.738288879394531
    7. '	for' → logprob: -12.863288879394531
    8. 'from' → logprob: -12.988288879394531
    9. '
' → logprob: -12.988288879394531
    10. ' ' → logprob: -13.113288879394531

Token 479: ' perm' (ID: 5961)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.4079096019268036
    2. ' order' → logprob: -1.157909631729126
    3. 'perm' → logprob: -4.032909393310547
    4. ' perm' → logprob: -6.032909393310547
    5. 'per' → logprob: -8.032909393310547
    6. 'p' → logprob: -8.282909393310547
    7. ' permutation' → logprob: -10.157909393310547
    8. '	order' → logprob: -10.282909393310547
    9. ' p' → logprob: -11.282909393310547
    10. ' perms' → logprob: -12.407909393310547

Token 480: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0033090158831328154
    2. 'in' → logprob: -5.87830924987793
    3. 'utation' → logprob: -7.87830924987793
    4. 'utations' → logprob: -9.25330924987793
    5. 'ination' → logprob: -11.62830924987793
    6. 'uation' → logprob: -12.12830924987793
    7. 'ut' → logprob: -12.12830924987793
    8. 'ation' → logprob: -13.50330924987793
    9. 's' → logprob: -13.50330924987793
    10. 'uted' → logprob: -13.87830924987793

Token 481: ' permutations' (ID: 174595)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -3.166338137816638e-05
    2. 'set' → logprob: -11.000031471252441
    3. ' permutations' → logprob: -11.250031471252441
    4. 'perm' → logprob: -13.750031471252441
    5. '(per' → logprob: -14.375031471252441
    6. '	per' → logprob: -15.875031471252441
    7. '   ' → logprob: -16.875032424926758
    8. '.per' → logprob: -17.875032424926758
    9. '_per' → logprob: -18.000032424926758
    10. 'permissions' → logprob: -18.125032424926758

Token 482: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -3.9054008084349334e-05
    2. '(set' → logprob: -10.500039100646973
    3. '(' → logprob: -12.625039100646973
    4. '(sorted' → logprob: -13.125039100646973
    5. '(range' → logprob: -13.625039100646973
    6. ',' → logprob: -13.750039100646973
    7. ' (' → logprob: -14.000039100646973
    8. 'r' → logprob: -14.125039100646973
    9. '(unique' → logprob: -14.500039100646973
    10. ',r' → logprob: -14.625039100646973

Token 483: 'adii' (ID: 55572)
  Prédit: 'adii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adii' → logprob: -0.2065800577402115
    2. 'r' → logprob: -1.7065800428390503
    3. '(r' → logprob: -5.45658016204834
    4. 'adi' → logprob: -7.70658016204834
    5. ')' → logprob: -8.83158016204834
    6. 'ad' → logprob: -10.33158016204834
    7. '(' → logprob: -10.58158016204834
    8. '[r' → logprob: -10.58158016204834
    9. '   ' → logprob: -10.95658016204834
    10. '=r' → logprob: -11.20658016204834

Token 484: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17996640503406525
    2. '):
' → logprob: -1.8049664497375488
    3. '):
' → logprob: -8.55496597290039
    4. ')' → logprob: -11.42996597290039
    5. '       ' → logprob: -12.30496597290039
    6. '()):
' → logprob: -12.80496597290039
    7. '   ' → logprob: -12.92996597290039
    8. ' ):' → logprob: -13.42996597290039
    9. '):

' → logprob: -13.67996597290039
    10. '():
' → logprob: -14.42996597290039

Token 485: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004332795273512602
    2. ':
' → logprob: -6.004333019256592
    3. '            
' → logprob: -7.254333019256592
    4. ':' → logprob: -7.629333019256592
    5. '
' → logprob: -7.879333019256592
    6. '):
' → logprob: -9.629332542419434
    7. ' if' → logprob: -10.254332542419434
    8. '<|end|>' → logprob: -10.254332542419434
    9. '       ' → logprob: -10.754332542419434
    10. '        
' → logprob: -11.004332542419434

Token 486: ' width' (ID: 4345)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8014835715293884
    2. 'width' (adapté à ' width') → logprob: -0.8014835715293884
    3. ' if' → logprob: -3.176483631134033
    4. 'if' → logprob: -3.426483631134033
    5. ' width' → logprob: -4.551483631134033
    6. 'total' → logprob: -5.051483631134033
    7. '               ' → logprob: -5.051483631134033
    8. 'length' → logprob: -6.051483631134033
    9. '       ' → logprob: -6.926483631134033
    10. ' total' → logprob: -7.176483631134033

Token 487: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061967913061380386
    2. ' =' → logprob: -2.8119678497314453
    3. ')' → logprob: -15.936967849731445
    4. '＝' → logprob: -16.561967849731445
    5. '	' → logprob: -17.561967849731445
    6. '   ' → logprob: -17.686967849731445
    7. '_' → logprob: -18.186967849731445
    8. '_=' → logprob: -18.311967849731445
    9. '.' → logprob: -18.561967849731445
    10. ':' → logprob: -18.686967849731445

Token 488: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -3.547789674485102e-05
    2. ' calc' → logprob: -10.250035285949707
    3. '   ' → logprob: -18.125036239624023
    4. 'calculate' → logprob: -18.875036239624023
    5. '(calc' → logprob: -19.125036239624023
    6. 'cal' → logprob: -19.250036239624023
    7. '       ' → logprob: -20.000036239624023
    8. '.calc' → logprob: -20.500036239624023
    9. '           ' → logprob: -21.750036239624023
    10. 'round' → logprob: -22.250036239624023

Token 489: '_width' (ID: 17595)
  Prédit: '_width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_width' → logprob: -2.45848218582978e-06
    2. '_' → logprob: -13.12500286102295
    3. '_height' → logprob: -16.000001907348633
    4. '_length' → logprob: -16.375001907348633
    5. ' _' → logprob: -17.000001907348633
    6. ')_' → logprob: -17.000001907348633
    7. '_size' → logprob: -17.125001907348633
    8. 'width' → logprob: -17.500001907348633
    9. '_WIDTH' → logprob: -17.625001907348633
    10. '_w' → logprob: -17.750001907348633

Token 490: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00012833021173719317
    2. '(list' → logprob: -9.000128746032715
    3. '(ord' → logprob: -13.875128746032715
    4. '(order' → logprob: -14.000128746032715
    5. 'perm' → logprob: -14.375128746032715
    6. '(per' → logprob: -14.375128746032715
    7. ' (' → logprob: -14.625128746032715
    8. '((' → logprob: -14.750128746032715
    9. '(
' → logprob: -14.750128746032715
    10. 'list' → logprob: -15.500128746032715

Token 491: 'perm' (ID: 34794)
  Prédit: 'perm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' → logprob: -2.7729658540920354e-05
    2. 'list' → logprob: -10.625027656555176
    3. '(' → logprob: -13.500027656555176
    4. ' perm' → logprob: -13.750027656555176
    5. ')' → logprob: -14.000027656555176
    6. '[' → logprob: -16.750028610229492
    7. 'per' → logprob: -17.250028610229492
    8. '_perm' → logprob: -19.000028610229492
    9. '(list' → logprob: -19.750028610229492
    10. 'order' → logprob: -20.125028610229492

Token 492: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11310362070798874
    2. ')
' → logprob: -2.4881036281585693
    3. '           ' → logprob: -3.7381036281585693
    4. ')
' → logprob: -10.738103866577148
    5. ' )' → logprob: -11.363103866577148
    6. '<|end|>' → logprob: -11.488103866577148
    7. ')<' → logprob: -12.613103866577148
    8. ')>' → logprob: -12.738103866577148
    9. ' )
' → logprob: -12.738103866577148
    10. ')

' → logprob: -12.863103866577148

Token 493: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.106736039626412e-05
    2. ' if' → logprob: -11.250031471252441
    3. '<|end|>' → logprob: -11.500031471252441
    4. '            
' → logprob: -12.750031471252441
    5. '
' → logprob: -13.000031471252441
    6. 'if' → logprob: -14.000031471252441
    7. '       ' → logprob: -15.125031471252441
    8. '<|end|>' → logprob: -15.375031471252441
    9. '		' → logprob: -15.750031471252441
    10. '[' → logprob: -15.875031471252441

Token 494: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002343300264328718
    2. 'if' (adapté à ' if') → logprob: -6.75234317779541
    3. ' if' → logprob: -6.75234317779541
    4. '            
' → logprob: -14.12734317779541
    5. '		' → logprob: -14.25234317779541
    6. '	       ' → logprob: -14.50234317779541
    7. '       ' → logprob: -14.62734317779541
    8. '   ' → logprob: -14.75234317779541
    9. '<|end|>' → logprob: -14.87734317779541
    10. '          ' → logprob: -15.25234317779541

Token 495: ' width' (ID: 4345)
  Prédit: ' width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' width' → logprob: -0.0485873706638813
    2. 'width' → logprob: -3.0485873222351074
    3. '(width' → logprob: -16.798587799072266
    4. '	width' → logprob: -17.423587799072266
    5. '           ' → logprob: -19.173587799072266
    6. ',width' → logprob: -19.548587799072266
    7. ';width' → logprob: -20.173587799072266
    8. 'w' → logprob: -20.423587799072266
    9. '.width' → logprob: -20.423587799072266
    10. '_width' → logprob: -20.923587799072266

Token 496: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.12692999839782715
    2. '<=' → logprob: -2.126929998397827
    3. ')<=' → logprob: -13.751930236816406
    4. 'le' → logprob: -15.126930236816406
    5. ' ' → logprob: -15.876930236816406
    6. ']<=' → logprob: -16.001930236816406
    7. '   ' → logprob: -16.626930236816406
    8. ' ' → logprob: -16.751930236816406
    9. ' <=",' → logprob: -16.876930236816406
    10. '=' → logprob: -16.876930236816406

Token 497: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.38687121868133545
    2. ' W' → logprob: -1.1368712186813354
    3. '	W' → logprob: -15.886871337890625
    4. ' ' → logprob: -18.511871337890625
    5. '   ' → logprob: -18.886871337890625
    6. '=W' → logprob: -19.261871337890625
    7. ' ' → logprob: -19.386871337890625
    8. '<W' → logprob: -21.261871337890625
    9. '_W' → logprob: -21.386871337890625
    10. '```' → logprob: -21.511871337890625

Token 498: ' +' (ID: 659)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.160531684756279
    2. ':
' → logprob: -1.9105316400527954
    3. '           ' → logprob: -8.660531997680664
    4. '               ' → logprob: -9.410531997680664
    5. ' and' → logprob: -10.785531997680664
    6. ':return' → logprob: -11.160531997680664
    7. ':
' → logprob: -12.035531997680664
    8. '):
' → logprob: -12.660531997680664
    9. ':

' → logprob: -13.660531997680664
    10. '):' → logprob: -13.785531997680664

Token 499: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023246407508850098
    2. ' ' → logprob: -3.7732462882995605
    3. '0' → logprob: -14.523246765136719
    4. '   ' → logprob: -14.648246765136719
    5. '  ' → logprob: -16.89824676513672
    6. ' ' → logprob: -18.39824676513672
    7. '    ' → logprob: -19.02324676513672
    8. '```' → logprob: -19.02324676513672
    9. '10' → logprob: -19.27324676513672
    10. '2' → logprob: -19.39824676513672

Token 500: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.372294698550832e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -15.625009536743164
    4. '0' → logprob: -16.000009536743164
    5. '-' → logprob: -17.500009536743164
    6. '10' → logprob: -18.000009536743164
    7. '```' → logprob: -18.625009536743164
    8. '
' → logprob: -19.000009536743164
    9. '  ' → logprob: -19.375009536743164
    10. '2' → logprob: -19.375009536743164

Token 501: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -4.36574100604048e-06
    2. 'E' → logprob: -13.500004768371582
    3. ':' → logprob: -13.625004768371582
    4. '-' → logprob: -14.000004768371582
    5. ':
' → logprob: -14.375004768371582
    6. '.' → logprob: -16.875003814697266
    7. ' and' → logprob: -17.250003814697266
    8. '   ' → logprob: -17.375003814697266
    9. ' ' → logprob: -17.500003814697266
    10. '0' → logprob: -17.750003814697266

Token 502: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.25
    3. ' -' → logprob: -16.875
    4. '6' → logprob: -17.0
    5. 'e' → logprob: -18.125
    6. '9' → logprob: -18.25
    7. '−' → logprob: -18.25
    8. '   ' → logprob: -18.375
    9. '7' → logprob: -18.625
    10. '3' → logprob: -18.75

Token 503: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.6146230101585388
    2. '6' → logprob: -1.4896230697631836
    3. '8' → logprob: -1.8646230697631836
    4. '7' → logprob: -2.6146230697631836
    5. '10' → logprob: -6.239623069763184
    6. '12' → logprob: -6.239623069763184
    7. '-' → logprob: -7.114623069763184
    8. '5' → logprob: -7.239623069763184
    9. '3' → logprob: -9.989623069763184
    10. '4' → logprob: -10.364623069763184

Token 504: ':' (ID: 25)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5763833522796631
    2. ':' → logprob: -0.8263833522796631
    3. '           ' → logprob: -8.326383590698242
    4. '               ' → logprob: -9.076383590698242
    5. ' and' → logprob: -10.076383590698242
    6. ':
' → logprob: -11.076383590698242
    7. ':return' → logprob: -11.201383590698242
    8. '):
' → logprob: -12.076383590698242
    9. ':

' → logprob: -13.201383590698242
    10. '       ' → logprob: -13.576383590698242

Token 505: ' ' (ID: 220)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01863868720829487
    2. 'can' → logprob: -4.643638610839844
    3. ' can' → logprob: -4.768638610839844
    4. '	can' → logprob: -8.768638610839844
    5. '           ' → logprob: -9.268638610839844
    6. '                
' → logprob: -10.143638610839844
    7. '                   ' → logprob: -11.393638610839844
    8. '	           ' → logprob: -11.393638610839844
    9. '
' → logprob: -11.393638610839844
    10. '_can' → logprob: -12.018638610839844

Token 506: ' #' (ID: 1069)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.03182587772607803
    2. '               ' → logprob: -3.5318257808685303
    3. '           ' → logprob: -6.531826019287109
    4. ' can' → logprob: -7.531826019287109
    5. '	can' → logprob: -10.53182601928711
    6. '                   ' → logprob: -10.90682601928711
    7. '
' → logprob: -11.15682601928711
    8. 'print' → logprob: -11.78182601928711
    9. '_can' → logprob: -12.40682601928711
    10. '       ' → logprob: -12.78182601928711

Token 507: ' marge' (ID: 138270)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.48861178755760193
    2. ' can' → logprob: -1.1136118173599243
    3. 'can' → logprob: -3.3636116981506348
    4. '           ' → logprob: -3.8636116981506348
    5. '                
' → logprob: -7.238611698150635
    6. '	can' → logprob: -7.238611698150635
    7. '                   ' → logprob: -7.863611698150635
    8. '            
' → logprob: -8.738612174987793
    9. '<|end|>' → logprob: -8.988612174987793
    10. '
' → logprob: -9.738612174987793

Token 508: ' numérique' (ID: 73962)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31952759623527527
    2. '               ' → logprob: -1.5695276260375977
    3. '<|end|>' → logprob: -3.6945276260375977
    4. '           ' → logprob: -3.9445276260375977
    5. ':
' → logprob: -4.444527626037598
    6. '<|end|>' → logprob: -6.194527626037598
    7. '=' → logprob: -6.319527626037598
    8. ' and' → logprob: -6.944527626037598
    9. ' :' → logprob: -7.319527626037598
    10. '                   ' → logprob: -7.569527626037598

Token 509: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.26093703508377075
    2. ':' → logprob: -2.010936975479126
    3. ':
' → logprob: -3.010936975479126
    4. '           ' → logprob: -3.135936975479126
    5. ' and' → logprob: -6.385937213897705
    6. '<|end|>' → logprob: -7.510937213897705
    7. '                   ' → logprob: -8.760936737060547
    8. '                       ' → logprob: -9.510936737060547
    9. '):
' → logprob: -9.510936737060547
    10. '              ' → logprob: -9.635936737060547

Token 510: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008365504327230155
    2. '           ' → logprob: -7.500836372375488
    3. ' can' → logprob: -9.000836372375488
    4. '                
' → logprob: -9.625836372375488
    5. 'can' → logprob: -10.500836372375488
    6. '            
' → logprob: -11.375836372375488
    7. '<|end|>' → logprob: -11.375836372375488
    8. '                   ' → logprob: -11.500836372375488
    9. '	           ' → logprob: -12.375836372375488
    10. '
' → logprob: -12.625836372375488

Token 511: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' (adapté à ' can') → logprob: -0.01448020152747631
    2. ' can' → logprob: -4.514480113983154
    3. '               ' → logprob: -5.764480113983154
    4. '           ' → logprob: -8.264480590820312
    5. '
' → logprob: -11.139480590820312
    6. '                   ' → logprob: -11.639480590820312
    7. 'print' → logprob: -12.514480590820312
    8. '	can' → logprob: -12.889480590820312
    9. '   ' → logprob: -13.764480590820312
    10. '_can' → logprob: -14.389480590820312

Token 512: '_fit' (ID: 79598)
  Prédit: '_fit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fit' → logprob: -0.0009677992202341557
    2. '_f' → logprob: -7.500967979431152
    3. '               ' → logprob: -8.750967979431152
    4. 'fit' → logprob: -9.250967979431152
    5. '                   ' → logprob: -10.125967979431152
    6. ' fit' → logprob: -10.500967979431152
    7. '_continue' → logprob: -10.875967979431152
    8. '_break' → logprob: -11.000967979431152
    9. 'Fit' → logprob: -11.500967979431152
    10. '           ' → logprob: -11.750967979431152

Token 513: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.028830386698246002
    2. '=' → logprob: -3.7788302898406982
    3. '=True' → logprob: -5.778830528259277
    4. '               ' → logprob: -6.403830528259277
    5. '                   ' → logprob: -7.778830528259277
    6. '           ' → logprob: -7.903830528259277
    7. ':' → logprob: -12.403830528259277
    8. '       ' → logprob: -12.528830528259277
    9. ' =
' → logprob: -12.528830528259277
    10. '<|end|>' → logprob: -12.528830528259277

Token 514: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0031777136027812958
    2. ' True' → logprob: -5.753177642822266
    3. '(True' → logprob: -19.253177642822266
    4. 'true' → logprob: -19.628177642822266
    5. '=True' → logprob: -20.503177642822266
    6. '   ' → logprob: -22.128177642822266
    7. 'Tr' → logprob: -22.878177642822266
    8. '.True' → logprob: -23.753177642822266
    9. 'TRUE' → logprob: -24.003177642822266
    10. '_true' → logprob: -24.003177642822266

Token 515: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -2.2961512513575144e-05
    2. '           ' → logprob: -11.750022888183594
    3. '                
' → logprob: -12.375022888183594
    4. '<|end|>' → logprob: -12.625022888183594
    5. '                   ' → logprob: -13.000022888183594
    6. '       ' → logprob: -13.500022888183594
    7. '			' → logprob: -14.125022888183594
    8. '              ' → logprob: -14.250022888183594
    9. '		       ' → logprob: -14.375022888183594
    10. '
' → logprob: -14.875022888183594

Token 516: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.3213025744771585e-05
    2. '           ' → logprob: -11.875033378601074
    3. '<|end|>' → logprob: -12.000033378601074
    4. '                
' → logprob: -12.250033378601074
    5. '			' → logprob: -12.500033378601074
    6. '                   ' → logprob: -12.500033378601074
    7. '		       ' → logprob: -13.125033378601074
    8. '	           ' → logprob: -13.625033378601074
    9. '       ' → logprob: -14.000033378601074
    10. '```' → logprob: -14.750033378601074

Token 517: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12813664972782135
    2. 'break' (adapté à ' break') → logprob: -2.12813663482666
    3. ' break' → logprob: -6.75313663482666
    4. '           ' → logprob: -10.25313663482666
    5. '	break' → logprob: -13.25313663482666
    6. '       ' → logprob: -13.37813663482666
    7. '			' → logprob: -14.12813663482666
    8. '                   ' → logprob: -14.37813663482666
    9. '```' → logprob: -15.00313663482666
    10. '                
' → logprob: -16.378137588500977

Token 518: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6807947754859924
    2. '   ' → logprob: -1.0557947158813477
    3. '       ' → logprob: -2.6807947158813477
    4. '    
' → logprob: -2.8057947158813477
    5. '        
' → logprob: -4.930794715881348
    6. '<|end|>' → logprob: -4.930794715881348
    7. 'print' → logprob: -7.555794715881348
    8. '```' → logprob: -8.180794715881348
    9. '<|end|>' → logprob: -8.180794715881348
    10. '            
' → logprob: -8.305794715881348

Token 519: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005756834056228399
    2. 'print' → logprob: -5.880756855010986
    3. '       ' → logprob: -6.130756855010986
    4. '```' → logprob: -7.255756855010986
    5. '<|end|>' → logprob: -10.505756378173828
    6. '    
' → logprob: -10.755756378173828
    7. '        
' → logprob: -12.130756378173828
    8. ' print' → logprob: -12.505756378173828
    9. '
' → logprob: -12.505756378173828
    10. '	print' → logprob: -13.755756378173828

Token 520: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31829315423965454
    2. 'print' → logprob: -1.8182930946350098
    3. '       ' → logprob: -2.3182930946350098
    4. '   ' → logprob: -4.69329309463501
    5. ' if' → logprob: -5.94329309463501
    6. ' print' → logprob: -9.568293571472168
    7. '
' → logprob: -11.818293571472168
    8. '        
' → logprob: -12.693293571472168
    9. '```' → logprob: -12.693293571472168
    10. '	if' → logprob: -14.443293571472168

Token 521: ' Aff' (ID: 13741)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.029928088188171387
    2. 'print' → logprob: -3.779928207397461
    3. '       ' → logprob: -5.029928207397461
    4. ' if' → logprob: -9.029928207397461
    5. ' print' → logprob: -13.654928207397461
    6. '	if' → logprob: -17.15492820739746
    7. '   ' → logprob: -17.65492820739746
    8. '```' → logprob: -17.90492820739746
    9. 'result' → logprob: -18.27992820739746
    10. 'If' → logprob: -18.40492820739746

Token 522: 'ichage' (ID: 118475)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.14458060264587402
    2. 'iche' → logprob: -2.519580602645874
    3. 'f' → logprob: -3.519580602645874
    4. 'ichage' → logprob: -4.144580841064453
    5. 'ic' → logprob: -5.769580841064453
    6. '#' → logprob: -6.269580841064453
    7. 'fic' → logprob: -6.394580841064453
    8. 'ich' → logprob: -6.769580841064453
    9. '   ' → logprob: -7.644580841064453
    10. 'cher' → logprob: -9.144580841064453

Token 523: ' résultat' (ID: 62556)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015783177688717842
    2. '("' → logprob: -4.390783309936523
    3. 'print' → logprob: -6.515783309936523
    4. '('' → logprob: -6.890783309936523
    5. '(' → logprob: -7.390783309936523
    6. '   ' → logprob: -10.015783309936523
    7. ' print' → logprob: -10.140783309936523
    8. '("\' → logprob: -10.640783309936523
    9. 'if' → logprob: -11.390783309936523
    10. '(("' → logprob: -11.640783309936523

Token 524: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013608321314677596
    2. 'print' → logprob: -7.001360893249512
    3. ' print' → logprob: -8.626360893249512
    4. ' if' → logprob: -8.751360893249512
    5. 'if' → logprob: -9.126360893249512
    6. '<|end|>' → logprob: -13.751360893249512
    7. '   ' → logprob: -14.126360893249512
    8. '```' → logprob: -14.376360893249512
    9. ',' → logprob: -16.126359939575195
    10. '           ' → logprob: -16.376359939575195

Token 525: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004692849237471819
    2. 'print' → logprob: -5.504693031311035
    3. 'if' → logprob: -7.754693031311035
    4. ' if' → logprob: -9.254693031311035
    5. ' print' → logprob: -9.379693031311035
    6. '   ' → logprob: -12.504693031311035
    7. '```' → logprob: -14.754693031311035
    8. '<|end|>' → logprob: -15.004693031311035
    9. '	print' → logprob: -15.129693031311035
    10. '	   ' → logprob: -15.754693031311035

Token 526: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.03423787280917168
    2. 'if' → logprob: -3.784237861633301
    3. '       ' → logprob: -4.534237861633301
    4. ' print' → logprob: -8.7842378616333
    5. ' if' → logprob: -10.0342378616333
    6. '   ' → logprob: -17.409238815307617
    7. '	print' → logprob: -17.409238815307617
    8. '```' → logprob: -17.909238815307617
    9. 'Print' → logprob: -19.534238815307617
    10. '#print' → logprob: -19.784238815307617

Token 527: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0001438266917830333
    2. '('' → logprob: -9.250144004821777
    3. '(' → logprob: -10.000144004821777
    4. '"' → logprob: -13.250144004821777
    5. '(("' → logprob: -15.125144004821777
    6. '(
' → logprob: -16.00014305114746
    7. '("#' → logprob: -16.87514305114746
    8. ' ("' → logprob: -17.87514305114746
    9. '(True' → logprob: -18.12514305114746
    10. '(int' → logprob: -18.50014305114746

Token 528: 'OK' (ID: 5175)
  Prédit: 'YES'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'YES' → logprob: -0.7037148475646973
    2. 'OK' → logprob: -1.2037148475646973
    3. 'Yes' → logprob: -3.0787148475646973
    4. 'S' → logprob: -3.0787148475646973
    5. 'Oui' → logprob: -3.3287148475646973
    6. '"' → logprob: -3.5787148475646973
    7. 'SI' → logprob: -4.328714847564697
    8. ''' → logprob: -5.078714847564697
    9. 'yes' → logprob: -5.203714847564697
    10. 'Y' → logprob: -5.328714847564697

Token 529: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.008626040071249008
    2. '")' → logprob: -4.7586259841918945
    3. '")
' → logprob: -11.508625984191895
    4. '")

' → logprob: -14.383625984191895
    5. '")
' → logprob: -14.508625984191895
    6. '""' → logprob: -16.63362693786621
    7. ''' → logprob: -17.00862693786621
    8. 'AY' → logprob: -17.13362693786621
    9. '!"' → logprob: -17.25862693786621
    10. '",' → logprob: -17.50862693786621

Token 530: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.05377613380551338
    2. ')' → logprob: -3.0537760257720947
    3. 'if' → logprob: -5.303776264190674
    4. '"' → logprob: -8.553775787353516
    5. '")' → logprob: -12.178775787353516
    6. '   ' → logprob: -13.053775787353516
    7. ' )' → logprob: -13.803775787353516
    8. '()' → logprob: -14.428775787353516
    9. ' ' → logprob: -14.928775787353516
    10. '	if' → logprob: -16.303775787353516

Token 531: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.575939953327179
    2. ' can' → logprob: -0.825939953327179
    3. '	can' → logprob: -14.825940132141113
    4. '(can' → logprob: -15.950940132141113
    5. 'Can' → logprob: -17.325939178466797
    6. '_can' → logprob: -17.450939178466797
    7. ' not' → logprob: -19.575939178466797
    8. ' ' → logprob: -19.825939178466797
    9. ' ' → logprob: -20.575939178466797
    10. 'not' → logprob: -20.575939178466797

Token 532: '_fit' (ID: 79598)
  Prédit: '_fit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fit' → logprob: -0.006628216709941626
    2. 'fit' → logprob: -5.506628036499023
    3. 'it' → logprob: -6.006628036499023
    4. 'et' → logprob: -11.006628036499023
    5. 't' → logprob: -11.006628036499023
    6. 'ot' → logprob: -11.256628036499023
    7. '_f' → logprob: -11.881628036499023
    8. 'ut' → logprob: -12.131628036499023
    9. 'an' → logprob: -12.381628036499023
    10. ' fit' → logprob: -12.506628036499023

Token 533: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.038047224283218384
    2. 'else' → logprob: -3.2880473136901855
    3. ')' → logprob: -12.288046836853027
    4. '   ' → logprob: -14.913046836853027
    5. ' ' → logprob: -15.038046836853027
    6. '	else' → logprob: -15.163046836853027
    7. '       ' → logprob: -16.413047790527344
    8. '```' → logprob: -16.538047790527344
    9. '==' → logprob: -16.663047790527344
    10. '        ' → logprob: -17.038047790527344

Token 534: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0068005104549229145
    2. ' "' → logprob: -5.131800651550293
    3. '"No' → logprob: -7.631800651550293
    4. '"N' → logprob: -8.631800651550293
    5. '   ' → logprob: -9.256800651550293
    6. ' ' → logprob: -9.756800651550293
    7. '"K' → logprob: -11.881800651550293
    8. '"T' → logprob: -12.256800651550293
    9. 'NO' → logprob: -12.256800651550293
    10. '  ' → logprob: -12.506800651550293

Token 535: 'NA' (ID: 9555)
  Prédit: 'NA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NA' → logprob: -0.205093115568161
    2. 'NO' → logprob: -1.9550931453704834
    3. 'NG' → logprob: -3.3300931453704834
    4. 'N' → logprob: -6.455092906951904
    5. 'IM' → logprob: -6.830092906951904
    6. 'KO' → logprob: -6.830092906951904
    7. 'No' → logprob: -6.955092906951904
    8. 'FAIL' → logprob: -7.205092906951904
    9. 'im' → logprob: -8.455093383789062
    10. 'Too' → logprob: -8.455093383789062

Token 536: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.011731287464499474
    2. 'F' → logprob: -5.636731147766113
    3. 'K' → logprob: -5.886731147766113
    4. 'C' → logprob: -5.886731147766113
    5. 'OK' → logprob: -7.261731147766113
    6. 'N' → logprob: -7.636731147766113
    7. 'P' → logprob: -7.886731147766113
    8. 'S' → logprob: -8.011731147766113
    9. ')' → logprob: -8.886731147766113
    10. '"' → logprob: -9.011731147766113

Token 537: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0646081417798996
    2. '<|end|>' → logprob: -2.814608097076416
    3. '```' → logprob: -6.814608097076416
    4. ' if' → logprob: -6.814608097076416
    5. '
' → logprob: -8.189608573913574
    6. '#' → logprob: -9.564608573913574
    7. '<|end|>' → logprob: -10.314608573913574
    8. '...' → logprob: -11.314608573913574
    9. '  
' → logprob: -11.939608573913574
    10. '[' → logprob: -12.064608573913574

Token 538: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.5759674906730652
    2. '__' → logprob: -0.8259674906730652
    3. '_name' → logprob: -11.825967788696289
    4. '_' → logprob: -12.075967788696289
    5. '___' → logprob: -12.450967788696289
    6. ' ' → logprob: -12.825967788696289
    7. 'name' → logprob: -12.950967788696289
    8. 'if' → logprob: -13.200967788696289
    9. '/__' → logprob: -14.075967788696289
    10. ' ' → logprob: -14.075967788696289

Token 539: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00702982721850276
    2. '==' → logprob: -5.382030010223389
    3. ' ==' → logprob: -6.257030010223389
    4. '=="' → logprob: -8.38202953338623
    5. 'name' → logprob: -8.88202953338623
    6. '.__' → logprob: -10.00702953338623
    7. '__.__' → logprob: -10.38202953338623
    8. ' __' → logprob: -11.25702953338623
    9. 'if' → logprob: -12.00702953338623
    10. '=='' → logprob: -12.13202953338623

Token 540: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00010127831774298102
    2. '__.__' → logprob: -9.375101089477539
    3. '==' → logprob: -11.250101089477539
    4. '__.' → logprob: -13.500101089477539
    5. '=="' → logprob: -13.625101089477539
    6. '__["' → logprob: -15.250101089477539
    7. ' ==' → logprob: -16.12510108947754
    8. '___' → logprob: -17.12510108947754
    9. '```' → logprob: -17.12510108947754
    10. '__('' → logprob: -17.25010108947754

Token 541: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.04993482306599617
    2. '==' → logprob: -3.4249348640441895
    3. '=="' → logprob: -4.7999348640441895
    4. ' ==' → logprob: -5.0499348640441895
    5. '__.__' → logprob: -7.0499348640441895
    6. '=='' → logprob: -7.5499348640441895
    7. '.__' → logprob: -10.049934387207031
    8. '__.' → logprob: -10.674934387207031
    9. '"' → logprob: -11.424934387207031
    10. '__["' → logprob: -11.674934387207031

Token 542: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.023267146199941635
    2. ''' → logprob: -3.7732670307159424
    3. ' "__' → logprob: -11.148266792297363
    4. '__' → logprob: -11.898266792297363
    5. ' '__' → logprob: -15.398266792297363
    6. '"user' → logprob: -16.27326774597168
    7. '"name' → logprob: -16.89826774597168
    8. '("__' → logprob: -17.39826774597168
    9. '   ' → logprob: -17.89826774597168
    10. ''"' → logprob: -18.27326774597168

Token 543: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0032174033112823963
    2. '__' → logprob: -5.7532172203063965
    3. '"' → logprob: -10.628217697143555
    4. 'name' → logprob: -11.503217697143555
    5. ''' → logprob: -12.503217697143555
    6. ' main' → logprob: -14.128217697143555
    7. 'built' → logprob: -14.878217697143555
    8. '_main' → logprob: -15.003217697143555
    9. '('__' → logprob: -16.878217697143555
    10. 'm' → logprob: -17.378217697143555

Token 544: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.014656784012913704
    2. '__' → logprob: -4.264657020568848
    3. '__':
' → logprob: -7.639657020568848
    4. '__.' → logprob: -12.139657020568848
    5. '__:' → logprob: -12.639657020568848
    6. '__["' → logprob: -13.514657020568848
    7. '__.__' → logprob: -13.764657020568848
    8. '__
' → logprob: -15.014657020568848
    9. '__",' → logprob: -15.639657020568848
    10. '__
' → logprob: -16.01465606689453

Token 545: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.022110743448138237
    2. ' main' → logprob: -4.022110939025879
    3. '   ' → logprob: -5.647110939025879
    4. '	main' → logprob: -7.772110939025879
    5. '_main' → logprob: -12.772110939025879
    6. '(main' → logprob: -15.022110939025879
    7. '__' → logprob: -15.147110939025879
    8. '```' → logprob: -15.772110939025879
    9. ' ' → logprob: -16.522109985351562
    10. '.main' → logprob: -16.647109985351562

Token 546: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.5048530030981055e-06
    2. ' main' → logprob: -13.500001907348633
    3. '	main' → logprob: -20.250001907348633
    4. '   ' → logprob: -23.375001907348633
    5. '_main' → logprob: -25.000001907348633
    6. '.main' → logprob: -25.250001907348633
    7. 'import' → logprob: -25.375001907348633
    8. '(main' → logprob: -26.500001907348633
    9. 'Main' → logprob: -27.000001907348633
    10. 'mainwindow' → logprob: -28.000001907348633

Token 547: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 545
Tokens correctement prédits (1ère position, stricte): 184
Tokens correctement prédits (1ère position, avec adaptation): 196
Tokens correctement prédits (top 10): 353
Précision stricte (1ère position): 33.76%
Précision adaptée (1ère position): 35.96%
Précision (top 10): 64.77%
================================================================================
