================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:11:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    n = int(input())
    if n == 0:
        break
    walls = []
    for _ in range(n):
        wx, wy, r = map(int, input().split())
        walls.append((wx, wy, r))
    m = int(input())
    for _ in range(m):
        tx, ty, sx, sy = map(int, input().split())
        safe = True
        for (wx, wy, r) in walls:
            # line segment from (sx, sy) to (tx, ty)
            dx = tx - sx
            dy = ty - sy
            fx = sx - wx
            fy = sy - wy
            a = dx*dx + dy*dy
            b = 2*(fx*dx + fy*dy)
            c = fx*fx + fy*fy - r*r
            discriminant = b*b - 4*a*c
            if discriminant < 0:
                # no intersection
                continue
            else:
                discriminant_sqrt = discriminant**0.5
                t1 = (-b - discriminant_sqrt)/(2*a)
                t2 = (-b + discriminant_sqrt)/(2*a)
                # check if any intersection point lies on the segment (0<=t<=1)
                if (0 < t1 < 1) or (0 < t2 < 1):
                    safe = False
                    break
        if safe:
            print("Danger")
        else:
            print("Safe")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14250479638576508
    2. ' ' → logprob: -2.5175046920776367
    3. '    ' → logprob: -4.017504692077637
    4. ':' → logprob: -4.767504692077637
    5. '(space' → logprob: -5.267504692077637
    6. '<|end|>' → logprob: -5.517504692077637
    7. '\' → logprob: -5.642504692077637
    8. '```' → logprob: -5.892504692077637
    9. ' (' → logprob: -6.267504692077637
    10. ' :' → logprob: -6.517504692077637

Token 4: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19517217576503754
    2. '    ' → logprob: -2.695172071456909
    3. ' ' → logprob: -3.070172071456909
    4. '```' → logprob: -3.195172071456909
    5. '       ' → logprob: -5.195172309875488
    6. '    
' → logprob: -5.695172309875488
    7. ' pass' → logprob: -5.945172309875488
    8. '  ' → logprob: -6.445172309875488
    9. 'pass' → logprob: -6.445172309875488
    10. ' ```' → logprob: -6.945172309875488

Token 5: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2360780239105225
    2. '=' → logprob: -1.4860780239105225
    3. 'o' → logprob: -1.8610780239105225
    4. '   ' → logprob: -2.2360780239105225
    5. 'u' → logprob: -2.8610780239105225
    6. ' =' → logprob: -3.2360780239105225
    7. '%' → logprob: -3.3610780239105225
    8. '+' → logprob: -3.8610780239105225
    9. '>' → logprob: -4.361078262329102
    10. '  ' → logprob: -4.611078262329102

Token 6: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.09271397441625595
    2. ' input' → logprob: -2.5927140712738037
    3. 'int' → logprob: -4.592713832855225
    4. 'input' → logprob: -5.717713832855225
    5. ' n' → logprob: -8.592714309692383
    6. ' ' → logprob: -9.717714309692383
    7. ' randint' → logprob: -10.967714309692383
    8. 'n' → logprob: -11.717714309692383
    9. ' eval' → logprob: -12.217714309692383
    10. ' i' → logprob: -12.217714309692383

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0012015394167974591
    2. '(input' → logprob: -6.751201629638672
    3. '(n' → logprob: -10.876201629638672
    4. '()' → logprob: -12.501201629638672
    5. '(
' → logprob: -13.251201629638672
    6. '('' → logprob: -13.501201629638672
    7. '(code' → logprob: -14.001201629638672
    8. '(user' → logprob: -14.251201629638672
    9. ' (' → logprob: -14.501201629638672
    10. '(token' → logprob: -15.001201629638672

Token 8: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20760981738567352
    2. ')' → logprob: -1.95760977268219
    3. '()' → logprob: -3.3326098918914795
    4. '())' → logprob: -4.7076096534729
    5. '))' → logprob: -7.2076096534729
    6. '(
' → logprob: -8.707610130310059
    7. '('' → logprob: -8.832610130310059
    8. '()))' → logprob: -9.957610130310059
    9. ' )' → logprob: -10.082610130310059
    10. ' ' → logprob: -10.207610130310059

Token 9: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 10: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6319265365600586
    2. ' if' → logprob: -1.2569265365600586
    3. ' ' → logprob: -3.0069265365600586
    4. ')' → logprob: -3.1319265365600586
    5. '    ' → logprob: -3.1319265365600586
    6. 'if' (adapté à ' if') → logprob: -4.381926536560059
    7. '  ' → logprob: -4.881926536560059
    8. '<|end|>' → logprob: -4.881926536560059
    9. '```' → logprob: -5.256926536560059
    10. ' )' → logprob: -6.131926536560059

Token 11: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0034862698521465063
    2. ' ' → logprob: -6.003486156463623
    3. ' not' → logprob: -7.378486156463623
    4. 'n' → logprob: -7.878486156463623
    5. ' ' → logprob: -12.378486633300781
    6. 'not' → logprob: -13.628486633300781
    7. '  ' → logprob: -15.003486633300781
    8. ' (' → logprob: -15.753486633300781
    9. '(n' → logprob: -15.878486633300781
    10. '<|end|>' → logprob: -16.12848663330078

Token 12: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3223670423030853
    2. ' >' → logprob: -2.072366952896118
    3. ' <=' → logprob: -2.447366952896118
    4. ' <' → logprob: -3.572366952896118
    5. '==' → logprob: -3.822366952896118
    6. '>' → logprob: -5.197367191314697
    7. ' ' → logprob: -5.447367191314697
    8. ' >=' → logprob: -7.197367191314697
    9. '<=' → logprob: -7.197367191314697
    10. '<' → logprob: -7.447367191314697

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10021023452281952
    2. '0' → logprob: -2.350210189819336
    3. ' ' → logprob: -13.975210189819336
    4. '1' → logprob: -14.100210189819336
    5. '32' → logprob: -15.225210189819336
    6. ' -' → logprob: -15.912710189819336
    7. '  ' → logprob: -15.975210189819336
    8. ' a' → logprob: -16.225210189819336
    9. ' EOF' → logprob: -16.225210189819336
    10. '4' → logprob: -16.225210189819336

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006742842961102724
    2. ' ' → logprob: -5.00674295425415
    3. '-' → logprob: -11.131742477416992
    4. '1' → logprob: -12.631742477416992
    5. ' -' → logprob: -12.631742477416992
    6. '42' → logprob: -13.006742477416992
    7. '4' → logprob: -14.631742477416992
    8. '   ' → logprob: -14.631742477416992
    9. '    ' → logprob: -14.756742477416992
    10. 's' → logprob: -15.256742477416992

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.023293538717553e-05
    2. ':
' → logprob: -11.250030517578125
    3. '   ' → logprob: -12.125030517578125
    4. ' :' → logprob: -12.250030517578125
    5. '       ' → logprob: -13.250030517578125
    6. ':return' → logprob: -13.250030517578125
    7. '):' → logprob: -13.625030517578125
    8. ':\' → logprob: -14.000030517578125
    9. '    ' → logprob: -15.000030517578125
    10. '():' → logprob: -15.500030517578125

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006626377580687404
    2. ' break' → logprob: -8.125662803649902
    3. '   ' → logprob: -8.750662803649902
    4. '\n' → logprob: -9.500662803649902
    5. ':' → logprob: -10.250662803649902
    6. '    ' → logprob: -10.875662803649902
    7. '\' → logprob: -11.125662803649902
    8. '	break' → logprob: -11.125662803649902
    9. '      ' → logprob: -11.750662803649902
    10. '        ' → logprob: -12.125662803649902

Token 17: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.0031932818237692118
    2. '       ' → logprob: -6.628193378448486
    3. 'break' (adapté à ' break') → logprob: -7.503193378448486
    4. '\n' → logprob: -8.003192901611328
    5. ' 
' → logprob: -8.253192901611328
    6. ' \' → logprob: -8.753192901611328
    7. '    ' → logprob: -9.253192901611328
    8. '	break' → logprob: -9.503192901611328
    9. '_break' → logprob: -9.503192901611328
    10. '```' → logprob: -9.503192901611328

Token 18: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.778116762638092
    2. '   ' → logprob: -1.2781167030334473
    3. ':' → logprob: -1.5281167030334473
    4. '    
' → logprob: -4.153116703033447
    5. '\' → logprob: -4.653116703033447
    6. '```' → logprob: -5.528116703033447
    7. '\r' → logprob: -5.528116703033447
    8. '
' → logprob: -6.403116703033447
    9. '<|end|>' → logprob: -6.403116703033447
    10. 'n' → logprob: -6.528116703033447

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34480130672454834
    2. '<|end|>' → logprob: -1.5948013067245483
    3. '\n' → logprob: -3.469801425933838
    4. ':' → logprob: -4.469801425933838
    5. '```' → logprob: -4.719801425933838
    6. '    
' → logprob: -4.719801425933838
    7. '#' → logprob: -4.969801425933838
    8. '
' → logprob: -5.469801425933838
    9. 'n' → logprob: -5.594801425933838
    10. '<|end|>' → logprob: -5.844801425933838

Token 20: ' walls' (ID: 20562)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5292903780937195
    2. ' ' → logprob: -1.1542904376983643
    3. '    ' → logprob: -3.9042904376983643
    4. ':' → logprob: -4.279290199279785
    5. '\' → logprob: -4.529290199279785
    6. '\n' → logprob: -4.529290199279785
    7. ')' → logprob: -4.654290199279785
    8. '(' → logprob: -5.529290199279785
    9. '#' → logprob: -5.529290199279785
    10. '  ' → logprob: -5.654290199279785

Token 21: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1670403629541397
    2. ' =' → logprob: -2.0420403480529785
    3. '=' → logprob: -4.5420403480529785
    4. '_' → logprob: -4.7920403480529785
    5. '[]' → logprob: -6.0420403480529785
    6. '   ' → logprob: -7.5420403480529785
    7. '.' → logprob: -7.9170403480529785
    8. '[:]' → logprob: -7.9170403480529785
    9. '[i' → logprob: -8.542040824890137
    10. '.append' → logprob: -8.667040824890137

Token 22: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.39122503995895386
    2. '[]' → logprob: -1.1412250995635986
    3. '[' → logprob: -6.1412248611450195
    4. ' [' → logprob: -6.3912248611450195
    5. ' list' → logprob: -8.26622486114502
    6. 'list' → logprob: -9.26622486114502
    7. '{}' → logprob: -9.51622486114502
    8. ' {}' → logprob: -10.89122486114502
    9. '[n' → logprob: -11.14122486114502
    10. ' ' → logprob: -11.26622486114502

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009891019202768803
    2. '<|end|>' → logprob: -5.634891033172607
    3. ' for' → logprob: -6.259891033172607
    4. '[' → logprob: -6.509891033172607
    5. 'for' → logprob: -6.884891033172607
    6. '    
' → logprob: -7.884891033172607
    7. '    ' → logprob: -8.25989055633545
    8. '```' → logprob: -8.38489055633545
    9. '\' → logprob: -8.63489055633545
    10. ')' → logprob: -8.88489055633545

Token 24: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20652778446674347
    2. 'for' (adapté à ' for') → logprob: -1.831527829170227
    3. ' for' → logprob: -3.9565277099609375
    4. '[' → logprob: -6.0815277099609375
    5. '	for' → logprob: -6.7065277099609375
    6. '```' → logprob: -6.7065277099609375
    7. '\t' → logprob: -7.2065277099609375
    8. '\' → logprob: -7.7065277099609375
    9. 'w' → logprob: -7.8315277099609375
    10. '    ' → logprob: -8.081527709960938

Token 25: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5054505467414856
    2. ' i' → logprob: -1.1304504871368408
    3. ' _' → logprob: -2.630450487136841
    4. '_' → logprob: -6.88045072555542
    5. '  ' → logprob: -7.88045072555542
    6. 'i' → logprob: -8.005450248718262
    7. ' ‌' → logprob: -10.005450248718262
    8. ' range' → logprob: -11.380450248718262
    9. ' ▁' → logprob: -11.630450248718262
    10. ' )' → logprob: -12.005450248718262

Token 26: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004813272971659899
    2. 'in' → logprob: -5.379813194274902
    3. ' ' → logprob: -8.629813194274902
    4. ' i' → logprob: -12.129813194274902
    5. '	in' → logprob: -13.004813194274902
    6. 'range' → logprob: -13.379813194274902
    7. '_' → logprob: -14.004813194274902
    8. 'n' → logprob: -14.129813194274902
    9. '  ' → logprob: -14.629813194274902
    10. '```' → logprob: -14.754813194274902

Token 27: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.47408103942871094
    2. ' range' → logprob: -0.9740810394287109
    3. '	range' → logprob: -12.974081039428711
    4. 'rang' → logprob: -14.224081039428711
    5. '(range' → logprob: -14.724081039428711
    6. 'ran' → logprob: -15.474081039428711
    7. '```' → logprob: -15.849081039428711
    8. '_range' → logprob: -16.47408103942871
    9. '.range' → logprob: -16.97408103942871
    10. 'r' → logprob: -17.22408103942871

Token 28: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0311107374727726
    2. '(' → logprob: -3.7811107635498047
    3. ' n' → logprob: -5.031110763549805
    4. ' (' → logprob: -6.656110763549805
    5. 'n' → logprob: -11.156110763549805
    6. ' ' → logprob: -14.406110763549805
    7. ')n' → logprob: -15.031110763549805
    8. '()' → logprob: -15.156110763549805
    9. '	n' → logprob: -15.281110763549805
    10. '(int' → logprob: -15.281110763549805

Token 29: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002243631286546588
    2. ')' → logprob: -6.252243518829346
    3. ' ):' → logprob: -8.377243995666504
    4. '   ' → logprob: -10.377243995666504
    5. ':' → logprob: -10.377243995666504
    6. '):
' → logprob: -11.127243995666504
    7. ' )' → logprob: -13.127243995666504
    8. '+' → logprob: -13.752243995666504
    9. '-' → logprob: -14.502243995666504
    10. ',' → logprob: -14.502243995666504

Token 30: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.12651127576828003
    2. ' ' → logprob: -3.001511335372925
    3. '       ' → logprob: -3.501511335372925
    4. '   ' → logprob: -3.751511335372925
    5. ' walls' → logprob: -5.126511096954346
    6. '     
' → logprob: -6.376511096954346
    7. '<|end|>' → logprob: -6.751511096954346
    8. '        ' → logprob: -7.126511096954346
    9. ' 
' → logprob: -7.251511096954346
    10. 'w' → logprob: -7.501511096954346

Token 31: ' wx' (ID: 20113)
  Prédit: ' walls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' walls' → logprob: -0.006508366670459509
    2. 'walls' → logprob: -5.1315083503723145
    3. ' wall' → logprob: -8.381508827209473
    4. '   ' → logprob: -9.256508827209473
    5. '    ' → logprob: -9.381508827209473
    6. ' w' → logprob: -9.381508827209473
    7. 'w' → logprob: -10.131508827209473
    8. ' input' → logprob: -11.381508827209473
    9. 'Walls' → logprob: -11.631508827209473
    10. 'wall' → logprob: -12.131508827209473

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001742650754749775
    2. ',w' → logprob: -7.376742839813232
    3. ' ,' → logprob: -7.876742839813232
    4. ',y' → logprob: -8.376742362976074
    5. 'all' → logprob: -8.626742362976074
    6. 'alls' → logprob: -9.501742362976074
    7. ',a' → logprob: -9.751742362976074
    8. ' =' → logprob: -10.126742362976074
    9. '=' → logprob: -11.001742362976074
    10. ',n' → logprob: -11.126742362976074

Token 33: ' wy' (ID: 14962)
  Prédit: 'wy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wy' → logprob: -0.35747674107551575
    2. ' wy' → logprob: -1.2324767112731934
    3. ' w' → logprob: -5.482476711273193
    4. 'w' → logprob: -5.982476711273193
    5. ' ' → logprob: -6.607476711273193
    6. 'wx' → logprob: -7.732476711273193
    7. ' wx' → logprob: -8.107477188110352
    8. ' ' → logprob: -8.982477188110352
    9. 'wyl' → logprob: -11.482477188110352
    10. 'wj' → logprob: -11.732477188110352

Token 34: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0182791780680418
    2. '=' → logprob: -4.268279075622559
    3. ',' → logprob: -5.518279075622559
    4. ' ,' → logprob: -9.768279075622559
    5. ')' → logprob: -11.018279075622559
    6. ' ' → logprob: -11.268279075622559
    7. '   ' → logprob: -12.268279075622559
    8. '    ' → logprob: -13.643279075622559
    9. '<|end|>' → logprob: -14.393279075622559
    10. ' =)' → logprob: -15.018279075622559

Token 35: ' r' (ID: 428)
  Prédit: ' wz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' wz' → logprob: -0.10533558577299118
    2. 'w' → logprob: -2.9803354740142822
    3. ' w' → logprob: -3.1053354740142822
    4. ' wx' → logprob: -5.980335712432861
    5. ' ' → logprob: -7.105335712432861
    6. 'wx' → logprob: -7.605335712432861
    7. ' =' → logprob: -8.105335235595703
    8. '=' → logprob: -10.855335235595703
    9. ' x' → logprob: -10.980335235595703
    10. ' ' → logprob: -10.980335235595703

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1799435019493103
    2. '=' → logprob: -1.804943561553955
    3. ' ' → logprob: -9.429943084716797
    4. ',' → logprob: -10.179943084716797
    5. ')' → logprob: -10.304943084716797
    6. '=int' → logprob: -10.929943084716797
    7. 'adius' → logprob: -11.304943084716797
    8. '=input' → logprob: -12.679943084716797
    9. 'ight' → logprob: -12.929943084716797
    10. ')=' → logprob: -13.429943084716797

Token 37: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.008625447750091553
    2. 'map' → logprob: -4.758625507354736
    3. '	map' → logprob: -12.508625030517578
    4. ' ' → logprob: -12.758625030517578
    5. ' list' → logprob: -12.758625030517578
    6. ' ' → logprob: -14.758625030517578
    7. ' [' → logprob: -15.258625030517578
    8. ' input' → logprob: -15.383625030517578
    9. '   ' → logprob: -15.508625030517578
    10. '[' → logprob: -16.008625030517578

Token 38: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.007502628490328789
    2. '(' → logprob: -5.007502555847168
    3. '(float' → logprob: -7.507502555847168
    4. '(input' → logprob: -9.007502555847168
    5. '(lambda' → logprob: -9.382502555847168
    6. '<int' → logprob: -11.257502555847168
    7. '(str' → logprob: -12.382502555847168
    8. '[int' → logprob: -12.507502555847168
    9. '(s' → logprob: -12.882502555847168
    10. '(
' → logprob: -13.632502555847168

Token 39: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.13015085458755493
    2. ',input' → logprob: -2.25515079498291
    3. ',' → logprob: -4.50515079498291
    4. 'input' → logprob: -5.38015079498291
    5. '(' → logprob: -7.00515079498291
    6. ' input' → logprob: -8.25515079498291
    7. ')' → logprob: -8.38015079498291
    8. ' ,' → logprob: -10.50515079498291
    9. '   ' → logprob: -10.63015079498291
    10. '=input' → logprob: -10.88015079498291

Token 40: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4740934371948242
    2. 'input' → logprob: -0.9740934371948242
    3. ')' → logprob: -11.599093437194824
    4. ' )' → logprob: -13.224093437194824
    5. '(input' → logprob: -13.349093437194824
    6. '=input' → logprob: -13.724093437194824
    7. ',input' → logprob: -14.224093437194824
    8. '	input' → logprob: -14.224093437194824
    9. ' ' → logprob: -14.599093437194824
    10. '[input' → logprob: -15.224093437194824

Token 41: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.41866585687967e-06
    2. '()' → logprob: -11.750008583068848
    3. ' ().' → logprob: -14.875008583068848
    4. '(' → logprob: -17.00000762939453
    5. '.split' → logprob: -17.50000762939453
    6. ')' → logprob: -18.00000762939453
    7. '.' → logprob: -19.00000762939453
    8. '()
' → logprob: -19.37500762939453
    9. '('').' → logprob: -19.75000762939453
    10. 'split' → logprob: -20.12500762939453

Token 42: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.266944157890975e-05
    2. 'strip' → logprob: -9.625072479248047
    3. 'rstrip' → logprob: -12.250072479248047
    4. ' split' → logprob: -14.000072479248047
    5. '(split' → logprob: -14.000072479248047
    6. 'spl' → logprob: -17.750072479248047
    7. 'plit' → logprob: -17.750072479248047
    8. 's' → logprob: -18.375072479248047
    9. ')' → logprob: -18.500072479248047
    10. '.split' → logprob: -18.750072479248047

Token 43: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.13821308314800262
    2. ')' → logprob: -2.1382131576538086
    3. '()' → logprob: -4.513213157653809
    4. '())
' → logprob: -8.888213157653809
    5. '(' → logprob: -10.263213157653809
    6. '()))' → logprob: -10.263213157653809
    7. '))' → logprob: -10.388213157653809
    8. ' )' → logprob: -12.638213157653809
    9. '('' → logprob: -12.763213157653809
    10. ')
' → logprob: -13.138213157653809

Token 44: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22340114414691925
    2. ')' → logprob: -1.8484011888504028
    3. '<|end|>' → logprob: -3.4734010696411133
    4. '       ' → logprob: -5.848401069641113
    5. '
' → logprob: -6.098401069641113
    6. ' walls' → logprob: -6.973401069641113
    7. '    
' → logprob: -7.098401069641113
    8. ',' → logprob: -7.223401069641113
    9. '\n' → logprob: -7.223401069641113
    10. 'walls' → logprob: -7.723401069641113

Token 45: ' walls' (ID: 20562)
  Prédit: ' walls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' walls' → logprob: -0.26743918657302856
    2. 'walls' (adapté à ' walls') → logprob: -1.5174391269683838
    3. '   ' → logprob: -4.642439365386963
    4. 'w' → logprob: -5.892439365386963
    5. ')' → logprob: -6.642439365386963
    6. '       ' → logprob: -7.392439365386963
    7. '<|end|>' → logprob: -8.142438888549805
    8. 'wall' → logprob: -8.517438888549805
    9. '    ' → logprob: -9.142438888549805
    10. ' w' → logprob: -9.392438888549805

Token 46: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.06199491396546364
    2. '.' → logprob: -2.811995029449463
    3. ' .' → logprob: -10.811994552612305
    4. '.extend' → logprob: -13.311994552612305
    5. '.push' → logprob: -13.936994552612305
    6. '.app' → logprob: -13.936994552612305
    7. '.ap' → logprob: -13.936994552612305
    8. '.setdefault' → logprob: -14.186994552612305
    9. '.Append' → logprob: -14.686994552612305
    10. '.add' → logprob: -14.686994552612305

Token 47: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.004172421991825104
    2. '(' → logprob: -5.504172325134277
    3. '(((' → logprob: -9.754172325134277
    4. '(([' → logprob: -10.879172325134277
    5. '([' → logprob: -11.379172325134277
    6. '([(' → logprob: -13.504172325134277
    7. '(wx' → logprob: -13.879172325134277
    8. '(('' → logprob: -14.129172325134277
    9. '((-' → logprob: -14.629172325134277
    10. '(w' → logprob: -15.129172325134277

Token 48: 'wx' (ID: 43176)
  Prédit: 'wx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wx' → logprob: -0.0013335748808458447
    2. ' wx' → logprob: -6.626333713531494
    3. '(wx' → logprob: -11.876333236694336
    4. '	wx' → logprob: -15.251333236694336
    5. ' ' → logprob: -16.251333236694336
    6. '   ' → logprob: -16.376333236694336
    7. 'wy' → logprob: -16.626333236694336
    8. ')' → logprob: -16.751333236694336
    9. 'w' → logprob: -17.251333236694336
    10. '.wx' → logprob: -17.501333236694336

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3795937522663735e-05
    2. ' ,' → logprob: -10.75002384185791
    3. ',
' → logprob: -14.12502384185791
    4. '<|end|>' → logprob: -14.87502384185791
    5. ')' → logprob: -15.25002384185791
    6. ',y' → logprob: -15.87502384185791
    7. '+' → logprob: -16.125022888183594
    8. ',w' → logprob: -16.125022888183594
    9. '‌,' → logprob: -16.250022888183594
    10. ',

' → logprob: -16.625022888183594

Token 50: ' wy' (ID: 14962)
  Prédit: 'wy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wy' → logprob: -0.22547873854637146
    2. ' wy' → logprob: -1.6004787683486938
    3. ' ' → logprob: -10.725479125976562
    4. 'w' → logprob: -11.850479125976562
    5. 'wyl' → logprob: -11.975479125976562
    6. 'wx' → logprob: -12.600479125976562
    7. ' w' → logprob: -12.725479125976562
    8. ')' → logprob: -12.850479125976562
    9. '<|end|>' → logprob: -12.975479125976562
    10. ' ' → logprob: -13.225479125976562

Token 51: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.763666947837919e-05
    2. ' ,' → logprob: -10.62504768371582
    3. ',r' → logprob: -10.87504768371582
    4. ')' → logprob: -13.00004768371582
    5. '),' → logprob: -14.37504768371582
    6. ',
' → logprob: -14.50004768371582
    7. '))' → logprob: -15.00004768371582
    8. 'r' → logprob: -16.00004768371582
    9. ',)' → logprob: -16.37504768371582
    10. '```' → logprob: -16.62504768371582

Token 52: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.06994032114744186
    2. ' r' → logprob: -2.6949403285980225
    3. ' ' → logprob: -13.444940567016602
    4. ')' → logprob: -13.694940567016602
    5. ' ' → logprob: -15.194940567016602
    6. '   ' → logprob: -15.382440567016602
    7. '	r' → logprob: -15.632440567016602
    8. '    ' → logprob: -16.0699405670166
    9. '0' → logprob: -16.8199405670166
    10. ' )' → logprob: -16.9449405670166

Token 53: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07893726974725723
    2. ')' → logprob: -2.578937292098999
    3. '))
' → logprob: -10.203937530517578
    4. ')))' → logprob: -12.328937530517578
    5. ' ))' → logprob: -13.078937530517578
    6. ')
' → logprob: -13.078937530517578
    7. '),' → logprob: -14.453937530517578
    8. '   ' → logprob: -14.578937530517578
    9. ' )' → logprob: -15.453937530517578
    10. '))

' → logprob: -15.953937530517578

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10364160686731339
    2. '<|end|>' → logprob: -3.4786415100097656
    3. '    
' → logprob: -4.353641510009766
    4. '
' → logprob: -4.853641510009766
    5. 's' → logprob: -4.978641510009766
    6. ')' → logprob: -5.228641510009766
    7. 'n' → logprob: -5.353641510009766
    8. 'w' → logprob: -5.478641510009766
    9. '    ' → logprob: -5.603641510009766
    10. '#' → logprob: -5.728641510009766

Token 55: ' m' (ID: 284)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4831255078315735
    2. '    
' → logprob: -1.9831254482269287
    3. 'n' → logprob: -3.1081254482269287
    4. '
' → logprob: -3.6081254482269287
    5. ' 
' → logprob: -3.8581254482269287
    6. 'w' → logprob: -4.108125686645508
    7. 'import' → logprob: -4.358125686645508
    8. 'd' → logprob: -4.358125686645508
    9. 's' → logprob: -4.608125686645508
    10. '    ' → logprob: -4.733125686645508

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08029859513044357
    2. '=' → logprob: -2.580298662185669
    3. 'a' → logprob: -7.70529842376709
    4. ' ' → logprob: -8.33029842376709
    5. '  ' → logprob: -8.70529842376709
    6. '   ' → logprob: -8.70529842376709
    7. 'e' → logprob: -10.08029842376709
    8. '_' → logprob: -10.20529842376709
    9. 'ax' → logprob: -10.33029842376709
    10. '    ' → logprob: -10.45529842376709

Token 57: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.10024958848953247
    2. 'int' → logprob: -2.3502495288848877
    3. '=int' → logprob: -10.975249290466309
    4. '[int' → logprob: -11.225249290466309
    5. '(int' → logprob: -12.600249290466309
    6. '<int' → logprob: -12.975249290466309
    7. ' in' → logprob: -13.225249290466309
    8. 'n' → logprob: -13.600249290466309
    9. ' n' → logprob: -14.600249290466309
    10. '	int' → logprob: -14.725249290466309

Token 58: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -1.4259644558478612e-05
    2. '(' → logprob: -11.375014305114746
    3. ' (' → logprob: -13.500014305114746
    4. 'input' → logprob: -13.750014305114746
    5. '=input' → logprob: -15.625014305114746
    6. ' input' → logprob: -16.37501335144043
    7. ',input' → logprob: -17.37501335144043
    8. '   ' → logprob: -18.50001335144043
    9. '<input' → logprob: -18.87501335144043
    10. '[input' → logprob: -19.75001335144043

Token 59: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3927852213382721
    2. '()' → logprob: -1.1427851915359497
    3. ')' → logprob: -5.14278507232666
    4. '()
' → logprob: -10.26778507232666
    5. ' ())' → logprob: -11.76778507232666
    6. '())
' → logprob: -11.89278507232666
    7. '();)' → logprob: -13.26778507232666
    8. ' )' → logprob: -14.14278507232666
    9. '(' → logprob: -14.26778507232666
    10. '   ' → logprob: -14.39278507232666

Token 60: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.3875880241394043
    2. 's' → logprob: -2.6375880241394043
    3. '<|end|>' → logprob: -2.7625880241394043
    4. 'points' → logprob: -3.2625880241394043
    5. 'objects' → logprob: -3.2625880241394043
    6. 'targets' → logprob: -3.3875880241394043
    7. 'for' (adapté à ' for') → logprob: -3.5125880241394043
    8. ' rays' → logprob: -3.5125880241394043
    9. 'angles' → logprob: -3.6375880241394043
    10. 't' → logprob: -3.6375880241394043

Token 62: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.05231144279241562
    2. ' ' → logprob: -3.052311420440674
    3. '_' → logprob: -6.177311420440674
    4. ' i' → logprob: -6.427311420440674
    5. ' m' → logprob: -11.677311897277832
    6. ' ' → logprob: -12.177311897277832
    7. ' in' → logprob: -12.927311897277832
    8. ' ▁' → logprob: -13.177311897277832
    9. ' range' → logprob: -13.802311897277832
    10. ' ‌' → logprob: -14.052311897277832

Token 63: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.039334118366241455
    2. 'in' → logprob: -3.6643340587615967
    3. ' ' → logprob: -4.914334297180176
    4. ' _' → logprob: -5.289334297180176
    5. '_' → logprob: -8.414334297180176
    6. ' range' → logprob: -8.539334297180176
    7. 'range' → logprob: -9.539334297180176
    8. ' i' → logprob: -10.539334297180176
    9. ' m' → logprob: -11.539334297180176
    10. '  ' → logprob: -12.039334297180176

Token 64: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759662985801697
    2. 'range' → logprob: -0.8259662985801697
    3. '(range' → logprob: -10.950965881347656
    4. '	range' → logprob: -12.200965881347656
    5. '_range' → logprob: -13.325965881347656
    6. 'm' → logprob: -13.825965881347656
    7. 'Range' → logprob: -14.700965881347656
    8. ' xrange' → logprob: -15.450965881347656
    9. ' ' → logprob: -15.700965881347656
    10. '_' → logprob: -16.200965881347656

Token 65: '(m' (ID: 2145)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.19666586816310883
    2. '(m' → logprob: -1.82166588306427
    3. '(' → logprob: -4.5716657638549805
    4. ' m' → logprob: -5.0716657638549805
    5. ' ' → logprob: -9.57166576385498
    6. 'm' → logprob: -10.19666576385498
    7. ')' → logprob: -10.94666576385498
    8. ' )' → logprob: -11.07166576385498
    9. '<|end|>' → logprob: -12.32166576385498
    10. ' range' → logprob: -12.57166576385498

Token 66: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008312548510730267
    2. ' ):' → logprob: -5.383312702178955
    3. ':' → logprob: -6.258312702178955
    4. ')' → logprob: -6.633312702178955
    5. '):
' → logprob: -8.508312225341797
    6. '   ' → logprob: -9.258312225341797
    7. ',' → logprob: -9.633312225341797
    8. '():' → logprob: -10.258312225341797
    9. ' )' → logprob: -10.258312225341797
    10. ' :' → logprob: -11.633312225341797

Token 67: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37360289692878723
    2. '<|end|>' → logprob: -1.2486028671264648
    3. '       ' → logprob: -4.498602867126465
    4. ' ' → logprob: -4.998602867126465
    5. '    ' → logprob: -5.998602867126465
    6. '<|end|>' → logprob: -6.498602867126465
    7. '    
' → logprob: -7.623602867126465
    8. ':' → logprob: -7.873602867126465
    9. '  ' → logprob: -8.498602867126465
    10. 's' → logprob: -8.623602867126465

Token 68: ' tx' (ID: 10400)
  Prédit: ' sx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sx' → logprob: -1.270085334777832
    2. ' x' → logprob: -1.520085334777832
    3. 'x' → logprob: -1.770085334777832
    4. ' px' → logprob: -2.645085334777832
    5. 'sx' → logprob: -2.770085334777832
    6. ' tx' → logprob: -3.145085334777832
    7. ' lx' → logprob: -3.895085334777832
    8. 'lx' → logprob: -4.020085334777832
    9. ' dx' → logprob: -4.395085334777832
    10. ' cx' → logprob: -4.520085334777832

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004593862977344543
    2. ' ,' → logprob: -7.87545919418335
    3. 'x' → logprob: -9.625459671020508
    4. ',y' → logprob: -12.250459671020508
    5. 'y' → logprob: -12.750459671020508
    6. '1' → logprob: -13.750459671020508
    7. ',x' → logprob: -13.750459671020508
    8. 't' → logprob: -15.125459671020508
    9. ' =' → logprob: -15.187959671020508
    10. '=' → logprob: -15.187959671020508

Token 70: ' ty' (ID: 10890)
  Prédit: ' ty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ty' → logprob: -0.31330013275146484
    2. 'ty' → logprob: -1.3133001327514648
    3. '_ty' → logprob: -10.313300132751465
    4. ' ' → logprob: -13.563300132751465
    5. '   ' → logprob: -14.063300132751465
    6. 'y' → logprob: -14.063300132751465
    7. '    ' → logprob: -14.313300132751465
    8. ' y' → logprob: -15.188300132751465
    9. '.ty' → logprob: -15.563300132751465
    10. 'tyw' → logprob: -15.813300132751465

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24456284940242767
    2. ' =' → logprob: -1.8695628643035889
    3. '=' → logprob: -2.994562864303589
    4. ' ,' → logprob: -4.36956262588501
    5. ' ' → logprob: -10.869563102722168
    6. '=input' → logprob: -12.432063102722168
    7. '    ' → logprob: -12.619563102722168
    8. '   ' → logprob: -12.932063102722168
    9. '  ' → logprob: -13.619563102722168
    10. '=int' → logprob: -13.807063102722168

Token 72: ' sx' (ID: 39428)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.2188364267349243
    2. ' tr' → logprob: -2.0938363075256348
    3. ' vx' → logprob: -2.5938363075256348
    4. ' dx' → logprob: -2.7188363075256348
    5. ' r' → logprob: -3.2188363075256348
    6. ' v' → logprob: -3.2188363075256348
    7. ' tz' → logprob: -3.2188363075256348
    8. 'd' → logprob: -3.5938363075256348
    9. ' k' → logprob: -3.8438363075256348
    10. ' t' → logprob: -3.9063363075256348

Token 73: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.984787902794778e-05
    2. '=' → logprob: -9.625100135803223
    3. ' =' → logprob: -11.000100135803223
    4. ' ,' → logprob: -11.125100135803223
    5. ',s' → logprob: -14.375100135803223
    6. 's' → logprob: -14.750100135803223
    7. ')' → logprob: -15.625100135803223
    8. 't' → logprob: -15.750100135803223
    9. 'x' → logprob: -16.187599182128906
    10. 'w' → logprob: -16.375099182128906

Token 74: ' sy' (ID: 6157)
  Prédit: 'sy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sy' → logprob: -0.5760853290557861
    2. ' sy' → logprob: -0.8260853290557861
    3. 'ty' → logprob: -9.451085090637207
    4. '_sy' → logprob: -10.451085090637207
    5. ' ty' → logprob: -10.576085090637207
    6. 'dy' → logprob: -12.076085090637207
    7. 's' → logprob: -13.201085090637207
    8. 'sys' → logprob: -13.701085090637207
    9. '.sy' → logprob: -13.701085090637207
    10. ' dy' → logprob: -14.576085090637207

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.027836261317133904
    2. '=' → logprob: -3.777836322784424
    3. ',' → logprob: -5.402836322784424
    4. ')' → logprob: -9.777835845947266
    5. ' ,' → logprob: -11.527835845947266
    6. ' ' → logprob: -12.277835845947266
    7. '    ' → logprob: -13.652835845947266
    8. '  ' → logprob: -13.902835845947266
    9. '<|end|>' → logprob: -14.152835845947266
    10. '   ' → logprob: -14.277835845947266

Token 76: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.00014942926645744592
    2. 'map' → logprob: -8.875149726867676
    3. ' ' → logprob: -12.625149726867676
    4. ' list' → logprob: -13.125149726867676
    5. '    ' → logprob: -13.500149726867676
    6. ' input' → logprob: -13.625149726867676
    7. '	map' → logprob: -13.875149726867676
    8. '(map' → logprob: -15.875149726867676
    9. ' mapa' → logprob: -15.875149726867676
    10. '   ' → logprob: -16.00014877319336

Token 77: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0030857324600219727
    2. '(' → logprob: -5.878085613250732
    3. '<|end|>' → logprob: -8.75308609008789
    4. '<int' → logprob: -9.37808609008789
    5. '=int' → logprob: -11.75308609008789
    6. '[int' → logprob: -11.87808609008789
    7. '(lambda' → logprob: -12.25308609008789
    8. 'int' → logprob: -12.62808609008789
    9. '(
' → logprob: -12.87808609008789
    10. '(str' → logprob: -12.87808609008789

Token 78: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05105496197938919
    2. ',input' → logprob: -3.9260549545288086
    3. ',int' → logprob: -4.051054954528809
    4. '(int' → logprob: -4.801054954528809
    5. '(input' → logprob: -5.801054954528809
    6. '(' → logprob: -7.051054954528809
    7. ')' → logprob: -8.176054954528809
    8. ' ,' → logprob: -9.676054954528809
    9. '<int' → logprob: -9.926054954528809
    10. ')(' → logprob: -10.426054954528809

Token 79: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5437714457511902
    2. 'input' → logprob: -1.168771505355835
    3. ' input' → logprob: -2.543771505355835
    4. ' int' → logprob: -3.543771505355835
    5. '(int' → logprob: -7.293771266937256
    6. ')' → logprob: -7.918771266937256
    7. '(input' → logprob: -9.418771743774414
    8. '[int' → logprob: -10.918771743774414
    9. ']int' → logprob: -10.918771743774414
    10. 'str' → logprob: -11.543771743774414

Token 80: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.03563470020890236
    2. '()' → logprob: -3.410634756088257
    3. '())' → logprob: -6.285634517669678
    4. ')' → logprob: -10.035634994506836
    5. '()
' → logprob: -10.535634994506836
    6. '(' → logprob: -11.035634994506836
    7. '(),' → logprob: -11.285634994506836
    8. '());' → logprob: -12.660634994506836
    9. '()-' → logprob: -12.785634994506836
    10. '()[' → logprob: -12.910634994506836

Token 81: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.6240566083070007e-06
    2. 's' → logprob: -13.625001907348633
    3. 'spl' → logprob: -15.375001907348633
    4. ')' → logprob: -15.750001907348633
    5. ' split' → logprob: -17.375001907348633
    6. 'sp' → logprob: -17.375001907348633
    7. '(split' → logprob: -18.750001907348633
    8. 'strip' → logprob: -18.875001907348633
    9. 'plit' → logprob: -20.125001907348633
    10. '```' → logprob: -20.250001907348633

Token 82: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016178115038201213
    2. '()' → logprob: -6.876617908477783
    3. '))' → logprob: -8.001617431640625
    4. '())' → logprob: -8.376617431640625
    5. ' )' → logprob: -12.251617431640625
    6. ')
' → logprob: -12.251617431640625
    7. '`)' → logprob: -12.376617431640625
    8. '   ' → logprob: -13.501617431640625
    9. ')))' → logprob: -13.751617431640625
    10. ')`' → logprob: -14.251617431640625

Token 83: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 84: ' safe' (ID: 7703)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3523830771446228
    2. '<|end|>' → logprob: -2.2273831367492676
    3. ' 
' → logprob: -2.3523831367492676
    4. '
' → logprob: -3.4773831367492676
    5. '\n' → logprob: -3.6023831367492676
    6. '\' → logprob: -4.977383136749268
    7. ')' → logprob: -5.352383136749268
    8. '#' → logprob: -5.602383136749268
    9. '    ' → logprob: -5.602383136749268
    10. ' \' → logprob: -5.727383136749268

Token 85: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10724449157714844
    2. '_zone' → logprob: -3.6072444915771484
    3. '_area' → logprob: -3.7322444915771484
    4. '=' → logprob: -3.8572444915771484
    5. ' =' → logprob: -4.357244491577148
    6. '_space' → logprob: -5.482244491577148
    7. '_points' → logprob: -5.982244491577148
    8. 'zone' → logprob: -6.607244491577148
    9. '_distance' → logprob: -6.732244491577148
    10. ' ' → logprob: -7.107244491577148

Token 86: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.027421126142144203
    2. 'True' → logprob: -4.027420997619629
    3. ' False' → logprob: -5.152420997619629
    4. '"' → logprob: -6.527420997619629
    5. ' ' → logprob: -6.777420997619629
    6. 'False' → logprob: -7.777420997619629
    7. ' []' → logprob: -8.777420997619629
    8. ''' → logprob: -8.902420997619629
    9. ' "' → logprob: -10.152420997619629
    10. '[]' → logprob: -11.027420997619629

Token 87: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17315739393234253
    2. '<|end|>' → logprob: -2.2981574535369873
    3. '   ' → logprob: -3.4231574535369873
    4. ' ' → logprob: -4.298157215118408
    5. '
' → logprob: -5.423157215118408
    6. '	' → logprob: -6.423157215118408
    7. '    ' → logprob: -6.923157215118408
    8. ' 
' → logprob: -7.298157215118408
    9. '        
' → logprob: -7.423157215118408
    10. '    
' → logprob: -7.673157215118408

Token 89: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.007053745444864035
    2. ' for' → logprob: -5.007053852081299
    3. '<|end|>' → logprob: -9.00705337524414
    4. '   ' → logprob: -9.38205337524414
    5. ' ' → logprob: -9.50705337524414
    6. '       ' → logprob: -11.00705337524414
    7. '	for' → logprob: -11.75705337524414
    8. ' 
' → logprob: -12.25705337524414
    9. '
' → logprob: -12.38205337524414
    10. 'f' → logprob: -12.63205337524414

Token 90: ' (' (ID: 350)
  Prédit: ' wx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' wx' → logprob: -0.47851696610450745
    2. ' (' → logprob: -1.228516936302185
    3. ' w' → logprob: -2.7285170555114746
    4. '(wx' → logprob: -4.353517055511475
    5. '(' → logprob: -5.978517055511475
    6. ' ' → logprob: -5.978517055511475
    7. '(w' → logprob: -6.228517055511475
    8. ' wall' → logprob: -6.853517055511475
    9. 'wx' → logprob: -7.353517055511475
    10. ' x' → logprob: -8.228516578674316

Token 91: 'wx' (ID: 43176)
  Prédit: 'wx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wx' → logprob: -0.004811373073607683
    2. 'w' → logprob: -5.5048112869262695
    3. '(wx' → logprob: -7.7548112869262695
    4. 'x' → logprob: -9.00481128692627
    5. ' wx' → logprob: -9.00481128692627
    6. ')' → logprob: -11.12981128692627
    7. '(w' → logprob: -11.50481128692627
    8. '	wx' → logprob: -12.25481128692627
    9. 'Wx' → logprob: -12.25481128692627
    10. '   ' → logprob: -12.37981128692627

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.334533878136426e-05
    2. ' ,' → logprob: -10.625042915344238
    3. '<|end|>' → logprob: -11.375042915344238
    4. ',w' → logprob: -12.000042915344238
    5. ',)' → logprob: -15.125042915344238
    6. ',
' → logprob: -15.375042915344238
    7. ',x' → logprob: -15.375042915344238
    8. ')' → logprob: -15.500042915344238
    9. ',n' → logprob: -16.375043869018555
    10. '‌,' → logprob: -16.750043869018555

Token 93: ' wy' (ID: 14962)
  Prédit: 'wx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wx' → logprob: -0.048198360949754715
    2. 'x' → logprob: -3.4231984615325928
    3. ' wx' → logprob: -4.798198223114014
    4. 'w' → logprob: -5.923198223114014
    5. 'wy' → logprob: -6.048198223114014
    6. ' x' → logprob: -7.423198223114014
    7. ' wy' → logprob: -8.173198699951172
    8. ',' → logprob: -8.923198699951172
    9. ' ' → logprob: -10.298198699951172
    10. ' w' → logprob: -10.673198699951172

Token 94: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4736459888808895e-05
    2. ' ,' → logprob: -11.250014305114746
    3. ')' → logprob: -13.875014305114746
    4. ',w' → logprob: -14.875014305114746
    5. ',r' → logprob: -15.625014305114746
    6. '<|end|>' → logprob: -16.250015258789062
    7. ',
' → logprob: -16.625015258789062
    8. ',)' → logprob: -16.750015258789062
    9. 'w' → logprob: -18.125015258789062
    10. '),' → logprob: -18.250015258789062

Token 95: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.03375991806387901
    2. ' r' → logprob: -3.408759832382202
    3. ')' → logprob: -9.283760070800781
    4. 'w' → logprob: -11.908760070800781
    5. ' ' → logprob: -12.533760070800781
    6. '	r' → logprob: -13.033760070800781
    7. ' )' → logprob: -13.158760070800781
    8. ',' → logprob: -13.408760070800781
    9. 'wr' → logprob: -13.908760070800781
    10. 'rz' → logprob: -14.408760070800781

Token 96: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.990154047845863e-05
    2. '):' → logprob: -10.125049591064453
    3. '),' → logprob: -11.875049591064453
    4. ' )' → logprob: -13.875049591064453
    5. ' in' → logprob: -14.000049591064453
    6. ',' → logprob: -14.250049591064453
    7. ')**' → logprob: -17.000049591064453
    8. ',)' → logprob: -17.000049591064453
    9. ')>' → logprob: -17.250049591064453
    10. ':' → logprob: -17.625049591064453

Token 97: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0766155943274498
    2. ':' → logprob: -2.826615571975708
    3. 'in' → logprob: -4.451615810394287
    4. ',' → logprob: -6.576615810394287
    5. ' :' → logprob: -7.451615810394287
    6. '<|end|>' → logprob: -7.826615810394287
    7. ')' → logprob: -8.326615333557129
    8. '=' → logprob: -9.826615333557129
    9. ' ,' → logprob: -10.451615333557129
    10. '):' → logprob: -10.451615333557129

Token 98: ' walls' (ID: 20562)
  Prédit: ' walls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' walls' → logprob: -0.061973731964826584
    2. 'walls' → logprob: -2.811973810195923
    3. ' ' → logprob: -12.936973571777344
    4. 'w' → logprob: -13.686973571777344
    5. 'wall' → logprob: -13.811973571777344
    6. ' wall' → logprob: -14.311973571777344
    7. ' w' → logprob: -14.436973571777344
    8. 'Walls' → logprob: -16.561973571777344
    9. ')' → logprob: -17.061973571777344
    10. ' wells' → logprob: -17.186973571777344

Token 99: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001956467516720295
    2. ':
' → logprob: -6.376956462860107
    3. '<|end|>' → logprob: -9.376956939697266
    4. '       ' → logprob: -9.751956939697266
    5. '           ' → logprob: -10.001956939697266
    6. ',' → logprob: -10.501956939697266
    7. '):' → logprob: -11.126956939697266
    8. '<|end|>' → logprob: -11.751956939697266
    9. ' :' → logprob: -12.626956939697266
    10. ' if' → logprob: -13.251956939697266

Token 100: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.177667036652565
    2. ':' → logprob: -1.9276670217514038
    3. '       ' → logprob: -4.802667140960693
    4. '<|end|>' → logprob: -5.302667140960693
    5. ':
' → logprob: -6.927667140960693
    6. '
' → logprob: -7.677667140960693
    7. '<|end|>' → logprob: -7.802667140960693
    8. '               ' → logprob: -8.302666664123535
    9. ',' → logprob: -8.427666664123535
    10. '            
' → logprob: -8.552666664123535

Token 101: ' #' (ID: 1069)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.0262080430984497
    2. '
' → logprob: -1.7762080430984497
    3. ' ' → logprob: -2.02620792388916
    4. '<|end|>' → logprob: -2.02620792388916
    5. '       ' → logprob: -2.15120792388916
    6. '           ' → logprob: -3.40120792388916
    7. '        
' → logprob: -4.15120792388916
    8. '        ' → logprob: -4.15120792388916
    9. '               ' → logprob: -5.15120792388916
    10. ' if' → logprob: -5.65120792388916

Token 102: ' line' (ID: 2543)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.0515313148498535
    2. '           ' → logprob: -1.0515313148498535
    3. ' ' → logprob: -2.3015313148498535
    4. '       ' → logprob: -2.9265313148498535
    5. ' if' → logprob: -2.9265313148498535
    6. '(' → logprob: -3.4265313148498535
    7. 'if' → logprob: -4.4265313148498535
    8. '        ' → logprob: -4.9265313148498535
    9. '               ' → logprob: -4.9265313148498535
    10. ' ((' → logprob: -5.0515313148498535

Token 103: ' segment' (ID: 14806)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2067129611968994
    2. '<|end|>' → logprob: -1.4567129611968994
    3. '_distance' → logprob: -1.7067129611968994
    4. '_' → logprob: -2.9567129611968994
    5. 's' → logprob: -3.5817129611968994
    6. '.startswith' → logprob: -3.5817129611968994
    7. '_length' → logprob: -3.8317129611968994
    8. 'distance' → logprob: -3.8317129611968994
    9. '<|end|>' → logprob: -3.9567129611968994
    10. ')' → logprob: -3.9567129611968994

Token 104: ' from' (ID: 591)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.34524521231651306
    2. 's' → logprob: -1.7202452421188354
    3. '<|end|>' → logprob: -2.720245122909546
    4. ')' → logprob: -4.345245361328125
    5. ' =' → logprob: -4.470245361328125
    6. ',' → logprob: -5.595245361328125
    7. '<|end|>' → logprob: -6.220245361328125
    8. '_' → logprob: -6.470245361328125
    9. ':' → logprob: -6.595245361328125
    10. '=' → logprob: -6.720245361328125

Token 105: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8214063048362732
    2. '(tx' → logprob: -0.8214063048362732
    3. '(wx' → logprob: -2.571406364440918
    4. '(' → logprob: -3.196406364440918
    5. '(x' → logprob: -6.196406364440918
    6. '(px' → logprob: -7.446406364440918
    7. '(s' → logprob: -8.821406364440918
    8. '(nx' → logprob: -9.071406364440918
    9. '(xs' → logprob: -10.696406364440918
    10. 'tx' → logprob: -10.821406364440918

Token 106: 'sx' (ID: 102754)
  Prédit: 'tx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tx' → logprob: -0.1683593988418579
    2. ' tx' → logprob: -1.918359398841858
    3. 'sx' → logprob: -5.168359279632568
    4. ' sx' → logprob: -6.793359279632568
    5. 'wx' → logprob: -7.168359279632568
    6. '(tx' → logprob: -8.668359756469727
    7. ' wx' → logprob: -8.668359756469727
    8. ')' → logprob: -9.918359756469727
    9. '	tx' → logprob: -10.543359756469727
    10. ' (' → logprob: -10.918359756469727

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001818097778595984
    2. ' ,' → logprob: -6.5018181800842285
    3. ',y' → logprob: -9.37681770324707
    4. ')' → logprob: -9.87681770324707
    5. ',x' → logprob: -10.00181770324707
    6. '<|end|>' → logprob: -10.00181770324707
    7. 'x' → logprob: -10.37681770324707
    8. ',s' → logprob: -11.00181770324707
    9. 's' → logprob: -11.62681770324707
    10. ' to' → logprob: -11.87681770324707

Token 108: ' sy' (ID: 6157)
  Prédit: 'sy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sy' → logprob: -0.20246966183185577
    2. ' sy' → logprob: -1.7024697065353394
    3. 'sx' → logprob: -7.577469825744629
    4. 'tx' → logprob: -8.077469825744629
    5. 'x' → logprob: -8.827469825744629
    6. 'wx' → logprob: -10.452469825744629
    7. ' tx' → logprob: -10.827469825744629
    8. ' sx' → logprob: -11.452469825744629
    9. '_sy' → logprob: -11.452469825744629
    10. 's' → logprob: -11.702469825744629

Token 109: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020045079290866852
    2. ' to' → logprob: -4.020045280456543
    3. ' )' → logprob: -6.395045280456543
    4. 'to' → logprob: -8.895045280456543
    5. ',' → logprob: -9.520045280456543
    6. '),' → logprob: -12.645045280456543
    7. '<|end|>' → logprob: -12.895045280456543
    8. ' ' → logprob: -13.145045280456543
    9. ' ,' → logprob: -13.645045280456543
    10. ')-(' → logprob: -14.270045280456543

Token 110: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.194517120718956
    2. '<|end|>' → logprob: -2.194517135620117
    3. ' ' → logprob: -3.069517135620117
    4. 'to' → logprob: -4.569517135620117
    5. ')' → logprob: -5.694517135620117
    6. ',' → logprob: -6.444517135620117
    7. ' and' → logprob: -6.819517135620117
    8. ' )' → logprob: -7.444517135620117
    9. '<|end|>' → logprob: -7.694517135620117
    10. ' ,' → logprob: -8.819517135620117

Token 111: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0744982585310936
    2. '(tx' → logprob: -2.699498176574707
    3. '(' → logprob: -5.449498176574707
    4. '(t' → logprob: -9.699498176574707
    5. ' ' → logprob: -9.824498176574707
    6. '(s' → logprob: -10.324498176574707
    7. ')' → logprob: -10.824498176574707
    8. '(nx' → logprob: -11.074498176574707
    9. '(wx' → logprob: -11.324498176574707
    10. 'tx' → logprob: -11.574498176574707

Token 112: 'tx' (ID: 6874)
  Prédit: 'tx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tx' → logprob: -0.007638686802238226
    2. ' tx' → logprob: -4.882638454437256
    3. '(tx' → logprob: -11.132638931274414
    4. '	tx' → logprob: -11.507638931274414
    5. ')' → logprob: -12.632638931274414
    6. '_tx' → logprob: -13.632638931274414
    7. 'wx' → logprob: -13.882638931274414
    8. '.tx' → logprob: -14.007638931274414
    9. ' ' → logprob: -14.632638931274414
    10. ',' → logprob: -15.257638931274414

Token 113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.861651490908116e-05
    2. ' ,' → logprob: -10.250068664550781
    3. ',y' → logprob: -11.375068664550781
    4. ')' → logprob: -11.500068664550781
    5. '<|end|>' → logprob: -12.875068664550781
    6. ',s' → logprob: -13.625068664550781
    7. '),' → logprob: -13.750068664550781
    8. ',x' → logprob: -14.000068664550781
    9. '```' → logprob: -14.375068664550781
    10. ' ' → logprob: -14.625068664550781

Token 114: ' ty' (ID: 10890)
  Prédit: ' ty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ty' → logprob: -0.38937750458717346
    2. 'ty' → logprob: -1.139377474784851
    3. ' tx' → logprob: -6.639377593994141
    4. 'tx' → logprob: -6.764377593994141
    5. ',' → logprob: -10.38937759399414
    6. '_ty' → logprob: -12.26437759399414
    7. ')' → logprob: -12.63937759399414
    8. ' ' → logprob: -14.51437759399414
    9. '```' → logprob: -14.88937759399414
    10. '(tx' → logprob: -15.13937759399414

Token 115: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008292806334793568
    2. ' )' → logprob: -5.3832926750183105
    3. '):' → logprob: -5.7582926750183105
    4. '           ' → logprob: -8.508293151855469
    5. ',' → logprob: -9.133293151855469
    6. '):
' → logprob: -10.008293151855469
    7. '       ' → logprob: -10.633293151855469
    8. ')
' → logprob: -10.758293151855469
    9. ' ):' → logprob: -10.883293151855469
    10. '),' → logprob: -10.883293151855469

Token 116: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0801418200135231
    2. '        ' → logprob: -3.45514178276062
    3. '           ' → logprob: -4.705142021179199
    4. '       ' → logprob: -5.205142021179199
    5. '            ' → logprob: -5.455142021179199
    6. '<|end|>' → logprob: -5.455142021179199
    7. ')' → logprob: -5.580142021179199
    8. ' 
' → logprob: -5.705142021179199
    9. '    ' → logprob: -5.955142021179199
    10. ',' → logprob: -6.330142021179199

Token 117: ' dx' (ID: 29472)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04654425382614136
    2. ')' → logprob: -3.671544313430786
    3. 'import' → logprob: -5.421544075012207
    4. ' 
' → logprob: -6.046544075012207
    5. '        ' → logprob: -6.296544075012207
    6. 'd' → logprob: -6.421544075012207
    7. ' )' → logprob: -6.421544075012207
    8. '    ' → logprob: -6.671544075012207
    9. ':' → logprob: -6.796544075012207
    10. '<|end|>' → logprob: -7.046544075012207

Token 118: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22962969541549683
    2. '=' → logprob: -1.6046297550201416
    3. ',' → logprob: -5.4796295166015625
    4. ')' → logprob: -11.354629516601562
    5. ' ' → logprob: -11.979629516601562
    6. ' ,' → logprob: -12.104629516601562
    7. '<|end|>' → logprob: -12.104629516601562
    8. 's' → logprob: -12.729629516601562
    9. '=int' → logprob: -14.229629516601562
    10. '```' → logprob: -14.229629516601562

Token 119: ' tx' (ID: 10400)
  Prédit: ' tx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tx' → logprob: -0.020234813913702965
    2. 'tx' → logprob: -4.39523458480835
    3. ' sx' → logprob: -5.27023458480835
    4. ' ' → logprob: -6.77023458480835
    5. ' wx' → logprob: -7.64523458480835
    6. '(tx' → logprob: -7.64523458480835
    7. ' (' → logprob: -8.520235061645508
    8. 'sx' → logprob: -9.020235061645508
    9. '	tx' → logprob: -9.895235061645508
    10. ' ' → logprob: -10.520235061645508

Token 120: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.014229321852326393
    2. '-' → logprob: -4.2642292976379395
    3. ' ' → logprob: -10.014229774475098
    4. '<|end|>' → logprob: -10.889229774475098
    5. '-s' → logprob: -13.514229774475098
    6. ' –' → logprob: -15.639229774475098
    7. ')' → logprob: -16.01422882080078
    8. ' -
' → logprob: -16.13922882080078
    9. '<|end|>' → logprob: -16.38922882080078
    10. ' ' → logprob: -16.38922882080078

Token 121: ' sx' (ID: 39428)
  Prédit: 'sx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sx' → logprob: -0.06210784614086151
    2. ' sx' → logprob: -2.812107801437378
    3. 's' → logprob: -9.312108039855957
    4. '<|end|>' → logprob: -10.062108039855957
    5. 'x' → logprob: -12.687108039855957
    6. ' ' → logprob: -13.437108039855957
    7. '(s' → logprob: -14.312108039855957
    8. '	s' → logprob: -14.437108039855957
    9. '-s' → logprob: -15.562108039855957
    10. 'wx' → logprob: -15.562108039855957

Token 122: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 124: ' dy' (ID: 11996)
  Prédit: ' dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dy' → logprob: -0.006824178621172905
    2. 'dy' (adapté à ' dy') → logprob: -5.006824016571045
    3. '<|end|>' → logprob: -9.381824493408203
    4. ' ' → logprob: -11.256824493408203
    5. 'd' → logprob: -12.256824493408203
    6. '.dy' → logprob: -13.381824493408203
    7. ' ' → logprob: -13.756824493408203
    8. ' d' → logprob: -13.881824493408203
    9. 'Dy' → logprob: -14.131824493408203
    10. ' 
' → logprob: -15.131824493408203

Token 125: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5370871424674988
    2. '<|end|>' → logprob: -1.1620872020721436
    3. '=' → logprob: -2.2870872020721436
    4. ' ' → logprob: -7.4120869636535645
    5. '<|end|>' → logprob: -7.6620869636535645
    6. ')' → logprob: -10.787087440490723
    7. ',' → logprob: -10.787087440490723
    8. '.' → logprob: -12.412087440490723
    9. ' =
' → logprob: -12.537087440490723
    10. 's' → logprob: -12.537087440490723

Token 126: ' ty' (ID: 10890)
  Prédit: ' sy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sy' → logprob: -0.07069867849349976
    2. ' ty' → logprob: -2.6956987380981445
    3. 'sy' → logprob: -7.3206987380981445
    4. 'ty' → logprob: -9.945698738098145
    5. '<|end|>' → logprob: -10.945698738098145
    6. '_sy' → logprob: -11.320698738098145
    7. ' y' → logprob: -12.320698738098145
    8. ' ' → logprob: -12.320698738098145
    9. 'y' → logprob: -12.320698738098145
    10. ' hy' → logprob: -13.820698738098145

Token 127: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 128: ' sy' (ID: 6157)
  Prédit: ' sy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sy' → logprob: -0.07014138996601105
    2. 'sy' → logprob: -2.695141315460205
    3. '_sy' → logprob: -8.820141792297363
    4. 'y' → logprob: -10.695141792297363
    5. '<|end|>' → logprob: -11.320141792297363
    6. 's' → logprob: -12.320141792297363
    7. '.sy' → logprob: -12.570141792297363
    8. ' ' → logprob: -12.695141792297363
    9. '0' → logprob: -13.070141792297363
    10. ' ty' → logprob: -13.070141792297363

Token 129: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3187379240989685
    2. '<|end|>' → logprob: -1.3187379837036133
    3. '<|end|>' → logprob: -6.693737983703613
    4. '       ' → logprob: -7.068737983703613
    5. ',' → logprob: -7.193737983703613
    6. ' 
' → logprob: -7.443737983703613
    7. ' ' → logprob: -7.943737983703613
    8. '```' → logprob: -8.068737983703613
    9. '           ' → logprob: -8.193737983703613
    10. ')' → logprob: -8.318737983703613

Token 130: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33263099193573
    2. '<|end|>' → logprob: -2.4576311111450195
    3. '       ' → logprob: -2.8326311111450195
    4. '           ' → logprob: -3.3326311111450195
    5. 'import' → logprob: -3.9576311111450195
    6. ' 
' → logprob: -3.9576311111450195
    7. ',' → logprob: -4.5826311111450195
    8. ' ' → logprob: -4.5826311111450195
    9. '```' → logprob: -4.9576311111450195
    10. '  
' → logprob: -4.9576311111450195

Token 131: ' fx' (ID: 60138)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -1.1236810684204102
    2. ' px' → logprob: -1.9986810684204102
    3. 'dist' → logprob: -1.9986810684204102
    4. 'import' → logprob: -2.99868106842041
    5. 'ax' → logprob: -3.12368106842041
    6. 'cx' → logprob: -3.24868106842041
    7. 'x' → logprob: -3.37368106842041
    8. ' dist' → logprob: -3.49868106842041
    9. 'fx' (adapté à ' fx') → logprob: -3.62368106842041
    10. 'a' → logprob: -3.87368106842041

Token 132: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25198429822921753
    2. '=' → logprob: -1.5019843578338623
    3. ',' → logprob: -10.001984596252441
    4. '<|end|>' → logprob: -12.001984596252441
    5. 's' → logprob: -13.376984596252441
    6. '=s' → logprob: -14.751984596252441
    7. ' ' → logprob: -14.751984596252441
    8. ')' → logprob: -15.251984596252441
    9. '```' → logprob: -15.626984596252441
    10. '<|end|>' → logprob: -16.501983642578125

Token 133: ' sx' (ID: 39428)
  Prédit: ' sx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sx' → logprob: -0.348664253950119
    2. 'sx' → logprob: -1.2236642837524414
    3. 's' → logprob: -9.348664283752441
    4. ' wx' → logprob: -10.098664283752441
    5. 'wx' → logprob: -10.348664283752441
    6. '	s' → logprob: -11.098664283752441
    7. '   ' → logprob: -11.598664283752441
    8. ' ' → logprob: -11.723664283752441
    9. '(s' → logprob: -11.723664283752441
    10. '0' → logprob: -13.098664283752441

Token 134: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6331279277801514
    2. '-' → logprob: -0.7581279277801514
    3. '<|end|>' → logprob: -7.6331281661987305
    4. '-w' → logprob: -10.88312816619873
    5. '<|end|>' → logprob: -12.13312816619873
    6. '-
' → logprob: -12.38312816619873
    7. '-x' → logprob: -13.00812816619873
    8. '
' → logprob: -13.50812816619873
    9. 'wx' → logprob: -13.63312816619873
    10. '-W' → logprob: -14.00812816619873

Token 135: ' wx' (ID: 20113)
  Prédit: 'wx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wx' → logprob: -0.12708255648612976
    2. ' wx' → logprob: -2.127082586288452
    3. '(wx' → logprob: -9.502082824707031
    4. '	wx' → logprob: -9.752082824707031
    5. 'w' → logprob: -11.127082824707031
    6. '.wx' → logprob: -13.127082824707031
    7. 'ws' → logprob: -13.377082824707031
    8. 'wy' → logprob: -14.002082824707031
    9. '<|end|>' → logprob: -15.002082824707031
    10. 'x' → logprob: -15.127082824707031

Token 136: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 137: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 138: ' fy' (ID: 18912)
  Prédit: 'wy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wy' → logprob: -0.49503082036972046
    2. 'w' → logprob: -1.6200308799743652
    3. 'wx' → logprob: -2.6200308799743652
    4. ' wy' → logprob: -2.8700308799743652
    5. ' fy' → logprob: -3.3700308799743652
    6. ' wx' → logprob: -3.9950308799743652
    7. 'fy' (adapté à ' fy') → logprob: -6.120030879974365
    8. '0' → logprob: -6.495030879974365
    9. 'f' → logprob: -6.620030879974365
    10. 'wyl' → logprob: -6.620030879974365

Token 139: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 140: ' sy' (ID: 6157)
  Prédit: 'wy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wy' → logprob: -0.029756855219602585
    2. ' wy' → logprob: -3.529756784439087
    3. 'w' → logprob: -13.154756546020508
    4. 'wyl' → logprob: -13.404756546020508
    5. 'wyll' → logprob: -14.404756546020508
    6. 'Wy' → logprob: -15.029756546020508
    7. 'yw' → logprob: -15.029756546020508
    8. ' ' → logprob: -15.154756546020508
    9. ' ' → logprob: -15.154756546020508
    10. '<|end|>' → logprob: -15.154756546020508

Token 141: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.016100533306598663
    2. ' -' → logprob: -4.1411004066467285
    3. '-w' → logprob: -9.766100883483887
    4. 'wy' → logprob: -12.141100883483887
    5. '-y' → logprob: -14.016100883483887
    6. '<|end|>' → logprob: -14.266100883483887
    7. '+' → logprob: -14.641100883483887
    8. ' ' → logprob: -14.891100883483887
    9. ' wy' → logprob: -15.266100883483887
    10. ' ' → logprob: -15.891100883483887

Token 142: ' wy' (ID: 14962)
  Prédit: 'wy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wy' → logprob: -4.35837464465294e-05
    2. ' wy' → logprob: -10.125043869018555
    3. 'w' → logprob: -13.250043869018555
    4. 'wx' → logprob: -13.875043869018555
    5. 'wyl' → logprob: -15.000043869018555
    6. 'yw' → logprob: -15.250043869018555
    7. 'Wy' → logprob: -16.875043869018555
    8. 'wyll' → logprob: -17.000043869018555
    9. 'y' → logprob: -17.625043869018555
    10. 'wys' → logprob: -17.750043869018555

Token 143: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41589242219924927
    2. '<|end|>' → logprob: -1.1658923625946045
    3. ' 
' → logprob: -4.665892601013184
    4. ' ' → logprob: -4.665892601013184
    5. '<|end|>' → logprob: -5.540892601013184
    6. ',' → logprob: -6.790892601013184
    7. 's' → logprob: -7.790892601013184
    8. '   ' → logprob: -7.915892601013184
    9. 'import' → logprob: -8.040892601013184
    10. '           ' → logprob: -8.290892601013184

Token 144: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5441455245018005
    2. '<|end|>' → logprob: -1.9191455841064453
    3. '
' → logprob: -2.6691455841064453
    4. ' ' → logprob: -2.7941455841064453
    5. '       ' → logprob: -3.2941455841064453
    6. ' 
' → logprob: -3.6691455841064453
    7. '```' → logprob: -4.669145584106445
    8. '            ' → logprob: -4.794145584106445
    9. '   ' → logprob: -4.794145584106445
    10. 'import' → logprob: -5.044145584106445

Token 145: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.1606248915195465
    2. 'b' → logprob: -3.1606249809265137
    3. ' a' → logprob: -3.5356249809265137
    4. 'd' → logprob: -3.9106249809265137
    5. ' ' → logprob: -4.410624980926514
    6. '0' → logprob: -4.535624980926514
    7. '-' → logprob: -4.660624980926514
    8. 'A' → logprob: -5.035624980926514
    9. '2' → logprob: -6.160624980926514
    10. 'import' → logprob: -6.285624980926514

Token 146: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014150768518448
    2. '=' → logprob: -1.7014150619506836
    3. ' ' → logprob: -14.201415061950684
    4. ',' → logprob: -14.826415061950684
    5. ')' → logprob: -15.576415061950684
    6. '=}' → logprob: -15.826415061950684
    7. 'dx' → logprob: -15.951415061950684
    8. '>' → logprob: -16.701416015625
    9. ' ' → logprob: -16.951416015625
    10. 'x' → logprob: -17.076416015625

Token 147: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.0007151735480874777
    2. ' dx' → logprob: -7.250715255737305
    3. '(dx' → logprob: -12.250715255737305
    4. '_dx' → logprob: -15.375715255737305
    5. 'd' → logprob: -16.000715255737305
    6. '   ' → logprob: -16.375715255737305
    7. '.dx' → logprob: -18.125715255737305
    8. 'Dx' → logprob: -18.125715255737305
    9. '(' → logprob: -18.625715255737305
    10. '	d' → logprob: -19.000715255737305

Token 148: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3894045054912567
    2. '**' → logprob: -1.139404535293579
    3. ' *' → logprob: -6.139404296875
    4. ' **' → logprob: -8.014404296875
    5. '2' → logprob: -10.264404296875
    6. '***' → logprob: -12.764404296875
    7. 'dx' → logprob: -13.639404296875
    8. '```' → logprob: -14.014404296875
    9. '*x' → logprob: -14.264404296875
    10. '*a' → logprob: -14.389404296875

Token 149: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.00012535012501757592
    2. ' dx' → logprob: -9.12512493133545
    3. '2' → logprob: -11.62512493133545
    4. 'd' → logprob: -12.50012493133545
    5. '
' → logprob: -13.62512493133545
    6. '_dx' → logprob: -13.87512493133545
    7. '*' → logprob: -14.50012493133545
    8. '```' → logprob: -14.62512493133545
    9. '(dx' → logprob: -15.75012493133545
    10. '.dx' → logprob: -16.250125885009766

Token 150: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 151: ' dy' (ID: 11996)
  Prédit: ' dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dy' → logprob: -0.47514864802360535
    2. 'dy' → logprob: -0.9751486778259277
    3. '<|end|>' → logprob: -6.850148677825928
    4. ' ' → logprob: -12.35014820098877
    5. '.dy' → logprob: -12.85014820098877
    6. 'd' → logprob: -13.35014820098877
    7. 'dym' → logprob: -14.60014820098877
    8. '<|end|>' → logprob: -14.85014820098877
    9. 'dx' → logprob: -14.97514820098877
    10. '```' → logprob: -15.10014820098877

Token 152: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.00022797346173319966
    2. ' *' → logprob: -8.875227928161621
    3. '<|end|>' → logprob: -9.375227928161621
    4. '```' → logprob: -14.000227928161621
    5. '*(' → logprob: -14.375227928161621
    6. 'dy' → logprob: -14.875227928161621
    7. '**' → logprob: -15.125227928161621
    8. '*d' → logprob: -15.125227928161621
    9. '*)' → logprob: -15.750227928161621
    10. ' ' → logprob: -15.875227928161621

Token 153: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -6.074907287256792e-05
    2. ' dy' → logprob: -9.75006103515625
    3. '<|end|>' → logprob: -13.50006103515625
    4. 'ddy' → logprob: -15.12506103515625
    5. 'dym' → logprob: -15.12506103515625
    6. '.dy' → logprob: -16.12506103515625
    7. '```' → logprob: -16.50006103515625
    8. 'd' → logprob: -16.75006103515625
    9. ' ' → logprob: -16.75006103515625
    10. 'dx' → logprob: -17.25006103515625

Token 154: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 155: '           ' (ID: 352)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.2197297811508179
    2. ' ' → logprob: -1.2197297811508179
    3. '<|end|>' → logprob: -1.2197297811508179
    4. ' b' → logprob: -2.3447299003601074
    5. ',' → logprob: -5.094729900360107
    6. ' 
' → logprob: -6.094729900360107
    7. ',b' → logprob: -6.219729900360107
    8. '   ' → logprob: -6.219729900360107
    9. '    ' → logprob: -7.094729900360107
    10. '```' → logprob: -7.219729900360107

Token 156: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.004003127105534077
    2. '2' → logprob: -6.004003047943115
    3. ' b' → logprob: -6.504003047943115
    4. ' ' → logprob: -11.004003524780273
    5. '   ' → logprob: -12.754003524780273
    6. '<|end|>' → logprob: -12.754003524780273
    7. '```' → logprob: -13.629003524780273
    8. '4' → logprob: -14.254003524780273
    9. '-' → logprob: -14.504003524780273
    10. '    ' → logprob: -15.129003524780273

Token 157: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602759063243866
    2. '=' → logprob: -1.910275936126709
    3. ' *=' → logprob: -11.16027545928955
    4. '<|end|>' → logprob: -11.16027545928955
    5. '*=' → logprob: -12.16027545928955
    6. ')' → logprob: -12.41027545928955
    7. '*' → logprob: -12.41027545928955
    8. ' ' → logprob: -12.78527545928955
    9. ',' → logprob: -13.16027545928955
    10. ' =)' → logprob: -14.03527545928955

Token 158: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0889534205198288
    2. ' ' → logprob: -2.4639534950256348
    3. ' ' → logprob: -12.463953018188477
    4. '   ' → logprob: -12.713953018188477
    5. '  ' → logprob: -12.963953018188477
    6. '(' → logprob: -14.151453018188477
    7. '    ' → logprob: -14.276453018188477
    8. '	' → logprob: -14.963953018188477
    9. '```' → logprob: -14.963953018188477
    10. '​' → logprob: -15.088953018188477

Token 159: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001334763248451054
    2. ' ' → logprob: -6.6263346672058105
    3. '(' → logprob: -12.876335144042969
    4. '   ' → logprob: -13.126335144042969
    5. '  ' → logprob: -13.626335144042969
    6. '
' → logprob: -14.001335144042969
    7. '    ' → logprob: -14.876335144042969
    8. '`' → logprob: -15.563835144042969
    9. ' ' → logprob: -15.626335144042969
    10. '

' → logprob: -15.813835144042969

Token 160: '*(' (ID: 14793)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.11665775626897812
    2. ' *' → logprob: -2.3666577339172363
    3. '*(' → logprob: -4.116657733917236
    4. '**' → logprob: -11.616658210754395
    5. ' *(' → logprob: -11.866658210754395
    6. '*f' → logprob: -14.991658210754395
    7. '*((' → logprob: -15.116658210754395
    8. '(dx' → logprob: -15.241658210754395
    9. '*ft' → logprob: -15.366658210754395
    10. ' **' → logprob: -15.616658210754395

Token 161: 'fx' (ID: 12876)
  Prédit: '(dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dx' → logprob: -0.008802706375718117
    2. ' (' → logprob: -5.133802890777588
    3. '(f' → logprob: -5.883802890777588
    4. '*(' → logprob: -10.63380241394043
    5. '(fd' → logprob: -11.13380241394043
    6. ')' → logprob: -11.88380241394043
    7. '(fp' → logprob: -12.00880241394043
    8. '*' → logprob: -12.25880241394043
    9. '(ax' → logprob: -12.38380241394043
    10. '(df' → logprob: -12.38380241394043

Token 162: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.3856492842023727e-06
    2. ' *' → logprob: -14.250000953674316
    3. '**' → logprob: -14.625000953674316
    4. '*)' → logprob: -16.750001907348633
    5. 'dx' → logprob: -16.875001907348633
    6. '*

' → logprob: -18.375001907348633
    7. ')*' → logprob: -18.625001907348633
    8. '*
' → logprob: -18.875001907348633
    9. '```' → logprob: -19.125001907348633
    10. '***' → logprob: -19.500001907348633

Token 163: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.00017803447553887963
    2. '(dx' → logprob: -8.750178337097168
    3. ' dx' → logprob: -10.875178337097168
    4. 'dy' → logprob: -15.500178337097168
    5. '(' → logprob: -15.875178337097168
    6. '_dx' → logprob: -16.12517738342285
    7. 'd' → logprob: -16.37517738342285
    8. '.dx' → logprob: -16.87517738342285
    9. '```' → logprob: -18.62517738342285
    10. 'Dx' → logprob: -18.87517738342285

Token 164: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5245093107223511
    2. '+' → logprob: -0.8995093107223511
    3. ')' → logprob: -7.399509429931641
    4. '+)' → logprob: -7.399509429931641
    5. ' )' → logprob: -8.89950942993164
    6. '<|end|>' → logprob: -11.77450942993164
    7. ' ' → logprob: -12.14950942993164
    8. ' +
' → logprob: -12.14950942993164
    9. '+b' → logprob: -13.52450942993164
    10. ' -' → logprob: -13.77450942993164

Token 165: ' fy' (ID: 18912)
  Prédit: 'fy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fy' → logprob: -0.20144082605838776
    2. ' fy' → logprob: -1.7014408111572266
    3. 'f' → logprob: -11.201440811157227
    4. 'dy' → logprob: -12.826440811157227
    5. ' ' → logprob: -12.826440811157227
    6. ' ' → logprob: -13.201440811157227
    7. 'fx' → logprob: -13.451440811157227
    8. ')' → logprob: -13.701440811157227
    9. '	f' → logprob: -13.951440811157227
    10. '
' → logprob: -14.576440811157227

Token 166: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.01744789257645607
    2. ')' → logprob: -4.2674479484558105
    3. 'dy' → logprob: -6.3924479484558105
    4. '*)' → logprob: -6.5174479484558105
    5. 'dx' → logprob: -9.517447471618652
    6. ' )' → logprob: -10.767447471618652
    7. ' *' → logprob: -11.392447471618652
    8. ' dy' → logprob: -11.517447471618652
    9. '```' → logprob: -13.392447471618652
    10. ')*' → logprob: -13.642447471618652

Token 167: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.00861528143286705
    2. ' dy' → logprob: -4.758615493774414
    3. '.dy' → logprob: -15.133615493774414
    4. ')' → logprob: -15.633615493774414
    5. 'd' → logprob: -16.008615493774414
    6. 'Dy' → logprob: -16.633615493774414
    7. ' ' → logprob: -16.883615493774414
    8. 'y' → logprob: -17.633615493774414
    9. 'py' → logprob: -18.008615493774414
    10. '   ' → logprob: -18.133615493774414

Token 168: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007893478497862816
    2. ')
' → logprob: -4.8828935623168945
    3. ' )' → logprob: -8.257893562316895
    4. ' )
' → logprob: -10.632893562316895
    5. ')
' → logprob: -13.257893562316895
    6. '<|end|>' → logprob: -14.132893562316895
    7. ')

' → logprob: -14.757893562316895
    8. '),' → logprob: -15.507893562316895
    9. ' ' → logprob: -15.632893562316895
    10. ')`' → logprob: -16.757892608642578

Token 169: '           ' (ID: 352)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.3632630407810211
    2. 'c' → logprob: -1.6132630109786987
    3. '           ' → logprob: -2.4882631301879883
    4. '	c' → logprob: -5.238263130187988
    5. ' ' → logprob: -5.363263130187988
    6. '<|end|>' → logprob: -5.488263130187988
    7. '            ' → logprob: -5.988263130187988
    8. ' 
' → logprob: -6.988263130187988
    9. '            
' → logprob: -7.113263130187988
    10. '    ' → logprob: -7.488263130187988

Token 170: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.0380743183195591
    2. ' c' → logprob: -3.288074254989624
    3. '	c' → logprob: -10.413074493408203
    4. ' ' → logprob: -13.538074493408203
    5. '           ' → logprob: -14.663074493408203
    6. '<|end|>' → logprob: -15.038074493408203
    7. '   ' → logprob: -15.538074493408203
    8. '            ' → logprob: -16.288074493408203
    9. 'import' → logprob: -16.288074493408203
    10. '    ' → logprob: -16.663074493408203

Token 171: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018151583150029182
    2. '=' → logprob: -4.018151760101318
    3. ' =(' → logprob: -14.76815128326416
    4. '<|end|>' → logprob: -14.89315128326416
    5. ' ' → logprob: -15.01815128326416
    6. ')' → logprob: -15.76815128326416
    7. ' =
' → logprob: -16.018152236938477
    8. '=(' → logprob: -16.643152236938477
    9. '```' → logprob: -16.643152236938477
    10. ' =)' → logprob: -17.518152236938477

Token 172: ' fx' (ID: 60138)
  Prédit: ' fx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fx' → logprob: -0.5302553772926331
    2. 'fx' → logprob: -0.9052553772926331
    3. ' fy' → logprob: -5.155255317687988
    4. ' (' → logprob: -7.655255317687988
    5. '(f' → logprob: -8.405255317687988
    6. '_fx' → logprob: -8.405255317687988
    7. 'fy' → logprob: -8.780255317687988
    8. '(' → logprob: -9.530255317687988
    9. ' ' → logprob: -9.780255317687988
    10. 'f' → logprob: -9.780255317687988

Token 173: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0006166507955640554
    2. '*f' → logprob: -7.500616550445557
    3. '*ft' → logprob: -9.875617027282715
    4. '2' → logprob: -12.000617027282715
    5. '**' → logprob: -12.750617027282715
    6. ' *' → logprob: -13.250617027282715
    7. 'fx' → logprob: -13.875617027282715
    8. ' ' → logprob: -16.3756160736084
    9. '```' → logprob: -16.8756160736084
    10. '*x' → logprob: -17.0006160736084

Token 174: 'fx' (ID: 12876)
  Prédit: 'fx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fx' → logprob: -1.1517960956552997e-05
    2. ' fx' → logprob: -12.000011444091797
    3. '2' → logprob: -12.375011444091797
    4. '
' → logprob: -15.250011444091797
    5. '_fx' → logprob: -15.250011444091797
    6. '*' → logprob: -15.500011444091797
    7. '```' → logprob: -16.250011444091797
    8. ' ' → logprob: -16.750011444091797
    9. '.fx' → logprob: -17.125011444091797
    10. 'fy' → logprob: -17.500011444091797

Token 175: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.010259700939059258
    2. '-' → logprob: -4.635259628295898
    3. ' ' → logprob: -7.885259628295898
    4. ' +' → logprob: -10.260259628295898
    5. '+' → logprob: -10.385259628295898
    6. ' -
' → logprob: -11.010259628295898
    7. '   ' → logprob: -11.135259628295898
    8. '  ' → logprob: -12.385259628295898
    9. '```' → logprob: -12.510259628295898
    10. ' ,' → logprob: -12.885259628295898

Token 176: ' fy' (ID: 18912)
  Prédit: 'fy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fy' → logprob: -0.2519950568675995
    2. ' fy' → logprob: -1.5019950866699219
    3. 'f' → logprob: -10.501995086669922
    4. ' ' → logprob: -11.501995086669922
    5. '<|end|>' → logprob: -11.751995086669922
    6. 'fty' → logprob: -12.001995086669922
    7. 'fyn' → logprob: -12.251995086669922
    8. 'fly' → logprob: -13.001995086669922
    9. 'fyr' → logprob: -13.376995086669922
    10. '	f' → logprob: -14.251995086669922

Token 177: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0059871007688343525
    2. '-' → logprob: -5.380987167358398
    3. ' -' → logprob: -7.130987167358398
    4. '<|end|>' → logprob: -8.130987167358398
    5. ' *' → logprob: -9.505987167358398
    6. '*ft' → logprob: -9.630987167358398
    7. '*f' → logprob: -9.880987167358398
    8. '*-' → logprob: -10.130987167358398
    9. ' ' → logprob: -11.380987167358398
    10. '```' → logprob: -11.755987167358398

Token 178: 'fy' (ID: 29790)
  Prédit: 'fy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fy' → logprob: -8.244413766078651e-05
    2. ' fy' → logprob: -10.125082015991211
    3. 'fx' → logprob: -10.500082015991211
    4. 'f' → logprob: -12.250082015991211
    5. 'fty' → logprob: -12.750082015991211
    6. 'fyr' → logprob: -13.000082015991211
    7. 'fyn' → logprob: -14.250082015991211
    8. 'fq' → logprob: -14.375082015991211
    9. 'fly' → logprob: -14.500082015991211
    10. 'fc' → logprob: -14.750082015991211

Token 179: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.01627013087272644
    2. '-' → logprob: -4.141270160675049
    3. ' ' → logprob: -8.39126968383789
    4. '   ' → logprob: -12.14126968383789
    5. ' -
' → logprob: -14.39126968383789
    6. '    ' → logprob: -14.51626968383789
    7. '```' → logprob: -14.51626968383789
    8. '  ' → logprob: -15.14126968383789
    9. '           ' → logprob: -15.26626968383789
    10. '-r' → logprob: -15.39126968383789

Token 180: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.5759406089782715
    2. 'r' → logprob: -0.8259406089782715
    3. ' ' → logprob: -14.45094108581543
    4. '	r' → logprob: -14.70094108581543
    5. '(r' → logprob: -15.95094108581543
    6. '*r' → logprob: -16.82594108581543
    7. '<|end|>' → logprob: -17.70094108581543
    8. '_r' → logprob: -18.07594108581543
    9. ' ' → logprob: -18.32594108581543
    10. ' (' → logprob: -18.70094108581543

Token 181: '*r' (ID: 92096)
  Prédit: '*r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*r' → logprob: -4.787507714354433e-05
    2. '*' → logprob: -10.25004768371582
    3. '**' → logprob: -11.50004768371582
    4. 'r' → logprob: -13.62504768371582
    5. ' *' → logprob: -14.12504768371582
    6. '*c' → logprob: -16.25004768371582
    7. '2' → logprob: -16.50004768371582
    8. '***' → logprob: -17.25004768371582
    9. '```' → logprob: -17.50004768371582
    10. '*q' → logprob: -17.62504768371582

Token 182: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.042391177266836166
    2. '<|end|>' → logprob: -3.292391061782837
    3. '<|end|>' → logprob: -6.042391300201416
    4. '           ' → logprob: -6.917391300201416
    5. '       ' → logprob: -7.917391300201416
    6. '   ' → logprob: -8.417390823364258
    7. '
' → logprob: -9.167390823364258
    8. ' 
' → logprob: -9.792390823364258
    9. ' ' → logprob: -10.167390823364258
    10. '```' → logprob: -10.417390823364258

Token 183: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5858997702598572
    2. '
' → logprob: -1.335899829864502
    3. '           ' → logprob: -2.710899829864502
    4. '       ' → logprob: -3.085899829864502
    5. '<|end|>' → logprob: -3.460899829864502
    6. 'import' → logprob: -4.710899829864502
    7. '    ' → logprob: -5.210899829864502
    8. '  ' → logprob: -6.085899829864502
    9. '    
' → logprob: -6.210899829864502
    10. 'd' → logprob: -6.210899829864502

Token 184: ' discrimin' (ID: 50254)
  Prédit: ' D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -1.0064324140548706
    2. 'd' → logprob: -1.3814324140548706
    3. ' d' → logprob: -1.5064324140548706
    4. '           ' → logprob: -2.88143253326416
    5. ' discrimin' → logprob: -4.00643253326416
    6. '
' → logprob: -4.25643253326416
    7. '            ' → logprob: -4.63143253326416
    8. 'D' → logprob: -4.75643253326416
    9. '<|end|>' → logprob: -4.75643253326416
    10. '    ' → logprob: -4.88143253326416

Token 185: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.0022664708085358143
    2. 'a' → logprob: -6.1272664070129395
    3. ' ant' → logprob: -10.627266883850098
    4. 'an' → logprob: -10.752266883850098
    5. '_ant' → logprob: -11.377266883850098
    6. '=' → logprob: -12.127266883850098
    7. '_' → logprob: -12.377266883850098
    8. ''ant' → logprob: -13.377266883850098
    9. '>' → logprob: -13.627266883850098
    10. ' a' → logprob: -13.752266883850098

Token 186: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004717295523732901
    2. '=' → logprob: -5.3797173500061035
    3. ' ' → logprob: -9.754716873168945
    4. ' >' → logprob: -10.379716873168945
    5. '>' → logprob: -12.754716873168945
    6. ' >=' → logprob: -13.879716873168945
    7. ' <' → logprob: -14.004716873168945
    8. ')' → logprob: -14.129716873168945
    9. ' =)' → logprob: -14.504716873168945
    10. '<|end|>' → logprob: -14.879716873168945

Token 187: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.38687169551849365
    2. ' b' → logprob: -1.1368716955184937
    3. ' ' → logprob: -14.636871337890625
    4. '(b' → logprob: -16.136871337890625
    5. '	b' → logprob: -16.261871337890625
    6. '   ' → logprob: -16.386871337890625
    7. '(' → logprob: -18.386871337890625
    8. ')b' → logprob: -18.511871337890625
    9. ' ' → logprob: -18.761871337890625
    10. ' (' → logprob: -19.261871337890625

Token 188: '*b' (ID: 72162)
  Prédit: '*b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*b' → logprob: -0.3473303020000458
    2. '*' → logprob: -1.8473303318023682
    3. ' *' → logprob: -2.097330331802368
    4. '**' → logprob: -4.347330093383789
    5. ' **' → logprob: -10.222330093383789
    6. ' ' → logprob: -13.097330093383789
    7. '```' → logprob: -13.847330093383789
    8. '2' → logprob: -14.097330093383789
    9. '***' → logprob: -14.097330093383789
    10. 'b' → logprob: -14.222330093383789

Token 189: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.002829723060131073
    2. '-' → logprob: -6.377829551696777
    3. '<|end|>' → logprob: -6.877829551696777
    4. ' ' → logprob: -9.377829551696777
    5. '<|end|>' → logprob: -12.002829551696777
    6. ')' → logprob: -13.252829551696777
    7. '  ' → logprob: -14.627829551696777
    8. '    ' → logprob: -15.002829551696777
    9. '   ' → logprob: -15.002829551696777
    10. ' ' → logprob: -15.190329551696777

Token 190: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -6.861651490908116e-05
    2. ' ' → logprob: -9.625068664550781
    3. '(' → logprob: -13.875068664550781
    4. '```' → logprob: -14.250068664550781
    5. '   ' → logprob: -14.750068664550781
    6. '' → logprob: -15.750068664550781
    7. '
' → logprob: -16.75006866455078
    8. '۴' → logprob: -17.00006866455078
    9. '<|end|>' → logprob: -17.50006866455078
    10. '`' → logprob: -17.62506866455078

Token 191: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -12.500003814697266
    3. '(' → logprob: -15.250003814697266
    4. '```' → logprob: -15.875003814697266
    5. '   ' → logprob: -17.125003814697266
    6. '
' → logprob: -18.125003814697266
    7. '' → logprob: -18.375003814697266
    8. '۴' → logprob: -18.375003814697266
    9. '٤' → logprob: -19.250003814697266
    10. '４' → logprob: -19.500003814697266

Token 192: '*a' (ID: 78448)
  Prédit: '*a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*a' → logprob: -0.6806387901306152
    2. ' *' → logprob: -1.1806387901306152
    3. '*' → logprob: -1.6806387901306152
    4. '**' → logprob: -8.680639266967773
    5. 'a' → logprob: -8.805639266967773
    6. '<|end|>' → logprob: -10.555639266967773
    7. '*A' → logprob: -12.305639266967773
    8. ' a' → logprob: -12.555639266967773
    9. '*object' → logprob: -12.555639266967773
    10. '***' → logprob: -13.055639266967773

Token 193: '*c' (ID: 83421)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.10703393816947937
    2. '*c' → logprob: -2.4820339679718018
    3. '*a' → logprob: -4.232033729553223
    4. ' *' → logprob: -5.982033729553223
    5. '**' → logprob: -7.107033729553223
    6. '***' → logprob: -11.107033729553223
    7. ' ' → logprob: -11.357033729553223
    8. '*out' → logprob: -11.482033729553223
    9. '```' → logprob: -12.357033729553223
    10. '*object' → logprob: -12.607033729553223

Token 194: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 195: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8186773061752319
    2. '
' → logprob: -1.193677306175232
    3. ' if' → logprob: -2.6936774253845215
    4. '<|end|>' → logprob: -2.8186774253845215
    5. '   ' → logprob: -2.9436774253845215
    6. 'if' → logprob: -3.6936774253845215
    7. '           ' → logprob: -3.9436774253845215
    8. ' 
' → logprob: -4.8186774253845215
    9. '    
' → logprob: -5.5686774253845215
    10. ' ' → logprob: -5.6936774253845215

Token 196: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24890878796577454
    2. ' 
' → logprob: -2.373908758163452
    3. ' if' → logprob: -2.623908758163452
    4. '       ' → logprob: -4.123908996582031
    5. '           ' → logprob: -4.748908996582031
    6. 'if' (adapté à ' if') → logprob: -5.373908996582031
    7. '    ' → logprob: -5.498908996582031
    8. '            ' → logprob: -5.623908996582031
    9. '        ' → logprob: -5.748908996582031
    10. '  ' → logprob: -5.873908996582031

Token 197: ' discrimin' (ID: 50254)
  Prédit: ' discrimin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' discrimin' → logprob: -0.002555092331022024
    2. 'dis' → logprob: -6.002554893493652
    3. ' discr' → logprob: -10.502554893493652
    4. ' ' → logprob: -10.627554893493652
    5. '(dis' → logprob: -11.002554893493652
    6. '	dis' → logprob: -11.752554893493652
    7. ' dis' → logprob: -13.877554893493652
    8. ' disc' → logprob: -14.877554893493652
    9. ' discriminate' → logprob: -15.002554893493652
    10. '_dis' → logprob: -15.252554893493652

Token 198: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -8.2994620242971e-06
    2. '>' → logprob: -12.125008583068848
    3. 'a' → logprob: -13.750008583068848
    4. ' ant' → logprob: -14.375008583068848
    5. 'ант' → logprob: -15.250008583068848
    6. 'antt' → logprob: -15.500008583068848
    7. 'an' → logprob: -16.00000762939453
    8. 'at' → logprob: -16.25000762939453
    9. '<' → logprob: -16.25000762939453
    10. ''ant' → logprob: -16.37500762939453

Token 199: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6993664503097534
    2. '>' → logprob: -1.1993664503097534
    3. ' >=' → logprob: -1.8243664503097534
    4. '>=' → logprob: -3.324366569519043
    5. ' <' → logprob: -5.699366569519043
    6. '<' → logprob: -6.949366569519043
    7. ' ' → logprob: -9.574366569519043
    8. ' ' → logprob: -12.199366569519043
    9. '=' → logprob: -12.824366569519043
    10. '[' → logprob: -12.949366569519043

Token 200: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31330013275146484
    2. ' ' → logprob: -1.3133001327514648
    3. '=' → logprob: -10.188300132751465
    4. ' ' → logprob: -14.688300132751465
    5. ' =' → logprob: -15.688300132751465
    6. '  ' → logprob: -16.81330108642578
    7. '>' → logprob: -17.37580108642578
    8. '1' → logprob: -17.50080108642578
    9. '۰' → logprob: -17.62580108642578
    10. ' 
' → logprob: -17.75080108642578

Token 201: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. '=' → logprob: -16.250028610229492
    4. '۰' → logprob: -19.000028610229492
    5. '```' → logprob: -19.312528610229492
    6. '   ' → logprob: -19.312528610229492
    7. '1' → logprob: -19.500028610229492
    8. '
' → logprob: -20.000028610229492
    9. 'zero' → logprob: -20.312528610229492
    10. ')' → logprob: -20.437528610229492

Token 202: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011184340342879295
    2. ':
' → logprob: -4.511184215545654
    3. ' or' → logprob: -9.636184692382812
    4. '           ' → logprob: -10.261184692382812
    5. '               ' → logprob: -10.886184692382812
    6. ':return' → logprob: -12.386184692382812
    7. ' continue' → logprob: -12.761184692382812
    8. ' :' → logprob: -12.886184692382812
    9. ',' → logprob: -13.261184692382812
    10. ' and' → logprob: -13.511184692382812

Token 203: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05151713266968727
    2. ' continue' → logprob: -3.3015172481536865
    3. '           ' → logprob: -4.551517009735107
    4. 'continue' → logprob: -6.051517009735107
    5. '
' → logprob: -9.051517486572266
    6. ' continues' → logprob: -9.801517486572266
    7. ':' → logprob: -10.051517486572266
    8. '                
' → logprob: -10.176517486572266
    9. '   ' → logprob: -11.051517486572266
    10. ':
' → logprob: -11.176517486572266

Token 204: ' #' (ID: 1069)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.02671661600470543
    2. '               ' → logprob: -4.026716709136963
    3. 'continue' → logprob: -4.776716709136963
    4. '           ' → logprob: -9.651716232299805
    5. ' ' → logprob: -11.026716232299805
    6. '	continue' → logprob: -11.526716232299805
    7. '_continue' → logprob: -12.901716232299805
    8. ' continues' → logprob: -13.026716232299805
    9. '   ' → logprob: -13.151716232299805
    10. '                ' → logprob: -13.401716232299805

Token 205: ' no' (ID: 860)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.12711739540100098
    2. 'continue' → logprob: -2.127117395401001
    3. '               ' → logprob: -8.752117156982422
    4. '           ' → logprob: -10.752117156982422
    5. '	continue' → logprob: -13.252117156982422
    6. ' safe' → logprob: -13.502117156982422
    7. '   ' → logprob: -13.627117156982422
    8. '                   ' → logprob: -13.752117156982422
    9. 'continu' → logprob: -14.127117156982422
    10. ' ' → logprob: -14.377117156982422

Token 206: ' intersection' (ID: 42002)
  Prédit: ' intersection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intersection' → logprob: -0.1525164097547531
    2. 'intersection' → logprob: -2.0275163650512695
    3. ' collision' → logprob: -5.2775163650512695
    4. 'collision' → logprob: -5.5275163650512695
    5. ' intersections' → logprob: -7.6525163650512695
    6. 'inter' → logprob: -8.77751636505127
    7. 'interaction' → logprob: -11.90251636505127
    8. ' impact' → logprob: -12.02751636505127
    9. '<|end|>' → logprob: -12.02751636505127
    10. ' interaction' → logprob: -12.15251636505127

Token 207: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10073268413543701
    2. '           ' → logprob: -2.7257328033447266
    3. ' continue' → logprob: -3.8507328033447266
    4. 'continue' → logprob: -5.725732803344727
    5. ':' → logprob: -5.975732803344727
    6. ',' → logprob: -6.350732803344727
    7. ':
' → logprob: -7.850732803344727
    8. '                   ' → logprob: -7.975732803344727
    9. '
' → logprob: -8.100732803344727
    10. ' continues' → logprob: -8.475732803344727

Token 208: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.35607823729515076
    2. ' continue' → logprob: -1.7310782670974731
    3. '           ' → logprob: -2.3560781478881836
    4. 'continue' → logprob: -3.8560781478881836
    5. ',' → logprob: -5.856078147888184
    6. ' continues' → logprob: -7.231078147888184
    7. '
' → logprob: -7.356078147888184
    8. ':' → logprob: -7.481078147888184
    9. '                   ' → logprob: -7.731078147888184
    10. ':
' → logprob: -8.231078147888184

Token 209: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.09574788808822632
    2. 'continue' (adapté à ' continue') → logprob: -2.595747947692871
    3. '               ' → logprob: -4.095747947692871
    4. '           ' → logprob: -10.470747947692871
    5. '	continue' → logprob: -10.970747947692871
    6. '                   ' → logprob: -11.470747947692871
    7. '   ' → logprob: -12.970747947692871
    8. ' ' → logprob: -12.970747947692871
    9. ' ' → logprob: -12.970747947692871
    10. ' continu' → logprob: -12.970747947692871

Token 210: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012634309008717537
    2. '            
' → logprob: -5.01263427734375
    3. '
' → logprob: -5.51263427734375
    4. 'else' → logprob: -7.51263427734375
    5. 'elif' → logprob: -8.38763427734375
    6. '       ' → logprob: -8.63763427734375
    7. '    
' → logprob: -8.63763427734375
    8. '  
' → logprob: -8.88763427734375
    9. ' else' → logprob: -9.13763427734375
    10. 'if' → logprob: -9.13763427734375

Token 211: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03572788089513779
    2. '            
' → logprob: -3.7857279777526855
    3. '
' → logprob: -5.4107279777526855
    4. ' else' → logprob: -6.0357279777526855
    5. 'else' → logprob: -6.6607279777526855
    6. '  
' → logprob: -6.7857279777526855
    7. '    
' → logprob: -7.1607279777526855
    8. ' 
' → logprob: -7.4107279777526855
    9. 's' → logprob: -8.285727500915527
    10. '       ' → logprob: -8.410727500915527

Token 212: ' else' (ID: 1203)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.3465387523174286
    2. 'dis' → logprob: -1.721538782119751
    3. 'else' (adapté à ' else') → logprob: -3.221538782119751
    4. 'import' → logprob: -3.221538782119751
    5. ' sqrt' → logprob: -4.721538543701172
    6. 'disc' → logprob: -4.846538543701172
    7. 'd' → logprob: -5.096538543701172
    8. ' discrimin' → logprob: -5.471538543701172
    9. 't' → logprob: -6.471538543701172
    10. ' else' → logprob: -6.596538543701172

Token 213: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22686262428760529
    2. ':
' → logprob: -1.6018626689910889
    3. '               ' → logprob: -7.72686243057251
    4. '           ' → logprob: -7.72686243057251
    5. ' :
' → logprob: -8.226862907409668
    6. ' :' → logprob: -8.976862907409668
    7. '       ' → logprob: -10.226862907409668
    8. '{' → logprob: -10.726862907409668
    9. '):
' → logprob: -10.976862907409668
    10. '[' → logprob: -11.101862907409668

Token 214: '               ' (ID: 506)
  Prédit: ' sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sqrt' → logprob: -0.7780391573905945
    2. '               ' → logprob: -1.4030392169952393
    3. ' t' → logprob: -2.4030392169952393
    4. 'import' → logprob: -3.0280392169952393
    5. ' import' → logprob: -3.1530392169952393
    6. 'sqrt' → logprob: -3.2780392169952393
    7. '   ' → logprob: -3.6530392169952393
    8. 't' → logprob: -3.6530392169952393
    9. ' discrimin' → logprob: -5.15303897857666
    10. '           ' → logprob: -5.27803897857666

Token 215: ' discrimin' (ID: 50254)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.6177565455436707
    2. ' sqrt' → logprob: -1.3677566051483154
    3. 'import' → logprob: -2.6177566051483154
    4. 'd' → logprob: -3.1177566051483154
    5. '               ' → logprob: -3.8677566051483154
    6. 't' → logprob: -3.8677566051483154
    7. ' import' → logprob: -4.492756366729736
    8. ' t' → logprob: -4.742756366729736
    9. 'dis' → logprob: -4.867756366729736
    10. ' discrimin' → logprob: -5.367756366729736

Token 216: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -1.9981420336989686e-05
    2. ' ant' → logprob: -12.375020027160645
    3. 'at' → logprob: -12.750020027160645
    4. 'a' → logprob: -13.000020027160645
    5. 'antt' → logprob: -13.625020027160645
    6. 't' → logprob: -14.250020027160645
    7. '>' → logprob: -14.375020027160645
    8. 'ант' → logprob: -14.375020027160645
    9. '
' → logprob: -14.375020027160645
    10. '...' → logprob: -14.500020027160645

Token 217: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.03467828407883644
    2. '_' → logprob: -4.1596784591674805
    3. '**' → logprob: -4.4096784591674805
    4. ' =' → logprob: -5.9096784591674805
    5. '=' → logprob: -6.2846784591674805
    6. 's' → logprob: -7.1596784591674805
    7. ' **' → logprob: -7.2846784591674805
    8. '_=' → logprob: -9.40967845916748
    9. '_root' → logprob: -9.53467845916748
    10. '_sq' → logprob: -9.90967845916748

Token 218: 'qrt' (ID: 17629)
  Prédit: 'qrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qrt' → logprob: -0.0003422567679081112
    2. 'qr' → logprob: -8.50034236907959
    3. 'q' → logprob: -9.00034236907959
    4. '**' → logprob: -11.25034236907959
    5. ' =' → logprob: -14.25034236907959
    6. 'r' → logprob: -14.37534236907959
    7. '=' → logprob: -15.25034236907959
    8. ' **' → logprob: -15.37534236907959
    9. 'td' → logprob: -16.125341415405273
    10. 'qt' → logprob: -16.250341415405273

Token 219: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.251930296421051
    2. '=' → logprob: -1.5019302368164062
    3. ' ' → logprob: -14.751930236816406
    4. '_' → logprob: -15.251930236816406
    5. ')' → logprob: -15.626930236816406
    6. 'import' → logprob: -15.626930236816406
    7. ' ' → logprob: -16.376930236816406
    8. '	' → logprob: -17.001930236816406
    9. ',' → logprob: -17.626930236816406
    10. '>' → logprob: -17.876930236816406

Token 220: ' discrimin' (ID: 50254)
  Prédit: 'dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dis' → logprob: -0.03959380462765694
    2. ' discrimin' → logprob: -3.4145936965942383
    3. 'int' → logprob: -5.664593696594238
    4. '(dis' → logprob: -6.289593696594238
    5. ' int' → logprob: -7.539593696594238
    6. ' discr' → logprob: -10.789593696594238
    7. '	dis' → logprob: -11.039593696594238
    8. ' dis' → logprob: -11.539593696594238
    9. '(int' → logprob: -11.664593696594238
    10. ' (' → logprob: -12.039593696594238

Token 221: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -1.8624639324116288e-06
    2. '**' → logprob: -14.000001907348633
    3. 'ANT' → logprob: -15.500001907348633
    4. 'tant' → logprob: -15.500001907348633
    5. 'ent' → logprob: -15.500001907348633
    6. 'math' → logprob: -15.875001907348633
    7. '[' → logprob: -16.625001907348633
    8. 'int' → logprob: -17.125001907348633
    9. 'antt' → logprob: -17.250001907348633
    10. 'nant' → logprob: -17.375001907348633

Token 222: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.07890135049819946
    2. ' **' → logprob: -2.5789012908935547
    3. 'import' → logprob: -11.453901290893555
    4. '*' → logprob: -14.578901290893555
    5. ' ' → logprob: -16.078901290893555
    6. '
' → logprob: -16.203901290893555
    7. ')**' → logprob: -16.203901290893555
    8. '***' → logprob: -16.953901290893555
    9. ')' → logprob: -17.078901290893555
    10. '   ' → logprob: -17.203901290893555

Token 223: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '.' → logprob: -17.5
    4. '(' → logprob: -18.75
    5. '```' → logprob: -20.5
    6. '{' → logprob: -21.375
    7. '۰' → logprob: -22.0
    8. '   ' → logprob: -22.375
    9. ' ' → logprob: -22.625
    10. '-' → logprob: -23.375

Token 224: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0564331205387134e-05
    2. '5' → logprob: -11.50001049041748
    3. '0' → logprob: -15.00001049041748
    4. '1' → logprob: -17.375011444091797
    5. '```' → logprob: -17.375011444091797
    6. '2' → logprob: -17.625011444091797
    7. '500' → logprob: -18.250011444091797
    8. '3' → logprob: -19.250011444091797
    9. '(' → logprob: -19.375011444091797
    10. '-' → logprob: -19.625011444091797

Token 225: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.9361264946837764e-07
    2. 'five' → logprob: -17.0
    3. '```' → logprob: -17.25
    4. '0' → logprob: -17.5
    5. '.' → logprob: -18.0
    6. '05' → logprob: -18.25
    7. 'half' → logprob: -18.75
    8. '4' → logprob: -19.25
    9. '25' → logprob: -19.3125
    10. 'value' → logprob: -19.8125

Token 226: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.45709604024887085
    2. '
' → logprob: -1.5820960998535156
    3. '<|end|>' → logprob: -2.2070960998535156
    4. '           ' → logprob: -4.082096099853516
    5. ')' → logprob: -4.332096099853516
    6. ',' → logprob: -5.082096099853516
    7. '<|end|>' → logprob: -5.832096099853516
    8. '                ' → logprob: -6.082096099853516
    9. ',
' → logprob: -6.332096099853516
    10. '       ' → logprob: -6.707096099853516

Token 227: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05634051188826561
    2. '           ' → logprob: -3.056340456008911
    3. 't' → logprob: -6.30634069442749
    4. '       ' → logprob: -6.80634069442749
    5. '                ' → logprob: -6.80634069442749
    6. ',' → logprob: -7.30634069442749
    7. '<|end|>' → logprob: -7.68134069442749
    8. '                
' → logprob: -7.80634069442749
    9. '	           ' → logprob: -8.056340217590332
    10. '            ' → logprob: -8.056340217590332

Token 228: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -1.1756367712223437e-05
    2. ' t' → logprob: -11.375011444091797
    3. 'sol' → logprob: -16.000011444091797
    4. '   ' → logprob: -16.375011444091797
    5. '	t' → logprob: -17.125011444091797
    6. '#' → logprob: -17.875011444091797
    7. 'temp' → logprob: -18.000011444091797
    8. '(-' → logprob: -18.125011444091797
    9. '
' → logprob: -18.375011444091797
    10. 's' → logprob: -18.500011444091797

Token 229: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010383108630776405
    2. '0' → logprob: -4.635383129119873
    3. 's' → logprob: -8.385382652282715
    4. ' =' → logprob: -8.635382652282715
    5. '=' → logprob: -9.010382652282715
    6. '_' → logprob: -10.635382652282715
    7. '-' → logprob: -10.885382652282715
    8. '_min' → logprob: -11.135382652282715
    9. 'min' → logprob: -11.760382652282715
    10. ' ' → logprob: -11.885382652282715

Token 230: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196824833750725
    2. '=' → logprob: -2.8119683265686035
    3. '=(-' → logprob: -15.436967849731445
    4. ' =(' → logprob: -15.936967849731445
    5. ')' → logprob: -16.436967849731445
    6. ' =
' → logprob: -16.811967849731445
    7. ' ' → logprob: -17.561967849731445
    8. '=(' → logprob: -17.811967849731445
    9. ',' → logprob: -17.936967849731445
    10. '>' → logprob: -18.186967849731445

Token 231: ' (-' (ID: 21382)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -3.47626737493556e-05
    2. ' (-' → logprob: -10.62503433227539
    3. '((-' → logprob: -11.62503433227539
    4. '(' → logprob: -13.50003433227539
    5. '(-(' → logprob: -16.12503433227539
    6. '   ' → logprob: -17.75003433227539
    7. '=(-' → logprob: -19.25003433227539
    8. '(min' → logprob: -19.62503433227539
    9. '*(-' → logprob: -20.37503433227539
    10. '`' → logprob: -20.50003433227539

Token 232: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -6.988221684878226e-06
    2. ' b' → logprob: -11.875006675720215
    3. ')b' → logprob: -18.37500762939453
    4. '(b' → logprob: -19.00000762939453
    5. ' ' → logprob: -19.25000762939453
    6. '   ' → logprob: -19.37500762939453
    7. '	b' → logprob: -20.25000762939453
    8. '1' → logprob: -21.50000762939453
    9. 'B' → logprob: -21.62500762939453
    10. '(' → logprob: -22.12500762939453

Token 233: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.061095260083675385
    2. '-' → logprob: -3.0610952377319336
    3. ' +' → logprob: -4.686095237731934
    4. '+' → logprob: -5.811095237731934
    5. ' ' → logprob: -9.061095237731934
    6. ' plus' → logprob: -10.186095237731934
    7. ')' → logprob: -10.686095237731934
    8. '```' → logprob: -11.686095237731934
    9. '1' → logprob: -12.186095237731934
    10. ' minus' → logprob: -12.561095237731934

Token 234: ' discrimin' (ID: 50254)
  Prédit: 'dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dis' → logprob: -0.0006351164192892611
    2. ' discrimin' → logprob: -7.375635147094727
    3. '(dis' → logprob: -12.375635147094727
    4. '	dis' → logprob: -13.500635147094727
    5. '<|end|>' → logprob: -13.625635147094727
    6. ' discr' → logprob: -14.625635147094727
    7. ')' → logprob: -15.000635147094727
    8. 'disc' → logprob: -15.125635147094727
    9. '_dis' → logprob: -15.500635147094727
    10. '.dis' → logprob: -15.875635147094727

Token 235: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -1.7432603272027336e-06
    2. 'antt' → logprob: -14.250001907348633
    3. ' ant' → logprob: -15.250001907348633
    4. '_ant' → logprob: -15.375001907348633
    5. 'antd' → logprob: -16.125001907348633
    6. '.ant' → logprob: -16.250001907348633
    7. '-ant' → logprob: -16.500001907348633
    8. 'and' → logprob: -16.500001907348633
    9. 'at' → logprob: -17.125001907348633
    10. 'ANT' → logprob: -17.125001907348633

Token 236: '_s' (ID: 1278)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.074845552444458
    2. '<|end|>' → logprob: -1.199845552444458
    3. '_s' → logprob: -1.449845552444458
    4. ')/(' → logprob: -2.949845552444458
    5. 'sqrt' → logprob: -3.574845552444458
    6. 'token' → logprob: -4.824845314025879
    7. '.sqrt' → logprob: -4.824845314025879
    8. 's' → logprob: -5.074845314025879
    9. ' sqrt' → logprob: -6.074845314025879
    10. ' /' → logprob: -6.449845314025879

Token 237: 'qrt' (ID: 17629)
  Prédit: 'qrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qrt' → logprob: -7.898723561083898e-05
    2. 'q' → logprob: -9.500079154968262
    3. 'qt' → logprob: -13.500079154968262
    4. 'sqrt' → logprob: -14.125079154968262
    5. 'quare' → logprob: -14.375079154968262
    6. 'root' → logprob: -14.625079154968262
    7. 'qr' → logprob: -15.000079154968262
    8. 'qart' → logprob: -15.500079154968262
    9. '2' → logprob: -15.750079154968262
    10. 'qu' → logprob: -16.375078201293945

Token 238: ')/(' (ID: 60504)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006777655798941851
    2. ')/(' → logprob: -7.875677585601807
    3. ' )' → logprob: -8.125678062438965
    4. ')/' → logprob: -13.625678062438965
    5. ')
' → logprob: -15.250678062438965
    6. '   ' → logprob: -16.37567710876465
    7. '")' → logprob: -16.62567710876465
    8. '）' → logprob: -16.87567710876465
    9. '`)' → logprob: -18.00067710876465
    10. '```' → logprob: -18.12567710876465

Token 239: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00023154958034865558
    2. '(' → logprob: -8.375231742858887
    3. ' ' → logprob: -13.875231742858887
    4. '   ' → logprob: -17.50023078918457
    5. ' (' → logprob: -18.37523078918457
    6. '{' → logprob: -19.50023078918457
    7. '
' → logprob: -20.12523078918457
    8. '```' → logprob: -20.25023078918457
    9. ')' → logprob: -20.37523078918457
    10. '.' → logprob: -20.75023078918457

Token 240: '*a' (ID: 78448)
  Prédit: '*a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*a' → logprob: -4.704065213445574e-05
    2. '*' → logprob: -10.250046730041504
    3. 'a' → logprob: -11.625046730041504
    4. ' *' → logprob: -12.875046730041504
    5. '*A' → logprob: -18.25004768371582
    6. ' a' → logprob: -18.37504768371582
    7. '*u' → logprob: -19.37504768371582
    8. '*t' → logprob: -19.62504768371582
    9. '**' → logprob: -19.75004768371582
    10. '*)' → logprob: -20.00004768371582

Token 241: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20142541825771332
    2. ')
' → logprob: -1.7014254331588745
    3. ')
' → logprob: -11.826425552368164
    4. ')

' → logprob: -13.201425552368164
    5. ' )
' → logprob: -14.201425552368164
    6. '               ' → logprob: -14.326425552368164
    7. ')t' → logprob: -14.326425552368164
    8. ' )' → logprob: -14.701425552368164
    9. '),' → logprob: -15.326425552368164
    10. 'if' → logprob: -15.701425552368164

Token 242: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05812676623463631
    2. '<|end|>' → logprob: -3.43312668800354
    3. '                ' → logprob: -4.808126926422119
    4. ' if' → logprob: -5.308126926422119
    5. ' 
' → logprob: -5.808126926422119
    6. '                
' → logprob: -6.433126926422119
    7. ' t' → logprob: -6.808126926422119
    8. '			' → logprob: -7.183126926422119
    9. '           ' → logprob: -7.433126926422119
    10. '<|end|>' → logprob: -7.433126926422119

Token 243: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.5823841094970703
    2. 't' (adapté à ' t') → logprob: -0.8323841094970703
    3. '               ' → logprob: -5.08238410949707
    4. '                ' → logprob: -8.58238410949707
    5. '	t' → logprob: -11.45738410949707
    6. '			' → logprob: -11.83238410949707
    7. ' ' → logprob: -12.58238410949707
    8. '                   ' → logprob: -13.08238410949707
    9. '            ' → logprob: -13.20738410949707
    10. '           ' → logprob: -13.70738410949707

Token 244: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.75
    3. '```' → logprob: -16.5
    4. ')' → logprob: -17.25
    5. '₂' → logprob: -18.25
    6. '1' → logprob: -18.375
    7. '_' → logprob: -18.5
    8. '۲' → logprob: -18.625
    9. '=' → logprob: -18.75
    10. '0' → logprob: -19.0

Token 245: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -9.627176768844947e-05
    2. '=' → logprob: -9.250096321105957
    3. ' ' → logprob: -16.62509536743164
    4. '	' → logprob: -19.25009536743164
    5. ')' → logprob: -19.75009536743164
    6. ' =[' → logprob: -19.87509536743164
    7. '<|end|>' → logprob: -20.12509536743164
    8. ',' → logprob: -20.37509536743164
    9. ' =
' → logprob: -20.37509536743164
    10. ' =(' → logprob: -20.37509536743164

Token 246: ' (-' (ID: 21382)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.20141500234603882
    2. ' (-' → logprob: -1.7014150619506836
    3. '(' → logprob: -13.826415061950684
    4. '               ' → logprob: -15.451415061950684
    5. ' ' → logprob: -15.826415061950684
    6. '   ' → logprob: -16.451414108276367
    7. ' (' → logprob: -16.701414108276367
    8. '((-' → logprob: -16.951414108276367
    9. '                   ' → logprob: -17.076414108276367
    10. '           ' → logprob: -17.326414108276367

Token 247: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.0280383548888494e-06
    2. ' b' → logprob: -13.875000953674316
    3. '1' → logprob: -19.500001907348633
    4. ')b' → logprob: -19.875001907348633
    5. '-b' → logprob: -20.500001907348633
    6. '	b' → logprob: -20.875001907348633
    7. ')' → logprob: -21.250001907348633
    8. ' ' → logprob: -21.375001907348633
    9. '   ' → logprob: -21.375001907348633
    10. '2' → logprob: -21.375001907348633

Token 248: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.006408516317605972
    2. '-' → logprob: -5.13140869140625
    3. ' +' → logprob: -7.88140869140625
    4. '+' → logprob: -9.25640869140625
    5. ' ' → logprob: -12.75640869140625
    6. '-b' → logprob: -13.25640869140625
    7. ')' → logprob: -14.00640869140625
    8. '```' → logprob: -15.25640869140625
    9. ' ' → logprob: -16.25640869140625
    10. '-t' → logprob: -16.63140869140625

Token 249: ' discrimin' (ID: 50254)
  Prédit: 'dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dis' → logprob: -0.039046742022037506
    2. 'b' → logprob: -3.2890467643737793
    3. '-dis' → logprob: -7.789046764373779
    4. ' discrimin' → logprob: -8.039046287536621
    5. '(' → logprob: -8.539046287536621
    6. '(dis' → logprob: -9.914046287536621
    7. '2' → logprob: -11.414046287536621
    8. ' b' → logprob: -12.414046287536621
    9. '-b' → logprob: -12.914046287536621
    10. '4' → logprob: -13.664046287536621

Token 250: 'ant' (ID: 493)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.5623956322669983
    2. 'ant' → logprob: -0.9373956322669983
    3. 'crimin' → logprob: -3.3123955726623535
    4. 'sqrt' → logprob: -7.5623955726623535
    5. 't' → logprob: -7.6873955726623535
    6. 'ificant' → logprob: -8.437396049499512
    7. 'ermin' → logprob: -9.062396049499512
    8. 's' → logprob: -9.187396049499512
    9. 'antic' → logprob: -9.812396049499512
    10. 'stant' → logprob: -9.812396049499512

Token 251: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -9.805981972021982e-05
    2. 's' → logprob: -9.62509822845459
    3. 'sqrt' → logprob: -10.37509822845459
    4. 'dis' → logprob: -15.62509822845459
    5. '_dis' → logprob: -16.125097274780273
    6. '_' → logprob: -16.125097274780273
    7. 'import' → logprob: -16.375097274780273
    8. '-' → logprob: -16.875097274780273
    9. 'a' → logprob: -17.000097274780273
    10. 't' → logprob: -17.875097274780273

Token 252: 'qrt' (ID: 17629)
  Prédit: 'qrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qrt' → logprob: -0.0005488642491400242
    2. 'q' → logprob: -8.00054931640625
    3. 'sqrt' → logprob: -8.50054931640625
    4. 'qt' → logprob: -12.62554931640625
    5. 'qr' → logprob: -12.62554931640625
    6. 'qual' → logprob: -14.00054931640625
    7. 'qu' → logprob: -14.50054931640625
    8. 't' → logprob: -14.87554931640625
    9. 'quat' → logprob: -15.00054931640625
    10. 'c' → logprob: -15.75054931640625

Token 253: ')/(' (ID: 60504)
  Prédit: ')/('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')/(' → logprob: -1.4855663721391466e-05
    2. ')' → logprob: -11.375015258789062
    3. '/(' → logprob: -13.250015258789062
    4. ' )' → logprob: -13.750015258789062
    5. '```' → logprob: -16.250015258789062
    6. '(' → logprob: -16.250015258789062
    7. '   ' → logprob: -16.625015258789062
    8. ')/' → logprob: -16.750015258789062
    9. '))/(' → logprob: -17.250015258789062
    10. ' ' → logprob: -17.625015258789062

Token 254: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003392767102923244
    2. '(' → logprob: -8.00033950805664
    3. ' ' → logprob: -12.75033950805664
    4. '               ' → logprob: -14.00033950805664
    5. '   ' → logprob: -17.25033950805664
    6. ' (' → logprob: -17.50033950805664
    7. '                   ' → logprob: -17.50033950805664
    8. '           ' → logprob: -17.50033950805664
    9. '```' → logprob: -18.25033950805664
    10. ')' → logprob: -19.37533950805664

Token 255: '*a' (ID: 78448)
  Prédit: '*a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*a' → logprob: -0.015067843720316887
    2. 'a' → logprob: -4.265068054199219
    3. '*' → logprob: -7.015068054199219
    4. ' *' → logprob: -13.140068054199219
    5. ' a' → logprob: -13.390068054199219
    6. '```' → logprob: -14.515068054199219
    7. '*)' → logprob: -14.640068054199219
    8. ')a' → logprob: -14.640068054199219
    9. ')*' → logprob: -15.765068054199219
    10. '[a' → logprob: -15.890068054199219

Token 256: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008623439818620682
    2. ')
' → logprob: -4.7586236000061035
    3. '               ' → logprob: -12.633623123168945
    4. ')
' → logprob: -12.633623123168945
    5. '           ' → logprob: -14.383623123168945
    6. '       ' → logprob: -15.008623123168945
    7. ' )' → logprob: -15.008623123168945
    8. ')

' → logprob: -15.008623123168945
    9. '):
' → logprob: -15.008623123168945
    10. '),' → logprob: -16.133623123168945

Token 257: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5670415759086609
    2. '       ' → logprob: -0.9420415759086609
    3. '<|end|>' → logprob: -4.067041397094727
    4. '               ' → logprob: -4.192041397094727
    5. '
' → logprob: -5.442041397094727
    6. '        
' → logprob: -6.692041397094727
    7. '  
' → logprob: -6.817041397094727
    8. '            
' → logprob: -6.817041397094727
    9. '	       ' → logprob: -7.067041397094727
    10. ' 
' → logprob: -7.567041397094727

Token 258: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06378710269927979
    2. 'if' → logprob: -2.8137869834899902
    3. '               ' → logprob: -6.31378698348999
    4. '           ' → logprob: -12.813787460327148
    5. '       ' → logprob: -13.063787460327148
    6. '                ' → logprob: -13.813787460327148
    7. '   ' → logprob: -15.188787460327148
    8. ' ' → logprob: -15.688787460327148
    9. '	if' → logprob: -16.18878746032715
    10. '        ' → logprob: -16.43878746032715

Token 259: ' check' (ID: 2371)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004094073548913002
    2. ' if' → logprob: -5.504094123840332
    3. '               ' → logprob: -11.254094123840332
    4. 'i' → logprob: -14.129094123840332
    5. '                   ' → logprob: -14.129094123840332
    6. '           ' → logprob: -14.254094123840332
    7. 'If' → logprob: -15.879094123840332
    8. '                ' → logprob: -16.004093170166016
    9. ' ' → logprob: -16.504093170166016
    10. '   ' → logprob: -16.754093170166016

Token 260: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0790034681558609
    2. 'if' → logprob: -2.5790035724639893
    3. ' (' → logprob: -9.57900333404541
    4. ' ' → logprob: -10.45400333404541
    5. '(' → logprob: -11.20400333404541
    6. '0' → logprob: -14.32900333404541
    7. ' ((' → logprob: -14.32900333404541
    8. '(if' → logprob: -14.82900333404541
    9. '((' → logprob: -15.57900333404541
    10. '   ' → logprob: -16.579004287719727

Token 261: ' any' (ID: 1062)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09921284765005112
    2. ' (' → logprob: -2.474212884902954
    3. '0' → logprob: -4.974212646484375
    4. ' ' → logprob: -5.974212646484375
    5. '(t' → logprob: -7.224212646484375
    6. '((' → logprob: -10.974212646484375
    7. '(s' → logprob: -12.224212646484375
    8. '(max' → logprob: -12.849212646484375
    9. '   ' → logprob: -13.099212646484375
    10. '(not' → logprob: -13.349212646484375

Token 262: ' intersection' (ID: 42002)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9421167969703674
    2. '0' → logprob: -1.1921167373657227
    3. '(' → logprob: -1.8171167373657227
    4. ' (' → logprob: -1.9421167373657227
    5. ' t' → logprob: -8.442116737365723
    6. '(t' → logprob: -8.567116737365723
    7. '((' → logprob: -8.817116737365723
    8. ' of' → logprob: -9.442116737365723
    9. 't' → logprob: -10.067116737365723
    10. ' ((' → logprob: -11.067116737365723

Token 263: ' point' (ID: 2438)
  Prédit: ' occurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' occurs' → logprob: -1.208212971687317
    2. 's' → logprob: -1.833212971687317
    3. ' >=' → logprob: -1.958212971687317
    4. ' if' → logprob: -2.4582128524780273
    5. ' between' → logprob: -2.7082128524780273
    6. '               ' → logprob: -2.7082128524780273
    7. ' <=' → logprob: -3.5832128524780273
    8. ' ' → logprob: -3.5832128524780273
    9. ' with' → logprob: -3.9582128524780273
    10. '                   ' → logprob: -3.9582128524780273

Token 264: ' lies' (ID: 24384)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5696141123771667
    2. ' if' → logprob: -2.1946141719818115
    3. ' ' → logprob: -2.5696141719818115
    4. 's' → logprob: -2.5696141719818115
    5. ' between' → logprob: -3.3196141719818115
    6. ' t' → logprob: -3.5696141719818115
    7. ' s' → logprob: -3.6946141719818115
    8. ' >=' → logprob: -3.8196141719818115
    9. ' has' → logprob: -4.694613933563232
    10. ' in' → logprob: -4.819613933563232

Token 265: ' on' (ID: 402)
  Prédit: ' between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' between' → logprob: -0.035435210913419724
    2. 'between' → logprob: -3.785435199737549
    3. ' within' → logprob: -4.660435199737549
    4. ' in' → logprob: -6.660435199737549
    5. 'within' → logprob: -7.535435199737549
    6. '0' → logprob: -8.035435676574707
    7. ' >=' → logprob: -8.535435676574707
    8. ' ' → logprob: -9.160435676574707
    9. 'in' → logprob: -9.410435676574707
    10. '>=' → logprob: -9.535435676574707

Token 266: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5034623742103577
    2. '0' → logprob: -1.628462314605713
    3. 'the' → logprob: -2.378462314605713
    4. ' ' → logprob: -2.753462314605713
    5. ' line' → logprob: -4.128462314605713
    6. '[' → logprob: -4.753462314605713
    7. ' segment' → logprob: -5.128462314605713
    8. ' [' → logprob: -5.628462314605713
    9. ' (' → logprob: -5.878462314605713
    10. 'segment' → logprob: -6.128462314605713

Token 267: ' segment' (ID: 14806)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.7531886696815491
    2. 'line' → logprob: -0.8781886696815491
    3. 'segment' → logprob: -2.6281886100769043
    4. ' segment' → logprob: -3.2531886100769043
    5. '[' → logprob: -6.378188610076904
    6. '[line' → logprob: -8.128189086914062
    7. '1' → logprob: -8.378189086914062
    8. ' [' → logprob: -8.503189086914062
    9. '0' → logprob: -8.878189086914062
    10. ' ' → logprob: -10.003189086914062

Token 268: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.34838107228279114
    2. ' and' → logprob: -1.4733810424804688
    3. '           ' → logprob: -3.3483810424804688
    4. ' if' → logprob: -3.8483810424804688
    5. ' or' → logprob: -5.348381042480469
    6. '<|end|>' → logprob: -6.348381042480469
    7. ',' → logprob: -7.723381042480469
    8. 'and' → logprob: -7.973381042480469
    9. '       ' → logprob: -8.098381042480469
    10. ':' → logprob: -9.223381042480469

Token 269: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5000190138816833
    2. ' ' → logprob: -1.0000190734863281
    3. ' if' → logprob: -4.250019073486328
    4. ' t' → logprob: -5.375019073486328
    5. ')' → logprob: -5.750019073486328
    6. '               ' → logprob: -6.875019073486328
    7. ' between' → logprob: -7.375019073486328
    8. 'if' → logprob: -7.875019073486328
    9. ' <=' → logprob: -7.875019073486328
    10. ' )' → logprob: -8.250019073486328

Token 270: '<=' (ID: 16672)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.10022803395986557
    2. '<=' → logprob: -2.3502280712127686
    3. ',' → logprob: -12.475228309631348
    4. ')' → logprob: -12.725228309631348
    5. ' ' → logprob: -12.850228309631348
    6. ' ≤' → logprob: -13.350228309631348
    7. '[' → logprob: -13.600228309631348
    8. '0' → logprob: -13.600228309631348
    9. ')<=' → logprob: -13.600228309631348
    10. '.' → logprob: -13.850228309631348

Token 271: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00861681904643774
    2. ' t' → logprob: -4.758616924285889
    3. '`t' → logprob: -13.75861644744873
    4. '1' → logprob: -14.25861644744873
    5. '	t' → logprob: -15.00861644744873
    6. ')t' → logprob: -15.75861644744873
    7. ' ' → logprob: -16.633617401123047
    8. ')' → logprob: -16.883617401123047
    9. '
' → logprob: -17.383617401123047
    10. '   ' → logprob: -17.633617401123047

Token 272: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.20571818947792053
    2. ' <=' → logprob: -1.7057181596755981
    3. '1' → logprob: -6.580718040466309
    4. ' and' → logprob: -6.705718040466309
    5. ')<=' → logprob: -7.080718040466309
    6. ')' → logprob: -7.955718040466309
    7. 'and' → logprob: -8.830718040466309
    8. '0' → logprob: -9.205718040466309
    9. '<|end|>' → logprob: -9.705718040466309
    10. ' ' → logprob: -9.955718040466309

Token 273: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '```' → logprob: -18.625030517578125
    4. '   ' → logprob: -18.875030517578125
    5. ')' → logprob: -19.125030517578125
    6. '2' → logprob: -19.875030517578125
    7. '`' → logprob: -19.875030517578125
    8. '  ' → logprob: -20.625030517578125
    9. '0' → logprob: -20.875030517578125
    10. ' ' → logprob: -21.687530517578125

Token 274: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39057186245918274
    2. ' and' → logprob: -1.3905718326568604
    3. '               ' → logprob: -2.8905718326568604
    4. '):' → logprob: -4.6405720710754395
    5. 'and' → logprob: -5.2655720710754395
    6. '           ' → logprob: -6.0155720710754395
    7. '):
' → logprob: -7.3905720710754395
    8. ' )' → logprob: -8.015571594238281
    9. ' or' → logprob: -8.015571594238281
    10. ' if' → logprob: -9.265571594238281

Token 275: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3579811453819275
    2. '           ' → logprob: -1.2329812049865723
    3. ' and' → logprob: -5.357981204986572
    4. '       ' → logprob: -5.982981204986572
    5. ' or' → logprob: -7.357981204986572
    6. ' if' → logprob: -7.357981204986572
    7. '<|end|>' → logprob: -7.732981204986572
    8. ',' → logprob: -9.357980728149414
    9. '                   ' → logprob: -9.732980728149414
    10. '   ' → logprob: -9.982980728149414

Token 276: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.04945864528417587
    2. 'if' (adapté à ' if') → logprob: -3.0494587421417236
    3. '               ' → logprob: -7.0494585037231445
    4. '                ' → logprob: -13.674458503723145
    5. '   ' → logprob: -14.549458503723145
    6. '           ' → logprob: -15.049458503723145
    7. '       ' → logprob: -15.174458503723145
    8. ' ' → logprob: -15.174458503723145
    9. '	if' → logprob: -15.924458503723145
    10. 'If' → logprob: -16.17445945739746

Token 277: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.48856937885284424
    2. ' (' → logprob: -1.3635693788528442
    3. '0' → logprob: -2.1135692596435547
    4. '(' → logprob: -4.613569259643555
    5. '(t' → logprob: -10.988569259643555
    6. ' t' → logprob: -12.488569259643555
    7. '  ' → logprob: -13.488569259643555
    8. '   ' → logprob: -13.613569259643555
    9. ' (
' → logprob: -13.863569259643555
    10. '(
' → logprob: -13.988569259643555

Token 278: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0014549975749105215
    2. ' ' → logprob: -6.751454830169678
    3. 't' → logprob: -8.251455307006836
    4. ' t' → logprob: -10.751455307006836
    5. '(t' → logprob: -14.001455307006836
    6. '(' → logprob: -14.126455307006836
    7. ' (' → logprob: -14.751455307006836
    8. '   ' → logprob: -15.501455307006836
    9. ')' → logprob: -15.876455307006836
    10. '  ' → logprob: -17.126455307006836

Token 279: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.2521718442440033
    2. '<=' → logprob: -1.5021718740463257
    3. ')<=' → logprob: -8.752171516418457
    4. ')' → logprob: -9.502171516418457
    5. ' ' → logprob: -12.502171516418457
    6. '[' → logprob: -13.627171516418457
    7. '.' → logprob: -14.127171516418457
    8. '<|end|>' → logprob: -14.127171516418457
    9. '0' → logprob: -14.377171516418457
    10. ']<=' → logprob: -14.377171516418457

Token 280: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4179539382457733
    2. '=' → logprob: -1.2929539680480957
    3. ' t' → logprob: -2.7929539680480957
    4. '=t' → logprob: -5.167953968048096
    5. ' =' → logprob: -9.042953491210938
    6. '1' → logprob: -10.792953491210938
    7. ')' → logprob: -11.042953491210938
    8. ')t' → logprob: -11.042953491210938
    9. '=
' → logprob: -11.917953491210938
    10. ' ' → logprob: -12.042953491210938

Token 281: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14984802901744843
    2. '_' → logprob: -3.024847984313965
    3. '=' → logprob: -3.399847984313965
    4. '<|end|>' → logprob: -3.774847984313965
    5. '<=' → logprob: -4.149847984313965
    6. 't' → logprob: -4.899847984313965
    7. ')' → logprob: -5.149847984313965
    8. ' ' → logprob: -6.774847984313965
    9. ' t' → logprob: -6.899847984313965
    10. ' =' → logprob: -7.524847984313965

Token 282: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.46746423840522766
    2. ' <' → logprob: -1.5924642086029053
    3. ' and' → logprob: -1.9674642086029053
    4. ' <=' → logprob: -4.592464447021484
    5. 'and' → logprob: -4.842464447021484
    6. '<=' → logprob: -4.967464447021484
    7. ' ' → logprob: -6.217464447021484
    8. ')' → logprob: -6.467464447021484
    9. ' or' → logprob: -7.217464447021484
    10. '<|end|>' → logprob: -7.342464447021484

Token 283: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00045474470243789256
    2. '1' → logprob: -7.875454902648926
    3. ' ' → logprob: -9.625454902648926
    4. ' =' → logprob: -11.750454902648926
    5. '=
' → logprob: -14.625454902648926
    6. '=

' → logprob: -16.87545394897461
    7. '=}' → logprob: -17.00045394897461
    8. '=True' → logprob: -17.12545394897461
    9. ' or' → logprob: -17.87545394897461
    10. ')' → logprob: -18.00045394897461

Token 284: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269306242465973
    2. '1' → logprob: -2.1269307136535645
    3. ' ' → logprob: -13.626930236816406
    4. ' =' → logprob: -14.251930236816406
    5. '=
' → logprob: -15.001930236816406
    6. ')' → logprob: -16.251930236816406
    7. '0' → logprob: -17.501930236816406
    8. '=True' → logprob: -17.626930236816406
    9. '=}' → logprob: -17.751930236816406
    10. '=

' → logprob: -17.876930236816406

Token 285: ')' (ID: 8)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.12859231233596802
    2. ')' → logprob: -2.1285922527313232
    3. ' )' → logprob: -6.753592491149902
    4. 'or' → logprob: -7.628592491149902
    5. ' ' → logprob: -11.878592491149902
    6. '               ' → logprob: -13.878592491149902
    7. '            ' → logprob: -14.753592491149902
    8. ' and' → logprob: -15.003592491149902
    9. '	or' → logprob: -15.253592491149902
    10. '    ' → logprob: -15.753592491149902

Token 286: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.000205566844670102
    2. 'or' → logprob: -8.500205993652344
    3. ' ' → logprob: -13.750205993652344
    4. '	or' → logprob: -14.500205993652344
    5. ' and' → logprob: -15.375205993652344
    6. '               ' → logprob: -16.500205993652344
    7. ')' → logprob: -16.750205993652344
    8. '    ' → logprob: -17.625205993652344
    9. '                ' → logprob: -18.000205993652344
    10. '           ' → logprob: -18.000205993652344

Token 287: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.06196914613246918
    2. '(' → logprob: -2.811969041824341
    3. '0' → logprob: -13.686968803405762
    4. ' ' → logprob: -14.811968803405762
    5. '               ' → logprob: -17.061969757080078
    6. '                ' → logprob: -17.061969757080078
    7. '   ' → logprob: -18.436969757080078
    8. '                   ' → logprob: -18.561969757080078
    9. '    ' → logprob: -19.186969757080078
    10. '  ' → logprob: -19.186969757080078

Token 288: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002268851036205888
    2. ' ' → logprob: -6.1272687911987305
    3. '(' → logprob: -9.50226879119873
    4. ' (' → logprob: -11.62726879119873
    5. '   ' → logprob: -17.252269744873047
    6. '  ' → logprob: -17.377269744873047
    7. ')' → logprob: -17.502269744873047
    8. '<|end|>' → logprob: -18.377269744873047
    9. '۰' → logprob: -18.752269744873047
    10. ' ' → logprob: -18.814769744873047

Token 289: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1603005826473236
    2. '<' → logprob: -1.910300612449646
    3. ' ' → logprob: -9.535300254821777
    4. ' t' → logprob: -13.660300254821777
    5. '<t' → logprob: -14.535300254821777
    6. ')' → logprob: -14.910300254821777
    7. '   ' → logprob: -15.285300254821777
    8. '0' → logprob: -15.535300254821777
    9. '1' → logprob: -15.722800254821777
    10. 't' → logprob: -15.785300254821777

Token 290: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.251930296421051
    2. ' t' → logprob: -1.5019302368164062
    3. '`t' → logprob: -15.126930236816406
    4. ' ' → logprob: -15.501930236816406
    5. ')t' → logprob: -15.501930236816406
    6. '	t' → logprob: -15.626930236816406
    7. '_t' → logprob: -16.126930236816406
    8. '   ' → logprob: -16.126930236816406
    9. ')' → logprob: -17.001930236816406
    10. '           ' → logprob: -17.251930236816406

Token 291: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0087516784551553e-05
    2. '1' → logprob: -11.75001049041748
    3. ' ' → logprob: -13.87501049041748
    4. 't' → logprob: -14.50001049041748
    5. '_' → logprob: -14.75001049041748
    6. '```' → logprob: -16.250009536743164
    7. '   ' → logprob: -16.750009536743164
    8. ' t' → logprob: -17.250009536743164
    9. '<' → logprob: -18.062509536743164
    10. '₂' → logprob: -18.750009536743164

Token 292: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.25193706154823303
    2. '<' → logprob: -1.5019370317459106
    3. ')' → logprob: -12.126936912536621
    4. ' ' → logprob: -13.751936912536621
    5. ')<' → logprob: -14.251936912536621
    6. '[' → logprob: -15.001936912536621
    7. '1' → logprob: -15.251936912536621
    8. '<|end|>' → logprob: -16.501937866210938
    9. 'and' → logprob: -17.251937866210938
    10. '```' → logprob: -17.439437866210938

Token 293: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004620241466909647
    2. ' ' → logprob: -5.37962007522583
    3. ')' → logprob: -17.254619598388672
    4. '<|end|>' → logprob: -18.504619598388672
    5. '   ' → logprob: -18.879619598388672
    6. '0' → logprob: -19.129619598388672
    7. '```' → logprob: -19.504619598388672
    8. ' ' → logprob: -19.879619598388672
    9. '=' → logprob: -19.879619598388672
    10. '  ' → logprob: -20.129619598388672

Token 294: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014036978245712817
    2. ' ' → logprob: -8.875140190124512
    3. ')' → logprob: -14.875140190124512
    4. '   ' → logprob: -16.750141143798828
    5. '```' → logprob: -17.250141143798828
    6. '=' → logprob: -17.750141143798828
    7. '0' → logprob: -18.187641143798828
    8. '<|end|>' → logprob: -18.500141143798828
    9. '
' → logprob: -18.625141143798828
    10. '  ' → logprob: -18.937641143798828

Token 295: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003342878771945834
    2. '):
' → logprob: -5.753343105316162
    3. ')' → logprob: -9.253342628479004
    4. ':' → logprob: -9.878342628479004
    5. ' ):' → logprob: -11.128342628479004
    6. '):
' → logprob: -13.628342628479004
    7. '           ' → logprob: -14.253342628479004
    8. '):

' → logprob: -14.378342628479004
    9. '       ' → logprob: -15.503342628479004
    10. ' or' → logprob: -15.628342628479004

Token 296: '                   ' (ID: 699)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4390447437763214
    2. '               ' → logprob: -1.564044713973999
    3. '                   ' → logprob: -2.189044713973999
    4. ' safe' → logprob: -3.439044713973999
    5. 'safe' → logprob: -6.689044952392578
    6. '
' → logprob: -8.314044952392578
    7. '   ' → logprob: -8.564044952392578
    8. '            
' → logprob: -9.689044952392578
    9. '    
' → logprob: -10.314044952392578
    10. '                
' → logprob: -10.689044952392578

Token 297: ' safe' (ID: 7703)
  Prédit: 'safe'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'safe' (adapté à ' safe') → logprob: -0.1275242120027542
    2. ' safe' → logprob: -2.1275241374969482
    3. '               ' → logprob: -7.752524375915527
    4. '           ' → logprob: -9.002524375915527
    5. '   ' → logprob: -10.752524375915527
    6. '                   ' → logprob: -11.002524375915527
    7. '       ' → logprob: -13.252524375915527
    8. 'unsafe' → logprob: -14.127524375915527
    9. '_safe' → logprob: -14.502524375915527
    10. ' ' → logprob: -14.752524375915527

Token 298: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932497024536133
    2. ' =' → logprob: -0.6932497024536133
    3. '=False' → logprob: -9.193249702453613
    4. ' ==' → logprob: -15.693249702453613
    5. ' ' → logprob: -15.818249702453613
    6. '＝' → logprob: -15.818249702453613
    7. '==' → logprob: -15.943249702453613
    8. '=false' → logprob: -16.193248748779297
    9. '=True' → logprob: -17.443248748779297
    10. ' &=' → logprob: -18.068248748779297

Token 299: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0007099286303855479
    2. ' False' → logprob: -7.2507100105285645
    3. '=False' → logprob: -19.625709533691406
    4. '(False' → logprob: -20.500709533691406
    5. 'false' → logprob: -21.500709533691406
    6. '   ' → logprob: -22.000709533691406
    7. 'F' → logprob: -22.625709533691406
    8. '```' → logprob: -23.375709533691406
    9. '_false' → logprob: -23.750709533691406
    10. 'FALSE' → logprob: -24.500709533691406

Token 300: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0002692032721824944
    2. '           ' → logprob: -8.500268936157227
    3. '               ' → logprob: -10.500268936157227
    4. '       ' → logprob: -11.250268936157227
    5. '                       ' → logprob: -11.625268936157227
    6. '
' → logprob: -12.375268936157227
    7. '				' → logprob: -12.750268936157227
    8. '                    
' → logprob: -12.875268936157227
    9. '		           ' → logprob: -13.375268936157227
    10. '                  ' → logprob: -13.500268936157227

Token 301: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0008988389745354652
    2. '           ' → logprob: -7.375898838043213
    3. '       ' → logprob: -8.375899314880371
    4. '               ' → logprob: -10.375899314880371
    5. '                       ' → logprob: -12.625899314880371
    6. '				' → logprob: -13.125899314880371
    7. '		           ' → logprob: -13.125899314880371
    8. '   ' → logprob: -13.750899314880371
    9. '                  ' → logprob: -14.750899314880371
    10. 'break' → logprob: -15.000899314880371

Token 302: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.2111521065235138
    2. '                   ' → logprob: -2.4611520767211914
    3. ' break' → logprob: -2.4611520767211914
    4. '               ' → logprob: -3.9611520767211914
    5. '           ' → logprob: -7.586152076721191
    6. '                       ' → logprob: -9.711152076721191
    7. '	break' → logprob: -10.086152076721191
    8. '       ' → logprob: -11.086152076721191
    9. '   ' → logprob: -12.961152076721191
    10. '```' → logprob: -13.461152076721191

Token 303: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007372042746283114
    2. '   ' → logprob: -7.750737190246582
    3. '
' → logprob: -9.625737190246582
    4. '        
' → logprob: -9.625737190246582
    5. '	' → logprob: -9.875737190246582
    6. '           ' → logprob: -10.250737190246582
    7. ' if' → logprob: -11.000737190246582
    8. '            
' → logprob: -11.250737190246582
    9. '    
' → logprob: -11.625737190246582
    10. 'if' → logprob: -12.125737190246582

Token 304: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012509181164205074
    2. '
' → logprob: -4.637509346008301
    3. '        
' → logprob: -6.137509346008301
    4. '   ' → logprob: -8.2625093460083
    5. '    
' → logprob: -9.3875093460083
    6. '            
' → logprob: -9.5125093460083
    7. '```' → logprob: -10.2625093460083
    8. '           ' → logprob: -10.3875093460083
    9. '<|end|>' → logprob: -10.3875093460083
    10. '  
' → logprob: -11.0125093460083

Token 305: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03949433192610741
    2. '   ' → logprob: -3.789494276046753
    3. '
' → logprob: -4.289494514465332
    4. ' if' → logprob: -6.414494514465332
    5. '        
' → logprob: -8.039494514465332
    6. '    
' → logprob: -8.664494514465332
    7. 'if' (adapté à ' if') → logprob: -9.914494514465332
    8. '    ' → logprob: -10.289494514465332
    9. '```' → logprob: -10.539494514465332
    10. ' 
' → logprob: -10.664494514465332

Token 306: ' safe' (ID: 7703)
  Prédit: ' safe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' safe' → logprob: -0.018227091059088707
    2. 'safe' → logprob: -4.0182271003723145
    3. ' not' → logprob: -9.518226623535156
    4. ' ' → logprob: -14.018226623535156
    5. 'not' → logprob: -14.143226623535156
    6. 's' → logprob: -14.143226623535156
    7. ' ' → logprob: -14.393226623535156
    8. '"' → logprob: -14.768226623535156
    9. '_safe' → logprob: -16.018226623535156
    10. ' "' → logprob: -16.393226623535156

Token 307: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018151700496673584
    2. ':
' → logprob: -4.018151760101318
    3. 'print' → logprob: -14.01815128326416
    4. '==' → logprob: -14.76815128326416
    5. ':
' → logprob: -15.26815128326416
    6. ':

' → logprob: -16.018152236938477
    7. '=' → logprob: -16.518152236938477
    8. ' ==' → logprob: -17.518152236938477
    9. '           ' → logprob: -17.643152236938477
    10. '   ' → logprob: -17.893152236938477

Token 308: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0038557741791009903
    2. ' print' → logprob: -6.0038557052612305
    3. 'print' → logprob: -7.1288557052612305
    4. '       ' → logprob: -7.8788557052612305
    5. '
' → logprob: -9.37885570526123
    6. '               ' → logprob: -10.12885570526123
    7. '   ' → logprob: -10.25385570526123
    8. '	       ' → logprob: -11.50385570526123
    9. '            
' → logprob: -11.62885570526123
    10. '```' → logprob: -12.87885570526123

Token 309: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0010779452277347445
    2. ' print' → logprob: -7.001078128814697
    3. '   ' → logprob: -9.251077651977539
    4. '           ' → logprob: -9.751077651977539
    5. '       ' → logprob: -11.501077651977539
    6. '	print' → logprob: -14.376077651977539
    7. '               ' → logprob: -15.126077651977539
    8. 'Print' → logprob: -15.501077651977539
    9. '```' → logprob: -15.751077651977539
    10. '  ' → logprob: -16.00107765197754

Token 310: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.01399719063192606
    2. '(' → logprob: -4.3889970779418945
    3. '('' → logprob: -6.5139970779418945
    4. '"' → logprob: -13.763997077941895
    5. ' ("' → logprob: -13.763997077941895
    6. '(
' → logprob: -14.763997077941895
    7. '()' → logprob: -14.888997077941895
    8. '(("' → logprob: -16.26399803161621
    9. '(True' → logprob: -16.26399803161621
    10. '(":' → logprob: -16.26399803161621

Token 311: 'Danger' (ID: 142894)
  Prédit: 'yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yes' → logprob: -0.19455187022686005
    2. 'safe' → logprob: -2.319551944732666
    3. 'Yes' → logprob: -3.069551944732666
    4. 'YES' → logprob: -3.944551944732666
    5. 'visible' → logprob: -5.694551944732666
    6. 'Safe' → logprob: -5.819551944732666
    7. 'ok' → logprob: -6.694551944732666
    8. 'SAFE' → logprob: -6.694551944732666
    9. ' safe' → logprob: -7.069551944732666
    10. 'no' → logprob: -7.444551944732666

Token 312: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.06280206888914108
    2. 'ous' → logprob: -2.9378020763397217
    3. '!' → logprob: -5.937801837921143
    4. '!")' → logprob: -6.312801837921143
    5. '"' → logprob: -6.937801837921143
    6. ' safe' → logprob: -8.3128023147583
    7. ' ous' → logprob: -8.4378023147583
    8. ' zone' → logprob: -8.6878023147583
    9. '-Free' → logprob: -8.8128023147583
    10. ':' → logprob: -8.9378023147583

Token 313: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012115450808778405
    2. 'else' → logprob: -7.001211643218994
    3. ' else' → logprob: -8.376211166381836
    4. '<|end|>' → logprob: -9.876211166381836
    5. ')' → logprob: -11.751211166381836
    6. '   ' → logprob: -12.376211166381836
    7. '	' → logprob: -13.251211166381836
    8. '```' → logprob: -14.251211166381836
    9. '<|end|>' → logprob: -14.251211166381836
    10. '      ' → logprob: -14.501211166381836

Token 314: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32059165835380554
    2. 'else' (adapté à ' else') → logprob: -1.945591688156128
    3. ' else' → logprob: -2.070591688156128
    4. '   ' → logprob: -5.320591449737549
    5. '	else' → logprob: -9.195591926574707
    6. '    ' → logprob: -9.320591926574707
    7. '      ' → logprob: -9.820591926574707
    8. ' ' → logprob: -10.445591926574707
    9. '     ' → logprob: -10.945591926574707
    10. '        ' → logprob: -10.945591926574707

Token 315: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13947787880897522
    2. ':' → logprob: -2.5144779682159424
    3. ':
' → logprob: -3.0144779682159424
    4. '   ' → logprob: -10.264477729797363
    5. '          ' → logprob: -10.514477729797363
    6. ' print' → logprob: -10.514477729797363
    7. 'print' → logprob: -11.014477729797363
    8. '       ' → logprob: -11.014477729797363
    9. '"' → logprob: -11.389477729797363
    10. '               ' → logprob: -11.389477729797363

Token 316: '           ' (ID: 352)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.19677454233169556
    2. '           ' → logprob: -2.071774482727051
    3. 'print' → logprob: -2.946774482727051
    4. '       ' → logprob: -10.07177448272705
    5. '   ' → logprob: -10.32177448272705
    6. '	print' → logprob: -10.94677448272705
    7. '        ' → logprob: -11.07177448272705
    8. '            ' → logprob: -11.57177448272705
    9. '	       ' → logprob: -12.07177448272705
    10. '    ' → logprob: -12.07177448272705

Token 317: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.003644257318228483
    2. ' print' → logprob: -5.6286444664001465
    3. '           ' → logprob: -10.128643989562988
    4. '       ' → logprob: -13.128643989562988
    5. '	print' → logprob: -13.503643989562988
    6. '   ' → logprob: -14.128643989562988
    7. '.print' → logprob: -16.378644943237305
    8. ' ' → logprob: -17.378644943237305
    9. 'Print' → logprob: -17.503644943237305
    10. '```' → logprob: -17.503644943237305

Token 318: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0004315036640036851
    2. '(' → logprob: -7.750431537628174
    3. '"' → logprob: -14.500431060791016
    4. '(
' → logprob: -16.375431060791016
    5. ' ("' → logprob: -16.500431060791016
    6. '('' → logprob: -17.125431060791016
    7. '("")' → logprob: -18.375431060791016
    8. '("("' → logprob: -18.875431060791016
    9. '()' → logprob: -19.000431060791016
    10. '(":' → logprob: -19.375431060791016

Token 319: 'Safe' (ID: 27580)
  Prédit: 'Safe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Safe' → logprob: -0.00046963783097453415
    2. '"' → logprob: -8.375469207763672
    3. ' safe' → logprob: -8.875469207763672
    4. 'safe' → logprob: -9.750469207763672
    5. 'Unsafe' → logprob: -11.125469207763672
    6. 'Safety' → logprob: -11.250469207763672
    7. ' Safe' → logprob: -11.750469207763672
    8. 'Silent' → logprob: -14.125469207763672
    9. 'Yes' → logprob: -14.500469207763672
    10. 'Ok' → logprob: -14.500469207763672

Token 320: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.002530118217691779
    2. ')' → logprob: -6.002530097961426
    3. ' ")' → logprob: -10.127530097961426
    4. ')")' → logprob: -11.377530097961426
    5. '")
' → logprob: -13.627530097961426
    6. '')' → logprob: -14.752530097961426
    7. '"' → logprob: -14.752530097961426
    8. '}")' → logprob: -15.502530097961426
    9. ' )' → logprob: -15.502530097961426
    10. '!")' → logprob: -15.627530097961426


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 318
Tokens correctement prédits (1ère position, stricte): 162
Tokens correctement prédits (1ère position, avec adaptation): 171
Tokens correctement prédits (top 10): 273
Précision stricte (1ère position): 50.94%
Précision adaptée (1ère position): 53.77%
Précision (top 10): 85.85%
================================================================================
