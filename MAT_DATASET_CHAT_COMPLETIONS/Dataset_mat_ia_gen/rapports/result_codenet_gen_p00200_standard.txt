================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:26:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import heapq

input = sys.stdin.readline

while True:
    n, m = map(int, input().split())
    if n == 0 and m == 0:
        break

    graph_cost = [[] for _ in range(m+1)]
    graph_time = [[] for _ in range(m+1)]

    for _ in range(n):
        a, b, c, t = map(int, input().split())
        graph_cost[a].append((b, c))
        graph_cost[b].append((a, c))
        graph_time[a].append((b, t))
        graph_time[b].append((a, t))

    k = int(input())
    for _ in range(k):
        p, q, r = map(int, input().split())
        if r == 0:
            dist = [float('inf')] * (m+1)
            dist[p] = 0
            heap = [(0, p)]
            while heap:
                cost, node = heapq.heappop(heap)
                if dist[node] < cost:
                    continue
                if node == q:
                    print(cost)
                    break
                for nxt, c in graph_cost[node]:
                    new_cost = cost + c
                    if dist[nxt] > new_cost:
                        dist[nxt] = new_cost
                        heapq.heappush(heap, (new_cost, nxt))
        else:
            dist = [float('inf')] * (m+1)
            dist[p] = 0
            heap = [(0, p)]
            while heap:
                time_, node = heapq.heappop(heap)
                if dist[node] < time_:
                    continue
                if node == q:
                    print(time_)
                    break
                for nxt, t_ in graph_time[node]:
                    new_time = time_ + t_
                    if dist[nxt] > new_time:
                        dist[nxt] = new_time
                        heapq.heappush(heap, (new_time, nxt))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975938677787781
    2. '\n' → logprob: -0.8225938677787781
    3. '<|end|>' → logprob: -3.572593927383423
    4. '\' → logprob: -4.322593688964844
    5. 'newline' → logprob: -5.072593688964844
    6. 'import' → logprob: -5.322593688964844
    7. '<|end|>' → logprob: -5.947593688964844
    8. '```' → logprob: -6.572593688964844
    9. '' → logprob: -6.697593688964844
    10. '
' → logprob: -6.947593688964844

Token 4: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -7.755678961984813e-05
    2. 'os' → logprob: -9.500077247619629
    3. ' math' → logprob: -13.625077247619629
    4. ' re' → logprob: -14.500077247619629
    5. ' json' → logprob: -15.125077247619629
    6. '"os' → logprob: -15.375077247619629
    7. '_os' → logprob: -16.125078201293945
    8. ' io' → logprob: -16.375078201293945
    9. ' ' → logprob: -16.375078201293945
    10. '	os' → logprob: -17.000078201293945

Token 5: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.6405310816480778e-05
    2. '.' → logprob: -11.375016212463379
    3. '#' → logprob: -13.875016212463379
    4. '_' → logprob: -14.125016212463379
    5. '=' → logprob: -14.500016212463379
    6. 'ify' → logprob: -14.875016212463379
    7. 'queue' → logprob: -15.250016212463379
    8. 'u' → logprob: -15.375016212463379
    9. ')' → logprob: -15.625016212463379
    10. '[' → logprob: -15.625016212463379

Token 6: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8491789102554321
    2. '
' → logprob: -1.7241789102554321
    3. '\n' → logprob: -1.7241789102554321
    4. '

' → logprob: -2.7241787910461426
    5. '\' → logprob: -2.9741787910461426
    6. '<|end|>' → logprob: -3.5991787910461426
    7. 'import' → logprob: -3.7241787910461426
    8. '' → logprob: -4.224178791046143
    9. '```' → logprob: -4.224178791046143
    10. '<|end|>' → logprob: -5.224178791046143

Token 7: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06600640714168549
    2. '\' → logprob: -3.8160064220428467
    3. '
' → logprob: -4.191006183624268
    4. '\n' → logprob: -4.316006183624268
    5. 'def' → logprob: -5.566006183624268
    6. '' → logprob: -6.316006183624268
    7. '```' → logprob: -6.441006183624268
    8. '

' → logprob: -7.191006183624268
    9. '.
' → logprob: -7.316006183624268
    10. ',' → logprob: -7.316006183624268

Token 8: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.229478657245636
    2. '.' → logprob: -1.6044785976409912
    3. '=' → logprob: -6.10447883605957
    4. ')' → logprob: -7.10447883605957
    5. '```' → logprob: -8.35447883605957
    6. '()' → logprob: -8.72947883605957
    7. '(.)' → logprob: -9.22947883605957
    8. ' =' → logprob: -9.60447883605957
    9. '<|end|>' → logprob: -10.10447883605957
    10. '.readline' → logprob: -10.10447883605957

Token 9: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.3256465196609497
    2. ' sys' → logprob: -1.3256465196609497
    3. 'input' → logprob: -4.45064640045166
    4. ' input' → logprob: -7.45064640045166
    5. '	sys' → logprob: -10.32564640045166
    6. 'lambda' → logprob: -11.32564640045166
    7. '=sys' → logprob: -11.82564640045166
    8. ' lambda' → logprob: -13.20064640045166
    9. '```' → logprob: -14.07564640045166
    10. '(sys' → logprob: -14.32564640045166

Token 10: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3511665165424347
    2. '.stdin' → logprob: -1.2261664867401123
    3. '.readline' → logprob: -7.101166725158691
    4. '.stdout' → logprob: -7.226166725158691
    5. '.input' → logprob: -8.101166725158691
    6. ' .' → logprob: -8.226166725158691
    7. '.argv' → logprob: -8.726166725158691
    8. '.path' → logprob: -9.226166725158691
    9. '.std' → logprob: -9.976166725158691
    10. '.next' → logprob: -10.351166725158691

Token 11: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0023798076435923576
    2. '.read' → logprob: -6.127379894256592
    3. '.' → logprob: -8.627379417419434
    4. '.readlines' → logprob: -11.377379417419434
    5. 'read' → logprob: -12.752379417419434
    6. '.buffer' → logprob: -14.252379417419434
    7. '.Read' → logprob: -15.377379417419434
    8. ' readline' → logprob: -16.12738037109375
    9. '```' → logprob: -17.00238037109375
    10. '_read' → logprob: -17.75238037109375

Token 12: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4438509941101074
    2. '()' → logprob: -1.0688509941101074
    3. '(
' → logprob: -4.693850994110107
    4. '
' → logprob: -6.193850994110107
    5. '()
' → logprob: -6.318850994110107
    6. '()

' → logprob: -7.818850994110107
    7. '()\' → logprob: -7.818850994110107
    8. '\n' → logprob: -8.568851470947266
    9. 'def' → logprob: -8.693851470947266
    10. '

' → logprob: -8.943851470947266

Token 13: 'while' (ID: 7032)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5761905312538147
    2. 'def' → logprob: -0.8261905312538147
    3. 'class' → logprob: -8.951190948486328
    4. 'N' → logprob: -9.201190948486328
    5. 'from' → logprob: -12.076190948486328
    6. '\' → logprob: -12.201190948486328
    7. '```' → logprob: -13.326190948486328
    8. 'for' → logprob: -13.451190948486328
    9. 't' → logprob: -13.451190948486328
    10. '(n' → logprob: -13.576190948486328

Token 14: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006844787858426571
    2. ' True' → logprob: -5.756844997406006
    3. '  ' → logprob: -6.256844997406006
    4. ' (' → logprob: -7.256844997406006
    5. ' not' → logprob: -7.756844997406006
    6. ' )' → logprob: -8.756844520568848
    7. '(' → logprob: -8.881844520568848
    8. ' space' → logprob: -9.381844520568848
    9. ' ' → logprob: -10.256844520568848
    10. '    ' → logprob: -10.381844520568848

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007230373448692262
    2. '():' → logprob: -7.375722885131836
    3. ' :' → logprob: -9.875722885131836
    4. ':**' → logprob: -10.250722885131836
    5. '(:' → logprob: -13.125722885131836
    6. ':
' → logprob: -13.250722885131836
    7. '):' → logprob: -13.375722885131836
    8. ' ():' → logprob: -13.875722885131836
    9. ':return' → logprob: -14.750722885131836
    10. '(' → logprob: -14.875722885131836

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007296858821064234
    2. '    
' → logprob: -5.257297039031982
    3. '    ' → logprob: -6.757297039031982
    4. ' ' → logprob: -7.882297039031982
    5. ' 
' → logprob: -9.132296562194824
    6. '  
' → logprob: -9.757296562194824
    7. '```' → logprob: -10.007296562194824
    8. '     
' → logprob: -10.382296562194824
    9. '    
    
' → logprob: -10.507296562194824
    10. '(' → logprob: -10.507296562194824

Token 17: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.5528404712677002
    2. ' n' → logprob: -1.3028404712677002
    3. 'x' → logprob: -3.8028404712677
    4. 'num' → logprob: -3.8028404712677
    5. ' line' → logprob: -3.8028404712677
    6. '   ' → logprob: -4.052840232849121
    7. 'data' → logprob: -4.052840232849121
    8. ' num' → logprob: -4.552840232849121
    9. 'line' → logprob: -4.802840232849121
    10. ' data' → logprob: -5.302840232849121

Token 18: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18058139085769653
    2. '=' → logprob: -1.8055813312530518
    3. ' ==' → logprob: -7.805581569671631
    4. ' ' → logprob: -7.930581569671631
    5. ' >' → logprob: -10.930581092834473
    6. '>' → logprob: -11.555581092834473
    7. '=int' → logprob: -11.930581092834473
    8. '==' → logprob: -12.180581092834473
    9. '-' → logprob: -12.430581092834473
    10. ')' → logprob: -12.430581092834473

Token 19: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.18120504915714264
    2. ' m' → logprob: -1.8062050342559814
    3. 'k' → logprob: -7.9312052726745605
    4. ' =' → logprob: -8.306204795837402
    5. 'w' → logprob: -8.306204795837402
    6. '=' → logprob: -8.681204795837402
    7. ' ' → logprob: -8.931204795837402
    8. ' k' → logprob: -9.806204795837402
    9. '*' → logprob: -9.931204795837402
    10. '_' → logprob: -10.431204795837402

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038044244050979614
    2. '=' → logprob: -3.2880442142486572
    3. ',' → logprob: -13.538043975830078
    4. ' ' → logprob: -14.163043975830078
    5. ')' → logprob: -14.538043975830078
    6. '=input' → logprob: -16.038043975830078
    7. '    ' → logprob: -17.038043975830078
    8. ' =
' → logprob: -17.288043975830078
    9. '  ' → logprob: -17.413043975830078
    10. ' =",' → logprob: -17.788043975830078

Token 21: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.014328975230455399
    2. 'map' → logprob: -4.514328956604004
    3. ' input' → logprob: -5.764328956604004
    4. 'input' → logprob: -9.014328956604004
    5. ' ' → logprob: -11.389328956604004
    6. ' [' → logprob: -13.014328956604004
    7. '	map' → logprob: -14.514328956604004
    8. ' list' → logprob: -14.639328956604004
    9. '   ' → logprob: -15.014328956604004
    10. ' int' → logprob: -15.139328956604004

Token 22: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13757957518100739
    2. '(int' → logprob: -2.1375796794891357
    3. '(input' → logprob: -5.262579441070557
    4. '(str' → logprob: -5.762579441070557
    5. '(lambda' → logprob: -6.137579441070557
    6. '(eval' → logprob: -10.387579917907715
    7. '(
' → logprob: -11.512579917907715
    8. ' (' → logprob: -11.512579917907715
    9. '()' → logprob: -11.637579917907715
    10. '<|end|>' → logprob: -12.387579917907715

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020901646465063095
    2. ',input' → logprob: -3.895901679992676
    3. 'input' → logprob: -9.020901679992676
    4. '(' → logprob: -9.770901679992676
    5. ',int' → logprob: -9.770901679992676
    6. ' ,' → logprob: -9.895901679992676
    7. '(input' → logprob: -10.020901679992676
    8. ')' → logprob: -11.520901679992676
    9. '(),' → logprob: -12.645901679992676
    10. '```' → logprob: -12.770901679992676

Token 24: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6932904720306396
    2. ' input' → logprob: -0.6932904720306396
    3. ' sys' → logprob: -9.318290710449219
    4. 'sys' → logprob: -10.443290710449219
    5. ' ' → logprob: -11.068290710449219
    6. ')' → logprob: -12.318290710449219
    7. ',input' → logprob: -13.443290710449219
    8. '   ' → logprob: -14.693290710449219
    9. '=input' → logprob: -14.693290710449219
    10. '	input' → logprob: -14.943290710449219

Token 25: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.771655115589965e-05
    2. '()' → logprob: -11.000018119812012
    3. '())' → logprob: -14.625018119812012
    4. ' ().' → logprob: -14.750018119812012
    5. ')' → logprob: -16.375017166137695
    6. '()
' → logprob: -17.875017166137695
    7. '.' → logprob: -18.625017166137695
    8. '(' → logprob: -19.000017166137695
    9. '   ' → logprob: -19.125017166137695
    10. '()))' → logprob: -19.375017166137695

Token 26: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0033370524179190397
    2. 'strip' → logprob: -5.7533369064331055
    3. 'rstrip' → logprob: -8.753336906433105
    4. '(split' → logprob: -14.253336906433105
    5. ' split' → logprob: -15.003336906433105
    6. 'read' → logprob: -15.503336906433105
    7. 'spl' → logprob: -16.753337860107422
    8. ')' → logprob: -17.503337860107422
    9. 'rs' → logprob: -17.503337860107422
    10. '_split' → logprob: -17.753337860107422

Token 27: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003073260188102722
    2. '))' → logprob: -5.878073215484619
    3. '())' → logprob: -8.753073692321777
    4. '()' → logprob: -9.378073692321777
    5. ')
' → logprob: -11.128073692321777
    6. '),' → logprob: -12.253073692321777
    7. '(' → logprob: -13.503073692321777
    8. ')`' → logprob: -13.878073692321777
    9. '')' → logprob: -14.628073692321777
    10. '()))' → logprob: -14.628073692321777

Token 28: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 29: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7233083248138428
    2. '<|end|>' → logprob: -1.4733083248138428
    3. ' if' → logprob: -1.5983083248138428
    4. ' ' → logprob: -3.0983083248138428
    5. ' 
' → logprob: -4.348308563232422
    6. 'if' (adapté à ' if') → logprob: -4.348308563232422
    7. '\n' → logprob: -5.473308563232422
    8. '  ' → logprob: -6.098308563232422
    9. '    ' → logprob: -6.348308563232422
    10. '    
' → logprob: -6.723308563232422

Token 30: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.43031156063079834
    2. ' not' → logprob: -1.0553115606307983
    3. 'n' → logprob: -6.805311679840088
    4. 'not' → logprob: -7.680311679840088
    5. ' ' → logprob: -10.18031120300293
    6. ' ' → logprob: -14.80531120300293
    7. '	n' → logprob: -14.93031120300293
    8. '	not' → logprob: -15.05531120300293
    9. ' n't' → logprob: -15.55531120300293
    10. 'n't' → logprob: -15.93031120300293

Token 31: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04863210767507553
    2. '==' → logprob: -3.0486321449279785
    3. '=' → logprob: -11.04863166809082
    4. ')' → logprob: -11.54863166809082
    5. ' <=' → logprob: -12.17363166809082
    6. ' ' → logprob: -12.67363166809082
    7. ')==' → logprob: -13.17363166809082
    8. ' =' → logprob: -13.42363166809082
    9. ' ' → logprob: -13.54863166809082
    10. ' <' → logprob: -13.54863166809082

Token 32: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010341187007725239
    2. ' ' → logprob: -6.876034259796143
    3. '```' → logprob: -15.188533782958984
    4. '   ' → logprob: -15.563533782958984
    5. 'm' → logprob: -15.626033782958984
    6. '  ' → logprob: -15.938533782958984
    7. '۰' → logprob: -16.188533782958984
    8. '_' → logprob: -17.126033782958984
    9. '    ' → logprob: -17.188533782958984
    10. 'EOF' → logprob: -17.188533782958984

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001645644661039114
    2. ' ' → logprob: -8.750164985656738
    3. 'm' → logprob: -12.750164985656738
    4. '   ' → logprob: -14.750164985656738
    5. '```' → logprob: -15.000164985656738
    6. '  ' → logprob: -15.125164985656738
    7. 'and' → logprob: -15.187664985656738
    8. '۰' → logprob: -15.562664985656738
    9. '    ' → logprob: -16.062664031982422
    10. '-' → logprob: -16.125164031982422

Token 34: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.017036868259310722
    2. 'and' → logprob: -4.1420369148254395
    3. ':' → logprob: -7.7670369148254395
    4. '   ' → logprob: -8.142036437988281
    5. ' ' → logprob: -8.392036437988281
    6. '    ' → logprob: -10.642036437988281
    7. ' or' → logprob: -11.392036437988281
    8. '	and' → logprob: -11.642036437988281
    9. '  ' → logprob: -12.142036437988281
    10. ' ' → logprob: -13.017036437988281

Token 35: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.25193455815315247
    2. 'm' → logprob: -1.50193452835083
    3. ' ' → logprob: -13.001935005187988
    4. '   ' → logprob: -13.251935005187988
    5. '	m' → logprob: -14.126935005187988
    6. ' ' → logprob: -14.501935005187988
    7. '    ' → logprob: -16.001934051513672
    8. '  ' → logprob: -16.001934051513672
    9. '0' → logprob: -19.126934051513672
    10. '&m' → logprob: -19.376934051513672

Token 36: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04331807419657707
    2. '==' → logprob: -3.168318033218384
    3. '<|end|>' → logprob: -8.793317794799805
    4. ' ' → logprob: -9.918317794799805
    5. '=' → logprob: -10.543317794799805
    6. '<|end|>' → logprob: -10.793317794799805
    7. ' ' → logprob: -10.918317794799805
    8. ' =' → logprob: -11.293317794799805
    9. ')' → logprob: -11.543317794799805
    10. '0' → logprob: -11.918317794799805

Token 37: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2519315779209137
    2. ' ' → logprob: -1.5019315481185913
    3. ' ' → logprob: -13.001931190490723
    4. '  ' → logprob: -15.626931190490723
    5. '   ' → logprob: -16.62693214416504
    6. '	' → logprob: -17.87693214416504
    7. '​' → logprob: -18.50193214416504
    8. '۰' → logprob: -18.68943214416504
    9. '```' → logprob: -19.00193214416504
    10. '<|end|>' → logprob: -19.18943214416504

Token 38: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009114635176956654
    2. ' ' → logprob: -7.000911235809326
    3. '۰' → logprob: -17.500911712646484
    4. '  ' → logprob: -17.938411712646484
    5. '   ' → logprob: -18.000911712646484
    6. ' ' → logprob: -18.500911712646484
    7. '```' → logprob: -18.938411712646484
    8. '０' → logprob: -19.438411712646484
    9. '০' → logprob: -19.813411712646484
    10. '٠' → logprob: -20.000911712646484

Token 39: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017893016338348389
    2. '   ' → logprob: -7.001789093017578
    3. ':
' → logprob: -7.251789093017578
    4. '       ' → logprob: -8.751789093017578
    5. ' :' → logprob: -12.626789093017578
    6. '.' → logprob: -12.876789093017578
    7. ':return' → logprob: -13.501789093017578
    8. '):' → logprob: -13.751789093017578
    9. '	break' → logprob: -14.501789093017578
    10. ',' → logprob: -15.376789093017578

Token 40: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002950243651866913
    2. '   ' → logprob: -6.002950191497803
    3. ':' → logprob: -8.127950668334961
    4. '	' → logprob: -9.002950668334961
    5. ':
' → logprob: -11.002950668334961
    6. '	break' → logprob: -11.502950668334961
    7. '	   ' → logprob: -12.127950668334961
    8. '```' → logprob: -13.127950668334961
    9. '   ' → logprob: -13.252950668334961
    10. '<|end|>' → logprob: -13.252950668334961

Token 41: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.03361722454428673
    2. '   ' → logprob: -4.28361701965332
    3. 'break' (adapté à ' break') → logprob: -4.53361701965332
    4. '       ' → logprob: -4.78361701965332
    5. '	break' → logprob: -8.78361701965332
    6. '_break' → logprob: -13.53361701965332
    7. '```' → logprob: -13.65861701965332
    8. '           ' → logprob: -13.90861701965332
    9. '    ' → logprob: -14.65861701965332
    10. '-break' → logprob: -15.53361701965332

Token 42: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.625115692615509
    2. '   ' → logprob: -1.1251156330108643
    3. '    
' → logprob: -2.5001156330108643
    4. '\n' → logprob: -3.3751156330108643
    5. '```' → logprob: -4.625115871429443
    6. '  
' → logprob: -5.875115871429443
    7. '<|end|>' → logprob: -5.875115871429443
    8. ' 
' → logprob: -6.500115871429443
    9. ':' → logprob: -6.500115871429443
    10. '' → logprob: -6.750115871429443

Token 43: '   ' (ID: 271)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.02871791459619999
    2. '
' → logprob: -4.028717994689941
    3. '   ' → logprob: -5.278717994689941
    4. 'dist' → logprob: -6.278717994689941
    5. ' graph' → logprob: -6.653717994689941
    6. '    
' → logprob: -6.778717994689941
    7. 'distance' → logprob: -7.903717994689941
    8. 'edges' → logprob: -8.403717994689941
    9. 'adj' → logprob: -9.028717994689941
    10. '```' → logprob: -9.403717994689941

Token 44: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.01601336896419525
    2. ' graph' → logprob: -4.391013145446777
    3. '   ' → logprob: -6.516013145446777
    4. 'dist' → logprob: -7.516013145446777
    5. 'edges' → logprob: -7.516013145446777
    6. 'adj' → logprob: -8.141013145446777
    7. 'distance' → logprob: -9.016013145446777
    8. 'graphs' → logprob: -9.266013145446777
    9. 'parent' → logprob: -10.266013145446777
    10. 'nodes' → logprob: -10.641013145446777

Token 45: '_cost' (ID: 36820)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.055175065994262695
    2. '=' → logprob: -2.9301750659942627
    3. '[' → logprob: -8.180174827575684
    4. ' ' → logprob: -12.805174827575684
    5. ']' → logprob: -13.180174827575684
    6. '[]' → logprob: -13.305174827575684
    7. ')' → logprob: -13.930174827575684
    8. '   ' → logprob: -14.055174827575684
    9. '=[]' → logprob: -14.180174827575684
    10. ',' → logprob: -14.305174827575684

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0627506822347641
    2. '=' → logprob: -2.8127505779266357
    3. '[' → logprob: -7.312750816345215
    4. ',' → logprob: -10.062750816345215
    5. ' ' → logprob: -10.687750816345215
    6. 's' → logprob: -11.312750816345215
    7. ']' → logprob: -11.437750816345215
    8. '[]' → logprob: -12.312750816345215
    9. '   ' → logprob: -12.437750816345215
    10. ' =[' → logprob: -12.437750816345215

Token 47: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.177875816822052
    2. ' [' → logprob: -2.6778757572174072
    3. ' [[]' → logprob: -2.9278757572174072
    4. ' [{}' → logprob: -3.9278757572174072
    5. '{}' → logprob: -4.427875995635986
    6. '{' → logprob: -5.177875995635986
    7. ' {}' → logprob: -6.927875995635986
    8. ' {' → logprob: -6.927875995635986
    9. '[]' → logprob: -7.552875995635986
    10. '[[' → logprob: -7.802875995635986

Token 48: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11030923575162888
    2. 'for' → logprob: -2.61030912399292
    3. ')' → logprob: -3.98530912399292
    4. ']' → logprob: -4.98530912399292
    5. ',' → logprob: -5.23530912399292
    6. ')]' → logprob: -10.110309600830078
    7. ' ' → logprob: -10.360309600830078
    8. ' ]' → logprob: -10.860309600830078
    9. '	for' → logprob: -10.985309600830078
    10. '()' → logprob: -11.110309600830078

Token 49: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.008204021491110325
    2. ' _' → logprob: -4.883203983306885
    3. ' in' → logprob: -8.383204460144043
    4. '_range' → logprob: -8.633204460144043
    5. ' range' → logprob: -9.383204460144043
    6. 'range' → logprob: -9.633204460144043
    7. ' ' → logprob: -10.633204460144043
    8. '(range' → logprob: -12.383204460144043
    9. '_in' → logprob: -12.508204460144043
    10. 'in' → logprob: -12.508204460144043

Token 50: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4344417154788971
    2. 'in' → logprob: -1.0594416856765747
    3. 'range' → logprob: -5.184441566467285
    4. ' range' → logprob: -9.809441566467285
    5. 'n' → logprob: -10.434441566467285
    6. ' ' → logprob: -10.684441566467285
    7. '_' → logprob: -12.684441566467285
    8. '  ' → logprob: -12.684441566467285
    9. '   ' → logprob: -12.809441566467285
    10. '    ' → logprob: -13.934441566467285

Token 51: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10020871460437775
    2. ' range' → logprob: -2.3502087593078613
    3. '   ' → logprob: -13.725208282470703
    4. ' ' → logprob: -14.600208282470703
    5. '(range' → logprob: -15.225208282470703
    6. '	range' → logprob: -15.725208282470703
    7. '  ' → logprob: -17.100208282470703
    8. 'r' → logprob: -17.850208282470703
    9. ')' → logprob: -17.975208282470703
    10. 'rang' → logprob: -18.225208282470703

Token 52: '(m' (ID: 2145)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00017994173686020076
    2. '(' → logprob: -8.6251802444458
    3. ' (' → logprob: -15.1251802444458
    4. 'n' → logprob: -17.750179290771484
    5. '((' → logprob: -18.250179290771484
    6. '(nx' → logprob: -18.500179290771484
    7. ')n' → logprob: -18.750179290771484
    8. '(N' → logprob: -18.750179290771484
    9. '(nn' → logprob: -19.125179290771484
    10. '(
' → logprob: -19.875179290771484

Token 53: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.007978868670761585
    2. '+' → logprob: -5.007978916168213
    3. ' )' → logprob: -7.382978916168213
    4. ' +' → logprob: -7.507978916168213
    5. ')' → logprob: -9.632978439331055
    6. '+n' → logprob: -11.757978439331055
    7. ']' → logprob: -12.507978439331055
    8. ')]
' → logprob: -12.882978439331055
    9. ' ]' → logprob: -13.007978439331055
    10. 'n' → logprob: -13.007978439331055

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3276991844177246
    2. 'n' → logprob: -1.3276991844177246
    3. ' n' → logprob: -4.452699184417725
    4. ' ' → logprob: -6.202699184417725
    5. 'm' → logprob: -7.702699184417725
    6. '100' → logprob: -10.077699661254883
    7. '2' → logprob: -10.702699661254883
    8. '0' → logprob: -10.702699661254883
    9. ' m' → logprob: -10.702699661254883
    10. '   ' → logprob: -11.202699661254883

Token 55: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.03219428285956383
    2. ']' → logprob: -3.5321943759918213
    3. ')' → logprob: -6.032194137573242
    4. ' ]' → logprob: -10.657194137573242
    5. ' )' → logprob: -11.782194137573242
    6. '   ' → logprob: -12.907194137573242
    7. '])' → logprob: -13.532194137573242
    8. '>]' → logprob: -13.907194137573242
    9. ')]
' → logprob: -14.157194137573242
    10. ']
' → logprob: -14.407194137573242

Token 56: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.4346390962600708
    2. '   ' → logprob: -1.4346390962600708
    3. '<|end|>' → logprob: -1.4346390962600708
    4. 'for' → logprob: -1.5596390962600708
    5. ' for' → logprob: -2.8096389770507812
    6. 'graph' → logprob: -5.559638977050781
    7. 'n' → logprob: -5.559638977050781
    8. '    
' → logprob: -5.934638977050781
    9. '<|end|>' → logprob: -6.684638977050781
    10. '  
' → logprob: -7.059638977050781

Token 57: ' graph' (ID: 7465)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6822329163551331
    2. ' for' → logprob: -0.9322329163551331
    3. '   ' → logprob: -2.3072328567504883
    4. '	for' → logprob: -8.182232856750488
    5. ' ' → logprob: -8.307232856750488
    6. '    ' → logprob: -8.307232856750488
    7. '    
' → logprob: -9.182232856750488
    8. '  ' → logprob: -9.432232856750488
    9. '
' → logprob: -9.557232856750488
    10. ' 
' → logprob: -9.807232856750488

Token 58: '_time' (ID: 6425)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.02773410640656948
    2. ' =' → logprob: -4.152734279632568
    3. '=' → logprob: -5.402734279632568
    4. '_' → logprob: -5.527734279632568
    5. '_edges' → logprob: -7.152734279632568
    6. '_c' → logprob: -7.902734279632568
    7. '   ' → logprob: -7.902734279632568
    8. '_nodes' → logprob: -8.02773380279541
    9. 'cost' → logprob: -8.52773380279541
    10. '[' → logprob: -8.65273380279541

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07891688495874405
    2. '=' → logprob: -2.5789167881011963
    3. ' ' → logprob: -11.453916549682617
    4. '   ' → logprob: -11.953916549682617
    5. '=[]' → logprob: -12.453916549682617
    6. '[' → logprob: -12.828916549682617
    7. '=[' → logprob: -14.328916549682617
    8. '  ' → logprob: -14.453916549682617
    9. '[]' → logprob: -14.453916549682617
    10. '=[]
' → logprob: -14.828916549682617

Token 60: ' [[]' (ID: 182908)
  Prédit: ' [[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[]' → logprob: -0.08919015526771545
    2. '[' → logprob: -2.4641902446746826
    3. ' [' → logprob: -8.589190483093262
    4. '[]' → logprob: -10.464190483093262
    5. ' []' → logprob: -11.464190483093262
    6. ' ' → logprob: -12.339190483093262
    7. '   ' → logprob: -12.589190483093262
    8. ' [[' → logprob: -12.714190483093262
    9. '[[' → logprob: -12.839190483093262
    10. ' =' → logprob: -13.089190483093262

Token 61: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07899995148181915
    2. 'for' → logprob: -2.5789999961853027
    3. '[' → logprob: -9.578999519348145
    4. '	for' → logprob: -11.328999519348145
    5. ' [' → logprob: -11.453999519348145
    6. '   ' → logprob: -11.953999519348145
    7. '[m' → logprob: -12.453999519348145
    8. ')' → logprob: -12.953999519348145
    9. ' ' → logprob: -13.328999519348145
    10. '    ' → logprob: -14.078999519348145

Token 62: ' _' (ID: 1175)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.32695046067237854
    2. 'in' → logprob: -2.2019505500793457
    3. ' range' → logprob: -2.3269505500793457
    4. 'range' → logprob: -3.2019505500793457
    5. '(range' → logprob: -3.9519505500793457
    6. '_' → logprob: -5.451950550079346
    7. '_range' → logprob: -5.701950550079346
    8. ' _' → logprob: -6.201950550079346
    9. '_in' → logprob: -7.326950550079346
    10. ' (' → logprob: -8.701950073242188

Token 63: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014073476195335388
    2. ' range' → logprob: -4.764073371887207
    3. '(range' → logprob: -5.264073371887207
    4. 'in' → logprob: -9.139073371887207
    5. '(' → logprob: -9.389073371887207
    6. '_range' → logprob: -10.639073371887207
    7. '	range' → logprob: -10.889073371887207
    8. ' in' → logprob: -11.014073371887207
    9. 'ange' → logprob: -12.139073371887207
    10. '<|end|>' → logprob: -12.389073371887207

Token 64: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25203877687454224
    2. ' range' → logprob: -1.5020387172698975
    3. '(range' → logprob: -9.127038955688477
    4. '	range' → logprob: -14.627038955688477
    5. ' ' → logprob: -16.002038955688477
    6. '   ' → logprob: -16.627038955688477
    7. '```' → logprob: -16.877038955688477
    8. '(' → logprob: -17.127038955688477
    9. 'n' → logprob: -17.252038955688477
    10. '_range' → logprob: -17.252038955688477

Token 65: '(m' (ID: 2145)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0042330860160291195
    2. '(m' → logprob: -5.879232883453369
    3. '(' → logprob: -6.754232883453369
    4. ' (' → logprob: -8.379233360290527
    5. 'n' → logprob: -10.879233360290527
    6. ')' → logprob: -12.379233360290527
    7. '(N' → logprob: -13.629233360290527
    8. 'm' → logprob: -13.754233360290527
    9. '(s' → logprob: -13.879233360290527
    10. ' n' → logprob: -13.879233360290527

Token 66: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -7.064297824399546e-05
    2. ')' → logprob: -10.375070571899414
    3. ')]' → logprob: -10.750070571899414
    4. ' +' → logprob: -11.875070571899414
    5. '+
' → logprob: -12.125070571899414
    6. '+)' → logprob: -13.250070571899414
    7. ')+' → logprob: -13.625070571899414
    8. '+n' → logprob: -14.625070571899414
    9. '+m' → logprob: -15.250070571899414
    10. '+]' → logprob: -15.250070571899414

Token 67: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.6789137084269896e-05
    2. '(' → logprob: -10.50003719329834
    3. '   ' → logprob: -12.50003719329834
    4. '0' → logprob: -13.62503719329834
    5. ')' → logprob: -13.62503719329834
    6. '2' → logprob: -14.50003719329834
    7. ' ' → logprob: -14.62503719329834
    8. 'n' → logprob: -14.62503719329834
    9. '(n' → logprob: -14.87503719329834
    10. '```' → logprob: -15.12503719329834

Token 68: ')]

' (ID: 56882)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6100203990936279
    2. ')]' → logprob: -1.360020399093628
    3. ']' → logprob: -1.610020399093628
    4. '])' → logprob: -9.235020637512207
    5. ')])' → logprob: -12.360020637512207
    6. '   ' → logprob: -12.610020637512207
    7. '）' → logprob: -12.985020637512207
    8. ' ]' → logprob: -13.110020637512207
    9. ')
' → logprob: -13.485020637512207
    10. ' )' → logprob: -13.485020637512207

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0668567344546318
    2. ' for' → logprob: -3.566856622695923
    3. 'for' → logprob: -3.941856622695923
    4. '<|end|>' → logprob: -4.816856861114502
    5. '    
' → logprob: -5.941856861114502
    6. ' ' → logprob: -6.316856861114502
    7. '  ' → logprob: -6.816856861114502
    8. '    ' → logprob: -6.816856861114502
    9. '  
' → logprob: -7.191856861114502
    10. '	for' → logprob: -7.816856861114502

Token 70: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.68073970079422
    2. ' for' → logprob: -0.80573970079422
    3. '   ' → logprob: -3.180739641189575
    4. '    ' → logprob: -5.805739879608154
    5. ' ' → logprob: -6.930739879608154
    6. '	for' → logprob: -7.180739879608154
    7. ' 
' → logprob: -8.805739402770996
    8. '
' → logprob: -9.055739402770996
    9. '    
' → logprob: -9.305739402770996
    10. '\t' → logprob: -9.430739402770996

Token 71: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.002576251979917288
    2. '_' → logprob: -6.0025763511657715
    3. ' i' → logprob: -9.752575874328613
    4. ' ' → logprob: -10.627575874328613
    5. ' range' → logprob: -11.002575874328613
    6. ' ‌' → logprob: -14.502575874328613
    7. '_range' → logprob: -14.752575874328613
    8. '  ' → logprob: -15.752575874328613
    9. 'range' → logprob: -15.752575874328613
    10. ' ▁' → logprob: -16.25257682800293

Token 72: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12745212018489838
    2. 'in' → logprob: -2.1274521350860596
    3. ' ' → logprob: -7.7524518966674805
    4. '_' → logprob: -10.37745189666748
    5. '  ' → logprob: -11.12745189666748
    6. '<|end|>' → logprob: -11.12745189666748
    7. '```' → logprob: -11.87745189666748
    8. '	in' → logprob: -12.25245189666748
    9. 'range' → logprob: -12.62745189666748
    10. '(' → logprob: -13.12745189666748

Token 73: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006718809716403484
    2. ' range' → logprob: -5.006718635559082
    3. '	range' → logprob: -13.256718635559082
    4. '(range' → logprob: -13.881718635559082
    5. ' ' → logprob: -15.506718635559082
    6. 'ran' → logprob: -16.0067195892334
    7. 'rang' → logprob: -16.0067195892334
    8. 'in' → logprob: -16.5067195892334
    9. 'r' → logprob: -16.8817195892334
    10. '_range' → logprob: -17.0067195892334

Token 74: '(n' (ID: 2406)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.10245035588741302
    2. '(n' → logprob: -2.352450370788574
    3. '(' → logprob: -6.227450370788574
    4. ' (' → logprob: -8.352450370788574
    5. 'm' → logprob: -10.727450370788574
    6. ' m' → logprob: -12.102450370788574
    7. ' n' → logprob: -13.727450370788574
    8. 'n' → logprob: -14.602450370788574
    9. '(M' → logprob: -14.727450370788574
    10. '(s' → logprob: -14.852450370788574

Token 75: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005139950197190046
    2. ',' → logprob: -5.5051398277282715
    3. ':' → logprob: -7.6301398277282715
    4. '):
' → logprob: -8.13014030456543
    5. ' ):' → logprob: -8.75514030456543
    6. '():' → logprob: -10.13014030456543
    7. ')' → logprob: -10.38014030456543
    8. '   ' → logprob: -10.38014030456543
    9. '):
' → logprob: -12.38014030456543
    10. ' ,' → logprob: -12.88014030456543

Token 76: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05620404705405235
    2. '   ' → logprob: -3.556204080581665
    3. ',' → logprob: -4.181203842163086
    4. '<|end|>' → logprob: -5.056203842163086
    5. ' ' → logprob: -6.806203842163086
    6. '    ' → logprob: -6.931203842163086
    7. '```' → logprob: -8.056203842163086
    8. '	   ' → logprob: -8.056203842163086
    9. ':' → logprob: -8.306203842163086
    10. ')' → logprob: -8.556203842163086

Token 77: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.2597001791000366
    2. 'u' → logprob: -1.6347001791000366
    3. ' a' → logprob: -4.259700298309326
    4. ' u' → logprob: -4.759700298309326
    5. 's' → logprob: -5.009700298309326
    6. 'x' → logprob: -6.384700298309326
    7. ' s' → logprob: -8.259699821472168
    8. 'd' → logprob: -8.384699821472168
    9. 'f' → logprob: -8.509699821472168
    10. 'p' → logprob: -8.634699821472168

Token 78: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01126556470990181
    2. ' ,' → logprob: -4.511265754699707
    3. ',b' → logprob: -8.511265754699707
    4. ' b' → logprob: -11.636265754699707
    5. 'b' → logprob: -12.386265754699707
    6. ' ' → logprob: -13.636265754699707
    7. '=' → logprob: -14.386265754699707
    8. '<|end|>' → logprob: -15.136265754699707
    9. '_,' → logprob: -15.386265754699707
    10. ' =' → logprob: -15.761265754699707

Token 79: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.011329209432005882
    2. ' b' → logprob: -4.511329174041748
    3. '<|end|>' → logprob: -8.261329650878906
    4. 's' → logprob: -11.386329650878906
    5. ' ' → logprob: -11.761329650878906
    6. ',b' → logprob: -13.511329650878906
    7. ',' → logprob: -14.511329650878906
    8. '>b' → logprob: -15.386329650878906
    9. '<|end|>' → logprob: -15.386329650878906
    10. 'c' → logprob: -15.511329650878906

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025032442063093185
    2. ' ,' → logprob: -6.627503395080566
    3. '=' → logprob: -7.002503395080566
    4. ' =' → logprob: -8.252503395080566
    5. ',c' → logprob: -13.627503395080566
    6. ' ' → logprob: -13.877503395080566
    7. '   ' → logprob: -13.877503395080566
    8. '<|end|>' → logprob: -14.252503395080566
    9. '  ' → logprob: -14.502503395080566
    10. '```' → logprob: -15.127503395080566

Token 81: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.02340887114405632
    2. ' c' → logprob: -4.023408889770508
    3. 'cost' → logprob: -6.023408889770508
    4. 't' → logprob: -6.273408889770508
    5. ' t' → logprob: -8.148408889770508
    6. ' cost' → logprob: -8.773408889770508
    7. 'time' → logprob: -9.023408889770508
    8. 'l' → logprob: -9.648408889770508
    9. 'd' → logprob: -10.023408889770508
    10. ' ' → logprob: -10.210908889770508

Token 82: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13637010753154755
    2. ' =' → logprob: -2.6363701820373535
    3. '=' → logprob: -2.8863701820373535
    4. ' ,' → logprob: -9.511369705200195
    5. ')' → logprob: -13.886369705200195
    6. ' ' → logprob: -13.886369705200195
    7. '<|end|>' → logprob: -13.886369705200195
    8. '.' → logprob: -14.011369705200195
    9. '   ' → logprob: -14.636369705200195
    10. ',c' → logprob: -14.636369705200195

Token 83: ' t' (ID: 260)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.043998874723911285
    2. ' d' → logprob: -3.168998956680298
    3. 't' → logprob: -7.168998718261719
    4. 'time' → logprob: -9.043998718261719
    5. ' t' → logprob: -10.293998718261719
    6. '	d' → logprob: -10.543998718261719
    7. ' ' → logprob: -11.418998718261719
    8. '  ' → logprob: -12.043998718261719
    9. ' time' → logprob: -12.168998718261719
    10. 's' → logprob: -12.168998718261719

Token 84: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3133373558521271
    2. ' =' → logprob: -1.3133373260498047
    3. ',' → logprob: -10.438337326049805
    4. 'ime' → logprob: -10.938337326049805
    5. ' ' → logprob: -11.563337326049805
    6. ')' → logprob: -11.813337326049805
    7. 'oken' → logprob: -12.688337326049805
    8. 'c' → logprob: -13.563337326049805
    9. '=int' → logprob: -13.938337326049805
    10. 'okens' → logprob: -14.313337326049805

Token 85: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.01815415732562542
    2. 'map' → logprob: -4.018154144287109
    3. ' ' → logprob: -13.64315414428711
    4. '	map' → logprob: -13.89315414428711
    5. ' ' → logprob: -14.26815414428711
    6. '   ' → logprob: -14.64315414428711
    7. ' input' → logprob: -14.89315414428711
    8. ' list' → logprob: -15.14315414428711
    9. '    ' → logprob: -16.01815414428711
    10. '```' → logprob: -16.14315414428711

Token 86: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0005044196150265634
    2. '(' → logprob: -7.625504493713379
    3. '<int' → logprob: -12.000504493713379
    4. '(in' → logprob: -12.875504493713379
    5. '[int' → logprob: -13.250504493713379
    6. '=int' → logprob: -13.500504493713379
    7. ' (' → logprob: -14.000504493713379
    8. ']int' → logprob: -14.000504493713379
    9. ',int' → logprob: -14.250504493713379
    10. 'int' → logprob: -14.250504493713379

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07623359560966492
    2. ',input' → logprob: -2.8262336254119873
    3. '(' → logprob: -4.576233386993408
    4. '(input' → logprob: -6.076233386993408
    5. ')' → logprob: -6.701233386993408
    6. ',int' → logprob: -8.951233863830566
    7. ')(' → logprob: -9.951233863830566
    8. 'input' → logprob: -10.201233863830566
    9. ' ,' → logprob: -10.326233863830566
    10. '(),' → logprob: -10.826233863830566

Token 88: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3132624924182892
    2. ' input' → logprob: -1.3132624626159668
    3. '=input' → logprob: -15.313262939453125
    4. ',input' → logprob: -15.438262939453125
    5. '_input' → logprob: -16.063262939453125
    6. '	input' → logprob: -16.438262939453125
    7. ')' → logprob: -16.813262939453125
    8. '(input' → logprob: -17.438262939453125
    9. '<input' → logprob: -18.063262939453125
    10. '[input' → logprob: -18.063262939453125

Token 89: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.15441757265944e-05
    2. '()' → logprob: -10.375031471252441
    3. ')' → logprob: -16.375032424926758
    4. ' ().' → logprob: -16.625032424926758
    5. '())' → logprob: -16.750032424926758
    6. '.' → logprob: -17.125032424926758
    7. '(' → logprob: -17.125032424926758
    8. '()
' → logprob: -18.250032424926758
    9. '.split' → logprob: -19.000032424926758
    10. '().__' → logprob: -19.125032424926758

Token 90: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.8889261304575484e-06
    2. 'strip' → logprob: -12.750003814697266
    3. '(split' → logprob: -15.000003814697266
    4. 'rstrip' → logprob: -15.250003814697266
    5. ' split' → logprob: -15.625003814697266
    6. 'spl' → logprob: -15.625003814697266
    7. ')' → logprob: -15.875003814697266
    8. 'plit' → logprob: -17.375003814697266
    9. 's' → logprob: -18.500003814697266
    10. '.split' → logprob: -19.000003814697266

Token 91: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02270408906042576
    2. '())' → logprob: -4.272704124450684
    3. '()' → logprob: -4.772704124450684
    4. '(' → logprob: -10.772704124450684
    5. ')
' → logprob: -11.647704124450684
    6. ' )' → logprob: -12.272704124450684
    7. '))' → logprob: -12.397704124450684
    8. '())
' → logprob: -12.897704124450684
    9. '   ' → logprob: -13.272704124450684
    10. ')`' → logprob: -13.272704124450684

Token 92: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02913702465593815
    2. '<|end|>' → logprob: -4.154137134552002
    3. '   ' → logprob: -5.279137134552002
    4. '
' → logprob: -5.404137134552002
    5. '        
' → logprob: -6.904137134552002
    6. ')' → logprob: -6.904137134552002
    7. '    
' → logprob: -8.029136657714844
    8. ' 
' → logprob: -8.154136657714844
    9. '<|end|>' → logprob: -8.279136657714844
    10. '  
' → logprob: -8.654136657714844

Token 93: ' graph' (ID: 7465)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47158437967300415
    2. '   ' → logprob: -1.2215843200683594
    3. 'graph' (adapté à ' graph') → logprob: -3.5965843200683594
    4. '
' → logprob: -3.7215843200683594
    5. ' graph' → logprob: -3.9715843200683594
    6. '	graph' → logprob: -5.721584320068359
    7. ')' → logprob: -5.846584320068359
    8. '<|end|>' → logprob: -6.471584320068359
    9. '        
' → logprob: -7.221584320068359
    10. '```' → logprob: -7.971584320068359

Token 94: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -8.149051427608356e-05
    2. '_' → logprob: -10.000081062316895
    3. '_time' → logprob: -10.375081062316895
    4. '[_' → logprob: -13.750081062316895
    5. '_c' → logprob: -14.125081062316895
    6. '[' → logprob: -14.875081062316895
    7. '_cos' → logprob: -15.000081062316895
    8. '_co' → logprob: -15.125081062316895
    9. '[a' → logprob: -15.375081062316895
    10. '_a' → logprob: -15.375081062316895

Token 95: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0007486367831006646
    2. '[b' → logprob: -7.250748634338379
    3. '[' → logprob: -10.500748634338379
    4. '[c' → logprob: -11.625748634338379
    5. 'a' → logprob: -13.750748634338379
    6. ' [' → logprob: -14.875748634338379
    7. '   ' → logprob: -15.375748634338379
    8. '```' → logprob: -15.375748634338379
    9. ')[' → logprob: -17.250749588012695
    10. '[u' → logprob: -17.625749588012695

Token 96: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -7.624555291840807e-05
    2. ']' → logprob: -9.750076293945312
    3. ' ].' → logprob: -12.125076293945312
    4. ').' → logprob: -12.375076293945312
    5. '.append' → logprob: -12.625076293945312
    6. '   ' → logprob: -13.375076293945312
    7. '.' → logprob: -13.375076293945312
    8. '[' → logprob: -14.125076293945312
    9. '][' → logprob: -14.375076293945312
    10. ' ' → logprob: -15.125076293945312

Token 97: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -6.704273118884885e-07
    2. ' append' → logprob: -14.625000953674316
    3. '.append' → logprob: -15.625000953674316
    4. 'appen' → logprob: -17.75
    5. 'Append' → logprob: -18.0
    6. ' ' → logprob: -18.75
    7. 'app' → logprob: -18.875
    8. '	append' → logprob: -20.0
    9. 'push' → logprob: -20.5
    10. '_append' → logprob: -20.875

Token 98: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.33453771471977234
    2. '(' → logprob: -1.8345377445220947
    3. '(b' → logprob: -2.0845377445220947
    4. '(B' → logprob: -8.584537506103516
    5. ' (' → logprob: -9.584537506103516
    6. '(a' → logprob: -12.209537506103516
    7. '(s' → logprob: -12.334537506103516
    8. '(t' → logprob: -12.584537506103516
    9. '(True' → logprob: -13.834537506103516
    10. 'b' → logprob: -13.959537506103516

Token 99: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0006268949946388602
    2. ' b' → logprob: -7.375627040863037
    3. '   ' → logprob: -15.375626564025879
    4. ')b' → logprob: -16.625627517700195
    5. ' ' → logprob: -16.750627517700195
    6. '(b' → logprob: -17.625627517700195
    7. '<|end|>' → logprob: -17.750627517700195
    8. 'c' → logprob: -17.875627517700195
    9. '	b' → logprob: -18.000627517700195
    10. '
' → logprob: -18.500627517700195

Token 100: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006201040814630687
    2. ' ,' → logprob: -7.500619888305664
    3. ',c' → logprob: -9.625619888305664
    4. '‌,' → logprob: -15.000619888305664
    5. '),' → logprob: -15.250619888305664
    6. '`,' → logprob: -15.875619888305664
    7. 'c' → logprob: -16.250619888305664
    8. ',
' → logprob: -16.625619888305664
    9. '   ' → logprob: -16.750619888305664
    10. '',' → logprob: -17.000619888305664

Token 101: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03365122899413109
    2. ' c' → logprob: -3.408651113510132
    3. ')c' → logprob: -12.658651351928711
    4. ' ' → logprob: -13.408651351928711
    5. '	c' → logprob: -15.158651351928711
    6. '   ' → logprob: -15.783651351928711
    7. ')' → logprob: -16.53365135192871
    8. '  ' → logprob: -16.78365135192871
    9. '(c' → logprob: -16.90865135192871
    10. '    ' → logprob: -17.40865135192871

Token 102: '))
' (ID: 2210)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4749554693698883
    2. '))' → logprob: -0.9749554395675659
    3. ' ))' → logprob: -7.5999555587768555
    4. ' ,' → logprob: -8.224955558776855
    5. ')' → logprob: -10.224955558776855
    6. '))
' → logprob: -10.599955558776855
    7. ',t' → logprob: -11.224955558776855
    8. ',
' → logprob: -11.349955558776855
    9. '),' → logprob: -11.849955558776855
    10. ' ' → logprob: -12.724955558776855

Token 103: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19247788190841675
    2. '<|end|>' → logprob: -1.8174779415130615
    3. '   ' → logprob: -5.067477703094482
    4. '	' → logprob: -6.817477703094482
    5. '<|end|>' → logprob: -6.817477703094482
    6. '	graph' → logprob: -7.067477703094482
    7. '        
' → logprob: -7.442477703094482
    8. ')' → logprob: -7.567477703094482
    9. ' ' → logprob: -7.692477703094482
    10. '    ' → logprob: -7.817477703094482

Token 104: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.45036980509757996
    2. ' graph' → logprob: -1.3253698348999023
    3. '       ' → logprob: -2.4503698348999023
    4. '	graph' → logprob: -4.575369834899902
    5. '   ' → logprob: -8.700369834899902
    6. '	' → logprob: -9.575369834899902
    7. '(graph' → logprob: -9.825369834899902
    8. '
' → logprob: -11.700369834899902
    9. '.graph' → logprob: -11.950369834899902
    10. '_graph' → logprob: -11.950369834899902

Token 105: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.1602422147989273
    2. '_time' → logprob: -1.9102421998977661
    3. '_code' → logprob: -11.785242080688477
    4. ')_' → logprob: -12.660242080688477
    5. '_times' → logprob: -13.160242080688477
    6. '_' → logprob: -14.160242080688477
    7. '_tim' → logprob: -14.660242080688477
    8. '._' → logprob: -14.660242080688477
    9. 'cost' → logprob: -14.910242080688477
    10. ''_' → logprob: -15.035242080688477

Token 106: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.00011224505578866228
    2. '[a' → logprob: -9.250112533569336
    3. 'b' → logprob: -11.875112533569336
    4. '[' → logprob: -12.375112533569336
    5. '[c' → logprob: -13.250112533569336
    6. ')[' → logprob: -14.250112533569336
    7. '```' → logprob: -14.375112533569336
    8. '][' → logprob: -14.500112533569336
    9. ' [' → logprob: -15.125112533569336
    10. '}[' → logprob: -15.750112533569336

Token 107: '].' (ID: 1651)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.012973980978131294
    2. '].' → logprob: -4.887973785400391
    3. '.' → logprob: -5.762973785400391
    4. '.append' → logprob: -6.262973785400391
    5. ')' → logprob: -8.51297378540039
    6. ',' → logprob: -10.13797378540039
    7. '}.' → logprob: -10.63797378540039
    8. '   ' → logprob: -11.38797378540039
    9. ' ).' → logprob: -11.88797378540039
    10. '[' → logprob: -12.26297378540039

Token 108: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.7697225252486533e-06
    2. 'appen' → logprob: -13.250003814697266
    3. 'app' → logprob: -14.125003814697266
    4. ' append' → logprob: -14.125003814697266
    5. '.append' → logprob: -15.125003814697266
    6. '	append' → logprob: -15.500003814697266
    7. '```' → logprob: -18.125003814697266
    8. ' ' → logprob: -18.750003814697266
    9. 'appe' → logprob: -19.000003814697266
    10. 'Append' → logprob: -19.125003814697266

Token 109: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -7.791440293658525e-05
    2. ' (' → logprob: -10.125078201293945
    3. '(' → logprob: -10.750078201293945
    4. ' ((' → logprob: -11.375078201293945
    5. '(a' → logprob: -12.625078201293945
    6. '<|end|>' → logprob: -14.500078201293945
    7. '(b' → logprob: -14.750078201293945
    8. '(
' → logprob: -15.500078201293945
    9. ' ' → logprob: -15.875078201293945
    10. ')' → logprob: -17.250078201293945

Token 110: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.747814349073451e-05
    2. ' a' → logprob: -11.125017166137695
    3. '(a' → logprob: -13.125017166137695
    4. ',a' → logprob: -14.875017166137695
    5. ')a' → logprob: -15.750017166137695
    6. ',' → logprob: -16.875017166137695
    7. ')' → logprob: -17.875017166137695
    8. '(' → logprob: -17.875017166137695
    9. ' (' → logprob: -18.375017166137695
    10. '<|end|>' → logprob: -18.500017166137695

Token 111: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.729906196298543e-06
    2. ' ,' → logprob: -12.125009536743164
    3. ',c' → logprob: -12.500009536743164
    4. ',
' → logprob: -15.500009536743164
    5. ')' → logprob: -16.250009536743164
    6. ',

' → logprob: -16.250009536743164
    7. '‌,' → logprob: -16.375009536743164
    8. 'c' → logprob: -16.750009536743164
    9. '),' → logprob: -18.125009536743164
    10. '<|end|>' → logprob: -18.125009536743164

Token 112: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.38687387108802795
    2. 'c' → logprob: -1.1368738412857056
    3. ' ' → logprob: -13.386874198913574
    4. ' ' → logprob: -14.761874198913574
    5. '	c' → logprob: -15.386874198913574
    6. ')c' → logprob: -15.386874198913574
    7. '<|end|>' → logprob: -16.949373245239258
    8. '   ' → logprob: -16.949373245239258
    9. '  ' → logprob: -17.074373245239258
    10. '```' → logprob: -17.074373245239258

Token 113: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.003212649840861559
    2. '))
' → logprob: -6.3782124519348145
    3. ')' → logprob: -6.5032124519348145
    4. ')
' → logprob: -12.503212928771973
    5. '       ' → logprob: -12.753212928771973
    6. '))

' → logprob: -13.378212928771973
    7. ' ))' → logprob: -13.753212928771973
    8. '   ' → logprob: -14.503212928771973
    9. ')))' → logprob: -15.128212928771973
    10. '),' → logprob: -15.503212928771973

Token 114: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.968312951968983e-06
    2. '   ' → logprob: -12.375009536743164
    3. '	' → logprob: -13.000009536743164
    4. '<|end|>' → logprob: -14.125009536743164
    5. '	graph' → logprob: -14.375009536743164
    6. '
' → logprob: -14.750009536743164
    7. '        
' → logprob: -14.875009536743164
    8. '```' → logprob: -15.125009536743164
    9. 'graph' → logprob: -15.250009536743164
    10. ',' → logprob: -15.500009536743164

Token 115: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.6004442572593689
    2. '       ' → logprob: -0.8504442572593689
    3. ' graph' → logprob: -3.7254443168640137
    4. '	graph' → logprob: -9.350443840026855
    5. '   ' → logprob: -11.850443840026855
    6. '(graph' → logprob: -12.225443840026855
    7. '```' → logprob: -12.975443840026855
    8. 'graphql' → logprob: -14.350443840026855
    9. '	' → logprob: -14.600443840026855
    10. ' ' → logprob: -14.850443840026855

Token 116: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -2.816093228830141e-06
    2. '_t' → logprob: -13.62500286102295
    3. '_cost' → logprob: -13.75000286102295
    4. '_tim' → logprob: -15.50000286102295
    5. '_' → logprob: -16.250001907348633
    6. '_times' → logprob: -16.875001907348633
    7. '_code' → logprob: -17.875001907348633
    8. '_timeout' → logprob: -18.375001907348633
    9. ' _' → logprob: -18.500001907348633
    10. '_timer' → logprob: -18.750001907348633

Token 117: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.1637164789135568e-05
    2. '[b' → logprob: -11.625011444091797
    3. 'a' → logprob: -13.250011444091797
    4. '[' → logprob: -14.500011444091797
    5. '[t' → logprob: -15.875011444091797
    6. '[c' → logprob: -16.250011444091797
    7. ' [' → logprob: -16.625011444091797
    8. '```' → logprob: -17.125011444091797
    9. '   ' → logprob: -17.500011444091797
    10. '[u' → logprob: -18.250011444091797

Token 118: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.16268807649612427
    2. ').' → logprob: -2.1626880168914795
    3. '.append' → logprob: -3.4126880168914795
    4. '.' → logprob: -6.412688255310059
    5. ' .' → logprob: -8.537688255310059
    6. '[' → logprob: -8.537688255310059
    7. '}.' → logprob: -10.287688255310059
    8. '   ' → logprob: -10.662688255310059
    9. '.setdefault' → logprob: -10.662688255310059
    10. ' ].' → logprob: -11.662688255310059

Token 119: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -2.339278580620885e-06
    2. ' append' → logprob: -13.500001907348633
    3. 'appen' → logprob: -14.500001907348633
    4. '.append' → logprob: -15.375001907348633
    5. '	append' → logprob: -15.875001907348633
    6. '<|end|>' → logprob: -17.250001907348633
    7. ' ' → logprob: -17.625001907348633
    8. 'prepend' → logprob: -18.875001907348633
    9. '```' → logprob: -18.875001907348633
    10. 'add' → logprob: -18.875001907348633

Token 120: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0001848254178185016
    2. '(b' → logprob: -8.625185012817383
    3. '(' → logprob: -12.750185012817383
    4. ' (' → logprob: -13.750185012817383
    5. ' ((' → logprob: -14.375185012817383
    6. '<|end|>' → logprob: -15.125185012817383
    7. '[(' → logprob: -16.375185012817383
    8. '(B' → logprob: -16.750185012817383
    9. '(
' → logprob: -17.375185012817383
    10. '([' → logprob: -17.625185012817383

Token 121: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0040793512016534805
    2. '(b' → logprob: -5.504079341888428
    3. ')b' → logprob: -14.629079818725586
    4. ' b' → logprob: -14.879079818725586
    5. ' (' → logprob: -17.004079818725586
    6. ')' → logprob: -17.129079818725586
    7. ',b' → logprob: -17.754079818725586
    8. '(' → logprob: -17.754079818725586
    9. '<|end|>' → logprob: -17.754079818725586
    10. '[b' → logprob: -19.254079818725586

Token 122: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.522638169466518e-05
    2. ',t' → logprob: -11.250024795532227
    3. ' ,' → logprob: -11.375024795532227
    4. ',
' → logprob: -14.750024795532227
    5. ',

' → logprob: -16.625024795532227
    6. '‌,' → logprob: -17.250024795532227
    7. '`,' → logprob: -17.500024795532227
    8. ',c' → logprob: -17.500024795532227
    9. '),' → logprob: -17.625024795532227
    10. ')' → logprob: -18.000024795532227

Token 123: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.026300758123397827
    2. ' t' → logprob: -3.6513006687164307
    3. ' ' → logprob: -15.776300430297852
    4. ' ' → logprob: -15.901300430297852
    5. '`t' → logprob: -16.15130043029785
    6. ')t' → logprob: -16.52630043029785
    7. '	t' → logprob: -17.02630043029785
    8. ')' → logprob: -17.40130043029785
    9. '
' → logprob: -18.77630043029785
    10. '[t' → logprob: -18.77630043029785

Token 124: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.08990667760372162
    2. '))
' → logprob: -2.464906692504883
    3. ',' → logprob: -7.214906692504883
    4. ')' → logprob: -8.839906692504883
    5. ' ))' → logprob: -10.464906692504883
    6. '       ' → logprob: -10.714906692504883
    7. '))

' → logprob: -11.589906692504883
    8. ' ))
' → logprob: -11.964906692504883
    9. ')
' → logprob: -12.214906692504883
    10. '),' → logprob: -12.714906692504883

Token 125: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1517960956552997e-05
    2. '<|end|>' → logprob: -12.375011444091797
    3. '   ' → logprob: -12.625011444091797
    4. 'graph' → logprob: -12.875011444091797
    5. '	graph' → logprob: -15.375011444091797
    6. '      ' → logprob: -15.500011444091797
    7. ' graph' → logprob: -15.750011444091797
    8. '     ' → logprob: -15.750011444091797
    9. '	' → logprob: -15.750011444091797
    10. '           ' → logprob: -16.000011444091797

Token 126: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.00407697819173336
    2. ' graph' → logprob: -5.629076957702637
    3. '       ' → logprob: -7.754076957702637
    4. '	graph' → logprob: -10.129076957702637
    5. '(graph' → logprob: -12.004076957702637
    6. '   ' → logprob: -14.004076957702637
    7. 'graphql' → logprob: -15.254076957702637
    8. '.graph' → logprob: -15.629076957702637
    9. '```' → logprob: -16.004077911376953
    10. '_graph' → logprob: -16.129077911376953

Token 127: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -9.2576454335358e-05
    2. '_cost' → logprob: -9.500092506408691
    3. '_' → logprob: -11.125092506408691
    4. '_code' → logprob: -13.750092506408691
    5. '_times' → logprob: -14.625092506408691
    6. '[' → logprob: -15.125092506408691
    7. ')_' → logprob: -15.125092506408691
    8. ' _' → logprob: -16.125093460083008
    9. '[_' → logprob: -16.125093460083008
    10. '._' → logprob: -16.375093460083008

Token 128: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -7.941850526549388e-06
    2. 'b' → logprob: -11.875007629394531
    3. '[a' → logprob: -14.375007629394531
    4. '[' → logprob: -15.000007629394531
    5. '```' → logprob: -18.25000762939453
    6. '[B' → logprob: -19.62500762939453
    7. '	b' → logprob: -19.75000762939453
    8. '[c' → logprob: -20.00000762939453
    9. '[s' → logprob: -20.12500762939453
    10. '.append' → logprob: -20.50000762939453

Token 129: '].' (ID: 1651)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.13450999557971954
    2. '.' → logprob: -2.259510040283203
    3. ').' → logprob: -3.884510040283203
    4. '].' → logprob: -7.384510040283203
    5. ' .' → logprob: -8.634510040283203
    6. '   ' → logprob: -9.884510040283203
    7. '       ' → logprob: -11.634510040283203
    8. ',' → logprob: -11.759510040283203
    9. ')' → logprob: -12.134510040283203
    10. '           ' → logprob: -12.634510040283203

Token 130: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.6240566083070007e-06
    2. '.append' → logprob: -14.375001907348633
    3. 'appen' → logprob: -14.500001907348633
    4. ' append' → logprob: -15.500001907348633
    5. '	append' → logprob: -15.625001907348633
    6. 'Append' → logprob: -18.000001907348633
    7. '```' → logprob: -18.750001907348633
    8. 'appe' → logprob: -18.875001907348633
    9. '_append' → logprob: -19.250001907348633
    10. 'prepend' → logprob: -19.625001907348633

Token 131: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -3.15441757265944e-05
    2. ' ((' → logprob: -10.875031471252441
    3. '(' → logprob: -12.000031471252441
    4. ' (' → logprob: -12.000031471252441
    5. ')((' → logprob: -16.375032424926758
    6. '(b' → logprob: -16.750032424926758
    7. '<|end|>' → logprob: -17.000032424926758
    8. '[(' → logprob: -17.125032424926758
    9. '(
' → logprob: -17.125032424926758
    10. '>((' → logprob: -17.375032424926758

Token 132: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0022093774750828743
    2. '(a' → logprob: -6.377209186553955
    3. ' a' → logprob: -8.252209663391113
    4. 't' → logprob: -9.252209663391113
    5. '(' → logprob: -9.252209663391113
    6. '(t' → logprob: -10.627209663391113
    7. ' (' → logprob: -11.127209663391113
    8. ')' → logprob: -11.752209663391113
    9. ')a' → logprob: -13.127209663391113
    10. '(
' → logprob: -13.252209663391113

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004446124075911939
    2. ',t' → logprob: -8.375444412231445
    3. ' ,' → logprob: -8.625444412231445
    4. '(' → logprob: -11.000444412231445
    5. '(t' → logprob: -11.125444412231445
    6. ' (' → logprob: -13.875444412231445
    7. ',(' → logprob: -14.500444412231445
    8. 't' → logprob: -14.500444412231445
    9. ',
' → logprob: -15.000444412231445
    10. '`,' → logprob: -15.250444412231445

Token 134: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3868741989135742
    2. ' t' → logprob: -1.1368741989135742
    3. ' ' → logprob: -13.886874198913574
    4. '	t' → logprob: -14.261874198913574
    5. ' ' → logprob: -14.761874198913574
    6. '`t' → logprob: -14.761874198913574
    7. ')t' → logprob: -14.886874198913574
    8. ')' → logprob: -15.511874198913574
    9. ' 
' → logprob: -16.13687515258789
    10. ',' → logprob: -17.01187515258789

Token 135: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014169970527291298
    2. '))' → logprob: -4.264170169830322
    3. ')
' → logprob: -12.139169692993164
    4. ' )' → logprob: -14.514169692993164
    5. ')))' → logprob: -15.389169692993164
    6. '))
' → logprob: -15.764169692993164
    7. ')}' → logprob: -16.389169692993164
    8. ')`' → logprob: -16.389169692993164
    9. ')

' → logprob: -16.764169692993164
    10. ')")' → logprob: -18.389169692993164

Token 136: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9729257225990295
    2. 'max' → logprob: -1.2229256629943848
    3. 'dist' → logprob: -1.7229256629943848
    4. 'time' → logprob: -2.7229256629943848
    5. '   ' → logprob: -3.5979256629943848
    6. 'def' → logprob: -3.9729256629943848
    7. 'import' → logprob: -4.972925662994385
    8. 'budget' → logprob: -4.972925662994385
    9. 'distance' → logprob: -5.347925662994385
    10. '
' → logprob: -5.597925662994385

Token 137: ' k' (ID: 372)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6030171513557434
    2. 'dp' → logprob: -1.8530170917510986
    3. 'limit' → logprob: -2.4780170917510986
    4. 'dist' → logprob: -2.8530170917510986
    5. 'k' (adapté à ' k') → logprob: -3.2280170917510986
    6. 'K' → logprob: -4.103017330169678
    7. 'INF' → logprob: -4.103017330169678
    8. 'time' → logprob: -4.228017330169678
    9. 'MAX' → logprob: -4.228017330169678
    10. 'def' → logprob: -4.353017330169678

Token 138: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03920884057879448
    2. '=' → logprob: -3.2892088890075684
    3. ',' → logprob: -6.789208889007568
    4. '=int' → logprob: -11.16420841217041
    5. 'eep' → logprob: -12.28920841217041
    6. '=max' → logprob: -12.53920841217041
    7. 'ey' → logprob: -13.16420841217041
    8. '=[]' → logprob: -13.41420841217041
    9. '```' → logprob: -13.41420841217041
    10. 'e' → logprob: -13.66420841217041

Token 139: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0028111785650253296
    2. ' int' → logprob: -5.877810955047607
    3. '[int' → logprob: -12.377811431884766
    4. 'float' → logprob: -14.377811431884766
    5. '   ' → logprob: -14.877811431884766
    6. 'm' → logprob: -15.127811431884766
    7. '(int' → logprob: -15.502811431884766
    8. '  ' → logprob: -15.752811431884766
    9. '<int' → logprob: -15.877811431884766
    10. 'input' → logprob: -16.377811431884766

Token 140: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0005647073267027736
    2. '(' → logprob: -7.5005645751953125
    3. 'input' → logprob: -11.375564575195312
    4. ' (' → logprob: -16.500564575195312
    5. ' input' → logprob: -16.625564575195312
    6. '(in' → logprob: -16.875564575195312
    7. '()' → logprob: -17.000564575195312
    8. '(
' → logprob: -18.000564575195312
    9. '(inp' → logprob: -18.000564575195312
    10. '=input' → logprob: -18.250564575195312

Token 141: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.28168123960494995
    2. '()' → logprob: -1.5316812992095947
    3. ')' → logprob: -3.5316812992095947
    4. '().' → logprob: -10.406681060791016
    5. '(' → logprob: -10.906681060791016
    6. ' ())' → logprob: -12.406681060791016
    7. '())
' → logprob: -13.156681060791016
    8. '()
' → logprob: -13.281681060791016
    9. '();)' → logprob: -14.406681060791016
    10. '(),' → logprob: -15.656681060791016

Token 142: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12792006134986877
    2. '   ' → logprob: -2.877920150756836
    3. 'dist' → logprob: -3.502920150756836
    4. 'dp' → logprob: -4.252920150756836
    5. '    
' → logprob: -4.377920150756836
    6. 'distance' → logprob: -5.502920150756836
    7. ' dist' → logprob: -7.252920150756836
    8. 'cost' → logprob: -7.877920150756836
    9. ' 
' → logprob: -8.002920150756836
    10. '  
' → logprob: -8.502920150756836

Token 143: ' for' (ID: 395)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5610085725784302
    2. 'dp' → logprob: -1.0610085725784302
    3. 'distance' → logprob: -2.9360084533691406
    4. '
' → logprob: -4.686008453369141
    5. '   ' → logprob: -5.061008453369141
    6. 'visited' → logprob: -5.936008453369141
    7. ' dist' → logprob: -6.436008453369141
    8. 'times' → logprob: -6.561008453369141
    9. 'cost' → logprob: -6.561008453369141
    10. '    
' → logprob: -6.686008453369141

Token 144: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22569166123867035
    2. ' _' → logprob: -1.6006916761398315
    3. '_i' → logprob: -8.725691795349121
    4. ' i' → logprob: -10.225691795349121
    5. '_start' → logprob: -11.100691795349121
    6. '_k' → logprob: -11.350691795349121
    7. '_j' → logprob: -11.725691795349121
    8. '_query' → logprob: -11.975691795349121
    9. '_time' → logprob: -12.475691795349121
    10. '_cost' → logprob: -12.475691795349121

Token 145: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4745771586894989
    2. ' in' → logprob: -0.9745771884918213
    3. '_' → logprob: -8.099576950073242
    4. ' ' → logprob: -9.474576950073242
    5. 'k' → logprob: -10.224576950073242
    6. '<|end|>' → logprob: -10.849576950073242
    7. ' _' → logprob: -11.474576950073242
    8. 'n' → logprob: -11.849576950073242
    9. ' k' → logprob: -12.099576950073242
    10. '	in' → logprob: -12.099576950073242

Token 146: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006725317798554897
    2. ' range' → logprob: -5.006725311279297
    3. '(range' → logprob: -11.631725311279297
    4. '	range' → logprob: -14.756725311279297
    5. ' ' → logprob: -15.256725311279297
    6. 'k' → logprob: -16.256725311279297
    7. 'ange' → logprob: -16.506725311279297
    8. ')' → logprob: -16.756725311279297
    9. 'ran' → logprob: -16.756725311279297
    10. 'rang' → logprob: -17.131725311279297

Token 147: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.0024869535118341446
    2. '(' → logprob: -6.1274871826171875
    3. ' (' → logprob: -8.127487182617188
    4. ' k' → logprob: -12.252487182617188
    5. 'k' → logprob: -13.752487182617188
    6. '(n' → logprob: -15.377487182617188
    7. ' ' → logprob: -16.377487182617188
    8. '<|end|>' → logprob: -16.502487182617188
    9. '	k' → logprob: -16.502487182617188
    10. '(s' → logprob: -16.627487182617188

Token 148: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.019610900431871414
    2. ':' → logprob: -4.01961088180542
    3. '):
' → logprob: -7.64461088180542
    4. ',' → logprob: -7.64461088180542
    5. ')' → logprob: -8.144611358642578
    6. ' ):' → logprob: -9.394611358642578
    7. '   ' → logprob: -9.394611358642578
    8. '():' → logprob: -10.519611358642578
    9. ' :' → logprob: -12.394611358642578
    10. ']:' → logprob: -12.769611358642578

Token 149: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35764381289482117
    2. '       ' → logprob: -1.2326438426971436
    3. '<|end|>' → logprob: -5.7326436042785645
    4. '    
' → logprob: -7.3576436042785645
    5. '    ' → logprob: -7.4826436042785645
    6. '        
' → logprob: -7.6076436042785645
    7. 'start' → logprob: -7.7326436042785645
    8. ',' → logprob: -7.8576436042785645
    9. 'tokens' → logprob: -7.9826436042785645
    10. '	   ' → logprob: -8.107644081115723

Token 150: ' p' (ID: 275)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0213629007339478
    2. 'x' → logprob: -1.2713629007339478
    3. 'u' → logprob: -1.8963629007339478
    4. 'start' → logprob: -2.146362781524658
    5. 'a' → logprob: -3.646362781524658
    6. 'src' → logprob: -4.271362781524658
    7. 'q' → logprob: -4.771362781524658
    8. 'd' → logprob: -5.396362781524658
    9. 'p' (adapté à ' p') → logprob: -5.521362781524658
    10. 'source' → logprob: -5.646362781524658

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006736811250448227
    2. 'r' → logprob: -5.506736755371094
    3. ' ,' → logprob: -6.631736755371094
    4. 'a' → logprob: -7.506736755371094
    5. '1' → logprob: -8.131736755371094
    6. 'ath' → logprob: -9.756736755371094
    7. 'l' → logprob: -9.881736755371094
    8. 'ar' → logprob: -10.256736755371094
    9. ',a' → logprob: -10.256736755371094
    10. 'p' → logprob: -10.506736755371094

Token 152: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0015060516307130456
    2. 'd' → logprob: -7.8765058517456055
    3. 'x' → logprob: -8.251505851745605
    4. 's' → logprob: -8.376505851745605
    5. ' q' → logprob: -8.876505851745605
    6. 'r' → logprob: -9.001505851745605
    7. 'v' → logprob: -9.751505851745605
    8. 'l' → logprob: -9.751505851745605
    9. 'e' → logprob: -9.876505851745605
    10. 'w' → logprob: -10.126505851745605

Token 153: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6697795987129211
    2. ' =' → logprob: -1.2947795391082764
    3. ',' → logprob: -1.5447795391082764
    4. ' ,' → logprob: -7.1697797775268555
    5. ' ' → logprob: -10.419779777526855
    6. '   ' → logprob: -10.419779777526855
    7. ')' → logprob: -11.794779777526855
    8. '    ' → logprob: -12.044779777526855
    9. '  ' → logprob: -12.669779777526855
    10. '=input' → logprob: -13.357279777526855

Token 154: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.08770119398832321
    2. 's' → logprob: -3.2127010822296143
    3. 'l' → logprob: -4.087701320648193
    4. 'x' → logprob: -4.212701320648193
    5. 'limit' → logprob: -5.712701320648193
    6. 'w' → logprob: -6.587701320648193
    7. 'max' → logprob: -6.712701320648193
    8. 'v' → logprob: -7.337701320648193
    9. 'T' → logprob: -7.337701320648193
    10. 'L' → logprob: -7.462701320648193

Token 155: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4343571066856384
    2. ' =' → logprob: -1.0593571662902832
    3. ',' → logprob: -5.184357166290283
    4. ')' → logprob: -10.809356689453125
    5. ' ' → logprob: -11.434356689453125
    6. ' ,' → logprob: -12.934356689453125
    7. ')=' → logprob: -14.434356689453125
    8. '   ' → logprob: -14.996856689453125
    9. '  ' → logprob: -15.559356689453125
    10. 's' → logprob: -15.809356689453125

Token 156: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.04859213903546333
    2. 'map' → logprob: -3.0485920906066895
    3. '	map' → logprob: -13.673592567443848
    4. ' ' → logprob: -14.173592567443848
    5. '   ' → logprob: -14.548592567443848
    6. '(map' → logprob: -14.673592567443848
    7. ' input' → logprob: -14.798592567443848
    8. 'm' → logprob: -15.361092567443848
    9. 'input' → logprob: -15.548592567443848
    10. '  ' → logprob: -16.17359161376953

Token 157: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00020687808864749968
    2. 'int' → logprob: -8.75020694732666
    3. '=int' → logprob: -10.75020694732666
    4. '<int' → logprob: -11.50020694732666
    5. ',int' → logprob: -11.87520694732666
    6. '[int' → logprob: -12.25020694732666
    7. ']int' → logprob: -12.75020694732666
    8. '(' → logprob: -14.00020694732666
    9. ':int' → logprob: -15.12520694732666
    10. '```' → logprob: -15.37520694732666

Token 158: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022298118099570274
    2. '(int' → logprob: -4.397298336029053
    3. ',int' → logprob: -4.772298336029053
    4. '(' → logprob: -7.272298336029053
    5. 'int' → logprob: -7.897298336029053
    6. ',input' → logprob: -8.897297859191895
    7. ' ,' → logprob: -10.522297859191895
    8. '(input' → logprob: -11.397297859191895
    9. ')' → logprob: -11.397297859191895
    10. '(),' → logprob: -11.647297859191895

Token 159: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.029823511838912964
    2. ' input' → logprob: -3.5298235416412354
    3. 'int' → logprob: -9.529823303222656
    4. '(input' → logprob: -15.404823303222656
    5. ' int' → logprob: -16.404823303222656
    6. ',input' → logprob: -17.279823303222656
    7. '=input' → logprob: -17.279823303222656
    8. 'map' → logprob: -17.654823303222656
    9. '<input' → logprob: -17.654823303222656
    10. 'str' → logprob: -17.779823303222656

Token 160: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.9385402993066236e-05
    2. '()' → logprob: -10.875019073486328
    3. '.' → logprob: -16.000019073486328
    4. ' ().' → logprob: -16.250019073486328
    5. ')' → logprob: -17.000019073486328
    6. '(' → logprob: -17.250019073486328
    7. '().__' → logprob: -17.375019073486328
    8. '()
' → logprob: -18.625019073486328
    9. ').' → logprob: -19.000019073486328
    10. '.split' → logprob: -19.250019073486328

Token 161: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.0280383548888494e-06
    2. ' split' → logprob: -14.000000953674316
    3. 'spl' → logprob: -16.875001907348633
    4. '(split' → logprob: -17.125001907348633
    5. 'strip' → logprob: -18.500001907348633
    6. ')' → logprob: -18.875001907348633
    7. 'plit' → logprob: -19.125001907348633
    8. '.split' → logprob: -20.000001907348633
    9. 'skip' → logprob: -20.125001907348633
    10. 'rstrip' → logprob: -20.875001907348633

Token 162: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45121297240257263
    2. '())' → logprob: -1.076213002204895
    3. '()' → logprob: -3.8262128829956055
    4. '())
' → logprob: -7.9512128829956055
    5. ')
' → logprob: -9.326212882995605
    6. '()
' → logprob: -12.201212882995605
    7. ')`' → logprob: -12.701212882995605
    8. '();)' → logprob: -12.951212882995605
    9. '(' → logprob: -13.076212882995605
    10. ' ())' → logprob: -13.076212882995605

Token 163: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 164: ' if' (ID: 538)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.028448328375816345
    2. 'if' (adapté à ' if') → logprob: -5.153448104858398
    3. '   ' → logprob: -5.403448104858398
    4. 'graph' → logprob: -5.653448104858398
    5. '<|end|>' → logprob: -5.903448104858398
    6. 'pass' → logprob: -6.028448104858398
    7. '
' → logprob: -6.278448104858398
    8. 'for' → logprob: -6.653448104858398
    9. '```' → logprob: -6.903448104858398
    10. ' #' → logprob: -6.903448104858398

Token 165: ' r' (ID: 428)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.46261006593704224
    2. ' r' → logprob: -2.0876100063323975
    3. 'p' → logprob: -2.4626100063323975
    4. ' graph' → logprob: -2.5876100063323975
    5. 'r' → logprob: -3.0876100063323975
    6. ' q' → logprob: -4.587610244750977
    7. ' (' → logprob: -4.837610244750977
    8. 'graph' → logprob: -4.962610244750977
    9. 'q' → logprob: -5.587610244750977
    10. '(p' → logprob: -5.712610244750977

Token 166: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4804055392742157
    2. '==' → logprob: -0.9804055690765381
    3. ':' → logprob: -5.355405330657959
    4. ' <=' → logprob: -8.105405807495117
    5. '=' → logprob: -8.230405807495117
    6. '>' → logprob: -8.480405807495117
    7. ' >' → logprob: -8.605405807495117
    8. '<=' → logprob: -8.605405807495117
    9. ' >=' → logprob: -9.355405807495117
    10. ' <' → logprob: -9.605405807495117

Token 167: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.030054768547415733
    2. '1' → logprob: -3.530054807662964
    3. 'c' → logprob: -9.155055046081543
    4. ' ' → logprob: -9.655055046081543
    5. 'cost' → logprob: -10.155055046081543
    6. '2' → logprob: -10.405055046081543
    7. '-' → logprob: -10.405055046081543
    8. 'm' → logprob: -12.092555046081543
    9. 't' → logprob: -12.780055046081543
    10. '"' → logprob: -12.780055046081543

Token 168: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12747742235660553
    2. '1' → logprob: -2.1274774074554443
    3. 'c' → logprob: -8.127477645874023
    4. '2' → logprob: -9.377477645874023
    5. 'cost' → logprob: -9.877477645874023
    6. 't' → logprob: -10.627477645874023
    7. ''' → logprob: -10.877477645874023
    8. '"' → logprob: -11.252477645874023
    9. 'm' → logprob: -11.252477645874023
    10. '-' → logprob: -11.377477645874023

Token 169: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008627340197563171
    2. ':
' → logprob: -4.758627414703369
    3. '):' → logprob: -12.633626937866211
    4. ':

' → logprob: -12.883626937866211
    5. ' :' → logprob: -13.133626937866211
    6. ',' → logprob: -13.758626937866211
    7. ' and' → logprob: -13.883626937866211
    8. '       ' → logprob: -14.133626937866211
    9. '):
' → logprob: -14.383626937866211
    10. '<|end|>' → logprob: -14.508626937866211

Token 170: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08150459825992584
    2. '           ' → logprob: -2.7065045833587646
    3. 'print' → logprob: -5.581504821777344
    4. '#' → logprob: -5.706504821777344
    5. '<|end|>' → logprob: -6.956504821777344
    6. ' #' → logprob: -7.581504821777344
    7. '        
' → logprob: -7.956504821777344
    8. ' print' → logprob: -8.081504821777344
    9. '   ' → logprob: -8.206504821777344
    10. '
' → logprob: -8.206504821777344

Token 171: ' dist' (ID: 3601)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.6221882700920105
    2. 'def' → logprob: -1.2471883296966553
    3. 'queue' → logprob: -3.2471883296966553
    4. '#' → logprob: -3.2471883296966553
    5. 'dist' (adapté à ' dist') → logprob: -3.4971883296966553
    6. 'pq' → logprob: -3.9971883296966553
    7. ' heap' → logprob: -4.372188091278076
    8. '       ' → logprob: -4.872188091278076
    9. ' #' → logprob: -5.622188091278076
    10. 'graph' → logprob: -5.747188091278076

Token 172: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.059951797127723694
    2. '=' → logprob: -2.9349517822265625
    3. ',' → logprob: -5.3099517822265625
    4. ')' → logprob: -10.184951782226562
    5. 'cost' → logprob: -10.684951782226562
    6. 's' → logprob: -11.684951782226562
    7. '[' → logprob: -11.684951782226562
    8. '_cost' → logprob: -11.809951782226562
    9. '=[]' → logprob: -12.434951782226562
    10. ' ' → logprob: -12.559951782226562

Token 173: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005783023778349161
    2. '[m' → logprob: -6.1307830810546875
    3. '[int' → logprob: -6.7557830810546875
    4. '[min' → logprob: -7.5057830810546875
    5. '[n' → logprob: -7.6307830810546875
    6. '[p' → logprob: -8.255783081054688
    7. '[d' → logprob: -8.380783081054688
    8. '[node' → logprob: -8.380783081054688
    9. ' [' → logprob: -8.880783081054688
    10. '[c' → logprob: -9.505783081054688

Token 174: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0006018842686899006
    2. 'sys' → logprob: -8.500601768493652
    3. 'int' → logprob: -8.625601768493652
    4. '10' → logprob: -9.125601768493652
    5. ' float' → logprob: -9.500601768493652
    6. '1' → logprob: -11.625601768493652
    7. '   ' → logprob: -11.750601768493652
    8. '0' → logprob: -12.000601768493652
    9. '(float' → logprob: -12.375601768493652
    10. 'heap' → logprob: -13.250601768493652

Token 175: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.4855663721391466e-05
    2. ''in' → logprob: -12.000015258789062
    3. '(' → logprob: -12.250015258789062
    4. '("' → logprob: -12.750015258789062
    5. ''' → logprob: -14.250015258789062
    6. ''s' → logprob: -15.750015258789062
    7. 'inf' → logprob: -16.750015258789062
    8. '32' → logprob: -17.000015258789062
    9. '(in' → logprob: -17.125015258789062
    10. '('-' → logprob: -18.000015258789062

Token 176: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -5.200166469876422e-06
    2. ''' → logprob: -12.500004768371582
    3. 'in' → logprob: -13.875004768371582
    4. ''in' → logprob: -15.125004768371582
    5. '('' → logprob: -16.5000057220459
    6. '1' → logprob: -18.0000057220459
    7. '')' → logprob: -18.0000057220459
    8. ''s' → logprob: -18.5000057220459
    9. 'i' → logprob: -18.5000057220459
    10. 'INF' → logprob: -18.6250057220459

Token 177: '')]' (ID: 94377)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.02506057359278202
    2. ')' → logprob: -3.7750606536865234
    3. ']' → logprob: -6.650060653686523
    4. '')]' → logprob: -7.650060653686523
    5. ' )' → logprob: -10.650060653686523
    6. '']' → logprob: -11.775060653686523
    7. '),' → logprob: -12.900060653686523
    8. ' ' → logprob: -13.400060653686523
    9. ' ]' → logprob: -13.650060653686523
    10. ',' → logprob: -14.025060653686523

Token 178: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.059746213257312775
    2. ']' → logprob: -3.684746265411377
    3. 'for' → logprob: -4.184746265411377
    4. '<|end|>' → logprob: -4.309746265411377
    5. ']*' → logprob: -6.684746265411377
    6. ',' → logprob: -7.184746265411377
    7. ' ]' → logprob: -7.184746265411377
    8. ' ' → logprob: -8.059745788574219
    9. '	for' → logprob: -8.309745788574219
    10. ' *' → logprob: -8.309745788574219

Token 179: ' (' (ID: 350)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.00022535098833031952
    2. ' (' → logprob: -9.000225067138672
    3. '(M' → logprob: -9.500225067138672
    4. '   ' → logprob: -10.875225067138672
    5. '(' → logprob: -12.875225067138672
    6. '(len' → logprob: -13.375225067138672
    7. '(n' → logprob: -14.000225067138672
    8. '((' → logprob: -14.750225067138672
    9. '  ' → logprob: -15.000225067138672
    10. '       ' → logprob: -15.500225067138672

Token 180: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.16119547188282013
    2. '(m' → logprob: -1.9111955165863037
    3. ' m' → logprob: -7.536195278167725
    4. ' (' → logprob: -7.911195278167725
    5. '   ' → logprob: -10.161195755004883
    6. 'graph' → logprob: -11.786195755004883
    7. '[m' → logprob: -12.286195755004883
    8. '	m' → logprob: -12.286195755004883
    9. 'M' → logprob: -12.786195755004883
    10. 'len' → logprob: -13.161195755004883

Token 181: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006721756421029568
    2. ' +' → logprob: -5.0067219734191895
    3. '+
' → logprob: -12.131721496582031
    4. ')' → logprob: -14.381721496582031
    5. ' +
' → logprob: -15.506721496582031
    6. '+)' → logprob: -16.00672149658203
    7. '```' → logprob: -16.38172149658203
    8. ' )' → logprob: -16.88172149658203
    9. '
' → logprob: -17.00672149658203
    10. '   ' → logprob: -17.75672149658203

Token 182: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -12.125008583068848
    3. '2' → logprob: -14.250008583068848
    4. '```' → logprob: -14.500008583068848
    5. '   ' → logprob: -14.625008583068848
    6. '+' → logprob: -15.062508583068848
    7. '0' → logprob: -15.625008583068848
    8. '(' → logprob: -15.625008583068848
    9. '
' → logprob: -16.25000762939453
    10. ')' → logprob: -16.56250762939453

Token 183: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003148246556520462
    2. ')
' → logprob: -5.878148078918457
    3. ' )' → logprob: -8.628148078918457
    4. '<|end|>' → logprob: -9.003148078918457
    5. '
' → logprob: -10.878148078918457
    6. ' )
' → logprob: -12.253148078918457
    7. ')
' → logprob: -13.128148078918457
    8. '```' → logprob: -13.253148078918457
    9. '<|end|>' → logprob: -13.378148078918457
    10. ']' → logprob: -13.503148078918457

Token 184: '           ' (ID: 352)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.11866242438554764
    2. ' 
' → logprob: -3.8686623573303223
    3. '   ' → logprob: -4.243662357330322
    4. 'd' → logprob: -4.368662357330322
    5. '<|end|>' → logprob: -4.368662357330322
    6. ' dist' → logprob: -4.743662357330322
    7. '	dist' → logprob: -4.743662357330322
    8. '
' → logprob: -4.868662357330322
    9. ')' → logprob: -4.993662357330322
    10. ' ' → logprob: -5.368662357330322

Token 185: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.006056535989046097
    2. ' dist' → logprob: -5.131056308746338
    3. 'pq' → logprob: -10.881056785583496
    4. 'import' → logprob: -10.881056785583496
    5. 'queue' → logprob: -10.881056785583496
    6. '	dist' → logprob: -11.006056785583496
    7. '   ' → logprob: -11.256056785583496
    8. '
' → logprob: -11.256056785583496
    9. 'distance' → logprob: -12.006056785583496
    10. 'def' → logprob: -12.006056785583496

Token 186: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.25238868594169617
    2. '[' → logprob: -1.5023887157440186
    3. '[q' → logprob: -8.252388954162598
    4. 'p' → logprob: -9.377388954162598
    5. '[s' → logprob: -10.502388954162598
    6. '[a' → logprob: -11.127388954162598
    7. '[r' → logprob: -11.627388954162598
    8. '[start' → logprob: -12.252388954162598
    9. '[...]' → logprob: -12.252388954162598
    10. ' [' → logprob: -12.377388954162598

Token 187: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01864992082118988
    2. '[p' → logprob: -4.018650054931641
    3. ' ]' → logprob: -8.14365005493164
    4. '])' → logprob: -9.01865005493164
    5. ')' → logprob: -9.89365005493164
    6. '[' → logprob: -10.76865005493164
    7. ']=' → logprob: -11.64365005493164
    8. '[q' → logprob: -13.14365005493164
    9. ']
' → logprob: -13.64365005493164
    10. ')]' → logprob: -13.89365005493164

Token 188: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7594980001449585
    2. ' =' → logprob: -0.8844980001449585
    3. '[p' → logprob: -2.634498119354248
    4. '[' → logprob: -3.134498119354248
    5. ']' → logprob: -5.759498119354248
    6. ']=' → logprob: -8.50949764251709
    7. '=p' → logprob: -8.75949764251709
    8. ')' → logprob: -9.63449764251709
    9. ',' → logprob: -10.63449764251709
    10. '   ' → logprob: -10.63449764251709

Token 189: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -16.625009536743164
    4. '۰' → logprob: -19.125009536743164
    5. '```' → logprob: -19.687509536743164
    6. '00' → logprob: -19.875009536743164
    7. '    ' → logprob: -19.937509536743164
    8. '  ' → logprob: -20.062509536743164
    9. '[' → logprob: -20.562509536743164
    10. '           ' → logprob: -20.687509536743164

Token 190: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -18.250001907348633
    4. '۰' → logprob: -19.125001907348633
    5. '[' → logprob: -19.187501907348633
    6. '00' → logprob: -19.687501907348633
    7. '1' → logprob: -19.875001907348633
    8. 'zero' → logprob: -19.937501907348633
    9. 'p' → logprob: -20.187501907348633
    10. '０' → logprob: -20.437501907348633

Token 191: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0739649087190628
    2. '
' → logprob: -2.698964834213257
    3. '   ' → logprob: -6.323965072631836
    4. '<|end|>' → logprob: -7.198965072631836
    5. '       ' → logprob: -7.573965072631836
    6. 'heap' → logprob: -7.823965072631836
    7. ',' → logprob: -9.198965072631836
    8. ' heap' → logprob: -9.323965072631836
    9. '            
' → logprob: -9.323965072631836
    10. '		' → logprob: -9.698965072631836

Token 192: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 193: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.1581864207983017
    2. 'queue' → logprob: -2.408186435699463
    3. 'pq' → logprob: -2.908186435699463
    4. 'hq' → logprob: -6.658186435699463
    5. ' heap' → logprob: -8.533185958862305
    6. '   ' → logprob: -8.908185958862305
    7. 'priority' → logprob: -9.908185958862305
    8. 'q' → logprob: -10.283185958862305
    9. '           ' → logprob: -11.283185958862305
    10. ' queue' → logprob: -11.283185958862305

Token 194: ' =' (ID: 314)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0015634235460311174
    2. ' =' → logprob: -7.376563549041748
    3. '=[]' → logprob: -8.12656307220459
    4. '.push' → logprob: -8.50156307220459
    5. '```' → logprob: -9.37656307220459
    6. '=' → logprob: -9.75156307220459
    7. '[' → logprob: -10.12656307220459
    8. '=[]
' → logprob: -10.12656307220459
    9. ',' → logprob: -10.12656307220459
    10. ' ' → logprob: -10.25156307220459

Token 195: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.00408647395670414
    2. ' [(' → logprob: -5.504086494445801
    3. '[]' → logprob: -11.7540864944458
    4. '[]
' → logprob: -15.6290864944458
    5. '[' → logprob: -17.129085540771484
    6. '[((' → logprob: -17.879085540771484
    7. ' []' → logprob: -18.004085540771484
    8. '([(' → logprob: -18.254085540771484
    9. ' ' → logprob: -20.129085540771484
    10. '[]

' → logprob: -20.754085540771484

Token 196: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.584239938296378e-06
    2. 'dist' → logprob: -12.500007629394531
    3. '(' → logprob: -12.875007629394531
    4. ' ' → logprob: -14.125007629394531
    5. '(dist' → logprob: -15.500007629394531
    6. '   ' → logprob: -17.12500762939453
    7. '(p' → logprob: -17.50000762939453
    8. ' dist' → logprob: -17.62500762939453
    9. '
' → logprob: -18.50000762939453
    10. ')' → logprob: -18.50000762939453

Token 197: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030841029365547
    2. ',p' → logprob: -8.7503080368042
    3. ')]' → logprob: -9.1253080368042
    4. ')' → logprob: -10.8753080368042
    5. ' ,' → logprob: -11.1253080368042
    6. ',
' → logprob: -13.3753080368042
    7. ',)' → logprob: -13.5003080368042
    8. ']' → logprob: -14.0003080368042
    9. '```' → logprob: -15.1253080368042
    10. ',(' → logprob: -15.3753080368042

Token 198: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00012356207298580557
    2. ' p' → logprob: -9.000123977661133
    3. ')p' → logprob: -17.750123977661133
    4. '   ' → logprob: -18.000123977661133
    5. '           ' → logprob: -18.250123977661133
    6. ')' → logprob: -18.625123977661133
    7. '<p' → logprob: -18.750123977661133
    8. '[p' → logprob: -19.000123977661133
    9. '	p' → logprob: -19.250123977661133
    10. ',p' → logprob: -19.375123977661133

Token 199: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00568678043782711
    2. ')]
' → logprob: -5.7556867599487305
    3. ')' → logprob: -6.0056867599487305
    4. ']' → logprob: -11.00568675994873
    5. ')]

' → logprob: -11.75568675994873
    6. ')
' → logprob: -12.13068675994873
    7. ' )' → logprob: -12.63068675994873
    8. ')]
' → logprob: -12.63068675994873
    9. '   ' → logprob: -13.00568675994873
    10. ')])' → logprob: -14.38068675994873

Token 200: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7688761353492737
    2. '
' → logprob: -1.643876075744629
    3. ' while' → logprob: -1.768876075744629
    4. '   ' → logprob: -2.768876075744629
    5. 'while' → logprob: -2.893876075744629
    6. '       ' → logprob: -3.643876075744629
    7. '<|end|>' → logprob: -4.143876075744629
    8. '	while' → logprob: -5.143876075744629
    9. '            
' → logprob: -6.518876075744629
    10. '    
' → logprob: -6.893876075744629

Token 201: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.1775207221508026
    2. ' while' → logprob: -1.927520751953125
    3. '   ' → logprob: -4.302520751953125
    4. '	while' → logprob: -6.427520751953125
    5. '       ' → logprob: -6.677520751953125
    6. ')' → logprob: -7.677520751953125
    7. '           ' → logprob: -8.927520751953125
    8. '    ' → logprob: -10.052520751953125
    9. ' ' → logprob: -11.302520751953125
    10. '    
' → logprob: -11.552520751953125

Token 202: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.029754776507616043
    2. ' heap' → logprob: -3.529754877090454
    3. '(heap' → logprob: -12.404754638671875
    4. '.heap' → logprob: -16.529754638671875
    5. '```' → logprob: -17.404754638671875
    6. ' ' → logprob: -17.529754638671875
    7. 'len' → logprob: -17.529754638671875
    8. 'he' → logprob: -17.654754638671875
    9. '   ' → logprob: -17.654754638671875
    10. '
' → logprob: -18.779754638671875

Token 203: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0826127752661705
    2. ':
' → logprob: -2.5826127529144287
    3. '):
' → logprob: -6.332612991333008
    4. '):' → logprob: -6.332612991333008
    5. ' and' → logprob: -9.582612991333008
    6. '.pop' → logprob: -10.207612991333008
    7. '>:' → logprob: -11.957612991333008
    8. '   ' → logprob: -12.207612991333008
    9. ']:' → logprob: -12.207612991333008
    10. ',' → logprob: -12.207612991333008

Token 204: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0639495998620987
    2. ',' → logprob: -2.8139495849609375
    3. ' ,' → logprob: -7.1889495849609375
    4. '           ' → logprob: -7.5639495849609375
    5. ')' → logprob: -9.063949584960938
    6. ':' → logprob: -9.563949584960938
    7. 'pop' → logprob: -9.563949584960938
    8. '	           ' → logprob: -9.813949584960938
    9. '(heap' → logprob: -9.813949584960938
    10. 'heap' → logprob: -10.188949584960938

Token 205: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.036087267100811005
    2. ' cost' → logprob: -3.7860872745513916
    3. 'current' → logprob: -5.2860870361328125
    4. 'curr' → logprob: -5.7860870361328125
    5. 'cur' → logprob: -6.2860870361328125
    6. '               ' → logprob: -6.9110870361328125
    7. 'dist' → logprob: -7.6610870361328125
    8. 'd' → logprob: -7.9110870361328125
    9. ' current' → logprob: -8.286087036132812
    10. 'c' → logprob: -9.036087036132812

Token 206: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013214473437983543
    2. ' ,' → logprob: -9.00013256072998
    3. '_,' → logprob: -12.25013256072998
    4. ',
' → logprob: -13.25013256072998
    5. ',current' → logprob: -14.37513256072998
    6. ',_' → logprob: -15.00013256072998
    7. ',c' → logprob: -15.12513256072998
    8. '‌,' → logprob: -15.87513256072998
    9. '_cost' → logprob: -16.000131607055664
    10. ',

' → logprob: -16.250131607055664

Token 207: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.05725729092955589
    2. 'u' → logprob: -3.5572571754455566
    3. ' node' → logprob: -3.8072571754455566
    4. 'now' → logprob: -6.057257175445557
    5. ' u' → logprob: -7.432257175445557
    6. 'v' → logprob: -7.432257175445557
    7. 'cur' → logprob: -7.932257175445557
    8. 'curr' → logprob: -8.057257652282715
    9. 'current' → logprob: -8.432257652282715
    10. ' now' → logprob: -8.432257652282715

Token 208: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47485804557800293
    2. '=' → logprob: -0.9748580455780029
    3. ')' → logprob: -7.224858283996582
    4. ')=' → logprob: -10.224858283996582
    5. ',' → logprob: -12.724858283996582
    6. ' ' → logprob: -12.849858283996582
    7. '<|end|>' → logprob: -12.849858283996582
    8. ']' → logprob: -13.099858283996582
    9. '   ' → logprob: -13.474858283996582
    10. ' =
' → logprob: -14.224858283996582

Token 209: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.2519437372684479
    2. 'heap' → logprob: -1.5019437074661255
    3. 'he' → logprob: -11.626943588256836
    4. ' he' → logprob: -12.376943588256836
    5. '(heap' → logprob: -13.876943588256836
    6. '.heap' → logprob: -15.001943588256836
    7. '_heap' → logprob: -16.001943588256836
    8. 'Heap' → logprob: -17.251943588256836
    9. '
' → logprob: -17.751943588256836
    10. ' ' → logprob: -18.126943588256836

Token 210: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.19649271667003632
    2. '=' → logprob: -2.3214926719665527
    3. ')' → logprob: -3.4464926719665527
    4. '.pop' → logprob: -3.8214926719665527
    5. '<|end|>' → logprob: -4.446492671966553
    6. '[' → logprob: -5.071492671966553
    7. ' =' → logprob: -6.571492671966553
    8. ',' → logprob: -6.821492671966553
    9. ']' → logprob: -7.071492671966553
    10. '.' → logprob: -7.196492671966553

Token 211: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.0005340866628102958
    2. '.' → logprob: -7.8755340576171875
    3. 'q' → logprob: -8.875534057617188
    4. ' he' → logprob: -12.250534057617188
    5. '.heap' → logprob: -12.500534057617188
    6. 'he' → logprob: -12.750534057617188
    7. '.pop' → logprob: -13.750534057617188
    8. '.q' → logprob: -14.500534057617188
    9. 'app' → logprob: -14.750534057617188
    10. '.h' → logprob: -15.250534057617188

Token 212: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -7.703443770878948e-06
    2. 'pp' → logprob: -12.250007629394531
    3. 'ap' → logprob: -12.875007629394531
    4. 'a' → logprob: -16.50000762939453
    5. '[' → logprob: -16.62500762939453
    6. 'qp' → logprob: -17.50000762939453
    7. 'q' → logprob: -17.87500762939453
    8. 'p' → logprob: -18.00000762939453
    9. 'appen' → logprob: -18.00000762939453
    10. '(app' → logprob: -18.87500762939453

Token 213: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.3245190680027008
    2. 'ush' → logprob: -1.3245190382003784
    3. 'app' → logprob: -5.199519157409668
    4. 'pp' → logprob: -5.574519157409668
    5. 'p' → logprob: -6.949519157409668
    6. 'ap' → logprob: -7.574519157409668
    7. 'q' → logprob: -8.699519157409668
    8. 'pop' → logprob: -9.699519157409668
    9. 'push' → logprob: -9.824519157409668
    10. '```' → logprob: -9.949519157409668

Token 214: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -3.3451433409936726e-05
    2. '(' → logprob: -10.375033378601074
    3. '(graph' → logprob: -14.125033378601074
    4. 'heap' → logprob: -14.500033378601074
    5. '(
' → logprob: -14.625033378601074
    6. ' (' → logprob: -15.250033378601074
    7. '(queue' → logprob: -16.00003433227539
    8. ' heap' → logprob: -16.25003433227539
    9. '(h' → logprob: -16.87503433227539
    10. '(stack' → logprob: -19.50003433227539

Token 215: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03806031122803688
    2. ')' → logprob: -3.288060426712036
    3. ')
' → logprob: -11.038060188293457
    4. ' )
' → logprob: -13.913060188293457
    5. ')

' → logprob: -14.288060188293457
    6. '               ' → logprob: -14.538060188293457
    7. '   ' → logprob: -15.038060188293457
    8. '       ' → logprob: -15.663060188293457
    9. '           ' → logprob: -15.788060188293457
    10. ')`
' → logprob: -16.038061141967773

Token 216: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3238808214664459
    2. '           ' → logprob: -1.6988807916641235
    3. '               ' → logprob: -2.448880910873413
    4. '   ' → logprob: -5.823880672454834
    5. '
' → logprob: -6.323880672454834
    6. '<|end|>' → logprob: -6.448880672454834
    7. ' if' → logprob: -8.448881149291992
    8. ' for' → logprob: -8.823881149291992
    9. '        
' → logprob: -8.948881149291992
    10. ')' → logprob: -9.073881149291992

Token 217: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16297797858715057
    2. ' if' → logprob: -2.287977933883667
    3. '       ' → logprob: -3.287977933883667
    4. 'if' (adapté à ' if') → logprob: -4.787978172302246
    5. '   ' → logprob: -6.537978172302246
    6. '           ' → logprob: -6.912978172302246
    7. '
' → logprob: -7.287978172302246
    8. '                
' → logprob: -9.787978172302246
    9. ' 
' → logprob: -10.537978172302246
    10. '        
' → logprob: -11.537978172302246

Token 218: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.487029492855072
    2. 'dist' → logprob: -0.987029492855072
    3. ' cost' → logprob: -4.987029552459717
    4. 'cost' → logprob: -5.112029552459717
    5. '	dist' → logprob: -11.112029075622559
    6. 'node' → logprob: -13.487029075622559
    7. ' node' → logprob: -13.612029075622559
    8. '(dist' → logprob: -14.612029075622559
    9. '```' → logprob: -14.862029075622559
    10. ' ' → logprob: -15.362029075622559

Token 219: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -13.750000953674316
    3. 'node' → logprob: -16.750001907348633
    4. '(node' → logprob: -19.250001907348633
    5. '[n' → logprob: -19.500001907348633
    6. '```' → logprob: -19.875001907348633
    7. 'cost' → logprob: -19.875001907348633
    8. ' [' → logprob: -20.375001907348633
    9. '	node' → logprob: -21.000001907348633
    10. '[
' → logprob: -21.125001907348633

Token 220: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5801988840103149
    2. ' <' → logprob: -0.8301988840103149
    3. '[' → logprob: -6.330198764801025
    4. ']' → logprob: -7.205198764801025
    5. '<=' → logprob: -8.205199241638184
    6. ']<' → logprob: -8.205199241638184
    7. '[node' → logprob: -8.705199241638184
    8. ' <=' → logprob: -9.080199241638184
    9. '<n' → logprob: -9.205199241638184
    10. ')' → logprob: -9.330199241638184

Token 221: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.04900255426764488
    2. ' <' → logprob: -3.0490026473999023
    3. '<int' → logprob: -9.049002647399902
    4. '<=' → logprob: -9.424002647399902
    5. '<n' → logprob: -10.299002647399902
    6. '[' → logprob: -10.424002647399902
    7. '<len' → logprob: -11.049002647399902
    8. '<data' → logprob: -11.174002647399902
    9. '<c' → logprob: -11.299002647399902
    10. '<count' → logprob: -11.299002647399902

Token 222: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.061967913061380386
    2. ' cost' → logprob: -2.8119678497314453
    3. '(cost' → logprob: -15.561967849731445
    4. '_cost' → logprob: -17.436967849731445
    5. '.cost' → logprob: -18.186967849731445
    6. 'code' → logprob: -18.186967849731445
    7. 'Cost' → logprob: -18.311967849731445
    8. '-cost' → logprob: -18.311967849731445
    9. '=' → logprob: -18.311967849731445
    10. ' ' → logprob: -18.311967849731445

Token 223: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.233897864818573
    2. ':
' → logprob: -1.6088979244232178
    3. '       ' → logprob: -5.108897686004639
    4. '           ' → logprob: -6.233897686004639
    5. '               ' → logprob: -9.108898162841797
    6. 'continue' → logprob: -9.233898162841797
    7. ' continue' → logprob: -9.483898162841797
    8. '   ' → logprob: -9.733898162841797
    9. '	continue' → logprob: -10.608898162841797
    10. '):
' → logprob: -10.733898162841797

Token 224: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.4074381589889526
    2. '                   ' → logprob: -1.4074381589889526
    3. '           ' → logprob: -1.6574381589889526
    4. ':' → logprob: -2.282438278198242
    5. '       ' → logprob: -2.282438278198242
    6. ' continue' → logprob: -2.657438278198242
    7. 'continue' → logprob: -3.782438278198242
    8. ':
' → logprob: -4.032438278198242
    9. '   ' → logprob: -5.657438278198242
    10. '	continue' → logprob: -7.282438278198242

Token 225: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.41816246509552
    2. ' continue' → logprob: -1.16816246509552
    3. '       ' → logprob: -3.6681623458862305
    4. '               ' → logprob: -5.5431623458862305
    5. '           ' → logprob: -6.9181623458862305
    6. '	continue' → logprob: -8.16816234588623
    7. '   ' → logprob: -9.79316234588623
    8. '_continue' → logprob: -10.79316234588623
    9. '                   ' → logprob: -11.66816234588623
    10. '
' → logprob: -12.66816234588623

Token 226: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005119257839396596
    2. '                
' → logprob: -8.25051212310791
    3. ' for' → logprob: -9.37551212310791
    4. '           ' → logprob: -10.00051212310791
    5. '       ' → logprob: -10.87551212310791
    6. ',' → logprob: -11.12551212310791
    7. ' 
' → logprob: -11.25051212310791
    8. '
' → logprob: -11.37551212310791
    9. ')' → logprob: -11.37551212310791
    10. '<|end|>' → logprob: -11.50051212310791

Token 227: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003315311623737216
    2. ' for' → logprob: -6.003315448760986
    3. '           ' → logprob: -8.253314971923828
    4. '       ' → logprob: -8.503314971923828
    5. 'for' → logprob: -8.503314971923828
    6. '                
' → logprob: -9.753314971923828
    7. '   ' → logprob: -10.378314971923828
    8. ')' → logprob: -10.378314971923828
    9. ',' → logprob: -11.253314971923828
    10. '<|end|>' → logprob: -11.628314971923828

Token 228: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7182546854019165
    2. '               ' → logprob: -0.9682546854019165
    3. ' for' → logprob: -2.093254566192627
    4. '       ' → logprob: -5.218254566192627
    5. '           ' → logprob: -5.968254566192627
    6. '   ' → logprob: -6.718254566192627
    7. '                
' → logprob: -9.718255043029785
    8. '```' → logprob: -10.218255043029785
    9. '
' → logprob: -10.843255043029785
    10. '	for' → logprob: -10.843255043029785

Token 229: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.004621780011802912
    2. ' node' → logprob: -5.379621982574463
    3. '	node' → logprob: -14.754621505737305
    4. '(node' → logprob: -15.379621505737305
    5. '[node' → logprob: -15.754621505737305
    6. 'q' → logprob: -15.754621505737305
    7. 'dist' → logprob: -16.129621505737305
    8. '   ' → logprob: -16.504621505737305
    9. ' ' → logprob: -16.504621505737305
    10. 'p' → logprob: -16.754621505737305

Token 230: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0052350712940096855
    2. '==' → logprob: -5.255235195159912
    3. ' ' → logprob: -15.005234718322754
    4. ')' → logprob: -15.505234718322754
    5. ')==' → logprob: -15.630234718322754
    6. ' ' → logprob: -15.880234718322754
    7. '=' → logprob: -15.880234718322754
    8. ']==' → logprob: -16.00523567199707
    9. ' =' → logprob: -16.25523567199707
    10. '[' → logprob: -17.25523567199707

Token 231: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.03804229199886322
    2. ' q' → logprob: -3.2880423069000244
    3. 'm' → logprob: -15.288042068481445
    4. '	q' → logprob: -15.913042068481445
    5. '   ' → logprob: -16.538042068481445
    6. ' ' → logprob: -16.600542068481445
    7. 'p' → logprob: -17.100542068481445
    8. ' ' → logprob: -17.225542068481445
    9. '    ' → logprob: -17.225542068481445
    10. 'Q' → logprob: -17.475542068481445

Token 232: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029786018654704094
    2. ':
' → logprob: -3.5297861099243164
    3. ' :' → logprob: -11.279786109924316
    4. '):' → logprob: -12.154786109924316
    5. '):
' → logprob: -12.404786109924316
    6. ':return' → logprob: -12.404786109924316
    7. '   ' → logprob: -13.029786109924316
    8. ':
' → logprob: -13.404786109924316
    9. ' :
' → logprob: -13.404786109924316
    10. ')' → logprob: -13.529786109924316

Token 233: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0007972388411872089
    2. '               ' → logprob: -7.500797271728516
    3. '           ' → logprob: -9.500797271728516
    4. '
' → logprob: -10.000797271728516
    5. '                       ' → logprob: -10.375797271728516
    6. '                    
' → logprob: -10.750797271728516
    7. ' break' → logprob: -10.875797271728516
    8. '       ' → logprob: -10.875797271728516
    9. '   ' → logprob: -11.500797271728516
    10. 'break' → logprob: -12.125797271728516

Token 234: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.02487383410334587
    2. ' print' → logprob: -4.649873733520508
    3. '                   ' → logprob: -5.024873733520508
    4. 'break' → logprob: -5.149873733520508
    5. '               ' → logprob: -6.274873733520508
    6. ' break' → logprob: -8.274873733520508
    7. '           ' → logprob: -8.774873733520508
    8. '   ' → logprob: -9.149873733520508
    9. '       ' → logprob: -9.274873733520508
    10. '
' → logprob: -9.399873733520508

Token 235: '(cost' (ID: 133554)
  Prédit: '(cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -0.014752639457583427
    2. 'cost' → logprob: -4.2647528648376465
    3. ' cost' → logprob: -7.6397528648376465
    4. '(dist' → logprob: -9.389752388000488
    5. '(' → logprob: -11.014752388000488
    6. 'dist' → logprob: -11.889752388000488
    7. '(c' → logprob: -14.639752388000488
    8. '(distance' → logprob: -15.264752388000488
    9. ' dist' → logprob: -15.639752388000488
    10. '0' → logprob: -16.764753341674805

Token 236: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.38701581954956055
    2. ')' → logprob: -1.1370158195495605
    3. '                   ' → logprob: -9.012016296386719
    4. ')
' → logprob: -11.137016296386719
    5. '               ' → logprob: -12.012016296386719
    6. ')`
' → logprob: -14.137016296386719
    7. '           ' → logprob: -15.387016296386719
    8. '                       ' → logprob: -15.512016296386719
    9. ')return' → logprob: -15.887016296386719
    10. ' )
' → logprob: -15.887016296386719

Token 237: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3496091663837433
    2. '                   ' → logprob: -1.224609136581421
    3. '           ' → logprob: -7.599609375
    4. 'continue' → logprob: -7.974609375
    5. '       ' → logprob: -8.849609375
    6. '   ' → logprob: -9.349609375
    7. ' continue' → logprob: -9.724609375
    8. '                       ' → logprob: -11.099609375
    9. 'for' → logprob: -13.224609375
    10. '                ' → logprob: -13.474609375

Token 238: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3162868618965149
    2. 'break' (adapté à ' break') → logprob: -1.3162868022918701
    3. ' break' → logprob: -5.816287040710449
    4. '               ' → logprob: -11.19128704071045
    5. '	break' → logprob: -11.44128704071045
    6. '                       ' → logprob: -11.56628704071045
    7. '				' → logprob: -12.69128704071045
    8. '           ' → logprob: -12.69128704071045
    9. '   ' → logprob: -14.31628704071045
    10. '
' → logprob: -15.19128704071045

Token 239: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1832660287618637
    2. '       ' → logprob: -2.4332659244537354
    3. '           ' → logprob: -2.8082659244537354
    4. 'else' → logprob: -4.6832661628723145
    5. 'for' → logprob: -5.6832661628723145
    6. ' for' → logprob: -5.9332661628723145
    7. '   ' → logprob: -5.9332661628723145
    8. ' else' → logprob: -7.1832661628723145
    9. ')' → logprob: -8.183265686035156
    10. '```' → logprob: -9.683265686035156

Token 240: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03159052133560181
    2. 'for' → logprob: -4.156590461730957
    3. '           ' → logprob: -4.281590461730957
    4. '       ' → logprob: -7.031590461730957
    5. ' for' → logprob: -7.656590461730957
    6. '   ' → logprob: -8.406590461730957
    7. '```' → logprob: -11.156590461730957
    8. 'else' → logprob: -11.281590461730957
    9. '                   ' → logprob: -12.906590461730957
    10. '              ' → logprob: -13.031590461730957

Token 241: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.22662754356861115
    2. ' for' → logprob: -2.1016275882720947
    3. '               ' → logprob: -2.6016275882720947
    4. '           ' → logprob: -5.226627349853516
    5. '       ' → logprob: -7.226627349853516
    6. '   ' → logprob: -8.476627349853516
    7. '                
' → logprob: -10.601627349853516
    8. '
' → logprob: -10.976627349853516
    9. '	for' → logprob: -11.851627349853516
    10. '    
' → logprob: -12.851627349853516

Token 242: ' nxt' (ID: 160200)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.4934477210044861
    2. 'neighbor' → logprob: -0.9934477210044861
    3. ' nxt' → logprob: -4.743447780609131
    4. 'to' → logprob: -4.993447780609131
    5. 'v' → logprob: -6.493447780609131
    6. ' next' → logprob: -7.493447780609131
    7. 'adj' → logprob: -7.993447780609131
    8. 'nei' → logprob: -7.993447780609131
    9. 'n' → logprob: -8.243447303771973
    10. '   ' → logprob: -8.743447303771973

Token 243: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009392123320139945
    2. ',node' → logprob: -7.25093936920166
    3. '_node' → logprob: -9.00093936920166
    4. ' ,' → logprob: -9.50093936920166
    5. '_,' → logprob: -11.62593936920166
    6. ',n' → logprob: -11.87593936920166
    7. 'node' → logprob: -12.25093936920166
    8. ',_' → logprob: -12.37593936920166
    9. 'n' → logprob: -13.37593936920166
    10. '(node' → logprob: -13.62593936920166

Token 244: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3652602732181549
    2. 'w' → logprob: -1.9902602434158325
    3. 'weight' → logprob: -2.490260362625122
    4. ' c' → logprob: -3.115260362625122
    5. 'cost' → logprob: -3.615260362625122
    6. 'wt' → logprob: -5.240260124206543
    7. ' w' → logprob: -5.365260124206543
    8. ' weight' → logprob: -6.615260124206543
    9. 'cc' → logprob: -6.740260124206543
    10. 'val' → logprob: -6.990260124206543

Token 245: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005643993616104126
    2. 'ost' → logprob: -5.380643844604492
    3. 'in' → logprob: -7.005643844604492
    4. ',' → logprob: -9.880643844604492
    5. ' ' → logprob: -10.255643844604492
    6. '_cost' → logprob: -12.255643844604492
    7. 'cost' → logprob: -12.380643844604492
    8. '   ' → logprob: -12.505643844604492
    9. '  ' → logprob: -12.755643844604492
    10. 'o' → logprob: -13.255643844604492

Token 246: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.1002146452665329
    2. ' graph' → logprob: -2.350214719772339
    3. '	graph' → logprob: -12.100214958190918
    4. '(graph' → logprob: -14.100214958190918
    5. ' ' → logprob: -14.600214958190918
    6. '   ' → logprob: -15.100214958190918
    7. '
' → logprob: -15.725214958190918
    8. '  ' → logprob: -15.975214958190918
    9. '    ' → logprob: -16.1002140045166
    10. '```' → logprob: -16.2252140045166

Token 247: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -5.5577775128767826e-06
    2. '_time' → logprob: -12.375005722045898
    3. 'cost' → logprob: -13.750005722045898
    4. '_code' → logprob: -17.6250057220459
    5. '_' → logprob: -17.7500057220459
    6. '[' → logprob: -18.1250057220459
    7. '_COST' → logprob: -18.6250057220459
    8. '_c' → logprob: -18.6250057220459
    9. '[_' → logprob: -18.8750057220459
    10. ' cost' → logprob: -19.6250057220459

Token 248: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -4.723352049040841e-06
    2. 'node' → logprob: -13.375004768371582
    3. 'cost' → logprob: -13.375004768371582
    4. '[c' → logprob: -14.125004768371582
    5. '[' → logprob: -14.625004768371582
    6. '[p' → logprob: -16.625003814697266
    7. '[n' → logprob: -16.625003814697266
    8. '(node' → logprob: -17.375003814697266
    9. '   ' → logprob: -17.625003814697266
    10. ' [' → logprob: -18.250003814697266

Token 249: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5833342671394348
    2. '):' → logprob: -1.45833420753479
    3. ':' → logprob: -1.83333420753479
    4. ':
' → logprob: -3.08333420753479
    5. ']:' → logprob: -6.708334445953369
    6. ']:
' → logprob: -7.083334445953369
    7. '       ' → logprob: -7.458334445953369
    8. '           ' → logprob: -7.708334445953369
    9. '   ' → logprob: -8.083333969116211
    10. '               ' → logprob: -10.083333969116211

Token 250: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.013397740200161934
    2. '               ' → logprob: -4.763397693634033
    3. ':' → logprob: -6.763397693634033
    4. '           ' → logprob: -7.013397693634033
    5. ':
' → logprob: -7.513397693634033
    6. '   ' → logprob: -7.638397693634033
    7. ' if' → logprob: -7.763397693634033
    8. ',' → logprob: -8.013398170471191
    9. '                    
' → logprob: -8.263398170471191
    10. '                       ' → logprob: -8.888398170471191

Token 251: ' new' (ID: 620)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07587996870279312
    2. ' if' → logprob: -3.0758800506591797
    3. ' new' → logprob: -3.9508800506591797
    4. 'if' → logprob: -5.70088005065918
    5. '               ' → logprob: -7.07588005065918
    6. '                    ' → logprob: -7.07588005065918
    7. '                    
' → logprob: -7.20088005065918
    8. '                       ' → logprob: -7.57588005065918
    9. 'new' (adapté à ' new') → logprob: -7.82588005065918
    10. '
' → logprob: -8.20088005065918

Token 252: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.00020747410599142313
    2. '_dist' → logprob: -9.125207901000977
    3. 'cost' → logprob: -9.500207901000977
    4. '_' → logprob: -11.125207901000977
    5. '_c' → logprob: -12.375207901000977
    6. ' =' → logprob: -13.750207901000977
    7. ' cost' → logprob: -14.000207901000977
    8. '_COST' → logprob: -14.125207901000977
    9. 'dist' → logprob: -14.500207901000977
    10. '=' → logprob: -14.625207901000977

Token 253: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141372084617615
    2. '=' → logprob: -1.7014137506484985
    3. ' ' → logprob: -15.576414108276367
    4. '    ' → logprob: -16.201414108276367
    5. ' =
' → logprob: -16.826414108276367
    6. ')' → logprob: -17.201414108276367
    7. '>' → logprob: -17.451414108276367
    8. '＝' → logprob: -17.451414108276367
    9. '   ' → logprob: -18.076414108276367
    10. ' ' → logprob: -18.201414108276367

Token 254: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.4740813970565796
    2. 'cost' → logprob: -0.9740813970565796
    3. 'dist' → logprob: -13.099081039428711
    4. ' dist' → logprob: -13.224081039428711
    5. 'c' → logprob: -15.224081039428711
    6. '(cost' → logprob: -15.599081039428711
    7. ' c' → logprob: -16.72408103942871
    8. '_cost' → logprob: -16.97408103942871
    9. ' kost' → logprob: -18.59908103942871
    10. 'Cost' → logprob: -18.59908103942871

Token 255: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07897119969129562
    2. '+' → logprob: -2.5789711475372314
    3. '+c' → logprob: -9.453970909118652
    4. '+n' → logprob: -14.078970909118652
    5. ' +
' → logprob: -14.328970909118652
    6. '+k' → logprob: -14.828970909118652
    7. '+C' → logprob: -15.578970909118652
    8. '+d' → logprob: -15.828970909118652
    9. '+p' → logprob: -15.953970909118652
    10. '+r' → logprob: -16.32897186279297

Token 256: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.011047814972698689
    2. ' c' → logprob: -4.511047840118408
    3. '	c' → logprob: -17.51104736328125
    4. '   ' → logprob: -19.13604736328125
    5. '_c' → logprob: -19.38604736328125
    6. ' ' → logprob: -19.51104736328125
    7. ' ' → logprob: -19.63604736328125
    8. '$c' → logprob: -20.26104736328125
    9. ')c' → logprob: -20.26104736328125
    10. '+c' → logprob: -20.38604736328125

Token 257: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.020505808293819427
    2. '<|end|>' → logprob: -5.020505905151367
    3. '                    
' → logprob: -5.270505905151367
    4. ' 
' → logprob: -5.645505905151367
    5. '               ' → logprob: -6.395505905151367
    6. '
' → logprob: -7.520505905151367
    7. '           ' → logprob: -7.645505905151367
    8. '                    ' → logprob: -7.770505905151367
    9. '<|end|>' → logprob: -7.770505905151367
    10. '				' → logprob: -8.520505905151367

Token 258: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004156756680458784
    2. '<|end|>' → logprob: -6.379156589508057
    3. '               ' → logprob: -6.754156589508057
    4. '           ' → logprob: -8.129157066345215
    5. '                    
' → logprob: -8.254157066345215
    6. '				' → logprob: -9.004157066345215
    7. '
' → logprob: -9.129157066345215
    8. '<|end|>' → logprob: -9.379157066345215
    9. '		           ' → logprob: -9.504157066345215
    10. '       ' → logprob: -9.629157066345215

Token 259: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.09297090023756027
    2. ' if' → logprob: -2.717970848083496
    3. 'if' (adapté à ' if') → logprob: -3.842970848083496
    4. '               ' → logprob: -7.342970848083496
    5. '                    ' → logprob: -8.717970848083496
    6. '           ' → logprob: -8.842970848083496
    7. ' ' → logprob: -9.217970848083496
    8. '   ' → logprob: -9.592970848083496
    9. '    ' → logprob: -10.092970848083496
    10. '       ' → logprob: -10.342970848083496

Token 260: ' dist' (ID: 3601)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.48481354117393494
    2. ' dist' → logprob: -1.2348135709762573
    3. 'new' → logprob: -2.4848134517669678
    4. 'dist' → logprob: -4.609813690185547
    5. '(dist' → logprob: -13.984813690185547
    6. '	dist' → logprob: -13.984813690185547
    7. '	new' → logprob: -14.734813690185547
    8. '_dist' → logprob: -15.109813690185547
    9. '[new' → logprob: -15.109813690185547
    10. ' ' → logprob: -15.234813690185547

Token 261: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.9266199160483666e-05
    2. '[new' → logprob: -11.000019073486328
    3. 'n' → logprob: -13.875019073486328
    4. '[next' → logprob: -14.250019073486328
    5. 'new' → logprob: -15.000019073486328
    6. '[' → logprob: -15.125019073486328
    7. '[node' → logprob: -15.125019073486328
    8. ' [' → logprob: -18.000019073486328
    9. '[
' → logprob: -18.625019073486328
    10. '	n' → logprob: -19.000019073486328

Token 262: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.00014692598779220134
    2. 'x' → logprob: -8.875146865844727
    3. '   ' → logprob: -13.500146865844727
    4. 't' → logprob: -13.625146865844727
    5. '[n' → logprob: -13.875146865844727
    6. ']' → logprob: -14.000146865844727
    7. '[next' → logprob: -14.500146865844727
    8. '[' → logprob: -14.500146865844727
    9. '       ' → logprob: -14.875146865844727
    10. '```' → logprob: -15.000146865844727

Token 263: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3763560652732849
    2. ' >' → logprob: -1.2513561248779297
    3. '[n' → logprob: -3.8763561248779297
    4. ']' → logprob: -5.75135612487793
    5. '[new' → logprob: -6.00135612487793
    6. ']>' → logprob: -7.12635612487793
    7. '[' → logprob: -8.75135612487793
    8. 'new' → logprob: -9.87635612487793
    9. '[next' → logprob: -10.50135612487793
    10. '">' → logprob: -10.62635612487793

Token 264: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.25196123123168945
    2. '>' → logprob: -1.5019612312316895
    3. '[' → logprob: -10.751960754394531
    4. '[n' → logprob: -13.001960754394531
    5. ' ' → logprob: -13.126960754394531
    6. '">' → logprob: -13.876960754394531
    7. '   ' → logprob: -14.001960754394531
    8. ' >
' → logprob: -14.126960754394531
    9. '[new' → logprob: -14.376960754394531
    10. ' >
' → logprob: -15.126960754394531

Token 265: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.1269284337759018
    2. ' new' → logprob: -2.1269283294677734
    3. '	new' → logprob: -16.126928329467773
    4. '[new' → logprob: -16.626928329467773
    5. '_new' → logprob: -16.626928329467773
    6. '新' → logprob: -17.626928329467773
    7. '(new' → logprob: -17.876928329467773
    8. 'New' → logprob: -18.376928329467773
    9. ')new' → logprob: -18.501928329467773
    10. '                   ' → logprob: -18.626928329467773

Token 266: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -8.77627644513268e-06
    2. 'cost' → logprob: -11.750008583068848
    3. '_c' → logprob: -15.875008583068848
    4. '_COST' → logprob: -16.125009536743164
    5. '_code' → logprob: -16.250009536743164
    6. '_' → logprob: -16.500009536743164
    7. '_cos' → logprob: -16.500009536743164
    8. '_dist' → logprob: -16.750009536743164
    9. '-cost' → logprob: -16.875009536743164
    10. 'Cost' → logprob: -16.875009536743164

Token 267: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0868796780705452
    2. ':
' → logprob: -2.5868797302246094
    3. ' :' → logprob: -5.711879730224609
    4. ' :
' → logprob: -5.836879730224609
    5. '                       ' → logprob: -6.836879730224609
    6. '                   ' → logprob: -8.83687973022461
    7. '):
' → logprob: -8.83687973022461
    8. '                           ' → logprob: -9.33687973022461
    9. '<|end|>' → logprob: -9.33687973022461
    10. '):' → logprob: -10.33687973022461

Token 268: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.029874522238969803
    2. '                        
' → logprob: -4.529874324798584
    3. '                   ' → logprob: -4.779874324798584
    4. '                           ' → logprob: -5.029874324798584
    5. '                        ' → logprob: -7.654874324798584
    6. '               ' → logprob: -7.654874324798584
    7. ' 
' → logprob: -7.904874324798584
    8. '                               ' → logprob: -7.904874324798584
    9. '                    
' → logprob: -8.279874801635742
    10. ' ' → logprob: -8.529874801635742

Token 269: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.011294317431747913
    2. 'dist' (adapté à ' dist') → logprob: -4.511294364929199
    3. '                           ' → logprob: -8.3862943649292
    4. '                       ' → logprob: -11.2612943649292
    5. '                        ' → logprob: -13.1362943649292
    6. '                               ' → logprob: -13.7612943649292
    7. '                            ' → logprob: -14.1362943649292
    8. '_dist' → logprob: -14.5112943649292
    9. '	dist' → logprob: -14.5112943649292
    10. 'Dist' → logprob: -15.6362943649292

Token 270: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -3.054500666621607e-06
    2. '[' → logprob: -13.50000286102295
    3. 'n' → logprob: -14.62500286102295
    4. ' [' → logprob: -15.00000286102295
    5. '=n' → logprob: -15.00000286102295
    6. ' =' → logprob: -15.87500286102295
    7. '           ' → logprob: -16.125003814697266
    8. '=' → logprob: -16.250003814697266
    9. '[node' → logprob: -16.750003814697266
    10. '[next' → logprob: -16.875003814697266

Token 271: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.0007400614558719099
    2. 'x' → logprob: -7.250740051269531
    3. 't' → logprob: -11.125740051269531
    4. '[n' → logprob: -11.375740051269531
    5. 'st' → logprob: -13.625740051269531
    6. '       ' → logprob: -14.500740051269531
    7. '   ' → logprob: -14.875740051269531
    8. '[t' → logprob: -15.250740051269531
    9. '[' → logprob: -15.375740051269531
    10. '[x' → logprob: -15.500740051269531

Token 272: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5265077948570251
    2. '=' → logprob: -0.9015077948570251
    3. ']' → logprob: -5.77650785446167
    4. ']=' → logprob: -8.776507377624512
    5. '=n' → logprob: -10.651507377624512
    6. '[n' → logprob: -11.026507377624512
    7. '           ' → logprob: -11.401507377624512
    8. ' ]' → logprob: -11.526507377624512
    9. '>' → logprob: -11.651507377624512
    10. ')' → logprob: -11.776507377624512

Token 273: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47409141063690186
    2. '=' → logprob: -0.9740914106369019
    3. '=n' → logprob: -11.599091529846191
    4. '[n' → logprob: -13.099091529846191
    5. '＝' → logprob: -14.599091529846191
    6. ' ' → logprob: -14.974091529846191
    7. '.=' → logprob: -15.099091529846191
    8. '=new' → logprob: -15.349091529846191
    9. '[' → logprob: -15.474091529846191
    10. ']=' → logprob: -15.599091529846191

Token 274: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.3868710398674011
    2. 'new' → logprob: -1.136871099472046
    3. '_new' → logprob: -17.636871337890625
    4. '[new' → logprob: -17.636871337890625
    5. '	new' → logprob: -18.386871337890625
    6. 'New' → logprob: -18.636871337890625
    7. '                       ' → logprob: -18.761871337890625
    8. '新' → logprob: -18.761871337890625
    9. '                           ' → logprob: -18.886871337890625
    10. '$new' → logprob: -18.886871337890625

Token 275: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -6.706686690449715e-05
    2. 'cost' → logprob: -9.625066757202148
    3. ' cost' → logprob: -15.500066757202148
    4. 'new' → logprob: -15.625066757202148
    5. '_code' → logprob: -16.00006675720215
    6. 'Cost' → logprob: -16.00006675720215
    7. '_COST' → logprob: -16.25006675720215
    8. '_new' → logprob: -16.50006675720215
    9. '_c' → logprob: -16.75006675720215
    10. '-cost' → logprob: -17.00006675720215

Token 276: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0005427849246188998
    2. '<|end|>' → logprob: -8.875542640686035
    3. '           ' → logprob: -9.375542640686035
    4. '               ' → logprob: -9.500542640686035
    5. '					' → logprob: -9.625542640686035
    6. '                           ' → logprob: -10.000542640686035
    7. '                        
' → logprob: -10.000542640686035
    8. '                        ' → logprob: -10.500542640686035
    9. ',' → logprob: -11.000542640686035
    10. '                   ' → logprob: -11.375542640686035

Token 277: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00042412037146277726
    2. '                        
' → logprob: -8.8754243850708
    3. '					' → logprob: -9.0004243850708
    4. '               ' → logprob: -10.2504243850708
    5. ',' → logprob: -10.6254243850708
    6. '                        ' → logprob: -10.7504243850708
    7. '<|end|>' → logprob: -10.8754243850708
    8. '           ' → logprob: -11.2504243850708
    9. '```' → logprob: -11.7504243850708
    10. ' heap' → logprob: -11.8754243850708

Token 278: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.000553151941858232
    2. ' heap' → logprob: -7.500553131103516
    3. 'he' → logprob: -15.750553131103516
    4. '                       ' → logprob: -20.250553131103516
    5. '(heap' → logprob: -20.875553131103516
    6. '```' → logprob: -21.250553131103516
    7. '                   ' → logprob: -21.625553131103516
    8. '           ' → logprob: -21.750553131103516
    9. '               ' → logprob: -21.750553131103516
    10. '                           ' → logprob: -22.000553131103516

Token 279: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -5.512236498361744e-07
    2. 'p' → logprob: -15.125000953674316
    3. 'push' → logprob: -15.500000953674316
    4. 'h' → logprob: -18.375
    5. 'he' → logprob: -18.375
    6. '.push' → logprob: -18.875
    7. '```' → logprob: -18.875
    8. '.he' → logprob: -19.125
    9. 'app' → logprob: -19.125
    10. 'ush' → logprob: -19.875

Token 280: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.0002581209992058575
    2. 'he' → logprob: -8.500258445739746
    3. '.' → logprob: -10.875258445739746
    4. '.heap' → logprob: -11.000258445739746
    5. 'app' → logprob: -12.000258445739746
    6. 'ush' → logprob: -12.250258445739746
    7. 'q' → logprob: -12.875258445739746
    8. 'heap' → logprob: -13.375258445739746
    9. '```' → logprob: -13.625258445739746
    10. '_he' → logprob: -13.875258445739746

Token 281: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.0683535037969705e-05
    2. 'ap' → logprob: -11.50001049041748
    3. 'pp' → logprob: -14.50001049041748
    4. 'appen' → logprob: -19.375011444091797
    5. 'push' → logprob: -19.500011444091797
    6. 'a' → logprob: -19.875011444091797
    7. 'p' → logprob: -20.625011444091797
    8. '_app' → logprob: -21.125011444091797
    9. '[' → logprob: -21.375011444091797
    10. '```' → logprob: -21.375011444091797

Token 282: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0034937579184770584
    2. 'app' → logprob: -6.253493785858154
    3. 'ap' → logprob: -6.503493785858154
    4. 'op' → logprob: -10.753493309020996
    5. 'p' → logprob: -11.003493309020996
    6. 'push' → logprob: -11.253493309020996
    7. 'sh' → logprob: -11.878493309020996
    8. 'pp' → logprob: -12.503493309020996
    9. 'ch' → logprob: -13.378493309020996
    10. '```' → logprob: -14.128493309020996

Token 283: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -7.896309739408025e-07
    2. 'heap' → logprob: -14.375000953674316
    3. '(' → logprob: -16.125
    4. '```' → logprob: -17.25
    5. ' heap' → logprob: -19.0
    6. '(queue' → logprob: -19.25
    7. ' (' → logprob: -19.25
    8. '.heap' → logprob: -19.75
    9. '(h' → logprob: -20.375
    10. '(
' → logprob: -20.5

Token 284: ',' (ID: 11)
  Prédit: '(heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -4.36574100604048e-06
    2. ' (' → logprob: -12.750004768371582
    3. '(' → logprob: -14.250004768371582
    4. 'heap' → logprob: -14.875004768371582
    5. ',' → logprob: -15.375004768371582
    6. ')' → logprob: -16.750003814697266
    7. ' heap' → logprob: -17.000003814697266
    8. '```' → logprob: -18.125003814697266
    9. '(graph' → logprob: -18.500003814697266
    10. '(h' → logprob: -18.875003814697266

Token 285: ' (' (ID: 350)
  Prédit: '(new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.2029978185892105
    2. ' (' → logprob: -1.7029978036880493
    3. '(' → logprob: -6.45299768447876
    4. '(n' → logprob: -13.202998161315918
    5. '(cost' → logprob: -13.452998161315918
    6. '   ' → logprob: -13.702998161315918
    7. '(next' → logprob: -13.702998161315918
    8. '((' → logprob: -14.202998161315918
    9. ' ' → logprob: -14.702998161315918
    10. '(New' → logprob: -14.827998161315918

Token 286: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -8.494741632603109e-05
    2. ' new' → logprob: -9.37508487701416
    3. '_new' → logprob: -17.125085830688477
    4. '                       ' → logprob: -17.500085830688477
    5. '```' → logprob: -17.500085830688477
    6. ')new' → logprob: -17.875085830688477
    7. '                           ' → logprob: -18.125085830688477
    8. '   ' → logprob: -18.250085830688477
    9. '	new' → logprob: -18.625085830688477
    10. '                               ' → logprob: -18.875085830688477

Token 287: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.1472419600977446e-06
    2. 'cost' → logprob: -14.125000953674316
    3. '_c' → logprob: -16.250001907348633
    4. '_COST' → logprob: -16.500001907348633
    5. ',' → logprob: -16.875001907348633
    6. ' cost' → logprob: -18.125001907348633
    7. '_' → logprob: -18.625001907348633
    8. 'Cost' → logprob: -18.750001907348633
    9. '-cost' → logprob: -19.125001907348633
    10. ' _' → logprob: -19.125001907348633

Token 288: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011910604080185294
    2. ',n' → logprob: -6.751191139221191
    3. ' ,' → logprob: -11.126191139221191
    4. ',node' → logprob: -12.376191139221191
    5. '(n' → logprob: -14.626191139221191
    6. ',x' → logprob: -14.626191139221191
    7. ')' → logprob: -16.001190185546875
    8. ',next' → logprob: -16.251190185546875
    9. 'n' → logprob: -16.376190185546875
    10. '[n' → logprob: -16.501190185546875

Token 289: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004079112783074379
    2. ' nxt' → logprob: -5.504079341888428
    3. ' n' → logprob: -15.37907886505127
    4. 'nx' → logprob: -15.75407886505127
    5. '[n' → logprob: -16.254079818725586
    6. '	n' → logprob: -16.254079818725586
    7. '```' → logprob: -16.629079818725586
    8. '   ' → logprob: -17.004079818725586
    9. '(n' → logprob: -17.129079818725586
    10. ' ' → logprob: -17.629079818725586

Token 290: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00020830852736253291
    2. '))
' → logprob: -8.500207901000977
    3. ')' → logprob: -13.000207901000977
    4. ' ))' → logprob: -13.125207901000977
    5. ')))' → logprob: -15.750207901000977
    6. '))

' → logprob: -16.250207901000977
    7. '));' → logprob: -16.875207901000977
    8. '       ' → logprob: -17.000207901000977
    9. '                       ' → logprob: -17.250207901000977
    10. ' ' → logprob: -17.375207901000977

Token 291: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024221625179052353
    2. 'else' → logprob: -3.774221658706665
    3. ' else' → logprob: -7.649221420288086
    4. 'elif' → logprob: -8.024221420288086
    5. '   ' → logprob: -9.899221420288086
    6. '           ' → logprob: -10.149221420288086
    7. '```' → logprob: -10.774221420288086
    8. ')' → logprob: -10.774221420288086
    9. '               ' → logprob: -10.899221420288086
    10. '<|end|>' → logprob: -11.899221420288086

Token 292: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.47046834230422974
    2. '       ' → logprob: -1.095468282699585
    3. ' else' → logprob: -3.220468282699585
    4. 'elif' → logprob: -7.095468521118164
    5. '	else' → logprob: -9.845468521118164
    6. '   ' → logprob: -10.345468521118164
    7. ' elif' → logprob: -10.970468521118164
    8. ')' → logprob: -11.470468521118164
    9. '```' → logprob: -12.470468521118164
    10. '           ' → logprob: -12.720468521118164

Token 293: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25205981731414795
    2. ':
' → logprob: -1.502059817314148
    3. '           ' → logprob: -9.502059936523438
    4. '       ' → logprob: -10.502059936523438
    5. ' :
' → logprob: -11.502059936523438
    6. ':
' → logprob: -11.627059936523438
    7. ' :' → logprob: -12.252059936523438
    8. '        ' → logprob: -13.252059936523438
    9. ':

' → logprob: -13.502059936523438
    10. '):
' → logprob: -14.377059936523438

Token 294: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026937808841466904
    2. ' dist' → logprob: -3.90193772315979
    3. 'dist' → logprob: -5.651937961578369
    4. '       ' → logprob: -6.026937961578369
    5. '   ' → logprob: -9.151937484741211
    6. '```' → logprob: -9.651937484741211
    7. '               ' → logprob: -9.776937484741211
    8. '          ' → logprob: -9.776937484741211
    9. '
' → logprob: -10.401937484741211
    10. '         ' → logprob: -10.526937484741211

Token 295: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.010334502905607224
    2. ' dist' → logprob: -4.635334491729736
    3. '           ' → logprob: -7.510334491729736
    4. '       ' → logprob: -10.885334968566895
    5. '	dist' → logprob: -12.385334968566895
    6. '   ' → logprob: -12.510334968566895
    7. '               ' → logprob: -12.885334968566895
    8. '_dist' → logprob: -14.385334968566895
    9. '.dist' → logprob: -15.010334968566895
    10. 'distance' → logprob: -15.635334968566895

Token 296: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029756737872958183
    2. '=' → logprob: -3.529756784439087
    3. '=[' → logprob: -12.904756546020508
    4. '[' → logprob: -13.154756546020508
    5. ' =[' → logprob: -13.904756546020508
    6. ' ' → logprob: -15.029756546020508
    7. '   ' → logprob: -15.154756546020508
    8. '```' → logprob: -16.529756546020508
    9. ',' → logprob: -17.029756546020508
    10. ' [' → logprob: -17.029756546020508

Token 297: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0019305398454889655
    2. ' [' → logprob: -6.2519307136535645
    3. '[int' → logprob: -13.501930236816406
    4. '[f' → logprob: -15.876930236816406
    5. '   ' → logprob: -16.501930236816406
    6. '[array' → logprob: -17.001930236816406
    7. '[df' → logprob: -17.626930236816406
    8. '[field' → logprob: -17.876930236816406
    9. ' ' → logprob: -17.876930236816406
    10. '[len' → logprob: -18.001930236816406

Token 298: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -4.723352049040841e-06
    2. '(float' → logprob: -12.500004768371582
    3. ' float' → logprob: -14.000004768371582
    4. '<float' → logprob: -18.000003814697266
    5. ',float' → logprob: -18.125003814697266
    6. '[' → logprob: -18.750003814697266
    7. 'flo' → logprob: -19.000003814697266
    8. '=float' → logprob: -19.375003814697266
    9. '.float' → logprob: -19.500003814697266
    10. 'int' → logprob: -19.625003814697266

Token 299: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -4.60414821645827e-06
    2. ' ('' → logprob: -12.750004768371582
    3. '(' → logprob: -13.500004768371582
    4. ''s' → logprob: -15.125004768371582
    5. '("' → logprob: -17.625003814697266
    6. '(in' → logprob: -18.500003814697266
    7. ''in' → logprob: -18.750003814697266
    8. '   ' → logprob: -19.500003814697266
    9. ' ' → logprob: -19.625003814697266
    10. '['' → logprob: -19.875003814697266

Token 300: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: 0.0
    2. ''in' → logprob: -17.625
    3. ''' → logprob: -18.125
    4. ' inf' → logprob: -19.75
    5. 'float' → logprob: -20.5
    6. '')' → logprob: -20.75
    7. '-inf' → logprob: -20.875
    8. '.inf' → logprob: -21.375
    9. 'in' → logprob: -21.875
    10. '```' → logprob: -22.0

Token 301: '')]' (ID: 94377)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.4203895032405853
    2. '')]' → logprob: -1.1703895330429077
    3. ']' → logprob: -3.545389413833618
    4. '('' → logprob: -6.295389652252197
    5. '']' → logprob: -6.545389652252197
    6. ')' → logprob: -7.795389652252197
    7. ']*' → logprob: -8.545389175415039
    8. '')' → logprob: -9.295389175415039
    9. ''' → logprob: -9.295389175415039
    10. ']*(' → logprob: -11.920389175415039

Token 302: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.03807133063673973
    2. '*' → logprob: -3.288071393966675
    3. '*(' → logprob: -10.663071632385254
    4. '   ' → logprob: -12.538071632385254
    5. '            ' → logprob: -14.163071632385254
    6. ')' → logprob: -14.788071632385254
    7. ' ' → logprob: -14.913071632385254
    8. ']' → logprob: -15.163071632385254
    9. '    ' → logprob: -15.288071632385254
    10. '        ' → logprob: -15.538071632385254

Token 303: ' (' (ID: 350)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.02324839122593403
    2. ' (' → logprob: -3.7732484340667725
    3. '   ' → logprob: -13.523248672485352
    4. '           ' → logprob: -13.648248672485352
    5. 'm' → logprob: -16.52324867248535
    6. '    ' → logprob: -16.64824867248535
    7. '  ' → logprob: -16.77324867248535
    8. ' m' → logprob: -17.02324867248535
    9. '        ' → logprob: -17.02324867248535
    10. '       ' → logprob: -17.64824867248535

Token 304: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.006720229052007198
    2. '(m' → logprob: -5.006720066070557
    3. ' m' → logprob: -12.631720542907715
    4. '   ' → logprob: -14.131720542907715
    5. ' (' → logprob: -14.506720542907715
    6. '           ' → logprob: -16.0067195892334
    7. '[m' → logprob: -16.3817195892334
    8. '	m' → logprob: -16.5067195892334
    9. ')m' → logprob: -17.1317195892334
    10. '       ' → logprob: -17.8817195892334

Token 305: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.512236498361744e-07
    2. ' +' → logprob: -15.125000953674316
    3. '1' → logprob: -16.375
    4. '+
' → logprob: -16.625
    5. '+m' → logprob: -17.0
    6. ')+' → logprob: -17.75
    7. '```' → logprob: -18.125
    8. 'm' → logprob: -18.625
    9. ']+' → logprob: -19.125
    10. '[' → logprob: -19.25

Token 306: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012320445966906846
    2. '(' → logprob: -10.000123023986816
    3. '(m' → logprob: -10.500123023986816
    4. '+' → logprob: -10.625123023986816
    5. ' ' → logprob: -10.875123023986816
    6. ' (' → logprob: -13.500123023986816
    7. 'm' → logprob: -13.875123023986816
    8. ')' → logprob: -13.875123023986816
    9. '```' → logprob: -13.875123023986816
    10. '   ' → logprob: -14.250123023986816

Token 307: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.027452660724520683
    2. '           ' → logprob: -3.7774527072906494
    3. ')' → logprob: -5.52745246887207
    4. ')
' → logprob: -8.90245246887207
    5. 'dist' → logprob: -9.40245246887207
    6. '       ' → logprob: -13.15245246887207
    7. ']
' → logprob: -14.40245246887207
    8. '   ' → logprob: -15.15245246887207
    9. '               ' → logprob: -15.65245246887207
    10. '')
' → logprob: -15.90245246887207

Token 308: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012537204660475254
    2. 'dist' → logprob: -4.387537002563477
    3. ' dist' → logprob: -11.262537002563477
    4. '       ' → logprob: -12.012537002563477
    5. '   ' → logprob: -12.137537002563477
    6. '               ' → logprob: -13.762537002563477
    7. '          ' → logprob: -14.262537002563477
    8. '<|end|>' → logprob: -15.012537002563477
    9. '	dist' → logprob: -15.137537002563477
    10. '_dist' → logprob: -15.512537002563477

Token 309: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -9.555654105497524e-05
    2. '           ' → logprob: -9.37509536743164
    3. ' dist' → logprob: -11.62509536743164
    4. '   ' → logprob: -13.75009536743164
    5. '       ' → logprob: -14.62509536743164
    6. 'time' → logprob: -16.00009536743164
    7. '	dist' → logprob: -17.62509536743164
    8. '               ' → logprob: -18.00009536743164
    9. 'd' → logprob: -18.50009536743164
    10. '          ' → logprob: -18.62509536743164

Token 310: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.048892900347709656
    2. '[q' → logprob: -3.0488929748535156
    3. '[r' → logprob: -9.048892974853516
    4. '[' → logprob: -9.173892974853516
    5. '=' → logprob: -10.298892974853516
    6. ' =' → logprob: -11.298892974853516
    7. '=p' → logprob: -11.673892974853516
    8. 'p' → logprob: -11.798892974853516
    9. '[t' → logprob: -12.048892974853516
    10. '   ' → logprob: -12.923892974853516

Token 311: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03346080705523491
    2. '[p' → logprob: -4.28346061706543
    3. ')' → logprob: -4.53346061706543
    4. ']=' → logprob: -5.40846061706543
    5. '=' → logprob: -5.65846061706543
    6. 'p' → logprob: -8.65846061706543
    7. ')=' → logprob: -9.40846061706543
    8. '   ' → logprob: -9.90846061706543
    9. ' =' → logprob: -9.90846061706543
    10. ' ' → logprob: -11.53346061706543

Token 312: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889308780431747
    2. ' =' → logprob: -2.5788931846618652
    3. '[p' → logprob: -13.953892707824707
    4. '   ' → logprob: -13.953892707824707
    5. '[' → logprob: -14.578892707824707
    6. '           ' → logprob: -14.953892707824707
    7. ']' → logprob: -15.578892707824707
    8. ']=' → logprob: -15.828892707824707
    9. '=p' → logprob: -15.828892707824707
    10. ' ' → logprob: -15.953892707824707

Token 313: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -17.125009536743164
    4. '```' → logprob: -18.625009536743164
    5. '۰' → logprob: -19.000009536743164
    6. 'r' → logprob: -19.000009536743164
    7. '[' → logprob: -19.875009536743164
    8. 't' → logprob: -19.875009536743164
    9. '=' → logprob: -19.875009536743164
    10. '``' → logprob: -20.000009536743164

Token 314: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -17.5000057220459
    4. '۰' → logprob: -18.0625057220459
    5. 't' → logprob: -18.1250057220459
    6. 'r' → logprob: -18.6250057220459
    7. 'time' → logprob: -19.4375057220459
    8. 'p' → logprob: -19.6250057220459
    9. '```' → logprob: -19.6250057220459
    10. 'O' → logprob: -19.6250057220459

Token 315: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005304077640175819
    2. 'heap' → logprob: -5.255303859710693
    3. '
' → logprob: -9.880304336547852
    4. ' heap' → logprob: -12.380304336547852
    5. '```' → logprob: -12.630304336547852
    6. '          ' → logprob: -12.880304336547852
    7. '   ' → logprob: -13.005304336547852
    8. '		' → logprob: -13.005304336547852
    9. '       ' → logprob: -13.130304336547852
    10. '               ' → logprob: -13.880304336547852

Token 316: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009773443453013897
    2. 'heap' → logprob: -4.634773254394531
    3. '       ' → logprob: -12.259773254394531
    4. ' heap' → logprob: -12.509773254394531
    5. '		' → logprob: -12.884773254394531
    6. '   ' → logprob: -13.009773254394531
    7. '          ' → logprob: -13.259773254394531
    8. '               ' → logprob: -14.134773254394531
    9. '
' → logprob: -14.509773254394531
    10. '```' → logprob: -15.134773254394531

Token 317: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.0002661039761733264
    2. '           ' → logprob: -8.250266075134277
    3. ' heap' → logprob: -12.750266075134277
    4. '   ' → logprob: -13.625266075134277
    5. '       ' → logprob: -15.000266075134277
    6. '```' → logprob: -15.750266075134277
    7. 'heat' → logprob: -16.500267028808594
    8. '.heap' → logprob: -17.625267028808594
    9. '            
' → logprob: -17.750267028808594
    10. '
' → logprob: -17.750267028808594

Token 318: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026369968429207802
    2. '=' → logprob: -3.901370048522949
    3. 'q' → logprob: -5.151370048522949
    4. '=[' → logprob: -12.27637004852295
    5. '.append' → logprob: -12.40137004852295
    6. '=[]' → logprob: -13.02637004852295
    7. ' =[' → logprob: -13.02637004852295
    8. ' ' → logprob: -13.65137004852295
    9. '   ' → logprob: -13.77637004852295
    10. '.push' → logprob: -14.77637004852295

Token 319: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -3.5597102396423e-05
    2. ' [(' → logprob: -10.250035285949707
    3. '(' → logprob: -17.000036239624023
    4. '[' → logprob: -17.625036239624023
    5. '([(' → logprob: -17.750036239624023
    6. '[((' → logprob: -21.500036239624023
    7. '((' → logprob: -22.125036239624023
    8. '0' → logprob: -22.375036239624023
    9. '[
' → logprob: -23.750036239624023
    10. '   ' → logprob: -23.750036239624023

Token 320: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -14.000001907348633
    3. ' ' → logprob: -14.375001907348633
    4. ')' → logprob: -18.000001907348633
    5. '   ' → logprob: -18.250001907348633
    6. ' (' → logprob: -18.625001907348633
    7. '```' → logprob: -18.750001907348633
    8. '
' → logprob: -19.000001907348633
    9. '۰' → logprob: -19.250001907348633
    10. ',' → logprob: -19.375001907348633

Token 321: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.146429223008454e-05
    2. ',p' → logprob: -9.75006103515625
    3. ' ,' → logprob: -12.87506103515625
    4. 'p' → logprob: -15.00006103515625
    5. ',
' → logprob: -16.37506103515625
    6. ' p' → logprob: -16.75006103515625
    7. ' ' → logprob: -17.00006103515625
    8. ',q' → logprob: -17.00006103515625
    9. ',r' → logprob: -18.75006103515625
    10. '‌,' → logprob: -19.00006103515625

Token 322: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00010914575977949426
    2. ' p' → logprob: -9.12510871887207
    3. '<|end|>' → logprob: -15.87510871887207
    4. ' ' → logprob: -17.50010871887207
    5. '_p' → logprob: -18.37510871887207
    6. ',' → logprob: -18.37510871887207
    7. '	p' → logprob: -18.50010871887207
    8. '<p' → logprob: -18.62510871887207
    9. ',p' → logprob: -18.87510871887207
    10. ')' → logprob: -19.37510871887207

Token 323: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.1396712362766266
    2. ')' → logprob: -2.7646713256835938
    3. ')]
' → logprob: -3.2646713256835938
    4. ']' → logprob: -4.014671325683594
    5. ']
' → logprob: -5.139671325683594
    6. ')
' → logprob: -5.264671325683594
    7. '           ' → logprob: -10.889671325683594
    8. '])' → logprob: -11.264671325683594
    9. '       ' → logprob: -11.514671325683594
    10. ')]
' → logprob: -11.889671325683594

Token 324: '           ' (ID: 352)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.9295759797096252
    2. '   ' → logprob: -1.1795759201049805
    3. ' while' → logprob: -1.4295759201049805
    4. '           ' → logprob: -3.6795759201049805
    5. '       ' → logprob: -3.9295759201049805
    6. '	while' → logprob: -4.3045759201049805
    7. '	   ' → logprob: -11.05457592010498
    8. '    ' → logprob: -11.55457592010498
    9. ' ' → logprob: -11.67957592010498
    10. '               ' → logprob: -11.80457592010498

Token 325: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.017402570694684982
    2. ' while' → logprob: -4.267402648925781
    3. '       ' → logprob: -6.267402648925781
    4. '           ' → logprob: -6.767402648925781
    5. '   ' → logprob: -8.642402648925781
    6. '	while' → logprob: -11.767402648925781
    7. '               ' → logprob: -13.267402648925781
    8. 'While' → logprob: -16.89240264892578
    9. '     ' → logprob: -17.39240264892578
    10. '
' → logprob: -17.64240264892578

Token 326: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.008617766201496124
    2. ' heap' → logprob: -4.758617877960205
    3. '(heap' → logprob: -12.758617401123047
    4. '.heap' → logprob: -15.258617401123047
    5. 'True' → logprob: -16.633617401123047
    6. 'Heap' → logprob: -17.883617401123047
    7. ' ' → logprob: -18.383617401123047
    8. '_heap' → logprob: -18.633617401123047
    9. 'he' → logprob: -18.758617401123047
    10. '
' → logprob: -19.258617401123047

Token 327: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.038119640201330185
    2. ':
' → logprob: -3.2881195545196533
    3. ',' → logprob: -10.288119316101074
    4. '):
' → logprob: -11.538119316101074
    5. ':
' → logprob: -11.663119316101074
    6. '[' → logprob: -11.913119316101074
    7. '):' → logprob: -12.663119316101074
    8. '=' → logprob: -12.913119316101074
    9. ':

' → logprob: -13.163119316101074
    10. '               ' → logprob: -13.538119316101074

Token 328: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007080250070430338
    2. 'cost' → logprob: -8.250707626342773
    3. '   ' → logprob: -8.500707626342773
    4. ' cost' → logprob: -9.625707626342773
    5. '	           ' → logprob: -9.875707626342773
    6. '                ' → logprob: -10.250707626342773
    7. '                   ' → logprob: -10.625707626342773
    8. '           ' → logprob: -10.750707626342773
    9. '              ' → logprob: -12.000707626342773
    10. '       ' → logprob: -12.000707626342773

Token 329: ' time' (ID: 1058)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.07038740813732147
    2. 'time' (adapté à ' time') → logprob: -2.820387363433838
    3. ' cost' → logprob: -4.945387363433838
    4. ' time' → logprob: -7.320387363433838
    5. '               ' → logprob: -7.445387363433838
    6. 't' → logprob: -11.695387840270996
    7. '           ' → logprob: -12.695387840270996
    8. 'c' → logprob: -13.070387840270996
    9. '                   ' → logprob: -13.320387840270996
    10. '              ' → logprob: -13.570387840270996

Token 330: '_,' (ID: 14152)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1160349458805285e-05
    2. ' ,' → logprob: -11.750011444091797
    3. 'cost' → logprob: -13.000011444091797
    4. ',time' → logprob: -15.125011444091797
    5. '_,' → logprob: -15.250011444091797
    6. ' cost' → logprob: -16.000011444091797
    7. '_cost' → logprob: -16.250011444091797
    8. ',c' → logprob: -16.375011444091797
    9. '‌,' → logprob: -17.000011444091797
    10. ',
' → logprob: -17.500011444091797

Token 331: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.2503882348537445
    2. ' cost' → logprob: -2.3753881454467773
    3. 'node' → logprob: -2.6253881454467773
    4. ' time' → logprob: -3.5003881454467773
    5. 'cost' → logprob: -4.250388145446777
    6. 'time' → logprob: -4.750388145446777
    7. ' dist' → logprob: -6.625388145446777
    8. ' t' → logprob: -6.875388145446777
    9. 't' → logprob: -8.250388145446777
    10. 'dist' → logprob: -9.125388145446777

Token 332: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692831456661224
    2. '=' → logprob: -2.1269283294677734
    3. ' ' → logprob: -15.626928329467773
    4. ',' → logprob: -16.876928329467773
    5. ')' → logprob: -17.376928329467773
    6. '   ' → logprob: -17.751928329467773
    7. ')=' → logprob: -18.126928329467773
    8. ' =
' → logprob: -19.251928329467773
    9. '＝' → logprob: -19.251928329467773
    10. '=
' → logprob: -19.876928329467773

Token 333: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.00020354038861114532
    2. ' heap' → logprob: -8.500203132629395
    3. '.heap' → logprob: -19.50020408630371
    4. '(heap' → logprob: -20.00020408630371
    5. 'he' → logprob: -20.50020408630371
    6. '   ' → logprob: -20.75020408630371
    7. '
' → logprob: -21.37520408630371
    8. '_heap' → logprob: -21.37520408630371
    9. 'Heap' → logprob: -22.50020408630371
    10. 'queue' → logprob: -22.75020408630371

Token 334: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.9361264946837764e-07
    2. '.q' → logprob: -16.5
    3. '.' → logprob: -16.875
    4. '.he' → logprob: -16.875
    5. '   ' → logprob: -17.75
    6. '.heap' → logprob: -18.0
    7. 'qu' → logprob: -18.5
    8. 'p' → logprob: -18.5
    9. 'heap' → logprob: -18.5
    10. '       ' → logprob: -18.625

Token 335: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -4.644463479053229e-05
    2. 'he' → logprob: -10.125046730041504
    3. '.heap' → logprob: -12.375046730041504
    4. 'q' → logprob: -14.000046730041504
    5. ' he' → logprob: -14.750046730041504
    6. '.q' → logprob: -15.250046730041504
    7. '.' → logprob: -15.250046730041504
    8. '```' → logprob: -16.875045776367188
    9. '>.' → logprob: -17.000045776367188
    10. '_he' → logprob: -17.125045776367188

Token 336: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -2.7968066206085496e-05
    2. 'pp' → logprob: -10.500027656555176
    3. 'ap' → logprob: -14.750027656555176
    4. 'pop' → logprob: -18.250028610229492
    5. 'op' → logprob: -18.375028610229492
    6. '[' → logprob: -19.125028610229492
    7. 'p' → logprob: -19.125028610229492
    8. 'q' → logprob: -19.500028610229492
    9. 'opp' → logprob: -19.875028610229492
    10. 'e' → logprob: -20.375028610229492

Token 337: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.06310194730758667
    2. 'pp' → logprob: -3.6881020069122314
    3. 'ush' → logprob: -3.8131020069122314
    4. 'app' → logprob: -4.313101768493652
    5. 'p' → logprob: -8.063101768493652
    6. 'pop' → logprob: -8.063101768493652
    7. 'ap' → logprob: -10.813101768493652
    8. '```' → logprob: -12.688101768493652
    9. 'he' → logprob: -13.063101768493652
    10. 'push' → logprob: -13.688101768493652

Token 338: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -4.842555426876061e-06
    2. 'heap' → logprob: -12.250004768371582
    3. ' heap' → logprob: -17.7500057220459
    4. '(graph' → logprob: -18.5000057220459
    5. '.heap' → logprob: -19.0000057220459
    6. '_heap' → logprob: -19.6250057220459
    7. '(' → logprob: -20.1250057220459
    8. '(queue' → logprob: -20.2500057220459
    9. '(h' → logprob: -21.5000057220459
    10. '```' → logprob: -21.6250057220459

Token 339: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.014287968166172504
    2. ')' → logprob: -4.264287948608398
    3. '               ' → logprob: -9.139287948608398
    4. ')
' → logprob: -11.014287948608398
    5. ')

' → logprob: -15.389287948608398
    6. '           ' → logprob: -15.389287948608398
    7. ' )
' → logprob: -17.0142879486084
    8. '                   ' → logprob: -17.7642879486084
    9. '):
' → logprob: -17.7642879486084
    10. '
' → logprob: -18.6392879486084

Token 340: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00012047011114191264
    2. 'if' → logprob: -9.125120162963867
    3. ' if' → logprob: -12.250120162963867
    4. '           ' → logprob: -12.250120162963867
    5. '              ' → logprob: -14.000120162963867
    6. '                   ' → logprob: -14.625120162963867
    7. '       ' → logprob: -15.750120162963867
    8. '   ' → logprob: -16.000120162963867
    9. '<|end|>' → logprob: -16.000120162963867
    10. '	           ' → logprob: -16.500120162963867

Token 341: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.051691826432943344
    2. '               ' → logprob: -3.301691770553589
    3. ' if' → logprob: -4.301692008972168
    4. '           ' → logprob: -12.051692008972168
    5. '   ' → logprob: -12.426692008972168
    6. '                   ' → logprob: -13.176692008972168
    7. '       ' → logprob: -15.676692008972168
    8. ' ' → logprob: -16.67669105529785
    9. '	if' → logprob: -16.92669105529785
    10. '              ' → logprob: -17.05169105529785

Token 342: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.02324652671813965
    2. ' dist' → logprob: -3.7732465267181396
    3. '	dist' → logprob: -14.398246765136719
    4. '   ' → logprob: -15.398246765136719
    5. '(dist' → logprob: -15.648246765136719
    6. '_dist' → logprob: -16.89824676513672
    7. '.dist' → logprob: -17.77324676513672
    8. 'time' → logprob: -17.89824676513672
    9. 'Dist' → logprob: -18.02324676513672
    10. ' ' → logprob: -18.14824676513672

Token 343: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: 0.0
    2. 'node' → logprob: -18.5
    3. '(node' → logprob: -19.375
    4. '=node' → logprob: -21.5
    5. ' node' → logprob: -22.125
    6. '	node' → logprob: -22.25
    7. '```' → logprob: -22.75
    8. '[' → logprob: -22.75
    9. '<Node' → logprob: -22.875
    10. ',node' → logprob: -22.875

Token 344: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0788925439119339
    2. '<' → logprob: -2.578892469406128
    3. '[' → logprob: -14.328892707824707
    4. '<|end|>' → logprob: -14.703892707824707
    5. '<class' → logprob: -15.328892707824707
    6. ')' → logprob: -15.328892707824707
    7. '<n' → logprob: -15.578892707824707
    8. '<data' → logprob: -15.828892707824707
    9. ')<' → logprob: -15.953892707824707
    10. ' ' → logprob: -16.07889175415039

Token 345: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.07889044284820557
    2. ' <' → logprob: -2.578890323638916
    3. '<n' → logprob: -15.453890800476074
    4. '<class' → logprob: -16.203889846801758
    5. '<data' → logprob: -16.328889846801758
    6. '<int' → logprob: -16.453889846801758
    7. '<size' → logprob: -16.578889846801758
    8. ' ' → logprob: -17.203889846801758
    9. '<com' → logprob: -17.703889846801758
    10. '<num' → logprob: -17.703889846801758

Token 346: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.0031777136027812958
    2. ' time' → logprob: -5.753177642822266
    3. '	time' → logprob: -20.503177642822266
    4. ' ' → logprob: -21.003177642822266
    5. '(time' → logprob: -21.753177642822266
    6. '=time' → logprob: -22.003177642822266
    7. '_time' → logprob: -23.378177642822266
    8. '"time' → logprob: -24.003177642822266
    9. '   ' → logprob: -24.503177642822266
    10. 'Time' → logprob: -24.628177642822266

Token 347: '_' (ID: 62)
  Prédit: '_:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_:' → logprob: -0.5759581923484802
    2. '_' → logprob: -0.8259581923484802
    3. ':' → logprob: -11.075958251953125
    4. '_
' → logprob: -13.075958251953125
    5. '_time' → logprob: -14.575958251953125
    6. '_:*' → logprob: -15.700958251953125
    7. '_
' → logprob: -15.950958251953125
    8. ' :' → logprob: -15.950958251953125
    9. '_,' → logprob: -16.825958251953125
    10. '_)' → logprob: -16.950958251953125

Token 348: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.07384346425533295
    2. '                   ' → logprob: -3.323843479156494
    3. ':' → logprob: -3.698843479156494
    4. '               ' → logprob: -4.698843479156494
    5. '           ' → logprob: -6.823843479156494
    6. 'continue' → logprob: -9.198843002319336
    7. '                       ' → logprob: -10.573843002319336
    8. ' continue' → logprob: -10.573843002319336
    9. '):
' → logprob: -10.698843002319336
    10. '       ' → logprob: -11.073843002319336

Token 349: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0009643423254601657
    2. '               ' → logprob: -8.250964164733887
    3. 'continue' → logprob: -8.250964164733887
    4. ' continue' → logprob: -8.375964164733887
    5. '           ' → logprob: -8.625964164733887
    6. '       ' → logprob: -10.750964164733887
    7. '                       ' → logprob: -11.750964164733887
    8. '   ' → logprob: -13.625964164733887
    9. '```' → logprob: -14.500964164733887
    10. '                  ' → logprob: -15.000964164733887

Token 350: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.1556670218706131
    2. ' continue' → logprob: -2.1556670665740967
    3. '                   ' → logprob: -3.6556670665740967
    4. '               ' → logprob: -6.155666828155518
    5. '                       ' → logprob: -8.405667304992676
    6. '	continue' → logprob: -9.655667304992676
    7. '       ' → logprob: -10.155667304992676
    8. '           ' → logprob: -10.530667304992676
    9. '   ' → logprob: -12.280667304992676
    10. '_continue' → logprob: -12.655667304992676

Token 351: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -6.511406809295295e-06
    2. '           ' → logprob: -13.000006675720215
    3. 'if' → logprob: -13.375006675720215
    4. '       ' → logprob: -14.125006675720215
    5. '              ' → logprob: -14.375006675720215
    6. '                   ' → logprob: -14.625006675720215
    7. '
' → logprob: -15.000006675720215
    8. '                ' → logprob: -15.375006675720215
    9. '```' → logprob: -15.875006675720215
    10. 'for' → logprob: -17.0000057220459

Token 352: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1398757123970427e-05
    2. '           ' → logprob: -12.125011444091797
    3. '       ' → logprob: -12.875011444091797
    4. 'if' → logprob: -13.625011444091797
    5. '                   ' → logprob: -13.875011444091797
    6. ' if' → logprob: -14.750011444091797
    7. '```' → logprob: -14.750011444091797
    8. '              ' → logprob: -15.750011444091797
    9. '<|end|>' → logprob: -16.125011444091797
    10. '                       ' → logprob: -16.375011444091797

Token 353: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.38746440410614014
    2. 'if' (adapté à ' if') → logprob: -1.1374644041061401
    3. ' if' → logprob: -7.63746452331543
    4. '           ' → logprob: -9.38746452331543
    5. '                   ' → logprob: -11.26246452331543
    6. '   ' → logprob: -12.01246452331543
    7. '       ' → logprob: -13.01246452331543
    8. '              ' → logprob: -13.26246452331543
    9. '```' → logprob: -13.76246452331543
    10. '                ' → logprob: -13.76246452331543

Token 354: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.07889111340045929
    2. 'node' → logprob: -2.5788910388946533
    3. '(node' → logprob: -14.078890800476074
    4. '[node' → logprob: -14.828890800476074
    5. '	node' → logprob: -16.20389175415039
    6. ',node' → logprob: -17.45389175415039
    7. 'Node' → logprob: -17.57889175415039
    8. '=node' → logprob: -17.70389175415039
    9. '.node' → logprob: -18.32889175415039
    10. '_node' → logprob: -18.57889175415039

Token 355: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.014163747429847717
    2. '==' → logprob: -4.264163970947266
    3. ' =' → logprob: -16.764163970947266
    4. '=' → logprob: -17.139163970947266
    5. ')==' → logprob: -17.389163970947266
    6. ' ' → logprob: -18.014163970947266
    7. ' ' → logprob: -18.264163970947266
    8. ')' → logprob: -18.389163970947266
    9. '()==' → logprob: -18.639163970947266
    10. '==
' → logprob: -19.014163970947266

Token 356: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.6931487321853638
    2. ' q' → logprob: -0.6931487321853638
    3. '	q' → logprob: -13.943148612976074
    4. ' ' → logprob: -15.568148612976074
    5. '<|end|>' → logprob: -15.568148612976074
    6. ' ' → logprob: -16.06814956665039
    7. '[q' → logprob: -16.19314956665039
    8. '   ' → logprob: -17.56814956665039
    9. '*q' → logprob: -17.94314956665039
    10. '?q' → logprob: -17.94314956665039

Token 357: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.023391760885715485
    2. ':' → logprob: -4.0233917236328125
    3. '                   ' → logprob: -5.2733917236328125
    4. '               ' → logprob: -10.148391723632812
    5. '):
' → logprob: -10.148391723632812
    6. '           ' → logprob: -11.398391723632812
    7. '                       ' → logprob: -12.398391723632812
    8. '():
' → logprob: -13.773391723632812
    9. ':

' → logprob: -13.773391723632812
    10. '                  ' → logprob: -13.773391723632812

Token 358: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00897757988423109
    2. 'print' → logprob: -4.75897741317749
    3. ' print' → logprob: -8.383977890014648
    4. '               ' → logprob: -9.133977890014648
    5. '           ' → logprob: -11.383977890014648
    6. '                       ' → logprob: -11.758977890014648
    7. '   ' → logprob: -12.883977890014648
    8. '                  ' → logprob: -13.258977890014648
    9. '       ' → logprob: -13.758977890014648
    10. '                    ' → logprob: -14.508977890014648

Token 359: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00037263904232531786
    2. ' print' → logprob: -8.000372886657715
    3. '                   ' → logprob: -10.250372886657715
    4. '               ' → logprob: -13.500372886657715
    5. '   ' → logprob: -15.750372886657715
    6. '```' → logprob: -16.1253719329834
    7. '           ' → logprob: -16.7503719329834
    8. '       ' → logprob: -17.0003719329834
    9. '                       ' → logprob: -17.2503719329834
    10. '	print' → logprob: -18.1253719329834

Token 360: '(time' (ID: 19192)
  Prédit: '(time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(time' → logprob: -0.04870534688234329
    2. 'time' → logprob: -3.0487053394317627
    3. ' time' → logprob: -9.048705101013184
    4. '	time' → logprob: -15.673705101013184
    5. '"time' → logprob: -16.2987060546875
    6. ',time' → logprob: -16.2987060546875
    7. '=time' → logprob: -17.0487060546875
    8. 'Time' → logprob: -17.2987060546875
    9. '(' → logprob: -17.5487060546875
    10. ' (' → logprob: -18.4237060546875

Token 361: '_)
' (ID: 58066)
  Prédit: '_)'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_)' → logprob: -0.16073665022850037
    2. '_)
' → logprob: -1.9107366800308228
    3. '_' → logprob: -7.660736560821533
    4. ')' → logprob: -10.285737037658691
    5. '_
' → logprob: -12.410737037658691
    6. ')
' → logprob: -13.410737037658691
    7. '_,' → logprob: -13.785737037658691
    8. '_time' → logprob: -15.660737037658691
    9. '_);
' → logprob: -16.035736083984375
    10. '_]' → logprob: -16.535736083984375

Token 362: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.3902033970225602e-05
    2. '               ' → logprob: -12.000014305114746
    3. '           ' → logprob: -12.125014305114746
    4. '                       ' → logprob: -14.250014305114746
    5. '       ' → logprob: -14.375014305114746
    6. '                  ' → logprob: -15.375014305114746
    7. '   ' → logprob: -15.500014305114746
    8. 'break' → logprob: -15.625014305114746
    9. '				' → logprob: -16.12501335144043
    10. '
' → logprob: -16.37501335144043

Token 363: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.00042090186616405845
    2. '                   ' → logprob: -8.250420570373535
    3. ' break' → logprob: -8.750420570373535
    4. '               ' → logprob: -14.250420570373535
    5. '                       ' → logprob: -14.875420570373535
    6. '	break' → logprob: -16.25042152404785
    7. '
' → logprob: -17.12542152404785
    8. '           ' → logprob: -17.37542152404785
    9. '   ' → logprob: -17.75042152404785
    10. '       ' → logprob: -18.75042152404785

Token 364: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0032848981209099293
    2. 'for' → logprob: -5.753284931182861
    3. ' for' → logprob: -9.378284454345703
    4. '           ' → logprob: -10.753284454345703
    5. '              ' → logprob: -14.878284454345703
    6. '                   ' → logprob: -14.878284454345703
    7. '       ' → logprob: -15.878284454345703
    8. '```' → logprob: -16.253284454345703
    9. '			' → logprob: -16.628284454345703
    10. '   ' → logprob: -17.128284454345703

Token 365: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10121511667966843
    2. 'for' → logprob: -2.351215124130249
    3. ' for' → logprob: -7.60121488571167
    4. '           ' → logprob: -7.60121488571167
    5. '			' → logprob: -13.226215362548828
    6. '	for' → logprob: -13.351215362548828
    7. '                   ' → logprob: -13.601215362548828
    8. '       ' → logprob: -13.726215362548828
    9. '	           ' → logprob: -14.351215362548828
    10. '              ' → logprob: -14.601215362548828

Token 366: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00605950178578496
    2. ' for' → logprob: -5.256059646606445
    3. '           ' → logprob: -7.506059646606445
    4. '               ' → logprob: -8.256059646606445
    5. '       ' → logprob: -11.131059646606445
    6. '	for' → logprob: -14.381059646606445
    7. '   ' → logprob: -14.506059646606445
    8. '                   ' → logprob: -16.756059646606445
    9. '		' → logprob: -19.006059646606445
    10. ' ' → logprob: -19.256059646606445

Token 367: ' nxt' (ID: 160200)
  Prédit: ' nxt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nxt' → logprob: -0.1269354522228241
    2. 'n' → logprob: -2.1269354820251465
    3. 'nx' → logprob: -12.876935005187988
    4. '(n' → logprob: -13.251935005187988
    5. 't' → logprob: -13.501935005187988
    6. '[n' → logprob: -15.251935005187988
    7. '```' → logprob: -15.376935005187988
    8. '	n' → logprob: -15.376935005187988
    9. 'next' → logprob: -15.626935005187988
    10. 'v' → logprob: -15.751935005187988

Token 368: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.190178904333152e-05
    2. ',time' → logprob: -10.750031471252441
    3. ' ,' → logprob: -11.500031471252441
    4. '_,' → logprob: -16.625032424926758
    5. ',t' → logprob: -16.875032424926758
    6. 'time' → logprob: -16.875032424926758
    7. ',
' → logprob: -17.875032424926758
    8. '‌,' → logprob: -18.000032424926758
    9. '<|end|>' → logprob: -18.000032424926758
    10. ',n' → logprob: -19.250032424926758

Token 369: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.03584898263216019
    2. ' t' → logprob: -3.535849094390869
    3. 'c' → logprob: -5.160849094390869
    4. ' c' → logprob: -8.160848617553711
    5. 'time' → logprob: -10.535848617553711
    6. 'tt' → logprob: -12.035848617553711
    7. 'd' → logprob: -12.410848617553711
    8. '   ' → logprob: -12.785848617553711
    9. ' ' → logprob: -12.910848617553711
    10. '```' → logprob: -13.285848617553711

Token 370: '_' (ID: 62)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038062721490859985
    2. 'in' → logprob: -3.288062810897827
    3. ',' → logprob: -11.288063049316406
    4. 'n' → logprob: -12.913063049316406
    5. 'time' → logprob: -12.913063049316406
    6. ' ' → logprob: -13.663063049316406
    7. ')' → logprob: -13.913063049316406
    8. '_in' → logprob: -14.788063049316406
    9. 't' → logprob: -15.413063049316406
    10. '	in' → logprob: -15.788063049316406

Token 371: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5759537816047668
    2. ' in' → logprob: -0.8259537816047668
    3. 'time' → logprob: -12.325953483581543
    4. 'n' → logprob: -13.075953483581543
    5. ' ' → logprob: -13.075953483581543
    6. ',' → logprob: -13.325953483581543
    7. 't' → logprob: -14.075953483581543
    8. '   ' → logprob: -14.575953483581543
    9. ')' → logprob: -14.700953483581543
    10. '  ' → logprob: -15.075953483581543

Token 372: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0024758970830589533
    2. ' graph' → logprob: -6.002475738525391
    3. '	graph' → logprob: -15.87747573852539
    4. '   ' → logprob: -17.00247573852539
    5. '(graph' → logprob: -18.37747573852539
    6. 'Graph' → logprob: -18.50247573852539
    7. '_graph' → logprob: -19.25247573852539
    8. ' ' → logprob: -19.62747573852539
    9. '           ' → logprob: -20.00247573852539
    10. '```' → logprob: -20.62747573852539

Token 373: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -5.512236498361744e-07
    2. 'time' → logprob: -14.500000953674316
    3. '_cost' → logprob: -19.25
    4. '_times' → logprob: -20.375
    5. ' time' → logprob: -20.75
    6. '"time' → logprob: -21.125
    7. '_t' → logprob: -21.875
    8. '_tim' → logprob: -22.0
    9. '_' → logprob: -22.125
    10. 'Time' → logprob: -22.375

Token 374: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -6.704273118884885e-07
    2. 'node' → logprob: -14.375000953674316
    3. '(node' → logprob: -19.375
    4. '[' → logprob: -19.875
    5. '[n' → logprob: -20.25
    6. ' [' → logprob: -20.25
    7. '[user' → logprob: -21.625
    8. '=node' → logprob: -21.625
    9. ' node' → logprob: -21.875
    10. '[now' → logprob: -22.125

Token 375: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.8103829622268677
    2. ':' → logprob: -1.1853829622268677
    3. ']:
' → logprob: -1.8103829622268677
    4. ':
' → logprob: -3.060382843017578
    5. '):' → logprob: -3.810382843017578
    6. '):
' → logprob: -4.310382843017578
    7. '               ' → logprob: -6.310382843017578
    8. '                   ' → logprob: -6.685382843017578
    9. ']' → logprob: -8.560382843017578
    10. '           ' → logprob: -8.935382843017578

Token 376: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00016468366084154695
    2. ' new' → logprob: -10.000164985656738
    3. 'new' → logprob: -10.000164985656738
    4. '               ' → logprob: -11.000164985656738
    5. '                       ' → logprob: -11.000164985656738
    6. '   ' → logprob: -11.375164985656738
    7. '                  ' → logprob: -12.000164985656738
    8. ':' → logprob: -12.375164985656738
    9. '                    ' → logprob: -12.750164985656738
    10. '	               ' → logprob: -13.000164985656738

Token 377: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.08099506795406342
    2. 'new' (adapté à ' new') → logprob: -2.5809950828552246
    3. '                   ' → logprob: -6.205995082855225
    4. '                       ' → logprob: -9.580994606018066
    5. '                    ' → logprob: -12.580994606018066
    6. '   ' → logprob: -12.955994606018066
    7. '               ' → logprob: -13.080994606018066
    8. '	new' → logprob: -13.205994606018066
    9. ' time' → logprob: -13.455994606018066
    10. '
' → logprob: -13.705994606018066

Token 378: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.026503244414925575
    2. '_cost' → logprob: -3.651503324508667
    3. '_' → logprob: -8.776503562927246
    4. 'time' → logprob: -11.026503562927246
    5. '_code' → logprob: -11.526503562927246
    6. ' _' → logprob: -11.651503562927246
    7. '_times' → logprob: -12.776503562927246
    8. ' time' → logprob: -13.651503562927246
    9. '_dist' → logprob: -13.901503562927246
    10. 'cost' → logprob: -13.901503562927246

Token 379: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407716512680054
    2. ' =' → logprob: -0.9740771651268005
    3. '=time' → logprob: -15.474077224731445
    4. ' ' → logprob: -18.349077224731445
    5. '＝' → logprob: -18.474077224731445
    6. '                   ' → logprob: -18.599077224731445
    7. '   ' → logprob: -19.224077224731445
    8. '    ' → logprob: -19.474077224731445
    9. '                    ' → logprob: -19.474077224731445
    10. '<|end|>' → logprob: -19.474077224731445

Token 380: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.5759401917457581
    2. ' time' → logprob: -0.8259401917457581
    3. '(time' → logprob: -15.325940132141113
    4. '   ' → logprob: -15.575940132141113
    5. '	time' → logprob: -15.575940132141113
    6. ' ' → logprob: -16.45094108581543
    7. '=time' → logprob: -16.95094108581543
    8. 't' → logprob: -16.95094108581543
    9. '                   ' → logprob: -17.45094108581543
    10. '"time' → logprob: -17.45094108581543

Token 381: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.000145137935760431
    2. '+' → logprob: -8.875144958496094
    3. ' +' → logprob: -12.250144958496094
    4. '_
' → logprob: -15.375144958496094
    5. ' _' → logprob: -16.500144958496094
    6. '_
' → logprob: -17.125144958496094
    7. '_

' → logprob: -17.375144958496094
    8. '_=' → logprob: -17.375144958496094
    9. '_,' → logprob: -17.625144958496094
    10. '```' → logprob: -19.000144958496094

Token 382: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.575944185256958
    2. '+' → logprob: -0.825944185256958
    3. '+t' → logprob: -12.325943946838379
    4. ' ' → logprob: -15.450943946838379
    5. ' ' → logprob: -17.075944900512695
    6. '＋' → logprob: -17.700944900512695
    7. '+
' → logprob: -18.700944900512695
    8. ' +
' → logprob: -18.700944900512695
    9. ' plus' → logprob: -18.950944900512695
    10. ')+' → logprob: -19.575944900512695

Token 383: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0067154900170862675
    2. ' t' → logprob: -5.006715297698975
    3. '   ' → logprob: -16.881715774536133
    4. '`t' → logprob: -17.631715774536133
    5. '                   ' → logprob: -17.881715774536133
    6. '	t' → logprob: -18.381715774536133
    7. ' ' → logprob: -18.631715774536133
    8. '                       ' → logprob: -20.131715774536133
    9. '    ' → logprob: -20.256715774536133
    10. '  ' → logprob: -20.381715774536133

Token 384: '_
' (ID: 27437)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.981667537620524e-06
    2. '_
' → logprob: -13.625001907348633
    3. '_]' → logprob: -15.250001907348633
    4. '_
' → logprob: -15.875001907348633
    5. '_)' → logprob: -16.125001907348633
    6. '_

' → logprob: -16.625001907348633
    7. '_[' → logprob: -17.125001907348633
    8. '_=' → logprob: -17.250001907348633
    9. '_,' → logprob: -18.125001907348633
    10. '_*' → logprob: -19.375001907348633

Token 385: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -2.093505099765025e-05
    2. 'if' → logprob: -11.500020980834961
    3. '               ' → logprob: -12.750020980834961
    4. ' if' → logprob: -13.000020980834961
    5. '                       ' → logprob: -13.000020980834961
    6. '                  ' → logprob: -13.875020980834961
    7. '           ' → logprob: -13.875020980834961
    8. '   ' → logprob: -15.000020980834961
    9. '```' → logprob: -15.375020980834961
    10. '       ' → logprob: -15.750020980834961

Token 386: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6072951555252075
    2. 'if' (adapté à ' if') → logprob: -0.8572951555252075
    3. ' if' → logprob: -3.482295036315918
    4. '               ' → logprob: -10.107295036315918
    5. '   ' → logprob: -10.357295036315918
    6. '           ' → logprob: -10.607295036315918
    7. '                       ' → logprob: -11.107295036315918
    8. '```' → logprob: -12.107295036315918
    9. '       ' → logprob: -12.482295036315918
    10. '                  ' → logprob: -12.857295036315918

Token 387: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.07889165729284286
    2. 'dist' → logprob: -2.5788917541503906
    3. '	dist' → logprob: -14.07889175415039
    4. '(dist' → logprob: -14.20389175415039
    5. '                   ' → logprob: -15.57889175415039
    6. '.dist' → logprob: -17.07889175415039
    7. '                           ' → logprob: -17.07889175415039
    8. 'Dist' → logprob: -17.20389175415039
    9. '   ' → logprob: -17.45389175415039
    10. 'd' → logprob: -17.57889175415039

Token 388: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -7.896309739408025e-07
    2. 'n' → logprob: -14.625000953674316
    3. '[' → logprob: -15.625000953674316
    4. ' [' → logprob: -17.25
    5. '[node' → logprob: -17.375
    6. '[next' → logprob: -17.625
    7. '<n' → logprob: -18.125
    8. '(n' → logprob: -18.75
    9. '[new' → logprob: -19.0
    10. '	n' → logprob: -19.5

Token 389: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.025432877242565155
    2. 'x' → logprob: -3.900432825088501
    3. 't' → logprob: -5.52543306350708
    4. '[n' → logprob: -7.40043306350708
    5. 'n' → logprob: -8.525432586669922
    6. 'st' → logprob: -9.525432586669922
    7. '[' → logprob: -12.775432586669922
    8. '```' → logprob: -13.275432586669922
    9. '[next' → logprob: -13.775432586669922
    10. ' nxt' → logprob: -13.775432586669922

Token 390: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.023259572684764862
    2. '>' → logprob: -3.7732596397399902
    3. '[' → logprob: -12.648259162902832
    4. '[n' → logprob: -12.773259162902832
    5. ']' → logprob: -12.898259162902832
    6. ' ' → logprob: -12.898259162902832
    7. ')' → logprob: -14.148259162902832
    8. ' ' → logprob: -14.523259162902832
    9. '">' → logprob: -14.898259162902832
    10. ']>' → logprob: -15.023259162902832

Token 391: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.029766106978058815
    2. '>' → logprob: -3.529766082763672
    3. '[n' → logprob: -11.529766082763672
    4. '[' → logprob: -12.654766082763672
    5. '[new' → logprob: -13.029766082763672
    6. ' ' → logprob: -15.779766082763672
    7. '>[' → logprob: -16.404766082763672
    8. ' ' → logprob: -16.904766082763672
    9. '[next' → logprob: -17.529766082763672
    10. ' >
' → logprob: -17.779766082763672

Token 392: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.07888978719711304
    2. ' new' → logprob: -2.578889846801758
    3. '[new' → logprob: -17.828889846801758
    4. '_new' → logprob: -18.453889846801758
    5. '(new' → logprob: -18.703889846801758
    6. '	new' → logprob: -18.703889846801758
    7. 'New' → logprob: -19.453889846801758
    8. '                   ' → logprob: -19.703889846801758
    9. ')new' → logprob: -19.703889846801758
    10. '新' → logprob: -19.828889846801758

Token 393: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -2.696889623621246e-06
    2. 'new' → logprob: -13.25000286102295
    3. 'time' → logprob: -15.00000286102295
    4. '_new' → logprob: -15.50000286102295
    5. '_cost' → logprob: -15.87500286102295
    6. '_code' → logprob: -16.125001907348633
    7. ' new' → logprob: -16.750001907348633
    8. ' time' → logprob: -18.375001907348633
    9. '[new' → logprob: -19.000001907348633
    10. '_' → logprob: -19.625001907348633

Token 394: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25288960337638855
    2. '                       ' → logprob: -1.752889633178711
    3. ':
' → logprob: -3.002889633178711
    4. '<|end|>' → logprob: -8.877889633178711
    5. '):
' → logprob: -9.127889633178711
    6. ':

' → logprob: -9.752889633178711
    7. '                   ' → logprob: -9.877889633178711
    8. '):' → logprob: -10.002889633178711
    9. '                           ' → logprob: -10.752889633178711
    10. ' :' → logprob: -10.752889633178711

Token 395: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -6.992775888647884e-05
    2. '                           ' → logprob: -9.750069618225098
    3. '                   ' → logprob: -12.250069618225098
    4. '                        ' → logprob: -13.000069618225098
    5. '                      ' → logprob: -13.625069618225098
    6. '                               ' → logprob: -13.750069618225098
    7. '       ' → logprob: -14.875069618225098
    8. '```' → logprob: -15.125069618225098
    9. '<|end|>' → logprob: -15.375069618225098
    10. '                        
' → logprob: -15.375069618225098

Token 396: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.023498306050896645
    2. 'dist' (adapté à ' dist') → logprob: -3.773498296737671
    3. '                       ' → logprob: -8.64849853515625
    4. '                           ' → logprob: -9.52349853515625
    5. '```' → logprob: -13.14849853515625
    6. '	dist' → logprob: -13.89849853515625
    7. '                               ' → logprob: -14.52349853515625
    8. '(dist' → logprob: -15.52349853515625
    9. '_dist' → logprob: -15.89849853515625
    10. 'Dist' → logprob: -16.27349853515625

Token 397: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -2.5776860184123507e-06
    2. '[' → logprob: -14.12500286102295
    3. '                       ' → logprob: -14.62500286102295
    4. '[next' → logprob: -14.62500286102295
    5. '                   ' → logprob: -15.25000286102295
    6. '           ' → logprob: -15.75000286102295
    7. 'n' → logprob: -16.125001907348633
    8. '                           ' → logprob: -16.375001907348633
    9. '[new' → logprob: -16.625001907348633
    10. '```' → logprob: -17.000001907348633

Token 398: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.0064374222420156
    2. '[n' → logprob: -5.256437301635742
    3. 'x' → logprob: -6.881437301635742
    4. 'n' → logprob: -8.756437301635742
    5. 'xn' → logprob: -11.881437301635742
    6. 't' → logprob: -12.506437301635742
    7. '[' → logprob: -12.756437301635742
    8. 'st' → logprob: -13.506437301635742
    9. '```' → logprob: -14.006437301635742
    10. 'q' → logprob: -14.131437301635742

Token 399: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7202829122543335
    2. '[n' → logprob: -1.3452829122543335
    3. '=' → logprob: -1.4702829122543335
    4. ']' → logprob: -4.720283031463623
    5. '=n' → logprob: -5.345283031463623
    6. ']=' → logprob: -5.970283031463623
    7. ',' → logprob: -6.470283031463623
    8. ')' → logprob: -7.095283031463623
    9. '           ' → logprob: -7.470283031463623
    10. '       ' → logprob: -7.595283031463623

Token 400: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07924985885620117
    2. ' =' → logprob: -2.579249858856201
    3. '[n' → logprob: -8.20425033569336
    4. '=n' → logprob: -9.57925033569336
    5. '>' → logprob: -12.82925033569336
    6. '                       ' → logprob: -12.82925033569336
    7. ']' → logprob: -13.20425033569336
    8. ']=' → logprob: -13.45425033569336
    9. '                           ' → logprob: -13.57925033569336
    10. '=new' → logprob: -13.70425033569336

Token 401: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.4740770161151886
    2. ' new' → logprob: -0.9740769863128662
    3. 'New' → logprob: -18.349077224731445
    4. '	new' → logprob: -18.724077224731445
    5. '新' → logprob: -18.974077224731445
    6. '_new' → logprob: -19.099077224731445
    7. '[new' → logprob: -20.099077224731445
    8. '```' → logprob: -20.349077224731445
    9. '(new' → logprob: -20.474077224731445
    10. ' ' → logprob: -20.724077224731445

Token 402: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -9.088346359931165e-07
    2. 'time' → logprob: -14.000000953674316
    3. ' time' → logprob: -19.625
    4. '_cost' → logprob: -19.625
    5. '_code' → logprob: -19.75
    6. '_token' → logprob: -20.875
    7. '"time' → logprob: -21.0
    8. '-time' → logprob: -21.5
    9. 'Time' → logprob: -22.125
    10. 'new' → logprob: -22.375

Token 403: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0002856497303582728
    2. '                        
' → logprob: -9.625286102294922
    3. '               ' → logprob: -9.875286102294922
    4. '```' → logprob: -10.000286102294922
    5. '                        ' → logprob: -10.375286102294922
    6. '           ' → logprob: -10.875286102294922
    7. '<|end|>' → logprob: -10.875286102294922
    8. '                           ' → logprob: -11.125286102294922
    9. '                   ' → logprob: -11.375286102294922
    10. '					' → logprob: -11.500286102294922

Token 404: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0010673471260815859
    2. 'heap' → logprob: -6.876067161560059
    3. '```' → logprob: -11.626067161560059
    4. ' heap' → logprob: -11.626067161560059
    5. '                   ' → logprob: -12.126067161560059
    6. '               ' → logprob: -12.376067161560059
    7. '                        
' → logprob: -13.501067161560059
    8. '                      ' → logprob: -13.751067161560059
    9. 'import' → logprob: -13.876067161560059
    10. '           ' → logprob: -14.001067161560059

Token 405: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -1.306760805164231e-05
    2. ' heap' → logprob: -11.25001335144043
    3. '                       ' → logprob: -17.25001335144043
    4. '```' → logprob: -21.00001335144043
    5. '.heap' → logprob: -21.62501335144043
    6. '                           ' → logprob: -21.62501335144043
    7. '                   ' → logprob: -21.87501335144043
    8. '(heap' → logprob: -22.25001335144043
    9. '   ' → logprob: -22.62501335144043
    10. 'he' → logprob: -22.75001335144043

Token 406: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.1160349458805285e-05
    2. 'p' → logprob: -11.875011444091797
    3. 'he' → logprob: -13.375011444091797
    4. '.he' → logprob: -13.625011444091797
    5. 'app' → logprob: -14.625011444091797
    6. 'push' → logprob: -15.000011444091797
    7. 'h' → logprob: -16.000011444091797
    8. '```' → logprob: -16.125011444091797
    9. 'ush' → logprob: -16.250011444091797
    10. '   ' → logprob: -16.500011444091797

Token 407: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.004064509645104408
    2. 'he' → logprob: -5.629064559936523
    3. 'ush' → logprob: -7.754064559936523
    4. 'app' → logprob: -11.004064559936523
    5. '.heap' → logprob: -12.254064559936523
    6. 'push' → logprob: -12.379064559936523
    7. 'heap' → logprob: -12.504064559936523
    8. '.' → logprob: -13.004064559936523
    9. '```' → logprob: -13.879064559936523
    10. 'q' → logprob: -14.004064559936523

Token 408: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0007114782347343862
    2. 'ap' → logprob: -7.250711441040039
    3. 'pp' → logprob: -13.875711441040039
    4. 'a' → logprob: -14.875711441040039
    5. 'ап' → logprob: -17.12571144104004
    6. 'q' → logprob: -17.75071144104004
    7. '[' → logprob: -17.87571144104004
    8. 'e' → logprob: -18.12571144104004
    9. 'appen' → logprob: -18.12571144104004
    10. 'apput' → logprob: -18.25071144104004

Token 409: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -9.722539834911004e-05
    2. 'push' → logprob: -9.250097274780273
    3. 'app' → logprob: -14.750097274780273
    4. 'op' → logprob: -14.750097274780273
    5. 'p' → logprob: -16.375097274780273
    6. 'ap' → logprob: -16.625097274780273
    7. 'sh' → logprob: -17.375097274780273
    8. 'q' → logprob: -18.000097274780273
    9. 'us' → logprob: -19.000097274780273
    10. 'uh' → logprob: -19.375097274780273

Token 410: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -2.5776860184123507e-06
    2. '(graph' → logprob: -13.37500286102295
    3. '(' → logprob: -14.62500286102295
    4. 'heap' → logprob: -14.75000286102295
    5. ' (' → logprob: -16.750001907348633
    6. '(h' → logprob: -17.750001907348633
    7. ' heap' → logprob: -18.375001907348633
    8. '```' → logprob: -19.125001907348633
    9. '.heap' → logprob: -19.375001907348633
    10. '(queue' → logprob: -19.750001907348633

Token 411: ',' (ID: 11)
  Prédit: '(heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -8.65707261255011e-06
    2. ',' → logprob: -12.250008583068848
    3. 'heap' → logprob: -13.250008583068848
    4. '(graph' → logprob: -14.375008583068848
    5. '(' → logprob: -14.500008583068848
    6. ' (' → logprob: -14.750008583068848
    7. '```' → logprob: -15.500008583068848
    8. ' heap' → logprob: -16.250009536743164
    9. ')' → logprob: -16.625009536743164
    10. '.heap' → logprob: -17.500009536743164

Token 412: ' (' (ID: 350)
  Prédit: '(new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.31442558765411377
    2. ' (' → logprob: -1.5644255876541138
    3. '(heap' → logprob: -2.814425468444824
    4. '(n' → logprob: -7.689425468444824
    5. '(' → logprob: -8.939425468444824
    6. '(next' → logprob: -10.314425468444824
    7. '(graph' → logprob: -11.189425468444824
    8. '(New' → logprob: -12.564425468444824
    9. '(nx' → logprob: -13.939425468444824
    10. '(time' → logprob: -14.689425468444824

Token 413: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0012672555167227983
    2. '(new' → logprob: -6.751267433166504
    3. ' new' → logprob: -9.251267433166504
    4. ' (' → logprob: -14.876267433166504
    5. '[new' → logprob: -15.251267433166504
    6. ')new' → logprob: -15.251267433166504
    7. '(n' → logprob: -16.376266479492188
    8. ',new' → logprob: -17.001266479492188
    9. 'n' → logprob: -17.376266479492188
    10. '	new' → logprob: -17.501266479492188

Token 414: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0014155926182866096
    2. 'time' → logprob: -7.376415729522705
    3. '(n' → logprob: -7.626415729522705
    4. '[n' → logprob: -8.876415252685547
    5. '_' → logprob: -9.251415252685547
    6. '_cost' → logprob: -10.751415252685547
    7. 'new' → logprob: -11.626415252685547
    8. '_size' → logprob: -11.876415252685547
    9. '_,' → logprob: -12.126415252685547
    10. '(new' → logprob: -12.251415252685547

Token 415: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.7385154428193346e-05
    2. ',node' → logprob: -10.62503719329834
    3. ',n' → logprob: -11.50003719329834
    4. ' ,' → logprob: -13.00003719329834
    5. '[node' → logprob: -15.50003719329834
    6. ',
' → logprob: -16.125038146972656
    7. '`,' → logprob: -16.500038146972656
    8. 'n' → logprob: -16.625038146972656
    9. '<|end|>' → logprob: -16.875038146972656
    10. '```' → logprob: -17.000038146972656

Token 416: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12747396528720856
    2. ' nxt' → logprob: -2.127474069595337
    3. '(n' → logprob: -7.627473831176758
    4. '[n' → logprob: -10.002473831176758
    5. ' n' → logprob: -11.877473831176758
    6. ' (' → logprob: -14.002473831176758
    7. '	n' → logprob: -14.252473831176758
    8. 'nx' → logprob: -14.252473831176758
    9. '(' → logprob: -14.252473831176758
    10. ' ' → logprob: -14.377473831176758

Token 417: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0017706160433590412
    2. ')' → logprob: -6.376770496368408
    3. '))
' → logprob: -9.626770973205566
    4. ' ))' → logprob: -14.001770973205566
    5. ')))' → logprob: -14.751770973205566
    6. ')
' → logprob: -14.876770973205566
    7. '                       ' → logprob: -15.126770973205566
    8. '                   ' → logprob: -15.501770973205566
    9. '           ' → logprob: -15.751770973205566
    10. '               ' → logprob: -16.00177001953125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 415
Tokens correctement prédits (1ère position, stricte): 211
Tokens correctement prédits (1ère position, avec adaptation): 237
Tokens correctement prédits (top 10): 390
Précision stricte (1ère position): 50.84%
Précision adaptée (1ère position): 57.11%
Précision (top 10): 93.98%
================================================================================
