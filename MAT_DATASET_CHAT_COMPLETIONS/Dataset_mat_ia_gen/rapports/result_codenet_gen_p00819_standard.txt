================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:20:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def inverse_mr_j(s): return s[-1] + s[:-1]
def inverse_miss_c(s): return s[1:] + s[0]
def inverse_mr_e(s):
    l = len(s)
    if l % 2 == 0:
        return s[l//2:] + s[:l//2]
    else:
        return s[l//2+1:] + s[l//2] + s[:l//2]
def inverse_mr_a(s): return s[::-1]
def inverse_dr_p(s):
    res = []
    for c in s:
        if c.isdigit():
            res.append('9' if c == '0' else str(int(c) - 1))
        else:
            res.append(c)
    return ''.join(res)
def inverse_mr_m(s):
    res = []
    for c in s:
        if c.isdigit():
            res.append('0' if c == '9' else str(int(c) + 1))
        else:
            res.append(c)
    return ''.join(res)

inv_funcs = {'J': inverse_mr_j, 'C': inverse_miss_c, 'E': inverse_mr_e,
             'A': inverse_mr_a, 'P': inverse_dr_p, 'M': inverse_mr_m}

n = int(input())
for _ in range(n):
    order = input().strip()
    msg = input().strip()
    for m in reversed(order):
        msg = inv_funcs[m](msg)
    print(msg)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' inverse' (ID: 53743)
  → Token d'amorce (pas de prédiction)

Token 2: '_m' (ID: 1285)
  → Token d'amorce (pas de prédiction)

Token 3: 'r' (ID: 81)
  Prédit: 'atrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atrix' → logprob: -1.1094765663146973
    2. '(a' → logprob: -1.1094765663146973
    3. 'a' → logprob: -1.3594765663146973
    4. 'ap' → logprob: -3.4844765663146973
    5. '(' → logprob: -3.7344765663146973
    6. 'ultiply' → logprob: -4.234476566314697
    7. '_' → logprob: -4.859476566314697
    8. '(x' → logprob: -6.234476566314697
    9. 'apping' → logprob: -6.484476566314697
    10. 'ultip' → logprob: -6.734476566314697

Token 4: '_j' (ID: 12021)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8586767911911011
    2. 'a' → logprob: -1.483676791191101
    3. '_' → logprob: -1.733676791191101
    4. '():' → logprob: -2.3586769104003906
    5. 's' → logprob: -3.8586769104003906
    6. '(a' → logprob: -4.108676910400391
    7. '(x' → logprob: -4.608676910400391
    8. '_s' → logprob: -4.858676910400391
    9. '_inverse' → logprob: -5.233676910400391
    10. '(:' → logprob: -5.608676910400391

Token 5: '(s' (ID: 1858)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7708635926246643
    2. 'a' → logprob: -1.6458635330200195
    3. 's' → logprob: -1.8958635330200195
    4. '(' → logprob: -2.8958635330200195
    5. '_a' → logprob: -3.2708635330200195
    6. '_:' → logprob: -3.2708635330200195
    7. '(a' → logprob: -4.1458635330200195
    8. 'u' → logprob: -4.1458635330200195
    9. '_s' → logprob: -4.5208635330200195
    10. 'f' → logprob: -5.5208635330200195

Token 6: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07363108545541763
    2. ')' → logprob: -2.6986310482025146
    3. 'u' → logprob: -6.073631286621094
    4. 'a' → logprob: -7.323631286621094
    5. 'e' → logprob: -7.948631286621094
    6. ',' → logprob: -9.073631286621094
    7. '[' → logprob: -9.573631286621094
    8. ':' → logprob: -10.448631286621094
    9. 'ur' → logprob: -10.698631286621094
    10. ''):' → logprob: -10.823631286621094

Token 7: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17778021097183228
    2. '    ' → logprob: -3.1777801513671875
    3. '```' → logprob: -3.1777801513671875
    4. '\' → logprob: -4.0527801513671875
    5. ' ' → logprob: -4.3027801513671875
    6. ''' → logprob: -4.3027801513671875
    7. '\n' → logprob: -4.6777801513671875
    8. '"""' → logprob: -5.4277801513671875
    9. ':' → logprob: -5.9277801513671875
    10. '    
' → logprob: -6.3027801513671875

Token 8: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5589076280593872
    2. 's' → logprob: -0.9339076280593872
    3. ' ' → logprob: -3.8089075088500977
    4. '"' → logprob: -6.308907508850098
    5. '1' → logprob: -6.308907508850098
    6. ' None' → logprob: -6.558907508850098
    7. ' {' → logprob: -6.683907508850098
    8. ''' → logprob: -6.683907508850098
    9. ''s' → logprob: -6.808907508850098
    10. ' [' → logprob: -7.183907508850098

Token 9: '[-' (ID: 17503)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.47074973583221436
    2. '[' → logprob: -1.4707497358322144
    3. '_' → logprob: -2.595749855041504
    4. '(' → logprob: -2.970749855041504
    5. ':' → logprob: -4.470749855041504
    6. '#' → logprob: -6.470749855041504
    7. '*' → logprob: -6.720749855041504
    8. ',' → logprob: -6.970749855041504
    9. '+' → logprob: -7.095749855041504
    10. ''' → logprob: -7.345749855041504

Token 10: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002681304467841983
    2. '2' → logprob: -8.25026798248291
    3. '3' → logprob: -12.75026798248291
    4. '4' → logprob: -14.00026798248291
    5. ' ' → logprob: -14.37526798248291
    6. '5' → logprob: -14.50026798248291
    7. '-' → logprob: -14.81276798248291
    8. '

' → logprob: -15.12526798248291
    9. '   ' → logprob: -15.56276798248291
    10. '```' → logprob: -15.87526798248291

Token 11: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9469135403633118
    2. ':' → logprob: -1.071913480758667
    3. ':]' → logprob: -1.321913480758667
    4. ' :]' → logprob: -6.446913719177246
    5. '::-' → logprob: -7.071913719177246
    6. ' ]' → logprob: -8.071913719177246
    7. ' :' → logprob: -8.821913719177246
    8. '::' → logprob: -10.071913719177246
    9. '-' → logprob: -10.071913719177246
    10. '[::-' → logprob: -10.946913719177246

Token 12: ' +' (ID: 659)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5296858549118042
    2. 's' → logprob: -1.7796858549118042
    3. ':' → logprob: -2.4046859741210938
    4. ']' → logprob: -2.7796859741210938
    5. ')' → logprob: -3.5296859741210938
    6. '.' → logprob: -4.029685974121094
    7. '[:]' → logprob: -4.904685974121094
    8. '#' → logprob: -5.029685974121094
    9. ' ' → logprob: -5.529685974121094
    10. '(' → logprob: -6.029685974121094

Token 13: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04300946369767189
    2. ' s' → logprob: -3.1680095195770264
    3. ''s' → logprob: -12.168009757995605
    4. ' ' → logprob: -13.168009757995605
    5. '(s' → logprob: -13.793009757995605
    6. ''' → logprob: -13.918009757995605
    7. '```' → logprob: -15.543009757995605
    8. '"' → logprob: -15.918009757995605
    9. '`s' → logprob: -16.04300880432129
    10. '[::-' → logprob: -16.54300880432129

Token 14: '[:-' (ID: 63556)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04954485967755318
    2. '[:-' → logprob: -3.0495448112487793
    3. '[-' → logprob: -7.674544811248779
    4. '[:' → logprob: -9.049545288085938
    5. ':' → logprob: -9.174545288085938
    6. '[:]' → logprob: -9.174545288085938
    7. '[::-' → logprob: -9.424545288085938
    8. '[len' → logprob: -10.799545288085938
    9. '1' → logprob: -10.799545288085938
    10. '```' → logprob: -10.799545288085938

Token 15: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. '2' → logprob: -13.250003814697266
    3. '```' → logprob: -14.875003814697266
    4. ']' → logprob: -15.250003814697266
    5. ' ' → logprob: -15.250003814697266
    6. '0' → logprob: -15.750003814697266
    7. '6' → logprob: -16.562503814697266
    8. '   ' → logprob: -16.562503814697266
    9. '5' → logprob: -16.687503814697266
    10. '-' → logprob: -17.250003814697266

Token 16: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001884015218820423
    2. '']' → logprob: -8.750188827514648
    3. ')' → logprob: -10.750188827514648
    4. '])' → logprob: -12.625188827514648
    5. '"]' → logprob: -13.250188827514648
    6. ' ]' → logprob: -13.625188827514648
    7. '[' → logprob: -14.375188827514648
    8. '`]' → logprob: -14.500188827514648
    9. ')]' → logprob: -14.625188827514648
    10. '}' → logprob: -15.750188827514648

Token 17: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6948550343513489
    2. ')' → logprob: -0.9448550343513489
    3. '<|end|>' → logprob: -2.819854974746704
    4. '```' → logprob: -4.569855213165283
    5. ' ' → logprob: -4.694855213165283
    6. '\n' → logprob: -5.194855213165283
    7. '#' → logprob: -5.444855213165283
    8. '\' → logprob: -5.569855213165283
    9. ''' → logprob: -5.694855213165283
    10. '(
' → logprob: -5.819855213165283

Token 18: ' inverse' (ID: 53743)
  Prédit: ' inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inverse' → logprob: -0.059516217559576035
    2. '_' → logprob: -3.934516191482544
    3. ' ' → logprob: -4.559516429901123
    4. 'inverse' → logprob: -4.684516429901123
    5. ' reverse' → logprob: -5.059516429901123
    6. '_inverse' → logprob: -5.184516429901123
    7. ' _' → logprob: -6.434516429901123
    8. ' space' → logprob: -7.059516429901123
    9. ' user' → logprob: -7.684516429901123
    10. '_reverse' → logprob: -8.059515953063965

Token 19: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.252382755279541
    2. '_' → logprob: -1.502382755279541
    3. '_s' → logprob: -9.127382278442383
    4. '(' → logprob: -9.127382278442383
    5. '_mc' → logprob: -10.127382278442383
    6. ' _' → logprob: -10.252382278442383
    7. '_ml' → logprob: -10.377382278442383
    8. '_j' → logprob: -11.002382278442383
    9. '_r' → logprob: -11.127382278442383
    10. '_(' → logprob: -11.377382278442383

Token 20: 'iss' (ID: 1009)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00012047011114191264
    2. '_r' → logprob: -9.500120162963867
    3. '_' → logprob: -11.750120162963867
    4. 'm' → logprob: -12.312620162963867
    5. '```' → logprob: -12.562620162963867
    6. 'mr' → logprob: -12.625120162963867
    7. '_j' → logprob: -12.687620162963867
    8. 'rs' → logprob: -12.812620162963867
    9. 'j' → logprob: -13.187620162963867
    10. '_m' → logprob: -13.687620162963867

Token 21: '_c' (ID: 1303)
  Prédit: 'issippi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'issippi' → logprob: -1.1207776069641113
    2. 'i' → logprob: -1.2457776069641113
    3. '_i' → logprob: -1.2457776069641113
    4. '_' → logprob: -2.9957776069641113
    5. '_s' → logprob: -4.245777606964111
    6. 'ing' → logprob: -4.245777606964111
    7. 'ippi' → logprob: -5.495777606964111
    8. '```' → logprob: -6.245777606964111
    9. '_m' → logprob: -6.495777606964111
    10. 's' → logprob: -6.495777606964111

Token 22: '(s' (ID: 1858)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.5985497236251831
    2. 'r' → logprob: -2.5985498428344727
    3. 'o' → logprob: -2.9735498428344727
    4. 'a' → logprob: -3.5985498428344727
    5. 'i' → logprob: -3.7235498428344727
    6. 'ro' → logprob: -3.8485498428344727
    7. 'hap' → logprob: -4.098549842834473
    8. 'hop' → logprob: -4.223549842834473
    9. 'k' → logprob: -4.411049842834473
    10. 'hing' → logprob: -4.473549842834473

Token 23: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002306196605786681
    2. ')' → logprob: -6.12730598449707
    3. ' ):' → logprob: -9.62730598449707
    4. ''):' → logprob: -10.87730598449707
    5. '):
' → logprob: -11.00230598449707
    6. '_' → logprob: -12.75230598449707
    7. 'e' → logprob: -13.00230598449707
    8. ':' → logprob: -13.62730598449707
    9. '"):' → logprob: -13.62730598449707
    10. '>):' → logprob: -13.75230598449707

Token 24: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.010930152609944344
    2. ' s' → logprob: -4.885930061340332
    3. '   ' → logprob: -6.385930061340332
    4. 'return' → logprob: -7.135930061340332
    5. '    ' → logprob: -7.635930061340332
    6. ' ' → logprob: -9.010930061340332
    7. 's' → logprob: -9.135930061340332
    8. ' reverse' → logprob: -10.135930061340332
    9. ' def' → logprob: -10.760930061340332
    10. ' if' → logprob: -11.135930061340332

Token 25: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5242384672164917
    2. ' s' → logprob: -0.8992384672164917
    3. ''' → logprob: -7.524238586425781
    4. ''s' → logprob: -8.524238586425781
    5. '''' → logprob: -9.899238586425781
    6. ' '' → logprob: -10.024238586425781
    7. '(s' → logprob: -10.149238586425781
    8. ' ''.' → logprob: -10.149238586425781
    9. '"' → logprob: -10.274238586425781
    10. ' ' → logprob: -10.524238586425781

Token 26: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05417393147945404
    2. '.' → logprob: -3.9291739463806152
    3. '_' → logprob: -4.304173946380615
    4. '<|end|>' → logprob: -5.054173946380615
    5. '[::-' → logprob: -6.304173946380615
    6. '(' → logprob: -6.304173946380615
    7. 's' → logprob: -6.554173946380615
    8. ')' → logprob: -6.554173946380615
    9. '[:]' → logprob: -6.679173946380615
    10. '#' → logprob: -6.804173946380615

Token 27: '1' (ID: 16)
  Prédit: '::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '::-' → logprob: -0.6883786916732788
    2. ':' → logprob: -1.8133786916732788
    3. '1' → logprob: -1.9383786916732788
    4. '-' → logprob: -2.1883788108825684
    5. ':]' → logprob: -3.0633788108825684
    6. '::' → logprob: -3.8133788108825684
    7. ':-' → logprob: -5.563378810882568
    8. '[::-' → logprob: -6.313378810882568
    9. '0' → logprob: -7.188378810882568
    10. ']' → logprob: -7.313378810882568

Token 28: ':]' (ID: 67377)
  Prédit: ':]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.005944444332271814
    2. ':' → logprob: -5.25594425201416
    3. ' :]' → logprob: -7.50594425201416
    4. ']' → logprob: -9.13094425201416
    5. ':].' → logprob: -11.50594425201416
    6. '::-' → logprob: -12.00594425201416
    7. '::' → logprob: -12.13094425201416
    8. ':],' → logprob: -12.38094425201416
    9. '1' → logprob: -12.63094425201416
    10. '+' → logprob: -12.75594425201416

Token 29: ' +' (ID: 659)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11043050140142441
    2. 's' → logprob: -2.7354304790496826
    3. '<|end|>' → logprob: -4.110430717468262
    4. '+' → logprob: -4.360430717468262
    5. '[:' → logprob: -5.485430717468262
    6. '0' → logprob: -6.360430717468262
    7. ']' → logprob: -7.610430717468262
    8. ' s' → logprob: -7.610430717468262
    9. ':' → logprob: -7.860430717468262
    10. ')' → logprob: -7.860430717468262

Token 30: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02056208811700344
    2. ' s' → logprob: -3.895562171936035
    3. ' ' → logprob: -11.395562171936035
    4. '(s' → logprob: -12.395562171936035
    5. ''s' → logprob: -13.645562171936035
    6. '[' → logprob: -14.020562171936035
    7. '  ' → logprob: -14.770562171936035
    8. ' ' → logprob: -14.895562171936035
    9. '_s' → logprob: -15.020562171936035
    10. '	s' → logprob: -15.395562171936035

Token 31: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014506877399981022
    2. '[-' → logprob: -4.514506816864014
    3. '[:' → logprob: -6.389506816864014
    4. '[:]' → logprob: -7.139506816864014
    5. '[len' → logprob: -7.889506816864014
    6. '[]' → logprob: -9.139507293701172
    7. '[:-' → logprob: -9.264507293701172
    8. '[::-' → logprob: -9.889507293701172
    9. ''[' → logprob: -10.264507293701172
    10. '0' → logprob: -10.264507293701172

Token 32: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009461279958486557
    2. ':' → logprob: -5.134461402893066
    3. '-' → logprob: -5.884461402893066
    4. '1' → logprob: -8.134461402893066
    5. ' ' → logprob: -8.134461402893066
    6. ':]' → logprob: -9.884461402893066
    7. ' :' → logprob: -10.446961402893066
    8. ':-' → logprob: -11.009461402893066
    9. '   ' → logprob: -11.571961402893066
    10. '::-' → logprob: -11.759461402893066

Token 33: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00020067949662916362
    2. ':]' → logprob: -9.000200271606445
    3. '']' → logprob: -10.125200271606445
    4. ' ]' → logprob: -10.625200271606445
    5. '`]' → logprob: -12.250200271606445
    6. ':' → logprob: -13.625200271606445
    7. ' :]' → logprob: -13.750200271606445
    8. 's' → logprob: -13.750200271606445
    9. '"]' → logprob: -14.000200271606445
    10. ']
' → logprob: -14.500200271606445

Token 34: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5655106902122498
    2. '#' → logprob: -2.0655107498168945
    3. 'd' → logprob: -2.5655107498168945
    4. '<|end|>' → logprob: -2.6905107498168945
    5. ' ' → logprob: -2.8155107498168945
    6. '_' → logprob: -3.8155107498168945
    7. '[' → logprob: -4.3155107498168945
    8. 'e' → logprob: -4.4405107498168945
    9. 'a' → logprob: -4.5655107498168945
    10. ')' → logprob: -4.6905107498168945

Token 35: ' inverse' (ID: 53743)
  Prédit: ' inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inverse' → logprob: -0.20649830996990204
    2. 'inverse' → logprob: -2.831498384475708
    3. ' reverse' → logprob: -3.331498384475708
    4. ' miss' → logprob: -5.268998146057129
    5. '_inverse' → logprob: -5.268998146057129
    6. '_' → logprob: -5.331498146057129
    7. ' invert' → logprob: -5.643998146057129
    8. ' rotate' → logprob: -6.018998146057129
    9. 'reverse' → logprob: -6.393998146057129
    10. ' _' → logprob: -6.393998146057129

Token 36: '_m' (ID: 1285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3896919786930084
    2. '_m' → logprob: -1.389691948890686
    3. '_s' → logprob: -4.0146918296813965
    4. '_a' → logprob: -4.5146918296813965
    5. '_r' → logprob: -5.1396918296813965
    6. '_j' → logprob: -5.2646918296813965
    7. '_mc' → logprob: -5.5146918296813965
    8. '_t' → logprob: -5.6396918296813965
    9. '_c' → logprob: -5.6396918296813965
    10. '_p' → logprob: -6.1396918296813965

Token 37: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.10377227514982224
    2. 'i' → logprob: -3.1037721633911133
    3. 'a' → logprob: -3.7287721633911133
    4. '_r' → logprob: -4.728772163391113
    5. 's' → logprob: -5.478772163391113
    6. 'o' → logprob: -5.978772163391113
    7. 'y' → logprob: -6.103772163391113
    8. '_' → logprob: -6.228772163391113
    9. 'iss' → logprob: -6.603772163391113
    10. 'c' → logprob: -6.666272163391113

Token 38: '_e' (ID: 4618)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.31968849897384644
    2. '_j' → logprob: -1.5696885585784912
    3. '_c' → logprob: -3.319688558578491
    4. '_s' → logprob: -4.444688320159912
    5. '_a' → logprob: -5.319688320159912
    6. '_r' → logprob: -5.444688320159912
    7. ' _' → logprob: -6.319688320159912
    8. 's' → logprob: -6.694688320159912
    9. '_i' → logprob: -6.819688320159912
    10. '_m' → logprob: -7.444688320159912

Token 39: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.4412568509578705
    2. 's' → logprob: -1.5662568807601929
    3. 'r' → logprob: -2.9412567615509033
    4. 'd' → logprob: -4.191256999969482
    5. '_s' → logprob: -4.691256999969482
    6. '_r' → logprob: -4.816256999969482
    7. 'n' → logprob: -4.941256999969482
    8. '_j' → logprob: -5.066256999969482
    9. '(' → logprob: -5.316256999969482
    10. 't' → logprob: -5.441256999969482

Token 40: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006104522035457194
    2. ')' → logprob: -8.3756103515625
    3. ' ):' → logprob: -9.0006103515625
    4. '):
' → logprob: -10.0006103515625
    5. '[' → logprob: -10.1256103515625
    6. ']:' → logprob: -10.5006103515625
    7. ''):' → logprob: -10.5006103515625
    8. '[]):' → logprob: -10.5006103515625
    9. ']):' → logprob: -10.6256103515625
    10. '>):' → logprob: -11.5006103515625

Token 41: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8869720697402954
    2. ' s' → logprob: -1.0119720697402954
    3. 's' → logprob: -2.636971950531006
    4. '[::-' → logprob: -3.011971950531006
    5. ' =' → logprob: -3.386971950531006
    6. ' def' → logprob: -4.136971950531006
    7. '   ' → logprob: -4.636971950531006
    8. 'def' → logprob: -4.761971950531006
    9. 'return' → logprob: -4.761971950531006
    10. '(s' → logprob: -5.386971950531006

Token 42: ' l' (ID: 305)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.026750843971967697
    2. '   ' → logprob: -4.1517510414123535
    3. ' if' → logprob: -5.4017510414123535
    4. 'return' → logprob: -5.5267510414123535
    5. ' s' → logprob: -7.2767510414123535
    6. '    ' → logprob: -7.7767510414123535
    7. ' n' → logprob: -8.151750564575195
    8. ' def' → logprob: -8.651750564575195
    9. ' for' → logprob: -9.151750564575195
    10. '```' → logprob: -9.276750564575195

Token 43: ' =' (ID: 314)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.23158186674118042
    2. '=' → logprob: -2.481581926345825
    3. ' =' → logprob: -2.856581926345825
    4. 'ength' → logprob: -3.356581926345825
    5. '=len' → logprob: -4.481581687927246
    6. '   ' → logprob: -4.856581687927246
    7. 'e' → logprob: -5.481581687927246
    8. 'et' → logprob: -6.106581687927246
    9. 'ist' → logprob: -6.356581687927246
    10. 's' → logprob: -7.106581687927246

Token 44: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.19662591814994812
    2. ' s' → logprob: -2.4466259479522705
    3. 'len' → logprob: -3.1966259479522705
    4. 's' → logprob: -3.8216259479522705
    5. ' list' → logprob: -3.8216259479522705
    6. 'en' → logprob: -6.446625709533691
    7. '[len' → logprob: -6.446625709533691
    8. 'ist' → logprob: -6.821625709533691
    9. 'list' → logprob: -7.821625709533691
    10. '(len' → logprob: -8.196625709533691

Token 45: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0010721079306676984
    2. '(' → logprob: -7.001071929931641
    3. 's' → logprob: -8.75107192993164
    4. ' (' → logprob: -13.25107192993164
    5. ')' → logprob: -15.37607192993164
    6. ' s' → logprob: -16.25107192993164
    7. '_s' → logprob: -16.87607192993164
    8. '(S' → logprob: -17.12607192993164
    9. ' ' → logprob: -17.87607192993164
    10. '(space' → logprob: -18.12607192993164

Token 46: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036814322229474783
    2. ' )' → logprob: -6.128681659698486
    3. ')
' → logprob: -6.878681659698486
    4. '   ' → logprob: -8.003681182861328
    5. ')-' → logprob: -10.878681182861328
    6. ' ' → logprob: -10.878681182861328
    7. '')' → logprob: -11.253681182861328
    8. ' )
' → logprob: -11.503681182861328
    9. 's' → logprob: -11.753681182861328
    10. '-' → logprob: -12.003681182861328

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01794423907995224
    2. '    ' → logprob: -5.7679443359375
    3. ' ' → logprob: -5.8929443359375
    4. 's' → logprob: -6.0179443359375
    5. '    
' → logprob: -6.6429443359375
    6. 'return' → logprob: -6.8929443359375
    7. ' return' → logprob: -7.0179443359375
    8. ')' → logprob: -7.3929443359375
    9. ' s' → logprob: -7.3929443359375
    10. ' if' → logprob: -7.3929443359375

Token 48: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8758976459503174
    2. '   ' → logprob: -1.7508976459503174
    3. ' return' → logprob: -2.0008976459503174
    4. 'r' → logprob: -2.1258976459503174
    5. 's' → logprob: -3.0008976459503174
    6. 'if' (adapté à ' if') → logprob: -4.500897407531738
    7. ' ' → logprob: -4.625897407531738
    8. ' if' → logprob: -4.625897407531738
    9. ' r' → logprob: -4.625897407531738
    10. 'i' → logprob: -4.750897407531738

Token 49: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.0024837462697178125
    2. 'l' → logprob: -6.62748384475708
    3. ' s' → logprob: -7.00248384475708
    4. ' ' → logprob: -8.502483367919922
    5. 's' → logprob: -11.002483367919922
    6. ' not' → logprob: -11.502483367919922
    7. ' ' → logprob: -12.127483367919922
    8. ' (' → logprob: -12.252483367919922
    9. ')' → logprob: -13.752483367919922
    10. '	l' → logprob: -13.939983367919922

Token 50: ' %' (ID: 1851)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7150774002075195
    2. ' %' → logprob: -1.3400774002075195
    3. '==' → logprob: -2.4650774002075195
    4. '%' → logprob: -2.7150774002075195
    5. ' <=' → logprob: -3.0900774002075195
    6. ' <' → logprob: -3.8400774002075195
    7. ' ' → logprob: -4.2150774002075195
    8. ' >' → logprob: -4.8400774002075195
    9. '>' → logprob: -6.0900774002075195
    10. '<' → logprob: -6.0900774002075195

Token 51: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04866662621498108
    2. ' ' → logprob: -3.0486667156219482
    3. '  ' → logprob: -11.048666954040527
    4. '3' → logprob: -11.298666954040527
    5. '```' → logprob: -11.298666954040527
    6. '>' → logprob: -11.923666954040527
    7. '4' → logprob: -12.173666954040527
    8. '==' → logprob: -12.173666954040527
    9. '=' → logprob: -12.611166954040527
    10. ')' → logprob: -12.736166954040527

Token 52: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00025788258062675595
    2. ' ' → logprob: -9.00025749206543
    3. '3' → logprob: -9.12525749206543
    4. '4' → logprob: -11.25025749206543
    5. '5' → logprob: -13.25025749206543
    6. '==' → logprob: -13.56275749206543
    7. '6' → logprob: -13.93775749206543
    8. '10' → logprob: -13.93775749206543
    9. '7' → logprob: -14.12525749206543
    10. '1' → logprob: -14.25025749206543

Token 53: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.18060149252414703
    2. '==' → logprob: -1.8056014776229858
    3. ' !=' → logprob: -7.430601596832275
    4. ':' → logprob: -8.680601119995117
    5. '!=' → logprob: -10.305601119995117
    6. '0' → logprob: -10.930601119995117
    7. '=' → logprob: -11.055601119995117
    8. ' ' → logprob: -11.430601119995117
    9. ' =' → logprob: -12.305601119995117
    10. ')==' → logprob: -12.555601119995117

Token 54: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6952102184295654
    2. ' ' → logprob: -0.6952102184295654
    3. '1' → logprob: -6.1952104568481445
    4. '<|end|>' → logprob: -11.570210456848145
    5. '2' → logprob: -12.445210456848145
    6. '```' → logprob: -13.507710456848145
    7. '  ' → logprob: -13.632710456848145
    8. '

' → logprob: -13.882710456848145
    9. ' ' → logprob: -14.007710456848145
    10. ')' → logprob: -14.757710456848145

Token 55: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010119040496647358
    2. '2' → logprob: -4.7601189613342285
    3. ' ' → logprob: -7.1351189613342285
    4. '1' → logprob: -7.2601189613342285
    5. ')' → logprob: -13.947619438171387
    6. '  ' → logprob: -14.697619438171387
    7. '```' → logprob: -15.010119438171387
    8. '==' → logprob: -15.697619438171387
    9. '=' → logprob: -15.822619438171387
    10. '   ' → logprob: -15.822619438171387

Token 56: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004222520627081394
    2. ':
' → logprob: -5.629222393035889
    3. ' :' → logprob: -7.754222393035889
    4. ':return' → logprob: -9.129222869873047
    5. '       ' → logprob: -10.754222869873047
    6. '   ' → logprob: -10.754222869873047
    7. ' :
' → logprob: -11.129222869873047
    8. '):' → logprob: -11.254222869873047
    9. ' and' → logprob: -12.629222869873047
    10. ',' → logprob: -13.379222869873047

Token 57: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02313879132270813
    2. '   ' → logprob: -4.648138999938965
    3. ' return' → logprob: -5.148138999938965
    4. '
' → logprob: -6.148138999938965
    5. ' 
' → logprob: -6.773138999938965
    6. ' s' → logprob: -6.773138999938965
    7. ' ' → logprob: -7.398138999938965
    8. 'return' → logprob: -7.398138999938965
    9. '    
' → logprob: -8.023138999938965
    10. '        
' → logprob: -8.523138999938965

Token 58: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1488635092973709
    2. '       ' → logprob: -2.6488635540008545
    3. 'return' (adapté à ' return') → logprob: -3.2738635540008545
    4. ' s' → logprob: -4.273863315582275
    5. '   ' → logprob: -4.273863315582275
    6. 's' → logprob: -7.273863315582275
    7. '
' → logprob: -8.523863792419434
    8. ' ' → logprob: -8.523863792419434
    9. '    ' → logprob: -8.898863792419434
    10. '```' → logprob: -9.523863792419434

Token 59: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.062126658856868744
    2. 's' → logprob: -2.812126636505127
    3. ' '' → logprob: -9.937127113342285
    4. ''' → logprob: -10.562127113342285
    5. ''s' → logprob: -10.687127113342285
    6. '(s' → logprob: -11.312127113342285
    7. '"' → logprob: -11.562127113342285
    8. ' reverse' → logprob: -11.874627113342285
    9. ' ' → logprob: -12.124627113342285
    10. '''' → logprob: -12.749627113342285

Token 60: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.4184286594390869
    2. '[::-' → logprob: -1.293428659439087
    3. '[-' → logprob: -2.918428659439087
    4. '[:' → logprob: -5.168428421020508
    5. '[' → logprob: -5.293428421020508
    6. '[len' → logprob: -6.543428421020508
    7. '[int' → logprob: -8.043428421020508
    8. '[m' → logprob: -8.418428421020508
    9. '[s' → logprob: -8.668428421020508
    10. '[mid' → logprob: -8.793428421020508

Token 61: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.02363838627934456
    2. '-' → logprob: -4.0236382484436035
    3. '::-' → logprob: -5.2736382484436035
    4. ' //' → logprob: -9.148638725280762
    5. ':' → logprob: -9.273638725280762
    6. ' -' → logprob: -9.773638725280762
    7. '2' → logprob: -10.273638725280762
    8. '1' → logprob: -11.273638725280762
    9. '://' → logprob: -11.398638725280762
    10. '/' → logprob: -11.648638725280762

Token 62: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002547832846175879
    2. '4' → logprob: -8.87525463104248
    3. ' ' → logprob: -9.25025463104248
    4. '1' → logprob: -11.25025463104248
    5. '3' → logprob: -13.25025463104248
    6. ':' → logprob: -13.62525463104248
    7. '-' → logprob: -14.43775463104248
    8. '   ' → logprob: -14.75025463104248
    9. '  ' → logprob: -15.06275463104248
    10. ']' → logprob: -15.25025463104248

Token 63: ':]' (ID: 67377)
  Prédit: ':]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.16028404235839844
    2. ':' → logprob: -2.2852840423583984
    3. ':l' → logprob: -3.7852840423583984
    4. '-' → logprob: -3.9102840423583984
    5. ' -' → logprob: -6.910284042358398
    6. '::-' → logprob: -7.660284042358398
    7. ' :]' → logprob: -7.785284042358398
    8. '+l' → logprob: -7.785284042358398
    9. ']' → logprob: -8.035284042358398
    10. '+' → logprob: -8.410284042358398

Token 64: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4430658221244812
    2. '+' → logprob: -1.068065881729126
    3. '+s' → logprob: -4.693065643310547
    4. '+l' → logprob: -6.068065643310547
    5. 's' → logprob: -6.193065643310547
    6. '[::-' → logprob: -7.443065643310547
    7. ' ' → logprob: -9.818065643310547
    8. '   ' → logprob: -10.568065643310547
    9. 'l' → logprob: -11.068065643310547
    10. ' s' → logprob: -11.568065643310547

Token 65: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.029850218445062637
    2. ' s' → logprob: -3.5298502445220947
    3. ' ' → logprob: -9.404850006103516
    4. '(s' → logprob: -12.404850006103516
    5. '   ' → logprob: -12.654850006103516
    6. ''s' → logprob: -13.154850006103516
    7. '	s' → logprob: -13.404850006103516
    8. '  ' → logprob: -13.529850006103516
    9. ' ' → logprob: -13.842350006103516
    10. '`s' → logprob: -14.154850006103516

Token 66: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.02456645853817463
    2. ':l' → logprob: -4.399566650390625
    3. '[l' → logprob: -4.524566650390625
    4. '[' → logprob: -7.399566650390625
    5. ':' → logprob: -8.649566650390625
    6. ' ' → logprob: -9.024566650390625
    7. 'l' → logprob: -9.149566650390625
    8. ' [:' → logprob: -9.899566650390625
    9. '0' → logprob: -10.399566650390625
    10. ' :' → logprob: -10.649566650390625

Token 67: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -8.537868779967539e-06
    2. ' l' → logprob: -11.750008583068848
    3. '	l' → logprob: -15.875008583068848
    4. '(' → logprob: -16.12500762939453
    5. '   ' → logprob: -16.37500762939453
    6. '(l' → logprob: -16.62500762939453
    7. ' ' → logprob: -17.12500762939453
    8. '2' → logprob: -17.25000762939453
    9. '4' → logprob: -17.37500762939453
    10. '6' → logprob: -18.12500762939453

Token 68: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -5.3954463510308415e-05
    2. '2' → logprob: -9.875054359436035
    3. ' //' → logprob: -13.625054359436035
    4. '//=' → logprob: -14.875054359436035
    5. '/' → logprob: -15.125054359436035
    6. ' ' → logprob: -15.500054359436035
    7. '```' → logprob: -16.00005340576172
    8. '4' → logprob: -16.75005340576172
    9. '1' → logprob: -17.50005340576172
    10. '6' → logprob: -17.62505340576172

Token 69: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.700132997939363e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -17.000017166137695
    4. '۲' → logprob: -17.375017166137695
    5. '//' → logprob: -17.437517166137695
    6. '２' → logprob: -17.687517166137695
    7. '२' → logprob: -17.750017166137695
    8. '```' → logprob: -17.937517166137695
    9. ')' → logprob: -18.000017166137695
    10. '/' → logprob: -18.062517166137695

Token 70: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00017421995289623737
    2. ']
' → logprob: -9.000174522399902
    3. ')' → logprob: -10.375174522399902
    4. '   ' → logprob: -11.750174522399902
    5. ' ]' → logprob: -11.750174522399902
    6. '']' → logprob: -13.625174522399902
    7. ']
' → logprob: -13.750174522399902
    8. '}' → logprob: -14.750174522399902
    9. ')]' → logprob: -14.875174522399902
    10. '       ' → logprob: -15.500174522399902

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011502462439239025
    2. ' else' → logprob: -5.011502265930176
    3. 'else' → logprob: -6.011502265930176
    4. '
' → logprob: -6.761502265930176
    5. '\n' → logprob: -7.886502265930176
    6. '    
' → logprob: -8.511502265930176
    7. '	else' → logprob: -8.886502265930176
    8. ' ' → logprob: -9.011502265930176
    9. '<|end|>' → logprob: -9.261502265930176
    10. '  ' → logprob: -10.136502265930176

Token 72: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10109908133745193
    2. 'else' (adapté à ' else') → logprob: -2.6010990142822266
    3. ' else' → logprob: -3.8510990142822266
    4. 'return' → logprob: -7.476099014282227
    5. ' return' → logprob: -9.851099014282227
    6. ' ' → logprob: -11.101099014282227
    7. '
' → logprob: -11.476099014282227
    8. 's' → logprob: -11.601099014282227
    9. 'elif' → logprob: -11.601099014282227
    10. '```' → logprob: -11.726099014282227

Token 73: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13426153361797333
    2. '       ' → logprob: -2.1342616081237793
    3. ':
' → logprob: -5.009261608123779
    4. ' :' → logprob: -8.259261131286621
    5. ':return' → logprob: -8.759261131286621
    6. ' return' → logprob: -9.259261131286621
    7. '   ' → logprob: -10.509261131286621
    8. ':
' → logprob: -11.134261131286621
    9. ':\' → logprob: -11.134261131286621
    10. ' :
' → logprob: -11.259261131286621

Token 74: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8112314939498901
    2. ' return' → logprob: -1.0612314939498901
    3. ' s' → logprob: -1.8112314939498901
    4. '   ' → logprob: -3.5612316131591797
    5. 'return' → logprob: -4.31123161315918
    6. 's' → logprob: -6.06123161315918
    7. '    ' → logprob: -6.56123161315918
    8. ' ' → logprob: -8.81123161315918
    9. '     ' → logprob: -9.31123161315918
    10. '        ' → logprob: -9.56123161315918

Token 75: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.0665479525923729
    2. 'return' (adapté à ' return') → logprob: -2.9415478706359863
    3. ' s' → logprob: -4.691547870635986
    4. 's' → logprob: -6.066547870635986
    5. '   ' → logprob: -10.441548347473145
    6. '       ' → logprob: -11.316548347473145
    7. ' ' → logprob: -11.816548347473145
    8. '    ' → logprob: -11.941548347473145
    9. 'eturn' → logprob: -12.066548347473145
    10. 'r' → logprob: -12.316548347473145

Token 76: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.160234272480011
    2. 's' → logprob: -1.9102342128753662
    3. '(s' → logprob: -12.785234451293945
    4. ''s' → logprob: -13.285234451293945
    5. ' ' → logprob: -13.785234451293945
    6. ' '' → logprob: -14.222734451293945
    7. ' ' → logprob: -14.785234451293945
    8. '_s' → logprob: -14.785234451293945
    9. 'inverse' → logprob: -14.910234451293945
    10. ''' → logprob: -15.160234451293945

Token 77: '[l' (ID: 38286)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3988173007965088
    2. '<|end|>' → logprob: -1.3988173007965088
    3. '#' → logprob: -4.27381706237793
    4. '(' → logprob: -4.52381706237793
    5. '\n' → logprob: -4.52381706237793
    6. ')' → logprob: -4.64881706237793
    7. 's' → logprob: -5.02381706237793
    8. '[]' → logprob: -5.27381706237793
    9. '_' → logprob: -5.52381706237793
    10. '```' → logprob: -5.77381706237793

Token 78: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -3.8889261304575484e-06
    2. ' //' → logprob: -13.750003814697266
    3. '-' → logprob: -13.875003814697266
    4. '#' → logprob: -14.000003814697266
    5. ']' → logprob: -15.750003814697266
    6. '```' → logprob: -15.875003814697266
    7. '//=' → logprob: -16.000003814697266
    8. '::-' → logprob: -16.250003814697266
    9. '://' → logprob: -16.375003814697266
    10. '2' → logprob: -16.375003814697266

Token 79: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.37500286102295
    3. '1' → logprob: -14.12500286102295
    4. '3' → logprob: -15.37500286102295
    5. '```' → logprob: -16.625001907348633
    6. '//' → logprob: -16.750001907348633
    7. '   ' → logprob: -17.187501907348633
    8. '۲' → logprob: -17.937501907348633
    9. '２' → logprob: -18.250001907348633
    10. '21' → logprob: -18.375001907348633

Token 80: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006451031658798456
    2. ']' → logprob: -6.13145112991333
    3. ':]' → logprob: -6.13145112991333
    4. ' +' → logprob: -6.63145112991333
    5. '+l' → logprob: -8.131450653076172
    6. ']+' → logprob: -8.756450653076172
    7. ':l' → logprob: -9.131450653076172
    8. ':-' → logprob: -9.381450653076172
    9. ':' → logprob: -9.881450653076172
    10. '-' → logprob: -10.131450653076172

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.125005722045898
    3. '11' → logprob: -15.875005722045898
    4. '2' → logprob: -16.6250057220459
    5. '۱' → logprob: -17.8750057220459
    6. '   ' → logprob: -18.2500057220459
    7. '```' → logprob: -18.5000057220459
    8. '１' → logprob: -18.6250057220459
    9. '  ' → logprob: -18.8125057220459
    10. '+' → logprob: -18.9375057220459

Token 82: ':]' (ID: 67377)
  Prédit: ':]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.011196955107152462
    2. ']' → logprob: -4.511197090148926
    3. ':' → logprob: -9.386197090148926
    4. ' :]' → logprob: -10.386197090148926
    5. ']+' → logprob: -11.261197090148926
    6. ':l' → logprob: -11.761197090148926
    7. '+' → logprob: -11.761197090148926
    8. ' ]' → logprob: -13.261197090148926
    9. '']' → logprob: -13.511197090148926
    10. '+]' → logprob: -14.136197090148926

Token 83: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.14479464292526245
    2. '+' → logprob: -2.0197947025299072
    3. 's' → logprob: -6.644794464111328
    4. '+s' → logprob: -7.519794464111328
    5. '[::-' → logprob: -8.269794464111328
    6. ' +
' → logprob: -12.519794464111328
    7. '+l' → logprob: -12.769794464111328
    8. ' s' → logprob: -12.769794464111328
    9. '[' → logprob: -13.269794464111328
    10. ' ' → logprob: -13.394794464111328

Token 84: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.03811115026473999
    2. 's' → logprob: -3.2881112098693848
    3. ' ' → logprob: -9.913110733032227
    4. '(s' → logprob: -11.538110733032227
    5. ''s' → logprob: -12.913110733032227
    6. ' '' → logprob: -13.163110733032227
    7. '[s' → logprob: -13.413110733032227
    8. ' ' → logprob: -13.913110733032227
    9. '	s' → logprob: -13.913110733032227
    10. '  ' → logprob: -14.913110733032227

Token 85: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.012734489515423775
    2. '[:' → logprob: -4.387734413146973
    3. '[' → logprob: -8.887734413146973
    4. '[:]' → logprob: -9.887734413146973
    5. '[s' → logprob: -10.637734413146973
    6. 'l' → logprob: -12.512734413146973
    7. ':l' → logprob: -13.262734413146973
    8. '[len' → logprob: -13.512734413146973
    9. '[]' → logprob: -13.512734413146973
    10. '[
' → logprob: -14.262734413146973

Token 86: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -6.034592388459714e-06
    2. '2' → logprob: -12.500005722045898
    3. ' //' → logprob: -13.750005722045898
    4. '/' → logprob: -14.625005722045898
    5. '```' → logprob: -15.250005722045898
    6. '']//' → logprob: -16.3750057220459
    7. '://' → logprob: -16.6250057220459
    8. '`' → logprob: -16.6250057220459
    9. '">//' → logprob: -16.7500057220459
    10. '//=' → logprob: -17.1250057220459

Token 87: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '۲' → logprob: -16.000001907348633
    4. '२' → logprob: -17.250001907348633
    5. '２' → logprob: -17.500001907348633
    6. '1' → logprob: -18.125001907348633
    7. ')' → logprob: -18.812501907348633
    8. '٢' → logprob: -18.937501907348633
    9. '   ' → logprob: -19.000001907348633
    10. '২' → logprob: -19.000001907348633

Token 88: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10813345015048981
    2. ':l' → logprob: -2.483133554458618
    3. ':]' → logprob: -4.483133316040039
    4. ']+' → logprob: -5.483133316040039
    5. ':' → logprob: -6.233133316040039
    6. '+' → logprob: -7.233133316040039
    7. ' ]' → logprob: -7.483133316040039
    8. ']:' → logprob: -9.608133316040039
    9. 'l' → logprob: -9.983133316040039
    10. ' :]' → logprob: -10.108133316040039

Token 89: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25725671648979187
    2. ' +' → logprob: -1.7572567462921143
    3. 's' → logprob: -3.8822567462921143
    4. '<|end|>' → logprob: -4.382256507873535
    5. '[' → logprob: -5.257256507873535
    6. '[:' → logprob: -5.382256507873535
    7. '[:]' → logprob: -5.757256507873535
    8. '[::-' → logprob: -6.007256507873535
    9. ':' → logprob: -6.132256507873535
    10. ' s' → logprob: -7.507256507873535

Token 90: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.20150943100452423
    2. 's' → logprob: -1.7015094757080078
    3. ' ' → logprob: -9.326509475708008
    4. '(s' → logprob: -13.076509475708008
    5. ''s' → logprob: -13.701509475708008
    6. '	s' → logprob: -14.326509475708008
    7. ' ' → logprob: -14.576509475708008
    8. '  ' → logprob: -14.576509475708008
    9. ' '' → logprob: -14.951509475708008
    10. '   ' → logprob: -15.264009475708008

Token 91: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.04293764382600784
    2. '[:-' → logprob: -3.417937755584717
    3. '[l' → logprob: -5.042937755584717
    4. ':l' → logprob: -6.667937755584717
    5. ':' → logprob: -6.792937755584717
    6. '[:]' → logprob: -8.042937278747559
    7. '[' → logprob: -9.667937278747559
    8. 'l' → logprob: -13.167937278747559
    9. ' [:' → logprob: -13.292937278747559
    10. '][:' → logprob: -13.292937278747559

Token 92: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -4.246537173457909e-06
    2. ' l' → logprob: -12.375003814697266
    3. '	l' → logprob: -17.875003814697266
    4. '(l' → logprob: -19.500003814697266
    5. ' ' → logprob: -19.625003814697266
    6. '1' → logprob: -19.875003814697266
    7. '   ' → logprob: -20.125003814697266
    8. '_l' → logprob: -20.250003814697266
    9. '```' → logprob: -20.500003814697266
    10. '  ' → logprob: -20.875003814697266

Token 93: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.0031818747520446777
    2. '2' → logprob: -5.7531819343566895
    3. ' //' → logprob: -12.753181457519531
    4. '/' → logprob: -14.628181457519531
    5. '1' → logprob: -14.628181457519531
    6. '   ' → logprob: -16.00318145751953
    7. ']' → logprob: -16.75318145751953
    8. ' ' → logprob: -16.87818145751953
    9. '```' → logprob: -17.00318145751953
    10. '#' → logprob: -18.00318145751953

Token 94: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.319370302458992e-06
    2. '1' → logprob: -12.500005722045898
    3. ' ' → logprob: -13.500005722045898
    4. '   ' → logprob: -17.3125057220459
    5. '۲' → logprob: -17.3750057220459
    6. '２' → logprob: -17.8125057220459
    7. '```' → logprob: -17.9375057220459
    8. ']' → logprob: -18.6250057220459
    9. '२' → logprob: -18.6875057220459
    10. '  ' → logprob: -19.3125057220459

Token 95: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.6776029699249193e-05
    2. ' ]' → logprob: -11.00002670288086
    3. '+' → logprob: -12.25002670288086
    4. ')' → logprob: -13.12502670288086
    5. ')]' → logprob: -14.37502670288086
    6. '']' → logprob: -14.50002670288086
    7. '+]' → logprob: -14.50002670288086
    8. '1' → logprob: -14.75002670288086
    9. '}' → logprob: -14.75002670288086
    10. ']
' → logprob: -15.25002670288086

Token 96: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04504906013607979
    2. 'd' → logprob: -4.42004919052124
    3. '#' → logprob: -4.79504919052124
    4. '\' → logprob: -4.92004919052124
    5. 'a' → logprob: -6.04504919052124
    6. '_' → logprob: -6.17004919052124
    7. '
' → logprob: -6.42004919052124
    8. '<|end|>' → logprob: -6.42004919052124
    9. ')' → logprob: -6.92004919052124
    10. '\n' → logprob: -7.04504919052124

Token 97: ' inverse' (ID: 53743)
  Prédit: ' inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inverse' → logprob: -0.338221937417984
    2. '_' → logprob: -2.213222026824951
    3. ' _' → logprob: -2.463222026824951
    4. ' ' → logprob: -3.463222026824951
    5. 'inverse' → logprob: -3.588222026824951
    6. '_inverse' → logprob: -4.088222026824951
    7. '_m' → logprob: -6.338222026824951
    8. ' space' → logprob: -6.650722026824951
    9. ' reverse' → logprob: -6.838222026824951
    10. '_s' → logprob: -7.025722026824951

Token 98: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.05645318329334259
    2. '_s' → logprob: -4.181453227996826
    3. '_' → logprob: -4.556453227996826
    4. '_t' → logprob: -5.931453227996826
    5. '_a' → logprob: -5.931453227996826
    6. '_c' → logprob: -6.431453227996826
    7. '_r' → logprob: -6.431453227996826
    8. '_b' → logprob: -6.556453227996826
    9. '_j' → logprob: -6.806453227996826
    10. '_f' → logprob: -6.931453227996826

Token 99: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.23924429714679718
    2. 'i' → logprob: -2.114244222640991
    3. 'iss' → logprob: -3.739244222640991
    4. 'a' → logprob: -3.989244222640991
    5. 's' → logprob: -3.989244222640991
    6. 'e' → logprob: -4.98924446105957
    7. 'o' → logprob: -5.11424446105957
    8. 'c' → logprob: -5.36424446105957
    9. 'rs' → logprob: -5.98924446105957
    10. 'y' → logprob: -6.42674446105957

Token 100: '_a' (ID: 10852)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.9680389761924744
    2. '_' → logprob: -1.0930390357971191
    3. '_a' → logprob: -2.593039035797119
    4. '_r' → logprob: -2.718039035797119
    5. '_c' → logprob: -3.218039035797119
    6. '_e' → logprob: -3.718039035797119
    7. '_s' → logprob: -3.843039035797119
    8. '_i' → logprob: -4.468039035797119
    9. '_f' → logprob: -5.093039035797119
    10. '_b' → logprob: -5.218039035797119

Token 101: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0027733708266168833
    2. '(' → logprob: -7.377773284912109
    3. 's' → logprob: -7.877773284912109
    4. '_(' → logprob: -8.25277328491211
    5. '_' → logprob: -8.37777328491211
    6. ' (' → logprob: -8.75277328491211
    7. 'l' → logprob: -8.75277328491211
    8. 'c' → logprob: -9.00277328491211
    9. 'a' → logprob: -9.37777328491211
    10. 'd' → logprob: -9.75277328491211

Token 102: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -1.2352385965641588e-05
    2. '):
' → logprob: -11.500012397766113
    3. ' ):' → logprob: -13.500012397766113
    4. ')' → logprob: -14.375012397766113
    5. ':' → logprob: -16.375011444091797
    6. '   ' → logprob: -16.750011444091797
    7. ''):' → logprob: -17.875011444091797
    8. ']:' → logprob: -18.000011444091797
    9. ' ' → logprob: -18.250011444091797
    10. '):
' → logprob: -18.375011444091797

Token 103: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.012914430350065231
    2. ' s' → logprob: -4.637914657592773
    3. '   ' → logprob: -6.262914657592773
    4. 'return' → logprob: -7.012914657592773
    5. ' if' → logprob: -8.887914657592773
    6. '    ' → logprob: -9.637914657592773
    7. 's' → logprob: -10.387914657592773
    8. ' def' → logprob: -10.762914657592773
    9. ' reverse' → logprob: -11.137914657592773
    10. ' l' → logprob: -11.262914657592773

Token 104: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.010050944983959198
    2. 's' → logprob: -4.6350507736206055
    3. ' '' → logprob: -8.885050773620605
    4. ''' → logprob: -9.885050773620605
    5. ' ' → logprob: -10.135050773620605
    6. '"' → logprob: -10.760050773620605
    7. ''s' → logprob: -10.885050773620605
    8. '(s' → logprob: -12.385050773620605
    9. ' "' → logprob: -12.385050773620605
    10. ' chr' → logprob: -12.510050773620605

Token 105: '[::-' (ID: 159890)
  Prédit: '[::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.4365186095237732
    2. '[' → logprob: -1.186518669128418
    3. '[:]' → logprob: -4.186518669128418
    4. '[-' → logprob: -4.436518669128418
    5. '.lower' → logprob: -4.811518669128418
    6. '[len' → logprob: -5.686518669128418
    7. '#' → logprob: -6.311518669128418
    8. '.upper' → logprob: -6.311518669128418
    9. '[:-' → logprob: -6.561518669128418
    10. '_' → logprob: -7.061518669128418

Token 106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.2994620242971e-06
    2. '-' → logprob: -11.750008583068848
    3. '```' → logprob: -15.625008583068848
    4. '::-' → logprob: -16.62500762939453
    5. '2' → logprob: -16.87500762939453
    6. '``' → logprob: -17.37500762939453
    7. ' ' → logprob: -17.43750762939453
    8. '   ' → logprob: -18.31250762939453
    9. '１' → logprob: -18.43750762939453
    10. ':' → logprob: -18.68750762939453

Token 107: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00408801669254899
    2. ')' → logprob: -5.504087924957275
    3. '<|end|>' → logprob: -12.879088401794434
    4. '[::-' → logprob: -13.379088401794434
    5. '']' → logprob: -13.879088401794434
    6. ' ]' → logprob: -13.879088401794434
    7. '])' → logprob: -14.004088401794434
    8. 's' → logprob: -14.004088401794434
    9. ']
' → logprob: -14.254088401794434
    10. ')]' → logprob: -14.879088401794434

Token 108: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004838434047996998
    2. '<|end|>' → logprob: -5.754838466644287
    3. '```' → logprob: -7.629838466644287
    4. '#' → logprob: -8.379837989807129
    5. '\' → logprob: -8.504837989807129
    6. '
' → logprob: -8.879837989807129
    7. '\n' → logprob: -9.129837989807129
    8. ' 
' → logprob: -9.504837989807129
    9. ' def' → logprob: -9.629837989807129
    10. 'newline' → logprob: -9.754837989807129

Token 109: ' inverse' (ID: 53743)
  Prédit: ' inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inverse' → logprob: -0.0713731050491333
    2. 'inverse' → logprob: -3.4463729858398438
    3. '_inverse' → logprob: -4.321372985839844
    4. ' _' → logprob: -4.696372985839844
    5. '_' → logprob: -4.946372985839844
    6. '_m' → logprob: -5.946372985839844
    7. ' ' → logprob: -6.321372985839844
    8. '_s' → logprob: -8.133872985839844
    9. ' space' → logprob: -8.196372985839844
    10. ' ' → logprob: -8.446372985839844

Token 110: '_dr' (ID: 74961)
  Prédit: '_m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.14038392901420593
    2. '_' → logprob: -3.0153839588165283
    3. '_s' → logprob: -3.3903839588165283
    4. '_b' → logprob: -5.265383720397949
    5. '_a' → logprob: -5.390383720397949
    6. '_user' → logprob: -5.515383720397949
    7. '_c' → logprob: -5.640383720397949
    8. '_t' → logprob: -5.890383720397949
    9. '_mc' → logprob: -6.015383720397949
    10. '_w' → logprob: -6.140383720397949

Token 111: '_p' (ID: 1359)
  Prédit: '_o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_o' → logprob: -0.8771483898162842
    2. '_a' → logprob: -1.1271483898162842
    3. '_c' → logprob: -3.127148389816284
    4. '_e' → logprob: -3.377148389816284
    5. '_y' → logprob: -3.877148389816284
    6. '_' → logprob: -3.877148389816284
    7. '_s' → logprob: -4.002148628234863
    8. 'a' → logprob: -4.252148628234863
    9. '_u' → logprob: -4.377148628234863
    10. '_b' → logprob: -4.502148628234863

Token 112: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0010559145594015718
    2. 'ro' → logprob: -8.501055717468262
    3. 'r' → logprob: -8.751055717468262
    4. 'a' → logprob: -9.251055717468262
    5. 's' → logprob: -9.501055717468262
    6. '_a' → logprob: -9.626055717468262
    7. '(a' → logprob: -9.876055717468262
    8. 'ar' → logprob: -10.126055717468262
    9. '_(' → logprob: -10.251055717468262
    10. 'refix' → logprob: -10.751055717468262

Token 113: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -1.664371848164592e-05
    2. ' ):' → logprob: -11.750016212463379
    3. '):
' → logprob: -12.000016212463379
    4. ':' → logprob: -14.000016212463379
    5. '   ' → logprob: -14.500016212463379
    6. ')' → logprob: -14.750016212463379
    7. ' ' → logprob: -16.000017166137695
    8. ''):' → logprob: -16.375017166137695
    9. '):
' → logprob: -16.500017166137695
    10. '():' → logprob: -16.750017166137695

Token 114: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3104392886161804
    2. ' s' → logprob: -1.6854393482208252
    3. 'return' → logprob: -3.560439348220825
    4. '   ' → logprob: -3.685439348220825
    5. 's' → logprob: -3.935439348220825
    6. ''' → logprob: -6.685439109802246
    7. ' ''.' → logprob: -7.310439109802246
    8. '''.' → logprob: -7.435439109802246
    9. 'n' → logprob: -7.560439109802246
    10. 'def' → logprob: -7.685439109802246

Token 115: ' res' (ID: 694)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4668954014778137
    2. 's' → logprob: -2.216895341873169
    3. ' return' → logprob: -2.716895341873169
    4. '''.' → logprob: -2.841895341873169
    5. ' s' → logprob: -3.966895341873169
    6. ''' → logprob: -4.091895580291748
    7. 'len' → logprob: -4.091895580291748
    8. 'n' → logprob: -4.216895580291748
    9. 'l' → logprob: -4.341895580291748
    10. 'if' → logprob: -4.591895580291748

Token 116: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.055790144950151443
    2. '=' → logprob: -2.9307901859283447
    3. 'ult' → logprob: -7.180789947509766
    4. ' ' → logprob: -9.930789947509766
    5. '=[]' → logprob: -10.055789947509766
    6. 's' → logprob: -11.055789947509766
    7. '=""' → logprob: -11.930789947509766
    8. '   ' → logprob: -12.180789947509766
    9. ',' → logprob: -12.180789947509766
    10. '=''' → logprob: -12.680789947509766

Token 117: ' []
' (ID: 8911)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.2376355528831482
    2. '''' → logprob: -2.112635612487793
    3. '[]' → logprob: -2.487635612487793
    4. '[]
' → logprob: -5.362635612487793
    5. '"' → logprob: -6.362635612487793
    6. '''
' → logprob: -7.487635612487793
    7. ''' → logprob: -8.362635612487793
    8. 's' → logprob: -9.237635612487793
    9. ''s' → logprob: -9.487635612487793
    10. '[' → logprob: -10.487635612487793

Token 118: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.28719213604927063
    2. 'for' → logprob: -2.1621921062469482
    3. '   ' → logprob: -2.4121921062469482
    4. '    ' → logprob: -3.4121921062469482
    5. ' ' → logprob: -5.162192344665527
    6. ' i' → logprob: -5.662192344665527
    7. '	for' → logprob: -7.037192344665527
    8. '     
' → logprob: -7.787192344665527
    9. 'i' → logprob: -8.037192344665527
    10. '    
' → logprob: -8.537192344665527

Token 119: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3265044689178467
    2. 'i' → logprob: -1.4515044689178467
    3. 'stack' → logprob: -3.9515044689178467
    4. 'skip' → logprob: -4.201504707336426
    5. '   ' → logprob: -5.076504707336426
    6. ' for' → logprob: -6.451504707336426
    7. 'count' → logprob: -7.451504707336426
    8. 'idx' → logprob: -8.326504707336426
    9. 'l' → logprob: -8.576504707336426
    10. 'n' → logprob: -8.826504707336426

Token 120: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6339722275733948
    2. ' c' → logprob: -1.00897216796875
    3. 'i' → logprob: -2.88397216796875
    4. ' i' → logprob: -3.13397216796875
    5. 'ch' → logprob: -5.88397216796875
    6. 'char' → logprob: -7.00897216796875
    7. ' ch' → logprob: -7.75897216796875
    8. ' ' → logprob: -7.88397216796875
    9. ' char' → logprob: -8.13397216796875
    10. 'x' → logprob: -8.25897216796875

Token 121: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006950749550014734
    2. 'in' → logprob: -5.256950855255127
    3. 's' → logprob: -6.506950855255127
    4. ' s' → logprob: -8.756950378417969
    5. ' ' → logprob: -9.881950378417969
    6. ',' → logprob: -13.319450378417969
    7. ' ,' → logprob: -13.631950378417969
    8. '<|end|>' → logprob: -13.756950378417969
    9. 'import' → logprob: -14.194450378417969
    10. '_' → logprob: -14.381950378417969

Token 122: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06208118051290512
    2. ' s' → logprob: -2.8120810985565186
    3. ' reversed' → logprob: -9.812081336975098
    4. 're' → logprob: -10.187081336975098
    5. ' ' → logprob: -12.312081336975098
    6. 'range' → logprob: -12.437081336975098
    7. '   ' → logprob: -12.999581336975098
    8. '(s' → logprob: -13.187081336975098
    9. ' range' → logprob: -13.562081336975098
    10. '	s' → logprob: -13.687081336975098

Token 123: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006298468913882971
    2. ':
' → logprob: -5.256298542022705
    3. ' :' → logprob: -7.131298542022705
    4. '[::-' → logprob: -8.881298065185547
    5. '[:-' → logprob: -10.006298065185547
    6. '[' → logprob: -10.756298065185547
    7. '   ' → logprob: -11.381298065185547
    8. '):' → logprob: -11.506298065185547
    9. ' if' → logprob: -11.756298065185547
    10. '    ' → logprob: -12.381298065185547

Token 124: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030873820185661316
    2. ' if' → logprob: -3.6558737754821777
    3. ' res' → logprob: -6.030873775482178
    4. '    ' → logprob: -6.530873775482178
    5. '   ' → logprob: -8.530874252319336
    6. 'if' → logprob: -8.780874252319336
    7. 'res' → logprob: -9.280874252319336
    8. ' s' → logprob: -9.655874252319336
    9. ' ' → logprob: -10.030874252319336
    10. 'd' → logprob: -10.280874252319336

Token 125: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.42873653769493103
    2. ' res' → logprob: -1.5537365674972534
    3. 'res' → logprob: -2.428736448287964
    4. 'if' (adapté à ' if') → logprob: -3.178736448287964
    5. '   ' → logprob: -5.428736686706543
    6. '    ' → logprob: -5.928736686706543
    7. '       ' → logprob: -8.553736686706543
    8. ' ' → logprob: -10.053736686706543
    9. 'd' → logprob: -11.178736686706543
    10. '        ' → logprob: -11.178736686706543

Token 126: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.16101393103599548
    2. 'c' → logprob: -1.9110139608383179
    3. ''' → logprob: -8.03601360321045
    4. ' '' → logprob: -8.53601360321045
    5. ' ord' → logprob: -9.03601360321045
    6. ' ' → logprob: -9.53601360321045
    7. 'ord' → logprob: -10.03601360321045
    8. ' not' → logprob: -11.59851360321045
    9. '  ' → logprob: -12.53601360321045
    10. '   ' → logprob: -13.03601360321045

Token 127: '.is' (ID: 3109)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.0289989709854126
    2. '.is' → logprob: -1.1539989709854126
    3. ' in' → logprob: -1.5289989709854126
    4. '.' → logprob: -2.903998851776123
    5. '==' → logprob: -3.028998851776123
    6. 'is' → logprob: -6.153998851776123
    7. '=='' → logprob: -6.903998851776123
    8. 'in' → logprob: -7.403998851776123
    9. ' .' → logprob: -7.403998851776123
    10. '.lower' → logprob: -7.528998851776123

Token 128: 'digit' (ID: 78327)
  Prédit: 'alpha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alpha' → logprob: -0.18546922504901886
    2. 'upper' → logprob: -2.185469150543213
    3. 'lower' → logprob: -3.060469150543213
    4. 'digit' → logprob: -4.685469150543213
    5. 'al' → logprob: -7.435469150543213
    6. 'numeric' → logprob: -9.185469627380371
    7. 'decimal' → logprob: -10.060469627380371
    8. 'ascii' → logprob: -11.185469627380371
    9. 'print' → logprob: -12.685469627380371
    10. 'a' → logprob: -12.810469627380371

Token 129: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.008641043677926064
    2. '()' → logprob: -4.883641242980957
    3. '():
' → logprob: -6.883641242980957
    4. '(' → logprob: -12.258641242980957
    5. '():

' → logprob: -13.133641242980957
    6. '()==' → logprob: -14.008641242980957
    7. ' ():' → logprob: -14.008641242980957
    8. '():
' → logprob: -14.008641242980957
    9. ':' → logprob: -15.008641242980957
    10. '()>' → logprob: -16.00864028930664

Token 130: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029114672914147377
    2. '       ' → logprob: -4.154114723205566
    3. '        ' → logprob: -5.029114723205566
    4. ' res' → logprob: -5.654114723205566
    5. 'res' → logprob: -7.154114723205566
    6. ',' → logprob: -7.904114723205566
    7. '0' → logprob: -8.654114723205566
    8. '<|end|>' → logprob: -8.779114723205566
    9. '            ' → logprob: -8.904114723205566
    10. ')' → logprob: -9.029114723205566

Token 131: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.10786774754524231
    2. 'res' (adapté à ' res') → logprob: -2.35786771774292
    3. '           ' → logprob: -5.35786771774292
    4. '       ' → logprob: -5.98286771774292
    5. ' if' → logprob: -8.732868194580078
    6. '            ' → logprob: -10.232868194580078
    7. '        ' → logprob: -10.357868194580078
    8. ' ' → logprob: -10.357868194580078
    9. ' ' → logprob: -10.732868194580078
    10. '               ' → logprob: -11.107868194580078

Token 132: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.005965765565633774
    2. '.' → logprob: -5.130965709686279
    3. ' .' → logprob: -10.505966186523438
    4. 'append' → logprob: -11.880966186523438
    5. '.extend' → logprob: -14.130966186523438
    6. ' append' → logprob: -14.380966186523438
    7. '.ap' → logprob: -14.755966186523438
    8. '.app' → logprob: -15.130966186523438
    9. '.Append' → logprob: -15.130966186523438
    10. ' +=' → logprob: -15.630966186523438

Token 133: '('' (ID: 706)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.20396362245082855
    2. '(chr' → logprob: -1.8289636373519897
    3. '(c' → logprob: -4.453963756561279
    4. '(' → logprob: -4.703963756561279
    5. '('' → logprob: -6.078963756561279
    6. 'chr' → logprob: -7.578963756561279
    7. 'str' → logprob: -8.578963279724121
    8. '('*' → logprob: -9.078963279724121
    9. '('_' → logprob: -10.828963279724121
    10. 'c' → logprob: -10.953963279724121

Token 134: '9' (ID: 24)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.04410826414823532
    2. ' str' → logprob: -4.0441083908081055
    3. 'chr' → logprob: -4.4191083908081055
    4. '9' → logprob: -4.5441083908081055
    5. 'c' → logprob: -6.9191083908081055
    6. ''' → logprob: -7.6691083908081055
    7. '{' → logprob: -8.169108390808105
    8. '(str' → logprob: -8.419108390808105
    9. '')' → logprob: -8.919108390808105
    10. 's' → logprob: -9.044108390808105

Token 135: ''' (ID: 6)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.43259772658348083
    2. ''' → logprob: -1.0575977563858032
    3. ''))' → logprob: -6.307597637176514
    4. '-' → logprob: -7.307597637176514
    5. 'str' → logprob: -8.057598114013672
    6. ')' → logprob: -9.182598114013672
    7. ' -' → logprob: -9.182598114013672
    8. '9' → logprob: -9.432598114013672
    9. ''-' → logprob: -9.432598114013672
    10. '')]' → logprob: -9.557598114013672

Token 136: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.731642484664917
    2. 'str' → logprob: -1.856642484664917
    3. 'chr' → logprob: -2.231642484664917
    4. ' -' → logprob: -2.481642484664917
    5. '-' → logprob: -2.606642484664917
    6. 'int' → logprob: -2.981642484664917
    7. '-int' → logprob: -3.481642484664917
    8. ' ' → logprob: -5.731642723083496
    9. '-str' → logprob: -5.856642723083496
    10. '(chr' → logprob: -6.606642723083496

Token 137: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.05489705875515938
    2. ' c' → logprob: -2.9298970699310303
    3. 'int' → logprob: -12.17989730834961
    4. ')c' → logprob: -13.05489730834961
    5. ' ' → logprob: -13.30489730834961
    6. '0' → logprob: -13.92989730834961
    7. '9' → logprob: -14.17989730834961
    8. 'False' → logprob: -14.42989730834961
    9. 'cation' → logprob: -14.55489730834961
    10. '   ' → logprob: -14.99239730834961

Token 138: ' ==' (ID: 951)
  Prédit: '==''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.4376087188720703
    2. '==' → logprob: -1.5626087188720703
    3. ' ==' → logprob: -1.9376087188720703
    4. 'else' → logprob: -8.18760871887207
    5. ' =='' → logprob: -9.06260871887207
    6. '=="' → logprob: -9.31260871887207
    7. ' else' → logprob: -9.56260871887207
    8. '!='' → logprob: -9.81260871887207
    9. '=' → logprob: -9.93760871887207
    10. '==='' → logprob: -10.56260871887207

Token 139: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.07866359502077103
    2. ' '' → logprob: -2.8286635875701904
    3. '0' → logprob: -4.2036638259887695
    4. '9' → logprob: -6.8286638259887695
    5. ' ' → logprob: -7.8286638259887695
    6. '"' → logprob: -9.32866382598877
    7. '1' → logprob: -11.82866382598877
    8. ' 
' → logprob: -12.07866382598877
    9. ''s' → logprob: -12.20366382598877
    10. '   ' → logprob: -12.95366382598877

Token 140: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12900637090206146
    2. ''' → logprob: -2.1290063858032227
    3. '9' → logprob: -6.754006385803223
    4. ' '' → logprob: -7.504006385803223
    5. ' ' → logprob: -8.004006385803223
    6. '"' → logprob: -11.129006385803223
    7. ''s' → logprob: -12.754006385803223
    8. '1' → logprob: -13.629006385803223
    9. '
' → logprob: -13.879006385803223
    10. '8' → logprob: -14.254006385803223

Token 141: ''' (ID: 6)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.018153922632336617
    2. 'else' → logprob: -4.018154144287109
    3. '	else' → logprob: -12.64315414428711
    4. '        ' → logprob: -15.26815414428711
    5. ' ' → logprob: -15.76815414428711
    6. '```' → logprob: -17.01815414428711
    7. '    ' → logprob: -17.14315414428711
    8. '       ' → logprob: -17.26815414428711
    9. '         ' → logprob: -17.39315414428711
    10. '   ' → logprob: -17.39315414428711

Token 142: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5759451985359192
    2. 'else' → logprob: -0.8259451985359192
    3. '	else' → logprob: -12.575944900512695
    4. '           ' → logprob: -13.450944900512695
    5. '       ' → logprob: -15.700944900512695
    6. '        ' → logprob: -15.700944900512695
    7. '         ' → logprob: -15.825944900512695
    8. '```' → logprob: -15.950944900512695
    9. '               ' → logprob: -16.575944900512695
    10. '            ' → logprob: -17.325944900512695

Token 143: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.04872816428542137
    2. ' str' → logprob: -3.0487282276153564
    3. 'chr' → logprob: -9.048727989196777
    4. ' ' → logprob: -11.298727989196777
    5. '  ' → logprob: -12.548727989196777
    6. ' chr' → logprob: -12.673727989196777
    7. '   ' → logprob: -13.298727989196777
    8. '	str' → logprob: -14.048727989196777
    9. '    ' → logprob: -14.298727989196777
    10. '       ' → logprob: -15.173727989196777

Token 144: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4741496741771698
    2. '(int' → logprob: -0.9741497039794922
    3. '((' → logprob: -9.974149703979492
    4. '9' → logprob: -11.599149703979492
    5. '(abs' → logprob: -12.099149703979492
    6. 'int' → logprob: -12.349149703979492
    7. '(ord' → logprob: -12.974149703979492
    8. '(
' → logprob: -12.974149703979492
    9. ' (' → logprob: -14.224149703979492
    10. '(eval' → logprob: -14.974149703979492

Token 145: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.011379771865904331
    2. '(' → logprob: -4.511379718780518
    3. 'c' → logprob: -9.011380195617676
    4. '('' → logprob: -9.136380195617676
    5. '9' → logprob: -9.261380195617676
    6. '(int' → logprob: -12.386380195617676
    7. '((' → logprob: -13.386380195617676
    8. ')c' → logprob: -14.511380195617676
    9. ' (' → logprob: -15.136380195617676
    10. '(
' → logprob: -15.886380195617676

Token 146: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018463045358657837
    2. ')-' → logprob: -4.143463134765625
    3. ')c' → logprob: -6.268463134765625
    4. '(c' → logprob: -8.393463134765625
    5. 'c' → logprob: -9.018463134765625
    6. ')+' → logprob: -9.768463134765625
    7. '9' → logprob: -9.893463134765625
    8. ' )' → logprob: -10.143463134765625
    9. '(' → logprob: -11.393463134765625
    10. '1' → logprob: -11.893463134765625

Token 147: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05177480727434158
    2. '-' → logprob: -3.301774740219116
    3. ' -' → logprob: -4.926774978637695
    4. ')-' → logprob: -5.926774978637695
    5. '(' → logprob: -6.551774978637695
    6. '(c' → logprob: -7.676774978637695
    7. 'c' → logprob: -7.676774978637695
    8. ')+' → logprob: -7.926774978637695
    9. '('' → logprob: -8.176774978637695
    10. ' )' → logprob: -8.801774978637695

Token 148: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -17.500015258789062
    4. ')' → logprob: -19.375015258789062
    5. '  ' → logprob: -19.500015258789062
    6. '' → logprob: -19.750015258789062
    7. ' ' → logprob: -20.375015258789062
    8. '<|end|>' → logprob: -20.375015258789062
    9. '１' → logprob: -21.000015258789062
    10. '0' → logprob: -21.187515258789062

Token 149: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -15.875031471252441
    4. '  ' → logprob: -17.625030517578125
    5. ')' → logprob: -18.375030517578125
    6. '' → logprob: -18.625030517578125
    7. '<|end|>' → logprob: -18.812530517578125
    8. '0' → logprob: -19.562530517578125
    9. '１' → logprob: -19.625030517578125
    10. '9' → logprob: -20.000030517578125

Token 150: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.25249868631362915
    2. '))
' → logprob: -1.5024986267089844
    3. ')' → logprob: -7.752498626708984
    4. '))
' → logprob: -9.752498626708984
    5. ')))' → logprob: -10.252498626708984
    6. ')
' → logprob: -11.502498626708984
    7. ')))
' → logprob: -12.002498626708984
    8. ''))' → logprob: -12.002498626708984
    9. ' ))
' → logprob: -12.002498626708984
    10. ''))
' → logprob: -12.127498626708984

Token 151: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028184814378619194
    2. ' else' → logprob: -3.9031848907470703
    3. 'else' → logprob: -4.90318489074707
    4. '   ' → logprob: -9.27818489074707
    5. ')' → logprob: -9.77818489074707
    6. '	else' → logprob: -10.90318489074707
    7. '	' → logprob: -11.77818489074707
    8. 'elif' → logprob: -12.77818489074707
    9. '<|end|>' → logprob: -13.27818489074707
    10. '```' → logprob: -13.40318489074707

Token 152: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5283064246177673
    2. '       ' → logprob: -1.528306484222412
    3. 'else' (adapté à ' else') → logprob: -1.653306484222412
    4. '   ' → logprob: -6.278306484222412
    5. 'elif' → logprob: -9.528306007385254
    6. '	else' → logprob: -9.778306007385254
    7. ' elif' → logprob: -10.278306007385254
    8. '    ' → logprob: -11.403306007385254
    9. ' ' → logprob: -12.153306007385254
    10. '  ' → logprob: -12.653306007385254

Token 153: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06432861089706421
    2. '           ' → logprob: -3.064328670501709
    3. ':
' → logprob: -4.189328670501709
    4. ' :' → logprob: -8.31432819366455
    5. '       ' → logprob: -9.18932819366455
    6. ' :
' → logprob: -10.43932819366455
    7. '          ' → logprob: -10.93932819366455
    8. ',' → logprob: -11.06432819366455
    9. '        ' → logprob: -11.18932819366455
    10. '               ' → logprob: -12.06432819366455

Token 154: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09765313565731049
    2. 'res' → logprob: -2.5976531505584717
    3. '           ' → logprob: -4.097652912139893
    4. ' res' → logprob: -6.347652912139893
    5. '   ' → logprob: -9.47265338897705
    6. '               ' → logprob: -9.84765338897705
    7. '        
' → logprob: -10.72265338897705
    8. '        ' → logprob: -11.47265338897705
    9. '      ' → logprob: -11.47265338897705
    10. ' ' → logprob: -12.09765338897705

Token 155: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.008657592348754406
    2. ' res' → logprob: -4.758657455444336
    3. '   ' → logprob: -11.008657455444336
    4. '           ' → logprob: -11.133657455444336
    5. '       ' → logprob: -11.883657455444336
    6. 'return' → logprob: -13.508657455444336
    7. '	res' → logprob: -14.008657455444336
    8. 'raise' → logprob: -14.258657455444336
    9. '    ' → logprob: -14.383657455444336
    10. ' ' → logprob: -14.883657455444336

Token 156: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0009281373349949718
    2. '.' → logprob: -7.000927925109863
    3. 'append' → logprob: -11.500927925109863
    4. ' .' → logprob: -12.500927925109863
    5. '.extend' → logprob: -13.250927925109863
    6. '.Append' → logprob: -15.250927925109863
    7. '_append' → logprob: -16.00092887878418
    8. ' append' → logprob: -16.12592887878418
    9. '.remove' → logprob: -16.25092887878418
    10. '.add' → logprob: -16.25092887878418

Token 157: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.004194863606244326
    2. 'c' → logprob: -5.629194736480713
    3. '('' → logprob: -8.129195213317871
    4. '(' → logprob: -8.129195213317871
    5. ' c' → logprob: -13.254195213317871
    6. ''' → logprob: -14.379195213317871
    7. ')c' → logprob: -14.629195213317871
    8. '(chr' → logprob: -14.879195213317871
    9. '(s' → logprob: -15.129195213317871
    10. 's' → logprob: -15.254195213317871

Token 158: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07891049981117249
    2. ')
' → logprob: -2.5789105892181396
    3. ')return' → logprob: -11.578910827636719
    4. '   ' → logprob: -12.203910827636719
    5. ')
' → logprob: -12.828910827636719
    6. ' )' → logprob: -13.328910827636719
    7. ')

' → logprob: -13.953910827636719
    8. ' )
' → logprob: -14.328910827636719
    9. 'return' → logprob: -14.703910827636719
    10. '')' → logprob: -16.57891082763672

Token 159: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7588057518005371
    2. 'return' → logprob: -0.7588057518005371
    3. ' return' → logprob: -2.758805751800537
    4. '
' → logprob: -9.508806228637695
    5. '	return' → logprob: -9.508806228637695
    6. '    
' → logprob: -11.883806228637695
    7. 'eturn' → logprob: -12.133806228637695
    8. 'def' → logprob: -12.133806228637695
    9. '```' → logprob: -12.758806228637695
    10. ')' → logprob: -12.883806228637695

Token 160: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06392466276884079
    2. ' return' → logprob: -3.063924551010132
    3. '   ' → logprob: -4.188924789428711
    4. '	return' → logprob: -10.563924789428711
    5. '
' → logprob: -10.938924789428711
    6. ' ' → logprob: -12.438924789428711
    7. '    
' → logprob: -12.813924789428711
    8. 'eturn' → logprob: -12.938924789428711
    9. ')' → logprob: -13.438924789428711
    10. ')return' → logprob: -13.563924789428711

Token 161: ' ''.' (ID: 105941)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.040533047169446945
    2. '"' → logprob: -3.2905330657958984
    3. ' ''.' → logprob: -6.040533065795898
    4. ''' → logprob: -9.665533065795898
    5. ' "".' → logprob: -10.415533065795898
    6. '''' → logprob: -11.165533065795898
    7. ' ' → logprob: -15.665533065795898
    8. '''
' → logprob: -15.790533065795898
    9. '""' → logprob: -15.915533065795898
    10. ''',' → logprob: -16.1655330657959

Token 162: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -5.512236498361744e-07
    2. 'j' → logprob: -15.250000953674316
    3. 'jo' → logprob: -15.625000953674316
    4. ' join' → logprob: -17.25
    5. '.join' → logprob: -18.0
    6. '''.' → logprob: -18.0
    7. '(join' → logprob: -18.125
    8. '```' → logprob: -18.375
    9. '.' → logprob: -18.75
    10. '
' → logprob: -18.875

Token 163: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -7.958325295476243e-05
    2. '(' → logprob: -9.500079154968262
    3. 'res' → logprob: -12.625079154968262
    4. ' (' → logprob: -13.625079154968262
    5. '('' → logprob: -17.500080108642578
    6. '(
' → logprob: -17.625080108642578
    7. '	res' → logprob: -17.875080108642578
    8. '$res' → logprob: -18.125080108642578
    9. ',res' → logprob: -18.500080108642578
    10. '```' → logprob: -18.875080108642578

Token 164: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')
' → logprob: -16.625
    3. ' )' → logprob: -18.0
    4. '))' → logprob: -19.25
    5. '')' → logprob: -19.375
    6. ')`' → logprob: -19.5
    7. ')#' → logprob: -20.25
    8. ')s' → logprob: -20.375
    9. '}' → logprob: -20.625
    10. ')}' → logprob: -20.75

Token 165: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.5094070477061905e-05
    2. '
' → logprob: -12.125015258789062
    3. '\' → logprob: -12.375015258789062
    4. ' def' → logprob: -13.375015258789062
    5. '<|end|>' → logprob: -13.750015258789062
    6. '#' → logprob: -14.250015258789062
    7. '```' → logprob: -14.375015258789062
    8. 'd' → logprob: -14.875015258789062
    9. ' 
' → logprob: -15.250015258789062
    10. '  
' → logprob: -15.250015258789062

Token 166: ' inverse' (ID: 53743)
  Prédit: ' inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inverse' → logprob: -0.5260905623435974
    2. 'inverse' → logprob: -0.9010905623435974
    3. '_inverse' → logprob: -6.651090621948242
    4. 'dr' → logprob: -8.276090621948242
    5. ' ' → logprob: -8.338590621948242
    6. ' reverse' → logprob: -8.401090621948242
    7. 'reverse' → logprob: -8.963590621948242
    8. '_dr' → logprob: -9.401090621948242
    9. ' decode' → logprob: -9.463590621948242
    10. 'decode' → logprob: -9.588590621948242

Token 167: '_m' (ID: 1285)
  Prédit: '_dr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dr' → logprob: -0.02500033937394619
    2. '_m' → logprob: -4.77500057220459
    3. '_d' → logprob: -5.02500057220459
    4. '_s' → logprob: -7.02500057220459
    5. '_' → logprob: -7.15000057220459
    6. '_mc' → logprob: -7.65000057220459
    7. '_dc' → logprob: -7.90000057220459
    8. '_ds' → logprob: -7.90000057220459
    9. '_de' → logprob: -8.02500057220459
    10. '_ms' → logprob: -8.15000057220459

Token 168: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.30641666054725647
    2. 'iss' → logprob: -1.806416630744934
    3. 's' → logprob: -3.6814167499542236
    4. 'rs' → logprob: -3.8064167499542236
    5. 'c' → logprob: -4.8064165115356445
    6. 'a' → logprob: -5.1814165115356445
    7. 'i' → logprob: -5.4314165115356445
    8. 'd' → logprob: -6.0564165115356445
    9. '_r' → logprob: -6.3689165115356445
    10. 'is' → logprob: -6.3689165115356445

Token 169: '_m' (ID: 1285)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_j' → logprob: -1.8612433671951294
    2. '_c' → logprob: -2.36124324798584
    3. '_p' → logprob: -2.36124324798584
    4. '_b' → logprob: -2.48624324798584
    5. '_a' → logprob: -2.61124324798584
    6. '_d' → logprob: -2.86124324798584
    7. '_r' → logprob: -2.98624324798584
    8. '_s' → logprob: -2.98624324798584
    9. '_t' → logprob: -2.98624324798584
    10. '_h' → logprob: -3.23624324798584

Token 170: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.22872601449489594
    2. '_a' → logprob: -2.3537259101867676
    3. '_c' → logprob: -3.7287259101867676
    4. '_o' → logprob: -4.103725910186768
    5. 'a' → logprob: -4.228725910186768
    6. '_b' → logprob: -5.353725910186768
    7. '_p' → logprob: -5.353725910186768
    8. '_i' → logprob: -5.353725910186768
    9. '(a' → logprob: -5.978725910186768
    10. 'o' → logprob: -5.978725910186768

Token 171: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011723674833774567
    2. '):
' → logprob: -6.7511725425720215
    3. ':' → logprob: -14.251172065734863
    4. '):
' → logprob: -14.376172065734863
    5. ')' → logprob: -15.001172065734863
    6. 's' → logprob: -15.126172065734863
    7. '):

' → logprob: -15.876172065734863
    8. ' ):' → logprob: -16.25117301940918
    9. '[' → logprob: -17.50117301940918
    10. '():' → logprob: -17.75117301940918

Token 172: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23766489326953888
    2. ' return' → logprob: -1.6126649379730225
    3. ' res' → logprob: -5.362664699554443
    4. 'return' → logprob: -5.737664699554443
    5. ' s' → logprob: -6.362664699554443
    6. ' n' → logprob: -7.237664699554443
    7. ' i' → logprob: -7.862664699554443
    8. ' if' → logprob: -8.237665176391602
    9. ' for' → logprob: -9.112665176391602
    10. ' result' → logprob: -9.362665176391602

Token 173: ' res' (ID: 694)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6101571321487427
    2. ' return' → logprob: -1.7351571321487427
    3. ' res' → logprob: -2.110157012939453
    4. 'res' (adapté à ' res') → logprob: -2.360157012939453
    5. 'v' → logprob: -3.735157012939453
    6. ' vowels' → logprob: -4.735157012939453
    7. 'd' → logprob: -4.985157012939453
    8. '   ' → logprob: -5.735157012939453
    9. 'n' → logprob: -5.860157012939453
    10. 'result' → logprob: -5.985157012939453

Token 174: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20144939422607422
    2. '=' → logprob: -1.7014493942260742
    3. '=[]' → logprob: -10.451449394226074
    4. '=[]
' → logprob: -12.826449394226074
    5. '.append' → logprob: -13.076449394226074
    6. ' ' → logprob: -14.576449394226074
    7. ',' → logprob: -14.576449394226074
    8. '[]' → logprob: -15.076449394226074
    9. '   ' → logprob: -15.326449394226074
    10. 's' → logprob: -15.326449394226074

Token 175: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.13196909427642822
    2. '[]
' → logprob: -2.1319689750671387
    3. '''' → logprob: -5.506968975067139
    4. '""' → logprob: -7.131968975067139
    5. '''
' → logprob: -9.506969451904297
    6. ' []' → logprob: -10.131969451904297
    7. '[]

' → logprob: -11.006969451904297
    8. ''' → logprob: -11.256969451904297
    9. '[' → logprob: -11.756969451904297
    10. '"' → logprob: -11.756969451904297

Token 176: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017687088111415505
    2. ' for' → logprob: -6.501768589019775
    3. 'for' → logprob: -8.376769065856934
    4. '
' → logprob: -10.376769065856934
    5. '    
' → logprob: -12.876769065856934
    6. '	for' → logprob: -14.501769065856934
    7. ',' → logprob: -14.626769065856934
    8. ' ' → logprob: -14.876769065856934
    9. '<|end|>' → logprob: -15.001769065856934
    10. '       ' → logprob: -15.376769065856934

Token 177: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.016463525593280792
    2. ' for' → logprob: -4.766463756561279
    3. '   ' → logprob: -4.891463756561279
    4. 'v' → logprob: -8.766463279724121
    5. 'i' → logprob: -9.266463279724121
    6. 'shift' → logprob: -11.391463279724121
    7. 'prev' → logprob: -11.641463279724121
    8. ' i' → logprob: -11.641463279724121
    9. ' ' → logprob: -11.766463279724121
    10. '	for' → logprob: -12.391463279724121

Token 178: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.015896284952759743
    2. 'c' → logprob: -4.265896320343018
    3. ' i' → logprob: -6.515896320343018
    4. ' s' → logprob: -8.76589584350586
    5. 'i' → logprob: -10.39089584350586
    6. ' ch' → logprob: -11.01589584350586
    7. ' ' → logprob: -11.26589584350586
    8. 'ch' → logprob: -12.01589584350586
    9. '  ' → logprob: -12.14089584350586
    10. ' char' → logprob: -12.14089584350586

Token 179: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004234512336552143
    2. 'in' → logprob: -5.504234313964844
    3. 's' → logprob: -8.879234313964844
    4. ' ' → logprob: -12.004234313964844
    5. 'import' → logprob: -12.629234313964844
    6. '  ' → logprob: -13.254234313964844
    7. '   ' → logprob: -14.004234313964844
    8. 'not' → logprob: -14.129234313964844
    9. ' not' → logprob: -14.566734313964844
    10. 'd' → logprob: -14.941734313964844

Token 180: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10034576803445816
    2. ' s' → logprob: -2.3503458499908447
    3. 'range' → logprob: -9.975345611572266
    4. ''s' → logprob: -10.225345611572266
    5. ' range' → logprob: -11.287845611572266
    6. ' ' → logprob: -11.787845611572266
    7. '   ' → logprob: -12.100345611572266
    8. ''' → logprob: -12.725345611572266
    9. '(s' → logprob: -12.787845611572266
    10. ' reversed' → logprob: -12.975345611572266

Token 181: ':
' (ID: 734)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6773394346237183
    2. 'in' → logprob: -1.3023394346237183
    3. ':' → logprob: -2.177339553833008
    4. ':
' → logprob: -3.177339553833008
    5. '[::-' → logprob: -3.927339553833008
    6. 's' → logprob: -4.177339553833008
    7. ')' → logprob: -5.177339553833008
    8. 'def' → logprob: -5.927339553833008
    9. '   ' → logprob: -6.302339553833008
    10. '.lower' → logprob: -6.427339553833008

Token 182: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.3906476497650146
    2. 's' → logprob: -1.7656476497650146
    3. ' s' → logprob: -1.7656476497650146
    4. ' in' → logprob: -2.5156476497650146
    5. '   ' → logprob: -2.5156476497650146
    6. 'if' → logprob: -2.6406476497650146
    7. ' '' → logprob: -2.7656476497650146
    8. ''' → logprob: -3.2656476497650146
    9. 'in' → logprob: -3.6406476497650146
    10. ''s' → logprob: -3.8906476497650146

Token 183: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.17331717908382416
    2. 'if' (adapté à ' if') → logprob: -1.9233171939849854
    3. '   ' → logprob: -4.548316955566406
    4. ' res' → logprob: -6.548316955566406
    5. 'res' → logprob: -7.673316955566406
    6. '       ' → logprob: -8.173316955566406
    7. '    ' → logprob: -9.298316955566406
    8. '           ' → logprob: -10.048316955566406
    9. ' ' → logprob: -11.048316955566406
    10. 'import' → logprob: -11.298316955566406

Token 184: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.4573177397251129
    2. 'c' → logprob: -1.0823177099227905
    3. ' '' → logprob: -4.20731782913208
    4. ''' → logprob: -4.45731782913208
    5. ' ' → logprob: -7.08231782913208
    6. ' ord' → logprob: -8.644817352294922
    7. ''a' → logprob: -8.894817352294922
    8. '97' → logprob: -9.019817352294922
    9. ' not' → logprob: -9.519817352294922
    10. '  ' → logprob: -9.832317352294922

Token 185: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.06990575045347214
    2. '.' → logprob: -3.4449057579040527
    3. ' ==' → logprob: -4.444905757904053
    4. '==' → logprob: -4.569905757904053
    5. ' in' → logprob: -4.569905757904053
    6. 'is' → logprob: -6.694905757904053
    7. ' .' → logprob: -7.569905757904053
    8. '>=' → logprob: -7.944905757904053
    9. 'in' → logprob: -8.444905281066895
    10. '>' → logprob: -8.444905281066895

Token 186: 'digit' (ID: 78327)
  Prédit: 'alpha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alpha' → logprob: -0.5975676774978638
    2. 'digit' → logprob: -0.8475676774978638
    3. 'lower' → logprob: -3.972567558288574
    4. 'upper' → logprob: -6.222567558288574
    5. 'a' → logprob: -8.722567558288574
    6. 'al' → logprob: -8.722567558288574
    7. 'd' → logprob: -10.097567558288574
    8. '   ' → logprob: -10.222567558288574
    9. 'alp' → logprob: -10.347567558288574
    10. 'c' → logprob: -11.347567558288574

Token 187: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.5314151644706726
    2. '():' → logprob: -1.0314152240753174
    3. '()' → logprob: -2.9064152240753174
    4. '():

' → logprob: -7.781414985656738
    5. '()==' → logprob: -8.281414985656738
    6. '():
' → logprob: -8.531414985656738
    7. '()>' → logprob: -9.531414985656738
    8. '()):
' → logprob: -9.906414985656738
    9. '(' → logprob: -11.531414985656738
    10. '()%' → logprob: -11.656414985656738

Token 188: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00035572313936427236
    2. ' and' → logprob: -8.62535572052002
    3. ':
' → logprob: -10.25035572052002
    4. ' res' → logprob: -10.50035572052002
    5. ':' → logprob: -10.87535572052002
    6. '       ' → logprob: -11.12535572052002
    7. 'res' → logprob: -11.12535572052002
    8. '):
' → logprob: -11.12535572052002
    9. '0' → logprob: -11.37535572052002
    10. '          ' → logprob: -11.75035572052002

Token 189: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.2559540867805481
    2. ' res' → logprob: -1.5059540271759033
    3. '   ' → logprob: -6.255954265594482
    4. 'if' → logprob: -6.880954265594482
    5. ' if' → logprob: -7.380954265594482
    6. 'r' → logprob: -8.630953788757324
    7. '9' → logprob: -9.755953788757324
    8. 'n' → logprob: -10.380953788757324
    9. '           ' → logprob: -11.130953788757324
    10. 'd' → logprob: -11.193453788757324

Token 190: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.591415437171236e-05
    2. '.' → logprob: -9.750096321105957
    3. 'append' → logprob: -10.375096321105957
    4. ' .' → logprob: -12.375096321105957
    5. '.extend' → logprob: -14.750096321105957
    6. '=' → logprob: -14.875096321105957
    7. '           ' → logprob: -15.125096321105957
    8. '   ' → logprob: -15.750096321105957
    9. '.app' → logprob: -16.00009536743164
    10. '].' → logprob: -16.25009536743164

Token 191: '('' (ID: 706)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.722581684589386
    2. 'str' → logprob: -1.2225816249847412
    3. '('' → logprob: -1.5975816249847412
    4. '(' → logprob: -4.59758186340332
    5. '(chr' → logprob: -5.97258186340332
    6. ''' → logprob: -5.97258186340332
    7. 'chr' → logprob: -6.47258186340332
    8. ' str' → logprob: -7.59758186340332
    9. '(
' → logprob: -9.59758186340332
    10. 'c' → logprob: -9.72258186340332

Token 192: '0' (ID: 15)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.6317945718765259
    2. '9' → logprob: -1.1317945718765259
    3. '0' → logprob: -2.1317944526672363
    4. ''' → logprob: -5.006794452667236
    5. ' str' → logprob: -5.006794452667236
    6. '{' → logprob: -5.131794452667236
    7. '(str' → logprob: -6.006794452667236
    8. '1' → logprob: -6.631794452667236
    9. '{}'.' → logprob: -7.006794452667236
    10. '6' → logprob: -7.881794452667236

Token 193: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.21226894855499268
    2. '')' → logprob: -1.9622689485549927
    3. ' if' → logprob: -3.712268829345703
    4. 'if' → logprob: -3.837268829345703
    5. '9' → logprob: -5.587268829345703
    6. ')' → logprob: -7.712268829345703
    7. '0' → logprob: -8.337268829345703
    8. '7' → logprob: -9.462268829345703
    9. '"' → logprob: -10.337268829345703
    10. ''''' → logprob: -10.712268829345703

Token 194: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.32193323969841003
    2. 'if' → logprob: -1.3219332695007324
    3. ')' → logprob: -4.946933269500732
    4. '9' → logprob: -6.821933269500732
    5. 'else' → logprob: -9.071932792663574
    6. '')' → logprob: -9.446932792663574
    7. '   ' → logprob: -9.946932792663574
    8. ''' → logprob: -10.446932792663574
    9. '0' → logprob: -10.571932792663574
    10. '7' → logprob: -10.946932792663574

Token 195: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.016041172668337822
    2. ' c' → logprob: -4.141041278839111
    3. 'int' → logprob: -12.141040802001953
    4. '   ' → logprob: -14.016040802001953
    5. '9' → logprob: -15.266040802001953
    6. ' ' → logprob: -16.016040802001953
    7. ')c' → logprob: -16.266040802001953
    8. '    ' → logprob: -16.766040802001953
    9. ' int' → logprob: -17.391040802001953
    10. '  ' → logprob: -17.391040802001953

Token 196: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.005296723451465368
    2. '==' → logprob: -5.25529670715332
    3. '=='' → logprob: -9.75529670715332
    4. ' =='' → logprob: -13.00529670715332
    5. ' ' → logprob: -13.38029670715332
    6. '=' → logprob: -15.00529670715332
    7. ')' → logprob: -15.75529670715332
    8. '=="' → logprob: -16.13029670715332
    9. ' =' → logprob: -16.25529670715332
    10. '9' → logprob: -16.75529670715332

Token 197: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.062185581773519516
    2. '9' → logprob: -2.937185525894165
    3. ' '' → logprob: -5.437185764312744
    4. '0' → logprob: -6.562185764312744
    5. ' ' → logprob: -6.687185764312744
    6. 'c' → logprob: -9.687185287475586
    7. '   ' → logprob: -9.812185287475586
    8. ' c' → logprob: -9.937185287475586
    9. '`' → logprob: -10.187185287475586
    10. '"' → logprob: -10.562185287475586

Token 198: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -7.896309739408025e-07
    2. '0' → logprob: -15.125000953674316
    3. ''' → logprob: -15.875000953674316
    4. '1' → logprob: -16.125
    5. ' ' → logprob: -16.5
    6. 's' → logprob: -18.1875
    7. '')' → logprob: -18.1875
    8. '999' → logprob: -18.1875
    9. '```' → logprob: -18.25
    10. 'c' → logprob: -18.9375

Token 199: ''' (ID: 6)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.06264331191778183
    2. 'else' → logprob: -2.81264328956604
    3. ''' → logprob: -7.312643527984619
    4. 's' → logprob: -12.937643051147461
    5. '==' → logprob: -13.437643051147461
    6. ')' → logprob: -13.937643051147461
    7. '0' → logprob: -14.437643051147461
    8. '`' → logprob: -14.562643051147461
    9. '	else' → logprob: -14.812643051147461
    10. ' ' → logprob: -15.312643051147461

Token 200: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.061967797577381134
    2. 'else' → logprob: -2.8119678497314453
    3. '	else' → logprob: -16.936967849731445
    4. ')' → logprob: -18.061967849731445
    5. '           ' → logprob: -18.061967849731445
    6. '```' → logprob: -19.061967849731445
    7. ''' → logprob: -19.811967849731445
    8. 's' → logprob: -19.811967849731445
    9. '            ' → logprob: -19.936967849731445
    10. 'e' → logprob: -19.936967849731445

Token 201: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.6931508183479309
    2. ' str' → logprob: -0.6931508183479309
    3. 'chr' → logprob: -14.068150520324707
    4. '(str' → logprob: -14.318150520324707
    5. 's' → logprob: -14.693150520324707
    6. ' chr' → logprob: -14.818150520324707
    7. '	str' → logprob: -14.943150520324707
    8. ' ' → logprob: -14.943150520324707
    9. '=str' → logprob: -15.318150520324707
    10. 'c' → logprob: -15.443150520324707

Token 202: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -7.76759916334413e-05
    2. '(' → logprob: -9.750077247619629
    3. ' (' → logprob: -12.750077247619629
    4. '(ord' → logprob: -12.875077247619629
    5. 'int' → logprob: -13.000077247619629
    6. '   ' → logprob: -13.000077247619629
    7. '<int' → logprob: -13.125077247619629
    8. '[int' → logprob: -13.375077247619629
    9. '(in' → logprob: -13.500077247619629
    10. '(i' → logprob: -13.875077247619629

Token 203: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -4.723352049040841e-06
    2. 'c' → logprob: -12.875004768371582
    3. '(' → logprob: -13.625004768371582
    4. '(int' → logprob: -14.125004768371582
    5. ' (' → logprob: -17.000003814697266
    6. ')c' → logprob: -17.250003814697266
    7. 'int' → logprob: -17.375003814697266
    8. '	c' → logprob: -17.875003814697266
    9. '(C' → logprob: -18.000003814697266
    10. '©' → logprob: -18.125003814697266

Token 204: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00026503115077503026
    2. ')+' → logprob: -8.625265121459961
    3. '')' → logprob: -9.875265121459961
    4. '(c' → logprob: -11.250265121459961
    5. 'c' → logprob: -11.625265121459961
    6. '+' → logprob: -12.250265121459961
    7. '(' → logprob: -12.875265121459961
    8. '()' → logprob: -13.875265121459961
    9. '('' → logprob: -14.125265121459961
    10. 'd' → logprob: -14.500265121459961

Token 205: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.48025378584861755
    2. '+' → logprob: -0.9802538156509399
    3. ')' → logprob: -5.23025369644165
    4. ' -' → logprob: -7.60525369644165
    5. '-' → logprob: -8.730254173278809
    6. ')+' → logprob: -8.980254173278809
    7. ' ' → logprob: -12.230254173278809
    8. '(s' → logprob: -13.230254173278809
    9. '()+' → logprob: -13.480254173278809
    10. 's' → logprob: -13.730254173278809

Token 206: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015024791937321424
    2. ' ' → logprob: -6.501502513885498
    3. '   ' → logprob: -16.626502990722656
    4. '<|end|>' → logprob: -18.001502990722656
    5. '0' → logprob: -18.876502990722656
    6. '  ' → logprob: -19.001502990722656
    7. ')' → logprob: -20.001502990722656
    8. ' ' → logprob: -21.626502990722656
    9. 'def' → logprob: -22.001502990722656
    10. '2' → logprob: -22.001502990722656

Token 207: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -17.3750057220459
    4. ')' → logprob: -18.0000057220459
    5. '<|end|>' → logprob: -18.1250057220459
    6. 'def' → logprob: -18.8750057220459
    7. '  ' → logprob: -19.6250057220459
    8. '```' → logprob: -19.8750057220459
    9. '`' → logprob: -20.8750057220459
    10. '-' → logprob: -20.8750057220459

Token 208: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0034216397907584906
    2. '))
' → logprob: -5.753421783447266
    3. ')' → logprob: -8.378421783447266
    4. ''))' → logprob: -11.628421783447266
    5. ')))' → logprob: -12.503421783447266
    6. ' ))' → logprob: -14.253421783447266
    7. '))
' → logprob: -15.503421783447266
    8. ''))
' → logprob: -15.878421783447266
    9. ')
' → logprob: -15.878421783447266
    10. '))

' → logprob: -16.003421783447266

Token 209: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008740628836676478
    2. ' else' → logprob: -7.625874042510986
    3. 'else' → logprob: -7.875874042510986
    4. '<|end|>' → logprob: -13.250874519348145
    5. '   ' → logprob: -13.500874519348145
    6. ')' → logprob: -13.875874519348145
    7. '```' → logprob: -14.250874519348145
    8. '	' → logprob: -14.875874519348145
    9. '	else' → logprob: -15.125874519348145
    10. 'elif' → logprob: -15.875874519348145

Token 210: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.4121544659137726
    2. '       ' → logprob: -1.6621544361114502
    3. ' else' → logprob: -1.9121544361114502
    4. '   ' → logprob: -8.287154197692871
    5. '	else' → logprob: -11.162154197692871
    6. '<|end|>' → logprob: -12.162154197692871
    7. 'elif' → logprob: -12.912154197692871
    8. ' ' → logprob: -12.912154197692871
    9. '```' → logprob: -13.287154197692871
    10. ')' → logprob: -13.412154197692871

Token 211: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.043258365243673325
    2. ':' → logprob: -3.2932584285736084
    3. ':
' → logprob: -5.293258190155029
    4. '          ' → logprob: -9.543258666992188
    5. '       ' → logprob: -10.043258666992188
    6. '   ' → logprob: -11.418258666992188
    7. ',' → logprob: -11.418258666992188
    8. '         ' → logprob: -11.918258666992188
    9. '.append' → logprob: -12.418258666992188
    10. '<|end|>' → logprob: -12.543258666992188

Token 212: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10272996127605438
    2. '       ' → logprob: -2.3527300357818604
    3. 'res' → logprob: -6.227729797363281
    4. ' res' → logprob: -7.602729797363281
    5. '   ' → logprob: -10.227729797363281
    6. '               ' → logprob: -11.727729797363281
    7. '          ' → logprob: -14.477729797363281
    8. '```' → logprob: -14.477729797363281
    9. '	       ' → logprob: -14.852729797363281
    10. '	   ' → logprob: -15.227729797363281

Token 213: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.003292851848527789
    2. ' res' → logprob: -5.753293037414551
    3. '           ' → logprob: -9.87829303741455
    4. '       ' → logprob: -10.00329303741455
    5. '   ' → logprob: -11.00329303741455
    6. '	res' → logprob: -13.75329303741455
    7. '               ' → logprob: -15.00329303741455
    8. '_res' → logprob: -15.75329303741455
    9. '
' → logprob: -16.128292083740234
    10. ' ' → logprob: -16.378292083740234

Token 214: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.1875571544806007e-05
    2. '.' → logprob: -11.375011444091797
    3. 'append' → logprob: -15.500011444091797
    4. ' .' → logprob: -16.500011444091797
    5. '.extend' → logprob: -16.875011444091797
    6. '.app' → logprob: -17.000011444091797
    7. '.Append' → logprob: -18.000011444091797
    8. 'app' → logprob: -20.500011444091797
    9. '.ap' → logprob: -21.000011444091797
    10. 'appen' → logprob: -21.125011444091797

Token 215: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -12.87500286102295
    3. 'c' → logprob: -16.750001907348633
    4. '('' → logprob: -18.125001907348633
    5. ' (' → logprob: -20.000001907348633
    6. '(s' → logprob: -21.000001907348633
    7. '(
' → logprob: -21.125001907348633
    8. ')c' → logprob: -22.500001907348633
    9. ' c' → logprob: -23.000001907348633
    10. '(char' → logprob: -23.000001907348633

Token 216: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10022251307964325
    2. ')
' → logprob: -2.350222587585449
    3. '   ' → logprob: -11.22522258758545
    4. ')
' → logprob: -13.47522258758545
    5. ')return' → logprob: -14.47522258758545
    6. ' )' → logprob: -15.60022258758545
    7. ')

' → logprob: -15.85022258758545
    8. ' )
' → logprob: -16.225221633911133
    9. '')' → logprob: -16.225221633911133
    10. 'return' → logprob: -17.600221633911133

Token 217: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009779095416888595
    2. 'return' → logprob: -7.375977993011475
    3. ' return' → logprob: -8.000977516174316
    4. '	return' → logprob: -11.625977516174316
    5. '
' → logprob: -12.625977516174316
    6. ')' → logprob: -12.875977516174316
    7. '   ' → logprob: -15.000977516174316
    8. ')return' → logprob: -15.375977516174316
    9. '```' → logprob: -15.375977516174316
    10. '<|end|>' → logprob: -15.875977516174316

Token 218: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.31826573610305786
    2. ' return' → logprob: -1.318265676498413
    3. '   ' → logprob: -5.318265914916992
    4. ')' → logprob: -10.318265914916992
    5. '	return' → logprob: -10.318265914916992
    6. 'eturn' → logprob: -11.943265914916992
    7. ')
' → logprob: -11.943265914916992
    8. '
' → logprob: -12.568265914916992
    9. ')return' → logprob: -12.693265914916992
    10. ' ' → logprob: -13.068265914916992

Token 219: ' ''.' (ID: 105941)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.023624295368790627
    2. ' ''.' → logprob: -3.7736241817474365
    3. '''' → logprob: -8.523624420166016
    4. ''' → logprob: -8.648624420166016
    5. '"' → logprob: -13.273624420166016
    6. ' '' → logprob: -13.773624420166016
    7. ''',' → logprob: -14.273624420166016
    8. 's' → logprob: -14.773624420166016
    9. ' ' → logprob: -14.898624420166016
    10. ''s' → logprob: -15.898624420166016

Token 220: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: 0.0
    2. ' join' → logprob: -17.25
    3. 'jo' → logprob: -18.875
    4. '''' → logprob: -19.125
    5. '(join' → logprob: -19.5
    6. ''' → logprob: -19.5
    7. '.join' → logprob: -19.625
    8. '```' → logprob: -19.75
    9. 'joint' → logprob: -20.5
    10. 'j' → logprob: -20.5

Token 221: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.005238260608166456
    2. 'res' → logprob: -5.255238056182861
    3. '(' → logprob: -12.38023853302002
    4. ' res' → logprob: -15.25523853302002
    5. '(s' → logprob: -16.505237579345703
    6. 's' → logprob: -17.380237579345703
    7. '	res' → logprob: -18.130237579345703
    8. '$res' → logprob: -18.380237579345703
    9. '(
' → logprob: -18.505237579345703
    10. '_res' → logprob: -18.755237579345703

Token 222: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.8889261304575484e-06
    2. ')
' → logprob: -12.500003814697266
    3. '')' → logprob: -18.625003814697266
    4. ')s' → logprob: -18.625003814697266
    5. '))' → logprob: -18.875003814697266
    6. ')`' → logprob: -18.875003814697266
    7. ' )' → logprob: -19.000003814697266
    8. ')}' → logprob: -19.500003814697266
    9. '<|end|>' → logprob: -19.875003814697266
    10. '),' → logprob: -19.875003814697266

Token 223: 'inv' (ID: 31086)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005838918150402606
    2. '#' → logprob: -7.625584125518799
    3. '<|end|>' → logprob: -10.37558364868164
    4. '```' → logprob: -11.12558364868164
    5. 'a' → logprob: -11.75058364868164
    6. 'import' → logprob: -12.50058364868164
    7. 'print' → logprob: -12.50058364868164
    8. 'd' → logprob: -12.50058364868164
    9. '_' → logprob: -12.62558364868164
    10. 'inverse' → logprob: -13.00058364868164

Token 224: '_funcs' (ID: 170036)
  Prédit: 'erse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'erse' → logprob: -0.0006908706855028868
    2. 'ers' → logprob: -7.750690937042236
    3. '_' → logprob: -9.500690460205078
    4. 'ersion' → logprob: -9.625690460205078
    5. 'er' → logprob: -9.875690460205078
    6. '_inverse' → logprob: -10.875690460205078
    7. 'erso' → logprob: -12.000690460205078
    8. '```' → logprob: -12.125690460205078
    9. '_m' → logprob: -12.625690460205078
    10. 'arse' → logprob: -13.000690460205078

Token 225: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0708298534154892
    2. '=' → logprob: -2.6958298683166504
    3. '[' → logprob: -7.44582986831665
    4. '_' → logprob: -8.695829391479492
    5. '<|end|>' → logprob: -10.070829391479492
    6. 's' → logprob: -10.445829391479492
    7. '.' → logprob: -11.320829391479492
    8. ']' → logprob: -11.820829391479492
    9. '```' → logprob: -12.195829391479492
    10. '=[' → logprob: -12.320829391479492

Token 226: ' {'' (ID: 11881)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.02574441395699978
    2. ' {' → logprob: -4.150744438171387
    3. '{
' → logprob: -5.275744438171387
    4. '[' → logprob: -6.150744438171387
    5. '{'' → logprob: -6.275744438171387
    6. ' [' → logprob: -8.150744438171387
    7. ' {
' → logprob: -9.150744438171387
    8. '{"' → logprob: -9.525744438171387
    9. ' {'' → logprob: -10.025744438171387
    10. '{name' → logprob: -12.275744438171387

Token 227: 'J' (ID: 41)
  Prédit: 'mr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mr' → logprob: -0.10201126337051392
    2. ''m' → logprob: -2.727011203765869
    3. ''' → logprob: -4.477011203765869
    4. 'm' → logprob: -4.977011203765869
    5. 'inverse' → logprob: -5.352011203765869
    6. ''in' → logprob: -5.727011203765869
    7. '"' → logprob: -6.477011203765869
    8. ''r' → logprob: -6.727011203765869
    9. 'mrs' → logprob: -7.352011203765869
    10. 'mj' → logprob: -7.977011203765869

Token 228: '':' (ID: 2337)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7018046975135803
    2. '':' → logprob: -0.8268046975135803
    3. 'R' → logprob: -3.7018046379089355
    4. 'r' → logprob: -3.9518046379089355
    5. '':'' → logprob: -4.3268046379089355
    6. '_r' → logprob: -6.2018046379089355
    7. ''}' → logprob: -6.9518046379089355
    8. 'S' → logprob: -7.2018046379089355
    9. '_' → logprob: -7.3268046379089355
    10. ''_' → logprob: -7.5768046379089355

Token 229: ' inverse' (ID: 53743)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.046665314584970474
    2. 'inverse' → logprob: -3.5466654300689697
    3. ' inverse' → logprob: -4.546665191650391
    4. ' '' → logprob: -5.171665191650391
    5. ''' → logprob: -9.04666519165039
    6. '"in' → logprob: -9.04666519165039
    7. ''m' → logprob: -9.79666519165039
    8. ' ' → logprob: -10.04666519165039
    9. 'in' → logprob: -10.42166519165039
    10. '   ' → logprob: -10.54666519165039

Token 230: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -3.011373155459296e-05
    2. '_' → logprob: -10.625030517578125
    3. ''_' → logprob: -12.500030517578125
    4. '_j' → logprob: -13.500030517578125
    5. '_mc' → logprob: -15.750030517578125
    6. '_dr' → logprob: -16.000030517578125
    7. '_ml' → logprob: -16.250030517578125
    8. '_r' → logprob: -16.875030517578125
    9. '_s' → logprob: -17.000030517578125
    10. '_sr' → logprob: -17.250030517578125

Token 231: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -4.847109812544659e-05
    2. '_r' → logprob: -10.125048637390137
    3. 'mr' → logprob: -12.000048637390137
    4. '_m' → logprob: -13.625048637390137
    5. '_j' → logprob: -14.625048637390137
    6. 'rs' → logprob: -15.125048637390137
    7. 'm' → logprob: -16.25004768371582
    8. 's' → logprob: -16.87504768371582
    9. 'jr' → logprob: -17.00004768371582
    10. 'R' → logprob: -17.50004768371582

Token 232: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -3.8889261304575484e-06
    2. '_a' → logprob: -14.000003814697266
    3. ''_' → logprob: -14.000003814697266
    4. '_' → logprob: -14.500003814697266
    5. '```' → logprob: -14.625003814697266
    6. '_r' → logprob: -15.375003814697266
    7. '_J' → logprob: -15.375003814697266
    8. ' _' → logprob: -15.875003814697266
    9. '_c' → logprob: -16.375003814697266
    10. 'underscore' → logprob: -16.875003814697266

Token 233: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008316631428897381
    2. ',
' → logprob: -7.125831604003906
    3. '',' → logprob: -11.250831604003906
    4. ','' → logprob: -11.875831604003906
    5. ' ,' → logprob: -12.375831604003906
    6. ',

' → logprob: -13.000831604003906
    7. '}' → logprob: -15.000831604003906
    8. ',
' → logprob: -15.250831604003906
    9. '   ' → logprob: -16.875831604003906
    10. ',"' → logprob: -17.375831604003906

Token 234: ' '' (ID: 461)
  Prédit: ''M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''M' → logprob: -0.406366765499115
    2. ''' → logprob: -1.7813668251037598
    3. ' '' → logprob: -2.1563668251037598
    4. ''D' → logprob: -3.9063668251037598
    5. ''C' → logprob: -4.03136682510376
    6. ''S' → logprob: -5.15636682510376
    7. ''A' → logprob: -5.28136682510376
    8. ''I' → logprob: -8.031366348266602
    9. ''m' → logprob: -8.906366348266602
    10. ' ' → logprob: -9.031366348266602

Token 235: 'C' (ID: 34)
  Prédit: ''M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''M' → logprob: -0.821227490901947
    2. ''C' → logprob: -0.946227490901947
    3. 'C' → logprob: -2.696227550506592
    4. 'M' → logprob: -2.696227550506592
    5. ''' → logprob: -3.696227550506592
    6. ''m' → logprob: -5.321227550506592
    7. ''S' → logprob: -5.946227550506592
    8. ''D' → logprob: -6.946227550506592
    9. ''s' → logprob: -7.571227550506592
    10. ''A' → logprob: -7.696227550506592

Token 236: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.010044693946838379
    2. ''' → logprob: -4.635044574737549
    3. '':'' → logprob: -9.010045051574707
    4. ':' → logprob: -9.260045051574707
    5. ''M' → logprob: -10.385045051574707
    6. ''}' → logprob: -11.385045051574707
    7. ''S' → logprob: -12.010045051574707
    8. ' ':' → logprob: -12.135045051574707
    9. ''C' → logprob: -12.760045051574707
    10. ''A' → logprob: -12.760045051574707

Token 237: ' inverse' (ID: 53743)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.21999035775661469
    2. ' '' → logprob: -2.0949902534484863
    3. ''' → logprob: -3.2199902534484863
    4. ' inverse' → logprob: -3.5949902534484863
    5. 'inverse' → logprob: -5.094990253448486
    6. ' ' → logprob: -7.969990253448486
    7. ''i' → logprob: -9.719990730285645
    8. ''s' → logprob: -9.719990730285645
    9. '   ' → logprob: -10.219990730285645
    10. '  ' → logprob: -10.407490730285645

Token 238: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -3.292907877039397e-06
    2. '_' → logprob: -12.87500286102295
    3. 'miss' → logprob: -14.75000286102295
    4. '_s' → logprob: -16.000003814697266
    5. '_missing' → logprob: -16.625003814697266
    6. '_c' → logprob: -17.250003814697266
    7. '_ms' → logprob: -17.625003814697266
    8. '_d' → logprob: -17.750003814697266
    9. '_inverse' → logprob: -17.750003814697266
    10. '_r' → logprob: -18.250003814697266

Token 239: 'iss' (ID: 1009)
  Prédit: 'iss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iss' → logprob: -0.03955117240548134
    2. 'r' → logprob: -3.914551258087158
    3. 'i' → logprob: -4.539551258087158
    4. 'c' → logprob: -5.289551258087158
    5. 'a' → logprob: -6.914551258087158
    6. 's' → logprob: -7.039551258087158
    7. 'is' → logprob: -7.664551258087158
    8. '_c' → logprob: -8.53955078125
    9. '```' → logprob: -9.28955078125
    10. '_r' → logprob: -9.78955078125

Token 240: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -8.113290095934644e-05
    2. '_s' → logprob: -9.750081062316895
    3. 'c' → logprob: -11.625081062316895
    4. ''_' → logprob: -11.875081062316895
    5. '_' → logprob: -12.750081062316895
    6. '_m' → logprob: -13.375081062316895
    7. '_p' → logprob: -14.000081062316895
    8. 's' → logprob: -15.125081062316895
    9. '_a' → logprob: -15.500081062316895
    10. '_r' → logprob: -15.625081062316895

Token 241: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014656837447546422
    2. ',
' → logprob: -10.000146865844727
    3. ','' → logprob: -10.125146865844727
    4. ' ,' → logprob: -10.250146865844727
    5. '',' → logprob: -11.125146865844727
    6. '}' → logprob: -11.500146865844727
    7. ',

' → logprob: -15.000146865844727
    8. ''' → logprob: -15.625146865844727
    9. ',
' → logprob: -15.750146865844727
    10. '   ' → logprob: -16.875146865844727

Token 242: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.9067144393920898
    2. ''' → logprob: -1.1567144393920898
    3. ''M' → logprob: -1.9067144393920898
    4. ''D' → logprob: -2.15671443939209
    5. ''A' → logprob: -4.15671443939209
    6. ''S' → logprob: -7.40671443939209
    7. ''N' → logprob: -8.28171443939209
    8. ''E' → logprob: -8.65671443939209
    9. ''m' → logprob: -9.15671443939209
    10. ' ' → logprob: -9.28171443939209

Token 243: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.6377450823783875
    2. ''E' → logprob: -0.7627450823783875
    3. ''e' → logprob: -6.137744903564453
    4. ''M' → logprob: -6.762744903564453
    5. ''' → logprob: -7.637744903564453
    6. '"E' → logprob: -7.762744903564453
    7. ''D' → logprob: -8.262744903564453
    8. 'M' → logprob: -8.512744903564453
    9. ''A' → logprob: -9.637744903564453
    10. 'e' → logprob: -9.762744903564453

Token 244: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.001813344075344503
    2. ':' → logprob: -6.5018134117126465
    3. ''' → logprob: -8.126812934875488
    4. ' ':' → logprob: -11.876812934875488
    5. '':'' → logprob: -12.501812934875488
    6. '":' → logprob: -13.001812934875488
    7. ' :' → logprob: -14.751812934875488
    8. '):' → logprob: -15.001812934875488
    9. '}:' → logprob: -15.001812934875488
    10. ''):' → logprob: -15.251812934875488

Token 245: ' inverse' (ID: 53743)
  Prédit: ' inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inverse' → logprob: -0.04889141768217087
    2. 'inverse' → logprob: -3.048891305923462
    3. ''in' → logprob: -8.173891067504883
    4. '.inverse' → logprob: -11.798891067504883
    5. '_inverse' → logprob: -12.548891067504883
    6. ' '' → logprob: -12.923891067504883
    7. 'in' → logprob: -13.048891067504883
    8. ' ' → logprob: -13.298891067504883
    9. '   ' → logprob: -13.986391067504883
    10. ''' → logprob: -14.423891067504883

Token 246: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -5.512236498361744e-07
    2. '_e' → logprob: -15.500000953674316
    3. '_' → logprob: -15.625000953674316
    4. 'm' → logprob: -16.875
    5. '_mc' → logprob: -17.875
    6. 'e' → logprob: -18.625
    7. 'mr' → logprob: -18.75
    8. '_inverse' → logprob: -18.75
    9. ')' → logprob: -19.5
    10. '_dr' → logprob: -19.625

Token 247: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -6.659005157416686e-05
    2. 'e' → logprob: -10.500066757202148
    3. '_r' → logprob: -11.000066757202148
    4. 'a' → logprob: -11.375066757202148
    5. 're' → logprob: -12.750066757202148
    6. '_e' → logprob: -13.000066757202148
    7. 'rs' → logprob: -13.375066757202148
    8. 'ar' → logprob: -14.250066757202148
    9. 's' → logprob: -14.750066757202148
    10. '_' → logprob: -15.000066757202148

Token 248: '_e' (ID: 4618)
  Prédit: '_e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.001526525360532105
    2. '_a' → logprob: -6.751526355743408
    3. 'e' → logprob: -8.001526832580566
    4. '_r' → logprob: -11.626526832580566
    5. 'a' → logprob: -12.626526832580566
    6. '_' → logprob: -12.626526832580566
    7. ''e' → logprob: -12.876526832580566
    8. '```' → logprob: -14.001526832580566
    9. 'r' → logprob: -14.376526832580566
    10. 'def' → logprob: -14.626526832580566

Token 249: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.668304245569743e-05
    2. ' ,' → logprob: -11.250046730041504
    3. ',
' → logprob: -11.250046730041504
    4. '}' → logprob: -11.500046730041504
    5. '',' → logprob: -12.125046730041504
    6. ','' → logprob: -12.250046730041504
    7. '   ' → logprob: -15.875046730041504
    8. ',

' → logprob: -16.375045776367188
    9. ',
' → logprob: -17.125045776367188
    10. ''}' → logprob: -18.000045776367188

Token 250: '            ' (ID: 3346)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.2545013129711151
    2. ' '' → logprob: -1.7545013427734375
    3. ''D' → logprob: -3.7545013427734375
    4. ''' → logprob: -3.7545013427734375
    5. ''M' → logprob: -5.5045013427734375
    6. '   ' → logprob: -9.129501342773438
    7. '          ' → logprob: -9.379501342773438
    8. '             ' → logprob: -9.629501342773438
    9. ''S' → logprob: -9.629501342773438
    10. '              ' → logprob: -9.629501342773438

Token 251: ' '' (ID: 461)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.46083560585975647
    2. ''D' → logprob: -1.710835576057434
    3. ' '' → logprob: -1.960835576057434
    4. ''M' → logprob: -3.2108356952667236
    5. ''' (adapté à ' '') → logprob: -4.9608354568481445
    6. '            ' → logprob: -8.960835456848145
    7. '           ' → logprob: -9.210835456848145
    8. ''S' → logprob: -9.960835456848145
    9. '          ' → logprob: -10.085835456848145
    10. '             ' → logprob: -10.335835456848145

Token 252: 'A' (ID: 32)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.34910696744918823
    2. 'A' → logprob: -1.224107027053833
    3. ''a' → logprob: -8.474106788635254
    4. ''' → logprob: -8.849106788635254
    5. '"A' → logprob: -9.099106788635254
    6. 'a' → logprob: -9.974106788635254
    7. ' A' → logprob: -10.099106788635254
    8. ' '' → logprob: -10.599106788635254
    9. ''M' → logprob: -10.974106788635254
    10. '
' → logprob: -11.599106788635254

Token 253: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0011174732353538275
    2. ':' → logprob: -6.876117706298828
    3. ''' → logprob: -9.626117706298828
    4. ' ':' → logprob: -11.001117706298828
    5. ' :' → logprob: -14.251117706298828
    6. '":' → logprob: -14.751117706298828
    7. '':'' → logprob: -15.001117706298828
    8. ']:' → logprob: -16.501117706298828
    9. '’:' → logprob: -16.501117706298828
    10. ''):' → logprob: -16.876117706298828

Token 254: ' inverse' (ID: 53743)
  Prédit: ' inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inverse' → logprob: -0.061969030648469925
    2. 'inverse' → logprob: -2.811969041824341
    3. '.inverse' → logprob: -14.186968803405762
    4. '_inverse' → logprob: -14.686968803405762
    5. 'Inverse' → logprob: -15.561968803405762
    6. 'in' → logprob: -16.936969757080078
    7. '    ' → logprob: -18.561969757080078
    8. ' ' → logprob: -18.811969757080078
    9. ' reverse' → logprob: -19.186969757080078
    10. ''in' → logprob: -19.436969757080078

Token 255: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.00023250321100931615
    2. '_a' → logprob: -8.375232696533203
    3. 'a' → logprob: -13.250232696533203
    4. '_' → logprob: -16.500232696533203
    5. '_ma' → logprob: -17.500232696533203
    6. 'm' → logprob: -18.375232696533203
    7. '_am' → logprob: -18.500232696533203
    8. 'mr' → logprob: -19.750232696533203
    9. '_d' → logprob: -21.250232696533203
    10. '_ar' → logprob: -21.750232696533203

Token 256: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.03546684607863426
    2. 'a' → logprob: -3.6604669094085693
    3. '_a' → logprob: -4.91046667098999
    4. '_r' → logprob: -6.41046667098999
    5. 'ra' → logprob: -9.285467147827148
    6. 'mr' → logprob: -12.410467147827148
    7. 'm' → logprob: -12.660467147827148
    8. '_ra' → logprob: -13.285467147827148
    9. '_m' → logprob: -13.410467147827148
    10. 'ar' → logprob: -14.035467147827148

Token 257: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.00010914575977949426
    2. 'a' → logprob: -9.12510871887207
    3. ''a' → logprob: -15.87510871887207
    4. '_' → logprob: -18.75010871887207
    5. ' a' → logprob: -18.75010871887207
    6. '­a' → logprob: -18.75010871887207
    7. '[::-' → logprob: -19.12510871887207
    8. '_r' → logprob: -20.12510871887207
    9. 'а' → logprob: -20.62510871887207
    10. '	a' → logprob: -20.75010871887207

Token 258: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002619318547658622
    2. ' ,' → logprob: -9.000262260437012
    3. ','' → logprob: -9.000262260437012
    4. ',
' → logprob: -11.250262260437012
    5. '',' → logprob: -13.375262260437012
    6. ' ,'' → logprob: -15.625262260437012
    7. ''' → logprob: -16.000261306762695
    8. '            ' → logprob: -16.375261306762695
    9. '}' → logprob: -17.500261306762695
    10. '           ' → logprob: -17.500261306762695

Token 259: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7038113474845886
    2. ''D' → logprob: -0.7038113474845886
    3. ' '' → logprob: -4.578811168670654
    4. '            ' → logprob: -8.578811645507812
    5. ''p' → logprob: -9.703811645507812
    6. '           ' → logprob: -10.453811645507812
    7. ''d' → logprob: -11.078811645507812
    8. ''S' → logprob: -11.328811645507812
    9. '             ' → logprob: -11.453811645507812
    10. 'P' → logprob: -12.578811645507812

Token 260: 'P' (ID: 47)
  Prédit: ''D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''D' → logprob: -0.09125674515962601
    2. 'D' → logprob: -2.966256856918335
    3. ''' → logprob: -3.341256856918335
    4. ''d' → logprob: -8.341257095336914
    5. '"D' → logprob: -9.966257095336914
    6. ''p' → logprob: -11.841257095336914
    7. ' '' → logprob: -11.841257095336914
    8. '
' → logprob: -12.841257095336914
    9. '{'' → logprob: -13.091257095336914
    10. ' D' → logprob: -13.091257095336914

Token 261: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0001347672223346308
    2. ''' → logprob: -9.000134468078613
    3. ':' → logprob: -11.625134468078613
    4. '":' → logprob: -13.500134468078613
    5. ' ':' → logprob: -15.000134468078613
    6. '':'' → logprob: -15.125134468078613
    7. 'def' → logprob: -16.25013542175293
    8. ''):' → logprob: -16.87513542175293
    9. ''>' → logprob: -17.12513542175293
    10. '’:' → logprob: -17.25013542175293

Token 262: ' inverse' (ID: 53743)
  Prédit: ' inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inverse' → logprob: -0.38687190413475037
    2. 'inverse' → logprob: -1.1368719339370728
    3. '.inverse' → logprob: -14.511872291564941
    4. '_inverse' → logprob: -15.261872291564941
    5. 'Inverse' → logprob: -16.011871337890625
    6. 'in' → logprob: -16.261871337890625
    7. 'def' → logprob: -19.011871337890625
    8. 'd' → logprob: -19.011871337890625
    9. 'f' → logprob: -19.511871337890625
    10. 'int' → logprob: -20.261871337890625

Token 263: '_dr' (ID: 74961)
  Prédit: '_dr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dr' → logprob: -0.001302618533372879
    2. 'dr' → logprob: -7.376302719116211
    3. '_p' → logprob: -7.501302719116211
    4. '_d' → logprob: -9.251302719116211
    5. '_r' → logprob: -11.751302719116211
    6. '_m' → logprob: -12.251302719116211
    7. 'p' → logprob: -12.501302719116211
    8. '_s' → logprob: -12.876302719116211
    9. 'r' → logprob: -13.126302719116211
    10. '_dp' → logprob: -13.251302719116211

Token 264: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.000181372175575234
    2. 'p' → logprob: -8.625181198120117
    3. '_' → logprob: -13.625181198120117
    4. ''p' → logprob: -15.625181198120117
    5. 'd' → logprob: -16.125181198120117
    6. '_d' → logprob: -16.250181198120117
    7. '_r' → logprob: -17.250181198120117
    8. ' p' → logprob: -17.250181198120117
    9. ' _' → logprob: -17.625181198120117
    10. '```' → logprob: -17.750181198120117

Token 265: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00209803762845695
    2. '}' → logprob: -6.377098083496094
    3. ','' → logprob: -7.877098083496094
    4. ' ,' → logprob: -11.377098083496094
    5. ',
' → logprob: -12.752098083496094
    6. ''' → logprob: -14.002098083496094
    7. '',' → logprob: -14.877098083496094
    8. ' ,'' → logprob: -15.002098083496094
    9. ' }' → logprob: -15.377098083496094
    10. ']' → logprob: -16.877098083496094

Token 266: ' '' (ID: 461)
  Prédit: ''M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''M' → logprob: -0.0011028258595615625
    2. ' '' → logprob: -7.001102924346924
    3. '           ' → logprob: -9.751102447509766
    4. ''' → logprob: -9.876102447509766
    5. '          ' → logprob: -10.751102447509766
    6. '            ' → logprob: -10.876102447509766
    7. ' ' → logprob: -11.626102447509766
    8. '        ' → logprob: -12.376102447509766
    9. ''m' → logprob: -12.376102447509766
    10. ''D' → logprob: -12.626102447509766

Token 267: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.026345349848270416
    2. ''M' → logprob: -3.6513452529907227
    3. ''' → logprob: -10.526345252990723
    4. ' M' → logprob: -11.651345252990723
    5. ''m' → logprob: -12.401345252990723
    6. '"M' → logprob: -13.276345252990723
    7. 'm' → logprob: -14.651345252990723
    8. '	M' → logprob: -14.901345252990723
    9. 'М' → logprob: -14.901345252990723
    10. '```' → logprob: -15.401345252990723

Token 268: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.00019018957391381264
    2. ':' → logprob: -9.250189781188965
    3. ''' → logprob: -9.375189781188965
    4. ' ':' → logprob: -12.625189781188965
    5. ''):' → logprob: -13.500189781188965
    6. '']' → logprob: -13.750189781188965
    7. '":' → logprob: -14.125189781188965
    8. '']:' → logprob: -14.250189781188965
    9. '':'' → logprob: -14.875189781188965
    10. '')' → logprob: -15.000189781188965

Token 269: ' inverse' (ID: 53743)
  Prédit: ' inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inverse' → logprob: -0.38687223196029663
    2. 'inverse' → logprob: -1.1368722915649414
    3. '.inverse' → logprob: -14.136872291564941
    4. '_inverse' → logprob: -15.386872291564941
    5. 'Inverse' → logprob: -15.511872291564941
    6. 'in' → logprob: -16.136871337890625
    7. ' ' → logprob: -17.636871337890625
    8. '    ' → logprob: -18.261871337890625
    9. '   ' → logprob: -19.136871337890625
    10. 'reverse' → logprob: -20.136871337890625

Token 270: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -6.265633419388905e-05
    2. '_dr' → logprob: -10.000062942504883
    3. 'mr' → logprob: -11.125062942504883
    4. '_r' → logprob: -13.875062942504883
    5. 'm' → logprob: -14.875062942504883
    6. 'dr' → logprob: -15.500062942504883
    7. 'r' → logprob: -15.625062942504883
    8. '_rm' → logprob: -15.625062942504883
    9. '_mc' → logprob: -16.125062942504883
    10. '_mm' → logprob: -16.375062942504883

Token 271: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.002086496911942959
    2. 'm' → logprob: -6.502086639404297
    3. '_r' → logprob: -7.627086639404297
    4. '_m' → logprob: -9.377086639404297
    5. 'rm' → logprob: -11.377086639404297
    6. '_' → logprob: -14.502086639404297
    7. 'mr' → logprob: -16.002086639404297
    8. 'p' → logprob: -17.252086639404297
    9. '_p' → logprob: -17.502086639404297
    10. '_rm' → logprob: -17.627086639404297

Token 272: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.038045622408390045
    2. 'm' → logprob: -3.288045644760132
    3. 'a' → logprob: -12.788045883178711
    4. '_a' → logprob: -14.288045883178711
    5. '_p' → logprob: -15.288045883178711
    6. 'м' → logprob: -15.663045883178711
    7. '_' → logprob: -16.16304588317871
    8. ' m' → logprob: -16.53804588317871
    9. ''m' → logprob: -16.66304588317871
    10. '	m' → logprob: -17.53804588317871

Token 273: '}

' (ID: 943)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -4.60414821645827e-06
    2. ' }' → logprob: -12.500004768371582
    3. ''}' → logprob: -14.375004768371582
    4. ',' → logprob: -15.375004768371582
    5. '}
' → logprob: -16.750003814697266
    6. '`}' → logprob: -19.375003814697266
    7. '}}' → logprob: -19.875003814697266
    8. '}

' → logprob: -20.000003814697266
    9. '}'' → logprob: -20.000003814697266
    10. ')' → logprob: -20.125003814697266

Token 274: 'n' (ID: 77)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.9361264946837764e-07
    2. ' def' → logprob: -16.25
    3. '```' → logprob: -17.25
    4. 'for' → logprob: -18.75
    5. '#' → logprob: -18.875
    6. 'import' → logprob: -19.625
    7. 'from' → logprob: -19.875
    8. 'ndef' → logprob: -20.375
    9. '**' → logprob: -21.5
    10. 's' → logprob: -21.5

Token 275: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2913253605365753
    2. ' =' → logprob: -1.416325330734253
    3. ' ' → logprob: -5.791325569152832
    4. ',' → logprob: -6.041325569152832
    5. '_' → logprob: -6.041325569152832
    6. 'ame' → logprob: -6.666325569152832
    7. 'a' → logprob: -8.166325569152832
    8. 'um' → logprob: -8.541325569152832
    9. 'u' → logprob: -9.041325569152832
    10. 'm' → logprob: -9.291325569152832

Token 276: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.008651564829051495
    2. ' int' → logprob: -4.7586517333984375
    3. 'input' → logprob: -10.508651733398438
    4. '10' → logprob: -11.758651733398438
    5. ' input' → logprob: -14.633651733398438
    6. ' ' → logprob: -15.133651733398438
    7. '5' → logprob: -15.508651733398438
    8. 'len' → logprob: -15.633651733398438
    9. '[int' → logprob: -16.133651733398438
    10. '20' → logprob: -16.383651733398438

Token 277: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00020008347928524017
    2. '(' → logprob: -8.750200271606445
    3. 'input' → logprob: -10.125200271606445
    4. '()' → logprob: -13.625200271606445
    5. '=input' → logprob: -16.500200271606445
    6. '(
' → logprob: -16.750200271606445
    7. '('' → logprob: -17.250200271606445
    8. ' input' → logprob: -17.375200271606445
    9. ' (' → logprob: -18.250200271606445
    10. '(in' → logprob: -19.500200271606445

Token 278: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00866006687283516
    2. '()' → logprob: -4.758659839630127
    3. '())
' → logprob: -10.383660316467285
    4. '(' → logprob: -12.008660316467285
    5. '().' → logprob: -12.508660316467285
    6. '()
' → logprob: -13.633660316467285
    7. '("' → logprob: -13.883660316467285
    8. '())

' → logprob: -14.383660316467285
    9. '('' → logprob: -14.758660316467285
    10. ')' → logprob: -14.758660316467285

Token 279: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008864453993737698
    2. 'results' → logprob: -7.2508864402771
    3. 'result' → logprob: -9.000886917114258
    4. 'codes' → logprob: -10.875886917114258
    5. 'output' → logprob: -11.750886917114258
    6. 'code' → logprob: -12.000886917114258
    7. ' for' → logprob: -12.125886917114258
    8. 'outputs' → logprob: -12.250886917114258
    9. 'answers' → logprob: -12.750886917114258
    10. 'commands' → logprob: -13.125886917114258

Token 280: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.3869476318359375
    2. '_' → logprob: -1.1369476318359375
    3. ' i' → logprob: -9.511947631835938
    4. '_i' → logprob: -13.136947631835938
    5. ' ' → logprob: -14.886947631835938
    6. ' ' → logprob: -15.511947631835938
    7. 'i' → logprob: -16.761947631835938
    8. ' range' → logprob: -17.011947631835938
    9. '_range' → logprob: -18.511947631835938
    10. '_=' → logprob: -18.511947631835938

Token 281: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008640570566058159
    2. 'in' → logprob: -4.758640766143799
    3. ' ' → logprob: -11.38364028930664
    4. 'n' → logprob: -12.00864028930664
    5. 'range' → logprob: -12.25864028930664
    6. 'i' → logprob: -13.50864028930664
    7. ' i' → logprob: -14.13364028930664
    8. ' _' → logprob: -14.38364028930664
    9. '	in' → logprob: -15.25864028930664
    10. ' n' → logprob: -15.63364028930664

Token 282: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00026169343618676066
    2. ' range' → logprob: -8.250261306762695
    3. 'n' → logprob: -15.125261306762695
    4. '(range' → logprob: -17.625261306762695
    5. 'r' → logprob: -18.500261306762695
    6. 'rang' → logprob: -18.625261306762695
    7. 'ange' → logprob: -18.875261306762695
    8. '	range' → logprob: -19.000261306762695
    9. ' ' → logprob: -19.125261306762695
    10. '
' → logprob: -19.375261306762695

Token 283: '(n' (ID: 2406)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3828381896018982
    2. '(n' → logprob: -1.507838249206543
    3. 'n' → logprob: -2.882838249206543
    4. ' (' → logprob: -3.507838249206543
    5. '(' → logprob: -4.632838249206543
    6. ' ' → logprob: -7.132838249206543
    7. ' range' → logprob: -9.007838249206543
    8. ' )' → logprob: -10.007838249206543
    9. 'range' → logprob: -10.632838249206543
    10. '(
' → logprob: -11.882838249206543

Token 284: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.038200315088033676
    2. '):
' → logprob: -3.2882003784179688
    3. ':' → logprob: -9.038200378417969
    4. ' ):' → logprob: -11.163200378417969
    5. ')' → logprob: -11.663200378417969
    6. '):
' → logprob: -11.663200378417969
    7. '():' → logprob: -12.913200378417969
    8. ':
' → logprob: -13.163200378417969
    9. '():
' → logprob: -13.288200378417969
    10. ' ):
' → logprob: -14.413200378417969

Token 285: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005258660763502121
    2. ' s' → logprob: -5.755258560180664
    3. ' line' → logprob: -7.130258560180664
    4. ' op' → logprob: -8.005258560180664
    5. ' code' → logprob: -8.380258560180664
    6. 's' → logprob: -8.505258560180664
    7. 'code' → logprob: -9.880258560180664
    8. ' codes' → logprob: -10.255258560180664
    9. ' parts' → logprob: -10.255258560180664
    10. ' command' → logprob: -10.505258560180664

Token 286: ' order' (ID: 2569)
  Prédit: 'cmd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cmd' → logprob: -1.609878659248352
    2. 's' → logprob: -1.859878659248352
    3. 'ops' → logprob: -1.859878659248352
    4. 'op' → logprob: -1.859878659248352
    5. 'code' → logprob: -1.984878659248352
    6. 'line' → logprob: -2.4848785400390625
    7. 'k' → logprob: -3.9848785400390625
    8. 't' → logprob: -4.1098785400390625
    9. 'func' → logprob: -4.1098785400390625
    10. 'codes' → logprob: -4.8598785400390625

Token 287: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5128516554832458
    2. '=' → logprob: -1.3878517150878906
    3. 's' → logprob: -2.0128517150878906
    4. ',' → logprob: -4.137851715087891
    5. '_line' → logprob: -6.887851715087891
    6. '_str' → logprob: -8.63785171508789
    7. '_code' → logprob: -8.63785171508789
    8. '=line' → logprob: -8.76285171508789
    9. ',s' → logprob: -8.88785171508789
    10. ' ,' → logprob: -9.51285171508789

Token 288: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.31328949332237244
    2. ' input' → logprob: -1.3132895231246948
    3. 'list' → logprob: -11.063289642333984
    4. ' list' → logprob: -12.063289642333984
    5. '(input' → logprob: -13.313289642333984
    6. ' ' → logprob: -13.813289642333984
    7. '[input' → logprob: -13.938289642333984
    8. '=input' → logprob: -14.063289642333984
    9. 'int' → logprob: -14.188289642333984
    10. '   ' → logprob: -14.938289642333984

Token 289: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03812021389603615
    2. '().' → logprob: -3.2881202697753906
    3. '()
' → logprob: -9.78812026977539
    4. '())' → logprob: -11.41312026977539
    5. ' ()' → logprob: -11.91312026977539
    6. '(' → logprob: -13.78812026977539
    7. ')' → logprob: -13.78812026977539
    8. '()

' → logprob: -14.16312026977539
    9. '.strip' → logprob: -14.66312026977539
    10. '()>' → logprob: -14.78812026977539

Token 290: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.3868815004825592
    2. 'split' → logprob: -1.1368814706802368
    3. 'rstrip' → logprob: -11.511881828308105
    4. 'replace' → logprob: -14.886881828308105
    5. ' split' → logprob: -16.63688087463379
    6. ' strip' → logprob: -16.88688087463379
    7. 's' → logprob: -17.51188087463379
    8. 'plit' → logprob: -18.01188087463379
    9. 'r' → logprob: -18.76188087463379
    10. 'str' → logprob: -18.76188087463379

Token 291: '()
' (ID: 1234)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.4864273965358734
    2. '()' → logprob: -1.8614274263381958
    3. '()
' → logprob: -2.6114273071289062
    4. '().' → logprob: -3.3614273071289062
    5. 'tokens' → logprob: -3.6114273071289062
    6. '[::-' → logprob: -3.7364273071289062
    7. 'split' → logprob: -4.111427307128906
    8. '
' → logprob: -4.236427307128906
    9. ',' → logprob: -4.736427307128906
    10. 's' → logprob: -5.111427307128906

Token 292: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.659843921661377
    2. 's' → logprob: -0.784843921661377
    3. 'code' → logprob: -4.534843921661377
    4. 'string' → logprob: -5.034843921661377
    5. 'text' → logprob: -5.659843921661377
    6. 'message' → logprob: -5.909843921661377
    7. ' s' → logprob: -6.534843921661377
    8. 'msg' → logprob: -7.159843921661377
    9. 'data' → logprob: -8.659843444824219
    10. 'word' → logprob: -8.784843444824219

Token 293: ' msg' (ID: 6981)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03702327609062195
    2. 'text' → logprob: -3.6620233058929443
    3. 'string' → logprob: -5.037023067474365
    4. 'msg' (adapté à ' msg') → logprob: -7.037023067474365
    5. 'message' → logprob: -7.162023067474365
    6. 'word' → logprob: -7.537023067474365
    7. 'res' → logprob: -7.662023067474365
    8. 'code' → logprob: -7.912023067474365
    9. 'result' → logprob: -7.912023067474365
    10. '   ' → logprob: -8.787023544311523

Token 294: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42875754833221436
    2. ' =' → logprob: -1.0537575483322144
    3. ',' → logprob: -10.303757667541504
    4. 's' → logprob: -11.553757667541504
    5. '   ' → logprob: -12.303757667541504
    6. ' ' → logprob: -12.553757667541504
    7. '=input' → logprob: -13.178757667541504
    8. '_' → logprob: -14.053757667541504
    9. ')' → logprob: -14.428757667541504
    10. 'a' → logprob: -14.428757667541504

Token 295: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3868800103664398
    2. ' input' → logprob: -1.1368800401687622
    3. '   ' → logprob: -11.761879920959473
    4. '(input' → logprob: -14.386879920959473
    5. ' ' → logprob: -15.386879920959473
    6. '=input' → logprob: -15.511879920959473
    7. '	input' → logprob: -16.01188087463379
    8. '<input' → logprob: -17.13688087463379
    9. '[input' → logprob: -17.38688087463379
    10. ',input' → logprob: -17.63688087463379

Token 296: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.47409817576408386
    2. '().' → logprob: -0.9740982055664062
    3. '()
' → logprob: -10.849098205566406
    4. '(' → logprob: -14.849098205566406
    5. '()>' → logprob: -14.974098205566406
    6. ' ()' → logprob: -15.224098205566406
    7. '())' → logprob: -15.349098205566406
    8. '()`' → logprob: -15.724098205566406
    9. '()<' → logprob: -15.724098205566406
    10. '()

' → logprob: -15.974098205566406

Token 297: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -2.7729658540920354e-05
    2. 'rstrip' → logprob: -10.500027656555176
    3. ' strip' → logprob: -16.625028610229492
    4. 'stripe' → logprob: -17.750028610229492
    5. 'split' → logprob: -18.000028610229492
    6. '(strip' → logprob: -18.250028610229492
    7. '_strip' → logprob: -19.500028610229492
    8. 'read' → logprob: -19.875028610229492
    9. '.strip' → logprob: -20.625028610229492
    10. '-strip' → logprob: -21.125028610229492

Token 298: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0031973200384527445
    2. '()
' → logprob: -5.753197193145752
    3. ')' → logprob: -11.00319766998291
    4. '())' → logprob: -13.75319766998291
    5. '()
' → logprob: -14.00319766998291
    6. '()

' → logprob: -14.62819766998291
    7. '(' → logprob: -15.12819766998291
    8. '()`' → logprob: -16.128196716308594
    9. '   ' → logprob: -17.003196716308594
    10. ')
' → logprob: -17.503196716308594

Token 299: '   ' (ID: 271)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.3396017551422119
    2. 'for' → logprob: -1.964601755142212
    3. 'result' → logprob: -2.589601755142212
    4. 'func' → logprob: -3.339601755142212
    5. '   ' → logprob: -4.339601516723633
    6. 's' → logprob: -4.464601516723633
    7. 'decoded' → logprob: -5.839601516723633
    8. ' res' → logprob: -6.339601516723633
    9. ' for' → logprob: -6.464601516723633
    10. 'print' → logprob: -6.964601516723633

Token 300: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.012998213991522789
    2. 'func' → logprob: -5.262998104095459
    3. 'result' → logprob: -5.512998104095459
    4. 'res' → logprob: -6.012998104095459
    5. 'msg' → logprob: -7.887998104095459
    6. 'for' (adapté à ' for') → logprob: -8.012998580932617
    7. 'decoded' → logprob: -8.512998580932617
    8. 's' → logprob: -8.762998580932617
    9. 'inv' → logprob: -9.512998580932617
    10. 'trans' → logprob: -10.637998580932617

Token 301: ' m' (ID: 284)
  Prédit: ' op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.4907207787036896
    2. 'c' → logprob: -2.365720748901367
    3. ' c' → logprob: -2.490720748901367
    4. 'op' → logprob: -2.740720748901367
    5. ' func' → logprob: -2.990720748901367
    6. 'func' → logprob: -3.740720748901367
    7. ' ch' → logprob: -3.740720748901367
    8. 'ch' → logprob: -4.365720748901367
    9. ' cmd' → logprob: -4.740720748901367
    10. 'o' → logprob: -5.115720748901367

Token 302: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.034079935401678085
    2. 'ethod' → logprob: -3.5340800285339355
    3. 'ode' → logprob: -5.6590800285339355
    4. 'th' → logprob: -8.034079551696777
    5. ' ' → logprob: -9.159079551696777
    6. 'od' → logprob: -9.159079551696777
    7. '   ' → logprob: -9.534079551696777
    8. 'odel' → logprob: -9.909079551696777
    9. 'm' → logprob: -10.159079551696777
    10. 'in' → logprob: -10.409079551696777

Token 303: ' reversed' (ID: 57184)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.011141079477965832
    2. ' order' → logprob: -4.511141300201416
    3. 're' → logprob: -9.386140823364258
    4. ' reversed' → logprob: -12.011140823364258
    5. '   ' → logprob: -13.636140823364258
    6. ' ' → logprob: -13.886140823364258
    7. '	order' → logprob: -15.011140823364258
    8. 'reverse' → logprob: -15.136140823364258
    9. '  ' → logprob: -15.886140823364258
    10. '(order' → logprob: -16.136140823364258

Token 304: '(order' (ID: 33050)
  Prédit: '(order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(order' → logprob: -3.547789674485102e-05
    2. 'order' → logprob: -10.250035285949707
    3. ' order' → logprob: -17.000036239624023
    4. '(' → logprob: -17.250036239624023
    5. '(ord' → logprob: -17.500036239624023
    6. '(range' → logprob: -19.500036239624023
    7. ' (' → logprob: -20.000036239624023
    8. '$order' → logprob: -20.375036239624023
    9. '	order' → logprob: -20.625036239624023
    10. '_order' → logprob: -20.750036239624023

Token 305: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009252764866687357
    2. '):
' → logprob: -7.125925064086914
    3. ':' → logprob: -9.250925064086914
    4. ')' → logprob: -11.500925064086914
    5. ' ):' → logprob: -11.625925064086914
    6. ']:' → logprob: -12.750925064086914
    7. '}:' → logprob: -13.375925064086914
    8. '):
' → logprob: -14.875925064086914
    9. '）：' → logprob: -15.250925064086914
    10. '>:' → logprob: -15.500925064086914

Token 306: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1203416958451271
    2. 'msg' → logprob: -2.8703417778015137
    3. '   ' → logprob: -3.4953417778015137
    4. ' msg' → logprob: -3.7453417778015137
    5. '
' → logprob: -6.120341777801514
    6. '	msg' → logprob: -8.370341300964355
    7. '[msg' → logprob: -8.995341300964355
    8. '(msg' → logprob: -9.370341300964355
    9. ',msg' → logprob: -9.995341300964355
    10. '    
' → logprob: -11.495341300964355

Token 307: ' msg' (ID: 6981)
  Prédit: 'msg'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'msg' (adapté à ' msg') → logprob: -0.47749757766723633
    2. ' msg' → logprob: -0.9774975776672363
    3. '   ' → logprob: -5.977497577667236
    4. '       ' → logprob: -7.977497577667236
    5. '	msg' → logprob: -8.102497100830078
    6. '(msg' → logprob: -8.977497100830078
    7. '
' → logprob: -10.102497100830078
    8. ',msg' → logprob: -10.602497100830078
    9. '           ' → logprob: -11.227497100830078
    10. '[msg' → logprob: -11.352497100830078

Token 308: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01416350994259119
    2. ' =' → logprob: -4.264163494110107
    3. '＝' → logprob: -19.514163970947266
    4. '=

' → logprob: -21.014163970947266
    5. '   ' → logprob: -21.889163970947266
    6. ')' → logprob: -21.889163970947266
    7. ',' → logprob: -21.889163970947266
    8. '=}' → logprob: -22.139163970947266
    9. '.=' → logprob: -22.639163970947266
    10. ')=' → logprob: -22.889163970947266

Token 309: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.004623322281986475
    2. ' inv' → logprob: -5.3796234130859375
    3. '(inv' → logprob: -12.754623413085938
    4. 'inverse' → logprob: -16.254623413085938
    5. '_inv' → logprob: -16.879623413085938
    6. '.inv' → logprob: -17.004623413085938
    7. ' ' → logprob: -17.504623413085938
    8. '   ' → logprob: -17.879623413085938
    9. 'invoke' → logprob: -18.254623413085938
    10. 'msg' → logprob: -18.254623413085938

Token 310: '_funcs' (ID: 170036)
  Prédit: '_funcs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_funcs' → logprob: -6.869017852295656e-06
    2. 'func' → logprob: -12.000006675720215
    3. '_func' → logprob: -14.375006675720215
    4. 'Funcs' → logprob: -16.37500762939453
    5. ' funcs' → logprob: -17.75000762939453
    6. 'f' → logprob: -18.50000762939453
    7. '_functions' → logprob: -18.75000762939453
    8. '__' → logprob: -18.75000762939453
    9. '_msgs' → logprob: -19.00000762939453
    10. '_f' → logprob: -19.37500762939453

Token 311: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -1.9504606825648807e-05
    2. '[' → logprob: -11.000019073486328
    3. '[msg' → logprob: -13.250019073486328
    4. ' [' → logprob: -14.500019073486328
    5. 'm' → logprob: -15.875019073486328
    6. '```' → logprob: -16.625019073486328
    7. '[s' → logprob: -16.750019073486328
    8. '[int' → logprob: -17.375019073486328
    9. '[mem' → logprob: -17.625019073486328
    10. '[
' → logprob: -17.750019073486328

Token 312: '](' (ID: 20614)
  Prédit: ']('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '](' → logprob: -0.001623291289433837
    2. ']' → logprob: -6.501623153686523
    3. '(msg' → logprob: -9.126623153686523
    4. '(' → logprob: -12.001623153686523
    5. ' ]' → logprob: -12.126623153686523
    6. ')(' → logprob: -15.751623153686523
    7. '(m' → logprob: -16.251623153686523
    8. ')]' → logprob: -16.251623153686523
    9. ']()' → logprob: -16.251623153686523
    10. ' (' → logprob: -16.626623153686523

Token 313: 'msg' (ID: 6243)
  Prédit: 'msg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'msg' → logprob: -2.856408536899835e-05
    2. ' msg' → logprob: -10.500028610229492
    3. '(msg' → logprob: -14.000028610229492
    4. ')' → logprob: -16.375028610229492
    5. '	msg' → logprob: -18.125028610229492
    6. ',msg' → logprob: -18.500028610229492
    7. '[msg' → logprob: -19.875028610229492
    8. '   ' → logprob: -20.500028610229492
    9. '$msg' → logprob: -21.125028610229492
    10. '.msg' → logprob: -22.500028610229492

Token 314: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014013137842994183
    2. ')
' → logprob: -8.875140190124512
    3. '   ' → logprob: -15.375140190124512
    4. ' )' → logprob: -16.750139236450195
    5. ')

' → logprob: -18.000139236450195
    6. ')return' → logprob: -19.000139236450195
    7. ')
' → logprob: -19.125139236450195
    8. '),' → logprob: -19.250139236450195
    9. ')`' → logprob: -19.500139236450195
    10. '))' → logprob: -20.125139236450195

Token 315: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25194862484931946
    2. 'print' → logprob: -1.501948595046997
    3. ' print' → logprob: -11.126948356628418
    4. '```' → logprob: -13.001948356628418
    5. '
' → logprob: -13.626948356628418
    6. '    
' → logprob: -13.751948356628418
    7. '<|end|>' → logprob: -16.126949310302734
    8. '	print' → logprob: -16.501949310302734
    9. '       ' → logprob: -16.501949310302734
    10. '(print' → logprob: -17.001949310302734

Token 316: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -5.2524021157296374e-05
    2. '   ' → logprob: -10.250052452087402
    3. ' print' → logprob: -11.000052452087402
    4. '
' → logprob: -15.375052452087402
    5. '	print' → logprob: -16.62505340576172
    6. '```' → logprob: -16.75005340576172
    7. '(print' → logprob: -17.00005340576172
    8. '    
' → logprob: -18.12505340576172
    9. '.print' → logprob: -18.62505340576172
    10. '<|end|>' → logprob: -19.62505340576172

Token 317: '(msg' (ID: 15182)
  Prédit: '(msg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(msg' → logprob: -7.553032628493384e-05
    2. '(' → logprob: -9.500075340270996
    3. 'msg' → logprob: -14.375075340270996
    4. ' (' → logprob: -17.500076293945312
    5. '(message' → logprob: -17.500076293945312
    6. '()' → logprob: -17.625076293945312
    7. ',msg' → logprob: -18.000076293945312
    8. '(MSG' → logprob: -19.000076293945312
    9. '[msg' → logprob: -19.375076293945312
    10. '	msg' → logprob: -19.375076293945312

Token 318: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -16.875
    3. '')' → logprob: -17.75
    4. '))' → logprob: -17.875
    5. ')`' → logprob: -18.0
    6. '`)' → logprob: -18.375
    7. ')
' → logprob: -18.5
    8. '())' → logprob: -18.625
    9. '")' → logprob: -20.25
    10. '()' → logprob: -20.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 316
Tokens correctement prédits (1ère position, stricte): 174
Tokens correctement prédits (1ère position, avec adaptation): 184
Tokens correctement prédits (top 10): 283
Précision stricte (1ère position): 55.06%
Précision adaptée (1ère position): 58.23%
Précision (top 10): 89.56%
================================================================================
