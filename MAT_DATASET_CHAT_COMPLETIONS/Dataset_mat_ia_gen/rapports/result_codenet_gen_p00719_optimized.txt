================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math
import heapq

def solve():
    input = sys.stdin.readline
    while True:
        n,m,p,a,b = map(int,input().split())
        if n==0 and m==0 and p==0 and a==0 and b==0:
            break
        horses = list(map(int,input().split()))
        adj = [[] for _ in range(m+1)]
        for _ in range(p):
            x,y,z = map(int,input().split())
            adj[x].append((y,z))
            adj[y].append((x,z))
        # state: (cost,time)
        # pos: current city
        # used: bitmask of tickets used
        dist = [[math.inf]*(1<<n) for _ in range(m+1)]
        dist[a][0]=0.0
        hq = [(0.0,a,0)]
        while hq:
            cost,u,used = heapq.heappop(hq)
            if dist[u][used]<cost:
                continue
            if u==b:
                print(f"{cost:.3f}")
                break
            for v,w in adj[u]:
                for i in range(n):
                    if (used&(1<<i))==0:
                        nxt_cost = cost + w/horses[i]
                        nxt_used = used|(1<<i)
                        if dist[v][nxt_used]>nxt_cost:
                            dist[v][nxt_used]=nxt_cost
                            heapq.heappush(hq,(nxt_cost,v,nxt_used))
        else:
            print("Impossible")

if __name__=="__main__":
    solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6404924392700195
    2. '.' → logprob: -0.8904924392700195
    3. 'import' → logprob: -4.0154924392700195
    4. 'newline' → logprob: -4.2654924392700195
    5. '\' → logprob: -4.7654924392700195
    6. '<|end|>' → logprob: -5.0154924392700195
    7. '```' → logprob: -5.3904924392700195
    8. '
' → logprob: -5.7654924392700195
    9. '<|end|>' → logprob: -6.5154924392700195
    10. '' → logprob: -6.5154924392700195

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020497082732617855
    2. 'os' → logprob: -8.500205039978027
    3. '"os' → logprob: -14.875205039978027
    4. ' math' → logprob: -15.000205039978027
    5. ' re' → logprob: -15.125205039978027
    6. '_os' → logprob: -15.750205039978027
    7. ' json' → logprob: -16.12520408630371
    8. '	os' → logprob: -16.37520408630371
    9. ' ' → logprob: -17.50020408630371
    10. ' ' → logprob: -17.50020408630371

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.26209789514541626
    2. 'import' → logprob: -2.6370978355407715
    3. '\n' → logprob: -2.7620978355407715
    4. '\' → logprob: -3.2620978355407715
    5. '```' → logprob: -3.8870978355407715
    6. '
' → logprob: -4.1370978355407715
    7. '<|end|>' → logprob: -4.7620978355407715
    8. ',' → logprob: -5.3870978355407715
    9. '

' → logprob: -5.7620978355407715
    10. '<|end|>' → logprob: -7.0120978355407715

Token 6: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.1315985918045044
    2. '\n' → logprob: -1.6315985918045044
    3. '.' → logprob: -2.006598472595215
    4. '
' → logprob: -2.006598472595215
    5. '```' → logprob: -2.506598472595215
    6. '\' → logprob: -3.131598472595215
    7. '<|end|>' → logprob: -3.381598472595215
    8. '

' → logprob: -3.631598472595215
    9. ',' → logprob: -4.381598472595215
    10. '<|end|>' → logprob: -5.631598472595215

Token 7: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.582166314125061
    2. 'os' → logprob: -0.832166314125061
    3. 'random' → logprob: -5.4571661949157715
    4. ' random' → logprob: -6.9571661949157715
    5. 're' → logprob: -8.08216667175293
    6. ' re' → logprob: -8.45716667175293
    7. 'collections' → logprob: -9.45716667175293
    8. ' itertools' → logprob: -9.45716667175293
    9. ' numpy' → logprob: -9.58216667175293
    10. 'numpy' → logprob: -9.70716667175293

Token 8: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -8.061054359131958e-06
    2. '#' → logprob: -12.750007629394531
    3. '_' → logprob: -13.375007629394531
    4. 's' → logprob: -13.875007629394531
    5. '.' → logprob: -14.125007629394531
    6. 't' → logprob: -14.750007629394531
    7. 'u' → logprob: -14.875007629394531
    8. '<|end|>' → logprob: -15.625007629394531
    9. '
' → logprob: -16.12500762939453
    10. '[' → logprob: -16.12500762939453

Token 9: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.977064311504364
    2. '

' → logprob: -1.2270643711090088
    3. 'import' → logprob: -1.8520643711090088
    4. '\n' → logprob: -2.977064371109009
    5. '```' → logprob: -3.477064371109009
    6. '.' → logprob: -3.602064371109009
    7. '<|end|>' → logprob: -4.22706413269043
    8. '\' → logprob: -4.35206413269043
    9. '' → logprob: -4.47706413269043
    10. '
' → logprob: -5.10206413269043

Token 10: 'def' (ID: 1314)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.0758007764816284
    2. '.' → logprob: -1.2008007764816284
    3. 'def' → logprob: -1.9508007764816284
    4. '\n' → logprob: -2.200800895690918
    5. 'import' → logprob: -3.325800895690918
    6. '```' → logprob: -3.950800895690918
    7. '
' → logprob: -4.075800895690918
    8. 'from' → logprob: -4.075800895690918
    9. '#' → logprob: -4.950800895690918
    10. '

' → logprob: -6.575800895690918

Token 11: ' solve' (ID: 17722)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005421462003141642
    2. ' a' → logprob: -6.3804216384887695
    3. ' find' → logprob: -6.6304216384887695
    4. ' d' → logprob: -6.8804216384887695
    5. ' shortest' → logprob: -7.7554216384887695
    6. ' solve' → logprob: -8.38042163848877
    7. ' calculate' → logprob: -8.88042163848877
    8. ' main' → logprob: -9.63042163848877
    9. ' `' → logprob: -9.63042163848877
    10. '_' → logprob: -9.63042163848877

Token 12: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002502771094441414
    2. '_' → logprob: -6.377502918243408
    3. '():' → logprob: -7.877502918243408
    4. '```' → logprob: -9.37750244140625
    5. '(:' → logprob: -9.75250244140625
    6. ' (' → logprob: -10.00250244140625
    7. '("("' → logprob: -10.00250244140625
    8. ':' → logprob: -10.75250244140625
    9. '(_' → logprob: -10.87750244140625
    10. '(
' → logprob: -11.25250244140625

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10980573296546936
    2. '(' → logprob: -2.4848058223724365
    3. '\' → logprob: -5.234805583953857
    4. ':' → logprob: -5.359805583953857
    5. '```' → logprob: -5.859805583953857
    6. '():' → logprob: -5.984805583953857
    7. '    
' → logprob: -6.859805583953857
    8. '    ' → logprob: -6.859805583953857
    9. ' ' → logprob: -6.984805583953857
    10. '()' → logprob: -7.859805583953857

Token 14: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.642918586730957
    2. 'n' → logprob: -1.392918586730957
    3. ' n' → logprob: -1.517918586730957
    4. 'input' (adapté à ' input') → logprob: -6.392918586730957
    5. ' input' → logprob: -6.767918586730957
    6. '(n' → logprob: -7.017918586730957
    7. ' ' → logprob: -7.142918586730957
    8. '    ' → logprob: -7.892918586730957
    9. '\' → logprob: -8.017918586730957
    10. '\n' → logprob: -8.267918586730957

Token 15: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2634134292602539
    2. '(' → logprob: -1.513413429260254
    3. '_data' → logprob: -5.388413429260254
    4. '().' → logprob: -5.888413429260254
    5. '_line' → logprob: -6.513413429260254
    6. '_' → logprob: -7.638413429260254
    7. ' =' → logprob: -7.888413429260254
    8. '.' → logprob: -8.013413429260254
    9. '('' → logprob: -8.263413429260254
    10. ' ()' → logprob: -8.513413429260254

Token 16: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.00686787161976099
    2. 'sys' → logprob: -5.0068678855896
    3. ' input' → logprob: -9.131867408752441
    4. 'input' → logprob: -10.256867408752441
    5. '	sys' → logprob: -12.506867408752441
    6. '(sys' → logprob: -12.881867408752441
    7. '=sys' → logprob: -12.881867408752441
    8. ' ' → logprob: -14.881867408752441
    9. ' lambda' → logprob: -16.631868362426758
    10. '()' → logprob: -17.631868362426758

Token 17: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.08035130053758621
    2. '.readline' → logprob: -2.5803513526916504
    3. '.' → logprob: -6.83035135269165
    4. '.stdout' → logprob: -8.330350875854492
    5. '.read' → logprob: -9.830350875854492
    6. '.std' → logprob: -10.580350875854492
    7. 'stdin' → logprob: -11.330350875854492
    8. '.argv' → logprob: -11.455350875854492
    9. '.input' → logprob: -11.580350875854492
    10. ' .' → logprob: -12.330350875854492

Token 18: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00013417120499070734
    2. '.read' → logprob: -9.000134468078613
    3. 'read' → logprob: -12.250134468078613
    4. '.' → logprob: -12.250134468078613
    5. '.readlines' → logprob: -14.250134468078613
    6. '.buffer' → logprob: -15.000134468078613
    7. ' readline' → logprob: -16.375133514404297
    8. '.stdin' → logprob: -16.875133514404297
    9. 'buffer' → logprob: -17.000133514404297
    10. '_read' → logprob: -17.250133514404297

Token 19: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0012388024479150772
    2. '()
' → logprob: -6.751238822937012
    3. '().' → logprob: -10.001238822937012
    4. '()\' → logprob: -11.501238822937012
    5. '(' → logprob: -12.626238822937012
    6. '()

' → logprob: -13.001238822937012
    7. ' ()' → logprob: -13.251238822937012
    8. '
' → logprob: -13.626238822937012
    9. '())' → logprob: -13.626238822937012
    10. ')' → logprob: -14.001238822937012

Token 20: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05271332710981369
    2. '()
' → logprob: -3.177713394165039
    3. '   ' → logprob: -5.052713394165039
    4. '()\' → logprob: -6.427713394165039
    5. '()

' → logprob: -7.052713394165039
    6. '():' → logprob: -8.052713394165039
    7. ' ()' → logprob: -9.552713394165039
    8. '(' → logprob: -9.552713394165039
    9. '
' → logprob: -9.677713394165039
    10. '().' → logprob: -9.677713394165039

Token 21: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6327016353607178
    2. 'n' → logprob: -1.1327016353607178
    3. '()' → logprob: -2.1327016353607178
    4. ' n' → logprob: -4.257701873779297
    5. 't' → logprob: -4.632701873779297
    6. ' t' → logprob: -6.882701873779297
    7. '()\' → logprob: -7.007701873779297
    8. '(n' → logprob: -7.757701873779297
    9. '()
' → logprob: -7.882701873779297
    10. '
' → logprob: -8.507701873779297

Token 22: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.006309134885668755
    2. 'True' → logprob: -5.1313090324401855
    3. '(True' → logprob: -7.8813090324401855
    4. ' ' → logprob: -13.006309509277344
    5. '=True' → logprob: -15.506309509277344
    6. ' Tru' → logprob: -16.756309509277344
    7. '  ' → logprob: -16.756309509277344
    8. '1' → logprob: -17.131309509277344
    9. ' not' → logprob: -17.131309509277344
    10. '   ' → logprob: -17.381309509277344

Token 23: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12828786671161652
    2. '():' → logprob: -2.1282877922058105
    3. ' :' → logprob: -7.7532877922058105
    4. '):' → logprob: -8.378288269042969
    5. '(' → logprob: -8.503288269042969
    6. '():
' → logprob: -9.003288269042969
    7. ':**' → logprob: -9.128288269042969
    8. ',' → logprob: -9.628288269042969
    9. ':
' → logprob: -9.878288269042969
    10. '   ' → logprob: -9.878288269042969

Token 24: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.9121929407119751
    2. '   ' → logprob: -0.9121929407119751
    3. '       ' → logprob: -2.0371928215026855
    4. ' ' → logprob: -2.9121928215026855
    5. '(' → logprob: -5.7871928215026855
    6. '  ' → logprob: -5.7871928215026855
    7. '     ' → logprob: -7.0371928215026855
    8. '    
' → logprob: -7.0371928215026855
    9. ':' → logprob: -7.4121928215026855
    10. '      ' → logprob: -7.9121928215026855

Token 25: ' n' (ID: 297)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.045819178223609924
    2. 'line' → logprob: -4.295819282531738
    3. '    ' → logprob: -4.545819282531738
    4. 'data' → logprob: -4.795819282531738
    5. '   ' → logprob: -5.420819282531738
    6. ' ' → logprob: -5.920819282531738
    7. ' data' → logprob: -6.170819282531738
    8. 'n' (adapté à ' n') → logprob: -6.545819282531738
    9. ' n' → logprob: -7.920819282531738
    10. ' s' → logprob: -7.920819282531738

Token 26: ',m' (ID: 26648)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7115366458892822
    2. ' ==' → logprob: -0.8365366458892822
    3. '=' → logprob: -2.9615366458892822
    4. ' >' → logprob: -4.211536407470703
    5. ' ' → logprob: -5.586536407470703
    6. '==' → logprob: -6.336536407470703
    7. '>' → logprob: -6.586536407470703
    8. ' <=' → logprob: -6.586536407470703
    9. ' <' → logprob: -7.711536407470703
    10. ' :=' → logprob: -8.586536407470703

Token 27: ',p' (ID: 14835)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14272361993789673
    2. '=' → logprob: -2.017723560333252
    3. ',' → logprob: -10.76772403717041
    4. ' ' → logprob: -11.64272403717041
    5. ' ==' → logprob: -12.26772403717041
    6. ' ,' → logprob: -12.64272403717041
    7. ')' → logprob: -13.01772403717041
    8. '=int' → logprob: -13.51772403717041
    9. ' >' → logprob: -13.64272403717041
    10. ' =)' → logprob: -13.76772403717041

Token 28: ',a' (ID: 26776)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602274775505066
    2. '=' → logprob: -1.9102275371551514
    3. ' ' → logprob: -12.91022777557373
    4. ',' → logprob: -14.41022777557373
    5. ')' → logprob: -16.410226821899414
    6. '=input' → logprob: -16.535226821899414
    7. '=line' → logprob: -17.160226821899414
    8. '＝' → logprob: -17.535226821899414
    9. ' =(' → logprob: -17.785226821899414
    10. '    ' → logprob: -17.785226821899414

Token 29: ',b' (ID: 17568)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42920103669166565
    2. ' =' → logprob: -1.0542010068893433
    3. ',' → logprob: -8.429201126098633
    4. ',b' → logprob: -8.804201126098633
    5. ' ' → logprob: -9.304201126098633
    6. 'r' → logprob: -11.929201126098633
    7. 'b' → logprob: -12.054201126098633
    8. '=line' → logprob: -12.054201126098633
    9. '=input' → logprob: -12.429201126098633
    10. '=b' → logprob: -13.054201126098633

Token 30: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868754208087921
    2. ' =' → logprob: -1.1368753910064697
    3. '=input' → logprob: -13.26187515258789
    4. ',' → logprob: -13.38687515258789
    5. '=line' → logprob: -14.13687515258789
    6. '=sys' → logprob: -16.13687515258789
    7. ' ' → logprob: -16.38687515258789
    8. '＝' → logprob: -16.63687515258789
    9. '   ' → logprob: -17.63687515258789
    10. '=

' → logprob: -17.63687515258789

Token 31: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.21377652883529663
    2. 'map' → logprob: -1.8387765884399414
    3. ' input' → logprob: -3.7137765884399414
    4. 'input' → logprob: -4.713776588439941
    5. ' list' → logprob: -9.588776588439941
    6. 'list' → logprob: -10.838776588439941
    7. ' ' → logprob: -11.838776588439941
    8. '	map' → logprob: -13.088776588439941
    9. '(map' → logprob: -13.213776588439941
    10. '[' → logprob: -13.713776588439941

Token 32: '(int' (ID: 2742)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 33: ',input' (ID: 123014)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0001791715621948
    2. '(input' → logprob: -1.3751791715621948
    3. ')' → logprob: -1.7501791715621948
    4. '(sys' → logprob: -2.2501792907714844
    5. ',' → logprob: -2.6251792907714844
    6. ',input' → logprob: -3.8751792907714844
    7. ')(' → logprob: -5.625179290771484
    8. 'input' → logprob: -7.750179290771484
    9. '(stdin' → logprob: -7.750179290771484
    10. '<|end|>' → logprob: -8.375179290771484

Token 34: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.900034299585968e-05
    2. '()' → logprob: -9.375088691711426
    3. '())' → logprob: -12.500088691711426
    4. ')' → logprob: -15.250088691711426
    5. '()))' → logprob: -17.000089645385742
    6. ' ().' → logprob: -17.000089645385742
    7. '(' → logprob: -17.375089645385742
    8. '());' → logprob: -17.750089645385742
    9. '()
' → logprob: -18.125089645385742
    10. '();' → logprob: -18.375089645385742

Token 35: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.015650460496544838
    2. 'strip' → logprob: -4.265650272369385
    3. 'rstrip' → logprob: -6.515650272369385
    4. '(split' → logprob: -12.640650749206543
    5. ' split' → logprob: -13.765650749206543
    6. 'read' → logprob: -14.015650749206543
    7. ')' → logprob: -14.765650749206543
    8. 'decode' → logprob: -16.890649795532227
    9. 'plit' → logprob: -17.015649795532227
    10. 'rs' → logprob: -17.265649795532227

Token 36: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4799400866031647
    2. '())' → logprob: -0.9799400568008423
    3. '()' → logprob: -5.229939937591553
    4. '))' → logprob: -7.979939937591553
    5. '(' → logprob: -9.354940414428711
    6. '()))' → logprob: -10.229940414428711
    7. '())
' → logprob: -12.229940414428711
    8. ' ())' → logprob: -12.479940414428711
    9. ' )' → logprob: -12.854940414428711
    10. '('' → logprob: -12.979940414428711

Token 37: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 38: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6281846165657043
    2. ' if' → logprob: -1.6281845569610596
    3. 'if' (adapté à ' if') → logprob: -1.8781845569610596
    4. ' ' → logprob: -3.1281845569610596
    5. '<|end|>' → logprob: -3.1281845569610596
    6. '
' → logprob: -5.003184795379639
    7. '   ' → logprob: -5.128184795379639
    8. '        ' → logprob: -5.378184795379639
    9. '    ' → logprob: -6.253184795379639
    10. '  ' → logprob: -6.378184795379639

Token 39: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.015690593048930168
    2. 'n' → logprob: -4.515690803527832
    3. ' not' → logprob: -5.390690803527832
    4. 'not' → logprob: -9.640690803527832
    5. ' ' → logprob: -12.515690803527832
    6. ' (' → logprob: -13.265690803527832
    7. '(n' → logprob: -13.265690803527832
    8. '	n' → logprob: -14.265690803527832
    9. 'n't' → logprob: -16.515689849853516
    10. ' н' → logprob: -16.515689849853516

Token 40: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.02979203499853611
    2. '==' → logprob: -3.529792070388794
    3. ' <=' → logprob: -10.779791831970215
    4. '=' → logprob: -11.654791831970215
    5. ' <' → logprob: -12.279791831970215
    6. '<=' → logprob: -13.029791831970215
    7. '<' → logprob: -13.279791831970215
    8. ' =' → logprob: -13.404791831970215
    9. ' ' → logprob: -14.279791831970215
    10. ')==' → logprob: -14.779791831970215

Token 41: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08895070850849152
    2. ' ' → logprob: -2.4639506340026855
    3. 'm' → logprob: -11.838951110839844
    4. ' m' → logprob: -14.151451110839844
    5. '-' → logprob: -14.338951110839844
    6. 'p' → logprob: -14.838951110839844
    7. 'b' → logprob: -15.026451110839844
    8. '```' → logprob: -15.338951110839844
    9. '  ' → logprob: -15.463951110839844
    10. '   ' → logprob: -15.588951110839844

Token 42: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.029906921088695526
    2. 'and' → logprob: -3.529906988143921
    3. ' ' → logprob: -9.4049072265625
    4. ':' → logprob: -9.7799072265625
    5. ' or' → logprob: -11.1549072265625
    6. '	and' → logprob: -13.2799072265625
    7. ' a' → logprob: -14.5299072265625
    8. ' ' → logprob: -15.1549072265625
    9. '  ' → logprob: -15.4049072265625
    10. ' :' → logprob: -16.2799072265625

Token 43: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.10020752996206284
    2. 'm' → logprob: -2.350207567214966
    3. ' ' → logprob: -14.350207328796387
    4. '	m' → logprob: -15.600207328796387
    5. ' ' → logprob: -16.975208282470703
    6. ',m' → logprob: -17.350208282470703
    7. '   ' → logprob: -17.600208282470703
    8. '  ' → logprob: -18.350208282470703
    9. '```' → logprob: -18.475208282470703
    10. 'and' → logprob: -18.975208282470703

Token 44: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.000536232371814549
    2. ' ==' → logprob: -7.6255364418029785
    3. '<|end|>' → logprob: -10.12553596496582
    4. '===' → logprob: -12.75053596496582
    5. '=' → logprob: -13.62553596496582
    6. '==
' → logprob: -13.75053596496582
    7. '<|end|>' → logprob: -14.00053596496582
    8. ']==' → logprob: -14.25053596496582
    9. ')==' → logprob: -14.50053596496582
    10. '```' → logprob: -15.37553596496582

Token 45: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. '<|end|>' → logprob: -16.50004005432129
    4. '   ' → logprob: -19.00004005432129
    5. '۰' → logprob: -19.00004005432129
    6. '  ' → logprob: -19.12504005432129
    7. '<|end|>' → logprob: -19.18754005432129
    8. 'and' → logprob: -19.62504005432129
    9. '```' → logprob: -19.75004005432129
    10. ' and' → logprob: -20.37504005432129

Token 46: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.016057245433330536
    2. 'and' → logprob: -4.141057014465332
    3. '	and' → logprob: -11.516057014465332
    4. ' ' → logprob: -11.766057014465332
    5. '<|end|>' → logprob: -13.141057014465332
    6. '<|end|>' → logprob: -13.391057014465332
    7. ':' → logprob: -14.391057014465332
    8. '   ' → logprob: -15.516057014465332
    9. '0' → logprob: -15.641057014465332
    10. ' и' → logprob: -15.641057014465332

Token 47: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.16022585332393646
    2. ' p' → logprob: -1.9102258682250977
    3. ' ' → logprob: -13.910225868225098
    4. ' and' → logprob: -14.660225868225098
    5. '	p' → logprob: -16.53522491455078
    6. 'and' → logprob: -16.53522491455078
    7. '0' → logprob: -16.78522491455078
    8. '&p' → logprob: -16.78522491455078
    9. '<p' → logprob: -17.16022491455078
    10. '   ' → logprob: -17.53522491455078

Token 48: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.001728372066281736
    2. ' ==' → logprob: -6.376728534698486
    3. ' and' → logprob: -11.876728057861328
    4. '=' → logprob: -12.501728057861328
    5. 'and' → logprob: -12.751728057861328
    6. '()==' → logprob: -12.751728057861328
    7. ')==' → logprob: -12.876728057861328
    8. ']==' → logprob: -13.376728057861328
    9. '===' → logprob: -13.626728057861328
    10. '<|end|>' → logprob: -13.626728057861328

Token 49: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. 'and' → logprob: -17.500085830688477
    4. ' and' → logprob: -18.250085830688477
    5. '<|end|>' → logprob: -18.625085830688477
    6. '<|end|>' → logprob: -18.750085830688477
    7. '۰' → logprob: -19.250085830688477
    8. '  ' → logprob: -19.875085830688477
    9. '০' → logprob: -20.375085830688477
    10. '   ' → logprob: -20.562585830688477

Token 50: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.05489751324057579
    2. 'and' → logprob: -2.9298975467681885
    3. '	and' → logprob: -11.80489730834961
    4. ' ' → logprob: -12.42989730834961
    5. '<|end|>' → logprob: -13.80489730834961
    6. ':' → logprob: -13.92989730834961
    7. '<|end|>' → logprob: -14.05489730834961
    8. '```' → logprob: -14.55489730834961
    9. ' и' → logprob: -15.05489730834961
    10. '0' → logprob: -15.92989730834961

Token 51: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3491232991218567
    2. ' a' → logprob: -1.224123239517212
    3. '0' → logprob: -7.849123477935791
    4. ' ' → logprob: -8.349123001098633
    5. '	a' → logprob: -11.099123001098633
    6. ' and' → logprob: -11.349123001098633
    7. '   ' → logprob: -11.599123001098633
    8. 'n' → logprob: -12.724123001098633
    9. '    ' → logprob: -12.724123001098633
    10. '  ' → logprob: -12.849123001098633

Token 52: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.008639981970191002
    2. ' ==' → logprob: -4.758639812469482
    3. ' and' → logprob: -12.00864028930664
    4. '<|end|>' → logprob: -12.25864028930664
    5. 'and' → logprob: -13.00864028930664
    6. '()==' → logprob: -13.13364028930664
    7. ')==' → logprob: -13.25864028930664
    8. '==-' → logprob: -13.38364028930664
    9. '=' → logprob: -13.50864028930664
    10. '==
' → logprob: -13.63364028930664

Token 53: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006814119406044483
    2. ' ' → logprob: -5.631814002990723
    3. 'b' → logprob: -5.756814002990723
    4. ' b' → logprob: -10.006814002990723
    5. '   ' → logprob: -13.881814002990723
    6. '  ' → logprob: -14.944314002990723
    7. ' and' → logprob: -15.006814002990723
    8. 'and' → logprob: -15.381814002990723
    9. 'a' → logprob: -15.506814002990723
    10. '1' → logprob: -15.819314002990723

Token 54: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.016096075996756554
    2. 'and' → logprob: -4.141096115112305
    3. ' ' → logprob: -9.766096115112305
    4. '	and' → logprob: -13.391096115112305
    5. '<|end|>' → logprob: -14.141096115112305
    6. '<|end|>' → logprob: -14.266096115112305
    7. '0' → logprob: -14.516096115112305
    8. ' ' → logprob: -15.016096115112305
    9. '```' → logprob: -15.016096115112305
    10. ' и' → logprob: -16.016096115112305

Token 55: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3133930265903473
    2. ' b' → logprob: -1.313392996788025
    3. ' ' → logprob: -9.688392639160156
    4. '0' → logprob: -9.688392639160156
    5. '   ' → logprob: -12.438392639160156
    6. '	b' → logprob: -13.313392639160156
    7. '  ' → logprob: -13.563392639160156
    8. '    ' → logprob: -15.438392639160156
    9. ' and' → logprob: -17.188392639160156
    10. '_b' → logprob: -17.563392639160156

Token 56: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.005251068156212568
    2. ' ==' → logprob: -5.255250930786133
    3. '()==' → logprob: -11.755250930786133
    4. ')==' → logprob: -12.255250930786133
    5. ']==' → logprob: -13.630250930786133
    6. '=' → logprob: -14.005250930786133
    7. '0' → logprob: -14.005250930786133
    8. '==(' → logprob: -14.255250930786133
    9. '==
' → logprob: -14.630250930786133
    10. '===' → logprob: -15.880250930786133

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '   ' → logprob: -17.25006675720215
    4. '  ' → logprob: -18.25006675720215
    5. '1' → logprob: -18.87506675720215
    6. '```' → logprob: -19.62506675720215
    7. '۰' → logprob: -20.31256675720215
    8. '``' → logprob: -20.50006675720215
    9. '    ' → logprob: -20.93756675720215
    10. '=' → logprob: -21.31256675720215

Token 58: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00015753143816255033
    2. ':
' → logprob: -9.000157356262207
    3. ':return' → logprob: -10.625157356262207
    4. ' :' → logprob: -12.375157356262207
    5. '       ' → logprob: -12.500157356262207
    6. '   ' → logprob: -14.000157356262207
    7. '           ' → logprob: -14.750157356262207
    8. '):' → logprob: -14.875157356262207
    9. '.' → logprob: -17.125158309936523
    10. ' break' → logprob: -17.375158309936523

Token 59: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001989301759749651
    2. '       ' → logprob: -6.251989364624023
    3. ' break' → logprob: -10.126989364624023
    4. '   ' → logprob: -12.001989364624023
    5. '          ' → logprob: -12.876989364624023
    6. '\n' → logprob: -13.001989364624023
    7. '               ' → logprob: -13.001989364624023
    8. '		' → logprob: -13.251989364624023
    9. 'break' → logprob: -13.751989364624023
    10. '	       ' → logprob: -14.126989364624023

Token 60: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.42483362555503845
    2. 'break' (adapté à ' break') → logprob: -1.1748336553573608
    3. '       ' → logprob: -4.04983377456665
    4. '           ' → logprob: -4.17483377456665
    5. 'return' → logprob: -5.67483377456665
    6. ' return' → logprob: -7.29983377456665
    7. '   ' → logprob: -8.674833297729492
    8. '               ' → logprob: -9.424833297729492
    9. '	break' → logprob: -9.549833297729492
    10. '_break' → logprob: -11.924833297729492

Token 61: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09377159178256989
    2. '       ' → logprob: -2.4687716960906982
    3. '        
' → logprob: -5.718771457672119
    4. '<|end|>' → logprob: -8.218771934509277
    5. '' → logprob: -8.468771934509277
    6. 'n' → logprob: -8.718771934509277
    7. '```' → logprob: -8.718771934509277
    8. '
' → logprob: -8.843771934509277
    9. '   ' → logprob: -8.968771934509277
    10. '    
' → logprob: -8.968771934509277

Token 62: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07532943785190582
    2. '       ' → logprob: -3.200329542160034
    3. '        
' → logprob: -3.950329542160034
    4. '<|end|>' → logprob: -4.950329303741455
    5. ' 
' → logprob: -6.575329303741455
    6. '\n' → logprob: -6.825329303741455
    7. '    
' → logprob: -6.950329303741455
    8. '  
' → logprob: -7.450329303741455
    9. '
' → logprob: -7.950329303741455
    10. '<|end|>' → logprob: -8.700329780578613

Token 63: ' horses' (ID: 35928)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.3594076633453369
    2. ' graph' → logprob: -1.734407663345337
    3. 'dist' → logprob: -2.859407663345337
    4. '       ' → logprob: -3.234407663345337
    5. '
' → logprob: -4.859407424926758
    6. ' dist' → logprob: -4.984407424926758
    7. '        
' → logprob: -5.359407424926758
    8. 'distance' → logprob: -6.109407424926758
    9. ' distances' → logprob: -6.234407424926758
    10. ' edges' → logprob: -7.234407424926758

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016203517094254494
    2. '=' → logprob: -4.1412034034729
    3. '_' → logprob: -9.891203880310059
    4. 's' → logprob: -10.891203880310059
    5. '=[]' → logprob: -10.891203880310059
    6. ' ' → logprob: -11.266203880310059
    7. ',' → logprob: -11.391203880310059
    8. '_cost' → logprob: -11.391203880310059
    9. '[' → logprob: -11.641203880310059
    10. '   ' → logprob: -12.141203880310059

Token 65: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.4879257380962372
    2. ' [' → logprob: -1.4879257678985596
    3. '[]' → logprob: -1.9879257678985596
    4. '[' → logprob: -4.2379255294799805
    5. '[list' → logprob: -5.2379255294799805
    6. ' list' → logprob: -6.6129255294799805
    7. 'list' → logprob: -6.8629255294799805
    8. ' [[]' → logprob: -7.2379255294799805
    9. ' [{}' → logprob: -9.36292552947998
    10. '[p' → logprob: -9.73792552947998

Token 66: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000676096766255796
    2. '(map' → logprob: -8.125676155090332
    3. '(int' → logprob: -8.375676155090332
    4. '(range' → logprob: -9.125676155090332
    5. '(
' → logprob: -11.625676155090332
    6. '(input' → logprob: -11.750676155090332
    7. '()' → logprob: -11.875676155090332
    8. '(

' → logprob: -13.125676155090332
    9. '(s' → logprob: -13.625676155090332
    10. '(eval' → logprob: -13.750676155090332

Token 67: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0036741867661476135
    2. '(' → logprob: -5.628674030303955
    3. '[int' → logprob: -10.378674507141113
    4. '=int' → logprob: -11.128674507141113
    5. 'int' → logprob: -11.628674507141113
    6. '<int' → logprob: -11.753674507141113
    7. '(lambda' → logprob: -12.503674507141113
    8. ')' → logprob: -13.003674507141113
    9. ',int' → logprob: -13.503674507141113
    10. ']int' → logprob: -13.503674507141113

Token 68: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.01248999685049057
    2. ',' → logprob: -4.5124897956848145
    3. '(input' → logprob: -6.6374897956848145
    4. '(' → logprob: -9.012490272521973
    5. ' ,' → logprob: -12.637490272521973
    6. ',int' → logprob: -13.012490272521973
    7. ',(' → logprob: -13.387490272521973
    8. 'input' → logprob: -14.512490272521973
    9. '=input' → logprob: -15.387490272521973
    10. ',list' → logprob: -15.637490272521973

Token 69: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.1160349458805285e-05
    2. '()' → logprob: -11.750011444091797
    3. '.readline' → logprob: -13.125011444091797
    4. ' ().' → logprob: -13.875011444091797
    5. '.' → logprob: -16.125011444091797
    6. '.split' → logprob: -16.375011444091797
    7. '(' → logprob: -16.625011444091797
    8. ')' → logprob: -17.250011444091797
    9. '().__' → logprob: -17.875011444091797
    10. '())' → logprob: -18.625011444091797

Token 70: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.5451681974809617e-05
    2. 'strip' → logprob: -11.500015258789062
    3. 'rstrip' → logprob: -12.750015258789062
    4. 'read' → logprob: -13.250015258789062
    5. 'spl' → logprob: -15.375015258789062
    6. ' split' → logprob: -15.375015258789062
    7. '(split' → logprob: -16.750015258789062
    8. 's' → logprob: -18.750015258789062
    9. 'plit' → logprob: -19.375015258789062
    10. '_split' → logprob: -19.625015258789062

Token 71: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.03823518753051758
    2. '))' → logprob: -3.6632351875305176
    3. '())' → logprob: -4.913235187530518
    4. '()' → logprob: -5.538235187530518
    5. ')' → logprob: -7.913235187530518
    6. '(' → logprob: -8.91323471069336
    7. '()));' → logprob: -10.03823471069336
    8. '()))
' → logprob: -11.03823471069336
    9. '(),' → logprob: -12.78823471069336
    10. '().' → logprob: -12.78823471069336

Token 72: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17696906626224518
    2. '        
' → logprob: -2.301969051361084
    3. 'graph' → logprob: -3.801969051361084
    4. 'dist' → logprob: -4.426969051361084
    5. ' 
' → logprob: -5.426969051361084
    6. ' distances' → logprob: -5.426969051361084
    7. 'distance' → logprob: -5.551969051361084
    8. ' graph' → logprob: -5.926969051361084
    9. '        ' → logprob: -6.426969051361084
    10. '[' → logprob: -6.926969051361084

Token 73: ' adj' (ID: 20251)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.34300655126571655
    2. 'dist' → logprob: -1.8430066108703613
    3. 'adj' (adapté à ' adj') → logprob: -2.9680066108703613
    4. 'edges' → logprob: -3.5930066108703613
    5. ' graph' → logprob: -3.9680066108703613
    6. '       ' → logprob: -3.9680066108703613
    7. 'g' → logprob: -5.468006610870361
    8. 'dp' → logprob: -6.343006610870361
    9. 'times' → logprob: -6.718006610870361
    10. ' edges' → logprob: -6.968006610870361

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026603901758790016
    2. '=' → logprob: -3.651603937149048
    3. '[' → logprob: -8.401603698730469
    4. '=[]' → logprob: -9.776603698730469
    5. ' ' → logprob: -12.276603698730469
    6. ' =[' → logprob: -12.526603698730469
    7. '[]' → logprob: -12.651603698730469
    8. '=[' → logprob: -13.026603698730469
    9. 'acency' → logprob: -13.651603698730469
    10. 's' → logprob: -13.901603698730469

Token 75: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.127180278301239
    2. ' [[]' → logprob: -2.127180337905884
    3. '{' → logprob: -8.627180099487305
    4. ' [' → logprob: -10.127180099487305
    5. '{}' → logprob: -11.127180099487305
    6. 'default' → logprob: -11.502180099487305
    7. '[]' → logprob: -12.502180099487305
    8. '   ' → logprob: -13.002180099487305
    9. ' [{}' → logprob: -14.502180099487305
    10. ' {' → logprob: -14.752180099487305

Token 76: ' for' (ID: 395)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.052284400910139084
    2. '(' → logprob: -4.052284240722656
    3. 'for' → logprob: -4.052284240722656
    4. ' for' → logprob: -4.177284240722656
    5. '(m' → logprob: -7.802284240722656
    6. ' (' → logprob: -8.177284240722656
    7. ')' → logprob: -9.802284240722656
    8. ']' → logprob: -10.052284240722656
    9. ',' → logprob: -11.927284240722656
    10. '       ' → logprob: -12.052284240722656

Token 77: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.8575636148452759
    2. ' _' → logprob: -1.3575636148452759
    3. '_' → logprob: -1.6075636148452759
    4. '(range' → logprob: -3.2325634956359863
    5. 'range' → logprob: -3.4825634956359863
    6. ' in' → logprob: -3.6075634956359863
    7. '(' → logprob: -4.357563495635986
    8. ' i' → logprob: -5.732563495635986
    9. ' ' → logprob: -5.857563495635986
    10. '(_' → logprob: -7.607563495635986

Token 78: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7081987261772156
    2. ' in' → logprob: -0.7081987261772156
    3. 'range' → logprob: -4.208198547363281
    4. ' range' → logprob: -9.708198547363281
    5. ' ' → logprob: -13.083198547363281
    6. '(range' → logprob: -13.833198547363281
    7. 'i' → logprob: -14.583198547363281
    8. 'n' → logprob: -14.833198547363281
    9. 'x' → logprob: -15.583198547363281
    10. '0' → logprob: -15.958198547363281

Token 79: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006717386189848185
    2. ' range' → logprob: -5.006717205047607
    3. '(range' → logprob: -13.756717681884766
    4. ' ' → logprob: -15.131717681884766
    5. '   ' → logprob: -15.506717681884766
    6. '	range' → logprob: -15.506717681884766
    7. '  ' → logprob: -16.381717681884766
    8. 'r' → logprob: -16.381717681884766
    9. 'rang' → logprob: -16.756717681884766
    10. '```' → logprob: -17.131717681884766

Token 80: '(m' (ID: 2145)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.1689596148207784e-05
    2. '(' → logprob: -9.875051498413086
    3. ' (' → logprob: -16.250051498413086
    4. '((' → logprob: -16.625051498413086
    5. '(N' → logprob: -16.875051498413086
    6. '(m' → logprob: -17.500051498413086
    7. 'n' → logprob: -19.250051498413086
    8. '(a' → logprob: -19.250051498413086
    9. '(
' → logprob: -20.375051498413086
    10. '(s' → logprob: -20.375051498413086

Token 81: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00023071514442563057
    2. ' )' → logprob: -8.50023078918457
    3. '+' → logprob: -11.25023078918457
    4. ')' → logprob: -11.37523078918457
    5. ']' → logprob: -14.62523078918457
    6. ' ]' → logprob: -14.87523078918457
    7. '       ' → logprob: -14.87523078918457
    8. ')])' → logprob: -14.87523078918457
    9. '')]' → logprob: -15.37523078918457
    10. ' ' → logprob: -15.50023078918457

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011715330183506012
    2. ' ' → logprob: -6.751171588897705
    3. '2' → logprob: -14.376171112060547
    4. 'm' → logprob: -15.376171112060547
    5. 'n' → logprob: -16.626171112060547
    6. ' m' → logprob: -16.751171112060547
    7. '7' → logprob: -16.876171112060547
    8. '   ' → logprob: -16.876171112060547
    9. '0' → logprob: -16.876171112060547
    10. ')' → logprob: -17.251171112060547

Token 83: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00011212585377506912
    2. ')' → logprob: -9.375112533569336
    3. ']' → logprob: -10.750112533569336
    4. ' )' → logprob: -12.625112533569336
    5. ')]
' → logprob: -14.125112533569336
    6. '])' → logprob: -14.875112533569336
    7. ')]

' → logprob: -15.000112533569336
    8. ' ]' → logprob: -15.375112533569336
    9. ')])' → logprob: -15.375112533569336
    10. ')]
' → logprob: -16.125112533569336

Token 84: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17003116011619568
    2. ' for' → logprob: -2.5450310707092285
    3. 'for' → logprob: -2.7950310707092285
    4. '<|end|>' → logprob: -4.4200310707092285
    5. '	for' → logprob: -5.9200310707092285
    6. '   ' → logprob: -6.7950310707092285
    7. '<|end|>' → logprob: -8.420031547546387
    8. '	' → logprob: -8.420031547546387
    9. ' ' → logprob: -8.795031547546387
    10. '	   ' → logprob: -9.045031547546387

Token 85: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4748459756374359
    2. ' for' → logprob: -0.9748460054397583
    3. '       ' → logprob: -7.224845886230469
    4. '	for' → logprob: -10.599845886230469
    5. '   ' → logprob: -11.349845886230469
    6. '<|end|>' → logprob: -13.474845886230469
    7. '```' → logprob: -13.849845886230469
    8. ' ' → logprob: -14.724845886230469
    9. '        
' → logprob: -15.974845886230469
    10. ' 
' → logprob: -16.22484588623047

Token 86: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -9.233804303221405e-05
    2. '_' → logprob: -9.375092506408691
    3. ' ' → logprob: -12.625092506408691
    4. ' range' → logprob: -12.625092506408691
    5. ' i' → logprob: -14.500092506408691
    6. ' in' → logprob: -15.375092506408691
    7. ' __' → logprob: -16.000091552734375
    8. ' ' → logprob: -17.625091552734375
    9. ' ___' → logprob: -18.125091552734375
    10. '_range' → logprob: -18.250091552734375

Token 87: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05185019597411156
    2. 'in' → logprob: -3.0518500804901123
    3. 'n' → logprob: -6.301850318908691
    4. ' ' → logprob: -7.551850318908691
    5. 'range' → logprob: -7.926850318908691
    6. '_' → logprob: -8.551850318908691
    7. ' _' → logprob: -8.676850318908691
    8. 'i' → logprob: -9.801850318908691
    9. ' i' → logprob: -10.176850318908691
    10. 'm' → logprob: -11.301850318908691

Token 88: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06197362765669823
    2. 'range' → logprob: -2.8119735717773438
    3. '(range' → logprob: -13.061973571777344
    4. '	range' → logprob: -13.061973571777344
    5. ' ' → logprob: -14.436973571777344
    6. ' xrange' → logprob: -15.311973571777344
    7. 'ange' → logprob: -15.436973571777344
    8. '_range' → logprob: -15.686973571777344
    9. '```' → logprob: -15.686973571777344
    10. 'Range' → logprob: -15.811973571777344

Token 89: '(p' (ID: 2407)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.025229711085557938
    2. ' m' → logprob: -4.2752299308776855
    3. 'm' → logprob: -5.2752299308776855
    4. ' (' → logprob: -5.5252299308776855
    5. '(' → logprob: -6.2752299308776855
    6. '	m' → logprob: -10.900229454040527
    7. ' ' → logprob: -13.775229454040527
    8. '   ' → logprob: -15.025229454040527
    9. ')m' → logprob: -15.150229454040527
    10. '(M' → logprob: -15.400229454040527

Token 90: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0034568102564662695
    2. ' ):' → logprob: -5.7534565925598145
    3. ':' → logprob: -8.878457069396973
    4. ')' → logprob: -9.253457069396973
    5. '):
' → logprob: -10.878457069396973
    6. ',' → logprob: -11.503457069396973
    7. ' )' → logprob: -12.253457069396973
    8. '():' → logprob: -13.378457069396973
    9. '   ' → logprob: -13.628457069396973
    10. ' ' → logprob: -13.753457069396973

Token 91: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09228220582008362
    2. '       ' → logprob: -3.092282295227051
    3. '   ' → logprob: -3.967282295227051
    4. '  ' → logprob: -4.842282295227051
    5. '    ' → logprob: -5.217282295227051
    6. '<|end|>' → logprob: -5.967282295227051
    7. ' 
' → logprob: -6.217282295227051
    8. '        ' → logprob: -6.842282295227051
    9. '           ' → logprob: -7.092282295227051
    10. ' ,' → logprob: -7.217282295227051

Token 92: ' x' (ID: 1215)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.5549411773681641
    2. 'u' → logprob: -0.9299411773681641
    3. '   ' → logprob: -3.929941177368164
    4. ' line' → logprob: -4.929941177368164
    5. '    ' → logprob: -6.804941177368164
    6. 'line' → logprob: -7.054941177368164
    7. '       ' → logprob: -7.304941177368164
    8. '	u' → logprob: -7.679941177368164
    9. ' ' → logprob: -8.179941177368164
    10. '           ' → logprob: -8.429941177368164

Token 93: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03272765874862671
    2. ' ,' → logprob: -3.5327277183532715
    3. ',y' → logprob: -5.9077277183532715
    4. ' ' → logprob: -9.407727241516113
    5. '<|end|>' → logprob: -10.282727241516113
    6. ',x' → logprob: -10.407727241516113
    7. ',p' → logprob: -10.782727241516113
    8. ',input' → logprob: -11.282727241516113
    9. ' y' → logprob: -11.407727241516113
    10. ',n' → logprob: -12.032727241516113

Token 94: ',z' (ID: 54920)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11943782866001129
    2. ',w' → logprob: -2.3694379329681396
    3. ' ,' → logprob: -4.4944376945495605
    4. ',c' → logprob: -5.9944376945495605
    5. ',d' → logprob: -6.7444376945495605
    6. ',v' → logprob: -6.8694376945495605
    7. ',k' → logprob: -7.9944376945495605
    8. ',z' → logprob: -7.9944376945495605
    9. ',x' → logprob: -8.119438171386719
    10. ',p' → logprob: -8.244438171386719

Token 95: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04302190989255905
    2. '=' → logprob: -3.1680219173431396
    3. ' ' → logprob: -11.043022155761719
    4. ',' → logprob: -12.043022155761719
    5. '=input' → logprob: -15.668022155761719
    6. ' ,' → logprob: -15.668022155761719
    7. '  ' → logprob: -16.16802215576172
    8. '=int' → logprob: -16.29302215576172
    9. '   ' → logprob: -16.41802215576172
    10. ' =
' → logprob: -17.04302215576172

Token 96: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.008616461418569088
    2. 'map' → logprob: -4.7586164474487305
    3. '	map' → logprob: -13.63361644744873
    4. ' ' → logprob: -14.63361644744873
    5. ' ' → logprob: -16.383617401123047
    6. '(map' → logprob: -17.008617401123047
    7. '  ' → logprob: -17.133617401123047
    8. '   ' → logprob: -17.883617401123047
    9. ' list' → logprob: -18.008617401123047
    10. '```' → logprob: -18.508617401123047

Token 97: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.018199341371655464
    2. '(' → logprob: -4.018199443817139
    3. '<int' → logprob: -10.89319896697998
    4. '<|end|>' → logprob: -11.14319896697998
    5. '[int' → logprob: -13.01819896697998
    6. ' (' → logprob: -13.14319896697998
    7. '(lambda' → logprob: -13.39319896697998
    8. '("("' → logprob: -13.64319896697998
    9. ']int' → logprob: -13.76819896697998
    10. '=int' → logprob: -13.76819896697998

Token 98: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.0005885370774194598
    2. ',' → logprob: -7.500588417053223
    3. ',int' → logprob: -10.500588417053223
    4. '(input' → logprob: -12.250588417053223
    5. ' ,' → logprob: -13.000588417053223
    6. '(' → logprob: -14.875588417053223
    7. '=input' → logprob: -16.12558937072754
    8. '<input' → logprob: -16.12558937072754
    9. '(),' → logprob: -16.62558937072754
    10. ',(' → logprob: -16.75058937072754

Token 99: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.4060561776859686e-05
    2. '.readline' → logprob: -10.250043869018555
    3. '.' → logprob: -12.375043869018555
    4. '.split' → logprob: -13.375043869018555
    5. ').' → logprob: -13.625043869018555
    6. '()' → logprob: -13.875043869018555
    7. ' ().' → logprob: -14.625043869018555
    8. '()).' → logprob: -15.875043869018555
    9. '>().' → logprob: -16.875043869018555
    10. ' .' → logprob: -17.750043869018555

Token 100: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.896309739408025e-07
    2. 'plit' → logprob: -15.250000953674316
    3. 'spl' → logprob: -15.250000953674316
    4. 'strip' → logprob: -15.875000953674316
    5. '(split' → logprob: -16.625
    6. ' split' → logprob: -16.875
    7. 'rstrip' → logprob: -17.375
    8. 'read' → logprob: -17.5
    9. ')' → logprob: -18.625
    10. 's' → logprob: -18.625

Token 101: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04582521691918373
    2. '())' → logprob: -3.420825242996216
    3. '()' → logprob: -4.420825004577637
    4. '))' → logprob: -10.420825004577637
    5. ')
' → logprob: -10.545825004577637
    6. '())
' → logprob: -11.920825004577637
    7. '(' → logprob: -12.170825004577637
    8. ' )' → logprob: -12.420825004577637
    9. '()
' → logprob: -13.670825004577637
    10. '()))' → logprob: -13.920825004577637

Token 102: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6887852549552917
    2. '       ' → logprob: -0.8137852549552917
    3. '<|end|>' → logprob: -4.063785076141357
    4. '   ' → logprob: -4.813785076141357
    5. '           ' → logprob: -4.938785076141357
    6. '
' → logprob: -5.438785076141357
    7. '    
' → logprob: -5.438785076141357
    8. ' 
' → logprob: -5.563785076141357
    9. '        
' → logprob: -6.063785076141357
    10. '  
' → logprob: -6.313785076141357

Token 103: ' adj' (ID: 20251)
  Prédit: ' adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.4867553114891052
    2. 'adj' (adapté à ' adj') → logprob: -0.9867553114891052
    3. '           ' → logprob: -4.61175537109375
    4. '
' → logprob: -6.61175537109375
    5. '       ' → logprob: -7.23675537109375
    6. '   ' → logprob: -8.23675537109375
    7. '<|end|>' → logprob: -9.23675537109375
    8. '```' → logprob: -9.98675537109375
    9. ' if' → logprob: -10.23675537109375
    10. ' adjacency' → logprob: -10.48675537109375

Token 104: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.843177233240567e-05
    2. '[' → logprob: -11.000018119812012
    3. ' [' → logprob: -13.750018119812012
    4. '[y' → logprob: -15.250018119812012
    5. '```' → logprob: -15.750018119812012
    6. '[z' → logprob: -16.375019073486328
    7. '[int' → logprob: -17.500019073486328
    8. '[a' → logprob: -17.750019073486328
    9. '   ' → logprob: -18.125019073486328
    10. ' ' → logprob: -18.250019073486328

Token 105: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0018936526030302048
    2. ').' → logprob: -6.501893520355225
    3. ']' → logprob: -8.626893997192383
    4. '.' → logprob: -9.626893997192383
    5. '.append' → logprob: -9.626893997192383
    6. '[' → logprob: -9.751893997192383
    7. ' ].' → logprob: -11.751893997192383
    8. '][' → logprob: -12.001893997192383
    9. ')' → logprob: -12.126893997192383
    10. '   ' → logprob: -14.251893997192383

Token 106: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -6.704273118884885e-07
    2. ' append' → logprob: -14.750000953674316
    3. '.append' → logprob: -15.625000953674316
    4. 'app' → logprob: -16.75
    5. 'appen' → logprob: -16.875
    6. '_append' → logprob: -17.5
    7. 'push' → logprob: -18.25
    8. 'Append' → logprob: -18.625
    9. '	append' → logprob: -19.375
    10. ' ' → logprob: -21.0

Token 107: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0067170290276408195
    2. '(' → logprob: -5.006717205047607
    3. '(y' → logprob: -14.00671672821045
    4. '([' → logprob: -14.63171672821045
    5. '(
' → logprob: -16.006717681884766
    6. ' (' → logprob: -16.131717681884766
    7. ' ((' → logprob: -16.256717681884766
    8. '(('' → logprob: -17.006717681884766
    9. '<|end|>' → logprob: -17.881717681884766
    10. '(x' → logprob: -17.881717681884766

Token 108: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0017061287071555853
    2. ' y' → logprob: -6.376706123352051
    3. ')y' → logprob: -13.50170612335205
    4. ',y' → logprob: -14.00170612335205
    5. '	y' → logprob: -14.37670612335205
    6. '<|end|>' → logprob: -14.50170612335205
    7. ''y' → logprob: -15.50170612335205
    8. '(y' → logprob: -15.50170612335205
    9. ' ' → logprob: -16.376707077026367
    10. ')' → logprob: -17.251707077026367

Token 109: ',z' (ID: 54920)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16757534444332123
    2. ',z' → logprob: -1.9175753593444824
    3. ' ,' → logprob: -4.917575359344482
    4. ',y' → logprob: -13.542574882507324
    5. ',n' → logprob: -14.292574882507324
    6. ',b' → logprob: -14.417574882507324
    7. ',x' → logprob: -14.667574882507324
    8. ',w' → logprob: -14.917574882507324
    9. ',q' → logprob: -14.917574882507324
    10. ',j' → logprob: -15.167574882507324

Token 110: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0008866838761605322
    2. ' ))' → logprob: -7.500886917114258
    3. ')' → logprob: -8.125886917114258
    4. '))
' → logprob: -10.625886917114258
    5. ',' → logprob: -12.000886917114258
    6. ' ' → logprob: -12.750886917114258
    7. ')))' → logprob: -13.250886917114258
    8. ' )' → logprob: -13.625886917114258
    9. '));' → logprob: -14.750886917114258
    10. '),' → logprob: -14.875886917114258

Token 111: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7509985566139221
    2. '<|end|>' → logprob: -0.7509985566139221
    3. '       ' → logprob: -3.8759984970092773
    4. '        ' → logprob: -4.500998497009277
    5. '<|end|>' → logprob: -5.000998497009277
    6. '    ' → logprob: -5.875998497009277
    7. '          ' → logprob: -6.000998497009277
    8. '            ' → logprob: -6.250998497009277
    9. ' ' → logprob: -6.625998497009277
    10. '
' → logprob: -6.750998497009277

Token 112: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' (adapté à ' adj') → logprob: -0.47422465682029724
    2. ' adj' → logprob: -0.9742246866226196
    3. '           ' → logprob: -8.849225044250488
    4. 'ad' → logprob: -13.724225044250488
    5. '(adj' → logprob: -13.724225044250488
    6. '       ' → logprob: -13.974225044250488
    7. '   ' → logprob: -15.474225044250488
    8. '<|end|>' → logprob: -15.599225044250488
    9. 'Adj' → logprob: -15.724225044250488
    10. ' ' → logprob: -16.099224090576172

Token 113: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -8.673547563375905e-05
    2. '[x' → logprob: -9.750086784362793
    3. '[' → logprob: -10.500086784362793
    4. '[u' → logprob: -15.500086784362793
    5. '```' → logprob: -15.625086784362793
    6. 'y' → logprob: -15.875086784362793
    7. '[a' → logprob: -16.125085830688477
    8. '[z' → logprob: -16.250085830688477
    9. '[s' → logprob: -17.250085830688477
    10. '[j' → logprob: -17.375085830688477

Token 114: '].' (ID: 1651)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.733600378036499
    2. '].' → logprob: -0.733600378036499
    3. '.' → logprob: -3.483600378036499
    4. '.append' → logprob: -4.858600616455078
    5. ')].' → logprob: -7.983600616455078
    6. '           ' → logprob: -8.358600616455078
    7. ')' → logprob: -8.358600616455078
    8. ' .' → logprob: -9.608600616455078
    9. ' ].' → logprob: -9.733600616455078
    10. ']' → logprob: -10.108600616455078

Token 115: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -7.896309739408025e-07
    2. '.append' → logprob: -14.875000953674316
    3. ' append' → logprob: -15.000000953674316
    4. 'appen' → logprob: -16.75
    5. '	append' → logprob: -16.875
    6. 'app' → logprob: -18.25
    7. 'adj' → logprob: -18.75
    8. '```' → logprob: -19.875
    9. '_append' → logprob: -20.25
    10. 'prepend' → logprob: -20.375

Token 116: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -3.1782583391759545e-05
    2. '(' → logprob: -10.625031471252441
    3. ' ((' → logprob: -12.375031471252441
    4. ' (' → logprob: -13.250031471252441
    5. '(x' → logprob: -14.000031471252441
    6. '(y' → logprob: -15.250031471252441
    7. ' ' → logprob: -16.000032424926758
    8. ')((' → logprob: -16.250032424926758
    9. '>((' → logprob: -17.375032424926758
    10. '(
' → logprob: -17.750032424926758

Token 117: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06418775767087936
    2. '(x' → logprob: -2.81418776512146
    3. ',x' → logprob: -6.939187526702881
    4. ' x' → logprob: -6.939187526702881
    5. ' (' → logprob: -8.439188003540039
    6. ',' → logprob: -9.939188003540039
    7. '	x' → logprob: -12.939188003540039
    8. '(' → logprob: -13.064188003540039
    9. '{x' → logprob: -13.064188003540039
    10. ')x' → logprob: -13.314188003540039

Token 118: ',z' (ID: 54920)
  Prédit: ',z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',z' → logprob: -0.3133297562599182
    2. ',' → logprob: -1.3133296966552734
    3. ' ,' → logprob: -9.688329696655273
    4. ',y' → logprob: -13.063329696655273
    5. ',n' → logprob: -14.313329696655273
    6. ',
' → logprob: -14.688329696655273
    7. ',

' → logprob: -14.938329696655273
    8. ',)' → logprob: -15.438329696655273
    9. ',Z' → logprob: -15.563329696655273
    10. ',v' → logprob: -15.688329696655273

Token 119: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0002084277366520837
    2. ')' → logprob: -8.625208854675293
    3. '))
' → logprob: -10.750208854675293
    4. ' ))' → logprob: -11.875208854675293
    5. ')))' → logprob: -15.875208854675293
    6. '))

' → logprob: -16.875207901000977
    7. ' )' → logprob: -16.875207901000977
    8. '       ' → logprob: -17.375207901000977
    9. '));' → logprob: -17.500207901000977
    10. '   ' → logprob: -17.750207901000977

Token 120: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.013260462321341038
    2. '        
' → logprob: -5.388260364532471
    3. '       ' → logprob: -5.513260364532471
    4. '    
' → logprob: -6.388260364532471
    5. '<|end|>' → logprob: -6.888260364532471
    6. '

' → logprob: -7.388260364532471
    7. '   ' → logprob: -7.388260364532471
    8. '  
' → logprob: -8.638260841369629
    9. '```' → logprob: -9.263260841369629
    10. '
' → logprob: -9.388260841369629

Token 121: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0601256862282753
    2. 'def' → logprob: -3.9351255893707275
    3. 'dp' → logprob: -4.310125827789307
    4. ' dist' → logprob: -4.310125827789307
    5. '
' → logprob: -6.185125827789307
    6. 'distance' → logprob: -6.560125827789307
    7. '       ' → logprob: -7.060125827789307
    8. 'import' → logprob: -7.060125827789307
    9. '   ' → logprob: -7.060125827789307
    10. '        
' → logprob: -7.185125827789307

Token 122: ' state' (ID: 2608)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3684788942337036
    2. 'def' → logprob: -1.6184788942337036
    3. ' dist' → logprob: -3.243478775024414
    4. 'dp' → logprob: -3.618478775024414
    5. 'distance' → logprob: -4.868478775024414
    6. ' def' → logprob: -4.993478775024414
    7. 'import' → logprob: -5.243478775024414
    8. '#' → logprob: -5.243478775024414
    9. 'for' → logprob: -5.493478775024414
    10. 'd' → logprob: -5.993478775024414

Token 123: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39661335945129395
    2. 's' → logprob: -1.146613359451294
    3. '_' → logprob: -6.271613121032715
    4. ' ' → logprob: -6.271613121032715
    5. '=' → logprob: -6.521613121032715
    6. '_space' → logprob: -6.646613121032715
    7. ':' → logprob: -6.896613121032715
    8. ',' → logprob: -8.021613121032715
    9. ')' → logprob: -8.146613121032715
    10. 'space' → logprob: -8.271613121032715

Token 124: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.21877923607826233
    2. '(n' → logprob: -2.2187793254852295
    3. '(' → logprob: -2.7187793254852295
    4. '(node' → logprob: -5.09377908706665
    5. '(h' → logprob: -5.21877908706665
    6. '(heap' → logprob: -5.84377908706665
    7. '(queue' → logprob: -7.34377908706665
    8. '(p' → logprob: -7.34377908706665
    9. '(priority' → logprob: -7.46877908706665
    10. '(a' → logprob: -7.71877908706665

Token 125: 'cost' (ID: 33457)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -1.2835299968719482
    2. 'horse' → logprob: -1.2835299968719482
    3. 'current' → logprob: -1.7835299968719482
    4. 'cost' → logprob: -2.0335299968719482
    5. 'time' → logprob: -2.9085299968719482
    6. ' current' → logprob: -3.9085299968719482
    7. ' horse' → logprob: -4.658530235290527
    8. 'dist' → logprob: -4.783530235290527
    9. ' distance' → logprob: -4.908530235290527
    10. 'curr' → logprob: -5.033530235290527

Token 126: ',time' (ID: 125988)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00228894897736609
    2. ')' → logprob: -6.877288818359375
    3. ' ,' → logprob: -7.127288818359375
    4. ',n' → logprob: -9.502288818359375
    5. ',time' → logprob: -9.627288818359375
    6. ',)' → logprob: -10.002288818359375
    7. ',current' → logprob: -10.252288818359375
    8. ',state' → logprob: -10.377288818359375
    9. '=' → logprob: -10.502288818359375
    10. ',next' → logprob: -11.002288818359375

Token 127: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3215567469596863
    2. ')' → logprob: -1.321556806564331
    3. ',time' → logprob: -5.696556568145752
    4. ',state' → logprob: -6.071556568145752
    5. ',c' → logprob: -6.571556568145752
    6. ',d' → logprob: -8.82155704498291
    7. ',current' → logprob: -9.07155704498291
    8. ',int' → logprob: -9.19655704498291
    9. ',)' → logprob: -9.32155704498291
    10. ',user' → logprob: -9.57155704498291

Token 128: '       ' (ID: 309)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.3214631080627441
    2. '
' → logprob: -1.5714631080627441
    3. '   ' → logprob: -2.071463108062744
    4. ',' → logprob: -2.196463108062744
    5. ' ' → logprob: -2.446463108062744
    6. ')' → logprob: -2.696463108062744
    7. ' ,' → logprob: -3.196463108062744
    8. '       ' → logprob: -3.946463108062744
    9. ' )' → logprob: -4.071463108062744
    10. '    ' → logprob: -4.321463108062744

Token 129: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2250269055366516
    2. 'dp' → logprob: -2.100026845932007
    3. '   ' → logprob: -3.225026845932007
    4. 'import' → logprob: -4.225027084350586
    5. 'def' → logprob: -4.600027084350586
    6. ' dist' → logprob: -5.225027084350586
    7. 'distance' → logprob: -6.100027084350586
    8. ' dp' → logprob: -6.225027084350586
    9. 'for' → logprob: -6.975027084350586
    10. 'heap' → logprob: -7.475027084350586

Token 130: ' pos' (ID: 1253)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3296520411968231
    2. 'import' → logprob: -2.4546520709991455
    3. ' dist' → logprob: -2.5796520709991455
    4. 'dp' → logprob: -2.9546520709991455
    5. 'def' → logprob: -3.8296520709991455
    6. ' import' → logprob: -4.579651832580566
    7. 'for' → logprob: -5.204651832580566
    8. 'from' → logprob: -5.454651832580566
    9. 'heap' → logprob: -5.579651832580566
    10. 'pq' → logprob: -5.954651832580566

Token 131: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5899720788002014
    2. ',' → logprob: -0.9649720788002014
    3. '=' → logprob: -3.0899720191955566
    4. ')' → logprob: -4.339972019195557
    5. ' ,' → logprob: -5.964972019195557
    6. ':' → logprob: -6.464972019195557
    7. ' ' → logprob: -7.464972019195557
    8. '):' → logprob: -7.464972019195557
    9. '  ' → logprob: -8.964972496032715
    10. '   ' → logprob: -8.964972496032715

Token 132: ' current' (ID: 2208)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1283633708953857
    2. '0' → logprob: -1.2533633708953857
    3. ' n' → logprob: -1.7533633708953857
    4. 'n' → logprob: -2.6283633708953857
    5. ')' → logprob: -3.5033633708953857
    6. '<|end|>' → logprob: -3.5033633708953857
    7. ',' → logprob: -3.8783633708953857
    8. 'a' → logprob: -5.253363609313965
    9. ' horses' → logprob: -5.253363609313965
    10. ' a' → logprob: -5.503363609313965

Token 133: ' city' (ID: 5030)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13665080070495605
    2. ' _' → logprob: -3.136650800704956
    3. '_position' → logprob: -3.886650800704956
    4. ' =' → logprob: -4.011651039123535
    5. ' ' → logprob: -4.511651039123535
    6. ' ,' → logprob: -4.886651039123535
    7. ',' → logprob: -5.011651039123535
    8. '_pos' → logprob: -5.761651039123535
    9. '_location' → logprob: -5.886651039123535
    10. '=' → logprob: -6.011651039123535

Token 134: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3440794050693512
    2. 'def' → logprob: -2.8440794944763184
    3. '   ' → logprob: -2.9690794944763184
    4. ',' → logprob: -2.9690794944763184
    5. ')' → logprob: -3.5940794944763184
    6. ' ' → logprob: -3.9690794944763184
    7. ' 
' → logprob: -4.219079494476318
    8. '    ' → logprob: -4.594079494476318
    9. '       ' → logprob: -4.594079494476318
    10. 'import' → logprob: -4.594079494476318

Token 135: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42328494787216187
    2. '
' → logprob: -2.1732850074768066
    3. '   ' → logprob: -2.1732850074768066
    4. ',' → logprob: -3.6732850074768066
    5. 'def' → logprob: -4.298285007476807
    6. 'distance' → logprob: -4.423285007476807
    7. 'dist' → logprob: -4.673285007476807
    8. ' ,' → logprob: -4.798285007476807
    9. '    ' → logprob: -4.923285007476807
    10. '        
' → logprob: -5.048285007476807

Token 136: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.887641429901123
    2. '   ' → logprob: -1.512641429901123
    3. ' dist' → logprob: -2.512641429901123
    4. '       ' → logprob: -2.762641429901123
    5. '
' → logprob: -3.012641429901123
    6. 'distance' → logprob: -3.262641429901123
    7. 'dp' → logprob: -3.512641429901123
    8. 'def' → logprob: -3.637641429901123
    9. ' dp' → logprob: -3.887641429901123
    10. 'import' → logprob: -4.137641429901123

Token 137: ' used' (ID: 2061)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8608357310295105
    2. 'dist' → logprob: -1.8608357906341553
    3. 'import' → logprob: -2.3608357906341553
    4. ' dist' → logprob: -2.4858357906341553
    5. 'time' → logprob: -2.9858357906341553
    6. 'def' → logprob: -3.4858357906341553
    7. 'max' → logprob: -4.235835552215576
    8. ' dp' → logprob: -4.235835552215576
    9. 'speed' → logprob: -4.235835552215576
    10. 'visited' → logprob: -4.235835552215576

Token 138: ':' (ID: 25)
  Prédit: '_h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.6620909571647644
    2. '_' → logprob: -1.4120910167694092
    3. '<|end|>' → logprob: -2.412091016769409
    4. ' =' → logprob: -2.787091016769409
    5. '=' → logprob: -2.787091016769409
    6. '_tokens' → logprob: -5.66209077835083
    7. '_s' → logprob: -5.66209077835083
    8. '_time' → logprob: -5.91209077835083
    9. '=[]' → logprob: -6.16209077835083
    10. '_times' → logprob: -6.66209077835083

Token 139: ' bit' (ID: 3546)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.36324959993362427
    2. 'set' → logprob: -2.1132495403289795
    3. '[' → logprob: -2.8632495403289795
    4. 'False' → logprob: -3.3632495403289795
    5. 'p' → logprob: -4.113249778747559
    6. ' set' → logprob: -4.238249778747559
    7. ' [' → logprob: -4.613249778747559
    8. '[]' → logprob: -4.738249778747559
    9. ' ' → logprob: -5.113249778747559
    10. 'b' → logprob: -5.238249778747559

Token 140: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.2475089579820633
    2. '_' → logprob: -1.7475090026855469
    3. 'm' → logprob: -4.122509002685547
    4. 'set' → logprob: -4.747509002685547
    5. '_mask' → logprob: -4.747509002685547
    6. 's' → logprob: -5.497509002685547
    7. ')' → logprob: -6.122509002685547
    8. ' _' → logprob: -6.497509002685547
    9. 'space' → logprob: -6.747509002685547
    10. ' ' → logprob: -7.372509002685547

Token 141: ' of' (ID: 328)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9541111588478088
    2. ' ' → logprob: -1.954111099243164
    3. '<|end|>' → logprob: -2.329111099243164
    4. ' 
' → logprob: -2.454111099243164
    5. '   ' → logprob: -2.829111099243164
    6. ',' → logprob: -3.204111099243164
    7. 'def' → logprob: -3.204111099243164
    8. ')' → logprob: -3.329111099243164
    9. '_' → logprob: -3.954111099243164
    10. ' =' → logprob: -4.079111099243164

Token 142: ' tickets' (ID: 17323)
  Prédit: ' horses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' horses' → logprob: -0.6106123328208923
    2. 'hors' → logprob: -1.610612392425537
    3. 'used' → logprob: -2.610612392425537
    4. 'visited' → logprob: -2.735612392425537
    5. ' used' → logprob: -2.860612392425537
    6. ' visited' → logprob: -3.235612392425537
    7. 'horse' → logprob: -4.860612392425537
    8. 'p' → logprob: -5.610612392425537
    9. ' horse' → logprob: -5.985612392425537
    10. 'b' → logprob: -6.235612392425537

Token 143: ' used' (ID: 2061)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1686148643493652
    2. ')' → logprob: -1.4186148643493652
    3. '
' → logprob: -1.6686148643493652
    4. '_' → logprob: -2.1686148643493652
    5. '<|end|>' → logprob: -3.0436148643493652
    6. ' 
' → logprob: -3.6686148643493652
    7. '  
' → logprob: -4.418614864349365
    8. ':' → logprob: -4.543614864349365
    9. '   ' → logprob: -4.668614864349365
    10. '  ' → logprob: -5.293614864349365

Token 144: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.6680231094360352
    2. ' ' → logprob: -1.7930231094360352
    3. '   ' → logprob: -1.7930231094360352
    4. '<|end|>' → logprob: -1.9180231094360352
    5. '
' → logprob: -2.293023109436035
    6. ' 
' → logprob: -2.793023109436035
    7. '    ' → logprob: -3.043023109436035
    8. '    
' → logprob: -3.668023109436035
    9. ')' → logprob: -3.918023109436035
    10. '        
' → logprob: -4.168023109436035

Token 145: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24542631208896637
    2. '   ' → logprob: -2.1204264163970947
    3. ' 
' → logprob: -2.8704264163970947
    4. '    
' → logprob: -4.745426177978516
    5. '       ' → logprob: -4.745426177978516
    6. '  
' → logprob: -5.120426177978516
    7. '        
' → logprob: -5.620426177978516
    8. 'def' → logprob: -5.745426177978516
    9. ' ' → logprob: -5.995426177978516
    10. '    ' → logprob: -6.120426177978516

Token 146: ' dist' (ID: 3601)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6943272352218628
    2. 'dist' (adapté à ' dist') → logprob: -1.6943272352218628
    3. 'def' → logprob: -1.9443272352218628
    4. '   ' → logprob: -2.5693273544311523
    5. ' dp' → logprob: -3.4443273544311523
    6. 'import' → logprob: -3.6943273544311523
    7. 'distance' → logprob: -3.9443273544311523
    8. ' dist' → logprob: -5.569327354431152
    9. 'from' → logprob: -5.569327354431152
    10. '    ' → logprob: -5.694327354431152

Token 147: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0163044985383749
    2. '=' → logprob: -4.1413044929504395
    3. '[' → logprob: -8.766304969787598
    4. ')' → logprob: -9.891304969787598
    5. ',' → logprob: -10.516304969787598
    6. '<|end|>' → logprob: -11.141304969787598
    7. ']' → logprob: -11.891304969787598
    8. '=[' → logprob: -12.391304969787598
    9. 's' → logprob: -12.891304969787598
    10. ' ' → logprob: -13.141304969787598

Token 148: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.025857219472527504
    2. '[' → logprob: -4.150857448577881
    3. '{}' → logprob: -4.900857448577881
    4. ' [[' → logprob: -7.025857448577881
    5. '{' → logprob: -7.525857448577881
    6. '[(' → logprob: -7.525857448577881
    7. '[{' → logprob: -8.900856971740723
    8. ' [' → logprob: -9.525856971740723
    9. ' [[[' → logprob: -9.900856971740723
    10. 'math' → logprob: -9.900856971740723

Token 149: 'math' (ID: 20310)
  Prédit: 'math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.04798193648457527
    2. '(math' → logprob: -3.6729819774627686
    3. 'float' → logprob: -3.9229819774627686
    4. '(float' → logprob: -7.2979817390441895
    5. '[' → logprob: -7.5479817390441895
    6. '(' → logprob: -8.172982215881348
    7. ' math' → logprob: -9.047982215881348
    8. 'sys' → logprob: -11.172982215881348
    9. '(sys' → logprob: -11.797982215881348
    10. 'inf' → logprob: -11.922982215881348

Token 150: '.inf' (ID: 81185)
  Prédit: '.inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inf' → logprob: -0.012831581756472588
    2. 'inf' → logprob: -4.387831687927246
    3. ' inf' → logprob: -8.137831687927246
    4. '_inf' → logprob: -10.762831687927246
    5. '-inf' → logprob: -12.762831687927246
    6. '```' → logprob: -13.262831687927246
    7. 'Inf' → logprob: -13.762831687927246
    8. ']' → logprob: -13.762831687927246
    9. '][' → logprob: -15.387831687927246
    10. 'INF' → logprob: -15.387831687927246

Token 151: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16684959828853607
    2. ']*' → logprob: -2.2918496131896973
    3. ' for' → logprob: -3.1668496131896973
    4. ']*(' → logprob: -5.541849613189697
    5. 'for' → logprob: -5.916849613189697
    6. ' ]' → logprob: -5.916849613189697
    7. ',' → logprob: -7.666849613189697
    8. ')' → logprob: -8.166849136352539
    9. ')]' → logprob: -8.416849136352539
    10. ']+' → logprob: -9.541849136352539

Token 152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4105857312679291
    2. '(' → logprob: -1.1605857610702515
    3. 'm' → logprob: -4.035585880279541
    4. '32' → logprob: -5.910585880279541
    5. 'n' → logprob: -7.160585880279541
    6. '2' → logprob: -7.535585880279541
    7. '(m' → logprob: -7.535585880279541
    8. '102' → logprob: -8.035585403442383
    9. '16' → logprob: -8.410585403442383
    10. '128' → logprob: -8.785585403442383

Token 153: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.0009698220528662205
    2. ' <<' → logprob: -7.000969886779785
    3. '<<(' → logprob: -9.750969886779785
    4. '<m' → logprob: -17.87596893310547
    5. '<<"' → logprob: -18.00096893310547
    6. '<<<' → logprob: -18.75096893310547
    7. '>>' → logprob: -18.75096893310547
    8. ')<<' → logprob: -19.50096893310547
    9. '()<<' → logprob: -19.87596893310547
    10. '0' → logprob: -20.00096893310547

Token 154: 'n' (ID: 77)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.021150287240743637
    2. 'n' → logprob: -4.1461501121521
    3. 'p' → logprob: -5.8961501121521
    4. 'a' → logprob: -6.5211501121521
    5. 'b' → logprob: -8.396150588989258
    6. '5' → logprob: -8.396150588989258
    7. 'len' → logprob: -8.646150588989258
    8. '(m' → logprob: -9.896150588989258
    9. '7' → logprob: -10.021150588989258
    10. '15' → logprob: -10.396150588989258

Token 155: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000995295005850494
    2. ' )' → logprob: -7.50099515914917
    3. ')]' → logprob: -7.75099515914917
    4. ')
' → logprob: -12.250995635986328
    5. ')])' → logprob: -13.125995635986328
    6. ')...' → logprob: -13.875995635986328
    7. '))' → logprob: -13.875995635986328
    8. '   ' → logprob: -14.625995635986328
    9. ')`' → logprob: -15.000995635986328
    10. ']' → logprob: -15.125995635986328

Token 156: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3271150588989258
    2. 'for' → logprob: -1.3271150588989258
    3. ']' → logprob: -4.952115058898926
    4. ')' → logprob: -5.077115058898926
    5. ' ]' → logprob: -8.702115058898926
    6. ' )' → logprob: -9.577115058898926
    7. ')]' → logprob: -9.577115058898926
    8. '       ' → logprob: -9.702115058898926
    9. '   ' → logprob: -10.452115058898926
    10. '	for' → logprob: -10.577115058898926

Token 157: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.767373263835907
    2. ' range' → logprob: -1.1423733234405518
    3. ' m' → logprob: -2.2673733234405518
    4. '_' → logprob: -2.3923733234405518
    5. 'm' → logprob: -4.517373085021973
    6. ' in' → logprob: -5.892373085021973
    7. 'range' → logprob: -5.892373085021973
    8. ' (' → logprob: -6.392373085021973
    9. ' i' → logprob: -6.642373085021973
    10. '(m' → logprob: -6.892373085021973

Token 158: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8760071992874146
    2. 'range' → logprob: -1.1260071992874146
    3. ' range' → logprob: -1.5010071992874146
    4. 'in' → logprob: -3.501007080078125
    5. '(range' → logprob: -6.251007080078125
    6. '(m' → logprob: -6.251007080078125
    7. 'm' → logprob: -7.251007080078125
    8. '_' → logprob: -8.251007080078125
    9. 'i' → logprob: -8.251007080078125
    10. ' i' → logprob: -8.501007080078125

Token 159: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5374664664268494
    2. ' range' → logprob: -0.9124664664268494
    3. 'm' → logprob: -4.787466526031494
    4. '(m' → logprob: -5.287466526031494
    5. '(range' → logprob: -7.912466526031494
    6. ' m' → logprob: -8.287466049194336
    7. '[m' → logprob: -8.787466049194336
    8. ' (' → logprob: -10.787466049194336
    9. '   ' → logprob: -11.162466049194336
    10. ' xrange' → logprob: -11.787466049194336

Token 160: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.02336893416941166
    2. 'm' → logprob: -3.8983688354492188
    3. ' (' → logprob: -6.023368835449219
    4. ' m' → logprob: -8.273368835449219
    5. '   ' → logprob: -9.523368835449219
    6. '(' → logprob: -10.648368835449219
    7. '	m' → logprob: -12.335868835449219
    8. '(M' → logprob: -12.335868835449219
    9. ')m' → logprob: -12.460868835449219
    10. '           ' → logprob: -12.523368835449219

Token 161: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0004496189649216831
    2. ' +' → logprob: -8.250449180603027
    3. '1' → logprob: -9.750449180603027
    4. ')]' → logprob: -9.750449180603027
    5. ')' → logprob: -10.500449180603027
    6. '+
' → logprob: -10.875449180603027
    7. '+)' → logprob: -11.125449180603027
    8. ')+' → logprob: -12.125449180603027
    9. ')])' → logprob: -12.875449180603027
    10. '   ' → logprob: -15.125449180603027

Token 162: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.500004768371582
    3. '0' → logprob: -14.875004768371582
    4. '```' → logprob: -16.125003814697266
    5. '   ' → logprob: -16.375003814697266
    6. '2' → logprob: -16.500003814697266
    7. ')' → logprob: -18.375003814697266
    8. '       ' → logprob: -18.812503814697266
    9. '     ' → logprob: -18.812503814697266
    10. '１' → logprob: -18.875003814697266

Token 163: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0004248355980962515
    2. ')' → logprob: -8.2504243850708
    3. ' )' → logprob: -8.7504243850708
    4. ']' → logprob: -12.8754243850708
    5. ' ]' → logprob: -14.5004243850708
    6. ')])' → logprob: -14.6254243850708
    7. '))' → logprob: -14.7504243850708
    8. '       ' → logprob: -15.1254243850708
    9. ')]
' → logprob: -15.1254243850708
    10. '   ' → logprob: -15.5004243850708

Token 164: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6309195160865784
    2. '<|end|>' → logprob: -1.1309194564819336
    3. '       ' → logprob: -2.2559194564819336
    4. '   ' → logprob: -4.630919456481934
    5. ' 
' → logprob: -5.005919456481934
    6. ' ' → logprob: -5.255919456481934
    7. ')' → logprob: -5.505919456481934
    8. '
' → logprob: -6.005919456481934
    9. '[
' → logprob: -6.255919456481934
    10. '        
' → logprob: -6.880919456481934

Token 165: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.002083166502416134
    2. '   ' → logprob: -6.5020833015441895
    3. 'for' → logprob: -8.377082824707031
    4. ' dist' → logprob: -9.127082824707031
    5. 'import' → logprob: -9.377082824707031
    6. '	dist' → logprob: -9.502082824707031
    7. '       ' → logprob: -10.127082824707031
    8. '0' → logprob: -11.127082824707031
    9. 'heap' → logprob: -11.377082824707031
    10. ' for' → logprob: -12.627082824707031

Token 166: '[a' (ID: 32035)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.013831314630806446
    2. '[a' → logprob: -4.76383113861084
    3. '[b' → logprob: -5.26383113861084
    4. '[s' → logprob: -11.76383113861084
    5. '```' → logprob: -12.26383113861084
    6. '[m' → logprob: -12.51383113861084
    7. ' [' → logprob: -13.01383113861084
    8. '[x' → logprob: -13.26383113861084
    9. '[start' → logprob: -13.26383113861084
    10. '][' → logprob: -14.01383113861084

Token 167: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0001769616355886683
    2. ']' → logprob: -9.250177383422852
    3. ' ][' → logprob: -10.250177383422852
    4. '[b' → logprob: -10.625177383422852
    5. '[' → logprob: -11.250177383422852
    6. ')][' → logprob: -12.750177383422852
    7. ']][' → logprob: -13.375177383422852
    8. 'b' → logprob: -14.375177383422852
    9. '[a' → logprob: -14.375177383422852
    10. '```' → logprob: -14.375177383422852

Token 168: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.038945507258176804
    2. '(' → logprob: -3.788945436477661
    3. '1' → logprob: -4.16394567489624
    4. ' ' → logprob: -11.163945198059082
    5. 'b' → logprob: -12.038945198059082
    6. ' (' → logprob: -12.288945198059082
    7. '(b' → logprob: -12.538945198059082
    8. '```' → logprob: -13.663945198059082
    9. ']' → logprob: -14.913945198059082
    10. '[' → logprob: -15.038945198059082

Token 169: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006166507955640554
    2. ' ]' → logprob: -7.500616550445557
    3. ']=' → logprob: -9.750617027282715
    4. ' =' → logprob: -12.250617027282715
    5. '=' → logprob: -14.625617027282715
    6. ')' → logprob: -17.0006160736084
    7. ']+=' → logprob: -17.3756160736084
    8. '[' → logprob: -17.6256160736084
    9. '`]' → logprob: -17.7506160736084
    10. ']>' → logprob: -17.8756160736084

Token 170: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. 'hors' → logprob: -17.125001907348633
    4. 'horse' → logprob: -17.750001907348633
    5. '(' → logprob: -18.812501907348633
    6. 'math' → logprob: -19.125001907348633
    7. '00' → logprob: -19.250001907348633
    8. '۰' → logprob: -19.500001907348633
    9. 'a' → logprob: -19.687501907348633
    10. '[' → logprob: -20.000001907348633

Token 171: '.' (ID: 13)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1801692247390747
    2. '       ' → logprob: -2.805169105529785
    3. '<|end|>' → logprob: -3.430169105529785
    4. ' 
' → logprob: -3.680169105529785
    5. '   ' → logprob: -4.055169105529785
    6. '    
' → logprob: -4.680169105529785
    7. '  
' → logprob: -4.930169105529785
    8. '        
' → logprob: -5.430169105529785
    9. ' ' → logprob: -6.180169105529785
    10. '	
' → logprob: -7.055169105529785

Token 172: '0' (ID: 15)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.35695505142211914
    2. '0' → logprob: -1.7319550514221191
    3. '   ' → logprob: -3.481955051422119
    4. 'import' → logprob: -3.606955051422119
    5. '       ' → logprob: -4.231955051422119
    6. 'he' → logprob: -4.231955051422119
    7. 'push' → logprob: -4.356955051422119
    8. 'queue' → logprob: -4.356955051422119
    9. '
' → logprob: -5.981955051422119
    10. '5' → logprob: -6.231955051422119

Token 173: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 174: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8895683884620667
    2. '<|end|>' → logprob: -1.0145683288574219
    3. ' ' → logprob: -2.764568328857422
    4. ' 
' → logprob: -2.889568328857422
    5. '
' → logprob: -3.264568328857422
    6. '       ' → logprob: -3.889568328857422
    7. '  
' → logprob: -4.264568328857422
    8. '    ' → logprob: -4.889568328857422
    9. ' for' → logprob: -5.389568328857422
    10. '  ' → logprob: -5.639568328857422

Token 175: ' h' (ID: 312)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.6423674821853638
    2. 'import' → logprob: -0.8923674821853638
    3. 'queue' → logprob: -3.517367362976074
    4. '   ' → logprob: -4.017367362976074
    5. 'pq' → logprob: -4.892367362976074
    6. ' heap' → logprob: -5.517367362976074
    7. '       ' → logprob: -5.767367362976074
    8. 'q' → logprob: -7.017367362976074
    9. 'hq' → logprob: -7.517367362976074
    10. ' import' → logprob: -8.267367362976074

Token 176: 'q' (ID: 80)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8582445383071899
    2. ' =' → logprob: -1.35824453830719
    3. 'q' → logprob: -1.60824453830719
    4. '=' → logprob: -2.7332444190979004
    5. 'p' → logprob: -3.3582444190979004
    6. '=[]' → logprob: -4.1082444190979
    7. 'pq' → logprob: -7.2332444190979
    8. '=[]
' → logprob: -7.4832444190979
    9. '   ' → logprob: -8.233244895935059
    10. 'heap' → logprob: -8.608244895935059

Token 177: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3563286066055298
    2. '=' → logprob: -1.2313286066055298
    3. '=[]' → logprob: -4.85632848739624
    4. '.append' → logprob: -11.356328964233398
    5. '=[' → logprob: -11.356328964233398
    6. '.heap' → logprob: -11.606328964233398
    7. '.' → logprob: -11.856328964233398
    8. '=[]
' → logprob: -12.106328964233398
    9. 'heap' → logprob: -12.481328964233398
    10. 'import' → logprob: -12.481328964233398

Token 178: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.01565738208591938
    2. ' [(' → logprob: -4.265657424926758
    3. '[]' → logprob: -6.515657424926758
    4. ' []' → logprob: -11.390657424926758
    5. '[]
' → logprob: -13.640657424926758
    6. '[' → logprob: -15.890657424926758
    7. '[((' → logprob: -15.890657424926758
    8. '[],' → logprob: -17.765657424926758
    9. '([(' → logprob: -17.765657424926758
    10. ' []
' → logprob: -18.765657424926758

Token 179: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028114095330238342
    2. '(' → logprob: -5.877811431884766
    3. ' ' → logprob: -12.252811431884766
    4. ' (' → logprob: -14.752811431884766
    5. '(dist' → logprob: -15.002811431884766
    6. '   ' → logprob: -15.127811431884766
    7. ')' → logprob: -15.127811431884766
    8. 'dist' → logprob: -15.252811431884766
    9. '```' → logprob: -16.627811431884766
    10. '(
' → logprob: -18.002811431884766

Token 180: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.48413053154945374
    2. ',' → logprob: -0.9841305017471313
    3. ')]' → logprob: -5.234130382537842
    4. ')' → logprob: -5.484130382537842
    5. '0' → logprob: -9.359130859375
    6. ' ,' → logprob: -9.609130859375
    7. '[' → logprob: -9.734130859375
    8. '```' → logprob: -10.484130859375
    9. ')])' → logprob: -10.609130859375
    10. '.,' → logprob: -10.734130859375

Token 181: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2961512513575144e-05
    2. ')' → logprob: -11.250022888183594
    3. 'float' → logprob: -12.125022888183594
    4. '```' → logprob: -14.000022888183594
    5. 'a' → logprob: -14.125022888183594
    6. ',' → logprob: -14.250022888183594
    7. '5' → logprob: -14.875022888183594
    8. ']' → logprob: -14.875022888183594
    9. ')]' → logprob: -15.625022888183594
    10. '[' → logprob: -15.875022888183594

Token 182: ',a' (ID: 26776)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016405124217271805
    2. ',a' → logprob: -4.14140510559082
    3. ' ,' → logprob: -8.14140510559082
    4. ',b' → logprob: -10.89140510559082
    5. ',x' → logprob: -11.26640510559082
    6. ',(' → logprob: -11.26640510559082
    7. ',n' → logprob: -11.39140510559082
    8. ',int' → logprob: -12.64140510559082
    9. ',float' → logprob: -13.39140510559082
    10. ')' → logprob: -13.51640510559082

Token 183: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.547789674485102e-05
    2. ' ,' → logprob: -10.875035285949707
    3. '0' → logprob: -11.250035285949707
    4. ')]' → logprob: -13.500035285949707
    5. ')' → logprob: -13.750035285949707
    6. ',
' → logprob: -14.000035285949707
    7. ',None' → logprob: -16.750036239624023
    8. ' ' → logprob: -16.875036239624023
    9. ')])' → logprob: -17.250036239624023
    10. ',int' → logprob: -17.375036239624023

Token 184: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.56102097814437e-05
    2. ' ' → logprob: -10.000045776367188
    3. ')' → logprob: -16.625045776367188
    4. '000' → logprob: -17.750045776367188
    5. '۰' → logprob: -17.812545776367188
    6. ',' → logprob: -18.125045776367188
    7. '  
' → logprob: -18.687545776367188
    8. '
' → logprob: -18.687545776367188
    9. '   ' → logprob: -18.687545776367188
    10. '```' → logprob: -18.812545776367188

Token 185: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00045486391172744334
    2. ')' → logprob: -7.750454902648926
    3. ' )' → logprob: -11.500454902648926
    4. ')]
' → logprob: -12.375454902648926
    5. ']' → logprob: -12.500454902648926
    6. '))' → logprob: -13.250454902648926
    7. ',' → logprob: -13.875454902648926
    8. '),' → logprob: -13.875454902648926
    9. ')])' → logprob: -14.000454902648926
    10. ')]

' → logprob: -15.375454902648926

Token 186: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.940015971660614
    2. '       ' → logprob: -0.940015971660614
    3. '<|end|>' → logprob: -2.440016031265259
    4. '   ' → logprob: -3.190016031265259
    5. ',' → logprob: -3.690016031265259
    6. '	while' → logprob: -4.31501579284668
    7. '
' → logprob: -4.81501579284668
    8. ' ' → logprob: -5.06501579284668
    9. 'while' → logprob: -5.19001579284668
    10. ' while' → logprob: -5.31501579284668

Token 187: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7898869514465332
    2. 'while' (adapté à ' while') → logprob: -0.9148869514465332
    3. ' while' → logprob: -2.039886951446533
    4. '	while' → logprob: -4.539886951446533
    5. ')' → logprob: -6.164886951446533
    6. '   ' → logprob: -6.914886951446533
    7. '	' → logprob: -7.789886951446533
    8. ' ' → logprob: -8.539886474609375
    9. ',' → logprob: -8.789886474609375
    10. '        
' → logprob: -8.914886474609375

Token 188: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.03169688954949379
    2. 'hq' → logprob: -3.5316967964172363
    3. 'h' → logprob: -6.281696796417236
    4. '	h' → logprob: -10.281697273254395
    5. '(h' → logprob: -10.406697273254395
    6. 'len' → logprob: -12.906697273254395
    7. '```' → logprob: -13.156697273254395
    8. '[h' → logprob: -13.656697273254395
    9. ' len' → logprob: -13.781697273254395
    10. ' ' → logprob: -14.156697273254395

Token 189: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.1472419600977446e-06
    2. 'Q' → logprob: -14.875000953674316
    3. '[' → logprob: -14.875000953674316
    4. ' q' → logprob: -16.875001907348633
    5. '```' → logprob: -16.875001907348633
    6. 'e' → logprob: -17.000001907348633
    7. 'c' → logprob: -17.375001907348633
    8. 'sq' → logprob: -17.500001907348633
    9. '   ' → logprob: -17.500001907348633
    10. '
' → logprob: -17.500001907348633

Token 190: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03941331058740616
    2. ' and' → logprob: -4.5394134521484375
    3. '):' → logprob: -4.6644134521484375
    4. '[' → logprob: -5.4144134521484375
    5. ',' → logprob: -5.4144134521484375
    6. 'and' → logprob: -6.1644134521484375
    7. ':
' → logprob: -6.2894134521484375
    8. '>:' → logprob: -6.6644134521484375
    9. ']:' → logprob: -6.6644134521484375
    10. '.pop' → logprob: -7.0394134521484375

Token 191: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4294005036354065
    2. '           ' → logprob: -1.1794004440307617
    3. ',' → logprob: -3.5544004440307617
    4. '   ' → logprob: -5.179400444030762
    5. ' ,' → logprob: -7.054400444030762
    6. '     ' → logprob: -7.304400444030762
    7. ' ' → logprob: -7.429400444030762
    8. '            
' → logprob: -7.554400444030762
    9. '	' → logprob: -7.679400444030762
    10. '        ' → logprob: -7.804400444030762

Token 192: ' cost' (ID: 3097)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.891156017780304
    2. 'import' → logprob: -1.2661559581756592
    3. 'heap' → logprob: -2.266155958175659
    4. '
' → logprob: -2.516155958175659
    5. '_,' → logprob: -3.891155958175659
    6. '           ' → logprob: -4.016156196594238
    7. 'cost' (adapté à ' cost') → logprob: -4.016156196594238
    8. '```' → logprob: -4.516156196594238
    9. ' heap' → logprob: -4.891156196594238
    10. '   ' → logprob: -5.141156196594238

Token 193: ',u' (ID: 80698)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014902622438967228
    2. ',c' → logprob: -5.389902591705322
    3. ',t' → logprob: -6.139902591705322
    4. ' ,' → logprob: -6.514902591705322
    5. ',p' → logprob: -6.514902591705322
    6. ',time' → logprob: -7.139902591705322
    7. ',u' → logprob: -7.514902591705322
    8. ',user' → logprob: -7.514902591705322
    9. ',next' → logprob: -7.514902591705322
    10. ',q' → logprob: -7.889902591705322

Token 194: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.039515186101198196
    2. ' =' → logprob: -3.289515256881714
    3. ',' → logprob: -7.289515018463135
    4. ',u' → logprob: -8.414515495300293
    5. ')=' → logprob: -8.914515495300293
    6. '=u' → logprob: -9.039515495300293
    7. ',c' → logprob: -9.164515495300293
    8. '   ' → logprob: -9.664515495300293
    9. ')' → logprob: -10.414515495300293
    10. '=q' → logprob: -10.664515495300293

Token 195: 'used' (ID: 4943)
  Prédit: 'used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.0033017699606716633
    2. 'mask' → logprob: -5.753301620483398
    3. 'state' → logprob: -9.378301620483398
    4. ' used' → logprob: -11.003301620483398
    5. 'bit' → logprob: -11.628301620483398
    6. 'u' → logprob: -12.628301620483398
    7. 'use' → logprob: -13.003301620483398
    8. 's' → logprob: -13.378301620483398
    9. 'us' → logprob: -13.503301620483398
    10. 'bm' → logprob: -13.878301620483398

Token 196: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692904472351074
    2. ' =' → logprob: -2.1269290447235107
    3. ')=' → logprob: -15.00192928314209
    4. ')' → logprob: -15.37692928314209
    5. ' ' → logprob: -15.50192928314209
    6. '   ' → logprob: -16.626928329467773
    7. '=u' → logprob: -16.876928329467773
    8. '=h' → logprob: -17.126928329467773
    9. '＝' → logprob: -17.751928329467773
    10. '=_' → logprob: -17.876928329467773

Token 197: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.16025803983211517
    2. 'heap' → logprob: -1.9102580547332764
    3. 'he' → logprob: -10.660258293151855
    4. ' he' → logprob: -11.660258293151855
    5. '(heap' → logprob: -13.785258293151855
    6. ' ' → logprob: -15.410258293151855
    7. '   ' → logprob: -15.535258293151855
    8. '.heap' → logprob: -15.660258293151855
    9. '_heap' → logprob: -16.16025733947754
    10. 'import' → logprob: -16.78525733947754

Token 198: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -5.512236498361744e-07
    2. 'p' → logprob: -14.625000953674316
    3. '```' → logprob: -18.625
    4. '	q' → logprob: -19.625
    5. 'h' → logprob: -19.75
    6. 'app' → logprob: -19.75
    7. 'ify' → logprob: -20.375
    8. 'replace' → logprob: -20.375
    9. ' q' → logprob: -20.5
    10. 'f' → logprob: -20.625

Token 199: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -9.269565634895116e-05
    2. '.' → logprob: -9.500092506408691
    3. '.heap' → logprob: -11.000092506408691
    4. '.h' → logprob: -15.250092506408691
    5. '.pop' → logprob: -15.250092506408691
    6. '.q' → logprob: -15.750092506408691
    7. ').' → logprob: -16.750093460083008
    8. '.p' → logprob: -17.000093460083008
    9. '>.' → logprob: -17.000093460083008
    10. ' .' → logprob: -17.250093460083008

Token 200: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -7.703443770878948e-06
    2. 'pp' → logprob: -12.000007629394531
    3. 'ap' → logprob: -13.750007629394531
    4. '[' → logprob: -15.625007629394531
    5. '```' → logprob: -16.12500762939453
    6. 'replace' → logprob: -17.00000762939453
    7. 'q' → logprob: -17.37500762939453
    8. ' app' → logprob: -17.87500762939453
    9. '(app' → logprob: -17.87500762939453
    10. 'pop' → logprob: -17.87500762939453

Token 201: 'op' (ID: 467)
  Prédit: 'ush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.38688623905181885
    2. 'op' → logprob: -1.1368862390518188
    3. 'ut' → logprob: -12.636886596679688
    4. '```' → logprob: -12.636886596679688
    5. 'push' → logprob: -13.386886596679688
    6. 'q' → logprob: -13.386886596679688
    7. 'u' → logprob: -13.636886596679688
    8. 'ort' → logprob: -13.761886596679688
    9. 'uf' → logprob: -14.511886596679688
    10. 'opleft' → logprob: -14.886886596679688

Token 202: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -3.1186566047836095e-05
    2. '(q' → logprob: -11.000031471252441
    3. '(' → logprob: -11.375031471252441
    4. '(heap' → logprob: -13.375031471252441
    5. ' (' → logprob: -14.875031471252441
    6. 'h' → logprob: -15.125031471252441
    7. ',h' → logprob: -15.500031471252441
    8. '(
' → logprob: -15.750031471252441
    9. '```' → logprob: -16.000030517578125
    10. '(ht' → logprob: -16.625030517578125

Token 203: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: 0.0
    2. '
' → logprob: -19.875
    3. ')' → logprob: -20.25
    4. '_q' → logprob: -20.75
    5. 'Q' → logprob: -21.375
    6. 'p' → logprob: -21.5
    7. ' q' → logprob: -21.5
    8. '	q' → logprob: -21.75
    9. '[' → logprob: -22.25
    10. '(' → logprob: -22.375

Token 204: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0564331205387134e-05
    2. ')
' → logprob: -11.50001049041748
    3. ' )' → logprob: -16.000011444091797
    4. '),' → logprob: -16.375011444091797
    5. ')`' → logprob: -16.625011444091797
    6. ')

' → logprob: -16.875011444091797
    7. ')}' → logprob: -17.500011444091797
    8. ')
' → logprob: -17.750011444091797
    9. '<|end|>' → logprob: -18.375011444091797
    10. '):' → logprob: -18.375011444091797

Token 205: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 206: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6286542415618896
    2. '           ' → logprob: -1.1286542415618896
    3. '
' → logprob: -2.2536542415618896
    4. ' if' → logprob: -3.6286542415618896
    5. '       ' → logprob: -5.253654479980469
    6. '<|end|>' → logprob: -5.628654479980469
    7. '            
' → logprob: -6.753654479980469
    8. '        ' → logprob: -8.128654479980469
    9. ' 
' → logprob: -8.253654479980469
    10. '               ' → logprob: -8.503654479980469

Token 207: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.09067421406507492
    2. ' dist' → logprob: -2.5906741619110107
    3. 'cost' → logprob: -4.71567440032959
    4. 'u' → logprob: -6.59067440032959
    5. ' cost' → logprob: -7.09067440032959
    6. ' u' → logprob: -7.71567440032959
    7. 'abs' → logprob: -9.96567440032959
    8. '	dist' → logprob: -10.21567440032959
    9. ' math' → logprob: -12.34067440032959
    10. '   ' → logprob: -12.34067440032959

Token 208: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.500000953674316
    3. '[user' → logprob: -15.875000953674316
    4. 'u' → logprob: -16.25
    5. ' [' → logprob: -17.5
    6. '[a' → logprob: -17.75
    7. '[int' → logprob: -18.625
    8. '```' → logprob: -18.75
    9. '][' → logprob: -19.375
    10. '[cur' → logprob: -19.625

Token 209: '][' (ID: 2696)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.28179267048835754
    2. '][' → logprob: -1.5317926406860352
    3. '[' → logprob: -3.531792640686035
    4. '[user' → logprob: -9.781792640686035
    5. ']' → logprob: -10.906792640686035
    6. '[c' → logprob: -10.906792640686035
    7. ' [' → logprob: -11.156792640686035
    8. '>[' → logprob: -12.031792640686035
    9. '```' → logprob: -12.156792640686035
    10. '[a' → logprob: -12.281792640686035

Token 210: 'used' (ID: 4943)
  Prédit: 'used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -3.7697225252486533e-06
    2. ' used' → logprob: -12.500003814697266
    3. '.used' → logprob: -20.000003814697266
    4. '_used' → logprob: -20.500003814697266
    5. '-used' → logprob: -22.000003814697266
    6. 'Used' → logprob: -22.375003814697266
    7. 'u' → logprob: -22.750003814697266
    8. '
' → logprob: -23.625003814697266
    9. '   ' → logprob: -23.875003814697266
    10. 'unused' → logprob: -23.875003814697266

Token 211: ']<' (ID: 80424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.04901105910539627
    2. ']<' → logprob: -3.799010992050171
    3. '<u' → logprob: -4.17401123046875
    4. ']' → logprob: -5.29901123046875
    5. '<v' → logprob: -7.29901123046875
    6. ' <' → logprob: -7.42401123046875
    7. '<int' → logprob: -7.54901123046875
    8. '<ll' → logprob: -7.67401123046875
    9. '<m' → logprob: -7.79901123046875
    10. ']!=' → logprob: -8.04901123046875

Token 212: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -1.306760805164231e-05
    2. ' cost' → logprob: -11.25001335144043
    3. '-cost' → logprob: -18.75001335144043
    4. '(cost' → logprob: -20.00001335144043
    5. 'cos' → logprob: -20.25001335144043
    6. 'code' → logprob: -21.87501335144043
    7. '_cost' → logprob: -22.00001335144043
    8. '.cost' → logprob: -22.75001335144043
    9. 'Cost' → logprob: -23.25001335144043
    10. '   ' → logprob: -23.37501335144043

Token 213: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0052464487962424755
    2. ':
' → logprob: -5.255246639251709
    3. 'continue' → logprob: -12.38024616241455
    4. ':return' → logprob: -12.50524616241455
    5. ' continue' → logprob: -13.13024616241455
    6. '):' → logprob: -13.75524616241455
    7. ' :' → logprob: -14.38024616241455
    8. '_continue' → logprob: -15.00524616241455
    9. ')' → logprob: -15.50524616241455
    10. '	continue' → logprob: -16.380247116088867

Token 214: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.591325581073761
    2. '               ' → logprob: -0.841325581073761
    3. ' continue' → logprob: -4.466325759887695
    4. ':' → logprob: -6.716325759887695
    5. 'continue' → logprob: -6.966325759887695
    6. '       ' → logprob: -7.216325759887695
    7. '	continue' → logprob: -7.841325759887695
    8. '_continue' → logprob: -9.216325759887695
    9. ',' → logprob: -9.466325759887695
    10. ' continues' → logprob: -9.591325759887695

Token 215: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.09890686720609665
    2. '           ' → logprob: -3.0989067554473877
    3. ' continue' → logprob: -3.0989067554473877
    4. '               ' → logprob: -5.848906993865967
    5. '	continue' → logprob: -6.973906993865967
    6. '_continue' → logprob: -9.848906517028809
    7. '       ' → logprob: -10.473906517028809
    8. 'contin' → logprob: -10.598906517028809
    9. '		' → logprob: -11.098906517028809
    10. '   ' → logprob: -11.223906517028809

Token 216: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008284886367619038
    2. '       ' → logprob: -5.633285045623779
    3. '<|end|>' → logprob: -5.758285045623779
    4. '
' → logprob: -6.883285045623779
    5. '            
' → logprob: -9.008284568786621
    6. '   ' → logprob: -9.258284568786621
    7. '\n' → logprob: -10.008284568786621
    8. ')' → logprob: -10.133284568786621
    9. '        
' → logprob: -10.133284568786621
    10. '               ' → logprob: -10.383284568786621

Token 217: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01717468351125717
    2. '       ' → logprob: -4.26717472076416
    3. ')' → logprob: -6.51717472076416
    4. '        ' → logprob: -8.39217472076416
    5. ' 
' → logprob: -8.64217472076416
    6. '          ' → logprob: -8.64217472076416
    7. '            
' → logprob: -8.76717472076416
    8. '   ' → logprob: -8.89217472076416
    9. '            ' → logprob: -9.14217472076416
    10. ' for' → logprob: -9.14217472076416

Token 218: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.194693461060524
    2. '           ' → logprob: -2.5696935653686523
    3. 'for' → logprob: -2.9446935653686523
    4. ' for' → logprob: -3.5696935653686523
    5. 'if' (adapté à ' if') → logprob: -5.319693565368652
    6. '   ' → logprob: -5.944693565368652
    7. '        ' → logprob: -5.944693565368652
    8. '        
' → logprob: -6.194693565368652
    9. ' if' → logprob: -6.444693565368652
    10. ')' → logprob: -6.444693565368652

Token 219: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.38687169551849365
    2. ' u' → logprob: -1.1368716955184937
    3. '	u' → logprob: -15.011871337890625
    4. '(u' → logprob: -15.386871337890625
    5. '[u' → logprob: -16.636871337890625
    6. '   ' → logprob: -16.761871337890625
    7. ' ' → logprob: -17.136871337890625
    8. '    ' → logprob: -18.011871337890625
    9. '```' → logprob: -18.261871337890625
    10. '
' → logprob: -18.511871337890625

Token 220: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10025531053543091
    2. ' ==' → logprob: -2.350255250930786
    3. ']==' → logprob: -11.100255012512207
    4. '==
' → logprob: -11.100255012512207
    5. '=' → logprob: -11.600255012512207
    6. ')==' → logprob: -11.850255012512207
    7. 'a' → logprob: -14.975255012512207
    8. ' =' → logprob: -15.100255012512207
    9. '()==' → logprob: -15.225255012512207
    10. '===' → logprob: -15.225255012512207

Token 221: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00010902655776590109
    2. ' b' → logprob: -9.12510871887207
    3. '   ' → logprob: -19.00010871887207
    4. 'B' → logprob: -19.62510871887207
    5. ' ' → logprob: -20.25010871887207
    6. ')b' → logprob: -20.50010871887207
    7. '	b' → logprob: -21.37510871887207
    8. '```' → logprob: -22.37510871887207
    9. '    ' → logprob: -22.50010871887207
    10. 'a' → logprob: -22.75010871887207

Token 222: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20679286122322083
    2. ':
' → logprob: -2.2067928314208984
    3. ' and' → logprob: -2.5817928314208984
    4. ':return' → logprob: -7.581792831420898
    5. '           ' → logprob: -7.956792831420898
    6. 'and' → logprob: -9.081792831420898
    7. '<|end|>' → logprob: -10.581792831420898
    8. '               ' → logprob: -10.706792831420898
    9. ')' → logprob: -10.706792831420898
    10. ' :' → logprob: -10.956792831420898

Token 223: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.34887462854385376
    2. '           ' → logprob: -1.223874568939209
    3. '
' → logprob: -8.598875045776367
    4. ' return' → logprob: -9.223875045776367
    5. 'return' → logprob: -10.223875045776367
    6. '<|end|>' → logprob: -10.473875045776367
    7. '       ' → logprob: -10.723875045776367
    8. '   ' → logprob: -11.598875045776367
    9. '            
' → logprob: -12.098875045776367
    10. '	       ' → logprob: -12.223875045776367

Token 224: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0019731230568140745
    2. '               ' → logprob: -6.5019731521606445
    3. '           ' → logprob: -7.7519731521606445
    4. ' print' → logprob: -10.626973152160645
    5. 'return' → logprob: -11.251973152160645
    6. '```' → logprob: -12.751973152160645
    7. 'break' → logprob: -15.126973152160645
    8. '            
' → logprob: -16.376972198486328
    9. '``' → logprob: -16.626972198486328
    10. '	print' → logprob: -16.751972198486328

Token 225: '(f' (ID: 1526)
  Prédit: '(cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -0.07928191125392914
    2. '(f' → logprob: -2.704281806945801
    3. '(int' → logprob: -5.079281806945801
    4. '(round' → logprob: -6.454281806945801
    5. '(' → logprob: -7.079281806945801
    6. '("{' → logprob: -8.0792818069458
    7. 'cost' → logprob: -9.2042818069458
    8. '("%.' → logprob: -9.4542818069458
    9. '('{' → logprob: -9.9542818069458
    10. '(float' → logprob: -10.2042818069458

Token 226: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.161183699965477
    2. '{' → logprob: -1.9111837148666382
    3. ''{' → logprob: -7.036183834075928
    4. '("{' → logprob: -10.28618335723877
    5. 'loat' → logprob: -10.66118335723877
    6. '{"' → logprob: -11.91118335723877
    7. '(cost' → logprob: -12.28618335723877
    8. 'ormat' → logprob: -13.03618335723877
    9. 'cost' → logprob: -13.53618335723877
    10. '('{' → logprob: -13.66118335723877

Token 227: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0004353181866463274
    2. 'dist' → logprob: -7.7504353523254395
    3. ' cost' → logprob: -12.750434875488281
    4. 'math' → logprob: -14.625434875488281
    5. '(cost' → logprob: -14.625434875488281
    6. 'distance' → logprob: -15.875434875488281
    7. 'cos' → logprob: -16.12543487548828
    8. 'int' → logprob: -16.12543487548828
    9. '0' → logprob: -17.12543487548828
    10. '-cost' → logprob: -17.12543487548828

Token 228: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -8.065608562901616e-05
    2. ':' → logprob: -9.750081062316895
    3. '}")' → logprob: -11.250081062316895
    4. ' :.' → logprob: -11.875081062316895
    5. '.' → logprob: -13.375081062316895
    6. '")' → logprob: -15.875081062316895
    7. ':e' → logprob: -16.000080108642578
    8. ':f' → logprob: -16.000080108642578
    9. ' .' → logprob: -16.500080108642578
    10. '*' → logprob: -17.500080108642578

Token 229: '3' (ID: 18)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.16409531235694885
    2. '9' → logprob: -3.164095401763916
    3. '7' → logprob: -3.289095401763916
    4. '8' → logprob: -3.789095401763916
    5. '10' → logprob: -3.914095401763916
    6. '3' → logprob: -4.539095401763916
    7. '2' → logprob: -5.164095401763916
    8. '4' → logprob: -5.289095401763916
    9. '12' → logprob: -5.414095401763916
    10. '5' → logprob: -6.289095401763916

Token 230: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.9361264946837764e-07
    2. 'lf' → logprob: -16.0
    3. '}' → logprob: -17.5
    4. '}")' → logprob: -18.125
    5. '3' → logprob: -19.375
    6. '6' → logprob: -20.125
    7. 'Lf' → logprob: -20.25
    8. 'e' → logprob: -20.5
    9. '

' → logprob: -21.0
    10. '
' → logprob: -21.5

Token 231: '}")
' (ID: 23577)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.03809691593050957
    2. '}")
' → logprob: -3.2880969047546387
    3. '}")
' → logprob: -9.913097381591797
    4. '")' → logprob: -12.913097381591797
    5. ' }' → logprob: -13.538097381591797
    6. '}' → logprob: -13.913097381591797
    7. '}")

' → logprob: -14.413097381591797
    8. '}"' → logprob: -15.413097381591797
    9. ')")' → logprob: -15.538097381591797
    10. '})' → logprob: -16.038097381591797

Token 232: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.893480243277736e-05
    2. '<|end|>' → logprob: -11.000039100646973
    3. '           ' → logprob: -11.750039100646973
    4. '                
' → logprob: -12.750039100646973
    5. 'return' → logprob: -12.875039100646973
    6. ')' → logprob: -13.000039100646973
    7. '       ' → logprob: -13.125039100646973
    8. '			' → logprob: -14.125039100646973
    9. '<|end|>' → logprob: -14.625039100646973
    10. '              ' → logprob: -14.750039100646973

Token 233: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10709476470947266
    2. 'return' → logprob: -2.3570947647094727
    3. 'break' (adapté à ' break') → logprob: -5.107094764709473
    4. ' return' → logprob: -7.232094764709473
    5. ' break' → logprob: -9.482094764709473
    6. 'continue' → logprob: -11.482094764709473
    7. '           ' → logprob: -14.607094764709473
    8. '```' → logprob: -14.982094764709473
    9. '       ' → logprob: -16.232093811035156
    10. '	break' → logprob: -16.357093811035156

Token 234: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003623985394369811
    2. '       ' → logprob: -8.000362396240234
    3. '          ' → logprob: -11.875362396240234
    4. '            
' → logprob: -12.000362396240234
    5. '   ' → logprob: -12.500362396240234
    6. ' for' → logprob: -12.750362396240234
    7. '         ' → logprob: -13.625362396240234
    8. '               ' → logprob: -14.250362396240234
    9. '            ' → logprob: -14.250362396240234
    10. 'for' → logprob: -14.250362396240234

Token 235: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02069101110100746
    2. '       ' → logprob: -3.89569091796875
    3. '   ' → logprob: -9.64569091796875
    4. '            
' → logprob: -11.14569091796875
    5. '        
' → logprob: -11.77069091796875
    6. '          ' → logprob: -12.02069091796875
    7. ' for' → logprob: -12.14569091796875
    8. '		' → logprob: -12.27069091796875
    9. '	   ' → logprob: -12.27069091796875
    10. '	       ' → logprob: -12.39569091796875

Token 236: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.02251703105866909
    2. '#' → logprob: -4.397517204284668
    3. '       ' → logprob: -4.647517204284668
    4. ' for' → logprob: -9.272517204284668
    5. '           ' → logprob: -9.397517204284668
    6. '        
' → logprob: -9.647517204284668
    7. 'if' → logprob: -9.897517204284668
    8. '            
' → logprob: -10.647517204284668
    9. 'horse' → logprob: -10.647517204284668
    10. 'mask' → logprob: -12.272517204284668

Token 237: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.008009973913431168
    2. '(v' → logprob: -5.258009910583496
    3. ' v' → logprob: -6.633009910583496
    4. 'i' → logprob: -7.008009910583496
    5. '(' → logprob: -8.883009910583496
    6. 'idx' → logprob: -9.008009910583496
    7. '```' → logprob: -9.758009910583496
    8. 'w' → logprob: -10.008009910583496
    9. ' (' → logprob: -10.383009910583496
    10. '(u' → logprob: -10.508009910583496

Token 238: ',w' (ID: 49598)
  Prédit: ',w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.10553103685379028
    2. ',' → logprob: -2.6055309772491455
    3. ',c' → logprob: -3.8555309772491455
    4. ',(' → logprob: -6.230531215667725
    5. ',d' → logprob: -6.605531215667725
    6. ',u' → logprob: -6.855531215667725
    7. ',z' → logprob: -7.730531215667725
    8. ' ,' → logprob: -8.855530738830566
    9. ',l' → logprob: -9.730530738830566
    10. ',v' → logprob: -10.730530738830566

Token 239: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09503918141126633
    2. 'in' → logprob: -2.470039129257202
    3. ',' → logprob: -5.220039367675781
    4. ' ,' → logprob: -7.720039367675781
    5. ',v' → logprob: -9.345039367675781
    6. ' ' → logprob: -9.595039367675781
    7. ',in' → logprob: -10.595039367675781
    8. ')' → logprob: -11.220039367675781
    9. ',w' → logprob: -11.720039367675781
    10. ',u' → logprob: -12.220039367675781

Token 240: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.04859702289104462
    2. ' adj' → logprob: -3.0485970973968506
    3. 'enumer' → logprob: -12.17359733581543
    4. '(adj' → logprob: -12.79859733581543
    5. 'ad' → logprob: -13.67359733581543
    6. 'range' → logprob: -15.04859733581543
    7. '```' → logprob: -16.67359733581543
    8. '_adj' → logprob: -16.92359733581543
    9. ' ' → logprob: -17.17359733581543
    10. 'Adj' → logprob: -18.29859733581543

Token 241: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -2.339278580620885e-06
    2. '[' → logprob: -13.250001907348633
    3. 'u' → logprob: -15.625001907348633
    4. ',u' → logprob: -16.375001907348633
    5. '
' → logprob: -16.750001907348633
    6. '(u' → logprob: -16.875001907348633
    7. ' [' → logprob: -17.500001907348633
    8. '[v' → logprob: -17.625001907348633
    9. '[
' → logprob: -18.000001907348633
    10. '

' → logprob: -18.000001907348633

Token 242: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.012726366519927979
    2. '):' → logprob: -4.887726306915283
    3. ']:
' → logprob: -5.887726306915283
    4. ':' → logprob: -6.387726306915283
    5. '           ' → logprob: -8.887726783752441
    6. '       ' → logprob: -9.012726783752441
    7. ']' → logprob: -9.262726783752441
    8. '):
' → logprob: -9.387726783752441
    9. '[' → logprob: -9.512726783752441
    10. '}:' → logprob: -10.637726783752441

Token 243: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.023612188175320625
    2. '           ' → logprob: -4.273612022399902
    3. '                
' → logprob: -5.398612022399902
    4. ' ' → logprob: -7.148612022399902
    5. ' 
' → logprob: -7.273612022399902
    6. '                ' → logprob: -7.648612022399902
    7. '<|end|>' → logprob: -7.773612022399902
    8. '            ' → logprob: -8.273612022399902
    9. '```' → logprob: -8.273612022399902
    10. '                   ' → logprob: -8.398612022399902

Token 244: ' for' (ID: 395)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.3080403804779053
    2. ' new' → logprob: -1.3080403804779053
    3. 'new' → logprob: -1.9330403804779053
    4. 'if' → logprob: -2.4330403804779053
    5. '               ' → logprob: -2.6830403804779053
    6. 'next' → logprob: -3.0580403804779053
    7. ' next' → logprob: -3.3080403804779053
    8. ' time' → logprob: -4.808040618896484
    9. '                   ' → logprob: -4.933040618896484
    10. ' for' → logprob: -5.058040618896484

Token 245: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5009813904762268
    2. ' i' → logprob: -1.250981330871582
    3. ' horse' → logprob: -3.500981330871582
    4. 'range' → logprob: -4.000981330871582
    5. 'i' → logprob: -4.125981330871582
    6. ' t' → logprob: -5.125981330871582
    7. ' used' → logprob: -5.250981330871582
    8. 'horse' → logprob: -5.375981330871582
    9. ' k' → logprob: -5.500981330871582
    10. ' mask' → logprob: -5.500981330871582

Token 246: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038110461086034775
    2. 'in' → logprob: -3.2881104946136475
    3. ' ' → logprob: -10.038110733032227
    4. '<|end|>' → logprob: -11.038110733032227
    5. '	in' → logprob: -12.163110733032227
    6. ',' → logprob: -14.913110733032227
    7. '0' → logprob: -14.913110733032227
    8. 'range' → logprob: -15.163110733032227
    9. ' ,' → logprob: -15.288110733032227
    10. '	' → logprob: -15.288110733032227

Token 247: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2519310414791107
    2. 'range' → logprob: -1.501931071281433
    3. '(range' → logprob: -13.751931190490723
    4. '	range' → logprob: -14.376931190490723
    5. ' xrange' → logprob: -15.376931190490723
    6. '
' → logprob: -17.251930236816406
    7. ' ' → logprob: -17.876930236816406
    8. ')' → logprob: -17.876930236816406
    9. 'rang' → logprob: -18.001930236816406
    10. '.range' → logprob: -18.251930236816406

Token 248: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005614596419036388
    2. '(n' → logprob: -5.255614757537842
    3. ' n' → logprob: -7.880614757537842
    4. '	n' → logprob: -13.880614280700684
    5. '
' → logprob: -14.005614280700684
    6. 'len' → logprob: -15.630614280700684
    7. ')n' → logprob: -15.880614280700684
    8. ',n' → logprob: -16.005615234375
    9. '[n' → logprob: -16.255615234375
    10. '(len' → logprob: -16.380615234375

Token 249: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.22606885433197021
    2. '):' → logprob: -1.6010688543319702
    3. ' ):
' → logprob: -7.85106897354126
    4. ' ):' → logprob: -8.851068496704102
    5. '):
' → logprob: -9.476068496704102
    6. ')' → logprob: -11.351068496704102
    7. '):

' → logprob: -11.976068496704102
    8. '():
' → logprob: -12.351068496704102
    9. '               ' → logprob: -12.476068496704102
    10. '           ' → logprob: -12.726068496704102

Token 250: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3894185721874237
    2. ' if' → logprob: -2.264418601989746
    3. '<|end|>' → logprob: -2.639418601989746
    4. ' ' → logprob: -2.889418601989746
    5. '               ' → logprob: -3.139418601989746
    6. '                ' → logprob: -4.389418601989746
    7. '           ' → logprob: -4.389418601989746
    8. '    ' → logprob: -5.264418601989746
    9. '   ' → logprob: -5.264418601989746
    10. '                    ' → logprob: -6.014418601989746

Token 251: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.05397629365324974
    2. 'if' (adapté à ' if') → logprob: -3.55397629737854
    3. '<|end|>' → logprob: -4.553976058959961
    4. ' ' → logprob: -5.053976058959961
    5. '               ' → logprob: -6.303976058959961
    6. '                               ' → logprob: -6.303976058959961
    7. '   ' → logprob: -7.303976058959961
    8. ' 
' → logprob: -7.803976058959961
    9. '                       ' → logprob: -7.803976058959961
    10. '                   ' → logprob: -8.053976058959961

Token 252: ' (' (ID: 350)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.11011576652526855
    2. ' (' → logprob: -2.8601157665252686
    3. '(' → logprob: -3.7351157665252686
    4. '(not' → logprob: -4.360116004943848
    5. 'not' → logprob: -5.235116004943848
    6. '((' → logprob: -5.860116004943848
    7. 'used' → logprob: -6.985116004943848
    8. ' used' → logprob: -7.235116004943848
    9. ' ((' → logprob: -7.735116004943848
    10. '(((' → logprob: -10.985116004943848

Token 253: 'used' (ID: 4943)
  Prédit: 'used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.4623938798904419
    2. '(' → logprob: -1.087393879890442
    3. ' used' → logprob: -4.212393760681152
    4. ' (' → logprob: -4.337393760681152
    5. ' not' → logprob: -6.087393760681152
    6. 'not' → logprob: -6.462393760681152
    7. '(not' → logprob: -6.712393760681152
    8. '((' → logprob: -8.962393760681152
    9. ')' → logprob: -11.212393760681152
    10. '_used' → logprob: -11.587393760681152

Token 254: '&(' (ID: 135979)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.11539596319198608
    2. ' &' → logprob: -2.740396022796631
    3. '&' → logprob: -3.240396022796631
    4. '&(' → logprob: -5.615396022796631
    5. ' >>' → logprob: -6.740396022796631
    6. '>>(' → logprob: -8.490395545959473
    7. '>>&' → logprob: -9.240395545959473
    8. '&gt' → logprob: -9.990395545959473
    9. '&r' → logprob: -9.990395545959473
    10. '&
' → logprob: -10.990395545959473

Token 255: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033558503491804004
    2. '(' → logprob: -8.000335693359375
    3. ' ' → logprob: -15.625335693359375
    4. ' (' → logprob: -17.500335693359375
    5. '   ' → logprob: -18.125335693359375
    6. '           ' → logprob: -19.500335693359375
    7. ')' → logprob: -19.500335693359375
    8. '
' → logprob: -20.000335693359375
    9. '```' → logprob: -20.500335693359375
    10. '{' → logprob: -21.125335693359375

Token 256: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -7.922563963802531e-05
    2. ' <<' → logprob: -10.250079154968262
    3. '<' → logprob: -11.125079154968262
    4. '<<(' → logprob: -11.750079154968262
    5. '>>' → logprob: -11.875079154968262
    6. ')<<' → logprob: -12.125079154968262
    7. '1' → logprob: -12.375079154968262
    8. '()<<' → logprob: -13.500079154968262
    9. '<<<' → logprob: -13.875079154968262
    10. '```' → logprob: -14.625079154968262

Token 257: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0325924449716695e-05
    2. ' i' → logprob: -11.50001049041748
    3. ')i' → logprob: -16.375009536743164
    4. '	i' → logprob: -17.750009536743164
    5. '   ' → logprob: -18.000009536743164
    6. ')' → logprob: -19.125009536743164
    7. '
' → logprob: -20.125009536743164
    8. '(i' → logprob: -20.250009536743164
    9. '```' → logprob: -20.250009536743164
    10. '           ' → logprob: -20.875009536743164

Token 258: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00013274075172375888
    2. ')==' → logprob: -9.00013256072998
    3. ')' → logprob: -12.25013256072998
    4. '==' → logprob: -12.87513256072998
    5. ' ))' → logprob: -13.37513256072998
    6. '0' → logprob: -16.500133514404297
    7. ' )' → logprob: -16.875133514404297
    8. ')):
' → logprob: -17.000133514404297
    9. ')))' → logprob: -17.875133514404297
    10. ')):' → logprob: -18.250133514404297

Token 259: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03480206057429314
    2. ')==' → logprob: -3.409801959991455
    3. ']==' → logprob: -7.159801959991455
    4. ' ==' → logprob: -8.409802436828613
    5. ')' → logprob: -9.659802436828613
    6. '==
' → logprob: -9.659802436828613
    7. '=' → logprob: -11.784802436828613
    8. '===' → logprob: -11.784802436828613
    9. '()==' → logprob: -11.909802436828613
    10. '")==' → logprob: -12.534802436828613

Token 260: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '000' → logprob: -18.875001907348633
    4. '۰' → logprob: -19.375001907348633
    5. '00' → logprob: -19.625001907348633
    6. '   ' → logprob: -20.125001907348633
    7. '０' → logprob: -20.875001907348633
    8. '```' → logprob: -22.125001907348633
    9. ')' → logprob: -22.625001907348633
    10. '  ' → logprob: -22.625001907348633

Token 261: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16661258041858673
    2. ' and' → logprob: -2.0416126251220703
    3. ':
' → logprob: -3.7916126251220703
    4. '                       ' → logprob: -8.16661262512207
    5. 'and' → logprob: -8.41661262512207
    6. ',' → logprob: -8.66661262512207
    7. ' :' → logprob: -9.29161262512207
    8. '                           ' → logprob: -9.54161262512207
    9. '                   ' → logprob: -9.66661262512207
    10. '<|end|>' → logprob: -10.16661262512207

Token 262: '                       ' (ID: 968)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0056196451187134
    2. '                       ' → logprob: -1.0056196451187134
    3. ' and' → logprob: -1.8806196451187134
    4. ':
' → logprob: -3.380619525909424
    5. ' ' → logprob: -4.005619525909424
    6. '                   ' → logprob: -4.130619525909424
    7. ',' → logprob: -4.505619525909424
    8. '                               ' → logprob: -4.630619525909424
    9. ' :' → logprob: -5.130619525909424
    10. '                           ' → logprob: -5.255619525909424

Token 263: ' nxt' (ID: 160200)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -1.1081031560897827
    2. ' time' → logprob: -1.4831031560897827
    3. ' new' → logprob: -1.9831031560897827
    4. ' next' → logprob: -2.4831032752990723
    5. 'next' → logprob: -2.6081032752990723
    6. 'new' → logprob: -3.1081032752990723
    7. 't' → logprob: -3.4831032752990723
    8. ' t' → logprob: -3.6081032752990723
    9. 'ntime' → logprob: -4.358103275299072
    10. 'speed' → logprob: -5.233103275299072

Token 264: '_cost' (ID: 36820)
  Prédit: '_used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.443617582321167
    2. '_cost' → logprob: -1.693617582321167
    3. 'used' → logprob: -2.443617582321167
    4. 'cost' → logprob: -3.068617582321167
    5. ' =' → logprob: -3.693617582321167
    6. '=' → logprob: -4.693617820739746
    7. '_time' → logprob: -5.693617820739746
    8. '_dist' → logprob: -6.443617820739746
    9. 'dist' → logprob: -7.193617820739746
    10. '   ' → logprob: -8.068617820739746

Token 265: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47409316897392273
    2. '=' → logprob: -0.9740931987762451
    3. '=w' → logprob: -11.849093437194824
    4. ')' → logprob: -13.349093437194824
    5. '=c' → logprob: -13.599093437194824
    6. '=time' → logprob: -13.849093437194824
    7. '=float' → logprob: -14.099093437194824
    8. '=n' → logprob: -14.224093437194824
    9. ',' → logprob: -14.474093437194824
    10. ' =
' → logprob: -15.224093437194824

Token 266: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.025130320340394974
    2. ' cost' → logprob: -3.775130271911621
    3. 'max' → logprob: -6.650130271911621
    4. 'dist' → logprob: -8.275130271911621
    5. ' max' → logprob: -8.525130271911621
    6. 'w' → logprob: -9.525130271911621
    7. ' dist' → logprob: -10.775130271911621
    8. '(cost' → logprob: -10.900130271911621
    9. ' w' → logprob: -12.275130271911621
    10. 'math' → logprob: -12.650130271911621

Token 267: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.23359797894954681
    2. ' +' → logprob: -1.608597993850708
    3. '+w' → logprob: -4.858597755432129
    4. '+(' → logprob: -7.983597755432129
    5. ' +(' → logprob: -10.733597755432129
    6. ' ' → logprob: -12.483597755432129
    7. ' plus' → logprob: -12.608597755432129
    8. '+c' → logprob: -12.733597755432129
    9. '+s' → logprob: -12.858597755432129
    10. '+
' → logprob: -13.358597755432129

Token 268: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.005627631675451994
    2. '(w' → logprob: -5.630627632141113
    3. ' w' → logprob: -6.255627632141113
    4. ' (' → logprob: -10.630627632141113
    5. 'abs' → logprob: -11.130627632141113
    6. 'float' → logprob: -11.380627632141113
    7. '(' → logprob: -11.505627632141113
    8. 'math' → logprob: -11.630627632141113
    9. '   ' → logprob: -12.255627632141113
    10. ' ' → logprob: -12.755627632141113

Token 269: '/h' (ID: 14174)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.40668049454689026
    2. '/h' → logprob: -1.1566804647445679
    3. ' /' → logprob: -4.031680583953857
    4. '/math' → logprob: -6.406680583953857
    5. '/he' → logprob: -10.1566801071167
    6. '/s' → logprob: -10.5316801071167
    7. '/c' → logprob: -10.7816801071167
    8. '/colors' → logprob: -10.9066801071167
    9. '/(' → logprob: -11.4066801071167
    10. '/
/' → logprob: -11.5316801071167

Token 270: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.18053551018238068
    2. 'hors' → logprob: -1.8055355548858643
    3. ' horses' → logprob: -7.680535316467285
    4. 'orse' → logprob: -9.180535316467285
    5. 'or' → logprob: -9.430535316467285
    6. '```' → logprob: -10.055535316467285
    7. 'ores' → logprob: -10.305535316467285
    8. 'h' → logprob: -11.555535316467285
    9. '[' → logprob: -11.930535316467285
    10. 's' → logprob: -12.430535316467285

Token 271: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -2.935296834039036e-06
    2. 'e' → logprob: -13.62500286102295
    3. '[' → logprob: -14.75000286102295
    4. 'ses' → logprob: -15.00000286102295
    5. 'oes' → logprob: -15.12500286102295
    6. '```' → logprob: -15.37500286102295
    7. '``' → logprob: -16.375003814697266
    8. 'eses' → logprob: -16.625003814697266
    9. '{' → logprob: -17.000003814697266
    10. 'esp' → logprob: -17.000003814697266

Token 272: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.125000953674316
    3. 'i' → logprob: -15.500000953674316
    4. '[
' → logprob: -17.375001907348633
    5. '```' → logprob: -18.750001907348633
    6. ' [' → logprob: -19.375001907348633
    7. '[u' → logprob: -19.500001907348633
    8. '[n' → logprob: -19.500001907348633
    9. '[v' → logprob: -19.500001907348633
    10. '[j' → logprob: -19.500001907348633

Token 273: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03183326870203018
    2. '[i' → logprob: -4.531833171844482
    3. '])' → logprob: -4.906833171844482
    4. ')' → logprob: -4.906833171844482
    5. '<|end|>' → logprob: -6.406833171844482
    6. ' ]' → logprob: -6.531833171844482
    7. '[' → logprob: -6.906833171844482
    8. ']
' → logprob: -7.656833171844482
    9. '                       ' → logprob: -8.03183364868164
    10. ' )' → logprob: -9.03183364868164

Token 274: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.36534425616264343
    2. '
' → logprob: -2.115344285964966
    3. ')' → logprob: -2.615344285964966
    4. '                        
' → logprob: -2.990344285964966
    5. '<|end|>' → logprob: -3.865344285964966
    6. ' if' → logprob: -4.490344047546387
    7. '               ' → logprob: -4.990344047546387
    8. '                        ' → logprob: -5.865344047546387
    9. 'if' → logprob: -5.865344047546387
    10. ' ' → logprob: -6.115344047546387

Token 275: ' nxt' (ID: 160200)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002655797405168414
    2. ' if' → logprob: -6.002655982971191
    3. '                       ' → logprob: -8.752655982971191
    4. '                           ' → logprob: -11.877655982971191
    5. ')' → logprob: -12.002655982971191
    6. '```' → logprob: -13.002655982971191
    7. '                        
' → logprob: -13.252655982971191
    8. '                               ' → logprob: -14.252655982971191
    9. 'next' → logprob: -14.252655982971191
    10. '                   ' → logprob: -14.502655982971191

Token 276: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.06613840907812119
    2. '_cost' → logprob: -2.941138505935669
    3. 'used' → logprob: -4.56613826751709
    4. 'cost' → logprob: -8.19113826751709
    5. '_dist' → logprob: -8.44113826751709
    6. '_state' → logprob: -9.81613826751709
    7. ' =' → logprob: -9.94113826751709
    8. '=' → logprob: -10.31613826751709
    9. '_' → logprob: -10.44113826751709
    10. '_usage' → logprob: -10.69113826751709

Token 277: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869701325893402
    2. ' =' → logprob: -1.1369701623916626
    3. '|' → logprob: -9.386970520019531
    4. ' |=' → logprob: -11.511970520019531
    5. '=(' → logprob: -12.761970520019531
    6. '[' → logprob: -14.011970520019531
    7. '=n' → logprob: -14.636970520019531
    8. ' ' → logprob: -14.886970520019531
    9. ' =(' → logprob: -15.761970520019531
    10. ']' → logprob: -16.01197052001953

Token 278: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.0007100477814674377
    2. ' used' → logprob: -7.2507100105285645
    3. '   ' → logprob: -16.500709533691406
    4. ' ' → logprob: -19.250709533691406
    5. '  ' → logprob: -19.625709533691406
    6. '.used' → logprob: -19.875709533691406
    7. '_used' → logprob: -20.375709533691406
    8. 'Used' → logprob: -20.500709533691406
    9. '```' → logprob: -20.625709533691406
    10. '-used' → logprob: -21.250709533691406

Token 279: '|(' (ID: 153684)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.01729736290872097
    2. '|(' → logprob: -4.267297267913818
    3. ' |' → logprob: -5.767297267913818
    4. '│' → logprob: -14.392297744750977
    5. '|(
' → logprob: -16.892297744750977
    6. '```' → logprob: -17.017297744750977
    7. '(' → logprob: -17.142297744750977
    8. ' ' → logprob: -18.142297744750977
    9. '   ' → logprob: -18.392297744750977
    10. '|get' → logprob: -18.517297744750977

Token 280: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004891689168289304
    2. '(' → logprob: -7.625489234924316
    3. ' ' → logprob: -14.500489234924316
    4. ' (' → logprob: -14.625489234924316
    5. '```' → logprob: -16.12548828125
    6. '   ' → logprob: -19.12548828125
    7. '`' → logprob: -19.25048828125
    8. '(i' → logprob: -19.62548828125
    9. '``' → logprob: -19.62548828125
    10. '{' → logprob: -19.75048828125

Token 281: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.03394385427236557
    2. '1' → logprob: -4.0339436531066895
    3. '(' → logprob: -4.1589436531066895
    4. '```' → logprob: -10.908944129943848
    5. '<' → logprob: -11.908944129943848
    6. ' <<' → logprob: -12.408944129943848
    7. '(i' → logprob: -12.408944129943848
    8. '()<<' → logprob: -12.908944129943848
    9. ')<<' → logprob: -13.158944129943848
    10. '>>' → logprob: -13.658944129943848

Token 282: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.320199877838604e-07
    2. ' i' → logprob: -14.75
    3. '(i' → logprob: -19.875
    4. '[i' → logprob: -20.625
    5. '	i' → logprob: -20.875
    6. '```' → logprob: -21.5
    7. ')i' → logprob: -22.0
    8. '   ' → logprob: -22.75
    9. '{i' → logprob: -23.25
    10. '<|end|>' → logprob: -23.375

Token 283: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005942309740930796
    2. ')
' → logprob: -5.130942344665527
    3. ')
' → logprob: -12.130942344665527
    4. ' )' → logprob: -13.130942344665527
    5. '                       ' → logprob: -13.630942344665527
    6. ')`' → logprob: -13.630942344665527
    7. '))' → logprob: -14.380942344665527
    8. ')

' → logprob: -14.505942344665527
    9. ')`
' → logprob: -14.505942344665527
    10. '')' → logprob: -15.005942344665527

Token 284: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.018204733729362488
    2. '               ' → logprob: -5.143204689025879
    3. '                        
' → logprob: -5.393204689025879
    4. ')' → logprob: -5.768204689025879
    5. '<|end|>' → logprob: -6.268204689025879
    6. '```' → logprob: -7.393204689025879
    7. '                           ' → logprob: -7.643204689025879
    8. ' if' → logprob: -8.143204689025879
    9. '
' → logprob: -8.268204689025879
    10. '           ' → logprob: -8.643204689025879

Token 285: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0024856459349393845
    2. ' if' → logprob: -6.002485752105713
    3. '                       ' → logprob: -11.627485275268555
    4. '                           ' → logprob: -14.502485275268555
    5. '```' → logprob: -15.377485275268555
    6. 'import' → logprob: -16.002485275268555
    7. '	if' → logprob: -17.002485275268555
    8. '                               ' → logprob: -17.127485275268555
    9. '                   ' → logprob: -17.252485275268555
    10. 'If' → logprob: -17.252485275268555

Token 286: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5714365243911743
    2. ' dist' → logprob: -0.9464365243911743
    3. 'n' → logprob: -3.4464364051818848
    4. ' nxt' → logprob: -4.196436405181885
    5. ' n' → logprob: -9.696436882019043
    6. '(dist' → logprob: -10.321436882019043
    7. '	dist' → logprob: -10.321436882019043
    8. 'nx' → logprob: -10.821436882019043
    9. '   ' → logprob: -10.883936882019043
    10. 'd' → logprob: -11.071436882019043

Token 287: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.644463479053229e-05
    2. 'v' → logprob: -10.000046730041504
    3. '[u' → logprob: -15.250046730041504
    4. '][' → logprob: -15.375046730041504
    5. '```' → logprob: -16.125045776367188
    6. '[' → logprob: -16.750045776367188
    7. '[next' → logprob: -16.875045776367188
    8. ' v' → logprob: -17.000045776367188
    9. '<v' → logprob: -17.000045776367188
    10. ')v' → logprob: -17.125045776367188

Token 288: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.3487073481082916
    2. '[n' → logprob: -1.2237073183059692
    3. 'n' → logprob: -9.09870719909668
    4. '[' → logprob: -9.72370719909668
    5. '[next' → logprob: -11.09870719909668
    6. ']][' → logprob: -11.34870719909668
    7. '```' → logprob: -11.34870719909668
    8. ']' → logprob: -11.72370719909668
    9. '[v' → logprob: -11.97370719909668
    10. ')[' → logprob: -12.09870719909668

Token 289: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0280383548888494e-06
    2. '```' → logprob: -14.625000953674316
    3. '[n' → logprob: -16.125001907348633
    4. '
' → logprob: -16.250001907348633
    5. '][' → logprob: -16.875001907348633
    6. '``' → logprob: -17.000001907348633
    7. 'used' → logprob: -17.125001907348633
    8. '   ' → logprob: -17.250001907348633
    9. '	n' → logprob: -17.625001907348633
    10. ']' → logprob: -17.625001907348633

Token 290: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -7.896309739408025e-07
    2. 'x' → logprob: -14.375000953674316
    3. '```' → logprob: -16.75
    4. 'ext' → logprob: -17.25
    5. 'used' → logprob: -18.75
    6. '``' → logprob: -19.25
    7. '[' → logprob: -19.625
    8. '   ' → logprob: -19.875
    9. 'xta' → logprob: -19.875
    10. '
' → logprob: -20.0

Token 291: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.000712670327629894
    2. 'used' → logprob: -7.250712871551514
    3. '```' → logprob: -13.625712394714355
    4. '_cost' → logprob: -14.250712394714355
    5. '_USED' → logprob: -15.250712394714355
    6. 'Used' → logprob: -15.500712394714355
    7. '   ' → logprob: -16.625713348388672
    8. '
' → logprob: -16.625713348388672
    9. '[' → logprob: -17.000713348388672
    10. '_use' → logprob: -17.125713348388672

Token 292: ']>' (ID: 54651)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.20693108439445496
    2. ']>' → logprob: -1.7069311141967773
    3. ']' → logprob: -5.456931114196777
    4. ' >' → logprob: -6.706931114196777
    5. '">' → logprob: -12.831931114196777
    6. ' ]' → logprob: -13.331931114196777
    7. '>]' → logprob: -13.456931114196777
    8. '>x' → logprob: -13.581931114196777
    9. ']>
' → logprob: -13.581931114196777
    10. '>w' → logprob: -14.206931114196777

Token 293: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014175265096127987
    2. ' nxt' → logprob: -4.2641754150390625
    3. 'nx' → logprob: -13.139175415039062
    4. '(n' → logprob: -13.264175415039062
    5. '	n' → logprob: -13.389175415039062
    6. ' n' → logprob: -13.889175415039062
    7. '[n' → logprob: -14.389175415039062
    8. 'x' → logprob: -14.514175415039062
    9. 'next' → logprob: -14.639175415039062
    10. 'nt' → logprob: -14.639175415039062

Token 294: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -5.8126592193730175e-05
    2. 'x' → logprob: -10.0000581741333
    3. '```' → logprob: -12.1250581741333
    4. 'ext' → logprob: -12.3750581741333
    5. 't' → logprob: -14.5000581741333
    6. '   ' → logprob: -14.7500581741333
    7. '``' → logprob: -15.0000581741333
    8. '[' → logprob: -15.1250581741333
    9. ' xt' → logprob: -15.5000581741333
    10. 'a' → logprob: -15.6250581741333

Token 295: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -4.23917081207037e-05
    2. 'cost' → logprob: -10.250041961669922
    3. '_COST' → logprob: -12.875041961669922
    4. 't' → logprob: -13.375041961669922
    5. 'Cost' → logprob: -14.000041961669922
    6. 'x' → logprob: -14.250041961669922
    7. ' cost' → logprob: -14.375041961669922
    8. 'xt' → logprob: -14.625041961669922
    9. '-cost' → logprob: -16.125041961669922
    10. '.cost' → logprob: -16.875041961669922

Token 296: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05655142292380333
    2. ':
' → logprob: -2.931551456451416
    3. '=' → logprob: -6.806551456451416
    4. '                           ' → logprob: -8.056550979614258
    5. '):
' → logprob: -9.181550979614258
    6. '):' → logprob: -9.931550979614258
    7. '                       ' → logprob: -10.306550979614258
    8. '<|end|>' → logprob: -11.181550979614258
    9. ' :' → logprob: -12.306550979614258
    10. '():
' → logprob: -12.431550979614258

Token 297: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.005390638019889593
    2. '                       ' → logprob: -5.505390644073486
    3. '```' → logprob: -7.505390644073486
    4. '                               ' → logprob: -8.130390167236328
    5. '           ' → logprob: -9.505390167236328
    6. '                            ' → logprob: -9.630390167236328
    7. '<|end|>' → logprob: -9.880390167236328
    8. '               ' → logprob: -9.880390167236328
    9. '[' → logprob: -10.005390167236328
    10. '                   ' → logprob: -10.130390167236328

Token 298: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.1002335250377655
    2. ' dist' → logprob: -2.350233554840088
    3. '                               ' → logprob: -10.72523307800293
    4. '                           ' → logprob: -12.97523307800293
    5. '	dist' → logprob: -13.85023307800293
    6. '```' → logprob: -14.10023307800293
    7. '_dist' → logprob: -15.22523307800293
    8. 'Dist' → logprob: -15.72523307800293
    9. '.dist' → logprob: -15.72523307800293
    10. '(dist' → logprob: -15.97523307800293

Token 299: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.9361264946837764e-07
    2. 'v' → logprob: -16.125
    3. '```' → logprob: -18.125
    4. '<v' → logprob: -19.5
    5. '	v' → logprob: -20.0
    6. '][' → logprob: -20.25
    7. '[u' → logprob: -20.625
    8. '[' → logprob: -20.875
    9. '=v' → logprob: -21.0
    10. '[val' → logprob: -21.125

Token 300: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.09461698681116104
    2. '[n' → logprob: -2.7196168899536133
    3. '[v' → logprob: -3.7196168899536133
    4. ']' → logprob: -10.719616889953613
    5. '[' → logprob: -10.844616889953613
    6. '"][' → logprob: -10.969616889953613
    7. 'n' → logprob: -11.219616889953613
    8. '<|end|>' → logprob: -11.844616889953613
    9. ')[' → logprob: -11.969616889953613
    10. '                           ' → logprob: -12.219616889953613

Token 301: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.9361264946837764e-07
    2. ' n' → logprob: -16.75
    3. '[' → logprob: -16.875
    4. '[n' → logprob: -17.5
    5. '```' → logprob: -17.5
    6. '   ' → logprob: -17.875
    7. ' nxt' → logprob: -18.125
    8. '(n' → logprob: -18.125
    9. '	n' → logprob: -18.375
    10. '][' → logprob: -18.375

Token 302: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -9.372294698550832e-06
    2. 'used' → logprob: -12.750009536743164
    3. 'x' → logprob: -12.875009536743164
    4. '_used' → logprob: -13.000009536743164
    5. '```' → logprob: -14.625009536743164
    6. 'st' → logprob: -14.625009536743164
    7. '   ' → logprob: -15.375009536743164
    8. 'Used' → logprob: -16.375009536743164
    9. 'xed' → logprob: -16.375009536743164
    10. '
' → logprob: -16.750009536743164

Token 303: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.00039968726923689246
    2. 'used' → logprob: -8.250399589538574
    3. '_cost' → logprob: -9.000399589538574
    4. 'Used' → logprob: -11.625399589538574
    5. '```' → logprob: -13.125399589538574
    6. '   ' → logprob: -14.125399589538574
    7. '_USED' → logprob: -14.250399589538574
    8. 'cost' → logprob: -14.375399589538574
    9. '
' → logprob: -15.125399589538574
    10. '_use' → logprob: -15.625399589538574

Token 304: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0351334773004055
    2. ' =' → logprob: -3.7851333618164062
    3. ']=' → logprob: -4.660133361816406
    4. '=n' → logprob: -6.285133361816406
    5. ']' → logprob: -7.660133361816406
    6. '=w' → logprob: -11.910133361816406
    7. ')=' → logprob: -12.535133361816406
    8. '=v' → logprob: -12.660133361816406
    9. '=
' → logprob: -13.785133361816406
    10. '=q' → logprob: -14.285133361816406

Token 305: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00012368128227535635
    2. ' nxt' → logprob: -9.000123977661133
    3. ' n' → logprob: -16.125123977661133
    4. '	n' → logprob: -16.375123977661133
    5. '(n' → logprob: -18.375123977661133
    6. 'next' → logprob: -18.500123977661133
    7. 't' → logprob: -18.750123977661133
    8. '
' → logprob: -19.000123977661133
    9. 'nx' → logprob: -19.000123977661133
    10. '[n' → logprob: -19.000123977661133

Token 306: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: 0.0
    2. '```' → logprob: -17.0
    3. 'x' → logprob: -17.5
    4. 't' → logprob: -17.5
    5. '   ' → logprob: -19.0
    6. 'ext' → logprob: -20.375
    7. '       ' → logprob: -20.375
    8. '``' → logprob: -20.5
    9. '
' → logprob: -20.625
    10. ' xt' → logprob: -20.75

Token 307: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -3.128163257315464e-07
    2. 'cost' → logprob: -15.625
    3. 'Cost' → logprob: -17.375
    4. '_COST' → logprob: -17.625
    5. '_used' → logprob: -19.25
    6. ' cost' → logprob: -19.875
    7. '_c' → logprob: -20.125
    8. '_' → logprob: -20.25
    9. '-cost' → logprob: -20.875
    10. '.cost' → logprob: -22.625

Token 308: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -9.877503907773644e-05
    2. 'heap' → logprob: -9.500099182128906
    3. '                       ' → logprob: -11.625099182128906
    4. '						' → logprob: -12.375099182128906
    5. ' heap' → logprob: -13.000099182128906
    6. '                            ' → logprob: -13.125099182128906
    7. '           ' → logprob: -13.250099182128906
    8. '                               ' → logprob: -13.375099182128906
    9. '                          ' → logprob: -14.125099182128906
    10. '                   ' → logprob: -14.500099182128906

Token 309: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.03003961220383644
    2. 'heap' → logprob: -3.5300395488739014
    3. ' heap' → logprob: -8.78003978729248
    4. '                               ' → logprob: -10.03003978729248
    5. '                       ' → logprob: -10.15503978729248
    6. '                            ' → logprob: -11.15503978729248
    7. '						' → logprob: -11.90503978729248
    8. '```' → logprob: -12.15503978729248
    9. '                            
' → logprob: -12.28003978729248
    10. '           ' → logprob: -12.53003978729248

Token 310: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -4.320199877838604e-07
    2. ' heap' → logprob: -14.75
    3. 'he' → logprob: -19.125
    4. '                           ' → logprob: -23.625
    5. '(heap' → logprob: -23.875
    6. '_heap' → logprob: -24.0
    7. '.heap' → logprob: -24.125
    8. 'heat' → logprob: -24.125
    9. '```' → logprob: -24.75
    10. 'Heap' → logprob: -25.25

Token 311: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.981667537620524e-06
    2. 'p' → logprob: -13.375001907348633
    3. 'push' → logprob: -15.875001907348633
    4. 'h' → logprob: -16.250001907348633
    5. 'app' → logprob: -16.375001907348633
    6. 'he' → logprob: -18.000001907348633
    7. '.he' → logprob: -18.750001907348633
    8. 'f' → logprob: -18.875001907348633
    9. 'ush' → logprob: -19.000001907348633
    10. '```' → logprob: -19.125001907348633

Token 312: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -5.0259150157216936e-05
    2. '.heap' → logprob: -10.75005054473877
    3. '.push' → logprob: -11.50005054473877
    4. 'he' → logprob: -11.87505054473877
    5. '.' → logprob: -12.12505054473877
    6. 'q' → logprob: -13.00005054473877
    7. ' he' → logprob: -13.75005054473877
    8. 'push' → logprob: -15.00005054473877
    9. '```' → logprob: -15.00005054473877
    10. ' .' → logprob: -15.12505054473877

Token 313: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -7.576873758807778e-05
    2. 'pp' → logprob: -9.500075340270996
    3. 'ap' → logprob: -14.250075340270996
    4. 'push' → logprob: -16.375076293945312
    5. 'p' → logprob: -17.375076293945312
    6. 'q' → logprob: -17.625076293945312
    7. 'appen' → logprob: -18.000076293945312
    8. '[' → logprob: -18.500076293945312
    9. '```' → logprob: -18.625076293945312
    10. '_app' → logprob: -19.000076293945312

Token 314: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -7.44574936106801e-05
    2. 'push' → logprob: -10.37507438659668
    3. 'p' → logprob: -10.87507438659668
    4. 'app' → logprob: -11.37507438659668
    5. 'op' → logprob: -11.62507438659668
    6. 'pp' → logprob: -12.50007438659668
    7. '```' → logprob: -16.12507438659668
    8. 'q' → logprob: -17.62507438659668
    9. 'ap' → logprob: -17.87507438659668
    10. 'sh' → logprob: -17.87507438659668

Token 315: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -5.080963092041202e-06
    2. 'h' → logprob: -12.625004768371582
    3. '(' → logprob: -13.625004768371582
    4. '(q' → logprob: -16.3750057220459
    5. ',h' → logprob: -16.5000057220459
    6. ' h' → logprob: -16.7500057220459
    7. '(
' → logprob: -16.7500057220459
    8. '	h' → logprob: -16.7500057220459
    9. '(n' → logprob: -17.0000057220459
    10. '```' → logprob: -17.2500057220459

Token 316: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0008713211864233017
    2. '(h' → logprob: -7.125871181488037
    3. '(q' → logprob: -10.000871658325195
    4. 'hq' → logprob: -11.125871658325195
    5. 'qh' → logprob: -12.625871658325195
    6. 'h' → logprob: -14.125871658325195
    7. 'vq' → logprob: -14.625871658325195
    8. '	q' → logprob: -15.125871658325195
    9. 'sq' → logprob: -15.250871658325195
    10. 'Q' → logprob: -15.500871658325195

Token 317: ',(' (ID: 27243)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.8193366486229934e-05
    2. '((' → logprob: -11.500018119812012
    3. '(' → logprob: -11.875018119812012
    4. ',h' → logprob: -14.500018119812012
    5. ' (' → logprob: -16.125019073486328
    6. '(n' → logprob: -16.375019073486328
    7. '(heap' → logprob: -16.625019073486328
    8. '(q' → logprob: -16.625019073486328
    9. ' ' → logprob: -17.125019073486328
    10. 'h' → logprob: -17.250019073486328

Token 318: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.9153885558771435e-06
    2. ' nxt' → logprob: -12.125005722045898
    3. '(n' → logprob: -15.375005722045898
    4. ')n' → logprob: -16.5000057220459
    5. ' n' → logprob: -17.2500057220459
    6. '```' → logprob: -17.2500057220459
    7. '	n' → logprob: -17.3750057220459
    8. 'nx' → logprob: -17.3750057220459
    9. ')' → logprob: -18.6250057220459
    10. '   ' → logprob: -18.6250057220459

Token 319: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.00017302791820839047
    2. '_cost' → logprob: -8.87517261505127
    3. 'x' → logprob: -10.50017261505127
    4. 't' → logprob: -12.50017261505127
    5. '_xt' → logprob: -14.00017261505127
    6. '```' → logprob: -15.00017261505127
    7. 'st' → logprob: -15.37517261505127
    8. '[' → logprob: -16.250173568725586
    9. '
' → logprob: -16.375173568725586
    10. '   ' → logprob: -16.875173568725586

Token 320: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.0564331205387134e-05
    2. 'cost' → logprob: -11.75001049041748
    3. '_used' → logprob: -13.12501049041748
    4. 'Cost' → logprob: -15.75001049041748
    5. '_COST' → logprob: -16.250011444091797
    6. '_' → logprob: -16.250011444091797
    7. '_c' → logprob: -16.625011444091797
    8. 'n' → logprob: -16.750011444091797
    9. 'used' → logprob: -17.125011444091797
    10. '```' → logprob: -17.375011444091797

Token 321: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.014188768342137337
    2. ',' → logprob: -4.264188766479492
    3. ' ,' → logprob: -10.639188766479492
    4. 'v' → logprob: -13.764188766479492
    5. ' v' → logprob: -15.514188766479492
    6. '	v' → logprob: -16.764188766479492
    7. ',
' → logprob: -18.264188766479492
    8. '```' → logprob: -18.639188766479492
    9. '   ' → logprob: -19.514188766479492
    10. ' ' → logprob: -19.889188766479492

Token 322: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.004081485792994499
    2. ',' → logprob: -5.5040812492370605
    3. ' ,' → logprob: -12.754081726074219
    4. 'n' → logprob: -16.25408172607422
    5. ',
' → logprob: -17.00408172607422
    6. ',s' → logprob: -19.25408172607422
    7. ',N' → logprob: -19.37908172607422
    8. ',next' → logprob: -19.50408172607422
    9. '```' → logprob: -20.00408172607422
    10. ',w' → logprob: -20.00408172607422

Token 323: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.0001149867384810932
    2. '_used' → logprob: -10.125115394592285
    3. 'used' → logprob: -10.375115394592285
    4. 't' → logprob: -10.375115394592285
    5. 'x' → logprob: -11.500115394592285
    6. 'Used' → logprob: -13.500115394592285
    7. '_xt' → logprob: -15.000115394592285
    8. 'kt' → logprob: -16.25011444091797
    9. '
' → logprob: -16.62511444091797
    10. 'xed' → logprob: -16.75011444091797

Token 324: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.0002969703928101808
    2. 'used' → logprob: -8.125296592712402
    3. 'Used' → logprob: -14.875296592712402
    4. 'ed' → logprob: -15.500296592712402
    5. '_USED' → logprob: -15.500296592712402
    6. '```' → logprob: -17.00029754638672
    7. '_cost' → logprob: -17.25029754638672
    8. '-used' → logprob: -18.12529754638672
    9. 'USED' → logprob: -18.62529754638672
    10. '_' → logprob: -18.62529754638672

Token 325: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -9.949026571121067e-05
    2. '))
' → logprob: -9.750099182128906
    3. ')' → logprob: -10.250099182128906
    4. ' ))' → logprob: -12.250099182128906
    5. ')))' → logprob: -14.125099182128906
    6. '))

' → logprob: -16.375099182128906
    7. '                       ' → logprob: -17.250099182128906
    8. '));' → logprob: -17.625099182128906
    9. '))
' → logprob: -18.000099182128906
    10. '()))' → logprob: -18.125099182128906

Token 326: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 327: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 328: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007768734358251095
    2. ':
' → logprob: -7.500776767730713
    3. ' :' → logprob: -8.625777244567871
    4. '           ' → logprob: -10.500777244567871
    5. '       ' → logprob: -12.500777244567871
    6. '   ' → logprob: -12.750777244567871
    7. '<|end|>' → logprob: -13.125777244567871
    8. '[' → logprob: -13.625777244567871
    9. '        ' → logprob: -13.875777244567871
    10. '>' → logprob: -14.250777244567871

Token 329: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5570288300514221
    2. '           ' → logprob: -1.0570287704467773
    3. '       ' → logprob: -2.5570287704467773
    4. '   ' → logprob: -6.682028770446777
    5. ' print' → logprob: -7.182028770446777
    6. '               ' → logprob: -10.932028770446777
    7. ' ' → logprob: -11.182028770446777
    8. '	       ' → logprob: -11.557028770446777
    9. '```' → logprob: -12.682028770446777
    10. '	print' → logprob: -13.057028770446777

Token 330: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0010638902895152569
    2. '       ' → logprob: -7.001063823699951
    3. ' print' → logprob: -9.00106430053711
    4. '           ' → logprob: -10.62606430053711
    5. '   ' → logprob: -12.37606430053711
    6. '	print' → logprob: -15.00106430053711
    7. '```' → logprob: -15.87606430053711
    8. ' ' → logprob: -16.50106430053711
    9. '               ' → logprob: -17.62606430053711
    10. '        
' → logprob: -18.50106430053711

Token 331: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.006956780795007944
    2. '(' → logprob: -5.381956577301025
    3. '(-' → logprob: -6.381956577301025
    4. '('' → logprob: -7.756956577301025
    5. '("(' → logprob: -9.131957054138184
    6. '("("' → logprob: -10.631957054138184
    7. '       ' → logprob: -10.756957054138184
    8. '("-' → logprob: -10.756957054138184
    9. '   ' → logprob: -11.131957054138184
    10. '(
' → logprob: -12.506957054138184

Token 332: 'Impossible' (ID: 192245)
  Prédit: 'Impossible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Impossible' → logprob: -0.026897888630628586
    2. '-' → logprob: -4.15189790725708
    3. 'im' → logprob: -5.40189790725708
    4. '"' → logprob: -5.40189790725708
    5. 'IMP' → logprob: -6.52689790725708
    6. ' impossible' → logprob: -9.651897430419922
    7. 'un' → logprob: -9.651897430419922
    8. ' -' → logprob: -10.151897430419922
    9. ' Impossible' → logprob: -10.151897430419922
    10. 'Infinity' → logprob: -11.026897430419922

Token 333: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -5.9153885558771435e-06
    2. ')' → logprob: -12.625005722045898
    3. '")
' → logprob: -13.500005722045898
    4. ')")' → logprob: -14.500005722045898
    5. '")}' → logprob: -15.000005722045898
    6. '");' → logprob: -15.500005722045898
    7. '}")' → logprob: -17.1250057220459
    8. '<|end|>' → logprob: -17.3750057220459
    9. '')' → logprob: -17.6250057220459
    10. '```' → logprob: -18.0000057220459

Token 334: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 335: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.004096685443073511
    2. '__' → logprob: -5.504096508026123
    3. ' ' → logprob: -11.754096984863281
    4. '_' → logprob: -11.879096984863281
    5. ' _' → logprob: -14.129096984863281
    6. '_name' → logprob: -14.129096984863281
    7. ' ___' → logprob: -14.254096984863281
    8. '___' → logprob: -14.754096984863281
    9. ' ' → logprob: -15.129096984863281
    10. 'name' → logprob: -15.629096984863281

Token 336: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.13892556726932526
    2. ' ==' → logprob: -2.763925552368164
    3. ' __' → logprob: -2.763925552368164
    4. '<|end|>' → logprob: -6.388925552368164
    5. '==' → logprob: -6.888925552368164
    6. '_' → logprob: -8.013925552368164
    7. '_name' → logprob: -10.138925552368164
    8. ' ===' → logprob: -10.263925552368164
    9. ' =="' → logprob: -10.388925552368164
    10. '[' → logprob: -10.513925552368164

Token 337: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00042054426739923656
    2. '==' → logprob: -8.500420570373535
    3. '__.__' → logprob: -9.125420570373535
    4. '=="' → logprob: -9.500420570373535
    5. ' ==' → logprob: -11.125420570373535
    6. '____' → logprob: -12.500420570373535
    7. '___' → logprob: -12.750420570373535
    8. '__["' → logprob: -13.000420570373535
    9. '__('' → logprob: -13.125420570373535
    10. '=='' → logprob: -13.125420570373535

Token 338: '=="' (ID: 24027)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06407204270362854
    2. '==' → logprob: -3.6890721321105957
    3. '=="' → logprob: -3.9390721321105957
    4. ' ==' → logprob: -4.064072132110596
    5. '=='' → logprob: -7.939072132110596
    6. '_' → logprob: -10.939071655273438
    7. '__.__' → logprob: -11.064071655273438
    8. '___' → logprob: -11.689071655273438
    9. '==="' → logprob: -12.814071655273438
    10. '=' → logprob: -13.064071655273438

Token 339: '__' (ID: 771)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.15643274784088135
    2. ''' → logprob: -2.406432628631592
    3. '__' → logprob: -2.906432628631592
    4. ' "__' → logprob: -12.65643310546875
    5. ' '__' → logprob: -15.65643310546875
    6. '___' → logprob: -15.78143310546875
    7. 'main' → logprob: -15.78143310546875
    8. ''s' → logprob: -15.78143310546875
    9. ' __' → logprob: -16.40643310546875
    10. '"name' → logprob: -16.90643310546875

Token 340: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.038361500948667526
    2. '"' → logprob: -3.2883615493774414
    3. ''' → logprob: -8.788361549377441
    4. 'name' → logprob: -9.413361549377441
    5. '__' → logprob: -9.663361549377441
    6. '"name' → logprob: -11.413361549377441
    7. ' "__' → logprob: -11.913361549377441
    8. ' main' → logprob: -13.038361549377441
    9. '_main' → logprob: -13.538361549377441
    10. '"_' → logprob: -15.288361549377441

Token 341: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.26234936714172363
    2. '__' → logprob: -1.5123493671417236
    3. '__:' → logprob: -5.3873491287231445
    4. '__':
' → logprob: -6.0123491287231445
    5. ':' → logprob: -6.2623491287231445
    6. '_' → logprob: -7.1373491287231445
    7. ':
' → logprob: -8.262349128723145
    8. '():
' → logprob: -8.887349128723145
    9. '__["' → logprob: -9.262349128723145
    10. '__
' → logprob: -10.512349128723145

Token 342: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007698441040702164
    2. ' solve' → logprob: -7.37576961517334
    3. 'solve' → logprob: -9.50076961517334
    4. '    
' → logprob: -10.75076961517334
    5. '.solve' → logprob: -11.12576961517334
    6. '	s' → logprob: -11.25076961517334
    7. '```' → logprob: -11.62576961517334
    8. '   ' → logprob: -12.00076961517334
    9. '(s' → logprob: -13.50076961517334
    10. '<|end|>' → logprob: -14.25076961517334

Token 343: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -0.025130202993750572
    2. '   ' → logprob: -3.775130271911621
    3. ' solve' → logprob: -6.275130271911621
    4. '.solve' → logprob: -15.150130271911621
    5. '  ' → logprob: -16.525129318237305
    6. '	s' → logprob: -17.400129318237305
    7. ' ' → logprob: -17.525129318237305
    8. '```' → logprob: -17.775129318237305
    9. 'import' → logprob: -18.025129318237305
    10. '   ' → logprob: -18.150129318237305

Token 344: '()' (ID: 416)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7943171858787537
    2. '<|end|>' → logprob: -0.7943171858787537
    3. '\n' → logprob: -2.9193172454833984
    4. '()' → logprob: -3.6693172454833984
    5. '```' → logprob: -4.669317245483398
    6. ')' → logprob: -6.419317245483398
    7. '(' → logprob: -6.544317245483398
    8. '#' → logprob: -6.794317245483398
    9. '\' → logprob: -7.044317245483398
    10. '<|end|>' → logprob: -7.544317245483398


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 342
Tokens correctement prédits (1ère position, stricte): 169
Tokens correctement prédits (1ère position, avec adaptation): 181
Tokens correctement prédits (top 10): 303
Précision stricte (1ère position): 49.42%
Précision adaptée (1ère position): 52.92%
Précision (top 10): 88.60%
================================================================================
