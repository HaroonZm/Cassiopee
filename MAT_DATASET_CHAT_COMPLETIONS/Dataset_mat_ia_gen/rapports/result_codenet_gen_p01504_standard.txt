================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)
input = sys.stdin.readline

case_num = 1
while True:
    n,t,k = map(int,input().split())
    if n==0 and t==0 and k==0:
        break
    adj = [[] for _ in range(n+1)]
    for _ in range(n-1):
        u,v,c = map(int,input().split())
        adj[u].append((v,c))
        adj[v].append((u,c))
    bases = set()
    for _ in range(t):
        b = int(input())
        bases.add(b)

    # dp[u][x]: min cost to split subtree rooted at u into x components, each with >=1 base
    # size of dp[u] is up to min(t,k+1) but k+1 <= t so max = k+1
    INF = 10**15
    dp = [dict() for _ in range(n+1)]

    def dfs(u,p):
        # If u is base, dp[u][1]=0 else dp[u][0]=0
        dp[u] = {1:0} if u in bases else {0:0}
        for v,cost in adj[u]:
            if v==p:
                continue
            dfs(v,u)
            ndp = {}
            for x1,c1 in dp[u].items():
                for x2,c2 in dp[v].items():
                    # Two choices:
                    # 1) Cut edge u-v: cost paid, number of components add up
                    nx = x1 + x2
                    if nx <= k+1:
                        ndp[nx] = min(ndp.get(nx,INF), c1 + c2 + cost)
                    # 2) Do not cut: merge subtree, components number = max(x1,x2)
                    # But must check if combined subtree has at least one base:
                    # since dp[u] and dp[v] only keep keys with valid base counts,
                    # merging is possible with components = max(x1,x2)
                    n_components = x1 + x2 - 1
                    # Actually, no, merging two disjoint components reduces by 1,
                    # but we keep track of how many components with bases inside subtree rooted at u.
                    # The merging implies that total components is x1 + x2 - 1
                    # So:
                    nx2 = x1 + x2 -1
                    if nx2 <= k+1 and nx2 >=0:
                        ndp[nx2] = min(ndp.get(nx2,INF), c1 + c2)
            dp[u] = ndp

    # root anywhere, pick node 1
    dfs(1,-1)
    # We want dp[1][k+1] minimal cost
    res = dp[1].get(k+1,INF)
    print(f"Case {case_num}: {res}")
    case_num += 1
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -2.7968066206085496e-05
    2. ' .' → logprob: -11.625027656555176
    3. '.import' → logprob: -12.500027656555176
    4. '.readline' → logprob: -13.125027656555176
    5. '.user' → logprob: -13.375027656555176
    6. '.`' → logprob: -13.875027656555176
    7. '[' → logprob: -14.000027656555176
    8. '.stdout' → logprob: -14.125027656555176
    9. '."""' → logprob: -14.125027656555176
    10. '.exit' → logprob: -14.250027656555176

Token 5: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02803124487400055
    2. '_trace' → logprob: -4.278031349182129
    3. '_encoding' → logprob: -5.903031349182129
    4. '_version' → logprob: -6.278031349182129
    5. '_exc' → logprob: -6.278031349182129
    6. '_ex' → logprob: -6.403031349182129
    7. ' _' → logprob: -7.028031349182129
    8. '_set' → logprob: -7.653031349182129
    9. '_attr' → logprob: -7.903031349182129
    10. '_default' → logprob: -8.028031349182129

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.003742952598258853
    2. 'ursive' → logprob: -6.3787431716918945
    3. 'limit' → logprob: -7.0037431716918945
    4. 'ur' → logprob: -7.5037431716918945
    5. 'urse' → logprob: -9.253743171691895
    6. '_limit' → logprob: -9.628743171691895
    7. 'urs' → logprob: -9.628743171691895
    8. 'ut' → logprob: -9.753743171691895
    9. 'u' → logprob: -10.003743171691895
    10. 't' → logprob: -10.128743171691895

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.16445723176002502
    2. 'limit' → logprob: -1.9144572019577026
    3. '_depth' → logprob: -5.539457321166992
    4. 'depth' → logprob: -9.539457321166992
    5. '_' → logprob: -9.664457321166992
    6. '_lim' → logprob: -10.539457321166992
    7. ' limit' → logprob: -10.914457321166992
    8. '_rate' → logprob: -11.039457321166992
    9. '_error' → logprob: -11.539457321166992
    10. 'lim' → logprob: -11.789457321166992

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.694766489090398e-05
    2. '(
' → logprob: -10.500066757202148
    3. ' (' → logprob: -11.375066757202148
    4. '40' → logprob: -11.875066757202148
    5. '(

' → logprob: -12.500066757202148
    6. '((' → logprob: -12.750066757202148
    7. '```' → logprob: -12.750066757202148
    8. '(.' → logprob: -13.000066757202148
    9. '('' → logprob: -13.125066757202148
    10. '(()' → logprob: -13.250066757202148

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.12741151452064514
    2. '100' → logprob: -2.1274116039276123
    3. ' ' → logprob: -8.002411842346191
    4. '500' → logprob: -9.752411842346191
    5. '300' → logprob: -9.877411842346191
    6. '250' → logprob: -10.752411842346191
    7. '  ' → logprob: -12.252411842346191
    8. '   ' → logprob: -12.502411842346191
    9. '200' → logprob: -12.877411842346191
    10. '150' → logprob: -13.127411842346191

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006857931148260832
    2. '000' → logprob: -5.756857872009277
    3. '00' → logprob: -5.881857872009277
    4. '4' → logprob: -7.256857872009277
    5. '6' → logprob: -8.881857872009277
    6. '5' → logprob: -11.506857872009277
    7. '```' → logprob: -12.006857872009277
    8. ')' → logprob: -12.256857872009277
    9. '3' → logprob: -12.381857872009277
    10. '**' → logprob: -12.381857872009277

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00714417127892375
    2. '9' → logprob: -5.632143974304199
    3. '6' → logprob: -5.757143974304199
    4. '8' → logprob: -7.882143974304199
    5. '```' → logprob: -15.7571439743042
    6. ' ' → logprob: -16.507144927978516
    7. '(' → logprob: -17.132144927978516
    8. '5' → logprob: -17.757144927978516
    9. '``' → logprob: -18.257144927978516
    10. '999' → logprob: -18.382144927978516

Token 12: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3663626305060461e-05
    2. '))' → logprob: -11.75001335144043
    3. ' )' → logprob: -12.12501335144043
    4. ')
' → logprob: -15.62501335144043
    5. ')))' → logprob: -16.75001335144043
    6. ')`' → logprob: -17.00001335144043
    7. ' ' → logprob: -17.25001335144043
    8. '）' → logprob: -18.12501335144043
    9. '`)' → logprob: -18.12501335144043
    10. '```' → logprob: -18.50001335144043

Token 13: 'input' (ID: 2586)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.2915230095386505
    2. ')' → logprob: -2.916522979736328
    3. '\n' → logprob: -2.916522979736328
    4. 'def' → logprob: -3.541522979736328
    5. '
' → logprob: -3.791522979736328
    6. '(' → logprob: -4.041522979736328
    7. '
' → logprob: -4.291522979736328
    8. '' → logprob: -4.541522979736328
    9. 'sys' → logprob: -4.541522979736328
    10. '#' → logprob: -4.916522979736328

Token 14: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.054387565702199936
    2. '()' → logprob: -3.0543875694274902
    3. '.' → logprob: -6.05438756942749
    4. ')' → logprob: -6.55438756942749
    5. '().' → logprob: -7.67938756942749
    6. '('' → logprob: -7.92938756942749
    7. '40' → logprob: -8.304387092590332
    8. '```' → logprob: -8.554387092590332
    9. '("("' → logprob: -8.929387092590332
    10. ''' → logprob: -9.429387092590332

Token 15: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2551126778125763
    2. ' input' → logprob: -1.505112648010254
    3. ' sys' → logprob: -6.505112648010254
    4. 'sys' → logprob: -6.505112648010254
    5. 'lambda' → logprob: -10.255112648010254
    6. '=input' → logprob: -10.630112648010254
    7. ' lambda' → logprob: -10.755112648010254
    8. '```' → logprob: -10.880112648010254
    9. 'open' → logprob: -11.130112648010254
    10. 'int' → logprob: -11.380112648010254

Token 16: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.06671422719955444
    2. '.readline' → logprob: -2.941714286804199
    3. '.' → logprob: -4.566714286804199
    4. '.stdout' → logprob: -7.566714286804199
    5. ' .' → logprob: -7.941714286804199
    6. '.input' → logprob: -8.8167142868042
    7. '.read' → logprob: -9.4417142868042
    8. '.std' → logprob: -9.4417142868042
    9. '.argv' → logprob: -9.9417142868042
    10. '.setdefault' → logprob: -10.5667142868042

Token 17: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.008816298097372055
    2. '.read' → logprob: -4.883816242218018
    3. '.' → logprob: -6.758816242218018
    4. '.buffer' → logprob: -10.258816719055176
    5. '.readlines' → logprob: -11.508816719055176
    6. '.Read' → logprob: -13.383816719055176
    7. 'read' → logprob: -13.883816719055176
    8. '.stdin' → logprob: -14.883816719055176
    9. ' .' → logprob: -15.383816719055176
    10. ').' → logprob: -16.00881576538086

Token 18: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06371898949146271
    2. '()
' → logprob: -3.5637190341949463
    3. '()

' → logprob: -4.063718795776367
    4. '(' → logprob: -4.438718795776367
    5. 'def' → logprob: -6.563718795776367
    6. '()\' → logprob: -6.813718795776367
    7. '(
' → logprob: -7.313718795776367
    8. '
' → logprob: -8.563718795776367
    9. 'for' → logprob: -8.688718795776367
    10. '\n' → logprob: -9.063718795776367

Token 19: 'case' (ID: 9994)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.062080394476652145
    2. 'n' → logprob: -2.8120803833007812
    3. 'N' → logprob: -9.687080383300781
    4. 'd' → logprob: -11.062080383300781
    5. '\' → logprob: -11.812080383300781
    6. '```' → logprob: -11.812080383300781
    7. 'class' → logprob: -12.187080383300781
    8. 'a' → logprob: -12.312080383300781
    9. 'for' → logprob: -12.437080383300781
    10. 'from' → logprob: -14.062080383300781

Token 20: '_num' (ID: 9834)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00038467496051453054
    2. '_' → logprob: -8.500384330749512
    3. '_s' → logprob: -9.250384330749512
    4. ' s' → logprob: -9.750384330749512
    5. ' =' → logprob: -11.875384330749512
    6. ')' → logprob: -12.875384330749512
    7. ':' → logprob: -12.875384330749512
    8. ' ' → logprob: -13.000384330749512
    9. '   ' → logprob: -13.000384330749512
    10. '(' → logprob: -13.500384330749512

Token 21: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004779811482876539
    2. '(' → logprob: -5.379779815673828
    3. '_' → logprob: -9.629779815673828
    4. '[' → logprob: -10.629779815673828
    5. '()' → logprob: -10.879779815673828
    6. ')' → logprob: -11.129779815673828
    7. '(s' → logprob: -11.629779815673828
    8. '_s' → logprob: -11.754779815673828
    9. ''s' → logprob: -11.879779815673828
    10. '=' → logprob: -13.004779815673828

Token 22: ' ' (ID: 220)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3135381042957306
    2. 'int' → logprob: -1.3135380744934082
    3. '0' → logprob: -8.938538551330566
    4. '(int' → logprob: -9.313538551330566
    5. ' ' → logprob: -10.563538551330566
    6. '=int' → logprob: -11.313538551330566
    7. '1' → logprob: -11.563538551330566
    8. '[int' → logprob: -12.938538551330566
    9. '10' → logprob: -13.063538551330566
    10. '<int' → logprob: -13.813538551330566

Token 23: '1' (ID: 16)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -8.2994620242971e-06
    2. ' int' → logprob: -11.750008583068848
    3. '(int' → logprob: -16.00000762939453
    4. '=int' → logprob: -16.25000762939453
    5. '[int' → logprob: -16.50000762939453
    6. '0' → logprob: -17.25000762939453
    7. '<int' → logprob: -18.00000762939453
    8. '1' → logprob: -18.62500762939453
    9. 'in' → logprob: -19.00000762939453
    10. '10' → logprob: -19.62500762939453

Token 24: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5673655271530151
    2. 'while' → logprob: -1.1923655271530151
    3. ':' → logprob: -2.4423656463623047
    4. ' while' → logprob: -4.567365646362305
    5. '\n' → logprob: -4.817365646362305
    6. '\' → logprob: -5.067365646362305
    7. '' → logprob: -5.442365646362305
    8. '```' → logprob: -6.067365646362305
    9. 'n' → logprob: -6.442365646362305
    10. 'for' → logprob: -6.567365646362305

Token 25: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.01510495226830244
    2. ' while' → logprob: -4.5151047706604
    3. '
' → logprob: -6.2651047706604
    4. ':' → logprob: -7.5151047706604
    5. '\n' → logprob: -7.7651047706604
    6. '```' → logprob: -8.015105247497559
    7. '\' → logprob: -8.140105247497559
    8. 'for' → logprob: -8.140105247497559
    9. 'def' → logprob: -8.765105247497559
    10. 'n' → logprob: -10.890105247497559

Token 26: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.0022152038291096687
    2. 'True' → logprob: -6.127215385437012
    3. ' case' → logprob: -10.627215385437012
    4. ' ' → logprob: -12.752215385437012
    5. '(True' → logprob: -13.502215385437012
    6. 'case' → logprob: -14.252215385437012
    7. ' input' → logprob: -15.127215385437012
    8. ' true' → logprob: -15.752215385437012
    9. ' not' → logprob: -15.877215385437012
    10. ' condition' → logprob: -16.127214431762695

Token 27: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.91732100979425e-05
    2. ':
' → logprob: -11.250039100646973
    3. '):' → logprob: -11.875039100646973
    4. ',' → logprob: -12.125039100646973
    5. ':**' → logprob: -12.125039100646973
    6. '():' → logprob: -12.125039100646973
    7. ' :' → logprob: -13.750039100646973
    8. ':def' → logprob: -15.125039100646973
    9. '   ' → logprob: -15.625039100646973
    10. ',:' → logprob: -15.750039100646973

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03094189427793026
    2. ' ' → logprob: -4.655941963195801
    3. '    
' → logprob: -4.655941963195801
    4. '    ' → logprob: -5.280941963195801
    5. '     
' → logprob: -6.905941963195801
    6. '<|end|>' → logprob: -7.030941963195801
    7. ' 
' → logprob: -7.155941963195801
    8. ' )' → logprob: -7.655941963195801
    9. ' ,' → logprob: -7.780941963195801
    10. ' line' → logprob: -7.905941963195801

Token 29: ' n' (ID: 297)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.3767138123512268
    2. ' n' → logprob: -2.251713752746582
    3. ' data' → logprob: -2.501713752746582
    4. '   ' → logprob: -3.001713752746582
    5. 'n' (adapté à ' n') → logprob: -3.626713752746582
    6. 'data' → logprob: -4.001713752746582
    7. 'line' → logprob: -4.126713752746582
    8. ' s' → logprob: -4.876713752746582
    9. 's' → logprob: -5.751713752746582
    10. ' x' → logprob: -7.001713752746582

Token 30: ',t' (ID: 26927)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01420957688242197
    2. '=' → logprob: -4.264209747314453
    3. '=int' → logprob: -10.014209747314453
    4. '=input' → logprob: -14.389209747314453
    5. ' ' → logprob: -14.889209747314453
    6. ',' → logprob: -15.389209747314453
    7. ' =
' → logprob: -16.639209747314453
    8. ' ' → logprob: -17.014209747314453
    9. '＝' → logprob: -17.014209747314453
    10. ' ==' → logprob: -17.139209747314453

Token 31: ',k' (ID: 35155)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2634604275226593
    2. '=' → logprob: -1.513460397720337
    3. ',' → logprob: -4.513460636138916
    4. ' ' → logprob: -9.013460159301758
    5. ' ,' → logprob: -9.013460159301758
    6. '=input' → logprob: -9.638460159301758
    7. '=int' → logprob: -10.388460159301758
    8. 'okens' → logprob: -10.388460159301758
    9. 'oken' → logprob: -11.013460159301758
    10. ',p' → logprob: -11.763460159301758

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2072545737028122
    2. '=' → logprob: -1.7072545289993286
    3. ',' → logprob: -5.207254409790039
    4. '=input' → logprob: -8.332254409790039
    5. ' ,' → logprob: -10.582254409790039
    6. ',input' → logprob: -10.957254409790039
    7. '=line' → logprob: -11.207254409790039
    8. ' ' → logprob: -11.457254409790039
    9. ',k' → logprob: -11.582254409790039
    10. '=int' → logprob: -12.457254409790039

Token 33: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.06224842369556427
    2. 'map' → logprob: -2.812248468399048
    3. ' input' → logprob: -8.687248229980469
    4. ' list' → logprob: -9.687248229980469
    5. 'input' → logprob: -10.437248229980469
    6. 'list' → logprob: -11.937248229980469
    7. ' ' → logprob: -12.187248229980469
    8. '	map' → logprob: -12.187248229980469
    9. ' sys' → logprob: -13.937248229980469
    10. '(map' → logprob: -14.062248229980469

Token 34: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.11198215186595917
    2. '(' → logprob: -2.4869821071624756
    3. '(input' → logprob: -3.8619821071624756
    4. '(lambda' → logprob: -6.861982345581055
    5. '(str' → logprob: -7.361982345581055
    6. ' (' → logprob: -11.361982345581055
    7. '(eval' → logprob: -11.361982345581055
    8. '(list' → logprob: -11.986982345581055
    9. '<int' → logprob: -12.111982345581055
    10. 'input' → logprob: -12.236982345581055

Token 35: ',input' (ID: 123014)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18277870118618011
    2. ',input' → logprob: -1.8077787160873413
    3. 'input' → logprob: -6.307778835296631
    4. '(input' → logprob: -6.807778835296631
    5. '(' → logprob: -10.182778358459473
    6. ')' → logprob: -10.182778358459473
    7. ' input' → logprob: -11.307778358459473
    8. ' ,' → logprob: -12.432778358459473
    9. '```' → logprob: -12.932778358459473
    10. ',int' → logprob: -13.432778358459473

Token 36: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.339278580620885e-06
    2. '()' → logprob: -13.250001907348633
    3. '())' → logprob: -14.875001907348633
    4. ' ().' → logprob: -16.000001907348633
    5. ')' → logprob: -17.375001907348633
    6. '()))' → logprob: -18.750001907348633
    7. '()
' → logprob: -19.250001907348633
    8. '(' → logprob: -19.750001907348633
    9. '()

' → logprob: -20.375001907348633
    10. '('').' → logprob: -20.750001907348633

Token 37: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.08118458092212677
    2. 'strip' → logprob: -2.5811846256256104
    3. 'rstrip' → logprob: -6.081184387207031
    4. '(split' → logprob: -12.831184387207031
    5. ' split' → logprob: -13.581184387207031
    6. '().' → logprob: -13.706184387207031
    7. ')' → logprob: -13.956184387207031
    8. ' strip' → logprob: -15.456184387207031
    9. '```' → logprob: -15.831184387207031
    10. 'read' → logprob: -16.58118438720703

Token 38: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027330297976732254
    2. '())' → logprob: -3.6523303985595703
    3. '()' → logprob: -7.15233039855957
    4. '))' → logprob: -8.52733039855957
    5. ')
' → logprob: -10.52733039855957
    6. '())
' → logprob: -11.40233039855957
    7. '()))' → logprob: -13.27733039855957
    8. ')`' → logprob: -13.40233039855957
    9. '),' → logprob: -13.65233039855957
    10. '(' → logprob: -13.90233039855957

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.042198047041893005
    2. '<|end|>' → logprob: -3.9171979427337646
    3. ':' → logprob: -5.417198181152344
    4. ' ' → logprob: -5.542198181152344
    5. '    
' → logprob: -5.667198181152344
    6. ' if' → logprob: -5.792198181152344
    7. '
' → logprob: -6.417198181152344
    8. ':
' → logprob: -6.917198181152344
    9. ')' → logprob: -7.167198181152344
    10. ' 
' → logprob: -7.292198181152344

Token 40: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 41: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0031036846339702606
    2. ' not' → logprob: -6.253103733062744
    3. 'n' → logprob: -6.753103733062744
    4. 'not' → logprob: -12.378103256225586
    5. ' ' → logprob: -13.003103256225586
    6. '	n' → logprob: -15.003103256225586
    7. ' (' → logprob: -15.628103256225586
    8. '(n' → logprob: -16.253103256225586
    9. ' ' → logprob: -17.878103256225586
    10. ' н' → logprob: -17.878103256225586

Token 42: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.018191147595643997
    2. '==' → logprob: -4.018191337585449
    3. ' <' → logprob: -11.14319133758545
    4. ' <=' → logprob: -11.14319133758545
    5. '=' → logprob: -12.01819133758545
    6. ' =' → logprob: -13.01819133758545
    7. '<' → logprob: -13.76819133758545
    8. ' ' → logprob: -14.14319133758545
    9. '<=' → logprob: -14.26819133758545
    10. ')' → logprob: -14.89319133758545

Token 43: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06995755434036255
    2. ' ' → logprob: -2.6949574947357178
    3. 't' → logprob: -12.444957733154297
    4. 'k' → logprob: -12.694957733154297
    5. ' t' → logprob: -13.007457733154297
    6. '-' → logprob: -13.257457733154297
    7. '=' → logprob: -13.882457733154297
    8. '   ' → logprob: -14.257457733154297
    9. '  ' → logprob: -14.319957733154297
    10. ' k' → logprob: -14.319957733154297

Token 44: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2561165690422058
    2. ' and' → logprob: -1.5061166286468506
    3. 'and' → logprob: -5.7561163902282715
    4. ',' → logprob: -7.5061163902282715
    5. ' :' → logprob: -8.63111686706543
    6. ' or' → logprob: -8.75611686706543
    7. ':
' → logprob: -10.00611686706543
    8. ':return' → logprob: -10.00611686706543
    9. '<|end|>' → logprob: -11.13111686706543
    10. ' ' → logprob: -11.63111686706543

Token 45: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.31326884031295776
    2. 't' → logprob: -1.3132688999176025
    3. ' ' → logprob: -12.563268661499023
    4. '	t' → logprob: -12.813268661499023
    5. ' ' → logprob: -15.688268661499023
    6. '   ' → logprob: -15.688268661499023
    7. '  ' → logprob: -15.938268661499023
    8. ',' → logprob: -17.063268661499023
    9. 'k' → logprob: -17.188268661499023
    10. '_t' → logprob: -17.188268661499023

Token 46: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -9.686778503237292e-05
    2. ' ==' → logprob: -9.250097274780273
    3. '===' → logprob: -15.375097274780273
    4. '=' → logprob: -15.500097274780273
    5. '()==' → logprob: -16.125097274780273
    6. '0' → logprob: -16.375097274780273
    7. '==-' → logprob: -16.750097274780273
    8. '==
' → logprob: -17.750097274780273
    9. ')==' → logprob: -17.875097274780273
    10. '```' → logprob: -18.000097274780273

Token 47: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000158842682139948
    2. ' ' → logprob: -8.75015926361084
    3. '<|end|>' → logprob: -16.375158309936523
    4. '  ' → logprob: -17.250158309936523
    5. ' and' → logprob: -17.250158309936523
    6. 'and' → logprob: -17.500158309936523
    7. 'k' → logprob: -17.500158309936523
    8. '=' → logprob: -17.750158309936523
    9. '۰' → logprob: -17.750158309936523
    10. '<|end|>' → logprob: -17.875158309936523

Token 48: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.005945033393800259
    2. 'and' → logprob: -5.130945205688477
    3. ' ' → logprob: -12.130945205688477
    4. '	and' → logprob: -12.380945205688477
    5. '   ' → logprob: -12.880945205688477
    6. '<|end|>' → logprob: -13.505945205688477
    7. '<|end|>' → logprob: -13.755945205688477
    8. ' и' → logprob: -15.005945205688477
    9. '0' → logprob: -15.255945205688477
    10. '  ' → logprob: -15.380945205688477

Token 49: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.11296308040618896
    2. ' k' → logprob: -2.2379631996154785
    3. '0' → logprob: -8.98796272277832
    4. ' ' → logprob: -11.48796272277832
    5. '   ' → logprob: -12.86296272277832
    6. '  ' → logprob: -13.73796272277832
    7. '	k' → logprob: -13.98796272277832
    8. ' and' → logprob: -14.23796272277832
    9. 'and' → logprob: -15.61296272277832
    10. '    ' → logprob: -16.61296272277832

Token 50: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0015117661096155643
    2. ' ==' → logprob: -6.501511573791504
    3. '=' → logprob: -12.751511573791504
    4. '0' → logprob: -12.751511573791504
    5. '()==' → logprob: -14.251511573791504
    6. '==
' → logprob: -14.376511573791504
    7. ')==' → logprob: -14.376511573791504
    8. '<|end|>' → logprob: -14.751511573791504
    9. ']==' → logprob: -14.876511573791504
    10. '===' → logprob: -14.876511573791504

Token 51: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '<|end|>' → logprob: -16.25000762939453
    4. '۰' → logprob: -17.62500762939453
    5. '<|end|>' → logprob: -17.62500762939453
    6. '  ' → logprob: -18.00000762939453
    7. '   ' → logprob: -18.12500762939453
    8. '০' → logprob: -18.62500762939453
    9. '０' → logprob: -19.50000762939453
    10. '०' → logprob: -19.50000762939453

Token 52: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006296366918832064
    2. ':
' → logprob: -7.500629425048828
    3. '   ' → logprob: -9.750629425048828
    4. ' :' → logprob: -11.625629425048828
    5. ':return' → logprob: -12.000629425048828
    6. '):' → logprob: -13.250629425048828
    7. '       ' → logprob: -14.000629425048828
    8. '：' → logprob: -15.875629425048828
    9. ' :
' → logprob: -16.125629425048828
    10. '.' → logprob: -16.500629425048828

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002849102020263672
    2. '   ' → logprob: -5.877849102020264
    3. ' break' → logprob: -10.377849578857422
    4. '	break' → logprob: -12.127849578857422
    5. '	' → logprob: -13.627849578857422
    6. '     ' → logprob: -13.752849578857422
    7. '      ' → logprob: -13.752849578857422
    8. '    ' → logprob: -14.002849578857422
    9. '	   ' → logprob: -14.252849578857422
    10. 'break' → logprob: -14.252849578857422

Token 54: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.11400589346885681
    2. 'break' (adapté à ' break') → logprob: -2.3640058040618896
    3. '   ' → logprob: -4.614006042480469
    4. '       ' → logprob: -5.614006042480469
    5. '	break' → logprob: -8.864006042480469
    6. '    ' → logprob: -13.739006042480469
    7. '_break' → logprob: -13.739006042480469
    8. '```' → logprob: -14.489006042480469
    9. '           ' → logprob: -14.614006042480469
    10. '-break' → logprob: -14.614006042480469

Token 55: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4941336512565613
    2. '    
' → logprob: -1.369133710861206
    3. '
' → logprob: -2.244133710861206
    4. '\n' → logprob: -4.369133472442627
    5. '<|end|>' → logprob: -4.994133472442627
    6. '  
' → logprob: -6.119133472442627
    7. '    ' → logprob: -6.494133472442627
    8. '   
' → logprob: -6.744133472442627
    9. ' 
' → logprob: -6.994133472442627
    10. '\r' → logprob: -7.244133472442627

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3761325776576996
    2. '    
' → logprob: -1.751132607460022
    3. '
' → logprob: -2.1261324882507324
    4. '```' → logprob: -4.251132488250732
    5. '\n' → logprob: -5.876132488250732
    6. '<|end|>' → logprob: -6.251132488250732
    7. 'n' → logprob: -8.50113296508789
    8. '  
' → logprob: -8.50113296508789
    9. '   
' → logprob: -8.75113296508789
    10. ' 
' → logprob: -8.75113296508789

Token 57: ' adj' (ID: 20251)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014362464658915997
    2. '    
' → logprob: -4.514362335205078
    3. ' result' → logprob: -7.139362335205078
    4. '    ' → logprob: -7.764362335205078
    5. 'result' → logprob: -8.389362335205078
    6. ' results' → logprob: -8.889362335205078
    7. ' answers' → logprob: -9.201862335205078
    8. ' answer' → logprob: -9.389362335205078
    9. 'answers' → logprob: -9.576862335205078
    10. 'data' → logprob: -9.951862335205078

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32001134753227234
    2. '=' → logprob: -1.3200113773345947
    3. '[' → logprob: -5.195011138916016
    4. 'acency' → logprob: -7.320011138916016
    5. '=[]' → logprob: -9.070011138916016
    6. '=[' → logprob: -9.695011138916016
    7. ')' → logprob: -9.820011138916016
    8. ',' → logprob: -10.070011138916016
    9. '[]' → logprob: -10.320011138916016
    10. '_list' → logprob: -10.445011138916016

Token 59: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08035338670015335
    2. ' [[]' → logprob: -2.5803534984588623
    3. ' [' → logprob: -7.080353260040283
    4. '[]' → logprob: -7.830353260040283
    5. '{}' → logprob: -9.205353736877441
    6. '{' → logprob: -9.580353736877441
    7. '[[' → logprob: -10.705353736877441
    8. '[n' → logprob: -12.080353736877441
    9. ' []' → logprob: -12.330353736877441
    10. 'default' → logprob: -12.455353736877441

Token 60: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6709452867507935
    2. 'for' → logprob: -0.7959452867507935
    3. '(n' → logprob: -3.420945167541504
    4. ']' → logprob: -6.295945167541504
    5. '(' → logprob: -6.420945167541504
    6. '(k' → logprob: -7.920945167541504
    7. ',' → logprob: -8.295945167541504
    8. ')' → logprob: -8.420945167541504
    9. ' (' → logprob: -8.545945167541504
    10. ',n' → logprob: -9.170945167541504

Token 61: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12757480144500732
    2. 'range' → logprob: -2.877574920654297
    3. ' range' → logprob: -3.002574920654297
    4. ' in' → logprob: -4.877574920654297
    5. ' _' → logprob: -5.502574920654297
    6. 'in' → logprob: -6.877574920654297
    7. '_range' → logprob: -7.252574920654297
    8. '(range' → logprob: -8.002574920654297
    9. '_in' → logprob: -10.002574920654297
    10. '	range' → logprob: -11.502574920654297

Token 62: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.17099927365779877
    2. ' in' → logprob: -1.92099928855896
    3. 'range' → logprob: -4.545999050140381
    4. ' range' → logprob: -9.795999526977539
    5. ' ' → logprob: -10.670999526977539
    6. 'n' → logprob: -11.295999526977539
    7. '_' → logprob: -12.170999526977539
    8. 'i' → logprob: -13.295999526977539
    9. '```' → logprob: -13.545999526977539
    10. '  ' → logprob: -13.795999526977539

Token 63: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023247109726071358
    2. ' range' → logprob: -3.773247003555298
    3. ' ' → logprob: -14.523246765136719
    4. '(range' → logprob: -14.523246765136719
    5. 'r' → logprob: -15.523246765136719
    6. '	range' → logprob: -15.648246765136719
    7. '   ' → logprob: -15.773246765136719
    8. 'in' → logprob: -16.64824676513672
    9. 'rang' → logprob: -17.02324676513672
    10. 'n' → logprob: -17.27324676513672

Token 64: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.7120533811976202e-05
    2. '(' → logprob: -11.000017166137695
    3. 'n' → logprob: -15.500017166137695
    4. ' (' → logprob: -16.500017166137695
    5. '((' → logprob: -17.000017166137695
    6. '(N' → logprob: -17.875017166137695
    7. '](' → logprob: -19.500017166137695
    8. ')n' → logprob: -19.750017166137695
    9. '(k' → logprob: -19.875017166137695
    10. ')(' → logprob: -19.875017166137695

Token 65: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.3676733690081164e-05
    2. ' )' → logprob: -11.50002384185791
    3. ')' → logprob: -11.75002384185791
    4. ')]
' → logprob: -12.75002384185791
    5. '+' → logprob: -13.50002384185791
    6. ']' → logprob: -14.50002384185791
    7. ')]

' → logprob: -15.87502384185791
    8. '>]' → logprob: -16.375022888183594
    9. ')]
' → logprob: -16.500022888183594
    10. ' ' → logprob: -16.500022888183594

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00019150081789121032
    2. ' ' → logprob: -8.875191688537598
    3. '0' → logprob: -10.125191688537598
    4. '2' → logprob: -12.000191688537598
    5. '   ' → logprob: -13.500191688537598
    6. 't' → logprob: -14.000191688537598
    7. '3' → logprob: -14.125191688537598
    8. 'k' → logprob: -15.187691688537598
    9. '5' → logprob: -15.250191688537598
    10. '```' → logprob: -15.312691688537598

Token 67: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.034948498010635376
    2. ']' → logprob: -3.4099485874176025
    3. ')' → logprob: -6.659948348999023
    4. ']
' → logprob: -12.284948348999023
    5. ' ]' → logprob: -12.534948348999023
    6. ')]
' → logprob: -12.909948348999023
    7. '])' → logprob: -13.159948348999023
    8. '   ' → logprob: -13.784948348999023
    9. '>]' → logprob: -13.909948348999023
    10. ')],' → logprob: -14.034948348999023

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6346126198768616
    2. '<|end|>' → logprob: -0.8846126198768616
    3. ' for' → logprob: -3.259612560272217
    4. ' ' → logprob: -5.134612560272217
    5. 'for' → logprob: -5.134612560272217
    6. '    
' → logprob: -6.884612560272217
    7. '    ' → logprob: -7.009612560272217
    8. '
' → logprob: -7.009612560272217
    9. ' 
' → logprob: -7.134612560272217
    10. '  ' → logprob: -7.134612560272217

Token 69: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.361990749835968
    2. ' for' → logprob: -1.2369906902313232
    3. '   ' → logprob: -5.111990928649902
    4. 'u' → logprob: -5.736990928649902
    5. 'edges' → logprob: -7.236990928649902
    6. ' ' → logprob: -7.736990928649902
    7. ' u' → logprob: -8.111990928649902
    8. 'd' → logprob: -8.236990928649902
    9. ' edges' → logprob: -8.486990928649902
    10. 'a' → logprob: -8.736990928649902

Token 70: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5762355923652649
    2. ' _' → logprob: -0.8262355923652649
    3. ' i' → logprob: -8.3262357711792
    4. '_i' → logprob: -9.9512357711792
    5. ' ' → logprob: -12.7012357711792
    6. 'i' → logprob: -12.8262357711792
    7. ' ' → logprob: -15.5762357711792
    8. ' in' → logprob: -16.201234817504883
    9. '_range' → logprob: -16.951234817504883
    10. '_j' → logprob: -17.201234817504883

Token 71: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20184238255023956
    2. 'in' → logprob: -1.7018424272537231
    3. ' ' → logprob: -7.826842308044434
    4. '  ' → logprob: -11.576842308044434
    5. 'range' → logprob: -11.576842308044434
    6. 'i' → logprob: -13.201842308044434
    7. 'n' → logprob: -13.201842308044434
    8. '<|end|>' → logprob: -13.576842308044434
    9. '	in' → logprob: -14.201842308044434
    10. '_' → logprob: -14.326842308044434

Token 72: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0006288022268563509
    2. ' range' → logprob: -7.37562894821167
    3. ' ' → logprob: -14.375628471374512
    4. 'r' → logprob: -15.125628471374512
    5. '	range' → logprob: -15.375628471374512
    6. '(range' → logprob: -15.500628471374512
    7. '  ' → logprob: -15.625628471374512
    8. 'rang' → logprob: -15.625628471374512
    9. 'ran' → logprob: -15.875628471374512
    10. 't' → logprob: -16.125629425048828

Token 73: '(n' (ID: 2406)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.3609302341938019
    2. '(k' → logprob: -1.2359302043914795
    3. 't' → logprob: -4.985930442810059
    4. 'k' → logprob: -5.360930442810059
    5. '(n' → logprob: -7.485930442810059
    6. '(' → logprob: -8.735930442810059
    7. ' t' → logprob: -9.860930442810059
    8. ' (' → logprob: -9.985930442810059
    9. '(m' → logprob: -10.360930442810059
    10. ' k' → logprob: -11.610930442810059

Token 74: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.033423446118831635
    2. '):' → logprob: -3.53342342376709
    3. ' -' → logprob: -5.78342342376709
    4. '):
' → logprob: -7.78342342376709
    5. ')' → logprob: -9.78342342376709
    6. '+' → logprob: -10.03342342376709
    7. '   ' → logprob: -10.40842342376709
    8. 't' → logprob: -11.65842342376709
    9. ' ):' → logprob: -11.78342342376709
    10. '):
' → logprob: -12.59592342376709

Token 75: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.404745439183898e-05
    2. ' ' → logprob: -10.50003433227539
    3. '<|end|>' → logprob: -13.00003433227539
    4. '2' → logprob: -14.00003433227539
    5. '１' → logprob: -14.62503433227539
    6. '১' → logprob: -15.00003433227539
    7. '<|end|>' → logprob: -15.06253433227539
    8. '۱' → logprob: -15.25003433227539
    9. '-' → logprob: -15.62503433227539
    10. '...' → logprob: -15.62503433227539

Token 76: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006807420286349952
    2. '):
' → logprob: -7.750680923461914
    3. ' ):' → logprob: -8.625680923461914
    4. ':' → logprob: -10.500680923461914
    5. ')' → logprob: -10.750680923461914
    6. '):
' → logprob: -11.125680923461914
    7. ',' → logprob: -12.500680923461914
    8. '   ' → logprob: -14.000680923461914
    9. ' ' → logprob: -14.750680923461914
    10. '):

' → logprob: -15.375680923461914

Token 77: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11186789721250534
    2. '   ' → logprob: -2.486867904663086
    3. ' u' → logprob: -4.361867904663086
    4. ' a' → logprob: -6.111867904663086
    5. '    ' → logprob: -6.361867904663086
    6. '<|end|>' → logprob: -6.361867904663086
    7. 'u' → logprob: -6.486867904663086
    8. 'a' → logprob: -7.361867904663086
    9. '	   ' → logprob: -7.736867904663086
    10. ' line' → logprob: -7.736867904663086

Token 78: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.3000943660736084
    2. 'a' → logprob: -1.6750943660736084
    3. ' u' → logprob: -2.8000943660736084
    4. ' a' → logprob: -5.3000946044921875
    5. '   ' → logprob: -5.3000946044921875
    6. 'x' → logprob: -7.3000946044921875
    7. '	u' → logprob: -9.300094604492188
    8. 's' → logprob: -9.675094604492188
    9. '       ' → logprob: -9.800094604492188
    10. ' ' → logprob: -9.925094604492188

Token 79: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.4294677674770355
    2. ',' → logprob: -1.054467797279358
    3. ' ,' → logprob: -7.429467678070068
    4. ' v' → logprob: -8.804468154907227
    5. ',w' → logprob: -12.554468154907227
    6. ',u' → logprob: -12.554468154907227
    7. ',k' → logprob: -13.304468154907227
    8. 'v' → logprob: -13.429468154907227
    9. ',V' → logprob: -13.679468154907227
    10. ',t' → logprob: -13.679468154907227

Token 80: ',c' (ID: 22261)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16112323105335236
    2. '=' → logprob: -1.911123275756836
    3. ',' → logprob: -7.161123275756836
    4. '=input' → logprob: -10.286123275756836
    5. ' ' → logprob: -10.661123275756836
    6. ')' → logprob: -10.786123275756836
    7. '=line' → logprob: -11.286123275756836
    8. ',v' → logprob: -11.536123275756836
    9. '   ' → logprob: -11.911123275756836
    10. '=int' → logprob: -12.911123275756836

Token 81: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023569567129015923
    2. ' =' → logprob: -3.7735695838928223
    3. ',' → logprob: -8.773569107055664
    4. '=input' → logprob: -9.773569107055664
    5. '=sys' → logprob: -10.648569107055664
    6. '=int' → logprob: -10.773569107055664
    7. ',v' → logprob: -11.023569107055664
    8. ',w' → logprob: -11.023569107055664
    9. '=line' → logprob: -11.398569107055664
    10. ',d' → logprob: -12.398569107055664

Token 82: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.12693189084529877
    2. 'map' → logprob: -2.12693190574646
    3. '	map' → logprob: -13.626932144165039
    4. 'input' → logprob: -13.876932144165039
    5. ' input' → logprob: -14.126932144165039
    6. ' ' → logprob: -15.001932144165039
    7. 'm' → logprob: -15.126932144165039
    8. 'list' → logprob: -16.12693214416504
    9. ' list' → logprob: -16.62693214416504
    10. '(map' → logprob: -17.25193214416504

Token 83: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0001017551330733113
    2. ',int' → logprob: -10.625102043151855
    3. '<int' → logprob: -10.625102043151855
    4. '(' → logprob: -10.875102043151855
    5. '=int' → logprob: -11.250102043151855
    6. '[int' → logprob: -11.250102043151855
    7. '<|end|>' → logprob: -12.500102043151855
    8. ']int' → logprob: -13.125102043151855
    9. 'int' → logprob: -13.625102043151855
    10. ':int' → logprob: -14.500102043151855

Token 84: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.008863329887390137
    2. ',' → logprob: -4.88386344909668
    3. ',int' → logprob: -6.88386344909668
    4. '(input' → logprob: -9.13386344909668
    5. '(),' → logprob: -10.13386344909668
    6. ' ,' → logprob: -10.38386344909668
    7. '(' → logprob: -11.25886344909668
    8. '<|end|>' → logprob: -12.00886344909668
    9. ',user' → logprob: -12.38386344909668
    10. ',function' → logprob: -12.63386344909668

Token 85: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.7432603272027336e-06
    2. '.split' → logprob: -14.000001907348633
    3. '()' → logprob: -15.000001907348633
    4. '.' → logprob: -15.125001907348633
    5. ')' → logprob: -15.625001907348633
    6. ' ().' → logprob: -16.750001907348633
    7. ').' → logprob: -17.500001907348633
    8. '.readline' → logprob: -17.875001907348633
    9. 'split' → logprob: -18.375001907348633
    10. '())' → logprob: -19.125001907348633

Token 86: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. ' split' → logprob: -15.125
    3. '(split' → logprob: -16.875
    4. ')' → logprob: -17.25
    5. 'spl' → logprob: -17.5
    6. 'strip' → logprob: -17.75
    7. '.split' → logprob: -18.875
    8. 'rstrip' → logprob: -18.875
    9. '```' → logprob: -19.25
    10. 's' → logprob: -19.75

Token 87: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2674027979373932
    2. ')' → logprob: -1.5174027681350708
    3. '()' → logprob: -4.392402648925781
    4. '())
' → logprob: -5.892402648925781
    5. ')
' → logprob: -8.767402648925781
    6. '(' → logprob: -11.267402648925781
    7. ' ())' → logprob: -11.267402648925781
    8. '())
' → logprob: -11.517402648925781
    9. '()
' → logprob: -11.767402648925781
    10. ' )' → logprob: -12.017402648925781

Token 88: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0134238004684448
    2. '       ' → logprob: -1.1384238004684448
    3. '<|end|>' → logprob: -1.7634238004684448
    4. ')' → logprob: -2.2634239196777344
    5. '
' → logprob: -3.5134239196777344
    6. '<|end|>' → logprob: -6.013423919677734
    7. ')
' → logprob: -6.388423919677734
    8. ',' → logprob: -6.513423919677734
    9. ' ' → logprob: -7.138423919677734
    10. 'adj' → logprob: -7.138423919677734

Token 89: ' adj' (ID: 20251)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2800612151622772
    2. ' adj' → logprob: -1.6550612449645996
    3. '   ' → logprob: -4.1550612449646
    4. 'adj' (adapté à ' adj') → logprob: -4.4050612449646
    5. '
' → logprob: -4.7800612449646
    6. '<|end|>' → logprob: -5.0300612449646
    7. ' ' → logprob: -6.4050612449646
    8. ' 
' → logprob: -6.4050612449646
    9. '    ' → logprob: -6.4050612449646
    10. '        ' → logprob: -6.9050612449646

Token 90: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.00016945181414484978
    2. '[v' → logprob: -8.75016975402832
    3. '[' → logprob: -11.50016975402832
    4. ' [' → logprob: -15.25016975402832
    5. '```' → logprob: -15.37516975402832
    6. '[int' → logprob: -16.00016975402832
    7. '[c' → logprob: -16.25016975402832
    8. '   ' → logprob: -16.87516975402832
    9. 'u' → logprob: -16.87516975402832
    10. '[user' → logprob: -17.37516975402832

Token 91: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0017718080198392272
    2. '.append' → logprob: -7.126771926879883
    3. '.' → logprob: -7.626771926879883
    4. ').' → logprob: -7.751771926879883
    5. ']' → logprob: -10.876771926879883
    6. '[' → logprob: -10.876771926879883
    7. '   ' → logprob: -12.376771926879883
    8. ' ].' → logprob: -12.626771926879883
    9. '[u' → logprob: -13.751771926879883
    10. '][' → logprob: -13.876771926879883

Token 92: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.650518920039758e-06
    2. ' append' → logprob: -12.875003814697266
    3. 'appen' → logprob: -14.500003814697266
    4. '.append' → logprob: -14.500003814697266
    5. '	append' → logprob: -17.750003814697266
    6. ' ' → logprob: -18.250003814697266
    7. '_append' → logprob: -18.250003814697266
    8. 'app' → logprob: -19.000003814697266
    9. 'appe' → logprob: -19.125003814697266
    10. 'Append' → logprob: -19.250003814697266

Token 93: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.023402128368616104
    2. '(' → logprob: -3.773402214050293
    3. '(v' → logprob: -8.773402214050293
    4. '([' → logprob: -14.148402214050293
    5. ' (' → logprob: -14.648402214050293
    6. '(u' → logprob: -14.773402214050293
    7. ' ((' → logprob: -16.148401260375977
    8. '<|end|>' → logprob: -16.898401260375977
    9. '(('' → logprob: -17.523401260375977
    10. '(
' → logprob: -17.523401260375977

Token 94: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -9.686778503237292e-05
    2. ' v' → logprob: -9.250097274780273
    3. ',v' → logprob: -15.250097274780273
    4. ')v' → logprob: -15.375097274780273
    5. '	v' → logprob: -16.625097274780273
    6. ' ' → logprob: -16.625097274780273
    7. '   ' → logprob: -17.000097274780273
    8. '
' → logprob: -18.000097274780273
    9. 'vq' → logprob: -18.250097274780273
    10. ',' → logprob: -18.250097274780273

Token 95: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.20281076431274414
    2. ',' → logprob: -1.7028107643127441
    3. ' ,' → logprob: -6.577810764312744
    4. ',k' → logprob: -13.452810287475586
    5. ',color' → logprob: -14.702810287475586
    6. ',
' → logprob: -14.827810287475586
    7. 'c' → logprob: -14.952810287475586
    8. '‌,' → logprob: -14.952810287475586
    9. ',b' → logprob: -15.077810287475586
    10. ',n' → logprob: -15.327810287475586

Token 96: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.016230491921305656
    2. '))
' → logprob: -4.141230583190918
    3. ' ))' → logprob: -8.766230583190918
    4. ')' → logprob: -10.641230583190918
    5. ' ))
' → logprob: -12.266230583190918
    6. '))

' → logprob: -12.641230583190918
    7. '))
' → logprob: -12.766230583190918
    8. ',' → logprob: -13.391230583190918
    9. '));' → logprob: -13.641230583190918
    10. ')))' → logprob: -13.891230583190918

Token 97: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012488815933465958
    2. '<|end|>' → logprob: -4.887488842010498
    3. '   ' → logprob: -5.387488842010498
    4. '<|end|>' → logprob: -9.51248836517334
    5. 'adj' → logprob: -9.63748836517334
    6. ',' → logprob: -10.38748836517334
    7. ' adj' → logprob: -10.51248836517334
    8. 'v' → logprob: -11.01248836517334
    9. '    ' → logprob: -11.13748836517334
    10. ' ' → logprob: -11.51248836517334

Token 98: ' adj' (ID: 20251)
  Prédit: ' adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.03629468381404877
    2. 'adj' (adapté à ' adj') → logprob: -3.53629469871521
    3. '       ' → logprob: -5.036294460296631
    4. '   ' → logprob: -11.536294937133789
    5. ' ' → logprob: -12.286294937133789
    6. '(adj' → logprob: -12.536294937133789
    7. ' adjacency' → logprob: -13.661294937133789
    8. ' ' → logprob: -14.036294937133789
    9. ' adjunct' → logprob: -14.286294937133789
    10. 'Adj' → logprob: -14.286294937133789

Token 99: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.1008713702030946e-06
    2. 'v' → logprob: -13.875001907348633
    3. '[u' → logprob: -14.125001907348633
    4. '[' → logprob: -15.375001907348633
    5. '[w' → logprob: -17.250001907348633
    6. '[c' → logprob: -17.500001907348633
    7. '```' → logprob: -17.625001907348633
    8. '	v' → logprob: -17.750001907348633
    9. '][' → logprob: -17.875001907348633
    10. '<v' → logprob: -18.125001907348633

Token 100: '].' (ID: 1651)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.010428416542708874
    2. '].' → logprob: -4.635428428649902
    3. '.' → logprob: -8.385428428649902
    4. '.append' → logprob: -8.385428428649902
    5. '   ' → logprob: -9.385428428649902
    6. '       ' → logprob: -9.510428428649902
    7. ' ).' → logprob: -11.260428428649902
    8. ')' → logprob: -11.385428428649902
    9. '}.' → logprob: -11.760428428649902
    10. ' ' → logprob: -11.760428428649902

Token 101: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -6.704273118884885e-07
    2. ' append' → logprob: -14.750000953674316
    3. '.append' → logprob: -16.125
    4. 'appen' → logprob: -16.5
    5. '	append' → logprob: -17.875
    6. 'adj' → logprob: -18.75
    7. 'app' → logprob: -19.875
    8. 'add' → logprob: -20.375
    9. 'prepend' → logprob: -20.75
    10. '_append' → logprob: -21.0

Token 102: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.13750144839286804
    2. '(u' → logprob: -2.1375014781951904
    3. ' (' → logprob: -4.637501239776611
    4. '(v' → logprob: -7.262501239776611
    5. '(' → logprob: -9.13750171661377
    6. ' ((' → logprob: -10.88750171661377
    7. '   ' → logprob: -12.63750171661377
    8. ' ' → logprob: -13.01250171661377
    9. '	' → logprob: -14.76250171661377
    10. '  ' → logprob: -14.88750171661377

Token 103: 'u' (ID: 84)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.0020117908716201782
    2. ' (' → logprob: -6.252011775970459
    3. 'u' → logprob: -10.127012252807617
    4. '(v' → logprob: -10.127012252807617
    5. ',u' → logprob: -13.877012252807617
    6. '(' → logprob: -14.002012252807617
    7. ',' → logprob: -14.502012252807617
    8. ' u' → logprob: -15.127012252807617
    9. '(c' → logprob: -15.502012252807617
    10. '[u' → logprob: -16.002012252807617

Token 104: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.015288570895791054
    2. ',' → logprob: -4.390288352966309
    3. ' ,' → logprob: -5.890288352966309
    4. ',(' → logprob: -12.765288352966309
    5. ',v' → logprob: -13.390288352966309
    6. ',
' → logprob: -13.515288352966309
    7. '   ' → logprob: -14.765288352966309
    8. '```' → logprob: -14.765288352966309
    9. ',k' → logprob: -15.140288352966309
    10. ',int' → logprob: -15.515288352966309

Token 105: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0010422171326354146
    2. ')' → logprob: -6.876042366027832
    3. ')))' → logprob: -12.501042366027832
    4. ' ))' → logprob: -12.626042366027832
    5. '))
' → logprob: -13.251042366027832
    6. '       ' → logprob: -15.501042366027832
    7. '   ' → logprob: -15.626042366027832
    8. ' )' → logprob: -16.751041412353516
    9. '));' → logprob: -16.751041412353516
    10. '),' → logprob: -16.751041412353516

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04891651123762131
    2. 'visited' → logprob: -3.5489165782928467
    3. ' visited' → logprob: -5.173916339874268
    4. 'def' → logprob: -5.548916339874268
    5. 'distance' → logprob: -5.798916339874268
    6. 'dp' → logprob: -5.923916339874268
    7. 'dist' → logprob: -6.548916339874268
    8. 'from' → logprob: -6.923916339874268
    9. '    
' → logprob: -7.923916339874268
    10. 'import' → logprob: -8.673916816711426

Token 107: ' bases' (ID: 31148)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.127026081085205
    2. 'dist' → logprob: -1.127026081085205
    3. 'visited' → logprob: -1.627026081085205
    4. 'distance' → logprob: -3.252026081085205
    5. 'depth' → logprob: -3.502026081085205
    6. 'def' → logprob: -3.627026081085205
    7. '   ' → logprob: -4.002026081085205
    8. 'from' → logprob: -4.627026081085205
    9. 'stack' → logprob: -4.877026081085205
    10. 'import' → logprob: -5.252026081085205

Token 108: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07395262271165848
    2. '=' → logprob: -2.6989526748657227
    3. '=[]' → logprob: -7.448952674865723
    4. '_dist' → logprob: -7.823952674865723
    5. 'dist' → logprob: -8.198952674865723
    6. '_cost' → logprob: -8.198952674865723
    7. ',' → logprob: -8.323952674865723
    8. 'visited' → logprob: -8.323952674865723
    9. '_' → logprob: -8.448952674865723
    10. 'd' → logprob: -8.448952674865723

Token 109: ' set' (ID: 920)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -1.1660971641540527
    2. 'list' → logprob: -1.4160971641540527
    3. '[list' → logprob: -1.5410971641540527
    4. '[]' → logprob: -1.9160971641540527
    5. ' []' → logprob: -3.0410971641540527
    6. ' [' → logprob: -3.5410971641540527
    7. '[' → logprob: -5.416097164154053
    8. '[int' → logprob: -6.916097164154053
    9. 'set' → logprob: -7.416097164154053
    10. '[input' → logprob: -7.916097164154053

Token 110: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05212315917015076
    2. '(map' → logprob: -3.1771230697631836
    3. '(input' → logprob: -5.302123069763184
    4. '([' → logprob: -6.677123069763184
    5. '([]' → logprob: -7.052123069763184
    6. '(int' → logprob: -7.177123069763184
    7. '(' → logprob: -7.552123069763184
    8. '(list' → logprob: -7.927123069763184
    9. '(range' → logprob: -8.802123069763184
    10. '((' → logprob: -9.302123069763184

Token 111: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05949453264474869
    2. ' for' → logprob: -3.4344944953918457
    3. 'for' → logprob: -3.6844944953918457
    4. '    
' → logprob: -8.934494972229004
    5. '	for' → logprob: -9.184494972229004
    6. '  ' → logprob: -10.184494972229004
    7. '
' → logprob: -10.559494972229004
    8. 't' → logprob: -10.809494972229004
    9. ' ' → logprob: -11.309494972229004
    10. 'while' → logprob: -11.684494972229004

Token 112: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07254242151975632
    2. ' for' → logprob: -2.947542428970337
    3. '   ' → logprob: -4.072542190551758
    4. 'bases' → logprob: -7.947542190551758
    5. 'while' → logprob: -10.072542190551758
    6. 'base' → logprob: -10.947542190551758
    7. 'b' → logprob: -11.322542190551758
    8. ' bases' → logprob: -11.322542190551758
    9. ' ' → logprob: -11.822542190551758
    10. '	for' → logprob: -12.447542190551758

Token 113: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16024728119373322
    2. ' _' → logprob: -1.9102473258972168
    3. '_i' → logprob: -11.160246849060059
    4. ' ' → logprob: -12.535246849060059
    5. ' i' → logprob: -13.660246849060059
    6. '__' → logprob: -14.285246849060059
    7. 'i' → logprob: -14.410246849060059
    8. ' ' → logprob: -14.535246849060059
    9. '_b' → logprob: -14.785246849060059
    10. '   ' → logprob: -14.910246849060059

Token 114: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.28146588802337646
    2. ' in' → logprob: -1.4064658880233765
    3. 'range' → logprob: -8.656465530395508
    4. ' ' → logprob: -9.406465530395508
    5. '_' → logprob: -11.156465530395508
    6. '(' → logprob: -11.656465530395508
    7. ' range' → logprob: -11.656465530395508
    8. 'n' → logprob: -11.906465530395508
    9. '(range' → logprob: -12.281465530395508
    10. '  ' → logprob: -12.531465530395508

Token 115: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0023329516407102346
    2. ' range' → logprob: -6.127333164215088
    3. 'map' → logprob: -9.87733268737793
    4. 'bases' → logprob: -10.12733268737793
    5. 'input' → logprob: -10.50233268737793
    6. '(range' → logprob: -11.62733268737793
    7. 'ranges' → logprob: -12.50233268737793
    8. 'base' → logprob: -12.87733268737793
    9. 'ran' → logprob: -13.25233268737793
    10. '	range' → logprob: -13.25233268737793

Token 116: '(t' (ID: 2025)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.01008540391921997
    2. '(t' → logprob: -4.635085582733154
    3. ' (' → logprob: -8.260085105895996
    4. 'k' → logprob: -10.010085105895996
    5. '(' → logprob: -10.885085105895996
    6. ' k' → logprob: -12.510085105895996
    7. 't' → logprob: -13.010085105895996
    8. '   ' → logprob: -14.760085105895996
    9. ' t' → logprob: -15.635085105895996
    10. ' ' → logprob: -15.885085105895996

Token 117: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47417956590652466
    2. '):
' → logprob: -0.9741795659065247
    3. '):
' → logprob: -9.4741792678833
    4. ' ):' → logprob: -11.2241792678833
    5. ' ):
' → logprob: -12.3491792678833
    6. ')' → logprob: -12.5991792678833
    7. '   ' → logprob: -13.5991792678833
    8. '+' → logprob: -14.0991792678833
    9. ' ' → logprob: -14.2241792678833
    10. '  ' → logprob: -14.3491792678833

Token 118: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031260251998901367
    2. '       ' → logprob: -6.87812614440918
    3. 'b' → logprob: -7.12812614440918
    4. ' bases' → logprob: -7.37812614440918
    5. ' b' → logprob: -7.62812614440918
    6. 'bases' → logprob: -9.00312614440918
    7. ' x' → logprob: -11.50312614440918
    8. '   ' → logprob: -11.75312614440918
    9. ' s' → logprob: -11.87812614440918
    10. '```' → logprob: -12.25312614440918

Token 119: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.309353768825531
    2. ' b' → logprob: -1.8093538284301758
    3. 'x' → logprob: -3.434353828430176
    4. 'base' → logprob: -3.934353828430176
    5. '   ' → logprob: -4.059353828430176
    6. ' base' → logprob: -4.059353828430176
    7. ' x' → logprob: -5.184353828430176
    8. 'a' → logprob: -6.059353828430176
    9. 'bases' → logprob: -6.059353828430176
    10. ' bases' → logprob: -6.934353828430176

Token 120: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.458123117685318
    2. 'ases' → logprob: -1.4581230878829956
    3. 'ase' → logprob: -2.458123207092285
    4. '=' → logprob: -3.083123207092285
    5. '=int' → logprob: -5.708123207092285
    6. '=input' → logprob: -10.333123207092285
    7. 'ased' → logprob: -10.458123207092285
    8. '   ' → logprob: -11.208123207092285
    9. ' ' → logprob: -11.583123207092285
    10. ',' → logprob: -11.583123207092285

Token 121: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023245712742209435
    2. ' int' → logprob: -3.7732458114624023
    3. '	int' → logprob: -16.898244857788086
    4. '=int' → logprob: -16.898244857788086
    5. '(int' → logprob: -17.148244857788086
    6. '<int' → logprob: -17.398244857788086
    7. '   ' → logprob: -18.023244857788086
    8. '  ' → logprob: -18.398244857788086
    9. '[int' → logprob: -18.523244857788086
    10. ' ' → logprob: -19.023244857788086

Token 122: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -1.5094070477061905e-05
    2. 'input' → logprob: -11.250015258789062
    3. '=input' → logprob: -13.875015258789062
    4. '(' → logprob: -14.500015258789062
    5. '()' → logprob: -15.250015258789062
    6. ',input' → logprob: -15.500015258789062
    7. ' (' → logprob: -17.375015258789062
    8. ' input' → logprob: -17.750015258789062
    9. '	input' → logprob: -17.750015258789062
    10. '(int' → logprob: -17.875015258789062

Token 123: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.018834302201867104
    2. '()' → logprob: -4.018834114074707
    3. '().' → logprob: -7.518834114074707
    4. ')' → logprob: -9.268834114074707
    5. '())
' → logprob: -10.143834114074707
    6. ' ())' → logprob: -12.768834114074707
    7. '()
' → logprob: -13.018834114074707
    8. '();)' → logprob: -13.643834114074707
    9. '())

' → logprob: -14.893834114074707
    10. '(' → logprob: -15.143834114074707

Token 124: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03510504215955734
    2. '   ' → logprob: -3.410104990005493
    3. 'bases' → logprob: -6.910105228424072
    4. ' bases' → logprob: -8.285104751586914
    5. '<|end|>' → logprob: -9.660104751586914
    6. ',' → logprob: -9.660104751586914
    7. '
' → logprob: -10.660104751586914
    8. '```' → logprob: -11.285104751586914
    9. 'b' → logprob: -11.660104751586914
    10. '           ' → logprob: -11.910104751586914

Token 125: ' bases' (ID: 31148)
  Prédit: 'bases'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bases' (adapté à ' bases') → logprob: -0.07014160603284836
    2. ' bases' → logprob: -2.695141553878784
    3. '   ' → logprob: -9.070141792297363
    4. 'b' → logprob: -9.820141792297363
    5. '       ' → logprob: -10.320141792297363
    6. 'bas' → logprob: -14.070141792297363
    7. ' ' → logprob: -14.570141792297363
    8. '	b' → logprob: -14.695141792297363
    9. '```' → logprob: -15.070141792297363
    10. 'base' → logprob: -15.820141792297363

Token 126: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0019382734317332506
    2. '.' → logprob: -6.251938343048096
    3. '.append' → logprob: -11.751937866210938
    4. ' .' → logprob: -14.251937866210938
    5. '.setdefault' → logprob: -14.751937866210938
    6. '.update' → logprob: -14.876937866210938
    7. '.insert' → logprob: -15.501937866210938
    8. '.Add' → logprob: -17.001937866210938
    9. ').' → logprob: -17.126937866210938
    10. '.emplace' → logprob: -18.126937866210938

Token 127: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -4.842555426876061e-06
    2. '(' → logprob: -12.250004768371582
    3. ' (' → logprob: -17.8750057220459
    4. '((' → logprob: -19.1250057220459
    5. 'b' → logprob: -20.0000057220459
    6. '(
' → logprob: -20.2500057220459
    7. ')b' → logprob: -21.0000057220459
    8. '(B' → logprob: -21.8750057220459
    9. '(base' → logprob: -22.3750057220459
    10. '	b' → logprob: -23.0000057220459

Token 128: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4121114822482923e-06
    2. ')
' → logprob: -13.000003814697266
    3. ' )' → logprob: -14.125003814697266
    4. '))' → logprob: -16.375003814697266
    5. ')}' → logprob: -16.875003814697266
    6. '   ' → logprob: -17.125003814697266
    7. ')return' → logprob: -17.250003814697266
    8. '),' → logprob: -17.500003814697266
    9. '}' → logprob: -18.000003814697266
    10. '())' → logprob: -18.750003814697266

Token 129: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13407817482948303
    2. '
' → logprob: -2.75907826423645
    3. 'visited' → logprob: -3.75907826423645
    4. 'def' → logprob: -4.259078025817871
    5. '    
' → logprob: -4.759078025817871
    6. 'distance' → logprob: -5.134078025817871
    7. 'dp' → logprob: -5.634078025817871
    8. ' visited' → logprob: -5.759078025817871
    9. 'dfs' → logprob: -7.009078025817871
    10. '```' → logprob: -7.634078025817871

Token 130: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6986737847328186
    2. 'dp' → logprob: -1.4486737251281738
    3. 'visited' → logprob: -1.9486737251281738
    4. 'def' → logprob: -2.573673725128174
    5. 'import' → logprob: -4.073673725128174
    6. 'from' → logprob: -4.448673725128174
    7. 'depth' → logprob: -4.948673725128174
    8. 'distance' → logprob: -5.073673725128174
    9. 'parent' → logprob: -6.448673725128174
    10. 'stack' → logprob: -6.573673725128174

Token 131: ' dp' (ID: 21546)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.099653720855713
    2. 'def' → logprob: -1.349653720855713
    3. 'visited' → logprob: -1.724653720855713
    4. 'from' → logprob: -2.474653720855713
    5. 'dp' → logprob: -2.724653720855713
    6. 'import' → logprob: -2.849653720855713
    7. 'distance' → logprob: -5.349653720855713
    8. '#' → logprob: -5.599653720855713
    9. 'depth' → logprob: -5.849653720855713
    10. 'stack' → logprob: -6.099653720855713

Token 132: '[u' (ID: 48750)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0019778802525252104
    2. '=' → logprob: -6.251977920532227
    3. '[' → logprob: -11.751977920532227
    4. ':' → logprob: -11.751977920532227
    5. 'dp' → logprob: -12.626977920532227
    6. '_' → logprob: -12.751977920532227
    7. 'def' → logprob: -12.876977920532227
    8. ',' → logprob: -13.001977920532227
    9. '=[' → logprob: -13.001977920532227
    10. ' ' → logprob: -13.001977920532227

Token 133: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04429302364587784
    2. '][' → logprob: -3.16929292678833
    3. ']=' → logprob: -7.16929292678833
    4. ']={' → logprob: -8.669293403625488
    5. '],' → logprob: -9.294293403625488
    6. ' ]' → logprob: -9.544293403625488
    7. '][]' → logprob: -10.169293403625488
    8. '])' → logprob: -10.419293403625488
    9. ' ][' → logprob: -10.669293403625488
    10. ',' → logprob: -10.669293403625488

Token 134: 'x' (ID: 87)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.200128436088562
    2. 'k' → logprob: -1.950128436088562
    3. 't' → logprob: -3.7001285552978516
    4. 'b' → logprob: -5.700128555297852
    5. '1' → logprob: -5.700128555297852
    6. '2' → logprob: -5.825128555297852
    7. '][' → logprob: -6.950128555297852
    8. ']' → logprob: -7.575128555297852
    9. 'False' → logprob: -7.700128555297852
    10. '(' → logprob: -8.200128555297852

Token 135: ']:' (ID: 12433)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014964618720114231
    2. '][' → logprob: -4.389964580535889
    3. ' ]' → logprob: -6.639964580535889
    4. ']=' → logprob: -7.014964580535889
    5. ' ][' → logprob: -9.264965057373047
    6. ']={' → logprob: -10.389965057373047
    7. '   ' → logprob: -10.639965057373047
    8. ',' → logprob: -10.639965057373047
    9. ']:' → logprob: -10.889965057373047
    10. '][]' → logprob: -11.014965057373047

Token 136: ' min' (ID: 1349)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.35478493571281433
    2. ' [' → logprob: -1.2297849655151367
    3. '{' → logprob: -6.854784965515137
    4. '0' → logprob: -7.354784965515137
    5. ' {' → logprob: -7.354784965515137
    6. '[int' → logprob: -7.354784965515137
    7. '{}' → logprob: -7.729784965515137
    8. '[n' → logprob: -7.979784965515137
    9. '[max' → logprob: -8.104784965515137
    10. ' {}' → logprob: -8.229784965515137

Token 137: ' cost' (ID: 3097)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.3462856709957123
    2. '_' → logprob: -1.8462857007980347
    3. '_distance' → logprob: -3.471285581588745
    4. '_dist' → logprob: -3.596285581588745
    5. ' =' → logprob: -3.721285581588745
    6. ' _' → logprob: -4.221285820007324
    7. 'cost' → logprob: -4.721285820007324
    8. ' cost' → logprob: -5.221285820007324
    9. '[' → logprob: -5.471285820007324
    10. '_time' → logprob: -5.596285820007324

Token 138: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04567709192633629
    2. '   ' → logprob: -3.2956771850585938
    3. '=' → logprob: -5.920677185058594
    4. '[' → logprob: -6.295677185058594
    5. '[u' → logprob: -7.045677185058594
    6. ' for' → logprob: -7.670677185058594
    7. ',' → logprob: -7.795677185058594
    8. 'dp' → logprob: -8.670677185058594
    9. 'for' → logprob: -8.920677185058594
    10. ')' → logprob: -9.045677185058594

Token 139: ' split' (ID: 12648)
  Prédit: 'reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reach' → logprob: -1.9909191131591797
    2. 'visit' → logprob: -1.9909191131591797
    3. ' reach' → logprob: -2.2409191131591797
    4. 'collect' → logprob: -2.8659191131591797
    5. 'connect' → logprob: -2.8659191131591797
    6. 'choose' → logprob: -2.8659191131591797
    7. ' cover' → logprob: -2.9909191131591797
    8. 'cover' → logprob: -3.1159191131591797
    9. 'deliver' → logprob: -3.3659191131591797
    10. '   ' → logprob: -3.3659191131591797

Token 140: ' subtree' (ID: 126158)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.07271325588226318
    2. ' dp' → logprob: -3.6977133750915527
    3. 'dp' → logprob: -3.8227133750915527
    4. ' [' → logprob: -4.822713375091553
    5. '[' → logprob: -5.322713375091553
    6. '_dp' → logprob: -6.447713375091553
    7. ',' → logprob: -6.447713375091553
    8. ' =' → logprob: -6.697713375091553
    9. '   ' → logprob: -6.822713375091553
    10. ' ' → logprob: -6.822713375091553

Token 141: ' rooted' (ID: 73759)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.014129536226391792
    2. '   ' → logprob: -5.014129638671875
    3. '[' → logprob: -5.514129638671875
    4. ',' → logprob: -7.389129638671875
    5. ' [' → logprob: -7.514129638671875
    6. '```' → logprob: -8.264129638671875
    7. '[node' → logprob: -8.264129638671875
    8. '(u' → logprob: -8.514129638671875
    9. '[x' → logprob: -9.014129638671875
    10. ' at' → logprob: -9.264129638671875

Token 142: ' at' (ID: 540)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.06223062798380852
    2. 'at' → logprob: -3.5622305870056152
    3. ' at' → logprob: -3.5622305870056152
    4. 'u' → logprob: -6.187230587005615
    5. '   ' → logprob: -7.062230587005615
    6. 'with' → logprob: -9.312231063842773
    7. 'in' → logprob: -9.562231063842773
    8. '(u' → logprob: -9.687231063842773
    9. ' ' → logprob: -10.062231063842773
    10. '```' → logprob: -10.062231063842773

Token 143: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.01817464828491211
    2. ' u' → logprob: -4.018174648284912
    3. '[u' → logprob: -10.64317512512207
    4. '```' → logprob: -15.89317512512207
    5. '
' → logprob: -16.26817512512207
    6. ''u' → logprob: -16.26817512512207
    7. '`' → logprob: -16.26817512512207
    8. '	u' → logprob: -16.39317512512207
    9. '(u' → logprob: -16.39317512512207
    10. '   ' → logprob: -16.39317512512207

Token 144: ' into' (ID: 1511)
  Prédit: ' into'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' into' → logprob: -0.2833436131477356
    2. ',' → logprob: -2.658343553543091
    3. '[' → logprob: -3.033343553543091
    4. '   ' → logprob: -3.158343553543091
    5. '][' → logprob: -3.783343553543091
    6. '[x' → logprob: -4.03334379196167
    7. 'into' → logprob: -4.65834379196167
    8. '```' → logprob: -4.78334379196167
    9. ' with' → logprob: -5.28334379196167
    10. ' for' → logprob: -5.53334379196167

Token 145: ' x' (ID: 1215)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3709337115287781
    2. 'x' → logprob: -1.4959337711334229
    3. '2' → logprob: -3.745933771133423
    4. ' k' → logprob: -3.745933771133423
    5. 't' → logprob: -4.620933532714844
    6. 'two' → logprob: -4.620933532714844
    7. ' x' → logprob: -5.495933532714844
    8. ' two' → logprob: -5.870933532714844
    9. '(' → logprob: -6.120933532714844
    10. '[x' → logprob: -6.620933532714844

Token 146: ' components' (ID: 10674)
  Prédit: '_sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.6049210429191589
    2. 'sub' → logprob: -2.7299211025238037
    3. ' _' → logprob: -2.9799211025238037
    4. ' sub' → logprob: -3.1049211025238037
    5. '_s' → logprob: -3.2299211025238037
    6. '   ' → logprob: -3.3549211025238037
    7. ' subsets' → logprob: -3.7299211025238037
    8. ' parts' → logprob: -3.8549211025238037
    9. ',' → logprob: -3.8549211025238037
    10. 's' → logprob: -3.9799211025238037

Token 147: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5304079651832581
    2. 'dp' → logprob: -1.5304079055786133
    3. ' =' → logprob: -1.9054079055786133
    4. ']' → logprob: -4.155407905578613
    5. ' dp' → logprob: -4.530407905578613
    6. ',' → logprob: -5.655407905578613
    7. ')' → logprob: -5.780407905578613
    8. '_dp' → logprob: -6.155407905578613
    9. ' with' → logprob: -6.280407905578613
    10. ' from' → logprob: -6.655407905578613

Token 148: ' each' (ID: 2454)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24584077298641205
    2. ')' → logprob: -1.9958407878875732
    3. ' ' → logprob: -3.7458407878875732
    4. '#' → logprob: -4.120840549468994
    5. '    ' → logprob: -4.370840549468994
    6. ' n' → logprob: -4.995840549468994
    7. '{' → logprob: -5.745840549468994
    8. '0' → logprob: -5.995840549468994
    9. ']' → logprob: -6.245840549468994
    10. 'n' → logprob: -6.370840549468994

Token 149: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1245976686477661
    2. ' is' → logprob: -1.2495976686477661
    3. ' with' → logprob: -1.9995976686477661
    4. 'dp' → logprob: -3.2495975494384766
    5. ' =' → logprob: -3.3745975494384766
    6. 'with' → logprob: -3.4995975494384766
    7. ' of' → logprob: -3.9995975494384766
    8. ' at' → logprob: -4.249597549438477
    9. ' dp' → logprob: -4.374597549438477
    10. ' has' → logprob: -4.624597549438477

Token 150: ' >=' (ID: 5064)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.6996579170227051
    2. ' at' → logprob: -1.074657917022705
    3. 'out' → logprob: -2.824657917022705
    4. ' or' → logprob: -4.074657917022705
    5. 'or' → logprob: -4.324657917022705
    6. '0' → logprob: -4.574657917022705
    7. 'a' → logprob: -4.824657917022705
    8. 'in' → logprob: -5.199657917022705
    9. 'base' → logprob: -5.574657917022705
    10. 'bases' → logprob: -5.574657917022705

Token 151: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06137647479772568
    2. ' ' → logprob: -3.5613765716552734
    3. 'k' → logprob: -3.6863765716552734
    4. ' k' → logprob: -5.686376571655273
    5. '0' → logprob: -6.061376571655273
    6. ' bases' → logprob: -8.686376571655273
    7. 'bases' → logprob: -9.311376571655273
    8. ' one' → logprob: -11.061376571655273
    9. '```' → logprob: -11.311376571655273
    10. '2' → logprob: -11.811376571655273

Token 152: ' base' (ID: 3611)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2489644289016724
    2. ' subtree' → logprob: -1.6239644289016724
    3. ' _' → logprob: -1.9989644289016724
    4. '_sub' → logprob: -3.123964309692383
    5. ' space' → logprob: -3.373964309692383
    6. ')' → logprob: -3.373964309692383
    7. ' line' → logprob: -3.373964309692383
    8. 'component' → logprob: -3.623964309692383
    9. ' component' → logprob: -3.623964309692383
    10. 'space' → logprob: -3.873964309692383

Token 153: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.033920686691999435
    2. '
' → logprob: -3.7839207649230957
    3. ' dp' → logprob: -5.533920764923096
    4. '\n' → logprob: -5.908920764923096
    5. '   ' → logprob: -7.408920764923096
    6. ' =' → logprob: -7.408920764923096
    7. '_dp' → logprob: -7.533920764923096
    8. ',' → logprob: -7.783920764923096
    9. '```' → logprob: -7.908920764923096
    10. ']' → logprob: -8.158920288085938

Token 154: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0034322156570851803
    2. ' dp' → logprob: -6.128432273864746
    3. '   ' → logprob: -7.378432273864746
    4. ' =' → logprob: -8.753432273864746
    5. '
' → logprob: -8.878432273864746
    6. '```' → logprob: -9.628432273864746
    7. '_dp' → logprob: -9.878432273864746
    8. '\n' → logprob: -10.003432273864746
    9. '(dp' → logprob: -10.753432273864746
    10. 'from' → logprob: -11.003432273864746

Token 155: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00010759611177491024
    2. ' dp' → logprob: -9.250107765197754
    3. 'import' → logprob: -12.125107765197754
    4. 'from' → logprob: -12.375107765197754
    5. '   ' → logprob: -13.625107765197754
    6. '_dp' → logprob: -15.750107765197754
    7. ' from' → logprob: -16.250106811523438
    8. 'dfs' → logprob: -16.250106811523438
    9. 'def' → logprob: -16.500106811523438
    10. '	dp' → logprob: -16.625106811523438

Token 156: ' size' (ID: 2349)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00023441045777872205
    2. ' dp' → logprob: -9.000234603881836
    3. 'import' → logprob: -9.625234603881836
    4. 'from' → logprob: -10.250234603881836
    5. 'def' → logprob: -12.625234603881836
    6. 'INF' → logprob: -12.750234603881836
    7. ' from' → logprob: -14.125234603881836
    8. 'for' → logprob: -14.250234603881836
    9. 'dfs' → logprob: -14.875234603881836
    10. '   ' → logprob: -15.125234603881836

Token 157: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020025912672281265
    2. 'dp' → logprob: -4.520025730133057
    3. '=' → logprob: -5.145025730133057
    4. '_dp' → logprob: -7.020025730133057
    5. '   ' → logprob: -7.270025730133057
    6. ',' → logprob: -7.520025730133057
    7. 's' → logprob: -8.520026206970215
    8. ' dp' → logprob: -9.020026206970215
    9. ')' → logprob: -9.020026206970215
    10. '_' → logprob: -9.270026206970215

Token 158: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08071645349264145
    2. 'adj' → logprob: -2.580716371536255
    3. ' dp' → logprob: -6.580716609954834
    4. ' adj' → logprob: -8.330716133117676
    5. '(dp' → logprob: -9.830716133117676
    6. '[' → logprob: -10.455716133117676
    7. '(adj' → logprob: -10.455716133117676
    8. '`' → logprob: -11.080716133117676
    9. '   ' → logprob: -11.580716133117676
    10. '```' → logprob: -11.580716133117676

Token 159: '[u' (ID: 48750)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006659838370978832
    2. '=' → logprob: -5.631659984588623
    3. '[u' → logprob: -6.506659984588623
    4. 'dp' → logprob: -7.006659984588623
    5. '[' → logprob: -8.631659507751465
    6. ' ' → logprob: -9.381659507751465
    7. ',' → logprob: -9.506659507751465
    8. '   ' → logprob: -9.631659507751465
    9. '=[' → logprob: -10.131659507751465
    10. 's' → logprob: -10.381659507751465

Token 160: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.057294998317956924
    2. '][' → logprob: -3.557295083999634
    3. ']=' → logprob: -3.807295083999634
    4. '[u' → logprob: -5.682294845581055
    5. '])' → logprob: -7.682294845581055
    6. ']={' → logprob: -7.932294845581055
    7. '+' → logprob: -8.557294845581055
    8. ')' → logprob: -8.682294845581055
    9. '=' → logprob: -9.557294845581055
    10. '[' → logprob: -9.932294845581055

Token 161: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.576125979423523
    2. '=' → logprob: -0.826125979423523
    3. '[' → logprob: -9.201126098632812
    4. '=[' → logprob: -10.201126098632812
    5. ',' → logprob: -10.576126098632812
    6. ' ' → logprob: -12.576126098632812
    7. ' =[' → logprob: -12.701126098632812
    8. '   ' → logprob: -12.951126098632812
    9. '=[]' → logprob: -13.326126098632812
    10. ' is' → logprob: -13.326126098632812

Token 162: ' up' (ID: 869)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7638715505599976
    2. 't' → logprob: -1.7638715505599976
    3. ' k' → logprob: -2.388871669769287
    4. ' t' → logprob: -2.638871669769287
    5. 'n' → logprob: -2.638871669769287
    6. ' n' → logprob: -3.513871669769287
    7. '[t' → logprob: -3.638871669769287
    8. '[k' → logprob: -3.888871669769287
    9. ' [' → logprob: -4.013871669769287
    10. '[' → logprob: -4.513871669769287

Token 163: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.3274911046028137
    2. ' to' → logprob: -1.952491044998169
    3. '_to' → logprob: -2.577491044998169
    4. 'o' → logprob: -3.952491044998169
    5. '   ' → logprob: -4.577491283416748
    6. '[to' → logprob: -4.702491283416748
    7. ' =' → logprob: -5.202491283416748
    8. '[n' → logprob: -5.952491283416748
    9. '(n' → logprob: -6.327491283416748
    10. '=' → logprob: -6.327491283416748

Token 164: ' min' (ID: 1349)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3487647771835327
    2. ' k' → logprob: -1.9737647771835327
    3. 't' → logprob: -2.9737648963928223
    4. 'n' → logprob: -3.0987648963928223
    5. ' t' → logprob: -3.3487648963928223
    6. ' n' → logprob: -3.8487648963928223
    7. 'len' → logprob: -6.973764896392822
    8. '(k' → logprob: -7.473764896392822
    9. ' (' → logprob: -8.348764419555664
    10. ' len' → logprob: -8.473764419555664

Token 165: '(t' (ID: 2025)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.5591439008712769
    2. '(t' → logprob: -1.4341439008712769
    3. '(n' → logprob: -1.6841439008712769
    4. '(len' → logprob: -5.809144020080566
    5. '(' → logprob: -7.434144020080566
    6. 't' → logprob: -7.809144020080566
    7. '((' → logprob: -8.434144020080566
    8. 'k' → logprob: -9.309144020080566
    9. '(b' → logprob: -10.809144020080566
    10. 'n' → logprob: -11.184144020080566

Token 166: ',k' (ID: 35155)
  Prédit: ',k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.23209495842456818
    2. ',' → logprob: -1.8570950031280518
    3. ',t' → logprob: -3.2320950031280518
    4. '+' → logprob: -4.607094764709473
    5. '+k' → logprob: -7.357094764709473
    6. ' ,' → logprob: -8.232094764709473
    7. ',n' → logprob: -9.232094764709473
    8. ',len' → logprob: -9.232094764709473
    9. ' +' → logprob: -9.482094764709473
    10. 'k' → logprob: -9.607094764709473

Token 167: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.15195435285568237
    2. ')' → logprob: -2.401954412460327
    3. '[u' → logprob: -3.401954412460327
    4. ' +' → logprob: -4.901954174041748
    5. ')+' → logprob: -5.026954174041748
    6. '[' → logprob: -7.276954174041748
    7. ',' → logprob: -7.276954174041748
    8. ')]' → logprob: -7.901954174041748
    9. '[t' → logprob: -8.151954650878906
    10. ')
' → logprob: -8.276954650878906

Token 168: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.021976523101329803
    2. 't' → logprob: -4.146976470947266
    3. ')' → logprob: -5.771976470947266
    4. ',' → logprob: -7.146976470947266
    5. ')])' → logprob: -7.646976470947266
    6. '
' → logprob: -7.771976470947266
    7. '])' → logprob: -8.396976470947266
    8. ')]' → logprob: -8.521976470947266
    9. ' ' → logprob: -9.396976470947266
    10. 'k' → logprob: -9.646976470947266

Token 169: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15518607199192047
    2. ')]' → logprob: -2.155186176300049
    3. '+' → logprob: -4.030186176300049
    4. ')])' → logprob: -5.905186176300049
    5. ' )' → logprob: -6.280186176300049
    6. ' +' → logprob: -6.405186176300049
    7. ')+' → logprob: -6.655186176300049
    8. ']' → logprob: -7.280186176300049
    9. ')
' → logprob: -7.405186176300049
    10. '   ' → logprob: -8.03018569946289

Token 170: ' but' (ID: 889)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5961751937866211
    2. 'dp' → logprob: -0.8461751937866211
    3. '
' → logprob: -4.721175193786621
    4. ' dp' → logprob: -5.846175193786621
    5. ':' → logprob: -6.471175193786621
    6. 'from' → logprob: -6.846175193786621
    7. 'import' → logprob: -7.096175193786621
    8. 'def' → logprob: -7.221175193786621
    9. '_dp' → logprob: -7.221175193786621
    10. '```' → logprob: -7.346175193786621

Token 171: ' k' (ID: 372)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.8579950928688049
    2. 't' → logprob: -1.6079950332641602
    3. ' not' → logprob: -2.10799503326416
    4. ' k' → logprob: -2.35799503326416
    5. 'k' → logprob: -2.60799503326416
    6. 'min' → logprob: -4.23299503326416
    7. ' n' → logprob: -4.35799503326416
    8. 'n' → logprob: -4.85799503326416
    9. ' min' → logprob: -4.98299503326416
    10. '0' → logprob: -5.35799503326416

Token 172: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0017228922806680202
    2. ' +' → logprob: -6.626722812652588
    3. ')' → logprob: -9.501723289489746
    4. ')+' → logprob: -9.751723289489746
    5. '=' → logprob: -10.126723289489746
    6. '>' → logprob: -10.126723289489746
    7. '>=' → logprob: -10.376723289489746
    8. '+k' → logprob: -10.876723289489746
    9. '+=' → logprob: -11.251723289489746
    10. '
' → logprob: -11.251723289489746

Token 173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004699954588431865
    2. ' ' → logprob: -7.750470161437988
    3. '=' → logprob: -11.000470161437988
    4. '
' → logprob: -12.000470161437988
    5. '2' → logprob: -12.375470161437988
    6. '```' → logprob: -12.875470161437988
    7. '>' → logprob: -13.125470161437988
    8. '0' → logprob: -13.500470161437988
    9. ' =' → logprob: -13.625470161437988
    10. '   ' → logprob: -14.375470161437988

Token 174: ' <=' (ID: 5017)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6272664070129395
    2. '
' → logprob: -1.2522664070129395
    3. ')' → logprob: -2.1272664070129395
    4. '+' → logprob: -4.0022664070129395
    5. ' =' → logprob: -4.3772664070129395
    6. '][' → logprob: -5.3772664070129395
    7. '[' → logprob: -5.6272664070129395
    8. ',' → logprob: -5.8772664070129395
    9. ']
' → logprob: -5.8772664070129395
    10. ')
' → logprob: -6.0022664070129395

Token 175: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7694442868232727
    2. ' t' → logprob: -1.144444227218628
    3. 'k' → logprob: -2.019444227218628
    4. ' k' → logprob: -3.519444227218628
    5. ' n' → logprob: -3.894444227218628
    6. 'n' → logprob: -4.019444465637207
    7. 'len' → logprob: -4.894444465637207
    8. ' len' → logprob: -6.144444465637207
    9. '10' → logprob: -6.269444465637207
    10. '=' → logprob: -6.769444465637207

Token 176: ' so' (ID: 813)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28110823035240173
    2. 'dp' → logprob: -1.5311082601547241
    3. '
' → logprob: -3.9061081409454346
    4. ' dp' → logprob: -5.281108379364014
    5. '    
' → logprob: -6.781108379364014
    6. ':' → logprob: -8.031107902526855
    7. 'from' → logprob: -8.281107902526855
    8. '	dp' → logprob: -8.281107902526855
    9. 'import' → logprob: -8.656107902526855
    10. ')' → logprob: -8.656107902526855

Token 177: ' max' (ID: 2999)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.1431374549865723
    2. ' t' → logprob: -1.5181374549865723
    3. 't' → logprob: -1.7681374549865723
    4. 'k' → logprob: -2.0181374549865723
    5. ' min' → logprob: -2.3931374549865723
    6. ' k' → logprob: -2.8931374549865723
    7. '   ' → logprob: -5.018137454986572
    8. 'size' → logprob: -6.268137454986572
    9. ' size' → logprob: -6.393137454986572
    10. ' for' → logprob: -7.893137454986572

Token 178: ' =' (ID: 314)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.7011978030204773
    2. '(t' → logprob: -1.576197862625122
    3. '(k' → logprob: -1.701197862625122
    4. ' =' → logprob: -3.201197862625122
    5. '_size' → logprob: -3.576197862625122
    6. ' size' → logprob: -4.326197624206543
    7. 'k' → logprob: -5.201197624206543
    8. 'x' → logprob: -5.201197624206543
    9. '=' → logprob: -5.326197624206543
    10. '(' → logprob: -5.701197624206543

Token 179: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.040358223021030426
    2. 't' → logprob: -3.540358304977417
    3. ' k' → logprob: -4.915358066558838
    4. ' t' → logprob: -5.915358066558838
    5. '(k' → logprob: -7.915358066558838
    6. '(t' → logprob: -9.415358543395996
    7. 'min' → logprob: -9.790358543395996
    8. ' min' → logprob: -12.290358543395996
    9. '10' → logprob: -13.290358543395996
    10. '[k' → logprob: -13.290358543395996

Token 180: '+' (ID: 10)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8492068648338318
    2. ' =' → logprob: -1.3492069244384766
    3. '
' → logprob: -1.8492069244384766
    4. 'dp' → logprob: -2.4742069244384766
    5. ' dp' → logprob: -4.349206924438477
    6. ')' → logprob: -4.599206924438477
    7. '=' → logprob: -4.974206924438477
    8. '    
' → logprob: -5.099206924438477
    9. ']' → logprob: -5.349206924438477
    10. '[' → logprob: -5.474206924438477

Token 181: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.1689596148207784e-05
    2. ' ' → logprob: -9.875051498413086
    3. '+' → logprob: -16.625051498413086
    4. '2' → logprob: -17.125051498413086
    5. '```' → logprob: -18.125051498413086
    6. '   ' → logprob: -18.625051498413086
    7. '`' → logprob: -18.625051498413086
    8. '
' → logprob: -19.125051498413086
    9. '0' → logprob: -19.625051498413086
    10. ' +' → logprob: -19.687551498413086

Token 182: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0019445802317932248
    2. '   ' → logprob: -6.751944541931152
    3. '
' → logprob: -7.876944541931152
    4. ' dp' → logprob: -8.376944541931152
    5. 'def' → logprob: -9.501944541931152
    6. 'import' → logprob: -10.251944541931152
    7. 'from' → logprob: -10.751944541931152
    8. '    
' → logprob: -11.751944541931152
    9. '	dp' → logprob: -11.876944541931152
    10. '_dp' → logprob: -12.376944541931152

Token 183: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.006447488442063332
    2. '   ' → logprob: -5.1314473152160645
    3. ' dp' → logprob: -8.006447792053223
    4. '
' → logprob: -9.631447792053223
    5. 'def' → logprob: -9.881447792053223
    6. 'from' → logprob: -11.006447792053223
    7. 'import' → logprob: -11.381447792053223
    8. '	dp' → logprob: -11.756447792053223
    9. '    
' → logprob: -12.006447792053223
    10. '```' → logprob: -12.131447792053223

Token 184: ' INF' (ID: 69196)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.05760519206523895
    2. '   ' → logprob: -2.932605266571045
    3. ' dp' → logprob: -6.182605266571045
    4. 'import' → logprob: -8.307604789733887
    5. '	dp' → logprob: -9.182604789733887
    6. '
' → logprob: -9.307604789733887
    7. 'def' → logprob: -9.682604789733887
    8. '    
' → logprob: -10.557604789733887
    9. '```' → logprob: -10.682604789733887
    10. 'DP' → logprob: -10.682604789733887

Token 185: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011049585416913033
    2. '=' → logprob: -4.511049747467041
    3. '=int' → logprob: -13.511049270629883
    4. ',' → logprob: -16.011049270629883
    5. '=float' → logprob: -16.011049270629883
    6. ')' → logprob: -16.636049270629883
    7. ' ' → logprob: -17.261049270629883
    8. '   ' → logprob: -17.261049270629883
    9. '＝' → logprob: -17.386049270629883
    10. ' ' → logprob: -17.636049270629883

Token 186: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.002661266131326556
    2. 'float' → logprob: -6.252661228179932
    3. ' ' → logprob: -7.252661228179932
    4. ' float' → logprob: -11.12766170501709
    5. 'int' → logprob: -11.62766170501709
    6. '1' → logprob: -15.00266170501709
    7. '100' → logprob: -16.502660751342773
    8. '   ' → logprob: -17.377660751342773
    9. ' int' → logprob: -18.502660751342773
    10. '  ' → logprob: -18.627660751342773

Token 187: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0013469000114127994
    2. 'float' → logprob: -6.626347064971924
    3. 'int' → logprob: -10.876346588134766
    4. '1' → logprob: -13.626346588134766
    5. ' ' → logprob: -14.876346588134766
    6. '100' → logprob: -15.001346588134766
    7. ' float' → logprob: -15.751346588134766
    8. '999' → logprob: -18.626346588134766
    9. 'sys' → logprob: -18.876346588134766
    10. '123' → logprob: -19.001346588134766

Token 188: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.07626838982105255
    2. '10' → logprob: -2.951268434524536
    3. '15' → logprob: -4.326268196105957
    4. '18' → logprob: -5.451268196105957
    5. '12' → logprob: -5.701268196105957
    6. '16' → logprob: -9.076268196105957
    7. '14' → logprob: -9.451268196105957
    8. '13' → logprob: -9.701268196105957
    9. '11' → logprob: -11.201268196105957
    10. '**' → logprob: -11.451268196105957

Token 189: '15' (ID: 1055)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.7024810910224915
    2. '15' → logprob: -0.7024810910224915
    3. '10' → logprob: -5.077481269836426
    4. '18' → logprob: -6.327481269836426
    5. '12' → logprob: -7.202481269836426
    6. '14' → logprob: -8.452481269836426
    7. '13' → logprob: -8.827481269836426
    8. '16' → logprob: -9.077481269836426
    9. '11' → logprob: -10.327481269836426
    10. '7' → logprob: -11.827481269836426

Token 190: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06222435086965561
    2. '
' → logprob: -2.8122243881225586
    3. ' dp' → logprob: -8.937224388122559
    4. '
' → logprob: -9.937224388122559
    5. '   ' → logprob: -10.687224388122559
    6. '_dp' → logprob: -11.687224388122559
    7. '    
' → logprob: -11.812224388122559
    8. 'DP' → logprob: -11.812224388122559
    9. '```' → logprob: -11.937224388122559
    10. 'def' → logprob: -12.062224388122559

Token 191: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.003420212771743536
    2. '   ' → logprob: -6.253420352935791
    3. ' dp' → logprob: -6.753420352935791
    4. 'def' → logprob: -8.878419876098633
    5. '
' → logprob: -9.503419876098633
    6. 'from' → logprob: -9.878419876098633
    7. 'import' → logprob: -10.503419876098633
    8. '    
' → logprob: -11.753419876098633
    9. '	dp' → logprob: -12.003419876098633
    10. ' from' → logprob: -12.628419876098633

Token 192: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.00014883324911352247
    2. 'def' → logprob: -9.50014877319336
    3. 'from' → logprob: -9.87514877319336
    4. '   ' → logprob: -11.75014877319336
    5. 'import' → logprob: -11.87514877319336
    6. ' dp' → logprob: -12.00014877319336
    7. 'dfs' → logprob: -14.75014877319336
    8. 'sys' → logprob: -15.37514877319336
    9. 'size' → logprob: -16.00014877319336
    10. '```' → logprob: -16.12514877319336

Token 193: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38824641704559326
    2. ' =' → logprob: -1.1382464170455933
    3. '[u' → logprob: -6.638246536254883
    4. '=[' → logprob: -9.763246536254883
    5. '[' → logprob: -13.013246536254883
    6. '=u' → logprob: -13.513246536254883
    7. '=[]' → logprob: -14.013246536254883
    8. '=[[' → logprob: -14.138246536254883
    9. ' =[' → logprob: -14.263246536254883
    10. ' ' → logprob: -14.513246536254883

Token 194: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06380946934223175
    2. '[{' → logprob: -3.563809394836426
    3. '[[' → logprob: -3.563809394836426
    4. ' [' → logprob: -5.563809394836426
    5. ' [{}' → logprob: -6.813809394836426
    6. ' [[' → logprob: -8.688809394836426
    7. ' [{' → logprob: -10.313809394836426
    8. '{' → logprob: -11.313809394836426
    9. '[node' → logprob: -12.938809394836426
    10. '[u' → logprob: -14.063809394836426

Token 195: 'dict' (ID: 20993)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1036849096417427
    2. '{}' → logprob: -2.603684902191162
    3. '{' → logprob: -3.978684902191162
    4. ' [' → logprob: -5.353684902191162
    5. 'dict' → logprob: -7.853684902191162
    6. 'None' → logprob: -8.60368537902832
    7. '[]' → logprob: -8.72868537902832
    8. '[-' → logprob: -9.72868537902832
    9. '[[' → logprob: -9.85368537902832
    10. 'default' → logprob: -9.97868537902832

Token 196: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.10032884031534195
    2. '()' → logprob: -2.3503289222717285
    3. ']' → logprob: -9.72532844543457
    4. ']()' → logprob: -9.97532844543457
    5. '()
' → logprob: -12.10032844543457
    6. '()]
' → logprob: -12.10032844543457
    7. '()][' → logprob: -13.85032844543457
    8. '()],' → logprob: -14.22532844543457
    9. '(),' → logprob: -14.35032844543457
    10. '{' → logprob: -14.85032844543457

Token 197: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0447184294462204
    2. 'for' → logprob: -3.2947185039520264
    3. ']' → logprob: -5.419718265533447
    4. ')' → logprob: -7.169718265533447
    5. '()' → logprob: -7.294718265533447
    6. '   ' → logprob: -7.669718265533447
    7. '	for' → logprob: -9.169718742370605
    8. '<|end|>' → logprob: -9.294718742370605
    9. ',' → logprob: -10.044718742370605
    10. ' ' → logprob: -10.169718742370605

Token 198: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.542227566242218
    2. '_' → logprob: -1.0422275066375732
    3. 'range' → logprob: -2.7922275066375732
    4. ' _' → logprob: -5.792227745056152
    5. '(range' → logprob: -6.542227745056152
    6. '_range' → logprob: -9.292227745056152
    7. '(_' → logprob: -12.667227745056152
    8. '(' → logprob: -13.042227745056152
    9. ' in' → logprob: -13.167227745056152
    10. '	range' → logprob: -13.792227745056152

Token 199: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3757934868335724
    2. ' range' → logprob: -1.62579345703125
    3. 'in' → logprob: -2.62579345703125
    4. ' in' → logprob: -3.12579345703125
    5. '(range' → logprob: -8.75079345703125
    6. '_' → logprob: -10.12579345703125
    7. 'ange' → logprob: -11.37579345703125
    8. '(' → logprob: -13.25079345703125
    9. '(n' → logprob: -13.62579345703125
    10. 'n' → logprob: -14.12579345703125

Token 200: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0380723662674427
    2. ' range' → logprob: -3.288072347640991
    3. '(range' → logprob: -10.41307258605957
    4. '   ' → logprob: -15.03807258605957
    5. 'n' → logprob: -15.78807258605957
    6. '(n' → logprob: -16.16307258605957
    7. ' ' → logprob: -16.78807258605957
    8. '	range' → logprob: -17.03807258605957
    9. 'r' → logprob: -17.78807258605957
    10. 'ran' → logprob: -18.16307258605957

Token 201: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.07030351459980011
    2. 'range' → logprob: -3.195303440093994
    3. ' range' → logprob: -3.695303440093994
    4. '(range' → logprob: -6.320303440093994
    5. 'n' → logprob: -8.570303916931152
    6. ' (' → logprob: -9.695303916931152
    7. ' n' → logprob: -10.195303916931152
    8. '   ' → logprob: -12.570303916931152
    9. '(' → logprob: -14.070303916931152
    10. '_range' → logprob: -14.570303916931152

Token 202: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -8.180258191714529e-06
    2. ' +' → logprob: -12.500008583068848
    3. '+
' → logprob: -12.625008583068848
    4. ')]' → logprob: -14.250008583068848
    5. ')])' → logprob: -16.12500762939453
    6. '+)' → logprob: -16.75000762939453
    7. '+

' → logprob: -16.87500762939453
    8. '()+' → logprob: -16.87500762939453
    9. ')' → logprob: -17.12500762939453
    10. '1' → logprob: -17.37500762939453

Token 203: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.245724504580721e-05
    2. '(' → logprob: -9.625092506408691
    3. ' ' → logprob: -10.750092506408691
    4. '7' → logprob: -14.125092506408691
    5. 'range' → logprob: -14.125092506408691
    6. ')' → logprob: -14.250092506408691
    7. '   ' → logprob: -14.375092506408691
    8. '+' → logprob: -14.500092506408691
    9. '])' → logprob: -15.000092506408691
    10. ')]' → logprob: -15.250092506408691

Token 204: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00578539352864027
    2. ')' → logprob: -5.2557854652404785
    3. ']' → logprob: -7.5057854652404785
    4. '])' → logprob: -13.75578498840332
    5. ')]
' → logprob: -15.88078498840332
    6. ' )' → logprob: -15.88078498840332
    7. ')],' → logprob: -16.63078498840332
    8. ')])' → logprob: -17.13078498840332
    9. '])]' → logprob: -17.38078498840332
    10. ')].' → logprob: -17.38078498840332

Token 205: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.21211875975131989
    2. '   ' → logprob: -1.8371187448501587
    3. ' def' → logprob: -3.9621188640594482
    4. ')' → logprob: -4.962118625640869
    5. ' for' → logprob: -5.712118625640869
    6. 'for' → logprob: -7.587118625640869
    7. 'dp' → logprob: -7.837118625640869
    8. 'u' → logprob: -7.837118625640869
    9. ':' → logprob: -8.712119102478027
    10. '[' → logprob: -8.837119102478027

Token 206: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0026897944044321775
    2. 'from' → logprob: -6.252689838409424
    3. 'import' → logprob: -7.377689838409424
    4. 'visited' → logprob: -9.752689361572266
    5. 'stack' → logprob: -10.002689361572266
    6. ' def' → logprob: -11.127689361572266
    7. 'sys' → logprob: -12.252689361572266
    8. 'for' → logprob: -12.752689361572266
    9. 'size' → logprob: -12.752689361572266
    10. 'parent' → logprob: -13.127689361572266

Token 207: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.2014184147119522
    2. ' dfs' → logprob: -1.701418399810791
    3. 'dp' → logprob: -12.70141887664795
    4. 'solve' → logprob: -13.70141887664795
    5. ' solve' → logprob: -14.70141887664795
    6. 'd' → logprob: -15.07641887664795
    7. 'DFS' → logprob: -16.826417922973633
    8. 'df' → logprob: -16.951417922973633
    9. ' dp' → logprob: -17.076417922973633
    10. ' DFS' → logprob: -17.326417922973633

Token 208: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.00035631912760436535
    2. '(' → logprob: -8.000356674194336
    3. '(node' → logprob: -11.000356674194336
    4. ' (' → logprob: -12.625356674194336
    5. '(root' → logprob: -15.375356674194336
    6. 'u' → logprob: -15.500356674194336
    7. '(
' → logprob: -15.625356674194336
    8. '(x' → logprob: -17.000356674194336
    9. 'dfs' → logprob: -17.125356674194336
    10. '(user' → logprob: -17.125356674194336

Token 209: ',p' (ID: 14835)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018542143516242504
    2. ',p' → logprob: -9.375185012817383
    3. ',u' → logprob: -9.625185012817383
    4. ',v' → logprob: -11.125185012817383
    5. ',parent' → logprob: -12.000185012817383
    6. ' ,' → logprob: -12.250185012817383
    7. ',c' → logprob: -12.375185012817383
    8. ',d' → logprob: -13.500185012817383
    9. ',l' → logprob: -14.000185012817383
    10. ',node' → logprob: -14.375185012817383

Token 210: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07168672978878021
    2. ',u' → logprob: -2.8216867446899414
    3. ',c' → logprob: -6.321686744689941
    4. ',v' → logprob: -6.446686744689941
    5. ' ,' → logprob: -6.446686744689941
    6. '):' → logprob: -6.946686744689941
    7. ',k' → logprob: -7.196686744689941
    8. ',x' → logprob: -7.446686744689941
    9. '):
' → logprob: -7.696686744689941
    10. ',d' → logprob: -7.821686744689941

Token 211: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028759613633155823
    2. '   ' → logprob: -6.002875804901123
    3. ' ' → logprob: -9.627876281738281
    4. '```' → logprob: -9.627876281738281
    5. ',' → logprob: -10.002876281738281
    6. ' for' → logprob: -10.377876281738281
    7. '     ' → logprob: -10.502876281738281
    8. '    ' → logprob: -11.002876281738281
    9. '[' → logprob: -11.127876281738281
    10. ' if' → logprob: -11.252876281738281

Token 212: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11550270020961761
    2. '   ' → logprob: -2.7405025959014893
    3. 'if' → logprob: -3.4905025959014893
    4. 'bases' → logprob: -5.115502834320068
    5. ' dp' → logprob: -6.365502834320068
    6. 'children' → logprob: -6.490502834320068
    7. 'sub' → logprob: -6.865502834320068
    8. ' if' → logprob: -6.865502834320068
    9. 'base' → logprob: -7.115502834320068
    10. 'count' → logprob: -7.865502834320068

Token 213: ' If' (ID: 1843)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.842810332775116
    2. '   ' → logprob: -1.3428103923797607
    3. 'if' → logprob: -2.0928103923797607
    4. 'children' → logprob: -2.5928103923797607
    5. 'bases' → logprob: -2.7178103923797607
    6. 'sub' → logprob: -4.092810153961182
    7. 'num' → logprob: -5.217810153961182
    8. 'base' → logprob: -5.342810153961182
    9. ' if' → logprob: -6.217810153961182
    10. 'visited' → logprob: -6.342810153961182

Token 214: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.03633423522114754
    2. ' u' → logprob: -3.411334276199341
    3. 'bases' → logprob: -6.786334037780762
    4. 'len' → logprob: -7.036334037780762
    5. ' bases' → logprob: -7.911334037780762
    6. ' len' → logprob: -8.411334037780762
    7. 'b' → logprob: -10.411334037780762
    8. '(u' → logprob: -10.786334037780762
    9. 'not' → logprob: -11.661334037780762
    10. ' not' → logprob: -11.786334037780762

Token 215: ' is' (ID: 382)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.4931440055370331
    2. ' in' → logprob: -1.1181440353393555
    3. 'in' → logprob: -3.3681440353393555
    4. 'not' → logprob: -3.6181440353393555
    5. ' is' → logprob: -7.6181440353393555
    6. ' has' → logprob: -8.868144035339355
    7. 'is' → logprob: -9.118144035339355
    8. 'has' → logprob: -9.493144035339355
    9. ' ' → logprob: -9.868144035339355
    10. '   ' → logprob: -9.993144035339355

Token 216: ' base' (ID: 3611)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.128782868385315
    2. 'bases' → logprob: -1.128782868385315
    3. '1' → logprob: -2.1287827491760254
    4. 'b' → logprob: -2.5037827491760254
    5. ' bases' → logprob: -3.0037827491760254
    6. '0' → logprob: -3.2537827491760254
    7. 'a' → logprob: -3.5037827491760254
    8. ' in' → logprob: -4.003782749176025
    9. 'base' → logprob: -5.128782749176025
    10. ' a' → logprob: -5.378782749176025

Token 217: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01926647312939167
    2. ':
' → logprob: -4.269266605377197
    3. '   ' → logprob: -6.144266605377197
    4. ',' → logprob: -6.519266605377197
    5. ' and' → logprob: -6.644266605377197
    6. ' :' → logprob: -10.019266128540039
    7. '[' → logprob: -10.519266128540039
    8. ''s' → logprob: -11.019266128540039
    9. ' if' → logprob: -11.644266128540039
    10. ' ' → logprob: -11.894266128540039

Token 218: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1398911029100418
    2. ' dp' → logprob: -2.2648911476135254
    3. '   ' → logprob: -4.139891147613525
    4. 'if' → logprob: -5.014891147613525
    5. ' if' → logprob: -5.889891147613525
    6. '       ' → logprob: -6.764891147613525
    7. ' ' → logprob: -9.514890670776367
    8. '	dp' → logprob: -9.514890670776367
    9. 'for' → logprob: -10.889890670776367
    10. '           ' → logprob: -11.514890670776367

Token 219: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -14.000001907348633
    3. 'u' → logprob: -14.375001907348633
    4. '   ' → logprob: -16.375001907348633
    5. '(u' → logprob: -18.000001907348633
    6. '```' → logprob: -18.125001907348633
    7. '	u' → logprob: -18.375001907348633
    8. '
' → logprob: -18.750001907348633
    9. ' =' → logprob: -18.875001907348633
    10. '\[' → logprob: -19.000001907348633

Token 220: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.12948165833950043
    2. ']={' → logprob: -2.879481554031372
    3. ']' → logprob: -3.004481554031372
    4. '[' → logprob: -4.879481792449951
    5. '={' → logprob: -6.129481792449951
    6. '{' → logprob: -6.254481792449951
    7. ']=' → logprob: -6.504481792449951
    8. '[u' → logprob: -6.879481792449951
    9. '=' → logprob: -7.379481792449951
    10. ']{' → logprob: -7.754481792449951

Token 221: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002202951582148671
    2. '{' → logprob: -6.127202987670898
    3. '(' → logprob: -11.752202987670898
    4. ' ' → logprob: -11.877202987670898
    5. '0' → logprob: -13.377202987670898
    6. ' {' → logprob: -13.752202987670898
    7. '   ' → logprob: -15.627202987670898
    8. '
' → logprob: -16.1272029876709
    9. '{
' → logprob: -16.6272029876709
    10. '[' → logprob: -17.1272029876709

Token 222: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006742254365235567
    2. ']=' → logprob: -5.006742477416992
    3. ' ]' → logprob: -11.006742477416992
    4. '=' → logprob: -11.756742477416992
    5. ' =' → logprob: -14.381742477416992
    6. ']={' → logprob: -14.506742477416992
    7. ']=(' → logprob: -14.756742477416992
    8. ']+=' → logprob: -15.006742477416992
    9. ')' → logprob: -15.381742477416992
    10. '][' → logprob: -16.006742477416992

Token 223: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.9153885558771435e-06
    2. ' ' → logprob: -12.375005722045898
    3. '(' → logprob: -13.500005722045898
    4. '   ' → logprob: -16.8750057220459
    5. 'INF' → logprob: -17.2500057220459
    6. '{' → logprob: -17.8750057220459
    7. '[' → logprob: -18.7500057220459
    8. '1' → logprob: -18.7500057220459
    9. 'c' → logprob: -18.8750057220459
    10. '  ' → logprob: -19.0000057220459

Token 224: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07695870846509933
    2. '   ' → logprob: -2.951958656311035
    3. ':' → logprob: -4.576958656311035
    4. '
' → logprob: -4.951958656311035
    5. ':
' → logprob: -6.076958656311035
    6. ',' → logprob: -7.576958656311035
    7. '{' → logprob: -8.201958656311035
    8. ')' → logprob: -8.451958656311035
    9. '<|end|>' → logprob: -8.576958656311035
    10. ' ' → logprob: -9.201958656311035

Token 225: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.20252437889575958
    2. 'dp' → logprob: -1.7025244235992432
    3. '       ' → logprob: -7.452524185180664
    4. '   ' → logprob: -7.827524185180664
    5. '	dp' → logprob: -9.327524185180664
    6. '{' → logprob: -11.202524185180664
    7. ' ' → logprob: -11.327524185180664
    8. '(dp' → logprob: -12.452524185180664
    9. ' ' → logprob: -13.077524185180664
    10. '0' → logprob: -13.202524185180664

Token 226: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.5048530030981055e-06
    2. 'u' → logprob: -13.750001907348633
    3. '[' → logprob: -16.250001907348633
    4. '	u' → logprob: -16.500001907348633
    5. ' [' → logprob: -17.125001907348633
    6. '   ' → logprob: -17.625001907348633
    7. ',u' → logprob: -17.750001907348633
    8. '
' → logprob: -18.250001907348633
    9. '<u' → logprob: -18.250001907348633
    10. '][' → logprob: -18.375001907348633

Token 227: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.025784499943256378
    2. '[' → logprob: -4.150784492492676
    3. ']={' → logprob: -5.275784492492676
    4. '{' → logprob: -6.275784492492676
    5. ']{' → logprob: -7.150784492492676
    6. ']' → logprob: -7.400784492492676
    7. '={' → logprob: -7.900784492492676
    8. '0' → logprob: -8.275784492492676
    9. '}[' → logprob: -8.900784492492676
    10. '][-' → logprob: -9.650784492492676

Token 228: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008498902898281813
    2. ' ' → logprob: -7.375849723815918
    3. '{' → logprob: -8.500849723815918
    4. '1' → logprob: -11.750849723815918
    5. '{}' → logprob: -12.750849723815918
    6. '   ' → logprob: -13.000849723815918
    7. ')' → logprob: -13.250849723815918
    8. ' {' → logprob: -13.875849723815918
    9. '  ' → logprob: -14.500849723815918
    10. '{
' → logprob: -14.500849723815918

Token 229: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3885139226913452
    2. ']=' → logprob: -1.1385139226913452
    3. '=' → logprob: -6.513514041900635
    4. ' =' → logprob: -9.513513565063477
    5. '   ' → logprob: -10.263513565063477
    6. ' ]' → logprob: -10.638513565063477
    7. ']=-' → logprob: -12.013513565063477
    8. ']={' → logprob: -12.138513565063477
    9. '}=' → logprob: -12.263513565063477
    10. ')=' → logprob: -12.888513565063477

Token 230: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5570885807392187e-05
    2. ' ' → logprob: -11.125015258789062
    3. '{' → logprob: -14.250015258789062
    4. 'INF' → logprob: -17.000015258789062
    5. '   ' → logprob: -17.750015258789062
    6. '1' → logprob: -18.750015258789062
    7. '{}' → logprob: -18.875015258789062
    8. '(' → logprob: -19.125015258789062
    9. '000' → logprob: -20.125015258789062
    10. '00' → logprob: -20.125015258789062

Token 231: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.364914208650589
    2. '   ' → logprob: -1.6149141788482666
    3. '
' → logprob: -2.9899141788482666
    4. ':' → logprob: -3.1149141788482666
    5. ':
' → logprob: -4.864914417266846
    6. '    
' → logprob: -6.739914417266846
    7. '        
' → logprob: -6.864914417266846
    8. '  
' → logprob: -7.614914417266846
    9. '<|end|>' → logprob: -8.114913940429688
    10. ',' → logprob: -8.364913940429688

Token 232: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10349984467029572
    2. ':
' → logprob: -2.7284998893737793
    3. '   ' → logprob: -3.4784998893737793
    4. '       ' → logprob: -7.603499889373779
    5. '():' → logprob: -7.728499889373779
    6. '):' → logprob: -7.853499889373779
    7. '```' → logprob: -8.603499412536621
    8. '
' → logprob: -9.353499412536621
    9. '):
' → logprob: -9.478499412536621
    10. ' :' → logprob: -9.603499412536621

Token 233: ' dp' (ID: 21546)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.40666499733924866
    2. 'if' → logprob: -1.9066649675369263
    3. '   ' → logprob: -2.406665086746216
    4. '       ' → logprob: -2.656665086746216
    5. ' 
' → logprob: -4.531664848327637
    6. '
' → logprob: -4.531664848327637
    7. '	if' → logprob: -7.031664848327637
    8. '    
' → logprob: -7.156664848327637
    9. '  
' → logprob: -8.156664848327637
    10. '        
' → logprob: -8.281664848327637

Token 234: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -4.320199877838604e-07
    2. 'u' → logprob: -15.375
    3. '[' → logprob: -16.25
    4. '[user' → logprob: -18.0
    5. ' [' → logprob: -18.5
    6. ')[' → logprob: -19.125
    7. '```' → logprob: -19.125
    8. '}[' → logprob: -19.25
    9. '=u' → logprob: -19.25
    10. '][' → logprob: -19.375

Token 235: ']' (ID: 60)
  Prédit: ']={'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']={' → logprob: -0.496849000453949
    2. ']' → logprob: -1.6218490600585938
    3. '][' → logprob: -1.7468490600585938
    4. '[' → logprob: -4.746849060058594
    5. ']=' → logprob: -5.371849060058594
    6. '{' → logprob: -5.371849060058594
    7. '[u' → logprob: -7.246849060058594
    8. '={' → logprob: -7.371849060058594
    9. '[{' → logprob: -8.996849060058594
    10. '=' → logprob: -9.371849060058594

Token 236: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02614341862499714
    2. '=' → logprob: -4.526143550872803
    3. '={' → logprob: -4.901143550872803
    4. '[{' → logprob: -5.526143550872803
    5. '{' → logprob: -5.901143550872803
    6. ' =' → logprob: -7.901143550872803
    7. '[u' → logprob: -8.776143074035645
    8. '={}' → logprob: -9.276143074035645
    9. ' ={' → logprob: -9.776143074035645
    10. '=[' → logprob: -10.026143074035645

Token 237: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.014212513342499733
    2. '{}' → logprob: -4.514212608337402
    3. ' {' → logprob: -5.764212608337402
    4. '({' → logprob: -11.264212608337402
    5. ' {}' → logprob: -12.264212608337402
    6. 'dict' → logprob: -14.264212608337402
    7. '{}
' → logprob: -14.264212608337402
    8. '   ' → logprob: -14.514212608337402
    9. '{id' → logprob: -14.639212608337402
    10. '{k' → logprob: -15.139212608337402

Token 238: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00960450153797865
    2. '(' → logprob: -4.759604454040527
    3. '0' → logprob: -7.009604454040527
    4. ' ' → logprob: -10.009604454040527
    5. ' (' → logprob: -10.634604454040527
    6. '   ' → logprob: -11.884604454040527
    7. '(int' → logprob: -12.759604454040527
    8. '(i' → logprob: -12.759604454040527
    9. 'int' → logprob: -12.884604454040527
    10. '(k' → logprob: -14.759604454040527

Token 239: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.333223139634356e-05
    2. '0' → logprob: -10.750033378601074
    3. ' :' → logprob: -11.375033378601074
    4. ' if' → logprob: -16.500032424926758
    5. ':
' → logprob: -16.750032424926758
    6. '}' → logprob: -17.125032424926758
    7. 'if' → logprob: -17.500032424926758
    8. '	' → logprob: -18.375032424926758
    9. '}:' → logprob: -18.375032424926758
    10. '=' → logprob: -18.625032424926758

Token 240: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038038729690015316
    2. ' ' → logprob: -7.875380516052246
    3. '   ' → logprob: -15.875380516052246
    4. '  ' → logprob: -17.50037956237793
    5. ' ' → logprob: -18.06287956237793
    6. '}' → logprob: -18.18787956237793
    7. '     ' → logprob: -18.43787956237793
    8. '    ' → logprob: -18.68787956237793
    9. '۰' → logprob: -18.93787956237793
    10. '       ' → logprob: -19.37537956237793

Token 241: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.00041637211688794196
    2. ' }' → logprob: -8.25041675567627
    3. '       ' → logprob: -9.50041675567627
    4. ' if' → logprob: -9.87541675567627
    5. ',' → logprob: -11.25041675567627
    6. '   ' → logprob: -12.00041675567627
    7. '}
' → logprob: -12.62541675567627
    8. 'if' → logprob: -13.12541675567627
    9. '        ' → logprob: -13.62541675567627
    10. '           ' → logprob: -14.00041675567627

Token 242: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.016406873241066933
    2. 'if' → logprob: -4.391407012939453
    3. '       ' → logprob: -6.016407012939453
    4. '	if' → logprob: -6.891407012939453
    5. '   ' → logprob: -9.266407012939453
    6. '    ' → logprob: -9.641407012939453
    7. '        ' → logprob: -9.766407012939453
    8. '
' → logprob: -10.016407012939453
    9. '	' → logprob: -10.141407012939453
    10. '	       ' → logprob: -10.641407012939453

Token 243: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.5759451985359192
    2. 'u' → logprob: -0.8259451985359192
    3. '(u' → logprob: -12.200944900512695
    4. ' (' → logprob: -14.575944900512695
    5. '	u' → logprob: -15.950944900512695
    6. '[u' → logprob: -17.200944900512695
    7. '   ' → logprob: -17.200944900512695
    8. ' ' → logprob: -17.450944900512695
    9. ' ' → logprob: -17.700944900512695
    10. '(' → logprob: -18.950944900512695

Token 244: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05561910197138786
    2. 'in' → logprob: -3.18061900138855
    3. '[u' → logprob: -5.055619239807129
    4. 'u' → logprob: -5.430619239807129
    5. ' u' → logprob: -7.055619239807129
    6. 'n' → logprob: -7.680619239807129
    7. ' ' → logprob: -8.180619239807129
    8. '(u' → logprob: -10.305619239807129
    9. '<|end|>' → logprob: -10.680619239807129
    10. ' n' → logprob: -11.305619239807129

Token 245: ' bases' (ID: 31148)
  Prédit: 'bases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bases' → logprob: -0.0067156096920371056
    2. ' bases' → logprob: -5.006715774536133
    3. 'b' → logprob: -15.881715774536133
    4. 'base' → logprob: -17.131715774536133
    5. 'bas' → logprob: -17.506715774536133
    6. 'Bases' → logprob: -18.631715774536133
    7. ' ' → logprob: -19.006715774536133
    8. '   ' → logprob: -19.131715774536133
    9. '```' → logprob: -19.256715774536133
    10. '	b' → logprob: -19.631715774536133

Token 246: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.07904411852359772
    2. 'else' → logprob: -2.5790441036224365
    3. '       ' → logprob: -9.704044342041016
    4. '	else' → logprob: -9.829044342041016
    5. '   ' → logprob: -10.829044342041016
    6. ' ' → logprob: -11.704044342041016
    7. '    ' → logprob: -11.954044342041016
    8. '        ' → logprob: -12.829044342041016
    9. '     ' → logprob: -14.204044342041016
    10. '  ' → logprob: -14.329044342041016

Token 247: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.00033546582562848926
    2. ' {' → logprob: -8.000335693359375
    3. '   ' → logprob: -21.625335693359375
    4. ' ' → logprob: -23.750335693359375
    5. '{
' → logprob: -24.000335693359375
    6. '  ' → logprob: -24.125335693359375
    7. '{}' → logprob: -25.375335693359375
    8. ' ' → logprob: -25.625335693359375
    9. '       ' → logprob: -25.625335693359375
    10. '     ' → logprob: -26.375335693359375

Token 248: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -18.625003814697266
    4. '  ' → logprob: -20.750003814697266
    5. '
' → logprob: -21.750003814697266
    6. '{' → logprob: -22.500003814697266
    7. '۰' → logprob: -22.750003814697266
    8. ' ' → logprob: -23.250003814697266
    9. '       ' → logprob: -23.375003814697266
    10. '     ' → logprob: -23.500003814697266

Token 249: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.749814019713085e-06
    2. ' :' → logprob: -12.375006675720215
    3. '   ' → logprob: -13.500006675720215
    4. '0' → logprob: -14.625006675720215
    5. '}:' → logprob: -15.000006675720215
    6. '}' → logprob: -16.12500762939453
    7. '```' → logprob: -17.87500762939453
    8. '       ' → logprob: -17.87500762939453
    9. '):' → logprob: -18.00000762939453
    10. ':
' → logprob: -18.25000762939453

Token 250: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -18.6250057220459
    4. '۰' → logprob: -19.5000057220459
    5. '}' → logprob: -20.3750057220459
    6. '  ' → logprob: -20.7500057220459
    7. ' ' → logprob: -21.2500057220459
    8. '    ' → logprob: -21.3750057220459
    9. '０' → logprob: -21.5000057220459
    10. '     ' → logprob: -21.8125057220459

Token 251: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.00032485672272741795
    2. '   ' → logprob: -8.125325202941895
    3. '}
' → logprob: -11.250325202941895
    4. ' }' → logprob: -11.750325202941895
    5. '       ' → logprob: -12.500325202941895
    6. '})' → logprob: -13.500325202941895
    7. ',' → logprob: -13.875325202941895
    8. ')' → logprob: -14.000325202941895
    9. '<|end|>' → logprob: -14.375325202941895
    10. '}

' → logprob: -16.375324249267578

Token 252: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016278225928544998
    2. '<|end|>' → logprob: -4.766278266906738
    3. ' for' → logprob: -5.391278266906738
    4. '
' → logprob: -6.766278266906738
    5. '    
' → logprob: -7.891278266906738
    6. '	for' → logprob: -7.891278266906738
    7. ',' → logprob: -8.016278266906738
    8. '       ' → logprob: -8.391278266906738
    9. '\t' → logprob: -8.891278266906738
    10. 'for' → logprob: -9.141278266906738

Token 253: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.19812758266925812
    2. '   ' → logprob: -2.198127508163452
    3. 'for' (adapté à ' for') → logprob: -2.698127508163452
    4. '       ' → logprob: -7.198127746582031
    5. '	for' → logprob: -7.448127746582031
    6. ',' → logprob: -11.448127746582031
    7. '    
' → logprob: -11.698127746582031
    8. '
' → logprob: -11.698127746582031
    9. '```' → logprob: -11.948127746582031
    10. ' ' → logprob: -12.198127746582031

Token 254: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.14604225754737854
    2. 'v' → logprob: -2.1460423469543457
    3. ' w' → logprob: -4.396042346954346
    4. 'w' → logprob: -5.521042346954346
    5. '(v' → logprob: -6.271042346954346
    6. ' nxt' → logprob: -8.146041870117188
    7. ' (' → logprob: -9.146041870117188
    8. ' nei' → logprob: -9.271041870117188
    9. 'nv' → logprob: -10.521041870117188
    10. 'vv' → logprob: -10.646041870117188

Token 255: ',c' (ID: 22261)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22636054456233978
    2. 'in' → logprob: -1.726360559463501
    3. ',' → logprob: -3.851360559463501
    4. ',in' → logprob: -6.226360321044922
    5. ' ,' → logprob: -7.726360321044922
    6. ',v' → logprob: -7.976360321044922
    7. '	in' → logprob: -8.601360321044922
    8. ' ' → logprob: -8.976360321044922
    9. ',u' → logprob: -9.226360321044922
    10. '```' → logprob: -9.976360321044922

Token 256: 'ost' (ID: 564)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04303516075015068
    2. 'in' → logprob: -3.1680352687835693
    3. ' ' → logprob: -10.543035507202148
    4. ',' → logprob: -13.043035507202148
    5. '   ' → logprob: -13.043035507202148
    6. '	in' → logprob: -13.168035507202148
    7. '  ' → logprob: -13.793035507202148
    8. 'n' → logprob: -14.543035507202148
    9. 's' → logprob: -14.543035507202148
    10. '    ' → logprob: -15.293035507202148

Token 257: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06198651343584061
    2. 'in' → logprob: -2.8119864463806152
    3. '	in' → logprob: -11.811986923217773
    4. ' ' → logprob: -12.186986923217773
    5. '   ' → logprob: -12.811986923217773
    6. ',' → logprob: -14.311986923217773
    7. '    ' → logprob: -14.436986923217773
    8. '  ' → logprob: -14.811986923217773
    9. '_in' → logprob: -15.061986923217773
    10. 's' → logprob: -15.186986923217773

Token 258: ' adj' (ID: 20251)
  Prédit: ' adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.5759448409080505
    2. 'adj' → logprob: -0.8259448409080505
    3. '(adj' → logprob: -12.450944900512695
    4. ' ' → logprob: -14.325944900512695
    5. '   ' → logprob: -14.700944900512695
    6. 'ad' → logprob: -16.075944900512695
    7. '[' → logprob: -16.450944900512695
    8. '    ' → logprob: -16.825944900512695
    9. '  ' → logprob: -16.825944900512695
    10. 'Adj' → logprob: -17.450944900512695

Token 259: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -3.128163257315464e-07
    2. ' [' → logprob: -16.5
    3. 'u' → logprob: -17.125
    4. '[' → logprob: -17.25
    5. '(u' → logprob: -19.375
    6. '
' → logprob: -20.25
    7. ' u' → logprob: -20.375
    8. '[v' → logprob: -20.5
    9. '[
' → logprob: -20.625
    10. '```' → logprob: -21.0

Token 260: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.3257395625114441
    2. ']:' → logprob: -1.3257396221160889
    3. ':' → logprob: -5.45073938369751
    4. ']' → logprob: -5.70073938369751
    5. '       ' → logprob: -6.82573938369751
    6. '):
' → logprob: -6.82573938369751
    7. ':
' → logprob: -7.32573938369751
    8. '   ' → logprob: -8.075739860534668
    9. '[u' → logprob: -8.075739860534668
    10. ']:
' → logprob: -8.075739860534668

Token 261: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06291043758392334
    2. '<|end|>' → logprob: -3.437910556793213
    3. ' if' → logprob: -4.312910556793213
    4. '	       ' → logprob: -5.437910556793213
    5. '       ' → logprob: -5.562910556793213
    6. '<|end|>' → logprob: -6.062910556793213
    7. ' ' → logprob: -6.687910556793213
    8. ',' → logprob: -7.187910556793213
    9. '        ' → logprob: -7.187910556793213
    10. '          ' → logprob: -7.687910556793213

Token 262: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6934512853622437
    2. ' if' → logprob: -0.6934512853622437
    3. '               ' → logprob: -8.193450927734375
    4. '           ' → logprob: -10.693450927734375
    5. '	if' → logprob: -13.693450927734375
    6. '            ' → logprob: -14.318450927734375
    7. ' ' → logprob: -14.318450927734375
    8. '   ' → logprob: -14.568450927734375
    9. 'If' → logprob: -14.818450927734375
    10. ';if' → logprob: -14.818450927734375

Token 263: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.47407716512680054
    2. 'v' → logprob: -0.9740771651268005
    3. '	v' → logprob: -16.599077224731445
    4. ' ' → logprob: -17.724077224731445
    5. ')v' → logprob: -17.724077224731445
    6. '```' → logprob: -17.974077224731445
    7. '$v' → logprob: -18.599077224731445
    8. 'not' → logprob: -18.974077224731445
    9. '<v' → logprob: -19.099077224731445
    10. '
' → logprob: -19.224077224731445

Token 264: '==' (ID: 560)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -1.1067668199539185
    2. '==' → logprob: -1.2317668199539185
    3. ' ==' → logprob: -1.6067668199539185
    4. '!=' → logprob: -1.7317668199539185
    5. '=' → logprob: -9.856766700744629
    6. '```' → logprob: -11.731766700744629
    7. ')!=' → logprob: -12.606766700744629
    8. ']==' → logprob: -12.606766700744629
    9. ' =' → logprob: -12.981766700744629
    10. '()!=' → logprob: -12.981766700744629

Token 265: 'p' (ID: 79)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5845544338226318
    2. 'p' → logprob: -0.8345544338226318
    3. ' u' → logprob: -5.334554672241211
    4. ' p' → logprob: -5.584554672241211
    5. ' ' → logprob: -15.084554672241211
    6. '   ' → logprob: -15.959554672241211
    7. '	u' → logprob: -17.08455467224121
    8. '	p' → logprob: -17.08455467224121
    9. '
' → logprob: -18.08455467224121
    10. '    ' → logprob: -18.33455467224121

Token 266: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5342980027198792
    2. '               ' → logprob: -1.5342979431152344
    3. ':
' → logprob: -2.1592979431152344
    4. ' continue' → logprob: -3.1592979431152344
    5. 'continue' → logprob: -3.2842979431152344
    6. '       ' → logprob: -6.659297943115234
    7. '	continue' → logprob: -7.784297943115234
    8. '           ' → logprob: -7.784297943115234
    9. ' continues' → logprob: -8.534297943115234
    10. '_continue' → logprob: -8.784297943115234

Token 267: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13026179373264313
    2. ' continue' → logprob: -2.1302618980407715
    3. 'continue' → logprob: -5.7552618980407715
    4. '           ' → logprob: -10.505261421203613
    5. ' continues' → logprob: -10.880261421203613
    6. ',' → logprob: -10.880261421203613
    7. '	continue' → logprob: -11.630261421203613
    8. '	           ' → logprob: -11.630261421203613
    9. '
' → logprob: -11.755261421203613
    10. ' return' → logprob: -11.755261421203613

Token 268: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.25534605979919434
    2. 'continue' (adapté à ' continue') → logprob: -1.5053460597991943
    3. '               ' → logprob: -6.130346298217773
    4. '                   ' → logprob: -6.755346298217773
    5. '	continue' → logprob: -9.755346298217773
    6. '
' → logprob: -12.755346298217773
    7. '           ' → logprob: -12.880346298217773
    8. '                       ' → logprob: -13.255346298217773
    9. '_continue' → logprob: -13.255346298217773
    10. '   ' → logprob: -14.130346298217773

Token 269: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22744488716125488
    2. '           ' → logprob: -1.9774448871612549
    3. '       ' → logprob: -3.102444887161255
    4. '  
' → logprob: -5.477444648742676
    5. '            
' → logprob: -5.602444648742676
    6. '               ' → logprob: -5.852444648742676
    7. ' 
' → logprob: -5.977444648742676
    8. '<|end|>' → logprob: -6.102444648742676
    9. '        
' → logprob: -6.602444648742676
    10. '<|end|>' → logprob: -7.602444648742676

Token 270: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09118296205997467
    2. '           ' → logprob: -2.5911829471588135
    3. '
' → logprob: -5.091183185577393
    4. '        
' → logprob: -6.216183185577393
    5. '               ' → logprob: -6.966183185577393
    6. '            
' → logprob: -7.591183185577393
    7. '  
' → logprob: -7.591183185577393
    8. '<|end|>' → logprob: -7.841183185577393
    9. '```' → logprob: -8.216182708740234
    10. ' 
' → logprob: -8.216182708740234

Token 271: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' (adapté à ' dfs') → logprob: -0.3316115736961365
    2. ' dfs' → logprob: -1.7066116333007812
    3. '           ' → logprob: -2.3316116333007812
    4. '       ' → logprob: -5.831611633300781
    5. '   ' → logprob: -8.581611633300781
    6. 'def' → logprob: -9.331611633300781
    7. '
' → logprob: -9.581611633300781
    8. '               ' → logprob: -9.706611633300781
    9. '```' → logprob: -9.706611633300781
    10. 'd' → logprob: -9.956611633300781

Token 272: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -8.53050296427682e-05
    2. '(' → logprob: -9.37508487701416
    3. '(
' → logprob: -15.37508487701416
    4. ' (' → logprob: -16.250085830688477
    5. ')(' → logprob: -16.750085830688477
    6. '(V' → logprob: -16.875085830688477
    7. ')' → logprob: -17.125085830688477
    8. ')v' → logprob: -17.750085830688477
    9. 'v' → logprob: -17.875085830688477
    10. '<|end|>' → logprob: -18.000085830688477

Token 273: ',u' (ID: 80698)
  Prédit: ',v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.6217440366744995
    2. ',' → logprob: -1.2467440366744995
    3. ',u' → logprob: -1.7467440366744995
    4. ' ,' → logprob: -7.371744155883789
    5. 'u' → logprob: -7.871744155883789
    6. 'v' → logprob: -8.746744155883789
    7. '           ' → logprob: -11.746744155883789
    8. ')' → logprob: -12.246744155883789
    9. ' u' → logprob: -12.371744155883789
    10. ',n' → logprob: -12.496744155883789

Token 274: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.08716673403978348
    2. ')' → logprob: -2.5871667861938477
    3. '           ' → logprob: -4.837166786193848
    4. ')
' → logprob: -9.212166786193848
    5. '()
' → logprob: -9.712166786193848
    6. '()' → logprob: -10.087166786193848
    7. '       ' → logprob: -10.212166786193848
    8. '())
' → logprob: -10.462166786193848
    9. ' )
' → logprob: -10.962166786193848
    10. '
' → logprob: -11.462166786193848

Token 275: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02435334026813507
    2. '       ' → logprob: -4.149353504180908
    3. '```' → logprob: -5.274353504180908
    4. ' for' → logprob: -7.649353504180908
    5. 'dp' → logprob: -7.899353504180908
    6. ' dp' → logprob: -8.02435302734375
    7. '
' → logprob: -8.14935302734375
    8. '            
' → logprob: -8.27435302734375
    9. '   ' → logprob: -8.64935302734375
    10. '            ' → logprob: -8.89935302734375

Token 276: ' nd' (ID: 5914)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.8019513487815857
    2. 'nd' (adapté à ' nd') → logprob: -1.0519514083862305
    3. ' nd' → logprob: -2.0519514083862305
    4. ' new' → logprob: -2.9269514083862305
    5. 'tmp' → logprob: -4.1769514083862305
    6. 'temp' → logprob: -5.9269514083862305
    7. 'next' → logprob: -7.0519514083862305
    8. ' tmp' → logprob: -7.6769514083862305
    9. 'from' → logprob: -7.9269514083862305
    10. '           ' → logprob: -9.17695140838623

Token 277: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00028088156250305474
    2. ' =' → logprob: -8.62528133392334
    3. '=' → logprob: -9.62528133392334
    4. '={}
' → logprob: -10.87528133392334
    5. '={}' → logprob: -11.75028133392334
    6. '_p' → logprob: -12.75028133392334
    7. '={' → logprob: -12.87528133392334
    8. '{' → logprob: -14.00028133392334
    9. '   ' → logprob: -14.25028133392334
    10. ' p' → logprob: -15.12528133392334

Token 278: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038522448390722275
    2. '=' → logprob: -3.288522481918335
    3. '={}' → logprob: -8.038522720336914
    4. ' ={' → logprob: -9.038522720336914
    5. '={' → logprob: -10.913522720336914
    6. '[u' → logprob: -11.163522720336914
    7. ' ' → logprob: -13.288522720336914
    8. '[' → logprob: -13.538522720336914
    9. '={}
' → logprob: -14.413522720336914
    10. ' =[' → logprob: -14.663522720336914

Token 279: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -4.008129963040119e-06
    2. 'dict' → logprob: -13.000003814697266
    3. '{' → logprob: -13.750003814697266
    4. ' {}' → logprob: -14.750003814697266
    5. '{}
' → logprob: -16.375003814697266
    6. '{})' → logprob: -17.125003814697266
    7. 'default' → logprob: -17.125003814697266
    8. '{}

' → logprob: -17.625003814697266
    9. ' dict' → logprob: -19.500003814697266
    10. '{}\' → logprob: -20.500003814697266

Token 280: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07514765113592148
    2. ' for' → logprob: -3.2001476287841797
    3. 'for' → logprob: -4.20014762878418
    4. '       ' → logprob: -4.70014762878418
    5. '<|end|>' → logprob: -5.32514762878418
    6. '	       ' → logprob: -7.07514762878418
    7. '   ' → logprob: -7.32514762878418
    8. '		' → logprob: -7.82514762878418
    9. '	for' → logprob: -8.70014762878418
    10. '<|end|>' → logprob: -9.07514762878418

Token 281: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.08911547809839249
    2. ' for' → logprob: -2.5891153812408447
    3. '           ' → logprob: -4.589115619659424
    4. '	for' → logprob: -12.214115142822266
    5. '   ' → logprob: -13.339115142822266
    6. '       ' → logprob: -13.339115142822266
    7. '               ' → logprob: -13.589115142822266
    8. 'from' → logprob: -14.214115142822266
    9. ' ' → logprob: -14.339115142822266
    10. '```' → logprob: -14.964115142822266

Token 282: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2838771641254425
    2. 'xu' → logprob: -1.9088771343231201
    3. ' x' → logprob: -2.65887713432312
    4. ' xu' → logprob: -3.65887713432312
    5. 'a' → logprob: -7.283877372741699
    6. 'cu' → logprob: -7.533877372741699
    7. 'su' → logprob: -8.0338773727417
    8. '(x' → logprob: -8.4088773727417
    9. ' du' → logprob: -8.7838773727417
    10. 'du' → logprob: -8.7838773727417

Token 283: '1' (ID: 16)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.15107226371765137
    2. 'in' → logprob: -2.1510722637176514
    3. ',' → logprob: -3.9010722637176514
    4. ' ,' → logprob: -5.9010725021362305
    5. ',y' → logprob: -8.27607250213623
    6. ' ' → logprob: -8.40107250213623
    7. ',in' → logprob: -9.15107250213623
    8. ',v' → logprob: -10.27607250213623
    9. '_in' → logprob: -10.40107250213623
    10. 'i' → logprob: -10.40107250213623

Token 284: ',c' (ID: 22261)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1475973129272461
    2. ',' → logprob: -2.147597312927246
    3. 'in' → logprob: -4.272597312927246
    4. ' ,' → logprob: -5.647597312927246
    5. ',in' → logprob: -7.022597312927246
    6. ',x' → logprob: -7.397597312927246
    7. ',v' → logprob: -7.647597312927246
    8. ' ' → logprob: -8.772597312927246
    9. ',y' → logprob: -9.022597312927246
    10. ')' → logprob: -9.522597312927246

Token 285: '1' (ID: 16)
  Prédit: 'ost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.008517647162079811
    2. '1' → logprob: -5.633517742156982
    3. 'x' → logprob: -6.633517742156982
    4. 'st' → logprob: -6.883517742156982
    5. 'o' → logprob: -7.133517742156982
    6. 'os' → logprob: -7.258517742156982
    7. 'cost' → logprob: -7.883517742156982
    8. 'c' → logprob: -8.758517265319824
    9. ' in' → logprob: -9.508517265319824
    10. '_cost' → logprob: -9.633517265319824

Token 286: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014187720604240894
    2. 'in' → logprob: -4.264187812805176
    3. ',' → logprob: -10.889187812805176
    4. ' ' → logprob: -13.139187812805176
    5. '  ' → logprob: -13.889187812805176
    6. '   ' → logprob: -13.889187812805176
    7. 's' → logprob: -15.139187812805176
    8. '	in' → logprob: -15.264187812805176
    9. ' ,' → logprob: -15.389187812805176
    10. ',in' → logprob: -15.764187812805176

Token 287: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.02975071594119072
    2. ' dp' → logprob: -3.5297508239746094
    3. '	dp' → logprob: -16.65475082397461
    4. '_dp' → logprob: -16.77975082397461
    5. '(dp' → logprob: -16.90475082397461
    6. '
' → logprob: -19.15475082397461
    7. '.dp' → logprob: -20.15475082397461
    8. 'd' → logprob: -20.65475082397461
    9. 'DP' → logprob: -20.77975082397461
    10. '   ' → logprob: -22.27975082397461

Token 288: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.00010926496179308742
    2. 'u' → logprob: -9.125109672546387
    3. 'items' → logprob: -16.25010871887207
    4. '_u' → logprob: -16.75010871887207
    5. ' in' → logprob: -17.75010871887207
    6. ' u' → logprob: -18.12510871887207
    7. '```' → logprob: -18.25010871887207
    8. '(u' → logprob: -18.50010871887207
    9. '
' → logprob: -18.50010871887207
    10. ',u' → logprob: -18.62510871887207

Token 289: '].' (ID: 1651)
  Prédit: '.items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.0006526283104903996
    2. 'items' → logprob: -8.125652313232422
    3. '.' → logprob: -8.625652313232422
    4. ' .' → logprob: -8.750652313232422
    5. '.iteritems' → logprob: -11.500652313232422
    6. ' items' → logprob: -12.875652313232422
    7. ' in' → logprob: -13.125652313232422
    8. '   ' → logprob: -13.500652313232422
    9. '       ' → logprob: -13.625652313232422
    10. '.values' → logprob: -15.000652313232422

Token 290: 'items' (ID: 6918)
  Prédit: 'items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -2.2200749754119897e-06
    2. '.items' → logprob: -13.500001907348633
    3. ' items' → logprob: -14.000001907348633
    4. '	items' → logprob: -22.000001907348633
    5. '```' → logprob: -22.250001907348633
    6. '(items' → logprob: -22.500001907348633
    7. '
' → logprob: -23.875001907348633
    8. 'item' → logprob: -23.875001907348633
    9. '_items' → logprob: -23.875001907348633
    10. ' ' → logprob: -24.000001907348633

Token 291: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.018647458404302597
    2. '():' → logprob: -4.01864767074585
    3. '()' → logprob: -7.64364767074585
    4. '():

' → logprob: -11.893647193908691
    5. '():
' → logprob: -12.268647193908691
    6. '(),' → logprob: -13.018647193908691
    7. '()):
' → logprob: -14.143647193908691
    8. ':' → logprob: -14.268647193908691
    9. 'for' → logprob: -14.393647193908691
    10. '(),
' → logprob: -14.518647193908691

Token 292: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0027661214116960764
    2. ' for' → logprob: -6.127766132354736
    3. '	           ' → logprob: -8.502765655517578
    4. '           ' → logprob: -8.877765655517578
    5. '       ' → logprob: -9.877765655517578
    6. ' ' → logprob: -10.502765655517578
    7. '		       ' → logprob: -10.877765655517578
    8. ',' → logprob: -11.002765655517578
    9. '                
' → logprob: -11.252765655517578
    10. '```' → logprob: -11.377765655517578

Token 293: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.17543840408325195
    2. '               ' → logprob: -1.925438404083252
    3. 'for' (adapté à ' for') → logprob: -4.550438404083252
    4. '	for' → logprob: -6.675438404083252
    5. '                ' → logprob: -6.925438404083252
    6. ' ' → logprob: -7.550438404083252
    7. '	           ' → logprob: -7.800438404083252
    8. ' ' → logprob: -8.050437927246094
    9. '   ' → logprob: -8.175437927246094
    10. '                   ' → logprob: -8.800437927246094

Token 294: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.20142346620559692
    2. 'x' → logprob: -1.7014234066009521
    3. '(x' → logprob: -12.451423645019531
    4. ',x' → logprob: -12.826423645019531
    5. ' (' → logprob: -13.326423645019531
    6. '	x' → logprob: -14.201423645019531
    7. ' ' → logprob: -14.326423645019531
    8. '    ' → logprob: -15.576423645019531
    9. ',' → logprob: -16.20142364501953
    10. '   ' → logprob: -16.20142364501953

Token 295: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03041919879615307
    2. ',' → logprob: -3.655419111251831
    3. ',v' → logprob: -6.15541934967041
    4. '2' → logprob: -6.53041934967041
    5. ' ,' → logprob: -8.40541934967041
    6. ' ' → logprob: -9.53041934967041
    7. '=' → logprob: -10.15541934967041
    8. '           ' → logprob: -10.28041934967041
    9. '   ' → logprob: -10.53041934967041
    10. ',
' → logprob: -10.53041934967041

Token 296: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.22730889916419983
    2. ',' → logprob: -1.6023088693618774
    3. ' ,' → logprob: -7.477308750152588
    4. ',y' → logprob: -7.477308750152588
    5. ',x' → logprob: -7.852308750152588
    6. ',v' → logprob: -9.102309226989746
    7. ',k' → logprob: -9.227309226989746
    8. ',n' → logprob: -9.727309226989746
    9. ',d' → logprob: -10.227309226989746
    10. ',s' → logprob: -11.477309226989746

Token 297: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.013429726473987103
    2. ',' → logprob: -4.388429641723633
    3. ' in' → logprob: -7.763429641723633
    4. '1' → logprob: -7.888429641723633
    5. ')' → logprob: -10.763429641723633
    6. ',d' → logprob: -10.888429641723633
    7. 'dp' → logprob: -11.263429641723633
    8. ' ,' → logprob: -11.388429641723633
    9. '(dp' → logprob: -11.513429641723633
    10. ',u' → logprob: -12.138429641723633

Token 298: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008190657943487167
    2. 'in' → logprob: -5.133190631866455
    3. ',' → logprob: -6.258190631866455
    4. ' ,' → logprob: -8.133191108703613
    5. ',in' → logprob: -11.008191108703613
    6. ')' → logprob: -12.008191108703613
    7. '           ' → logprob: -12.633191108703613
    8. '   ' → logprob: -12.633191108703613
    9. ' ' → logprob: -12.758191108703613
    10. ',n' → logprob: -13.383191108703613

Token 299: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.386887788772583
    2. 'dp' → logprob: -1.136887788772583
    3. '(dp' → logprob: -11.261887550354004
    4. '
' → logprob: -13.636887550354004
    5. '	dp' → logprob: -13.886887550354004
    6. '_dp' → logprob: -14.761887550354004
    7. 'adj' → logprob: -15.386887550354004
    8. ' ' → logprob: -15.636887550354004
    9. 'd' → logprob: -15.886887550354004
    10. '.dp' → logprob: -16.01188850402832

Token 300: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -9.372294698550832e-06
    2. 'v' → logprob: -12.500009536743164
    3. '[u' → logprob: -12.500009536743164
    4. '[' → logprob: -13.875009536743164
    5. '
' → logprob: -15.125009536743164
    6. ' [' → logprob: -15.250009536743164
    7. '

' → logprob: -16.375009536743164
    8. '   ' → logprob: -16.625009536743164
    9. ',v' → logprob: -17.125009536743164
    10. '=v' → logprob: -17.250009536743164

Token 301: '].' (ID: 1651)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.16503110527992249
    2. '.items' → logprob: -2.1650311946868896
    3. '].' → logprob: -3.5400311946868896
    4. 'items' → logprob: -4.9150309562683105
    5. ')' → logprob: -8.165031433105469
    6. '}.' → logprob: -8.540031433105469
    7. '),' → logprob: -9.040031433105469
    8. ' ).' → logprob: -9.165031433105469
    9. '.' → logprob: -9.790031433105469
    10. '_items' → logprob: -10.540031433105469

Token 302: 'items' (ID: 6918)
  Prédit: 'items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -7.896309739408025e-07
    2. '.items' → logprob: -14.875000953674316
    3. ' items' → logprob: -14.875000953674316
    4. '```' → logprob: -19.625
    5. 'keys' → logprob: -20.0
    6. '	items' → logprob: -20.25
    7. '
' → logprob: -20.375
    8. 'values' → logprob: -20.375
    9. '_items' → logprob: -20.875
    10. 'item' → logprob: -21.125

Token 303: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.10418842732906342
    2. '():' → logprob: -2.3541884422302246
    3. '()' → logprob: -5.604188442230225
    4. '()):
' → logprob: -8.729187965393066
    5. '():

' → logprob: -9.729187965393066
    6. '():
' → logprob: -10.229187965393066
    7. '(),' → logprob: -11.104187965393066
    8. 'items' → logprob: -12.604187965393066
    9. '(' → logprob: -12.854187965393066
    10. ':' → logprob: -13.229187965393066

Token 304: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04794421046972275
    2. '               ' → logprob: -3.2979443073272705
    3. '                       ' → logprob: -5.797944068908691
    4. '                    
' → logprob: -6.922944068908691
    5. '                ' → logprob: -7.172944068908691
    6. ' ' → logprob: -7.297944068908691
    7. '<|end|>' → logprob: -7.297944068908691
    8. '           ' → logprob: -7.422944068908691
    9. ',' → logprob: -7.672944068908691
    10. '                               ' → logprob: -7.797944068908691

Token 305: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.9544621706008911
    2. '                       ' → logprob: -1.2044621706008911
    3. '                    ' → logprob: -2.9544620513916016
    4. ' if' → logprob: -2.9544620513916016
    5. ' new' → logprob: -3.2044620513916016
    6. ' next' → logprob: -3.3294620513916016
    7. '                           ' → logprob: -3.5794620513916016
    8. '                               ' → logprob: -3.8294620513916016
    9. ' ' → logprob: -4.204462051391602
    10. ' for' → logprob: -4.329462051391602

Token 306: ' Two' (ID: 13311)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.8232201337814331
    2. 'new' → logprob: -1.823220133781433
    3. 'nx' → logprob: -2.4482202529907227
    4. ' if' → logprob: -2.6982202529907227
    5. ' key' → logprob: -2.8232202529907227
    6. ' nd' → logprob: -2.8232202529907227
    7. ' nx' → logprob: -3.5732202529907227
    8. 'nd' → logprob: -3.6982202529907227
    9. 'if' → logprob: -3.6982202529907227
    10. 'key' → logprob: -3.8232202529907227

Token 307: ' choices' (ID: 14494)
  Prédit: ' options'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' options' → logprob: -0.1711157113313675
    2. ' ways' → logprob: -2.7961156368255615
    3. ' possibilities' → logprob: -2.9211156368255615
    4. ' choices' → logprob: -4.296115875244141
    5. '_options' → logprob: -4.671115875244141
    6. 'options' → logprob: -5.046115875244141
    7. ' cases' → logprob: -6.171115875244141
    8. ' possible' → logprob: -6.671115875244141
    9. ' approaches' → logprob: -6.671115875244141
    10. '_choices' → logprob: -6.796115875244141

Token 308: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18641667068004608
    2. '                   ' → logprob: -2.0614166259765625
    3. ' :' → logprob: -3.9364166259765625
    4. '                       ' → logprob: -4.6864166259765625
    5. ',' → logprob: -4.8114166259765625
    6. '                    
' → logprob: -6.8114166259765625
    7. '                    ' → logprob: -7.1864166259765625
    8. '               ' → logprob: -7.4364166259765625
    9. ':
' → logprob: -7.4364166259765625
    10. '<|end|>' → logprob: -8.186416625976562

Token 309: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.21075758337974548
    2. '                       ' → logprob: -2.8357574939727783
    3. ' ' → logprob: -3.2107574939727783
    4. '                    ' → logprob: -3.4607574939727783
    5. '                    
' → logprob: -4.085757732391357
    6. ' nd' → logprob: -4.085757732391357
    7. '               ' → logprob: -5.335757732391357
    8. ' if' → logprob: -5.335757732391357
    9. ' 
' → logprob: -5.835757732391357
    10. ' for' → logprob: -6.335757732391357

Token 310: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7471004724502563
    2. ' #' → logprob: -1.6221004724502563
    3. '#' (adapté à ' #') → logprob: -2.122100353240967
    4. ' nd' → logprob: -2.122100353240967
    5. 'if' → logprob: -3.497100353240967
    6. '1' → logprob: -3.497100353240967
    7. 'nd' → logprob: -4.872100353240967
    8. '                   ' → logprob: -5.497100353240967
    9. ' ' → logprob: -5.622100353240967
    10. '
' → logprob: -6.122100353240967

Token 311: ' ' (ID: 220)
  Prédit: ' #'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' #' → logprob: -1.103303074836731
    2. '#' → logprob: -1.478303074836731
    3. ' nd' → logprob: -1.603303074836731
    4. ' if' → logprob: -2.2283029556274414
    5. ' new' → logprob: -2.8533029556274414
    6. '1' → logprob: -3.6033029556274414
    7. '                   ' → logprob: -4.728302955627441
    8. 'nd' → logprob: -4.978302955627441
    9. ' ' → logprob: -5.103302955627441
    10. 'new' → logprob: -5.478302955627441

Token 312: '1' (ID: 16)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.6167856454849243
    2. 'if' → logprob: -1.2417856454849243
    3. '#' → logprob: -2.4917855262756348
    4. ' if' → logprob: -3.2417855262756348
    5. ' nd' → logprob: -3.6167855262756348
    6. ' #' → logprob: -4.866785526275635
    7. 'key' → logprob: -5.616785526275635
    8. '(nd' → logprob: -5.866785526275635
    9. 'new' → logprob: -6.241785526275635
    10. ' key' → logprob: -6.741785526275635

Token 313: ')' (ID: 8)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5279247164726257
    2. ' =' → logprob: -1.7779247760772705
    3. ')' → logprob: -2.2779247760772705
    4. ' :' → logprob: -3.0279247760772705
    5. ' if' → logprob: -3.1529247760772705
    6. '                   ' → logprob: -3.9029247760772705
    7. '=' → logprob: -4.902924537658691
    8. ' )' → logprob: -5.652924537658691
    9. '.' → logprob: -6.027924537658691
    10. ',' → logprob: -6.152924537658691

Token 314: ' Cut' (ID: 28849)
  Prédit: ' nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.6825664043426514
    2. ' if' → logprob: -2.0575664043426514
    3. ' #' → logprob: -2.1825664043426514
    4. 'nd' → logprob: -2.1825664043426514
    5. '#' → logprob: -2.5575664043426514
    6. 'if' → logprob: -4.1825666427612305
    7. ' new' → logprob: -4.3075666427612305
    8. ' merge' → logprob: -4.9325666427612305
    9. 'new' → logprob: -5.8075666427612305
    10. ' merged' → logprob: -6.0575666427612305

Token 315: ' edge' (ID: 11165)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.9715580344200134
    2. ' (' → logprob: -1.3465580940246582
    3. ',' → logprob: -1.5965580940246582
    4. ' ' → logprob: -2.471558094024658
    5. ' or' → logprob: -4.721558094024658
    6. '                   ' → logprob: -4.721558094024658
    7. '"' → logprob: -4.846558094024658
    8. ':' → logprob: -5.471558094024658
    9. ' =' → logprob: -5.471558094024658
    10. ' "' → logprob: -5.596558094024658

Token 316: ' u' (ID: 337)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.612053632736206
    2. ',' → logprob: -2.237053632736206
    3. ':' → logprob: -2.362053632736206
    4. '=' → logprob: -2.737053632736206
    5. ' (' → logprob: -3.112053632736206
    6. '                   ' → logprob: -3.112053632736206
    7. ' ,' → logprob: -3.487053632736206
    8. ' between' → logprob: -3.612053632736206
    9. ' :' → logprob: -4.487053871154785
    10. '                    
' → logprob: -5.237053871154785

Token 317: '-v' (ID: 9827)
  Prédit: ',v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.16212432086467743
    2. ',' → logprob: -2.1621243953704834
    3. ' ,' → logprob: -4.162124156951904
    4. ' v' → logprob: -5.162124156951904
    5. 'v' → logprob: -5.162124156951904
    6. '                   ' → logprob: -6.037124156951904
    7. ',
' → logprob: -6.412124156951904
    8. ' to' → logprob: -6.912124156951904
    9. ' ' → logprob: -7.537124156951904
    10. '-v' → logprob: -7.912124156951904

Token 318: ':' (ID: 25)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6837089657783508
    2. ',' → logprob: -1.058708906173706
    3. ':' → logprob: -2.808708906173706
    4. '                       ' → logprob: -3.933708906173706
    5. ',
' → logprob: -4.058709144592285
    6. ' ,' → logprob: -4.558709144592285
    7. ' (' → logprob: -4.683709144592285
    8. ':
' → logprob: -4.808709144592285
    9. ' :' → logprob: -5.183709144592285
    10. '                    
' → logprob: -5.808709144592285

Token 319: ' cost' (ID: 3097)
  Prédit: ' nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.06623592972755432
    2. 'nd' → logprob: -3.4412360191345215
    3. '                   ' → logprob: -4.5662360191345215
    4. '
' → logprob: -5.4412360191345215
    5. '                    
' → logprob: -5.6912360191345215
    6. ' if' → logprob: -5.6912360191345215
    7. '                       ' → logprob: -6.3162360191345215
    8. ' x' → logprob: -6.6912360191345215
    9. '                        
' → logprob: -6.6912360191345215
    10. '(nd' → logprob: -7.1912360191345215

Token 320: ' paid' (ID: 9927)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20179560780525208
    2. '=' → logprob: -1.7017955780029297
    3. '=x' → logprob: -8.45179557800293
    4. ' +' → logprob: -10.57679557800293
    5. '                   ' → logprob: -10.70179557800293
    6. '+' → logprob: -11.07679557800293
    7. ' ' → logprob: -11.07679557800293
    8. ',' → logprob: -11.45179557800293
    9. ')' → logprob: -11.45179557800293
    10. ':' → logprob: -11.70179557800293

Token 321: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6677004098892212
    2. '=' → logprob: -1.2927004098892212
    3. ' +' → logprob: -2.0427002906799316
    4. '+' → logprob: -2.7927002906799316
    5. ',' → logprob: -4.792700290679932
    6. '+c' → logprob: -5.167700290679932
    7. '                   ' → logprob: -6.042700290679932
    8. '=c' → logprob: -6.917700290679932
    9. ' +=' → logprob: -7.042700290679932
    10. ',
' → logprob: -7.917700290679932

Token 322: ' number' (ID: 2086)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.19942538440227509
    2. ' nd' → logprob: -1.8244253396987915
    3. 'new' → logprob: -4.949425220489502
    4. '                   ' → logprob: -5.699425220489502
    5. ' new' → logprob: -5.824425220489502
    6. '(nd' → logprob: -7.324425220489502
    7. 'nx' → logprob: -7.324425220489502
    8. '                    
' → logprob: -7.449425220489502
    9. '                       ' → logprob: -7.824425220489502
    10. ' key' → logprob: -7.824425220489502

Token 323: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4580066502094269
    2. ' =' → logprob: -1.5830066204071045
    3. 'of' → logprob: -2.8330066204071045
    4. ' of' → logprob: -3.2080066204071045
    5. '_of' → logprob: -3.2080066204071045
    6. ' +=' → logprob: -4.958006858825684
    7. ')' → logprob: -5.958006858825684
    8. '_tokens' → logprob: -5.958006858825684
    9. '+=' → logprob: -6.458006858825684
    10. '=count' → logprob: -6.708006858825684

Token 324: ' components' (ID: 10674)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.10041025280952454
    2. 'x' → logprob: -2.850410223007202
    3. ' components' → logprob: -3.475410223007202
    4. ' x' → logprob: -5.725410461425781
    5. 'clusters' → logprob: -6.350410461425781
    6. 'parts' → logprob: -7.225410461425781
    7. 'segments' → logprob: -8.100410461425781
    8. '(x' → logprob: -8.475410461425781
    9. '_components' → logprob: -9.225410461425781
    10. ' clusters' → logprob: -10.100410461425781

Token 325: ' add' (ID: 1147)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09525521099567413
    2. '=' → logprob: -2.470255136489868
    3. '=x' → logprob: -5.095255374908447
    4. ' x' → logprob: -10.220254898071289
    5. 'x' → logprob: -10.345254898071289
    6. ' ' → logprob: -10.970254898071289
    7. '                   ' → logprob: -11.345254898071289
    8. ',' → logprob: -11.720254898071289
    9. '=u' → logprob: -11.845254898071289
    10. ' =
' → logprob: -11.970254898071289

Token 326: ' up' (ID: 869)
  Prédit: ' up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' up' → logprob: -0.5858677625656128
    2. 's' → logprob: -1.3358677625656128
    3. 'ed' → logprob: -2.4608678817749023
    4. 'up' → logprob: -3.3358678817749023
    5. '=' → logprob: -3.4608678817749023
    6. 'ition' → logprob: -4.710867881774902
    7. ' =' → logprob: -5.085867881774902
    8. 'ing' → logprob: -5.085867881774902
    9. ',' → logprob: -6.210867881774902
    10. 'x' → logprob: -6.835867881774902

Token 327: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.16028992831707
    2. ',' → logprob: -2.160290002822876
    3. ' ,' → logprob: -3.910290002822876
    4. '                       ' → logprob: -6.410289764404297
    5. ',
' → logprob: -6.660289764404297
    6. ' =' → logprob: -6.660289764404297
    7. '               ' → logprob: -6.785289764404297
    8. '                           ' → logprob: -6.910289764404297
    9. '                    ' → logprob: -6.910289764404297
    10. ' +' → logprob: -7.035289764404297

Token 328: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00820153672248125
    2. ',' → logprob: -5.133201599121094
    3. ' ,' → logprob: -7.758201599121094
    4. '                       ' → logprob: -7.883201599121094
    5. '               ' → logprob: -8.008201599121094
    6. '                    ' → logprob: -8.383201599121094
    7. '                    
' → logprob: -8.883201599121094
    8. ',
' → logprob: -9.383201599121094
    9. '                  ' → logprob: -9.633201599121094
    10. '           ' → logprob: -9.758201599121094

Token 329: ' nx' (ID: 50118)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.011056660674512386
    2. '                       ' → logprob: -5.761056423187256
    3. '                    
' → logprob: -6.136056423187256
    4. '
' → logprob: -7.011056423187256
    5. '               ' → logprob: -7.136056423187256
    6. '                    ' → logprob: -7.261056423187256
    7. '                           ' → logprob: -7.511056423187256
    8. ' 
' → logprob: -7.636056423187256
    9. '                        
' → logprob: -8.761056900024414
    10. ',' → logprob: -8.886056900024414

Token 330: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16679945588111877
    2. '=' → logprob: -1.9167994260787964
    3. '=x' → logprob: -5.166799545288086
    4. '1' → logprob: -7.666799545288086
    5. 's' → logprob: -9.291799545288086
    6. 'x' → logprob: -9.916799545288086
    7. ']' → logprob: -10.541799545288086
    8. '=(' → logprob: -10.666799545288086
    9. ',x' → logprob: -11.041799545288086
    10. ']=' → logprob: -11.041799545288086

Token 331: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.000553151941858232
    2. ' x' → logprob: -7.500553131103516
    3. '   ' → logprob: -16.500553131103516
    4. '	x' → logprob: -19.000553131103516
    5. '(x' → logprob: -19.375553131103516
    6. ' ' → logprob: -19.625553131103516
    7. '{x' → logprob: -19.875553131103516
    8. '
' → logprob: -20.625553131103516
    9. '  ' → logprob: -21.000553131103516
    10. '"x' → logprob: -21.250553131103516

Token 332: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008389271679334342
    2. 'x' → logprob: -8.000839233398438
    3. ' x' → logprob: -8.625839233398438
    4. ' =' → logprob: -8.875839233398438
    5. '=x' → logprob: -9.250839233398438
    6. ' ' → logprob: -10.625839233398438
    7. ' +' → logprob: -11.375839233398438
    8. '   ' → logprob: -11.750839233398438
    9. '=' → logprob: -11.750839233398438
    10. '                   ' → logprob: -11.875839233398438

Token 333: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6652212142944336
    2. '+' → logprob: -1.4152212142944336
    3. '+x' → logprob: -1.4152212142944336
    4. '+
' → logprob: -9.540221214294434
    5. ' +
' → logprob: -11.415221214294434
    6. '+n' → logprob: -12.165221214294434
    7. '+k' → logprob: -12.540221214294434
    8. '+t' → logprob: -13.415221214294434
    9. '＋' → logprob: -14.290221214294434
    10. '+y' → logprob: -14.415221214294434

Token 334: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0005530327325686812
    2. ' x' → logprob: -7.500553131103516
    3. '
' → logprob: -19.500553131103516
    4. '	x' → logprob: -19.875553131103516
    5. ' ' → logprob: -20.250553131103516
    6. '(x' → logprob: -20.750553131103516
    7. '   ' → logprob: -21.375553131103516
    8. ')x' → logprob: -21.375553131103516
    9. '<|end|>' → logprob: -21.375553131103516
    10. '"x' → logprob: -21.875553131103516

Token 335: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -14.000000953674316
    3. 'x' → logprob: -15.250000953674316
    4. '_' → logprob: -16.625001907348633
    5. '   ' → logprob: -17.125001907348633
    6. '```' → logprob: -17.125001907348633
    7. '₂' → logprob: -17.625001907348633
    8. ' x' → logprob: -18.000001907348633
    9. '
' → logprob: -18.625001907348633
    10. '۲' → logprob: -18.750001907348633

Token 336: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.11947368830442429
    2. '
' → logprob: -2.369473695755005
    3. '                    
' → logprob: -5.119473457336426
    4. ',' → logprob: -5.494473457336426
    5. '                    ' → logprob: -6.619473457336426
    6. '<|end|>' → logprob: -6.744473457336426
    7. ',
' → logprob: -6.994473457336426
    8. '           ' → logprob: -7.119473457336426
    9. ')' → logprob: -7.119473457336426
    10. '               ' → logprob: -7.369473457336426

Token 337: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.3988127708435059
    2. ',' → logprob: -1.5238127708435059
    3. ' nd' → logprob: -1.6488127708435059
    4. 'nd' → logprob: -1.8988127708435059
    5. '<|end|>' → logprob: -3.398812770843506
    6. '                           ' → logprob: -3.523812770843506
    7. '
' → logprob: -3.523812770843506
    8. ',
' → logprob: -4.523812770843506
    9. '                    
' → logprob: -4.648812770843506
    10. '                        
' → logprob: -4.773812770843506

Token 338: ' if' (ID: 538)
  Prédit: ' nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.18405212461948395
    2. 'nd' → logprob: -3.0590522289276123
    3. '
' → logprob: -3.1840522289276123
    4. ' =' → logprob: -3.8090522289276123
    5. ' if' → logprob: -3.8090522289276123
    6. ' 
' → logprob: -4.809051990509033
    7. '                    
' → logprob: -5.059051990509033
    8. '                   ' → logprob: -5.559051990509033
    9. 'if' (adapté à ' if') → logprob: -6.059051990509033
    10. '=' → logprob: -6.059051990509033

Token 339: ' nx' (ID: 50118)
  Prédit: ' nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.11357279121875763
    2. 'nx' → logprob: -2.238572835922241
    3. '(nx' → logprob: -7.238572597503662
    4. ' nd' → logprob: -11.98857307434082
    5. 'x' → logprob: -12.36357307434082
    6. ' x' → logprob: -12.61357307434082
    7. 'n' → logprob: -12.61357307434082
    8. '                   ' → logprob: -13.73857307434082
    9. ' ' → logprob: -13.73857307434082
    10. ' (' → logprob: -13.73857307434082

Token 340: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.018239496275782585
    2. '<=' → logprob: -4.018239498138428
    3. ')<=' → logprob: -10.51823902130127
    4. ' not' → logprob: -10.64323902130127
    5. ']<=' → logprob: -11.64323902130127
    6. ')' → logprob: -11.89323902130127
    7. ' >' → logprob: -12.14323902130127
    8. '<|end|>' → logprob: -12.14323902130127
    9. ' <=",' → logprob: -13.39323902130127
    10. '[' → logprob: -13.39323902130127

Token 341: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00033546582562848926
    2. ' k' → logprob: -8.000335693359375
    3. '	k' → logprob: -20.500335693359375
    4. '{k' → logprob: -20.875335693359375
    5. '   ' → logprob: -21.750335693359375
    6. ',k' → logprob: -21.875335693359375
    7. ' ' → logprob: -23.250335693359375
    8. '
' → logprob: -23.250335693359375
    9. '=k' → logprob: -23.500335693359375
    10. ' к' → logprob: -24.250335693359375

Token 342: '+' (ID: 10)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5460811853408813
    2. ':
' → logprob: -1.1710811853408813
    3. ' and' → logprob: -2.296081066131592
    4. '                       ' → logprob: -5.421081066131592
    5. '                   ' → logprob: -6.421081066131592
    6. ' :' → logprob: -7.171081066131592
    7. 'and' → logprob: -7.171081066131592
    8. '):
' → logprob: -7.296081066131592
    9. ' :
' → logprob: -7.671081066131592
    10. '               ' → logprob: -8.17108154296875

Token 343: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005569627974182367
    2. ' ' → logprob: -7.500556945800781
    3. '<|end|>' → logprob: -12.750556945800781
    4. '```' → logprob: -14.625556945800781
    5. '0' → logprob: -15.625556945800781
    6. '   ' → logprob: -16.00055694580078
    7. ')' → logprob: -16.25055694580078
    8. '  ' → logprob: -16.37555694580078
    9. '
' → logprob: -17.00055694580078
    10. ']' → logprob: -17.25055694580078

Token 344: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17692871391773224
    2. ':
' → logprob: -1.9269287586212158
    3. ' and' → logprob: -4.176928520202637
    4. '):
' → logprob: -7.926928520202637
    5. '                       ' → logprob: -7.926928520202637
    6. '                   ' → logprob: -8.551928520202637
    7. 'and' → logprob: -9.801928520202637
    8. ' :' → logprob: -10.176928520202637
    9. '):' → logprob: -10.176928520202637
    10. ':

' → logprob: -10.551928520202637

Token 345: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.04420088231563568
    2. ':' → logprob: -4.294200897216797
    3. '                               ' → logprob: -4.669200897216797
    4. '                   ' → logprob: -5.544200897216797
    5. '                           ' → logprob: -5.669200897216797
    6. ',' → logprob: -6.294200897216797
    7. '                        
' → logprob: -6.294200897216797
    8. ' and' → logprob: -6.419200897216797
    9. ' :' → logprob: -6.419200897216797
    10. '<|end|>' → logprob: -6.919200897216797

Token 346: ' nd' (ID: 5914)
  Prédit: ' nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.005538489203900099
    2. ' if' → logprob: -6.005538463592529
    3. 'nd' (adapté à ' nd') → logprob: -6.505538463592529
    4. '                       ' → logprob: -7.880538463592529
    5. ' nx' → logprob: -8.255538940429688
    6. ' new' → logprob: -8.505538940429688
    7. '
' → logprob: -8.630538940429688
    8. '                           ' → logprob: -8.880538940429688
    9. ' n' → logprob: -9.755538940429688
    10. '                   ' → logprob: -10.005538940429688

Token 347: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0004958406207151711
    2. 'dp' → logprob: -8.125495910644531
    3. '[p' → logprob: -9.125495910644531
    4. '[' → logprob: -10.375495910644531
    5. ' p' → logprob: -10.500495910644531
    6. 'ep' → logprob: -12.250495910644531
    7. '   ' → logprob: -12.250495910644531
    8. ' dp' → logprob: -12.375495910644531
    9. '_p' → logprob: -12.875495910644531
    10. '[x' → logprob: -13.125495910644531

Token 348: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.00046284322161227465
    2. '[' → logprob: -7.750463008880615
    3. '[(' → logprob: -11.500462532043457
    4. '[
' → logprob: -11.750462532043457
    5. ' [' → logprob: -12.000462532043457
    6. '.setdefault' → logprob: -12.750462532043457
    7. '\[' → logprob: -14.000462532043457
    8. '```' → logprob: -14.250462532043457
    9. '=' → logprob: -14.625462532043457
    10. '   ' → logprob: -15.250462532043457

Token 349: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.000541592831723392
    2. '[x' → logprob: -7.750541687011719
    3. 'p' → logprob: -9.750541687011719
    4. '[' → logprob: -10.750541687011719
    5. 'xp' → logprob: -11.625541687011719
    6. '[n' → logprob: -11.750541687011719
    7. 'dx' → logprob: -11.875541687011719
    8. ']' → logprob: -13.125541687011719
    9. 'nx' → logprob: -14.125541687011719
    10. 'e' → logprob: -14.125541687011719

Token 350: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7321361303329468
    2. '=' → logprob: -1.1071361303329468
    3. ' =' → logprob: -1.9821361303329468
    4. ']=' → logprob: -2.9821362495422363
    5. '=min' → logprob: -9.357135772705078
    6. ' ]' → logprob: -10.357135772705078
    7. 'min' → logprob: -11.732135772705078
    8. ')' → logprob: -11.857135772705078
    9. '[' → logprob: -12.232135772705078
    10. '=max' → logprob: -12.857135772705078

Token 351: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029781386256217957
    2. ' =' → logprob: -3.5297813415527344
    3. '=min' → logprob: -10.404781341552734
    4. '=max' → logprob: -14.529781341552734
    5. '=n' → logprob: -16.654781341552734
    6. '[' → logprob: -17.154781341552734
    7. ']=' → logprob: -17.404781341552734
    8. '=
' → logprob: -17.654781341552734
    9. '   ' → logprob: -17.779781341552734
    10. '＝' → logprob: -18.154781341552734

Token 352: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.029797932133078575
    2. ' min' → logprob: -3.5297980308532715
    3. 'nd' → logprob: -10.154797554016113
    4. ' nd' → logprob: -12.029797554016113
    5. '	min' → logprob: -13.404797554016113
    6. '   ' → logprob: -14.154797554016113
    7. ' ' → logprob: -16.02979850769043
    8. '=min' → logprob: -16.40479850769043
    9. '(min' → logprob: -17.40479850769043
    10. '
' → logprob: -17.52979850769043

Token 353: '(nd' (ID: 131841)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 354: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -4.787507714354433e-05
    2. 'dp' → logprob: -10.62504768371582
    3. 'P' → logprob: -12.50004768371582
    4. 'pv' → logprob: -13.00004768371582
    5. ' p' → logprob: -13.12504768371582
    6. 'xp' → logprob: -13.25004768371582
    7. '   ' → logprob: -13.62504768371582
    8. '
' → logprob: -13.62504768371582
    9. '       ' → logprob: -13.75004768371582
    10. 'pf' → logprob: -14.00004768371582

Token 355: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -1.1041145626222715e-05
    2. '.' → logprob: -12.750011444091797
    3. ' .' → logprob: -12.875011444091797
    4. '[n' → logprob: -13.250011444091797
    5. '.setdefault' → logprob: -13.625011444091797
    6. '(nd' → logprob: -13.875011444091797
    7. 'get' → logprob: -14.500011444091797
    8. '].' → logprob: -15.000011444091797
    9. '(n' → logprob: -15.000011444091797
    10. '(nx' → logprob: -15.500011444091797

Token 356: '(nx' (ID: 189861)
  Prédit: '(nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nx' → logprob: -0.0006482214666903019
    2. '(n' → logprob: -7.375648021697998
    3. ' (' → logprob: -11.250648498535156
    4. '(' → logprob: -12.375648498535156
    5. '(
' → logprob: -12.750648498535156
    6. '(nd' → logprob: -14.125648498535156
    7. 'nx' → logprob: -14.375648498535156
    8. '(x' → logprob: -16.375648498535156
    9. '```' → logprob: -16.625648498535156
    10. ' nx' → logprob: -17.125648498535156

Token 357: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24717767536640167
    2. ',n' → logprob: -1.6221777200698853
    3. ',x' → logprob: -4.122177600860596
    4. ' ,' → logprob: -5.622177600860596
    5. ',(' → logprob: -7.372177600860596
    6. '(nx' → logprob: -7.872177600860596
    7. '(n' → logprob: -8.872178077697754
    8. ',k' → logprob: -9.622178077697754
    9. ',None' → logprob: -9.872178077697754
    10. ',np' → logprob: -9.872178077697754

Token 358: 'INF' (ID: 64358)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.019480902701616287
    2. 'INF' → logprob: -4.6444807052612305
    3. 'float' → logprob: -5.2694807052612305
    4. '1' → logprob: -5.5194807052612305
    5. '100' → logprob: -9.01948070526123
    6. 'c' → logprob: -9.01948070526123
    7. 'int' → logprob: -9.14448070526123
    8. ' ' → logprob: -9.51948070526123
    9. 'sys' → logprob: -9.76948070526123
    10. '   ' → logprob: -10.89448070526123

Token 359: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0014917691005393863
    2. ' ),' → logprob: -7.376491546630859
    3. ',' → logprob: -7.626491546630859
    4. ',c' → logprob: -8.00149154663086
    5. ')' → logprob: -11.25149154663086
    6. '),(' → logprob: -11.25149154663086
    7. ' ,' → logprob: -11.87649154663086
    8. 'c' → logprob: -12.37649154663086
    9. '),
' → logprob: -13.12649154663086
    10. ')c' → logprob: -13.87649154663086

Token 360: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.029811246320605278
    2. ' c' → logprob: -3.529811143875122
    3. '                   ' → logprob: -10.904810905456543
    4. '                           ' → logprob: -11.154810905456543
    5. '                       ' → logprob: -12.029810905456543
    6. '                                   ' → logprob: -12.404810905456543
    7. '                               ' → logprob: -12.404810905456543
    8. '   ' → logprob: -12.529810905456543
    9. '               ' → logprob: -13.279810905456543
    10. '           ' → logprob: -13.279810905456543

Token 361: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.523948907968588e-05
    2. 'c' → logprob: -11.125035285949707
    3. ' c' → logprob: -11.375035285949707
    4. 'ost' → logprob: -12.500035285949707
    5. '[c' → logprob: -14.375035285949707
    6. ')' → logprob: -14.562535285949707
    7. ' ' → logprob: -14.687535285949707
    8. '```' → logprob: -14.750035285949707
    9. '   ' → logprob: -14.875035285949707
    10. 'cost' → logprob: -15.500035285949707

Token 362: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06339456886053085
    2. '+c' → logprob: -3.313394546508789
    3. '+' → logprob: -3.688394546508789
    4. 'c' → logprob: -11.813394546508789
    5. ' ' → logprob: -12.063394546508789
    6. ' c' → logprob: -13.063394546508789
    7. ')' → logprob: -13.563394546508789
    8. ' ' → logprob: -14.313394546508789
    9. '   ' → logprob: -14.563394546508789
    10. ')+' → logprob: -14.688394546508789

Token 363: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.003917037975043058
    2. 'cost' → logprob: -5.753917217254639
    3. ' c' → logprob: -7.253917217254639
    4. '   ' → logprob: -11.50391674041748
    5. ' cost' → logprob: -12.00391674041748
    6. '	c' → logprob: -13.12891674041748
    7. '    ' → logprob: -13.56641674041748
    8. '  ' → logprob: -13.56641674041748
    9. '(c' → logprob: -13.62891674041748
    10. '
' → logprob: -13.75391674041748

Token 364: '2' (ID: 17)
  Prédit: 'ost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.0275877695530653
    2. '2' → logprob: -3.652587652206421
    3. 'st' → logprob: -6.902587890625
    4. ' ost' → logprob: -9.277587890625
    5. 'cost' → logprob: -9.777587890625
    6. '```' → logprob: -10.277587890625
    7. 'os' → logprob: -10.902587890625
    8. ')' → logprob: -11.152587890625
    9. '_cost' → logprob: -11.402587890625
    10. 'osti' → logprob: -12.027587890625

Token 365: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.14268723130226135
    2. '+' → logprob: -2.0176873207092285
    3. '+c' → logprob: -12.14268684387207
    4. ' ' → logprob: -12.39268684387207
    5. ')' → logprob: -13.64268684387207
    6. ' ' → logprob: -15.01768684387207
    7. ')+' → logprob: -15.64268684387207
    8. '+
' → logprob: -15.76768684387207
    9. '+)' → logprob: -16.01768684387207
    10. '+k' → logprob: -16.26768684387207

Token 366: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0005542247672565281
    2. ' cost' → logprob: -7.500554084777832
    3. 'c' → logprob: -14.000554084777832
    4. '(cost' → logprob: -15.000554084777832
    5. ' ' → logprob: -17.25055503845215
    6. '   ' → logprob: -17.50055503845215
    7. '```' → logprob: -17.62555503845215
    8. '
' → logprob: -18.12555503845215
    9. 'Cost' → logprob: -18.75055503845215
    10. ')' → logprob: -19.00055503845215

Token 367: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.024604277219623e-05
    2. ')
' → logprob: -10.625040054321289
    3. ' )' → logprob: -11.375040054321289
    4. '                   ' → logprob: -12.750040054321289
    5. '                       ' → logprob: -14.875040054321289
    6. '               ' → logprob: -15.000040054321289
    7. '           ' → logprob: -15.125040054321289
    8. '                           ' → logprob: -16.12504005432129
    9. ')}' → logprob: -16.50004005432129
    10. '),' → logprob: -16.75004005432129

Token 368: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3307216763496399
    2. '           ' → logprob: -3.080721616744995
    3. '                        
' → logprob: -3.080721616744995
    4. '                       ' → logprob: -3.330721616744995
    5. '                    
' → logprob: -3.580721616744995
    6. '               ' → logprob: -3.705721616744995
    7. '```' → logprob: -3.830721616744995
    8. '                           ' → logprob: -4.330721855163574
    9. '
' → logprob: -4.705721855163574
    10. '                            
' → logprob: -4.830721855163574

Token 369: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08186977356672287
    2. '                    
' → logprob: -3.3318698406219482
    3. '
' → logprob: -4.331869602203369
    4. 'else' → logprob: -5.081869602203369
    5. ' ' → logprob: -5.581869602203369
    6. '           ' → logprob: -5.581869602203369
    7. '               ' → logprob: -5.706869602203369
    8. ' else' → logprob: -5.831869602203369
    9. ' 
' → logprob: -5.956869602203369
    10. '                    ' → logprob: -6.456869602203369

Token 370: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0945112332701683
    2. '2' → logprob: -2.9695112705230713
    3. '                   ' → logprob: -3.3445112705230713
    4. ' #' → logprob: -6.344511032104492
    5. '#' → logprob: -6.469511032104492
    6. '   ' → logprob: -9.719511032104492
    7. '                    ' → logprob: -9.969511032104492
    8. 'else' → logprob: -10.594511032104492
    9. '                       ' → logprob: -10.594511032104492
    10. '               ' → logprob: -10.844511032104492

Token 371: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4679732918739319
    2. 'nx' → logprob: -2.217973232269287
    3. ' ' → logprob: -2.467973232269287
    4. '0' → logprob: -2.967973232269287
    5. ' nx' → logprob: -2.967973232269287
    6. '#' → logprob: -3.092973232269287
    7. '(nx' → logprob: -4.467973232269287
    8. ' #' → logprob: -4.842973232269287
    9. 'else' → logprob: -5.342973232269287
    10. ')' → logprob: -6.467973232269287

Token 372: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000936355150770396
    2. ' )' → logprob: -7.000936508178711
    3. '   ' → logprob: -11.625936508178711
    4. ')(' → logprob: -12.750936508178711
    5. ')[' → logprob: -12.875936508178711
    6. ':' → logprob: -13.375936508178711
    7. ')#' → logprob: -13.625936508178711
    8. '                   ' → logprob: -14.125936508178711
    9. 'else' → logprob: -14.125936508178711
    10. ')add' → logprob: -14.125936508178711

Token 373: ' Do' (ID: 3756)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.1712278127670288
    2. ' no' → logprob: -1.7962278127670288
    3. ' nx' → logprob: -2.0462279319763184
    4. ' nd' → logprob: -2.1712279319763184
    5. 'nx' → logprob: -2.7962279319763184
    6. 'nd' → logprob: -3.1712279319763184
    7. 'No' → logprob: -3.5462279319763184
    8. ' merge' → logprob: -3.6712279319763184
    9. 'not' → logprob: -3.6712279319763184
    10. 'no' → logprob: -3.6712279319763184

Token 374: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.3151298463344574
    2. 'not' → logprob: -1.3151298761367798
    3. 'n't' → logprob: -6.44012975692749
    4. '_not' → logprob: -8.690130233764648
    5. 'n' → logprob: -9.940130233764648
    6. 'nt' → logprob: -10.815130233764648
    7. '```' → logprob: -11.815130233764648
    8. '	not' → logprob: -11.940130233764648
    9. 'nx' → logprob: -12.315130233764648
    10. ' ' → logprob: -12.565130233764648

Token 375: ' cut' (ID: 6092)
  Prédit: ' cut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cut' → logprob: -0.008233699947595596
    2. 'cut' → logprob: -5.133233547210693
    3. '_cut' → logprob: -6.383233547210693
    4. ' nd' → logprob: -8.633234024047852
    5. ' merge' → logprob: -9.133234024047852
    6. ' ' → logprob: -9.383234024047852
    7. ' nx' → logprob: -9.883234024047852
    8. ' split' → logprob: -10.633234024047852
    9. ' connect' → logprob: -10.633234024047852
    10. ' not' → logprob: -10.633234024047852

Token 376: ':' (ID: 25)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.3829770088195801
    2. 'u' → logprob: -2.38297700881958
    3. ' nx' → logprob: -2.63297700881958
    4. '[u' → logprob: -2.75797700881958
    5. ':' → logprob: -3.75797700881958
    6. ',' → logprob: -4.13297700881958
    7. '(u' → logprob: -4.88297700881958
    8. 'nx' → logprob: -4.88297700881958
    9. '(nx' → logprob: -5.38297700881958
    10. ' =' → logprob: -5.50797700881958

Token 377: ' merge' (ID: 20345)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 378: ' subtree' (ID: 126158)
  Prédit: ' nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.8479300737380981
    2. '[n' → logprob: -1.3479300737380981
    3. '(nx' → logprob: -2.3479299545288086
    4. 'nx' → logprob: -2.3479299545288086
    5. '[u' → logprob: -2.7229299545288086
    6. ' =' → logprob: -4.597929954528809
    7. ',' → logprob: -4.722929954528809
    8. '[x' → logprob: -4.847929954528809
    9. ' nd' → logprob: -5.347929954528809
    10. ',n' → logprob: -5.972929954528809

Token 379: ',' (ID: 11)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.194844052195549
    2. '[n' → logprob: -1.9448440074920654
    3. 'nx' → logprob: -3.8198440074920654
    4. ' nx' → logprob: -5.0698442459106445
    5. ',' → logprob: -6.5698442459106445
    6. '[x' → logprob: -6.6948442459106445
    7. 'u' → logprob: -7.4448442459106445
    8. '(nx' → logprob: -7.5698442459106445
    9. ' u' → logprob: -8.194844245910645
    10. ',n' → logprob: -8.194844245910645

Token 380: ' components' (ID: 10674)
  Prédit: ' nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.10808969289064407
    2. ' nd' → logprob: -2.3580896854400635
    3. 'nx' → logprob: -5.108089923858643
    4. '                   ' → logprob: -7.608089923858643
    5. 'nd' → logprob: -7.858089923858643
    6. '                       ' → logprob: -8.358089447021484
    7. '(nx' → logprob: -8.483089447021484
    8. '                    ' → logprob: -9.858089447021484
    9. '                           ' → logprob: -9.983089447021484
    10. ' n' → logprob: -9.983089447021484

Token 381: ' number' (ID: 2086)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22628875076770782
    2. 'x' → logprob: -2.9762887954711914
    3. '=' → logprob: -3.1012887954711914
    4. 'count' → logprob: -3.9762887954711914
    5. ' x' → logprob: -4.101288795471191
    6. '                   ' → logprob: -4.101288795471191
    7. 'merge' → logprob: -4.726288795471191
    8. 'nx' → logprob: -4.726288795471191
    9. '[x' → logprob: -5.101288795471191
    10. '_count' → logprob: -5.476288795471191

Token 382: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07115363329648972
    2. '=' → logprob: -2.6961536407470703
    3. '                   ' → logprob: -7.32115364074707
    4. '=x' → logprob: -8.19615364074707
    5. '           ' → logprob: -9.82115364074707
    6. 'x' → logprob: -10.19615364074707
    7. '=n' → logprob: -10.57115364074707
    8. ' ' → logprob: -10.94615364074707
    9. 'nx' → logprob: -11.07115364074707
    10. '                    ' → logprob: -11.57115364074707

Token 383: ' max' (ID: 2999)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0005486258305609226
    2. ' x' → logprob: -7.625548839569092
    3. 'max' → logprob: -10.000548362731934
    4. '   ' → logprob: -12.375548362731934
    5. 'min' → logprob: -12.500548362731934
    6. 'abs' → logprob: -13.000548362731934
    7. ' max' → logprob: -13.375548362731934
    8. 'nx' → logprob: -14.000548362731934
    9. '1' → logprob: -14.500548362731934
    10. ' ' → logprob: -14.625548362731934

Token 384: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.4318034052848816
    2. '(nx' → logprob: -1.1818034648895264
    3. '(' → logprob: -3.5568034648895264
    4. '(
' → logprob: -5.306803226470947
    5. '=' → logprob: -5.306803226470947
    6. 'nx' → logprob: -6.556803226470947
    7. '(n' → logprob: -6.681803226470947
    8. '                   ' → logprob: -7.556803226470947
    9. '(nd' → logprob: -7.931803226470947
    10. ' (' → logprob: -8.181803703308105

Token 385: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -14.500000953674316
    3. '2' → logprob: -14.625000953674316
    4. ')' → logprob: -15.875000953674316
    5. '```' → logprob: -16.500001907348633
    6. '{' → logprob: -17.250001907348633
    7. ',' → logprob: -17.375001907348633
    8. '[' → logprob: -17.625001907348633
    9. '{
' → logprob: -17.750001907348633
    10. '(' → logprob: -17.875001907348633

Token 386: ',x' (ID: 29748)
  Prédit: ',x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',x' → logprob: -0.008995653130114079
    2. ',' → logprob: -4.758995532989502
    3. ' ,' → logprob: -7.883995532989502
    4. ',n' → logprob: -13.38399600982666
    5. ',
' → logprob: -13.63399600982666
    6. 'x' → logprob: -14.75899600982666
    7. '[x' → logprob: -15.25899600982666
    8. '(x' → logprob: -15.38399600982666
    9. ',max' → logprob: -15.63399600982666
    10. ',v' → logprob: -16.383995056152344

Token 387: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.723973582556937e-05
    2. ' ' → logprob: -11.250017166137695
    3. '2' → logprob: -12.500017166137695
    4. 'x' → logprob: -15.500017166137695
    5. '
' → logprob: -15.625017166137695
    6. ')' → logprob: -17.500017166137695
    7. '   ' → logprob: -17.500017166137695
    8. ',' → logprob: -17.750017166137695
    9. ' x' → logprob: -17.750017166137695
    10. '```' → logprob: -17.750017166137695

Token 388: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16846899688243866
    2. ')
' → logprob: -1.918468952178955
    3. ',' → logprob: -5.918468952178955
    4. '                   ' → logprob: -6.418468952178955
    5. ' )
' → logprob: -6.418468952178955
    6. ' )' → logprob: -6.543468952178955
    7. '),' → logprob: -8.293469429016113
    8. '):
' → logprob: -9.043469429016113
    9. ' ,' → logprob: -9.418469429016113
    10. '```' → logprob: -9.668469429016113

Token 389: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06308470666408539
    2. '                    
' → logprob: -3.313084602355957
    3. '                    ' → logprob: -5.188084602355957
    4. ',' → logprob: -5.313084602355957
    5. '                       ' → logprob: -5.813084602355957
    6. '                        
' → logprob: -6.313084602355957
    7. '```' → logprob: -6.313084602355957
    8. ' 
' → logprob: -6.938084602355957
    9. ' if' → logprob: -7.188084602355957
    10. '                           ' → logprob: -7.313084602355957

Token 390: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.44029009342193604
    2. ' 
' → logprob: -2.4402899742126465
    3. '                    
' → logprob: -2.6902899742126465
    4. ' if' → logprob: -2.8152899742126465
    5. ' nd' → logprob: -3.4402899742126465
    6. '                    ' → logprob: -3.9402899742126465
    7. ' ' → logprob: -4.4402899742126465
    8. ' nx' → logprob: -4.8152899742126465
    9. 'nd' → logprob: -5.1902899742126465
    10. '                       ' → logprob: -5.1902899742126465

Token 391: ' But' (ID: 3072)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10987836122512817
    2. ' nx' → logprob: -3.4848783016204834
    3. '                   ' → logprob: -3.8598783016204834
    4. ' nd' → logprob: -4.1098785400390625
    5. ' for' → logprob: -4.7348785400390625
    6. 'if' → logprob: -5.7348785400390625
    7. ' 
' → logprob: -5.8598785400390625
    8. ' ' → logprob: -5.9848785400390625
    9. '                    ' → logprob: -5.9848785400390625
    10. 'nx' → logprob: -6.2348785400390625

Token 392: ' must' (ID: 2804)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.1154048889875412
    2. ' nx' → logprob: -2.4904048442840576
    3. ' max' → logprob: -4.865405082702637
    4. ' not' → logprob: -4.990405082702637
    5. ' nd' → logprob: -5.490405082702637
    6. 'x' → logprob: -5.490405082702637
    7. ' if' → logprob: -7.115405082702637
    8. ' dp' → logprob: -7.115405082702637
    9. 'nx' → logprob: -7.615405082702637
    10. ' ' → logprob: -8.740405082702637

Token 393: ' check' (ID: 2371)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.060035768896341324
    2. 'be' → logprob: -3.8100357055664062
    3. '>=' → logprob: -4.685035705566406
    4. ' not' → logprob: -5.060035705566406
    5. '>' → logprob: -5.560035705566406
    6. '=' → logprob: -5.685035705566406
    7. 'not' → logprob: -5.810035705566406
    8. 'max' → logprob: -6.435035705566406
    9. ' >=' → logprob: -6.685035705566406
    10. '                   ' → logprob: -6.935035705566406

Token 394: ' if' (ID: 538)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.38702884316444397
    2. ' if' → logprob: -1.6370288133621216
    3. 'x' → logprob: -2.512028932571411
    4. 'if' → logprob: -3.512028932571411
    5. '                   ' → logprob: -4.887028694152832
    6. ' (' → logprob: -5.512028694152832
    7. ' max' → logprob: -6.887028694152832
    8. '(x' → logprob: -7.012028694152832
    9. 'max' → logprob: -7.887028694152832
    10. '   ' → logprob: -8.137028694152832

Token 395: ' combined' (ID: 15890)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 396: ' subtree' (ID: 126158)
  Prédit: '_dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dp' → logprob: -1.891143560409546
    2. ' dp' → logprob: -2.141143560409546
    3. '_cost' → logprob: -2.266143560409546
    4. 'dp' → logprob: -2.516143560409546
    5. '_x' → logprob: -2.641143560409546
    6. ' cost' → logprob: -2.766143560409546
    7. ' components' → logprob: -3.141143560409546
    8. '_components' → logprob: -3.266143560409546
    9. 'cost' → logprob: -3.391143560409546
    10. '_' → logprob: -3.891143560409546

Token 397: ' has' (ID: 853)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.5455110669136047
    2. ' can' → logprob: -1.54551100730896
    3. ' has' → logprob: -2.79551100730896
    4. ' is' → logprob: -3.42051100730896
    5. 'can' → logprob: -3.67051100730896
    6. '```' → logprob: -3.92051100730896
    7. ' contains' → logprob: -4.795511245727539
    8. 'has' → logprob: -4.920511245727539
    9. 'u' → logprob: -5.170511245727539
    10. ',' → logprob: -5.795511245727539

Token 398: ' at' (ID: 540)
  Prédit: ' bases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bases' → logprob: -1.089646577835083
    2. ' at' → logprob: -1.714646577835083
    3. 'bases' → logprob: -2.339646577835083
    4. ' any' → logprob: -2.964646577835083
    5. '1' → logprob: -3.089646577835083
    6. 'x' → logprob: -3.089646577835083
    7. ' a' → logprob: -3.339646577835083
    8. 'any' → logprob: -3.714646577835083
    9. 'u' → logprob: -3.714646577835083
    10. ' ' → logprob: -4.089646339416504

Token 399: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.016903378069400787
    2. ' least' → logprob: -4.391903400421143
    3. 'most' → logprob: -6.141903400421143
    4. 'le' → logprob: -7.266903400421143
    5. '```' → logprob: -8.141902923583984
    6. '1' → logprob: -8.391902923583984
    7. '_le' → logprob: -8.391902923583984
    8. 'Least' → logprob: -9.516902923583984
    9. 'east' → logprob: -9.516902923583984
    10. '   ' → logprob: -9.641902923583984

Token 400: ' one' (ID: 1001)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2479926347732544
    2. 'x' → logprob: -2.122992515563965
    3. ' ' → logprob: -2.997992515563965
    4. ' x' → logprob: -3.622992515563965
    5. 'max' → logprob: -4.372992515563965
    6. ' max' → logprob: -4.747992515563965
    7. '0' → logprob: -6.997992515563965
    8. ' one' → logprob: -8.122992515563965
    9. ' min' → logprob: -8.622992515563965
    10. 'min' → logprob: -8.622992515563965

Token 401: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.20657123625278473
    2. ' component' → logprob: -2.206571340560913
    3. 'base' → logprob: -2.956571340560913
    4. 'component' → logprob: -4.081571102142334
    5. 'x' → logprob: -6.331571102142334
    6. ' x' → logprob: -6.456571102142334
    7. '_base' → logprob: -7.206571102142334
    8. ' key' → logprob: -7.206571102142334
    9. ' ' → logprob: -7.706571102142334
    10. '_' → logprob: -7.956571102142334

Token 402: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.008657592348754406
    2. '                    ' → logprob: -5.383657455444336
    3. '                    
' → logprob: -6.758657455444336
    4. '                       ' → logprob: -7.633657455444336
    5. ',' → logprob: -8.008657455444336
    6. '<|end|>' → logprob: -8.508657455444336
    7. '               ' → logprob: -8.758657455444336
    8. ' if' → logprob: -8.883657455444336
    9. '           ' → logprob: -8.883657455444336
    10. '                  ' → logprob: -9.133657455444336

Token 403: '                   ' (ID: 699)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.341372013092041
    2. '                   ' → logprob: -1.341372013092041
    3. ' ' → logprob: -1.841372013092041
    4. ' x' → logprob: -2.966372013092041
    5. '                    ' → logprob: -3.091372013092041
    6. ' nd' → logprob: -3.466372013092041
    7. ' max' → logprob: -3.716372013092041
    8. ' nx' → logprob: -3.966372013092041
    9. ' (' → logprob: -4.466372013092041
    10. ' n' → logprob: -4.466372013092041

Token 404: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6675565838813782
    2. ' if' → logprob: -2.0425565242767334
    3. '                   ' → logprob: -2.4175565242767334
    4. ' 
' → logprob: -2.6675565242767334
    5. '                    ' → logprob: -3.6675565242767334
    6. ''' → logprob: -4.0425567626953125
    7. ' nd' → logprob: -4.0425567626953125
    8. '    ' → logprob: -4.4175567626953125
    9. ' for' → logprob: -4.9175567626953125
    10. '   ' → logprob: -5.0425567626953125

Token 405: ' since' (ID: 3630)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.15585342049598694
    2. '                   ' → logprob: -3.155853509902954
    3. ' nx' → logprob: -3.280853509902954
    4. ' nd' → logprob: -3.905853509902954
    5. 'if' → logprob: -4.530853271484375
    6. '                    ' → logprob: -5.155853271484375
    7. ' ' → logprob: -5.155853271484375
    8. ' for' → logprob: -5.280853271484375
    9. ' max' → logprob: -6.280853271484375
    10. 'nd' → logprob: -6.530853271484375

Token 406: ' dp' (ID: 21546)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.539182186126709
    2. 'x' → logprob: -1.289182186126709
    3. ' (' → logprob: -2.789182186126709
    4. ' u' → logprob: -3.414182186126709
    5. '(x' → logprob: -4.164182186126709
    6. 'u' → logprob: -4.164182186126709
    7. ' max' → logprob: -5.414182186126709
    8. '(' → logprob: -5.789182186126709
    9. '(u' → logprob: -5.789182186126709
    10. 'max' → logprob: -6.289182186126709

Token 407: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.005311081185936928
    2. 'u' → logprob: -5.255311012268066
    3. ' u' → logprob: -10.880311012268066
    4. '[' → logprob: -11.505311012268066
    5. ' [' → logprob: -11.505311012268066
    6. '[v' → logprob: -11.880311012268066
    7. '```' → logprob: -12.005311012268066
    8. '   ' → logprob: -12.630311012268066
    9. 'get' → logprob: -12.630311012268066
    10. '.get' → logprob: -12.755311012268066

Token 408: ']' (ID: 60)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.3620411455631256
    2. '][' → logprob: -1.9870411157608032
    3. ' and' → logprob: -3.4870412349700928
    4. ']' → logprob: -3.4870412349700928
    5. '
' → logprob: -3.4870412349700928
    6. '].' → logprob: -4.112040996551514
    7. '```' → logprob: -4.487040996551514
    8. '[' → logprob: -5.112040996551514
    9. 'u' → logprob: -5.362040996551514
    10. '.get' → logprob: -5.612040996551514

Token 409: ' and' (ID: 326)
  Prédit: '.get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.42282599210739136
    2. ' and' → logprob: -1.9228260517120361
    3. '[u' → logprob: -2.422826051712036
    4. ' has' → logprob: -3.797826051712036
    5. '.has' → logprob: -4.297825813293457
    6. 'get' → logprob: -4.422825813293457
    7. 'and' → logprob: -4.547825813293457
    8. '[' → logprob: -5.047825813293457
    9. ')' → logprob: -5.422825813293457
    10. ' is' → logprob: -5.547825813293457

Token 410: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.39278948307037354
    2. ' dp' → logprob: -1.1427894830703735
    3. 'x' → logprob: -5.642789363861084
    4. ' x' → logprob: -6.767789363861084
    5. 'v' → logprob: -7.642789363861084
    6. ' ' → logprob: -8.517789840698242
    7. 'u' → logprob: -8.892789840698242
    8. ' v' → logprob: -9.392789840698242
    9. '#' → logprob: -9.517789840698242
    10. ' u' → logprob: -9.767789840698242

Token 411: '[v' (ID: 36561)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.1695438623428345
    2. 'v' → logprob: -1.2945438623428345
    3. '[v' → logprob: -1.2945438623428345
    4. ' and' → logprob: -2.544543743133545
    5. 'u' → logprob: -3.169543743133545
    6. '[' → logprob: -5.669543743133545
    7. 'and' → logprob: -5.794543743133545
    8. '
' → logprob: -6.169543743133545
    9. ' v' → logprob: -6.294543743133545
    10. '[x' → logprob: -6.419543743133545

Token 412: ']' (ID: 60)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.1662830114364624
    2. ' have' → logprob: -1.2912830114364624
    3. 'have' → logprob: -2.791283130645752
    4. ' are' → logprob: -2.791283130645752
    5. ' contain' → logprob: -3.041283130645752
    6. ')' → logprob: -3.291283130645752
    7. '),' → logprob: -4.166283130645752
    8. ''s' → logprob: -4.291283130645752
    9. ' contains' → logprob: -4.291283130645752
    10. '[' → logprob: -4.541283130645752

Token 413: ' only' (ID: 1606)
  Prédit: ' have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' have' → logprob: -0.9810963273048401
    2. ' contain' → logprob: -1.3560962677001953
    3. 'have' → logprob: -2.2310962677001953
    4. '.keys' → logprob: -2.9810962677001953
    5. '[u' → logprob: -3.3560962677001953
    6. ' are' → logprob: -3.7310962677001953
    7. '```' → logprob: -3.8560962677001953
    8. ' must' → logprob: -3.8560962677001953
    9. 'contain' → logprob: -4.231096267700195
    10. ' keys' → logprob: -4.356096267700195

Token 414: ' keep' (ID: 3357)
  Prédit: 'store'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'store' → logprob: -0.45869994163513184
    2. 'keep' → logprob: -2.333699941635132
    3. 'have' → logprob: -3.083699941635132
    4. 'track' → logprob: -3.083699941635132
    5. 'contain' → logprob: -3.208699941635132
    6. 'represent' → logprob: -3.333699941635132
    7. ' store' → logprob: -3.708699941635132
    8. ' represent' → logprob: -4.083700180053711
    9. 'stores' → logprob: -4.208700180053711
    10. ' contain' → logprob: -4.708700180053711

Token 415: ' keys' (ID: 12994)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8852747678756714
    2. ' keys' → logprob: -1.6352747678756714
    3. 'keys' → logprob: -1.8852747678756714
    4. 'max' → logprob: -3.635274887084961
    5. '1' → logprob: -3.760274887084961
    6. 'key' → logprob: -3.885274887084961
    7. ' x' → logprob: -4.010274887084961
    8. ' one' → logprob: -4.135274887084961
    9. '(x' → logprob: -4.260274887084961
    10. 'the' → logprob: -4.260274887084961

Token 416: ' with' (ID: 483)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.4912976026535034
    2. ' in' → logprob: -1.6162976026535034
    3. '                   ' → logprob: -1.9912976026535034
    4. '                       ' → logprob: -2.116297721862793
    5. ' =' → logprob: -2.491297721862793
    6. ' as' → logprob: -3.241297721862793
    7. ',' → logprob: -3.616297721862793
    8. ' for' → logprob: -3.991297721862793
    9. ' if' → logprob: -4.366297721862793
    10. 'in' → logprob: -4.616297721862793

Token 417: ' valid' (ID: 4529)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -1.525274395942688
    2. 'x' → logprob: -1.650274395942688
    3. ' bases' → logprob: -2.2752742767333984
    4. '1' → logprob: -2.5252742767333984
    5. 'bases' → logprob: -2.5252742767333984
    6. '>=' → logprob: -2.6502742767333984
    7. 'at' → logprob: -2.9002742767333984
    8. '>' → logprob: -2.9002742767333984
    9. '0' → logprob: -3.2752742767333984
    10. ' x' → logprob: -3.7752742767333984

Token 418: ' base' (ID: 3611)
  Prédit: ' bases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bases' → logprob: -0.36147624254226685
    2. ' components' → logprob: -2.111476182937622
    3. 'bases' → logprob: -2.361476182937622
    4. ' keys' → logprob: -3.361476182937622
    5. 'components' → logprob: -4.111476421356201
    6. ' base' → logprob: -4.861476421356201
    7. 'keys' → logprob: -5.236476421356201
    8. 'dp' → logprob: -5.611476421356201
    9. ' dp' → logprob: -5.736476421356201
    10. 'base' → logprob: -6.361476421356201

Token 419: ' counts' (ID: 28991)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.014584410935640335
    2. ',' → logprob: -5.639584541320801
    3. '                       ' → logprob: -6.014584541320801
    4. ' =' → logprob: -6.264584541320801
    5. ' if' → logprob: -6.514584541320801
    6. '                    
' → logprob: -6.764584541320801
    7. '                    ' → logprob: -7.014584541320801
    8. '```' → logprob: -7.514584541320801
    9. '               ' → logprob: -8.0145845413208
    10. '                           ' → logprob: -8.2645845413208

Token 420: ',
' (ID: 412)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.015076645649969578
    2. '[n' → logprob: -5.390076637268066
    3. ',' → logprob: -5.640076637268066
    4. '                       ' → logprob: -6.015076637268066
    5. '                    
' → logprob: -6.890076637268066
    6. '                    ' → logprob: -7.390076637268066
    7. '[' → logprob: -7.515076637268066
    8. '```' → logprob: -8.140076637268066
    9. '                           ' → logprob: -8.390076637268066
    10. '               ' → logprob: -8.640076637268066

Token 421: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4623301923274994
    2. '                    ' → logprob: -1.4623302221298218
    3. ' ' → logprob: -3.2123301029205322
    4. ' nd' → logprob: -3.4623301029205322
    5. ' nx' → logprob: -4.087330341339111
    6. '                       ' → logprob: -4.337330341339111
    7. '                           ' → logprob: -5.712330341339111
    8. ' x' → logprob: -5.962330341339111
    9. '                            ' → logprob: -5.962330341339111
    10. ',' → logprob: -5.962330341339111

Token 422: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.39812353253364563
    2. '                   ' → logprob: -2.1481235027313232
    3. ' nd' → logprob: -2.5231235027313232
    4. ' nx' → logprob: -3.5231235027313232
    5. '                       ' → logprob: -3.6481235027313232
    6. '                    ' → logprob: -3.7731235027313232
    7. ' ' → logprob: -4.023123741149902
    8. 'if' → logprob: -4.648123741149902
    9. ' continue' → logprob: -5.898123741149902
    10. ')' → logprob: -5.898123741149902

Token 423: ' merging' (ID: 107009)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4343740940093994
    2. ' nd' → logprob: -1.9343740940093994
    3. ' nx' → logprob: -2.3093740940093994
    4. ' for' → logprob: -2.5593740940093994
    5. 'if' → logprob: -4.30937385559082
    6. '                   ' → logprob: -5.68437385559082
    7. '                       ' → logprob: -5.80937385559082
    8. ' continue' → logprob: -6.05937385559082
    9. 'nx' → logprob: -6.05937385559082
    10. 'nd' → logprob: -6.18437385559082

Token 424: ' is' (ID: 382)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 425: ' possible' (ID: 4149)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 426: ' with' (ID: 483)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05436814948916435
    2. ' if' → logprob: -4.179368019104004
    3. '(nx' → logprob: -4.304368019104004
    4. ',' → logprob: -4.679368019104004
    5. ' nx' → logprob: -5.304368019104004
    6. '                       ' → logprob: -5.679368019104004
    7. '                    
' → logprob: -6.304368019104004
    8. '[n' → logprob: -7.304368019104004
    9. 'nx' → logprob: -7.304368019104004
    10. '(n' → logprob: -7.679368019104004

Token 427: ' components' (ID: 10674)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.1903369277715683
    2. 'max' → logprob: -2.4403369426727295
    3. ' x' → logprob: -3.5653369426727295
    4. ' min' → logprob: -3.9403369426727295
    5. ' nx' → logprob: -4.56533670425415
    6. 'x' → logprob: -5.31533670425415
    7. ' the' → logprob: -5.44033670425415
    8. ' no' → logprob: -5.69033670425415
    9. ' keys' → logprob: -5.94033670425415
    10. 'nx' → logprob: -6.56533670425415

Token 428: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22234274446964264
    2. '=' → logprob: -1.7223427295684814
    3. '=max' → logprob: -3.9723427295684814
    4. '=min' → logprob: -7.9723429679870605
    5. '                   ' → logprob: -8.347342491149902
    6. 'max' → logprob: -8.472342491149902
    7. '=n' → logprob: -8.972342491149902
    8. ')' → logprob: -9.222342491149902
    9. ',' → logprob: -9.347342491149902
    10. 's' → logprob: -9.347342491149902

Token 429: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.004735684022307396
    2. ' max' → logprob: -5.379735469818115
    3. 'x' → logprob: -9.379735946655273
    4. '{' → logprob: -11.254735946655273
    5. 'min' → logprob: -11.254735946655273
    6. '{x' → logprob: -13.129735946655273
    7. '(max' → logprob: -14.379735946655273
    8. '[max' → logprob: -14.379735946655273
    9. '{
' → logprob: -14.754735946655273
    10. '	max' → logprob: -14.879735946655273

Token 430: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.03444117680191994
    2. '(' → logprob: -3.4094412326812744
    3. ' (' → logprob: -7.534440994262695
    4. 'x' → logprob: -9.034440994262695
    5. '(nx' → logprob: -9.034440994262695
    6. '(
' → logprob: -11.409440994262695
    7. '(max' → logprob: -12.784440994262695
    8. '(n' → logprob: -13.034440994262695
    9. ',x' → logprob: -13.159440994262695
    10. ' x' → logprob: -14.284440994262695

Token 431: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8444881536415778e-05
    2. ' ' → logprob: -12.250028610229492
    3. '```' → logprob: -12.250028610229492
    4. '(x' → logprob: -12.500028610229492
    5. '2' → logprob: -12.875028610229492
    6. ')' → logprob: -12.875028610229492
    7. 'x' → logprob: -13.375028610229492
    8. '
' → logprob: -13.375028610229492
    9. '   ' → logprob: -13.500028610229492
    10. '(' → logprob: -13.625028610229492

Token 432: ',x' (ID: 29748)
  Prédit: ',x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',x' → logprob: -0.16051708161830902
    2. ',' → logprob: -1.9105170965194702
    3. ' ,' → logprob: -8.535516738891602
    4. ',v' → logprob: -10.535516738891602
    5. ',
' → logprob: -10.785516738891602
    6. ',max' → logprob: -11.035516738891602
    7. ',n' → logprob: -11.910516738891602
    8. 'x' → logprob: -12.410516738891602
    9. ',y' → logprob: -12.910516738891602
    10. '   ' → logprob: -13.160516738891602

Token 433: '2' (ID: 17)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 434: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.49479490518569946
    2. ')' → logprob: -1.4947948455810547
    3. ')
' → logprob: -2.2447948455810547
    4. '):' → logprob: -3.2447948455810547
    5. '                   ' → logprob: -3.9947948455810547
    6. ' ):
' → logprob: -7.369794845581055
    7. ' )
' → logprob: -7.994794845581055
    8. '):
' → logprob: -8.119794845581055
    9. ' )' → logprob: -8.244794845581055
    10. '                       ' → logprob: -8.369794845581055

Token 435: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004184533376246691
    2. ',' → logprob: -6.379184722900391
    3. '                    
' → logprob: -7.129184722900391
    4. '                       ' → logprob: -7.629184722900391
    5. '                    ' → logprob: -8.12918472290039
    6. '```' → logprob: -8.12918472290039
    7. '               ' → logprob: -8.87918472290039
    8. ' =' → logprob: -9.50418472290039
    9. '                        
' → logprob: -9.62918472290039
    10. '                           ' → logprob: -10.00418472290039

Token 436: ' n' (ID: 297)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.007280287798494101
    2. '                    ' → logprob: -5.757280349731445
    3. '                    
' → logprob: -6.382280349731445
    4. '                       ' → logprob: -6.757280349731445
    5. '               ' → logprob: -8.132280349731445
    6. ' if' → logprob: -9.132280349731445
    7. ',' → logprob: -9.257280349731445
    8. '           ' → logprob: -9.632280349731445
    9. '                        
' → logprob: -9.632280349731445
    10. ' 
' → logprob: -9.757280349731445

Token 437: '_components' (ID: 55324)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -7.898723561083898e-05
    2. ' =' → logprob: -11.375079154968262
    3. 'e' → logprob: -11.500079154968262
    4. 'dx' → logprob: -11.500079154968262
    5. 'ext' → logprob: -12.000079154968262
    6. '=' → logprob: -12.000079154968262
    7. 'xt' → logprob: -12.375079154968262
    8. 'd' → logprob: -12.625079154968262
    9. 'max' → logprob: -12.875079154968262
    10. '
' → logprob: -12.875079154968262

Token 438: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12694427371025085
    2. ' =' → logprob: -2.1269443035125732
    3. '=max' → logprob: -11.126944541931152
    4. '=
' → logprob: -13.876944541931152
    5. ' =
' → logprob: -15.376944541931152
    6. '＝' → logprob: -16.126943588256836
    7. '=

' → logprob: -16.251943588256836
    8. '=}' → logprob: -16.876943588256836
    9. '=n' → logprob: -17.501943588256836
    10. ' ' → logprob: -17.751943588256836

Token 439: ' x' (ID: 1215)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 440: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004747079685330391
    2. 'max' → logprob: -5.754746913909912
    3. ' max' → logprob: -7.504746913909912
    4. ' =' → logprob: -8.12974739074707
    5. '   ' → logprob: -8.62974739074707
    6. '=max' → logprob: -8.87974739074707
    7. '2' → logprob: -9.37974739074707
    8. ' ' → logprob: -9.62974739074707
    9. '=' → logprob: -9.87974739074707
    10. '[u' → logprob: -10.25474739074707

Token 441: ' +' (ID: 659)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.027245495468378067
    2. 'if' → logprob: -3.65224552154541
    3. ' =' → logprob: -8.52724552154541
    4. '   ' → logprob: -8.77724552154541
    5. 'max' → logprob: -9.27724552154541
    6. ',' → logprob: -9.77724552154541
    7. '=' → logprob: -9.90224552154541
    8. '                   ' → logprob: -10.27724552154541
    9. '           ' → logprob: -10.40224552154541
    10. ')' → logprob: -10.40224552154541

Token 442: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0022210339084267616
    2. ' x' → logprob: -6.25222110748291
    3. '0' → logprob: -8.50222110748291
    4. 'max' → logprob: -9.62722110748291
    5. ' ' → logprob: -11.25222110748291
    6. ' max' → logprob: -12.75222110748291
    7. '(' → logprob: -13.00222110748291
    8. '(x' → logprob: -13.25222110748291
    9. '   ' → logprob: -14.00222110748291
    10. 'k' → logprob: -14.12722110748291

Token 443: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.975612187583465e-05
    2. 'x' → logprob: -11.000029563903809
    3. ' ' → logprob: -11.625029563903809
    4. ' x' → logprob: -13.125029563903809
    5. '1' → logprob: -14.125029563903809
    6. '   ' → logprob: -14.250029563903809
    7. ' -' → logprob: -15.500029563903809
    8. '0' → logprob: -15.625029563903809
    9. '```' → logprob: -16.500030517578125
    10. 's' → logprob: -16.625030517578125

Token 444: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3731708824634552
    2. '-' → logprob: -1.6231708526611328
    3. ' if' → logprob: -2.248170852661133
    4. 'if' → logprob: -4.998170852661133
    5. '
' → logprob: -6.998170852661133
    6. ' ' → logprob: -8.373170852661133
    7. '   ' → logprob: -8.498170852661133
    8. '-n' → logprob: -8.873170852661133
    9. ',' → logprob: -9.873170852661133
    10. '                   ' → logprob: -10.123170852661133

Token 445: ' ' (ID: 220)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 446: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006728634238243103
    2. 'min' → logprob: -5.131728649139404
    3. 'max' → logprob: -8.131728172302246
    4. ' ' → logprob: -9.006728172302246
    5. '(' → logprob: -9.131728172302246
    6. '(min' → logprob: -9.381728172302246
    7. ' min' → logprob: -9.881728172302246
    8. 'len' → logprob: -10.006728172302246
    9. 'x' → logprob: -10.256728172302246
    10. ' (' → logprob: -10.756728172302246

Token 447: '
' (ID: 198)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 448: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 449: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.129949688911438
    2. '                   ' → logprob: -2.8799495697021484
    3. '<|end|>' → logprob: -4.004949569702148
    4. 'if' → logprob: -4.379949569702148
    5. ' nd' → logprob: -5.254949569702148
    6. ' for' → logprob: -5.379949569702148
    7. ',' → logprob: -5.379949569702148
    8. 'nd' → logprob: -6.004949569702148
    9. '                       ' → logprob: -6.004949569702148
    10. '                    ' → logprob: -6.129949569702148

Token 450: ' Actually' (ID: 50557)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 451: ',' (ID: 11)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.43620118498802185
    2. 'if' → logprob: -1.6862012147903442
    3. '                   ' → logprob: -2.3112010955810547
    4. ' n' → logprob: -3.6862010955810547
    5. 'n' → logprob: -3.9362010955810547
    6. ' for' → logprob: -4.186201095581055
    7. 'for' → logprob: -5.686201095581055
    8. ' nx' → logprob: -6.936201095581055
    9. 'continue' → logprob: -7.311201095581055
    10. '                       ' → logprob: -7.311201095581055

Token 452: ' no' (ID: 860)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 453: ',' (ID: 11)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 454: ' merging' (ID: 107009)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 455: ' two' (ID: 1920)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5830851793289185
    2. '<|end|>' → logprob: -2.208085060119629
    3. '[n' → logprob: -2.458085060119629
    4. '=' → logprob: -2.833085060119629
    5. '                   ' → logprob: -3.708085060119629
    6. ',' → logprob: -4.083085060119629
    7. ')' → logprob: -4.083085060119629
    8. ' nx' → logprob: -4.083085060119629
    9. ' if' → logprob: -4.208085060119629
    10. ' ' → logprob: -4.208085060119629

Token 456: ' dis' (ID: 829)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5675441026687622
    2. ' -' → logprob: -1.8175441026687622
    3. ' components' → logprob: -2.6925439834594727
    4. ')' → logprob: -2.9425439834594727
    5. ' edges' → logprob: -2.9425439834594727
    6. 'components' → logprob: -3.5675439834594727
    7. 'edges' → logprob: -4.192543983459473
    8. ' !=' → logprob: -4.442543983459473
    9. '!=' → logprob: -5.192543983459473
    10. ' sub' → logprob: -5.692543983459473

Token 457: 'joint' (ID: 69164)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 458: ' components' (ID: 10674)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 459: ' reduces' (ID: 38566)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 460: ' by' (ID: 656)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0754109621047974
    2. ' n' → logprob: -1.4504109621047974
    3. 'n' → logprob: -1.5754109621047974
    4. '1' → logprob: -2.575410842895508
    5. 'the' → logprob: -3.700410842895508
    6. ' ' → logprob: -3.825410842895508
    7. ' nd' → logprob: -3.825410842895508
    8. ' by' → logprob: -3.825410842895508
    9. ' cost' → logprob: -4.200410842895508
    10. ' x' → logprob: -4.575410842895508

Token 461: ' ' (ID: 220)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 462: '1' (ID: 16)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 463: ',
' (ID: 412)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 464: '                   ' (ID: 699)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 465: ' #' (ID: 1069)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 466: ' but' (ID: 889)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 467: ' we' (ID: 581)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 468: ' keep' (ID: 3357)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 469: ' track' (ID: 5290)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 470: ' of' (ID: 328)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 471: ' how' (ID: 1495)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 472: ' many' (ID: 1991)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 473: ' components' (ID: 10674)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 474: ' with' (ID: 483)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 475: ' bases' (ID: 31148)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 476: ' inside' (ID: 6772)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 477: ' subtree' (ID: 126158)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 478: ' rooted' (ID: 73759)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 479: ' at' (ID: 540)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 480: ' u' (ID: 337)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 481: '.
' (ID: 558)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 482: '                   ' (ID: 699)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 483: ' #' (ID: 1069)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 484: ' The' (ID: 623)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 485: ' merging' (ID: 107009)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 486: ' implies' (ID: 47808)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 487: ' that' (ID: 484)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 488: ' total' (ID: 3609)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 489: ' components' (ID: 10674)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 490: ' is' (ID: 382)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 491: ' x' (ID: 1215)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 492: '1' (ID: 16)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 493: ' +' (ID: 659)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 494: ' x' (ID: 1215)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 495: '2' (ID: 17)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 496: ' -' (ID: 533)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 497: ' ' (ID: 220)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 498: '1' (ID: 16)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 499: '
' (ID: 198)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 500: '                   ' (ID: 699)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 501: ' #' (ID: 1069)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 502: ' So' (ID: 2632)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 503: ':
' (ID: 734)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 504: '                   ' (ID: 699)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 505: ' nx' (ID: 50118)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 506: '2' (ID: 17)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 507: ' =' (ID: 314)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 508: ' x' (ID: 1215)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 509: '1' (ID: 16)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 510: ' +' (ID: 659)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 511: ' x' (ID: 1215)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 512: '2' (ID: 17)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 513: ' -' (ID: 533)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 514: '1' (ID: 16)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 515: '
' (ID: 198)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 516: '                   ' (ID: 699)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 517: ' if' (ID: 538)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 518: ' nx' (ID: 50118)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 519: '2' (ID: 17)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 520: ' <=' (ID: 5017)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 521: ' k' (ID: 372)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 522: '+' (ID: 10)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 523: '1' (ID: 16)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 524: ' and' (ID: 326)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 525: ' nx' (ID: 50118)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 526: '2' (ID: 17)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 527: ' >=' (ID: 5064)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 528: '0' (ID: 15)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 529: ':
' (ID: 734)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 530: '                       ' (ID: 968)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 531: ' nd' (ID: 5914)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 532: 'p' (ID: 79)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 533: '[n' (ID: 15433)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 534: 'x' (ID: 87)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 535: '2' (ID: 17)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 536: ']' (ID: 60)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 537: ' =' (ID: 314)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 538: ' min' (ID: 1349)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 539: '(nd' (ID: 131841)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 540: 'p' (ID: 79)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 541: '.get' (ID: 775)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 542: '(nx' (ID: 189861)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 543: '2' (ID: 17)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 544: ',' (ID: 11)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 545: 'INF' (ID: 64358)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 546: '),' (ID: 936)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 547: ' c' (ID: 274)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 548: '1' (ID: 16)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 549: ' +' (ID: 659)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 550: ' c' (ID: 274)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 551: '2' (ID: 17)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 552: ')
' (ID: 446)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 553: '           ' (ID: 352)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 554: ' dp' (ID: 21546)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 555: '[u' (ID: 48750)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 556: ']' (ID: 60)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 557: ' =' (ID: 314)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 558: ' nd' (ID: 5914)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 559: 'p' (ID: 79)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 560: '

' (ID: 279)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 561: '   ' (ID: 271)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 562: ' #' (ID: 1069)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 563: ' root' (ID: 6577)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 564: ' anywhere' (ID: 15907)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 565: ',' (ID: 11)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 566: ' pick' (ID: 5230)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 567: ' node' (ID: 4596)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 568: ' ' (ID: 220)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 569: '1' (ID: 16)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 570: '
' (ID: 198)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 571: '   ' (ID: 271)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 572: ' dfs' (ID: 51252)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 573: '(' (ID: 7)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 574: '1' (ID: 16)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 575: ',-' (ID: 8202)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 576: '1' (ID: 16)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 577: ')
' (ID: 446)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 578: '   ' (ID: 271)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 579: ' #' (ID: 1069)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 580: ' We' (ID: 1416)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 581: ' want' (ID: 1682)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 582: ' dp' (ID: 21546)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 583: '[' (ID: 58)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 584: '1' (ID: 16)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 585: '][' (ID: 2696)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 586: 'k' (ID: 74)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 587: '+' (ID: 10)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 588: '1' (ID: 16)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 589: ']' (ID: 60)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 590: ' minimal' (ID: 19957)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 591: ' cost' (ID: 3097)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 592: '
' (ID: 198)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 593: '   ' (ID: 271)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 594: ' res' (ID: 694)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 595: ' =' (ID: 314)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 596: ' dp' (ID: 21546)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 597: '[' (ID: 58)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 598: '1' (ID: 16)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 599: '].' (ID: 1651)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 600: 'get' (ID: 522)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 601: '(k' (ID: 12125)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 602: '+' (ID: 10)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 603: '1' (ID: 16)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 604: ',' (ID: 11)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 605: 'INF' (ID: 64358)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 606: ')
' (ID: 446)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 607: '   ' (ID: 271)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 608: ' print' (ID: 2123)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 609: '(f' (ID: 1526)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 610: '"' (ID: 1)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 611: 'Case' (ID: 6187)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 612: ' {' (ID: 354)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 613: 'case' (ID: 9994)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 614: '_num' (ID: 9834)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 615: '}:' (ID: 33132)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 616: ' {' (ID: 354)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 617: 'res' (ID: 430)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 618: '}")
' (ID: 23577)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 619: '   ' (ID: 271)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 620: ' case' (ID: 1890)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 621: '_num' (ID: 9834)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 622: ' +=' (ID: 2757)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 623: ' ' (ID: 220)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 624: '1' (ID: 16)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 622
Tokens correctement prédits (1ère position, stricte): 182
Tokens correctement prédits (1ère position, avec adaptation): 192
Tokens correctement prédits (top 10): 342
Précision stricte (1ère position): 29.26%
Précision adaptée (1ère position): 30.87%
Précision (top 10): 54.98%
================================================================================
