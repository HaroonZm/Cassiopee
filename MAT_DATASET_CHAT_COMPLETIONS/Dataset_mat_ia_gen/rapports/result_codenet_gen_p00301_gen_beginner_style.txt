================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:23:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
w = int(input())

res = []
while w != 0:
    r = w % 3
    w = w // 3
    if r == 2:
        r = -1
        w += 1
    res.append(r)

# Convert digits to symbols
ans = ''
for x in reversed(res):
    if x == 1:
        ans += '+'
    elif x == 0:
        ans += '0'
    else:
        ans += '-'

print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'w' (ID: 86)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0028777492698282003
    2. 'w' → logprob: -6.127877712249756
    3. '(w' → logprob: -8.502878189086914
    4. ''' → logprob: -8.627878189086914
    5. '('' → logprob: -9.252878189086914
    6. '```' → logprob: -9.377878189086914
    7. '("("' → logprob: -10.877878189086914
    8. '`' → logprob: -11.127878189086914
    9. ')' → logprob: -11.252878189086914
    10. '(
' → logprob: -11.252878189086914

Token 4: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11273476481437683
    2. ')' → logprob: -2.612734794616699
    3. '()' → logprob: -3.737734794616699
    4. '('' → logprob: -6.112734794616699
    5. '())' → logprob: -6.237734794616699
    6. '```' → logprob: -6.737734794616699
    7. ''' → logprob: -6.987734794616699
    8. '`' → logprob: -7.237734794616699
    9. '(()' → logprob: -7.612734794616699
    10. '(
' → logprob: -7.612734794616699

Token 5: 'res' (ID: 430)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2500342130661011
    2. 'i' → logprob: -2.3750343322753906
    3. '*' → logprob: -2.7500343322753906
    4. '+' → logprob: -3.3750343322753906
    5. 'for' → logprob: -4.750034332275391
    6. 's' → logprob: -5.750034332275391
    7. 'n' → logprob: -5.875034332275391
    8. '\n' → logprob: -5.875034332275391
    9. '%' → logprob: -6.375034332275391
    10. '`' → logprob: -6.500034332275391

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1583597660064697
    2. '=' → logprob: -1.2833597660064697
    3. ' =' → logprob: -1.2833597660064697
    4. '+' → logprob: -2.9083597660064697
    5. '_' → logprob: -3.2833597660064697
    6. ' ' → logprob: -4.033359527587891
    7. '.' → logprob: -4.658359527587891
    8. ')' → logprob: -5.408359527587891
    9. '[:]' → logprob: -5.908359527587891
    10. ' +=' → logprob: -6.283359527587891

Token 7: ' []
' (ID: 8911)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0056850910186768
    2. ' w' → logprob: -1.3806850910186768
    3. 'w' → logprob: -1.3806850910186768
    4. ' ' → logprob: -2.1306850910186768
    5. '"' → logprob: -5.255684852600098
    6. ''' → logprob: -5.380684852600098
    7. '1' → logprob: -6.755684852600098
    8. ' []' → logprob: -7.505684852600098
    9. ' '' → logprob: -7.630684852600098
    10. ' "' → logprob: -8.505684852600098

Token 8: 'while' (ID: 7032)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01460884977132082
    2. ' for' → logprob: -4.389608860015869
    3. '\n' → logprob: -7.514608860015869
    4. 'w' → logprob: -7.764608860015869
    5. '[' → logprob: -8.514608383178711
    6. '
' → logprob: -8.639608383178711
    7. '\' → logprob: -8.764608383178711
    8. '```' → logprob: -9.264608383178711
    9. ' ' → logprob: -9.389608383178711
    10. 'i' → logprob: -9.639608383178711

Token 9: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.006789381615817547
    2. 'w' → logprob: -5.131789207458496
    3. ' ' → logprob: -7.881789207458496
    4. ' True' → logprob: -8.006789207458496
    5. ' not' → logprob: -9.506789207458496
    6. ' ' → logprob: -10.006789207458496
    7. 'True' → logprob: -11.131789207458496
    8. '_' → logprob: -12.631789207458496
    9. '  ' → logprob: -12.881789207458496
    10. ' len' → logprob: -13.631789207458496

Token 10: ' !=' (ID: 1666)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.05953407287597656
    2. '>' → logprob: -2.9345340728759766
    3. ' >=' → logprob: -5.684534072875977
    4. ' %' → logprob: -7.934534072875977
    5. ' <' → logprob: -8.184534072875977
    6. '%' → logprob: -8.184534072875977
    7. ' <=' → logprob: -9.309534072875977
    8. ' ' → logprob: -9.434534072875977
    9. '>=' → logprob: -9.559534072875977
    10. ' !=' → logprob: -10.559534072875977

Token 11: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25285279750823975
    2. ' ' → logprob: -1.5028527975082397
    3. '1' → logprob: -7.252852916717529
    4. '2' → logprob: -9.877852439880371
    5. '20' → logprob: -10.377852439880371
    6. '18' → logprob: -10.752852439880371
    7. '32' → logprob: -11.127852439880371
    8. '10' → logprob: -11.377852439880371
    9. '40' → logprob: -11.752852439880371
    10. '4' → logprob: -11.877852439880371

Token 12: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.025028137490153313
    2. ' ' → logprob: -3.7750282287597656
    3. '1' → logprob: -6.400028228759766
    4. '2' → logprob: -9.650028228759766
    5. '20' → logprob: -11.400028228759766
    6. ''' → logprob: -11.900028228759766
    7. '4' → logprob: -12.900028228759766
    8. '10' → logprob: -12.900028228759766
    9. '   ' → logprob: -13.087528228759766
    10. '=' → logprob: -13.087528228759766

Token 13: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001657565007917583
    2. ':
' → logprob: -8.750165939331055
    3. ' :' → logprob: -12.625165939331055
    4. ':**' → logprob: -13.750165939331055
    5. '):' → logprob: -14.125165939331055
    6. '   ' → logprob: -14.750165939331055
    7. ':w' → logprob: -14.875165939331055
    8. '':' → logprob: -15.125165939331055
    9. '':'' → logprob: -16.000165939331055
    10. ',' → logprob: -16.125165939331055

Token 14: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.041333556175232
    2. ' ' → logprob: -1.166333556175232
    3. '   ' → logprob: -1.916333556175232
    4. '    ' → logprob: -3.4163336753845215
    5. '\n' → logprob: -3.5413336753845215
    6. '\' → logprob: -3.5413336753845215
    7. '    
' → logprob: -3.7913336753845215
    8. '```' → logprob: -3.7913336753845215
    9. '     
' → logprob: -4.6663336753845215
    10. ' res' → logprob: -4.6663336753845215

Token 15: ' r' (ID: 428)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.891095757484436
    2. '   ' → logprob: -1.391095757484436
    3. ' ```' → logprob: -2.2660956382751465
    4. ' n' → logprob: -2.7660956382751465
    5. '```' → logprob: -3.3910956382751465
    6. ' 
' → logprob: -3.3910956382751465
    7. ' w' → logprob: -3.6410956382751465
    8. ' i' → logprob: -4.5160956382751465
    9. '    ' → logprob: -4.6410956382751465
    10. ' `' → logprob: -4.7660956382751465

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06656122207641602
    2. 'es' → logprob: -3.191561222076416
    3. '=' → logprob: -4.066561222076416
    4. ' ' → logprob: -5.441561222076416
    5. 'em' → logprob: -7.691561222076416
    6. ',' → logprob: -7.816561222076416
    7. 'esize' → logprob: -8.066560745239258
    8. 'e' → logprob: -8.816560745239258
    9. '=int' → logprob: -9.441560745239258
    10. 'ema' → logprob: -9.566560745239258

Token 17: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.11616858839988708
    2. 'w' → logprob: -2.36616849899292
    3. 'int' → logprob: -4.74116849899292
    4. ' int' → logprob: -4.99116849899292
    5. ' ' → logprob: -8.616168975830078
    6. ' min' → logprob: -10.116168975830078
    7. ' input' → logprob: -10.366168975830078
    8. '0' → logprob: -11.491168975830078
    9. 'input' → logprob: -11.741168975830078
    10. 'min' → logprob: -11.991168975830078

Token 18: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.10037252306938171
    2. '%' → logprob: -2.350372552871704
    3. ' //' → logprob: -9.225372314453125
    4. ' ' → logprob: -9.975372314453125
    5. '```' → logprob: -12.100372314453125
    6. '**' → logprob: -13.100372314453125
    7. '`' → logprob: -13.225372314453125
    8. ' ' → logprob: -13.475372314453125
    9. ' **' → logprob: -13.975372314453125
    10. '-' → logprob: -13.975372314453125

Token 19: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.7331798076629639
    2. '2' → logprob: -1.3581798076629639
    3. '5' → logprob: -2.233179807662964
    4. '3' → logprob: -2.733179807662964
    5. '7' → logprob: -2.858179807662964
    6. '4' → logprob: -4.858180046081543
    7. '6' → logprob: -5.233180046081543
    8. '60' → logprob: -5.608180046081543
    9. '100' → logprob: -5.733180046081543
    10. '8' → logprob: -5.733180046081543

Token 20: '3' (ID: 18)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5423203706741333
    2. '2' → logprob: -1.1673203706741333
    3. '3' → logprob: -3.2923202514648438
    4. '7' → logprob: -3.7923202514648438
    5. '5' → logprob: -3.9173202514648438
    6. '4' → logprob: -4.792320251464844
    7. '8' → logprob: -5.417320251464844
    8. '6' → logprob: -5.792320251464844
    9. '16' → logprob: -5.917320251464844
    10. '100' → logprob: -6.167320251464844

Token 21: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 22: '   ' (ID: 271)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.9511107802391052
    2. '<|end|>' → logprob: -1.45111083984375
    3. ' ' → logprob: -2.32611083984375
    4. '\' → logprob: -2.45111083984375
    5. '   ' → logprob: -3.07611083984375
    6. '```' → logprob: -3.32611083984375
    7. ')' → logprob: -3.95111083984375
    8. '*' → logprob: -4.07611083984375
    9. '
' → logprob: -4.57611083984375
    10. '  ' → logprob: -4.70111083984375

Token 23: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' (adapté à ' w') → logprob: -0.25583916902542114
    2. ' w' → logprob: -1.5058391094207764
    3. '```' → logprob: -6.1308393478393555
    4. ' ' → logprob: -6.7558393478393555
    5. ' 
' → logprob: -9.380839347839355
    6. ' ```' → logprob: -9.505839347839355
    7. ' res' → logprob: -9.880839347839355
    8. '    ' → logprob: -9.880839347839355
    9. ' ' → logprob: -10.005839347839355
    10. '     
' → logprob: -10.130839347839355

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2819748818874359
    2. '=' → logprob: -1.5319749116897583
    3. '//=' → logprob: -4.281974792480469
    4. ' /=' → logprob: -4.406974792480469
    5. ' //' → logprob: -6.156974792480469
    6. ' ' → logprob: -7.281974792480469
    7. '/=' → logprob: -8.781974792480469
    8. '//' → logprob: -8.781974792480469
    9. '/' → logprob: -9.281974792480469
    10. ' >>=' → logprob: -9.906974792480469

Token 25: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.012511178851127625
    2. 'w' → logprob: -4.387511253356934
    3. ' ' → logprob: -13.637511253356934
    4. '	w' → logprob: -15.387511253356934
    5. ' ' → logprob: -16.012510299682617
    6. ' (' → logprob: -17.137510299682617
    7. '  ' → logprob: -17.887510299682617
    8. '_w' → logprob: -17.950010299682617
    9. 'int' → logprob: -17.950010299682617
    10. '/' → logprob: -18.075010299682617

Token 26: ' //' (ID: 602)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.36893725395202637
    2. ' ' → logprob: -1.9939372539520264
    3. ' /' → logprob: -2.7439372539520264
    4. ' //' → logprob: -2.9939372539520264
    5. '//' → logprob: -3.9939372539520264
    6. '`' → logprob: -4.7439374923706055
    7. ' ' → logprob: -4.8689374923706055
    8. 'div' → logprob: -5.4939374923706055
    9. '  ' → logprob: -5.7439374923706055
    10. '"' → logprob: -5.8689374923706055

Token 27: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0003357006062287837
    2. ' ' → logprob: -8.000335693359375
    3. '```' → logprob: -16.125335693359375
    4. '=' → logprob: -16.625335693359375
    5. '   ' → logprob: -17.375335693359375
    6. '  ' → logprob: -17.500335693359375
    7. ' ' → logprob: -17.625335693359375
    8. '`' → logprob: -18.750335693359375
    9. '۳' → logprob: -19.625335693359375
    10. '³' → logprob: -19.687835693359375

Token 28: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -16.375003814697266
    4. '```' → logprob: -16.625003814697266
    5. '  ' → logprob: -18.625003814697266
    6. '`' → logprob: -18.875003814697266
    7. '۳' → logprob: -19.375003814697266
    8. '³' → logprob: -19.500003814697266
    9. '٣' → logprob: -19.750003814697266
    10. '３' → logprob: -20.687503814697266

Token 29: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1689174324274063
    2. '```' → logprob: -2.543917417526245
    3. '``' → logprob: -3.293917417526245
    4. '    
' → logprob: -4.168917655944824
    5. 'res' → logprob: -5.043917655944824
    6. '\' → logprob: -5.543917655944824
    7. '+' → logprob: -5.793917655944824
    8. ' res' → logprob: -6.293917655944824
    9. '
' → logprob: -6.293917655944824
    10. '   
' → logprob: -6.668917655944824

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029290661215782166
    2. ' res' → logprob: -4.154290676116943
    3. 'res' → logprob: -4.779290676116943
    4. '    
' → logprob: -6.279290676116943
    5. '```' → logprob: -6.904290676116943
    6. '<|end|>' → logprob: -7.154290676116943
    7. '
' → logprob: -8.279290199279785
    8. '\' → logprob: -8.779290199279785
    9. '  ' → logprob: -9.279290199279785
    10. '``' → logprob: -9.279290199279785

Token 31: ' if' (ID: 538)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.18353722989559174
    2. 'res' → logprob: -1.808537244796753
    3. '   ' → logprob: -5.683537006378174
    4. '    ' → logprob: -9.308537483215332
    5. ' ' → logprob: -9.933537483215332
    6. ' if' → logprob: -10.058537483215332
    7. '```' → logprob: -10.183537483215332
    8. 'r' → logprob: -10.558537483215332
    9. '	res' → logprob: -10.683537483215332
    10. ' ```' → logprob: -10.808537483215332

Token 32: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.0009786247974261642
    2. 'r' → logprob: -7.000978469848633
    3. ' w' → logprob: -10.250978469848633
    4. ' ' → logprob: -11.125978469848633
    5. ' res' → logprob: -11.500978469848633
    6. ' ' → logprob: -12.500978469848633
    7. ' not' → logprob: -13.000978469848633
    8. 'w' → logprob: -14.750978469848633
    9. ' (' → logprob: -16.250978469848633
    10. '	r' → logprob: -16.750978469848633

Token 33: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.23441465198993683
    2. '==' → logprob: -1.6094146966934204
    3. ' !=' → logprob: -5.234414577484131
    4. '!=' → logprob: -6.984414577484131
    5. ' ' → logprob: -7.109414577484131
    6. ' >' → logprob: -7.359414577484131
    7. '=' → logprob: -7.484414577484131
    8. '>' → logprob: -7.984414577484131
    9. ' =' → logprob: -9.359415054321289
    10. ':' → logprob: -9.359415054321289

Token 34: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06724736839532852
    2. '2' → logprob: -2.8172473907470703
    3. '0' → logprob: -5.56724739074707
    4. '1' → logprob: -6.56724739074707
    5. ' -' → logprob: -10.69224739074707
    6. '-' → logprob: -11.31724739074707
    7. ' ' → logprob: -13.50474739074707
    8. '=' → logprob: -13.56724739074707
    9. '  ' → logprob: -15.31724739074707
    10. '<|end|>' → logprob: -15.87974739074707

Token 35: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.058658190071582794
    2. '0' → logprob: -2.9336581230163574
    3. ' ' → logprob: -5.933658123016357
    4. '1' → logprob: -6.808658123016357
    5. '-' → logprob: -12.683658599853516
    6. '```' → logprob: -13.121158599853516
    7. '=' → logprob: -13.933658599853516
    8. '	' → logprob: -13.996158599853516
    9. ' ' → logprob: -14.058658599853516
    10. '

' → logprob: -14.246158599853516

Token 36: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016693204641342163
    2. ' :' → logprob: -4.391693115234375
    3. ':
' → logprob: -5.641693115234375
    4. ' :
' → logprob: -7.891693115234375
    5. '-' → logprob: -8.766693115234375
    6. ' or' → logprob: -10.016693115234375
    7. '   ' → logprob: -11.891693115234375
    8. ' -' → logprob: -11.891693115234375
    9. ' ' → logprob: -12.016693115234375
    10. 'w' → logprob: -12.141693115234375

Token 37: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0546027347445488
    2. '   ' → logprob: -3.30460262298584
    3. '-' → logprob: -4.92960262298584
    4. ' res' → logprob: -5.92960262298584
    5. ' ' → logprob: -6.42960262298584
    6. '<|end|>' → logprob: -6.42960262298584
    7. ' -' → logprob: -7.17960262298584
    8. '1' → logprob: -7.42960262298584
    9. '    ' → logprob: -7.80460262298584
    10. ' r' → logprob: -8.30460262298584

Token 38: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.3111456632614136
    2. ' res' → logprob: -1.9361456632614136
    3. 'r' (adapté à ' r') → logprob: -3.311145782470703
    4. ' ' → logprob: -3.436145782470703
    5. '1' → logprob: -4.186145782470703
    6. '    ' → logprob: -4.686145782470703
    7. '-' → logprob: -5.061145782470703
    8. '   ' → logprob: -5.061145782470703
    9. 'res' → logprob: -5.311145782470703
    10. ' -' → logprob: -5.311145782470703

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1893101930618286
    2. '=' → logprob: -1.8143101930618286
    3. ' -=' → logprob: -4.939310073852539
    4. '-' → logprob: -7.064310073852539
    5. '-=' → logprob: -7.064310073852539
    6. ' -' → logprob: -7.939310073852539
    7. '=-' → logprob: -9.064310073852539
    8. ' +=' → logprob: -9.564310073852539
    9. ' ' → logprob: -9.814310073852539
    10. '+=' → logprob: -10.564310073852539

Token 40: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.012605015188455582
    2. ' -' → logprob: -4.3876051902771
    3. '0' → logprob: -10.012604713439941
    4. '1' → logprob: -10.637604713439941
    5. ' ' → logprob: -11.262604713439941
    6. '   ' → logprob: -12.887604713439941
    7. '3' → logprob: -13.512604713439941
    8. '=' → logprob: -13.512604713439941
    9. '−' → logprob: -13.512604713439941
    10. '=-' → logprob: -13.637604713439941

Token 41: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. '<|end|>' → logprob: -17.125017166137695
    4. '   ' → logprob: -18.000017166137695
    5. '-' → logprob: -18.125017166137695
    6. '  ' → logprob: -18.375017166137695
    7. ' -' → logprob: -19.000017166137695
    8. '2' → logprob: -19.187517166137695
    9. '```' → logprob: -19.687517166137695
    10. '9' → logprob: -19.750017166137695

Token 42: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1459554135799408
    2. 'res' → logprob: -2.7709553241729736
    3. 'w' → logprob: -3.1459553241729736
    4. ' res' → logprob: -4.270955562591553
    5. '    ' → logprob: -5.270955562591553
    6. 's' → logprob: -6.020955562591553
    7. '    
' → logprob: -6.270955562591553
    8. '1' → logprob: -6.645955562591553
    9. '
' → logprob: -6.895955562591553
    10. '  ' → logprob: -7.145955562591553

Token 43: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03952996805310249
    2. 'res' → logprob: -3.914530038833618
    3. ' res' → logprob: -4.289529800415039
    4. '```' → logprob: -6.039529800415039
    5. '    
' → logprob: -6.664529800415039
    6. '    ' → logprob: -7.539529800415039
    7. 'w' → logprob: -8.414529800415039
    8. '  ' → logprob: -8.914529800415039
    9. '``' → logprob: -9.414529800415039
    10. '       ' → logprob: -9.664529800415039

Token 44: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' (adapté à ' w') → logprob: -0.0005259881727397442
    2. ' w' → logprob: -7.625525951385498
    3. '   ' → logprob: -10.375526428222656
    4. '1' → logprob: -13.000526428222656
    5. '```' → logprob: -13.375526428222656
    6. 'res' → logprob: -13.875526428222656
    7. '	w' → logprob: -14.375526428222656
    8. 'b' → logprob: -14.625526428222656
    9. ' ' → logprob: -15.000526428222656
    10. '       ' → logprob: -15.500526428222656

Token 45: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00995712447911501
    2. ' +=' → logprob: -5.009957313537598
    3. '+' → logprob: -6.009957313537598
    4. '=' → logprob: -7.259957313537598
    5. '```' → logprob: -10.634957313537598
    6. '<|end|>' → logprob: -10.884957313537598
    7. ']+=' → logprob: -11.384957313537598
    8. '1' → logprob: -12.384957313537598
    9. '+++' → logprob: -12.384957313537598
    10. '+='' → logprob: -12.509957313537598

Token 46: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '<|end|>' → logprob: -16.8750057220459
    4. '   ' → logprob: -17.5000057220459
    5. '  ' → logprob: -18.0000057220459
    6. '```' → logprob: -19.3750057220459
    7. '１' → logprob: -19.5000057220459
    8. '۱' → logprob: -19.5000057220459
    9. '    ' → logprob: -19.8750057220459
    10. '...' → logprob: -20.4375057220459

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '<|end|>' → logprob: -18.625
    4. '```' → logprob: -19.375
    5. '   ' → logprob: -19.75
    6. '  ' → logprob: -20.125
    7. '۱' → logprob: -21.0
    8. '...' → logprob: -21.0
    9. '１' → logprob: -21.75
    10. '१' → logprob: -21.8125

Token 48: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03834417462348938
    2. ' res' → logprob: -3.663344144821167
    3. 'res' → logprob: -4.538344383239746
    4. '```' → logprob: -7.288344383239746
    5. '
' → logprob: -8.538344383239746
    6. '  ' → logprob: -9.038344383239746
    7. ' ' → logprob: -9.413344383239746
    8. '    
' → logprob: -9.538344383239746
    9. '``' → logprob: -10.288344383239746
    10. '<|end|>' → logprob: -11.163344383239746

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0768519714474678
    2. '```' → logprob: -3.3268520832061768
    3. ' res' → logprob: -3.9518520832061768
    4. 'res' → logprob: -4.076851844787598
    5. '``' → logprob: -6.326851844787598
    6. '`' → logprob: -10.076851844787598
    7. '    
' → logprob: -10.951851844787598
    8. '
' → logprob: -11.701851844787598
    9. ' ' → logprob: -11.951851844787598
    10. '  ' → logprob: -12.326851844787598

Token 50: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.6974644064903259
    2. '   ' → logprob: -1.3224644660949707
    3. 'res' (adapté à ' res') → logprob: -1.4474644660949707
    4. '```' → logprob: -8.322463989257812
    5. '	res' → logprob: -9.447463989257812
    6. '    
' → logprob: -10.072463989257812
    7. ' ' → logprob: -10.197463989257812
    8. '  ' → logprob: -10.322463989257812
    9. '``' → logprob: -10.697463989257812
    10. '`' → logprob: -11.447463989257812

Token 51: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0086322957649827
    2. '.' → logprob: -4.758632183074951
    3. 'append' → logprob: -11.25863265991211
    4. '.app' → logprob: -13.00863265991211
    5. '.ap' → logprob: -14.50863265991211
    6. '.push' → logprob: -15.00863265991211
    7. '.Append' → logprob: -15.00863265991211
    8. '.extend' → logprob: -15.25863265991211
    9. ' append' → logprob: -15.38363265991211
    10. ' .' → logprob: -15.38363265991211

Token 52: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.25712472200393677
    2. '(str' → logprob: -1.507124662399292
    3. '(chr' → logprob: -5.632124900817871
    4. '(' → logprob: -6.757124900817871
    5. '('' → logprob: -8.507124900817871
    6. '((' → logprob: -8.632124900817871
    7. '(abs' → logprob: -11.132124900817871
    8. '(-' → logprob: -11.382124900817871
    9. '("("' → logprob: -11.507124900817871
    10. '(res' → logprob: -11.632124900817871

Token 53: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.4868770196917467e-05
    2. ')
' → logprob: -10.625024795532227
    3. ' )' → logprob: -15.375024795532227
    4. ')

' → logprob: -15.750024795532227
    5. ')`' → logprob: -17.000024795532227
    6. ')return' → logprob: -17.375024795532227
    7. '))' → logprob: -17.750024795532227
    8. ')
' → logprob: -18.250024795532227
    9. '）' → logprob: -19.000024795532227
    10. '),' → logprob: -19.000024795532227

Token 54: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8966525793075562
    2. 'if' → logprob: -1.3966525793075562
    3. 'res' → logprob: -1.6466525793075562
    4. '
' → logprob: -2.5216526985168457
    5. 'for' → logprob: -3.1466526985168457
    6. ' 
' → logprob: -5.021652698516846
    7. '  
' → logprob: -5.646652698516846
    8. ' if' → logprob: -5.771652698516846
    9. '```' → logprob: -5.771652698516846
    10. 'result' → logprob: -6.021652698516846

Token 55: ' Convert' (ID: 15629)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3594300150871277
    2. ' print' → logprob: -2.1094300746917725
    3. ' res' → logprob: -2.7344300746917725
    4. ' if' → logprob: -3.3594300746917725
    5. 'res' → logprob: -3.4844300746917725
    6. ' for' → logprob: -3.8594300746917725
    7. 'for' → logprob: -4.109429836273193
    8. 'if' → logprob: -4.484429836273193
    9. ' 
' → logprob: -8.109430313110352
    10. ' while' → logprob: -8.359430313110352

Token 56: ' digits' (ID: 37806)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.03602529317140579
    2. '(' → logprob: -3.786025285720825
    3. '(res' → logprob: -5.161025524139404
    4. ' res' → logprob: -5.411025524139404
    5. 'to' → logprob: -6.911025524139404
    6. '(
' → logprob: -7.411025524139404
    7. '```' → logprob: -8.036025047302246
    8. ' to' → logprob: -8.411025047302246
    9. '_res' → logprob: -10.036025047302246
    10. ' (' → logprob: -10.286025047302246

Token 57: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.4465203583240509
    2. 'res' → logprob: -1.5715203285217285
    3. 'to' → logprob: -1.9465203285217285
    4. ' into' → logprob: -5.6965203285217285
    5. '[::-' → logprob: -5.6965203285217285
    6. ' res' → logprob: -7.4465203285217285
    7. '```' → logprob: -7.5715203285217285
    8. '(res' → logprob: -7.8215203285217285
    9. '_to' → logprob: -7.9465203285217285
    10. 's' → logprob: -8.821520805358887

Token 58: ' symbols' (ID: 29502)
  Prédit: ' [''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ['' → logprob: -0.5081044435501099
    2. '['' → logprob: -1.3831044435501099
    3. '["' → logprob: -3.5081043243408203
    4. ''s' → logprob: -3.7581043243408203
    5. ' ["' → logprob: -4.00810432434082
    6. 'str' → logprob: -4.13310432434082
    7. '"' → logprob: -4.63310432434082
    8. 'strings' → logprob: -5.25810432434082
    9. ' '' → logprob: -5.38310432434082
    10. ''' → logprob: -5.50810432434082

Token 59: '
' (ID: 198)
  Prédit: 'symbols'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'symbols' → logprob: -1.0080565214157104
    2. 'for' → logprob: -1.2580565214157104
    3. 'result' → logprob: -1.8830565214157104
    4. 'res' → logprob: -2.758056640625
    5. 'mapping' → logprob: -3.383056640625
    6. 'symbol' → logprob: -4.008056640625
    7. 's' → logprob: -4.133056640625
    8. ' for' → logprob: -4.383056640625
    9. '```' → logprob: -4.508056640625
    10. 'digits' → logprob: -4.633056640625

Token 60: 'ans' (ID: 616)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.108439564704895
    2. '\n' → logprob: -1.858439564704895
    3. 'symbols' → logprob: -1.983439564704895
    4. 'for' → logprob: -2.4834394454956055
    5. '```' → logprob: -2.6084394454956055
    6. 'res' → logprob: -2.8584394454956055
    7. '
' → logprob: -3.1084394454956055
    8. 's' → logprob: -3.7334394454956055
    9. 'mapping' → logprob: -4.1084394454956055
    10. 'symbol' → logprob: -4.6084394454956055

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011079183779656887
    2. '=' → logprob: -4.51107931137085
    3. ' +=' → logprob: -11.136078834533691
    4. 's' → logprob: -12.136078834533691
    5. ' ' → logprob: -13.011078834533691
    6. '+=' → logprob: -13.386078834533691
    7. '_' → logprob: -13.386078834533691
    8. '  ' → logprob: -13.636078834533691
    9. '=[]' → logprob: -14.386078834533691
    10. ',' → logprob: -14.886078834533691

Token 62: ' ''
' (ID: 25366)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.8076521158218384
    2. '''' → logprob: -1.0576521158218384
    3. '"' → logprob: -2.307651996612549
    4. '''.' → logprob: -3.057651996612549
    5. ''' → logprob: -3.432651996612549
    6. ' ''.' → logprob: -4.932651996612549
    7. '[' → logprob: -5.307651996612549
    8. ' ''' → logprob: -5.432651996612549
    9. '['' → logprob: -5.682651996612549
    10. '[]' → logprob: -5.807651996612549

Token 63: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004080897197127342
    2. ' for' → logprob: -5.504080772399902
    3. '<|end|>' → logprob: -13.004080772399902
    4. '
' → logprob: -16.37908172607422
    5. '	for' → logprob: -17.00408172607422
    6. '```' → logprob: -17.25408172607422
    7. '<|end|>' → logprob: -18.00408172607422
    8. '[::-' → logprob: -18.75408172607422
    9. '[' → logprob: -19.37908172607422
    10. 'For' → logprob: -19.37908172607422

Token 64: ' x' (ID: 1215)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3668219745159149
    2. ' i' → logprob: -1.8668220043182373
    3. ' digit' → logprob: -2.4918220043182373
    4. 'd' → logprob: -3.3668220043182373
    5. ' r' → logprob: -4.116821765899658
    6. 'i' → logprob: -4.991821765899658
    7. ' x' → logprob: -5.116821765899658
    8. 'digit' → logprob: -5.491821765899658
    9. 'r' → logprob: -6.866821765899658
    10. 'x' → logprob: -7.866821765899658

Token 65: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018160942941904068
    2. 'in' → logprob: -4.018160820007324
    3. ' ' → logprob: -11.768160820007324
    4. '	in' → logprob: -13.268160820007324
    5. 's' → logprob: -15.830660820007324
    6. '  ' → logprob: -15.830660820007324
    7. '_in' → logprob: -15.955660820007324
    8. ',' → logprob: -16.14316177368164
    9. 'n' → logprob: -16.20566177368164
    10. 'ine' → logprob: -16.26816177368164

Token 66: ' reversed' (ID: 57184)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.038042064756155014
    2. ' res' → logprob: -3.2880420684814453
    3. 're' → logprob: -14.913042068481445
    4. '	res' → logprob: -16.663042068481445
    5. 'range' → logprob: -16.788042068481445
    6. 'ans' → logprob: -16.913042068481445
    7. ' ' → logprob: -17.038042068481445
    8. '   ' → logprob: -17.788042068481445
    9. 'ress' → logprob: -17.913042068481445
    10. '(res' → logprob: -18.163042068481445

Token 67: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -4.961759259458631e-06
    2. '(' → logprob: -12.500004768371582
    3. 'res' → logprob: -13.875004768371582
    4. '(range' → logprob: -15.875004768371582
    5. ' (' → logprob: -17.0000057220459
    6. '(r' → logprob: -18.3750057220459
    7. '(re' → logprob: -18.5000057220459
    8. '	res' → logprob: -19.1250057220459
    9. '$res' → logprob: -19.1250057220459
    10. '(
' → logprob: -19.3750057220459

Token 68: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07958943396806717
    2. '):
' → logprob: -2.579589366912842
    3. ')' → logprob: -7.579589366912842
    4. '):
' → logprob: -8.95458984375
    5. ':' → logprob: -10.45458984375
    6. ' ):' → logprob: -10.70458984375
    7. '):

' → logprob: -12.57958984375
    8. ' ):
' → logprob: -13.32958984375
    9. '   ' → logprob: -13.70458984375
    10. ')**' → logprob: -14.82958984375

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009972578845918179
    2. ' ans' → logprob: -4.75997257232666
    3. '<|end|>' → logprob: -7.38497257232666
    4. '	ans' → logprob: -8.25997257232666
    5. ' if' → logprob: -8.88497257232666
    6. 'ans' → logprob: -9.38497257232666
    7. '```' → logprob: -9.75997257232666
    8. '(ans' → logprob: -10.00997257232666
    9. ' ' → logprob: -10.25997257232666
    10. '...' → logprob: -10.38497257232666

Token 70: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2670753002166748
    2. ' ans' → logprob: -1.7670753002166748
    3. '   ' → logprob: -3.017075300216675
    4. 'if' (adapté à ' if') → logprob: -4.892075538635254
    5. 'ans' → logprob: -5.142075538635254
    6. '	ans' → logprob: -7.392075538635254
    7. '    ' → logprob: -8.017075538635254
    8. ' ' → logprob: -8.892075538635254
    9. '```' → logprob: -10.017075538635254
    10. '(ans' → logprob: -10.642075538635254

Token 71: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0010337610729038715
    2. 'x' → logprob: -6.876033782958984
    3. ' ' → logprob: -14.251033782958984
    4. '<|end|>' → logprob: -15.126033782958984
    5. '	x' → logprob: -16.126033782958984
    6. ' ' → logprob: -17.126033782958984
    7. ')x' → logprob: -18.376033782958984
    8. '<|end|>' → logprob: -18.501033782958984
    9. '(x' → logprob: -18.751033782958984
    10. '"x' → logprob: -20.001033782958984

Token 72: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2524491548538208
    2. '==' → logprob: -1.5024491548538208
    3. '==-' → logprob: -8.127449035644531
    4. ')' → logprob: -9.252449035644531
    5. ' ' → logprob: -10.002449035644531
    6. '=' → logprob: -10.877449035644531
    7. '>' → logprob: -11.252449035644531
    8. ' ' → logprob: -11.377449035644531
    9. ')==' → logprob: -11.627449035644531
    10. '  ' → logprob: -12.127449035644531

Token 73: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6012815833091736
    2. '-' → logprob: -1.6012816429138184
    3. '1' → logprob: -1.7262816429138184
    4. '0' → logprob: -3.1012816429138184
    5. ' -' → logprob: -3.6012816429138184
    6. ' ' → logprob: -11.85128116607666
    7. '  ' → logprob: -11.97628116607666
    8. '2' → logprob: -12.10128116607666
    9. '   ' → logprob: -12.35128116607666
    10. '+' → logprob: -14.41378116607666

Token 74: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3073270320892334
    2. '1' → logprob: -1.6823270320892334
    3. '0' → logprob: -2.8073270320892334
    4. ' ' → logprob: -4.0573272705078125
    5. ' -' → logprob: -6.9323272705078125
    6. '2' → logprob: -12.057327270507812
    7. '   ' → logprob: -13.182327270507812
    8. '  ' → logprob: -13.682327270507812
    9. '(-' → logprob: -14.619827270507812
    10. ' ' → logprob: -15.057327270507812

Token 75: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002184284385293722
    2. ':
' → logprob: -6.3771843910217285
    3. '<|end|>' → logprob: -8.12718391418457
    4. ')' → logprob: -9.00218391418457
    5. '   ' → logprob: -11.25218391418457
    6. ' or' → logprob: -11.50218391418457
    7. '):' → logprob: -11.50218391418457
    8. '<|end|>' → logprob: -11.50218391418457
    9. '):
' → logprob: -12.50218391418457
    10. ' :' → logprob: -12.75218391418457

Token 76: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5319792032241821
    2. '<|end|>' → logprob: -1.6569792032241821
    3. '   ' → logprob: -1.9069792032241821
    4. ' ans' → logprob: -3.0319790840148926
    5. ':' → logprob: -4.281979084014893
    6. '	ans' → logprob: -5.781979084014893
    7. '<|end|>' → logprob: -6.656979084014893
    8. ' ' → logprob: -6.906979084014893
    9. ')' → logprob: -7.031979084014893
    10. 'ans' → logprob: -7.031979084014893

Token 77: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.44514843821525574
    2. 'ans' (adapté à ' ans') → logprob: -1.0701484680175781
    3. ''' → logprob: -5.195148468017578
    4. '	ans' → logprob: -5.445148468017578
    5. '   ' → logprob: -5.695148468017578
    6. ' '+'' → logprob: -6.570148468017578
    7. ' '' → logprob: -7.945148468017578
    8. ''+' → logprob: -8.070148468017578
    9. ' '+' → logprob: -8.695148468017578
    10. ''s' → logprob: -8.945148468017578

Token 78: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.15242460370063782
    2. ' +=' → logprob: -2.0274245738983154
    3. '+='' → logprob: -4.9024248123168945
    4. '+' → logprob: -6.1524248123168945
    5. '+="' → logprob: -9.277424812316895
    6. ' +' → logprob: -10.402424812316895
    7. ']+=' → logprob: -11.402424812316895
    8. '.append' → logprob: -12.652424812316895
    9. '=' → logprob: -13.527424812316895
    10. '++' → logprob: -13.777424812316895

Token 79: ' '+' (ID: 30120)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02960433065891266
    2. '"+"' → logprob: -4.279604434967041
    3. ''+' → logprob: -4.904604434967041
    4. ' '+'' → logprob: -5.779604434967041
    5. '"' → logprob: -6.154604434967041
    6. ''A' → logprob: -7.279604434967041
    7. ' '' → logprob: -8.029603958129883
    8. ''S' → logprob: -8.154603958129883
    9. ''O' → logprob: -8.279603958129883
    10. ''T' → logprob: -8.279603958129883

Token 80: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02278810739517212
    2. ''''' → logprob: -3.8977880477905273
    3. '''' → logprob: -6.522788047790527
    4. '<|end|>' → logprob: -7.897788047790527
    5. '"' → logprob: -8.772788047790527
    6. ''>' → logprob: -9.522788047790527
    7. ''''
' → logprob: -9.897788047790527
    8. '')' → logprob: -10.147788047790527
    9. '<|end|>' → logprob: -10.897788047790527
    10. ''#' → logprob: -11.022788047790527

Token 81: '   ' (ID: 271)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.2033015638589859
    2. ' elif' → logprob: -1.9533015489578247
    3. '   ' → logprob: -3.3283016681671143
    4. '<|end|>' → logprob: -5.703301429748535
    5. '	elif' → logprob: -6.078301429748535
    6. ' ' → logprob: -8.078301429748535
    7. ''' → logprob: -8.453301429748535
    8. '```' → logprob: -9.328301429748535
    9. '  ' → logprob: -11.328301429748535
    10. ' else' → logprob: -11.453301429748535

Token 82: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.19771036505699158
    2. ''-' → logprob: -2.3227102756500244
    3. ' elif' → logprob: -3.1977102756500244
    4. '-' → logprob: -3.6977102756500244
    5. '   ' → logprob: -4.4477105140686035
    6. ''' → logprob: -5.8227105140686035
    7. ' '-'' → logprob: -7.8227105140686035
    8. ' ' → logprob: -8.322710037231445
    9. '	elif' → logprob: -8.447710037231445
    10. ' '-' → logprob: -9.572710037231445

Token 83: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.002477200934663415
    2. 'x' → logprob: -6.002477169036865
    3. ' ' → logprob: -13.877477645874023
    4. ' ' → logprob: -15.877477645874023
    5. '(x' → logprob: -17.002477645874023
    6. ' (' → logprob: -17.002477645874023
    7. '0' → logprob: -17.064977645874023
    8. '	x' → logprob: -17.127477645874023
    9. '"x' → logprob: -17.627477645874023
    10. '`' → logprob: -17.689977645874023

Token 84: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20169320702552795
    2. '==' → logprob: -1.7016931772232056
    3. '==-' → logprob: -8.201693534851074
    4. ' ' → logprob: -13.326693534851074
    5. '=' → logprob: -13.826693534851074
    6. ' =' → logprob: -14.076693534851074
    7. '===' → logprob: -14.576693534851074
    8. '=='' → logprob: -15.076693534851074
    9. ')' → logprob: -15.326693534851074
    10. ' ===' → logprob: -15.451693534851074

Token 85: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.1552013158798218
    2. ''-' → logprob: -1.1552013158798218
    3. '0' → logprob: -1.2802013158798218
    4. ''' → logprob: -2.9052014350891113
    5. ' ' → logprob: -3.7802014350891113
    6. ' '-'' → logprob: -5.155201435089111
    7. ' -' → logprob: -5.280201435089111
    8. ' '' → logprob: -5.905201435089111
    9. '1' → logprob: -7.905201435089111
    10. ' '-' → logprob: -8.905200958251953

Token 86: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5651212334632874
    2. ''-' → logprob: -1.1901211738586426
    3. '0' → logprob: -2.0651211738586426
    4. ''' → logprob: -7.940121173858643
    5. ' '-'' → logprob: -8.6901216506958
    6. '"-' → logprob: -9.6901216506958
    7. '1' → logprob: -10.1901216506958
    8. ' ' → logprob: -10.4401216506958
    9. '2' → logprob: -10.8151216506958
    10. ' -' → logprob: -11.5651216506958

Token 87: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014557128306478262
    2. ' :' → logprob: -6.876455783843994
    3. '       ' → logprob: -8.251455307006836
    4. ':
' → logprob: -9.001455307006836
    5. '   ' → logprob: -11.376455307006836
    6. ' =' → logprob: -11.376455307006836
    7. '=' → logprob: -12.126455307006836
    8. ' ' → logprob: -13.251455307006836
    9. '    ' → logprob: -13.376455307006836
    10. ' :
' → logprob: -13.626455307006836

Token 88: '       ' (ID: 309)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1354643702507019
    2. '   ' → logprob: -2.1354644298553467
    3. '       ' → logprob: -5.510464191436768
    4. ''-' → logprob: -6.885464191436768
    5. ' '' → logprob: -7.260464191436768
    6. ''s' → logprob: -7.760464191436768
    7. 'ans' → logprob: -7.760464191436768
    8. '`' → logprob: -7.885464191436768
    9. ' ' → logprob: -7.885464191436768
    10. '"' → logprob: -8.010464668273926

Token 89: ' ans' (ID: 3345)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.15409664809703827
    2. ' ans' → logprob: -2.2790966033935547
    3. ''-' → logprob: -3.9040966033935547
    4. 'ans' (adapté à ' ans') → logprob: -4.154096603393555
    5. ' '' → logprob: -5.529096603393555
    6. ' '-'' → logprob: -7.904096603393555
    7. '=' → logprob: -9.654096603393555
    8. '	ans' → logprob: -10.279096603393555
    9. ' ' → logprob: -10.529096603393555
    10. '"' → logprob: -11.029096603393555

Token 90: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.16546621918678284
    2. '+=' → logprob: -1.9154661893844604
    3. ' +' → logprob: -5.41546630859375
    4. '+' → logprob: -7.41546630859375
    5. '+='' → logprob: -8.91546630859375
    6. '+="' → logprob: -10.79046630859375
    7. '=' → logprob: -12.16546630859375
    8. ']+=' → logprob: -12.66546630859375
    9. ' !=' → logprob: -13.16546630859375
    10. ' ==' → logprob: -13.16546630859375

Token 91: ' '' (ID: 461)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.12927909195423126
    2. ''' → logprob: -2.129279136657715
    3. ''.' → logprob: -6.504279136657715
    4. ' '-'' → logprob: -7.254279136657715
    5. ' '' → logprob: -9.004279136657715
    6. '-' → logprob: -11.629279136657715
    7. ''*' → logprob: -13.004279136657715
    8. ''o' → logprob: -13.254279136657715
    9. ''O' → logprob: -13.379279136657715
    10. ' ' → logprob: -13.504279136657715

Token 92: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.162078395485878
    2. ''-' → logprob: -1.9120783805847168
    3. '0' → logprob: -6.412078380584717
    4. '-'' → logprob: -9.412078857421875
    5. ''' → logprob: -9.912078857421875
    6. ''.' → logprob: -10.162078857421875
    7. ' '-'' → logprob: -10.662078857421875
    8. '.' → logprob: -11.287078857421875
    9. '*' → logprob: -14.037078857421875
    10. '-
' → logprob: -14.287078857421875

Token 93: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03661651909351349
    2. '')' → logprob: -3.786616563796997
    3. '   ' → logprob: -4.661616325378418
    4. ''
' → logprob: -6.661616325378418
    5. '<|end|>' → logprob: -6.786616325378418
    6. '+' → logprob: -7.036616325378418
    7. '''' → logprob: -9.286616325378418
    8. 'elif' → logprob: -9.286616325378418
    9. 'else' → logprob: -9.411616325378418
    10. '')
' → logprob: -10.036616325378418

Token 94: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007021184079349041
    2. 'elif' → logprob: -5.382020950317383
    3. ' elif' → logprob: -7.007020950317383
    4. 'else' → logprob: -7.007020950317383
    5. ' else' → logprob: -7.507020950317383
    6. '	elif' → logprob: -10.507020950317383
    7. '```' → logprob: -11.757020950317383
    8. '	else' → logprob: -13.382020950317383
    9. '<|end|>' → logprob: -15.007020950317383
    10. '   ' → logprob: -15.382020950317383

Token 95: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8930719494819641
    2. 'elif' → logprob: -1.1430718898773193
    3. 'else' (adapté à ' else') → logprob: -1.3930718898773193
    4. ' else' → logprob: -4.018072128295898
    5. ' elif' → logprob: -5.268072128295898
    6. '	elif' → logprob: -8.518072128295898
    7. '	else' → logprob: -9.893072128295898
    8. '```' → logprob: -9.893072128295898
    9. 'elseif' → logprob: -13.018072128295898
    10. '   ' → logprob: -13.268072128295898

Token 96: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5988207459449768
    2. ':' → logprob: -1.223820686340332
    3. ''' → logprob: -2.723820686340332
    4. ' '' → logprob: -3.098820686340332
    5. ' '+' → logprob: -4.598820686340332
    6. ' '-' → logprob: -5.098820686340332
    7. ' :' → logprob: -5.348820686340332
    8. ''-' → logprob: -5.348820686340332
    9. '       ' → logprob: -5.723820686340332
    10. '    ' → logprob: -5.973820686340332

Token 97: '       ' (ID: 309)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.33926326036453247
    2. '   ' → logprob: -2.0892632007598877
    3. 'ans' → logprob: -2.0892632007598877
    4. ' ans' → logprob: -3.5892632007598877
    5. ' '-'' → logprob: -5.089263439178467
    6. ' '-' → logprob: -5.964263439178467
    7. ''' → logprob: -6.214263439178467
    8. '	ans' → logprob: -7.589263439178467
    9. ' ' → logprob: -8.339262962341309
    10. '    ' → logprob: -8.589262962341309

Token 98: ' ans' (ID: 3345)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.01454387977719307
    2. 'ans' (adapté à ' ans') → logprob: -4.8895440101623535
    3. ' '-'' → logprob: -5.0145440101623535
    4. ' ans' → logprob: -9.514543533325195
    5. ''' → logprob: -9.639543533325195
    6. '-' → logprob: -10.389543533325195
    7. '   ' → logprob: -10.389543533325195
    8. '  ' → logprob: -10.889543533325195
    9. ' ' → logprob: -11.014543533325195
    10. ''''' → logprob: -12.139543533325195

Token 99: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.016607847064733505
    2. ' +=' → logprob: -4.141607761383057
    3. '+' → logprob: -7.516607761383057
    4. '=' → logprob: -11.266608238220215
    5. '+='' → logprob: -11.266608238220215
    6. ' +' → logprob: -13.766608238220215
    7. ']+=' → logprob: -14.266608238220215
    8. '!=' → logprob: -14.391608238220215
    9. '+="' → logprob: -14.766608238220215
    10. '==' → logprob: -14.766608238220215

Token 100: ' '-' (ID: 17489)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.00030436101951636374
    2. ' '-'' → logprob: -8.375304222106934
    3. ''' → logprob: -9.625304222106934
    4. '-' → logprob: -12.500304222106934
    5. ''''' → logprob: -13.375304222106934
    6. '"-' → logprob: -14.000304222106934
    7. ''#' → logprob: -14.500304222106934
    8. '('-' → logprob: -14.750304222106934
    9. '’-' → logprob: -15.500304222106934
    10. ' ' → logprob: -16.75030517578125

Token 101: ''

' (ID: 7497)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0002124806633219123
    2. ''
' → logprob: -8.625212669372559
    3. '+'' → logprob: -11.500212669372559
    4. '+' → logprob: -11.750212669372559
    5. '')' → logprob: -12.000212669372559
    6. ''''' → logprob: -12.250212669372559
    7. '''' → logprob: -13.500212669372559
    8. ''+' → logprob: -13.625212669372559
    9. ''

' → logprob: -15.125212669372559
    10. '<|end|>' → logprob: -15.250212669372559

Token 102: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -15.75
    3. '```' → logprob: -18.125
    4. 'return' → logprob: -18.625
    5. '`' → logprob: -20.375
    6. 'if' → logprob: -21.0
    7. '#print' → logprob: -21.25
    8. 'pr' → logprob: -21.5
    9. 'for' → logprob: -21.625
    10. '
' → logprob: -22.0

Token 103: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6943397521972656
    2. '(ans' → logprob: -0.6943397521972656
    3. '('' → logprob: -6.819339752197266
    4. '("("' → logprob: -9.319339752197266
    5. '(`' → logprob: -12.819339752197266
    6. '(
' → logprob: -13.319339752197266
    7. '(answer' → logprob: -13.444339752197266
    8. '(f' → logprob: -14.319339752197266
    9. '(a' → logprob: -14.569339752197266
    10. '()' → logprob: -14.569339752197266

Token 104: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -16.625
    3. ')`' → logprob: -17.375
    4. '))' → logprob: -18.75
    5. '')' → logprob: -20.0
    6. ')
' → logprob: -20.125
    7. '`)' → logprob: -20.5
    8. ')}' → logprob: -21.0
    9. ')#' → logprob: -22.25
    10. '）' → logprob: -22.25


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 102
Tokens correctement prédits (1ère position, stricte): 40
Tokens correctement prédits (1ère position, avec adaptation): 43
Tokens correctement prédits (top 10): 81
Précision stricte (1ère position): 39.22%
Précision adaptée (1ère position): 42.16%
Précision (top 10): 79.41%
================================================================================
