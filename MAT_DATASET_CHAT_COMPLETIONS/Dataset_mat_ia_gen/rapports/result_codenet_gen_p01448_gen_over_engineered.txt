================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:24
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class RangeConstraint:
    def __init__(self, min_people: int, max_people: int):
        self.min_people = min_people
        self.max_people = max_people

    def is_satisfied(self, total_people: int) -> bool:
        return self.min_people <= total_people <= self.max_people


class Friend:
    def __init__(self, constraint: RangeConstraint):
        self.constraint = constraint

    def is_happy(self, total_people: int) -> bool:
        return self.constraint.is_satisfied(total_people)


class FriendGroup:
    def __init__(self):
        self.friends = []

    def add_friend(self, friend: Friend):
        self.friends.append(friend)

    def max_invite(self) -> int:
        # total_people = invited friends + 1 (myself)
        N = len(self.friends)
        
        # We want to select k friends s.t. for all selected i:
        # a_i <= k+1 <= b_i
        # == a_i <= k+1 and k+1 <= b_i
        # Because all selected friends must be happy,
        # k+1 must be at least max of a_i among chosen friends, and at most min of b_i among chosen friends.

        # Approach: since we want max k,
        # we test k from N down to 0, for each k check if there are at least k friends with a_i <= k+1 <= b_i.

        # To optimise:
        # For each friend, can they be happy with total = k+1?
        # So for each k, count friends with a_i <= k+1 <= b_i

        # Since N can be 1e5, naive O(N^2) would be too slow.

        # Optimization:
        # Let's sort friends by a_i ascending.

        # For each k from N down to 0:
        # We fix total = k+1
        # count how many friends satisfy a_i <= total <= b_i

        # To speed up, we can:
        # 1) For each friend, record (a_i, b_i)
        # 2) We want to quickly find counts of friends with a_i <= total and b_i >= total.

        # We can preprocess:
        # - Sort friends by a_i ascending
        # - Prepare a binary indexed tree or segment tree on b_i to count how many friends with b_i >= total among those with a_i <= total
        # But b_i max is up to 100001, we can manage that.

        # Alternative simplification:
        # Because a_i <= b_i
        # For each total = k+1, we want to know how many friends satisfy a_i <= total <= b_i.

        # So, both conditions must hold.

        # Since we check multiple totals from large to small, we can build index for a_i and b_i.

        # Another approach: For all friends, create pairs (a_i, b_i).
        # For a fixed total = t: count friends with a_i <= t <= b_i

        # To optimize, for each friend, a_i and b_i defines an interval [a_i, b_i].
        # Friend is okay if total is in that interval.

        # Sort intervals by a_i ascending
        # Then for total t, friends with a_i <= t is prefix of list

        # Then among prefix, count how many have b_i >= t.

        # So, we can:
        # Sort friends by a_i ascending
        # For b_i, we can keep a Fenwick tree or Balanced BST tracking counts of b_i

        # However, even simpler approach:

        self.friends.sort(key=lambda f: f.constraint.min_people)
        a_list = [f.constraint.min_people for f in self.friends]
        b_list = [f.constraint.max_people for f in self.friends]

        # We'll do a binary search on k = number of friends invited
        # For each k we check if possible

        def can_invite(k: int) -> bool:
            t = k + 1
            # Need at least k friends with a_i <= t <= b_i

            # find how many have a_i <= t
            # Using bisect_right because a_i <= t
            import bisect
            idx = bisect.bisect_right(a_list, t)
            # friends from 0 to idx-1 have a_i <= t

            # Among these, count how many have b_i >= t
            count = 0
            for i in range(idx):
                if b_list[i] >= t:
                    count +=1
            return count >= k

        # Binary search k in [0, N]
        low, high = 0, len(self.friends)
        result = 0
        while low <= high:
            mid = (low + high) // 2
            if can_invite(mid):
                result = mid
                low = mid +1
            else:
                high = mid -1
        return result


class InputParser:
    def __init__(self, input_lines):
        self.lines = input_lines
        self.index = 0

    def readline(self):
        line = self.lines[self.index]
        self.index += 1
        return line


class ProblemBSolver:
    def __init__(self, input_lines):
        self.parser = InputParser(input_lines)
        self.group = FriendGroup()

    def parse(self):
        N = int(self.parser.readline())
        for _ in range(N):
            a_str = self.parser.readline()
            a, b = map(int, a_str.split())
            constraint = RangeConstraint(a, b)
            friend = Friend(constraint)
            self.group.add_friend(friend)

    def solve(self):
        return self.group.max_invite()


def main():
    import sys
    lines = sys.stdin.read().strip().split('\n')
    solver = ProblemBSolver(lines)
    solver.parse()
    print(solver.solve())


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Range' (ID: 26714)
  → Token d'amorce (pas de prédiction)

Token 2: 'Constraint' (ID: 23133)
  → Token d'amorce (pas de prédiction)

Token 3: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4385843873023987
    2. ':' → logprob: -1.063584327697754
    3. '{' → logprob: -4.688584327697754
    4. '[' → logprob: -8.313584327697754
    5. '(:' → logprob: -9.063584327697754
    6. '.' → logprob: -9.188584327697754
    7. ' :' → logprob: -9.688584327697754
    8. '```' → logprob: -10.688584327697754
    9. ' (' → logprob: -10.813584327697754
    10. '_' → logprob: -11.563584327697754

Token 4: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31702300906181335
    2. '(' → logprob: -1.3170230388641357
    3. '```' → logprob: -5.942022800445557
    4. '   ' → logprob: -7.692022800445557
    5. ':
' → logprob: -8.192023277282715
    6. '(
' → logprob: -9.317023277282715
    7. '(:' → logprob: -9.692023277282715
    8. ''' → logprob: -9.942023277282715
    9. '.' → logprob: -10.067023277282715
    10. '[' → logprob: -10.442023277282715

Token 5: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47396576404571533
    2. '```' → logprob: -2.098965644836426
    3. ' ' → logprob: -2.348965644836426
    4. '    ' → logprob: -2.848965644836426
    5. '(' → logprob: -3.223965644836426
    6. ' def' → logprob: -4.848965644836426
    7. ''' → logprob: -4.848965644836426
    8. '[' → logprob: -4.973965644836426
    9. '_' → logprob: -4.973965644836426
    10. '`' → logprob: -5.098965644836426

Token 6: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2163928747177124
    2. ' __' → logprob: -1.9663928747177124
    3. '__' → logprob: -3.216392993927002
    4. ' ' → logprob: -4.466392993927002
    5. ' ​' → logprob: -7.466392993927002
    6. '_' → logprob: -7.591392993927002
    7. '  ' → logprob: -7.841392993927002
    8. ' ‌' → logprob: -7.966392993927002
    9. ' init' → logprob: -8.591392517089844
    10. ' ```' → logprob: -8.716392517089844

Token 7: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'ini' → logprob: -15.625
    3. '_init' → logprob: -17.125
    4. ' init' → logprob: -17.25
    5. 'in' → logprob: -18.375
    6. 'inite' → logprob: -19.875
    7. 'int' → logprob: -20.0
    8. '	init' → logprob: -20.5
    9. 'call' → logprob: -20.75
    10. 'inti' → logprob: -21.125

Token 8: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.17021729052066803
    2. '__' → logprob: -2.295217275619507
    3. '(' → logprob: -3.045217275619507
    4. '__(
' → logprob: -5.045217514038086
    5. '__((' → logprob: -7.295217514038086
    6. '_' → logprob: -8.045217514038086
    7. '(self' → logprob: -8.670217514038086
    8. ' (' → logprob: -9.170217514038086
    9. '__('' → logprob: -9.170217514038086
    10. '__(*' → logprob: -9.170217514038086

Token 9: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006724249105900526
    2. ' self' → logprob: -5.0067243576049805
    3. '(self' → logprob: -11.75672435760498
    4. ')' → logprob: -15.13172435760498
    5. ' ' → logprob: -15.88172435760498
    6. '*self' → logprob: -16.256723403930664
    7. 'value' → logprob: -16.506723403930664
    8. '=self' → logprob: -16.756723403930664
    9. ',self' → logprob: -16.881723403930664
    10. '	self' → logprob: -16.881723403930664

Token 10: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.417631596326828
    2. 'self' → logprob: -1.6676316261291504
    3. ')' → logprob: -3.0426316261291504
    4. ' self' → logprob: -3.2926316261291504
    5. '(self' → logprob: -3.6676316261291504
    6. ' ,' → logprob: -3.9176316261291504
    7. '<|end|>' → logprob: -4.54263162612915
    8. ' )' → logprob: -5.91763162612915
    9. ' (' → logprob: -5.91763162612915
    10. ' ' → logprob: -6.66763162612915

Token 11: ' min' (ID: 1349)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.16269202530384064
    2. 'self' → logprob: -2.037692070007324
    3. ' min' → logprob: -4.787692070007324
    4. ' start' → logprob: -5.162692070007324
    5. ' lower' → logprob: -5.662692070007324
    6. ' value' → logprob: -6.662692070007324
    7. 'min' → logprob: -8.162692070007324
    8. 'lower' → logprob: -8.412692070007324
    9. 'value' → logprob: -8.662692070007324
    10. 'start' → logprob: -9.037692070007324

Token 12: '_people' (ID: 157787)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5124635696411133
    2. '_value' → logprob: -1.0124635696411133
    3. '_val' → logprob: -3.3874635696411133
    4. '_,' → logprob: -5.887463569641113
    5. ' _' → logprob: -8.262463569641113
    6. ',' → logprob: -8.387463569641113
    7. '_)' → logprob: -8.887463569641113
    8. '_range' → logprob: -9.012463569641113
    9. 'imum' → logprob: -9.387463569641113
    10. '_=' → logprob: -9.387463569641113

Token 13: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013895616866648197
    2. '=' → logprob: -4.513895511627197
    3. ':' → logprob: -6.388895511627197
    4. ' ,' → logprob: -7.138895511627197
    5. '):' → logprob: -8.763895988464355
    6. '=None' → logprob: -9.138895988464355
    7. ':int' → logprob: -10.263895988464355
    8. '   ' → logprob: -10.763895988464355
    9. ')' → logprob: -11.638895988464355
    10. '_people' → logprob: -11.763895988464355

Token 14: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.28552839159965515
    2. 'int' → logprob: -1.4105284214019775
    3. ':int' → logprob: -6.035528182983398
    4. '=int' → logprob: -6.535528182983398
    5. ' ' → logprob: -8.535528182983398
    6. ' ,' → logprob: -9.660528182983398
    7. ',' → logprob: -10.160528182983398
    8. '=' → logprob: -10.285528182983398
    9. ',int' → logprob: -10.410528182983398
    10. ' ' → logprob: -10.910528182983398

Token 15: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019524219678714871
    2. ' ,' → logprob: -6.251952648162842
    3. '=' → logprob: -11.126952171325684
    4. ')' → logprob: -13.001952171325684
    5. '   ' → logprob: -13.001952171325684
    6. '‌,' → logprob: -14.001952171325684
    7. ',int' → logprob: -14.001952171325684
    8. '<|end|>' → logprob: -14.251952171325684
    9. '):' → logprob: -14.876952171325684
    10. ',
' → logprob: -14.876952171325684

Token 16: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.026337342336773872
    2. 'max' → logprob: -3.6513373851776123
    3. ' ' → logprob: -10.526337623596191
    4. ' people' → logprob: -12.526337623596191
    5. '	max' → logprob: -13.401337623596191
    6. ' maximum' → logprob: -13.901337623596191
    7. '    ' → logprob: -14.026337623596191
    8. ' ' → logprob: -14.276337623596191
    9. ',max' → logprob: -14.401337623596191
    10. ' min' → logprob: -14.776337623596191

Token 17: '_people' (ID: 157787)
  Prédit: '_people'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_people' → logprob: -0.10233629494905472
    2. '_' → logprob: -2.3523364067077637
    3. ' _' → logprob: -7.102336406707764
    4. '_p' → logprob: -8.477335929870605
    5. '_person' → logprob: -8.477335929870605
    6. '```' → logprob: -8.602335929870605
    7. '_users' → logprob: -8.727335929870605
    8. ')_' → logprob: -9.102335929870605
    9. '_pe' → logprob: -9.852335929870605
    10. ')' → logprob: -9.977335929870605

Token 18: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05579036846756935
    2. '):' → logprob: -2.930790424346924
    3. ')' → logprob: -7.180790424346924
    4. '=' → logprob: -10.055789947509766
    5. ':int' → logprob: -10.055789947509766
    6. ' :' → logprob: -11.305789947509766
    7. '   ' → logprob: -11.305789947509766
    8. '):
' → logprob: -11.430789947509766
    9. ',' → logprob: -11.555789947509766
    10. ' ):' → logprob: -11.930789947509766

Token 19: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.06994509696960449
    2. 'int' → logprob: -2.6949450969696045
    3. ':int' → logprob: -12.819945335388184
    4. ' ' → logprob: -13.444945335388184
    5. ')' → logprob: -13.694945335388184
    6. '=int' → logprob: -13.694945335388184
    7. '(int' → logprob: -14.319945335388184
    8. ' Optional' → logprob: -14.819945335388184
    9. '[int' → logprob: -14.819945335388184
    10. '	int' → logprob: -14.819945335388184

Token 20: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00520031712949276
    2. ',' → logprob: -5.380200386047363
    3. ')' → logprob: -8.255200386047363
    4. '):
' → logprob: -8.630200386047363
    5. '   ' → logprob: -9.380200386047363
    6. ':' → logprob: -10.130200386047363
    7. '       ' → logprob: -12.130200386047363
    8. '```' → logprob: -12.380200386047363
    9. '):
' → logprob: -13.755200386047363
    10. ''):' → logprob: -13.755200386047363

Token 21: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031135229393839836
    2. '   ' → logprob: -4.156135082244873
    3. '    ' → logprob: -4.906135082244873
    4. '<|end|>' → logprob: -5.281135082244873
    5. ')' → logprob: -7.531135082244873
    6. ' ' → logprob: -7.781135082244873
    7. '        ' → logprob: -7.906135082244873
    8. ':' → logprob: -8.031135559082031
    9. '     ' → logprob: -8.906135559082031
    10. 'self' → logprob: -9.281135559082031

Token 22: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.6238991022109985
    2. '       ' → logprob: -0.8738991022109985
    3. ' self' → logprob: -3.123898983001709
    4. '```' → logprob: -6.623898983001709
    5. '<|end|>' → logprob: -7.623898983001709
    6. ' ' → logprob: -7.748898983001709
    7. '           ' → logprob: -8.998899459838867
    8. '   ' → logprob: -9.248899459838867
    9. '_self' → logprob: -9.623899459838867
    10. ' ' → logprob: -9.873899459838867

Token 23: '.min' (ID: 8649)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0019266135059297085
    2. '.min' → logprob: -6.376926422119141
    3. ' .' → logprob: -8.87692642211914
    4. '.minimum' → logprob: -10.87692642211914
    5. '.constraint' → logprob: -11.62692642211914
    6. '   ' → logprob: -12.50192642211914
    7. '.max' → logprob: -12.50192642211914
    8. '.has' → logprob: -12.62692642211914
    9. '.is' → logprob: -12.87692642211914
    10. '.user' → logprob: -13.00192642211914

Token 24: '_people' (ID: 157787)
  Prédit: '_people'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_people' → logprob: -0.12825514376163483
    2. '_' → logprob: -2.1282551288604736
    3. ' _' → logprob: -7.128255367279053
    4. '_person' → logprob: -8.378254890441895
    5. '_users' → logprob: -9.628254890441895
    6. '```' → logprob: -9.878254890441895
    7. '_possible' → logprob: -10.628254890441895
    8. '_pe' → logprob: -11.253254890441895
    9. ')' → logprob: -11.378254890441895
    10. '_you' → logprob: -11.378254890441895

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4699614644050598
    2. '=' → logprob: -1.094961404800415
    3. ' <=' → logprob: -3.719961404800415
    4. ' >=' → logprob: -4.969961643218994
    5. '<|end|>' → logprob: -5.594961643218994
    6. ',' → logprob: -6.844961643218994
    7. '_' → logprob: -7.094961643218994
    8. '       ' → logprob: -7.469961643218994
    9. ' ==' → logprob: -7.719961643218994
    10. ' ' → logprob: -7.719961643218994

Token 26: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.011048170737922192
    2. 'min' → logprob: -4.511048316955566
    3. '	min' → logprob: -16.01104736328125
    4. ' ' → logprob: -16.26104736328125
    5. '_min' → logprob: -16.63604736328125
    6. ' max' → logprob: -17.51104736328125
    7. ' ' → logprob: -17.63604736328125
    8. ' minimum' → logprob: -18.51104736328125
    9. '    ' → logprob: -19.13604736328125
    10. ' minlength' → logprob: -19.13604736328125

Token 27: '_people' (ID: 157787)
  Prédit: '_people'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_people' → logprob: -0.6331191062927246
    2. '_' → logprob: -0.7581191062927246
    3. '_person' → logprob: -8.883119583129883
    4. ' _' → logprob: -8.883119583129883
    5. '_p' → logprob: -9.383119583129883
    6. '_pe' → logprob: -10.508119583129883
    7. '_)' → logprob: -10.883119583129883
    8. '_
' → logprob: -11.008119583129883
    9. '_places' → logprob: -11.133119583129883
    10. ')' → logprob: -11.258119583129883

Token 28: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009804847650229931
    2. '        
' → logprob: -5.634804725646973
    3. '
' → logprob: -6.884804725646973
    4. '    
' → logprob: -6.884804725646973
    5. '```' → logprob: -6.884804725646973
    6. '<|end|>' → logprob: -7.009804725646973
    7. '   ' → logprob: -7.759804725646973
    8. ',' → logprob: -7.759804725646973
    9. '`' → logprob: -8.134804725646973
    10. '\' → logprob: -8.634804725646973

Token 29: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.052339036017656326
    2. '<|end|>' → logprob: -3.4273390769958496
    3. '
' → logprob: -4.67733907699585
    4. '        
' → logprob: -5.67733907699585
    5. '```' → logprob: -6.42733907699585
    6. ' 
' → logprob: -6.92733907699585
    7. '   ' → logprob: -7.05233907699585
    8. '    
' → logprob: -7.17733907699585
    9. '\' → logprob: -8.302338600158691
    10. ',' → logprob: -8.552338600158691

Token 30: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015662844525650144
    2. 'self' (adapté à ' self') → logprob: -6.751566410064697
    3. '
' → logprob: -8.126565933227539
    4. ' self' → logprob: -9.751565933227539
    5. '        
' → logprob: -11.126565933227539
    6. '```' → logprob: -11.501565933227539
    7. '   ' → logprob: -12.501565933227539
    8. '      ' → logprob: -12.751565933227539
    9. ',' → logprob: -13.251565933227539
    10. '<|end|>' → logprob: -13.251565933227539

Token 31: '.max' (ID: 11883)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.47554531693458557
    2. '.max' → logprob: -0.9755452871322632
    3. '.min' → logprob: -6.600545406341553
    4. 'max' → logprob: -9.975544929504395
    5. ' .' → logprob: -10.225544929504395
    6. '._' → logprob: -11.850544929504395
    7. '​.' → logprob: -13.725544929504395
    8. '_max' → logprob: -13.850544929504395
    9. '.period' → logprob: -13.975544929504395
    10. '.user' → logprob: -13.975544929504395

Token 32: '_people' (ID: 157787)
  Prédit: '_people'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_people' → logprob: -0.0008193961111828685
    2. '_' → logprob: -7.125819206237793
    3. ' _' → logprob: -12.375819206237793
    4. '_person' → logprob: -12.625819206237793
    5. '_pe' → logprob: -12.875819206237793
    6. '_users' → logprob: -13.500819206237793
    7. 'People' → logprob: -14.000819206237793
    8. '_p' → logprob: -15.000819206237793
    9. '```' → logprob: -15.125819206237793
    10. '._' → logprob: -15.375819206237793

Token 33: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07969930022954941
    2. ' =' → logprob: -2.5796992778778076
    3. '_' → logprob: -7.329699516296387
    4. '_people' → logprob: -10.204699516296387
    5. '<|end|>' → logprob: -10.579699516296387
    6. ')' → logprob: -10.954699516296387
    7. ' _' → logprob: -11.204699516296387
    8. '   ' → logprob: -11.454699516296387
    9. '=_' → logprob: -11.579699516296387
    10. '.' → logprob: -11.579699516296387

Token 34: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.3868773579597473
    2. 'max' → logprob: -1.1368772983551025
    3. ' ' → logprob: -13.136877059936523
    4. '(max' → logprob: -13.511877059936523
    5. '	max' → logprob: -13.636877059936523
    6. '_max' → logprob: -14.011877059936523
    7. '<|end|>' → logprob: -14.761877059936523
    8. 'maxlength' → logprob: -16.011877059936523
    9. ' maxlength' → logprob: -16.136877059936523
    10. '[max' → logprob: -16.136877059936523

Token 35: '_people' (ID: 157787)
  Prédit: '_people'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_people' → logprob: -0.012870182283222675
    2. '_' → logprob: -4.3878703117370605
    3. '_e' → logprob: -8.887869834899902
    4. 'e' → logprob: -9.387869834899902
    5. '_pe' → logprob: -9.387869834899902
    6. '_person' → logprob: -11.262869834899902
    7. ' _' → logprob: -11.387869834899902
    8. '```' → logprob: -12.137869834899902
    9. 'People' → logprob: -12.512869834899902
    10. '_users' → logprob: -12.637869834899902

Token 36: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13924652338027954
    2. '   ' → logprob: -2.2642464637756348
    3. '    
' → logprob: -4.014246463775635
    4. '```' → logprob: -6.389246463775635
    5. '<|end|>' → logprob: -6.514246463775635
    6. '\n' → logprob: -6.639246463775635
    7. ' 
' → logprob: -6.764246463775635
    8. '  
' → logprob: -7.389246463775635
    9. 'def' → logprob: -8.389246940612793
    10. '' → logprob: -8.514246940612793

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11560051888227463
    2. '
' → logprob: -2.4906005859375
    3. '    
' → logprob: -3.8656005859375
    4. '```' → logprob: -6.4906005859375
    5. ' 
' → logprob: -6.9906005859375
    6. '  
' → logprob: -7.3656005859375
    7. ' ' → logprob: -7.6156005859375
    8. 'def' → logprob: -7.9906005859375
    9. '\n' → logprob: -8.1156005859375
    10. ' def' → logprob: -8.4906005859375

Token 38: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6067817211151123
    2. 'def' (adapté à ' def') → logprob: -0.9817817211151123
    3. ' def' → logprob: -2.7317817211151123
    4. 'd' → logprob: -5.231781959533691
    5. '    
' → logprob: -5.481781959533691
    6. '
' → logprob: -6.231781959533691
    7. '```' → logprob: -6.606781959533691
    8. ' 
' → logprob: -6.731781959533691
    9. ' ' → logprob: -7.481781959533691
    10. '    ' → logprob: -8.856781959533691

Token 39: ' is' (ID: 382)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6777729392051697
    2. ' is' → logprob: -1.5527729988098145
    3. ' space' → logprob: -1.8027729988098145
    4. ' validate' → logprob: -2.8027729988098145
    5. ' check' → logprob: -3.0527729988098145
    6. 'space' → logprob: -7.0527729988098145
    7. ' def' → logprob: -7.0527729988098145
    8. ' a' → logprob: -7.0527729988098145
    9. ' constraints' → logprob: -7.1777729988098145
    10. ' constraint' → logprob: -7.8027729988098145

Token 40: '_s' (ID: 1278)
  Prédit: '_valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -0.7172656059265137
    2. '_' → logprob: -0.8422656059265137
    3. '_s' → logprob: -2.7172656059265137
    4. ' _' → logprob: -5.092265605926514
    5. '_inside' → logprob: -5.967265605926514
    6. '_allowed' → logprob: -6.217265605926514
    7. '_in' → logprob: -6.217265605926514
    8. '_a' → logprob: -7.467265605926514
    9. '_available' → logprob: -7.967265605926514
    10. '_app' → logprob: -8.092266082763672

Token 41: 'atisfied' (ID: 65362)
  Prédit: 'atisfied'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atisfied' → logprob: -0.0006619225605390966
    2. 'atis' → logprob: -8.625661849975586
    3. 'atisfactory' → logprob: -8.750661849975586
    4. 'uitable' → logprob: -8.875661849975586
    5. 'at' → logprob: -9.500661849975586
    6. 'atisf' → logprob: -9.875661849975586
    7. 'upported' → logprob: -10.625661849975586
    8. 'ufficient' → logprob: -11.375661849975586
    9. '_' → logprob: -12.125661849975586
    10. '_at' → logprob: -12.250661849975586

Token 42: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008872774429619312
    2. '(self' → logprob: -4.883872985839844
    3. '_by' → logprob: -7.133872985839844
    4. ' (' → logprob: -8.758872985839844
    5. '_' → logprob: -8.883872985839844
    6. 'by' → logprob: -9.883872985839844
    7. ' by' → logprob: -10.133872985839844
    8. '(
' → logprob: -10.383872985839844
    9. '(by' → logprob: -11.508872985839844
    10. ' ' → logprob: -11.883872985839844

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009696593508124352
    2. ' ,' → logprob: -4.7596964836120605
    3. ')' → logprob: -7.6346964836120605
    4. '<|end|>' → logprob: -8.134696960449219
    5. 'self' → logprob: -9.259696960449219
    6. ' by' → logprob: -10.509696960449219
    7. ',self' → logprob: -10.759696960449219
    8. ',value' → logprob: -10.884696960449219
    9. '_by' → logprob: -11.384696960449219
    10. ',p' → logprob: -11.384696960449219

Token 44: ' total' (ID: 3609)
  Prédit: ' people'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' people' → logprob: -0.3115660846233368
    2. ' number' → logprob: -2.061566114425659
    3. ' num' → logprob: -2.686566114425659
    4. ' count' → logprob: -3.686566114425659
    5. ' person' → logprob: -4.18656587600708
    6. ' self' → logprob: -4.81156587600708
    7. ' value' → logprob: -5.31156587600708
    8. 'people' → logprob: -5.31156587600708
    9. ' group' → logprob: -5.81156587600708
    10. ' persons' → logprob: -5.93656587600708

Token 45: '_people' (ID: 157787)
  Prédit: '_people'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_people' → logprob: -0.05593952164053917
    2. '_' → logprob: -3.1809394359588623
    3. ')' → logprob: -5.180939674377441
    4. '_gu' → logprob: -6.680939674377441
    5. '_person' → logprob: -7.055939674377441
    6. '_number' → logprob: -7.180939674377441
    7. '_users' → logprob: -7.430939674377441
    8. ' )' → logprob: -7.680939674377441
    9. '_guest' → logprob: -7.680939674377441
    10. '_amount' → logprob: -7.805939674377441

Token 46: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03584013879299164
    2. ',' → logprob: -4.035840034484863
    3. ')' → logprob: -4.785840034484863
    4. ' ):' → logprob: -4.910840034484863
    5. ':' → logprob: -7.035840034484863
    6. ' ,' → logprob: -8.285840034484863
    7. ' )' → logprob: -8.410840034484863
    8. ' ' → logprob: -9.035840034484863
    9. ' >=' → logprob: -9.535840034484863
    10. '   ' → logprob: -9.785840034484863

Token 47: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.14825439453125
    2. 'int' → logprob: -2.02325439453125
    3. ')' → logprob: -5.39825439453125
    4. ' )' → logprob: -7.14825439453125
    5. ':int' → logprob: -9.27325439453125
    6. '=int' → logprob: -9.27325439453125
    7. ' ' → logprob: -11.02325439453125
    8. '[int' → logprob: -11.39825439453125
    9. ' ' → logprob: -12.02325439453125
    10. '(int' → logprob: -12.14825439453125

Token 48: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14284732937812805
    2. ')' → logprob: -2.0178472995758057
    3. '):
' → logprob: -9.392847061157227
    4. ':' → logprob: -10.267847061157227
    5. ' ):' → logprob: -10.517847061157227
    6. ')->' → logprob: -11.642847061157227
    7. '   ' → logprob: -11.892847061157227
    8. ')>' → logprob: -12.392847061157227
    9. ',' → logprob: -12.892847061157227
    10. ' )' → logprob: -13.517847061157227

Token 49: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0033788802102208138
    2. '):' → logprob: -6.378378868103027
    3. ' :' → logprob: -6.753378868103027
    4. ':return' → logprob: -8.128378868103027
    5. '():' → logprob: -9.003378868103027
    6. '>:' → logprob: -10.628378868103027
    7. ':**' → logprob: -11.003378868103027
    8. ' ->' → logprob: -11.503378868103027
    9. '<|end|>' → logprob: -11.753378868103027
    10. '   ' → logprob: -11.878378868103027

Token 50: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.005076379980891943
    2. ' ' → logprob: -5.8800764083862305
    3. 'bool' → logprob: -6.1300764083862305
    4. ' ' → logprob: -9.63007640838623
    5. '  ' → logprob: -11.63007640838623
    6. '	bool' → logprob: -12.13007640838623
    7. '<bool' → logprob: -12.63007640838623
    8. ' True' → logprob: -12.88007640838623
    9. '   ' → logprob: -14.38007640838623
    10. '"' → logprob: -14.50507640838623

Token 51: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008520359406247735
    2. '):' → logprob: -7.375852108001709
    3. '():' → logprob: -8.87585163116455
    4. ':**' → logprob: -9.87585163116455
    5. ':return' → logprob: -10.75085163116455
    6. ' :' → logprob: -12.12585163116455
    7. '>:' → logprob: -12.87585163116455
    8. '       ' → logprob: -14.62585163116455
    9. ':def' → logprob: -14.62585163116455
    10. ':
' → logprob: -14.75085163116455

Token 52: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014123775763437152
    2. '<|end|>' → logprob: -7.376412391662598
    3. '   ' → logprob: -8.001412391662598
    4. '\' → logprob: -9.126412391662598
    5. '    ' → logprob: -9.626412391662598
    6. '\n' → logprob: -9.751412391662598
    7. ' ' → logprob: -9.876412391662598
    8. '      ' → logprob: -10.626412391662598
    9. ' return' → logprob: -10.876412391662598
    10. ' 
' → logprob: -10.876412391662598

Token 53: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0500161275267601
    2. ' return' → logprob: -3.425016164779663
    3. 'return' (adapté à ' return') → logprob: -4.175015926361084
    4. '   ' → logprob: -8.550016403198242
    5. '        ' → logprob: -9.175016403198242
    6. '<|end|>' → logprob: -9.425016403198242
    7. ' ' → logprob: -9.550016403198242
    8. '    ' → logprob: -9.550016403198242
    9. '      ' → logprob: -9.675016403198242
    10. ' ' → logprob: -10.175016403198242

Token 54: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.002186426194384694
    2. 'self' → logprob: -6.127186298370361
    3. ' ' → logprob: -14.37718677520752
    4. ' (' → logprob: -15.50218677520752
    5. ' ' → logprob: -15.50218677520752
    6. '(self' → logprob: -16.002185821533203
    7. '	self' → logprob: -16.627185821533203
    8. '   ' → logprob: -17.752185821533203
    9. ' isinstance' → logprob: -18.627185821533203
    10. ' space' → logprob: -18.877185821533203

Token 55: '.min' (ID: 8649)
  Prédit: '.min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.min' → logprob: -0.10087301582098007
    2. '.' → logprob: -2.3508729934692383
    3. '.max' → logprob: -7.475872993469238
    4. ' .' → logprob: -9.475872993469238
    5. 'min' → logprob: -11.225872993469238
    6. '.minimum' → logprob: -13.100872993469238
    7. '.total' → logprob: -13.350872993469238
    8. ' ' → logprob: -13.600872993469238
    9. ' min' → logprob: -13.725872993469238
    10. '.is' → logprob: -13.725872993469238

Token 56: '_people' (ID: 157787)
  Prédit: '_people'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_people' → logprob: -0.0019784762989729643
    2. '_' → logprob: -6.251978397369385
    3. '._' → logprob: -11.126978874206543
    4. ' _' → logprob: -11.126978874206543
    5. '_pe' → logprob: -11.376978874206543
    6. '_person' → logprob: -13.001978874206543
    7. '.' → logprob: -13.126978874206543
    8. '_users' → logprob: -13.876978874206543
    9. '_you' → logprob: -14.751978874206543
    10. '_possible' → logprob: -15.001978874206543

Token 57: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0003372502396814525
    2. '<=' → logprob: -8.000337600708008
    3. '<|end|>' → logprob: -14.250337600708008
    4. ' ' → logprob: -14.375337600708008
    5. ' <=",' → logprob: -15.875337600708008
    6. ' ≤' → logprob: -15.875337600708008
    7. ' ' → logprob: -16.250337600708008
    8. ')<=' → logprob: -16.875337600708008
    9. ' >=' → logprob: -17.000337600708008
    10. ' <' → logprob: -17.375337600708008

Token 58: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.0005535095697268844
    2. 'total' → logprob: -7.500553607940674
    3. ' ' → logprob: -15.375553131103516
    4. ' tota' → logprob: -16.125553131103516
    5. '	total' → logprob: -16.750553131103516
    6. ' tot' → logprob: -16.875553131103516
    7. ' ' → logprob: -17.000553131103516
    8. '_total' → logprob: -17.500553131103516
    9. ' to' → logprob: -18.000553131103516
    10. '(total' → logprob: -18.500553131103516

Token 59: '_people' (ID: 157787)
  Prédit: '_people'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_people' → logprob: -1.4617256056226324e-05
    2. '_' → logprob: -11.500014305114746
    3. '_person' → logprob: -13.125014305114746
    4. ' _' → logprob: -13.625014305114746
    5. 'People' → logprob: -14.625014305114746
    6. 'people' → logprob: -14.875014305114746
    7. '_pe' → logprob: -15.625014305114746
    8. '   ' → logprob: -16.000015258789062
    9. '_users' → logprob: -16.625015258789062
    10. '_places' → logprob: -17.125015258789062

Token 60: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.11093389987945557
    2. '<=' → logprob: -3.110933780670166
    3. ' and' → logprob: -3.235933780670166
    4. 'and' → logprob: -3.860933780670166
    5. ' ' → logprob: -10.735934257507324
    6. '       ' → logprob: -10.860934257507324
    7. '<|end|>' → logprob: -11.485934257507324
    8. '   ' → logprob: -12.360934257507324
    9. '        ' → logprob: -13.235934257507324
    10. '```' → logprob: -13.360934257507324

Token 61: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.100211963057518
    2. 'self' → logprob: -2.3502118587493896
    3. '	self' → logprob: -13.225212097167969
    4. ' ' → logprob: -13.600212097167969
    5. '       ' → logprob: -13.600212097167969
    6. ' ' → logprob: -14.850212097167969
    7. '_self' → logprob: -15.725212097167969
    8. '(self' → logprob: -16.47521209716797
    9. '   ' → logprob: -16.60021209716797
    10. '    ' → logprob: -16.72521209716797

Token 62: '.max' (ID: 11883)
  Prédit: '.max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.max' → logprob: -0.0008289250545203686
    2. '.' → logprob: -7.125828742980957
    3. ' .' → logprob: -11.000828742980957
    4. '.min' → logprob: -12.000828742980957
    5. 'max' → logprob: -14.625828742980957
    6. '.maximum' → logprob: -15.125828742980957
    7. '.Max' → logprob: -16.000829696655273
    8. '.user' → logprob: -16.000829696655273
    9. '._' → logprob: -16.250829696655273
    10. '..' → logprob: -16.375829696655273

Token 63: '_people' (ID: 157787)
  Prédit: '_people'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_people' → logprob: -0.00034964739461429417
    2. '_' → logprob: -8.625349998474121
    3. '_pe' → logprob: -9.250349998474121
    4. ' _' → logprob: -10.000349998474121
    5. '_p' → logprob: -11.750349998474121
    6. '```' → logprob: -11.875349998474121
    7. '_person' → logprob: -12.250349998474121
    8. '   ' → logprob: -14.000349998474121
    9. '._' → logprob: -14.125349998474121
    10. '_users' → logprob: -14.125349998474121

Token 64: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11588454246520996
    2. '<|end|>' → logprob: -2.61588454246521
    3. '```' → logprob: -3.86588454246521
    4. 'class' → logprob: -5.490884780883789
    5. '

' → logprob: -5.740884780883789
    6. '<|end|>' → logprob: -6.240884780883789
    7. '   ' → logprob: -6.865884780883789
    8. '\n' → logprob: -7.115884780883789
    9. '#' → logprob: -7.240884780883789
    10. '.' → logprob: -7.490884780883789

Token 65: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6516309976577759
    2. 'class' → logprob: -0.7766309976577759
    3. '

' → logprob: -5.276630878448486
    4. 'c' → logprob: -5.276630878448486
    5. ' class' → logprob: -5.651630878448486
    6. '```' → logprob: -6.026630878448486
    7. '<|end|>' → logprob: -7.151630878448486
    8. '#' → logprob: -8.151631355285645
    9. '' → logprob: -8.526631355285645
    10. '   ' → logprob: -8.651631355285645

Token 66: ' Friend' (ID: 24739)
  Prédit: ' Capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Capacity' → logprob: -1.0443364381790161
    2. ' Space' → logprob: -1.4193364381790161
    3. ' Group' → logprob: -2.0443363189697266
    4. ' Room' → logprob: -2.9193363189697266
    5. ' ' → logprob: -3.0443363189697266
    6. ' Person' → logprob: -3.2943363189697266
    7. ' Team' → logprob: -3.4193363189697266
    8. ' Location' → logprob: -4.419336318969727
    9. ' Availability' → logprob: -4.669336318969727
    10. ' Party' → logprob: -4.794336318969727

Token 67: ':
' (ID: 734)
  Prédit: 'Group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Group' → logprob: -0.2812373638153076
    2. 'ship' → logprob: -1.6562373638153076
    3. 'Constraint' → logprob: -3.1562373638153076
    4. 'List' → logprob: -5.656237602233887
    5. 'Ship' → logprob: -5.656237602233887
    6. 'Request' → logprob: -6.156237602233887
    7. 's' → logprob: -7.781237602233887
    8. 'Requirement' → logprob: -7.781237602233887
    9. 'Circle' → logprob: -8.281237602233887
    10. 'Grouping' → logprob: -8.656237602233887

Token 68: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004939612466841936
    2. ':
' → logprob: -5.379939556121826
    3. '   ' → logprob: -8.629940032958984
    4. '(' → logprob: -9.754940032958984
    5. '):' → logprob: -10.254940032958984
    6. '(object' → logprob: -11.379940032958984
    7. ':def' → logprob: -11.504940032958984
    8. 'def' → logprob: -11.879940032958984
    9. '<|end|>' → logprob: -12.504940032958984
    10. ' :' → logprob: -12.629940032958984

Token 69: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16754581034183502
    2. ' def' → logprob: -2.042545795440674
    3. 'def' (adapté à ' def') → logprob: -3.792545795440674
    4. 'class' → logprob: -6.542545795440674
    5. '    ' → logprob: -8.292546272277832
    6. ' ' → logprob: -9.042546272277832
    7. ' class' → logprob: -9.417546272277832
    8. '```' → logprob: -9.542546272277832
    9. '  ' → logprob: -11.417546272277832
    10. ' de' → logprob: -11.792546272277832

Token 70: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0014485642313957214
    2. '__' → logprob: -7.251448631286621
    3. ' init' → logprob: -8.251448631286621
    4. ' def' → logprob: -8.376448631286621
    5. ' ' → logprob: -9.876448631286621
    6. ' ' → logprob: -10.126448631286621
    7. '_init' → logprob: -10.126448631286621
    8. 'init' → logprob: -10.376448631286621
    9. 'def' → logprob: -11.251448631286621
    10. '_' → logprob: -11.251448631286621

Token 71: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.320199877838604e-07
    2. 'ini' → logprob: -14.75
    3. 'int' → logprob: -18.375
    4. 'i' → logprob: -18.5
    5. 'in' → logprob: -18.625
    6. 'inite' → logprob: -19.25
    7. ' init' → logprob: -19.375
    8. '   ' → logprob: -20.875
    9. '	init' → logprob: -21.0
    10. 'def' → logprob: -21.875

Token 72: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.004839383997023106
    2. '__' → logprob: -5.3798394203186035
    3. '__(
' → logprob: -8.754838943481445
    4. '(self' → logprob: -10.254838943481445
    5. '__((' → logprob: -11.004838943481445
    6. '(' → logprob: -12.379838943481445
    7. '_(' → logprob: -13.629838943481445
    8. 'self' → logprob: -14.004838943481445
    9. '__('' → logprob: -14.254838943481445
    10. '__(*' → logprob: -14.254838943481445

Token 73: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0013325021136552095
    2. ' self' → logprob: -6.6263322830200195
    3. '(self' → logprob: -12.12633228302002
    4. 'name' → logprob: -14.50133228302002
    5. '       ' → logprob: -15.50133228302002
    6. ',' → logprob: -16.126333236694336
    7. '	self' → logprob: -16.751333236694336
    8. '   ' → logprob: -16.751333236694336
    9. 's' → logprob: -17.001333236694336
    10. '0' → logprob: -17.126333236694336

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0836927592754364
    2. ' ,' → logprob: -2.583692789077759
    3. 'self' → logprob: -5.70869255065918
    4. ' self' → logprob: -7.58369255065918
    5. '<|end|>' → logprob: -7.83369255065918
    6. 'name' → logprob: -8.45869255065918
    7. ' name' → logprob: -9.20869255065918
    8. ',name' → logprob: -9.33369255065918
    9. ' (' → logprob: -9.70869255065918
    10. '(self' → logprob: -10.58369255065918

Token 75: ' constraint' (ID: 44762)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.48345357179641724
    2. ' name' → logprob: -1.6084535121917725
    3. 'self' → logprob: -1.8584535121917725
    4. ' self' → logprob: -3.6084535121917725
    5. '   ' → logprob: -9.608453750610352
    6. 'id' → logprob: -10.483453750610352
    7. 'first' → logprob: -11.108453750610352
    8. ' id' → logprob: -12.108453750610352
    9. ' first' → logprob: -12.108453750610352
    10. 'friend' → logprob: -12.233453750610352

Token 76: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3971099555492401
    2. '):' → logprob: -1.1471099853515625
    3. '=None' → logprob: -5.2721099853515625
    4. 's' → logprob: -5.6471099853515625
    5. ')' → logprob: -7.1471099853515625
    6. '):
' → logprob: -8.022109985351562
    7. ',' → logprob: -8.397109985351562
    8. '<|end|>' → logprob: -10.272109985351562
    9. '_range' → logprob: -10.522109985351562
    10. ' ):' → logprob: -10.522109985351562

Token 77: ' Range' (ID: 26714)
  Prédit: ' Range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Range' → logprob: -0.0021223074290901423
    2. 'Range' → logprob: -7.002122402191162
    3. ' )' → logprob: -7.127122402191162
    4. ' ' → logprob: -8.752121925354004
    5. ')' → logprob: -9.252121925354004
    6. ' None' → logprob: -9.627121925354004
    7. ' range' → logprob: -10.502121925354004
    8. ' Constraint' → logprob: -10.627121925354004
    9. '<|end|>' → logprob: -11.377121925354004
    10. ' Rang' → logprob: -12.252121925354004

Token 78: 'Constraint' (ID: 23133)
  Prédit: 'Constraint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Constraint' → logprob: -2.339278580620885e-06
    2. '_constraint' → logprob: -13.250001907348633
    3. '[' → logprob: -15.500001907348633
    4. 'Const' → logprob: -16.125001907348633
    5. ')' → logprob: -16.750001907348633
    6. ' Constraint' → logprob: -17.000001907348633
    7. '_' → logprob: -17.375001907348633
    8. 'constraint' → logprob: -17.375001907348633
    9. 'Con' → logprob: -17.500001907348633
    10. 'Constraints' → logprob: -18.125001907348633

Token 79: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001341792638413608
    2. ',' → logprob: -7.251341819763184
    3. ')' → logprob: -8.376341819763184
    4. ':' → logprob: -8.751341819763184
    5. '):
' → logprob: -8.876341819763184
    6. '   ' → logprob: -9.876341819763184
    7. '=None' → logprob: -10.376341819763184
    8. '       ' → logprob: -11.376341819763184
    9. '=' → logprob: -12.626341819763184
    10. ' ):' → logprob: -12.751341819763184

Token 80: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.8074162653647363e-05
    2. 'self' → logprob: -11.875018119812012
    3. '      ' → logprob: -12.750018119812012
    4. '<|end|>' → logprob: -13.000018119812012
    5. '        ' → logprob: -13.500018119812012
    6. ',' → logprob: -13.500018119812012
    7. '   ' → logprob: -14.250018119812012
    8. '    ' → logprob: -14.750018119812012
    9. ' self' → logprob: -14.875018119812012
    10. '     ' → logprob: -15.000018119812012

Token 81: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.21454982459545135
    2. 'self' (adapté à ' self') → logprob: -1.7145497798919678
    3. '       ' → logprob: -4.339550018310547
    4. '   ' → logprob: -12.464550018310547
    5. '	self' → logprob: -12.839550018310547
    6. ' ' → logprob: -13.839550018310547
    7. ' ' → logprob: -15.964550018310547
    8. 's' → logprob: -16.089550018310547
    9. '     ' → logprob: -16.839550018310547
    10. '_self' → logprob: -17.089550018310547

Token 82: '.constraint' (ID: 64839)
  Prédit: '.constraint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.constraint' → logprob: -0.01689998246729374
    2. '.' → logprob: -4.141900062561035
    3. 'constraint' → logprob: -7.516900062561035
    4. '.const' → logprob: -9.516900062561035
    5. '.constraints' → logprob: -9.766900062561035
    6. ' .' → logprob: -9.891900062561035
    7. ' constraint' → logprob: -10.016900062561035
    8. '.cons' → logprob: -10.516900062561035
    9. '_constraint' → logprob: -11.016900062561035
    10. '.friend' → logprob: -11.391900062561035

Token 83: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06994432210922241
    2. '=' → logprob: -2.694944381713867
    3. '.' → logprob: -12.444944381713867
    4. ')' → logprob: -13.444944381713867
    5. '.=' → logprob: -14.069944381713867
    6. ' =)' → logprob: -14.319944381713867
    7. ' is' → logprob: -15.444944381713867
    8. '<|end|>' → logprob: -15.444944381713867
    9. 's' → logprob: -15.819944381713867
    10. '   ' → logprob: -15.944944381713867

Token 84: ' constraint' (ID: 44762)
  Prédit: ' constraint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' constraint' → logprob: -0.07889099419116974
    2. 'constraint' → logprob: -2.5788910388946533
    3. '.constraint' → logprob: -14.328890800476074
    4. ' ' → logprob: -15.078890800476074
    5. ' ' → logprob: -15.203890800476074
    6. '_constraint' → logprob: -16.20389175415039
    7. 'Constraint' → logprob: -17.20389175415039
    8. ' const' → logprob: -19.20389175415039
    9. 'const' → logprob: -19.32889175415039
    10. 'space' → logprob: -19.45389175415039

Token 85: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13446423411369324
    2. '<|end|>' → logprob: -2.2594642639160156
    3. '   ' → logprob: -4.134464263916016
    4. '

' → logprob: -5.884464263916016
    5. '    
' → logprob: -6.759464263916016
    6. '<|end|>' → logprob: -7.009464263916016
    7. ' 
' → logprob: -9.259464263916016
    8. 'def' → logprob: -9.634464263916016
    9. '
    
' → logprob: -9.759464263916016
    10. '       ' → logprob: -9.884464263916016

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029663467779755592
    2. '
' → logprob: -3.779663562774658
    3. '<|end|>' → logprob: -5.779663562774658
    4. '    
' → logprob: -6.529663562774658
    5. 'def' → logprob: -6.779663562774658
    6. '       ' → logprob: -8.5296630859375
    7. 'class' → logprob: -9.2796630859375
    8. '        
' → logprob: -9.6546630859375
    9. ' ' → logprob: -9.9046630859375
    10. '  ' → logprob: -10.0296630859375

Token 87: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.000939450750593096
    2. '   ' → logprob: -7.50093936920166
    3. ' def' → logprob: -7.87593936920166
    4. 'class' → logprob: -12.75093936920166
    5. 'self' → logprob: -13.37593936920166
    6. '       ' → logprob: -14.50093936920166
    7. ' ' → logprob: -14.75093936920166
    8. '	def' → logprob: -15.12593936920166
    9. '@property' → logprob: -15.25093936920166
    10. '  ' → logprob: -15.75093936920166

Token 88: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.017237486317753792
    2. 's' → logprob: -5.017237663269043
    3. ' def' → logprob: -5.142237663269043
    4. ' check' → logprob: -6.642237663269043
    5. 'is' → logprob: -7.142237663269043
    6. ' can' → logprob: -7.767237663269043
    7. ' ' → logprob: -7.892237663269043
    8. ' satisfies' → logprob: -7.892237663269043
    9. ' satisfied' → logprob: -8.642237663269043
    10. ' constraints' → logprob: -9.017237663269043

Token 89: '_h' (ID: 3434)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.15665802359580994
    2. '_' → logprob: -2.1566579341888428
    3. '_f' → logprob: -4.781658172607422
    4. '_friend' → logprob: -4.906658172607422
    5. '_available' → logprob: -5.656658172607422
    6. '_present' → logprob: -6.531658172607422
    7. '_inv' → logprob: -6.781658172607422
    8. '_allowed' → logprob: -6.906658172607422
    9. '_inter' → logprob: -7.156658172607422
    10. '_valid' → logprob: -7.531658172607422

Token 90: 'appy' (ID: 13532)
  Prédit: 'appy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'appy' → logprob: -0.004772818647325039
    2. 'app' → logprob: -6.004772663116455
    3. '_' → logprob: -6.879772663116455
    4. 'a' → logprob: -8.004773139953613
    5. '_app' → logprob: -8.379773139953613
    6. '_s' → logprob: -8.629773139953613
    7. 'on' → logprob: -8.879773139953613
    8. 'appi' → logprob: -9.504773139953613
    9. 's' → logprob: -10.129773139953613
    10. 'and' → logprob: -10.379773139953613

Token 91: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.31450018286705017
    2. '(' → logprob: -1.3145002126693726
    3. ' (' → logprob: -6.814500331878662
    4. 'self' → logprob: -9.314499855041504
    5. '   ' → logprob: -11.314499855041504
    6. '(
' → logprob: -11.939499855041504
    7. '(s' → logprob: -12.189499855041504
    8. ')' → logprob: -12.314499855041504
    9. ' ' → logprob: -12.564499855041504
    10. '()' → logprob: -12.689499855041504

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012797608505934477
    2. ' ,' → logprob: -6.751279830932617
    3. 'self' → logprob: -9.501279830932617
    4. ')' → logprob: -11.126279830932617
    5. ',self' → logprob: -11.126279830932617
    6. '(self' → logprob: -13.501279830932617
    7. '   ' → logprob: -13.626279830932617
    8. 's' → logprob: -13.876279830932617
    9. ',
' → logprob: -14.626279830932617
    10. ',total' → logprob: -14.751279830932617

Token 93: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.08238907158374786
    2. 'total' → logprob: -2.8323891162872314
    3. ' self' → logprob: -4.082388877868652
    4. 'self' → logprob: -5.832388877868652
    5. ' friends' → logprob: -9.082388877868652
    6. ' people' → logprob: -9.207388877868652
    7. ' number' → logprob: -9.832388877868652
    8. 'people' → logprob: -11.082388877868652
    9. 'friend' → logprob: -11.207388877868652
    10. 'friends' → logprob: -11.207388877868652

Token 94: '_people' (ID: 157787)
  Prédit: '_people'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_people' → logprob: -0.0002632430987432599
    2. '_' → logprob: -8.750263214111328
    3. '_person' → logprob: -9.500263214111328
    4. ')' → logprob: -10.875263214111328
    5. ')_' → logprob: -12.750263214111328
    6. '_pe' → logprob: -12.875263214111328
    7. '_p' → logprob: -13.250263214111328
    8. ' _' → logprob: -14.375263214111328
    9. '```' → logprob: -14.500263214111328
    10. '_users' → logprob: -14.875263214111328

Token 95: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07261360436677933
    2. '):' → logprob: -2.9476137161254883
    3. ')' → logprob: -4.072613716125488
    4. ':int' → logprob: -7.697613716125488
    5. ' ):' → logprob: -9.947613716125488
    6. ' )' → logprob: -11.072613716125488
    7. '):
' → logprob: -11.447613716125488
    8. ' :' → logprob: -12.072613716125488
    9. '   ' → logprob: -12.572613716125488
    10. ' ' → logprob: -14.447613716125488

Token 96: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2538377642631531
    2. 'int' → logprob: -1.5038378238677979
    3. ')' → logprob: -6.503837585449219
    4. ' )' → logprob: -8.003837585449219
    5. ' ' → logprob: -10.503837585449219
    6. ':int' → logprob: -11.128837585449219
    7. ' total' → logprob: -11.128837585449219
    8. '=int' → logprob: -12.378837585449219
    9. 'total' → logprob: -12.753837585449219
    10. ' ' → logprob: -12.878837585449219

Token 97: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25204184651374817
    2. '):' → logprob: -1.5020418167114258
    3. '):
' → logprob: -9.502041816711426
    4. ':' → logprob: -10.627041816711426
    5. ')->' → logprob: -12.002041816711426
    6. '   ' → logprob: -12.252041816711426
    7. ' )' → logprob: -13.627041816711426
    8. ' ):' → logprob: -14.752041816711426
    9. '       ' → logprob: -14.877041816711426
    10. '):

' → logprob: -15.127041816711426

Token 98: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006840402726083994
    2. '):' → logprob: -5.131840229034424
    3. '       ' → logprob: -8.381840705871582
    4. ':return' → logprob: -8.756840705871582
    5. ' ->' → logprob: -9.006840705871582
    6. ')' → logprob: -9.006840705871582
    7. ' :' → logprob: -9.256840705871582
    8. '():' → logprob: -9.631840705871582
    9. '->' → logprob: -9.756840705871582
    10. ')->' → logprob: -10.756840705871582

Token 99: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.0008899023523554206
    2. 'bool' → logprob: -7.125889778137207
    3. ' ' → logprob: -10.000889778137207
    4. ' True' → logprob: -10.875889778137207
    5. ' self' → logprob: -11.375889778137207
    6. ' ' → logprob: -11.875889778137207
    7. ' int' → logprob: -13.375889778137207
    8. 'self' → logprob: -15.625889778137207
    9. '_bool' → logprob: -15.750889778137207
    10. '	bool' → logprob: -15.875889778137207

Token 100: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004419793840497732
    2. '):' → logprob: -5.754419803619385
    3. '       ' → logprob: -7.379419803619385
    4. ':
' → logprob: -7.629419803619385
    5. ':return' → logprob: -9.879419326782227
    6. '():' → logprob: -10.129419326782227
    7. ')' → logprob: -11.379419326782227
    8. '):
' → logprob: -11.504419326782227
    9. '<|end|>' → logprob: -12.254419326782227
    10. ':**' → logprob: -12.879419326782227

Token 101: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013617821969091892
    2. ' return' → logprob: -6.626361846923828
    3. 'return' → logprob: -10.626361846923828
    4. '<|end|>' → logprob: -12.001361846923828
    5. '   ' → logprob: -13.501361846923828
    6. '      ' → logprob: -14.001361846923828
    7. '
' → logprob: -14.251361846923828
    8. ' ' → logprob: -14.501361846923828
    9. ' 
' → logprob: -15.251361846923828
    10. '```' → logprob: -15.376361846923828

Token 102: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.030917508527636528
    2. ' return' → logprob: -3.5309174060821533
    3. '       ' → logprob: -6.780917644500732
    4. 'self' → logprob: -10.405917167663574
    5. ' self' → logprob: -15.280917167663574
    6. '	return' → logprob: -15.655917167663574
    7. '{return' → logprob: -15.780917167663574
    8. '
' → logprob: -15.905917167663574
    9. '   ' → logprob: -16.15591812133789
    10. '```' → logprob: -16.78091812133789

Token 103: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.005234002135694027
    2. 'self' → logprob: -5.2552337646484375
    3. ' ' → logprob: -15.255233764648438
    4. '(self' → logprob: -17.880233764648438
    5. ' ' → logprob: -18.130233764648438
    6. '	self' → logprob: -18.380233764648438
    7. ' all' → logprob: -19.505233764648438
    8. '_self' → logprob: -20.380233764648438
    9. '$self' → logprob: -20.755233764648438
    10. '       ' → logprob: -20.880233764648438

Token 104: '.constraint' (ID: 64839)
  Prédit: '.constraint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.constraint' → logprob: -8.387458365177736e-05
    2. '.' → logprob: -10.250083923339844
    3. 'constraint' → logprob: -10.375083923339844
    4. '.const' → logprob: -12.000083923339844
    5. '.friend' → logprob: -12.250083923339844
    6. '.constant' → logprob: -13.250083923339844
    7. '.con' → logprob: -13.750083923339844
    8. '.Constraint' → logprob: -14.000083923339844
    9. '.constraints' → logprob: -14.250083923339844
    10. '.s' → logprob: -14.750083923339844

Token 105: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -6.420598219847307e-05
    2. '.' → logprob: -9.7500638961792
    3. '.s' → logprob: -13.0000638961792
    4. '.isnan' → logprob: -13.2500638961792
    5. 'is' → logprob: -14.0000638961792
    6. ' .' → logprob: -14.8750638961792
    7. '.startswith' → logprob: -15.7500638961792
    8. '.endswith' → logprob: -16.625064849853516
    9. '.has' → logprob: -16.875064849853516
    10. ').' → logprob: -17.000064849853516

Token 106: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.688212614681106e-05
    2. '_' → logprob: -11.375017166137695
    3. 's' → logprob: -12.500017166137695
    4. '_sat' → logprob: -13.625017166137695
    5. '_h' → logprob: -15.875017166137695
    6. 'Satisfied' → logprob: -15.875017166137695
    7. ' _' → logprob: -16.875017166137695
    8. ' satisfied' → logprob: -17.125017166137695
    9. 'atisfied' → logprob: -17.500017166137695
    10. '\' → logprob: -19.250017166137695

Token 107: 'atisfied' (ID: 65362)
  Prédit: 'atisfied'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atisfied' → logprob: -7.195421494543552e-05
    2. 'atis' → logprob: -10.12507152557373
    3. 'atisf' → logprob: -11.00007152557373
    4. 'at' → logprob: -11.62507152557373
    5. 'ats' → logprob: -13.00007152557373
    6. 's' → logprob: -14.25007152557373
    7. 'Satisfied' → logprob: -14.25007152557373
    8. 'a' → logprob: -14.37507152557373
    9. 'atisfactory' → logprob: -14.37507152557373
    10. 'ati' → logprob: -15.12507152557373

Token 108: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.0380568690598011
    2. '(' → logprob: -3.2880568504333496
    3. ' (' → logprob: -11.288057327270508
    4. '(
' → logprob: -13.288057327270508
    5. '(t' → logprob: -14.663057327270508
    6. '(

' → logprob: -15.413057327270508
    7. 'total' → logprob: -15.788057327270508
    8. '(target' → logprob: -16.163057327270508
    9. '((' → logprob: -16.413057327270508
    10. '(to' → logprob: -16.913057327270508

Token 109: '_people' (ID: 157787)
  Prédit: '_people'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_people' → logprob: -2.2200749754119897e-06
    2. '_' → logprob: -13.625001907348633
    3. '_person' → logprob: -14.375001907348633
    4. 'people' → logprob: -16.000001907348633
    5. 'People' → logprob: -16.875001907348633
    6. ')' → logprob: -16.875001907348633
    7. '_places' → logprob: -17.125001907348633
    8. ' _' → logprob: -17.750001907348633
    9. '   ' → logprob: -18.125001907348633
    10. '_)' → logprob: -18.375001907348633

Token 110: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.747814349073451e-05
    2. ' )' → logprob: -11.000017166137695
    3. ')
' → logprob: -14.500017166137695
    4. ')return' → logprob: -16.375017166137695
    5. '   ' → logprob: -16.625017166137695
    6. '       ' → logprob: -16.875017166137695
    7. '))' → logprob: -17.125017166137695
    8. ')`' → logprob: -18.500017166137695
    9. ')

' → logprob: -18.625017166137695
    10. '}' → logprob: -18.750017166137695

Token 111: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0008825227851048112
    2. '
' → logprob: -7.500882625579834
    3. 'c' → logprob: -8.750882148742676
    4. ' class' → logprob: -9.875882148742676
    5. 'def' → logprob: -10.625882148742676
    6. '```' → logprob: -11.000882148742676
    7. '#' → logprob: -11.125882148742676
    8. '

' → logprob: -11.750882148742676
    9. 'friend' → logprob: -11.875882148742676
    10. '[' → logprob: -11.875882148742676

Token 112: ' Friend' (ID: 24739)
  Prédit: ' Party'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Party' → logprob: -0.6524665951728821
    2. ' Group' → logprob: -1.1524665355682373
    3. ' Event' → logprob: -2.7774665355682373
    4. ' Host' → logprob: -3.4024665355682373
    5. ' Family' → logprob: -3.9024665355682373
    6. ' Room' → logprob: -4.152466773986816
    7. ' Friend' → logprob: -4.652466773986816
    8. 'Group' → logprob: -5.027466773986816
    9. ' Meeting' → logprob: -6.152466773986816
    10. ' House' → logprob: -6.527466773986816

Token 113: 'Group' (ID: 2748)
  Prédit: 'Group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Group' → logprob: -0.09189438074827194
    2. 'List' → logprob: -2.8418943881988525
    3. 's' → logprob: -4.341894149780273
    4. 'ship' → logprob: -4.591894149780273
    5. 'Constraint' → logprob: -6.091894149780273
    6. 'Set' → logprob: -6.466894149780273
    7. 'Ship' → logprob: -8.091894149780273
    8. 'Collection' → logprob: -8.216894149780273
    9. 'Request' → logprob: -8.841894149780273
    10. 'Circle' → logprob: -8.841894149780273

Token 114: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008114131633192301
    2. ':
' → logprob: -7.125811576843262
    3. '):' → logprob: -13.000811576843262
    4. '(' → logprob: -13.625811576843262
    5. ':def' → logprob: -13.625811576843262
    6. '():' → logprob: -14.500811576843262
    7. ':

' → logprob: -14.875811576843262
    8. '   ' → logprob: -15.000811576843262
    9. 'def' → logprob: -15.250811576843262
    10. ' :' → logprob: -15.250811576843262

Token 115: '   ' (ID: 271)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7594746947288513
    2. '   ' → logprob: -0.8844746947288513
    3. ':' → logprob: -2.134474754333496
    4. 'def' → logprob: -7.759474754333496
    5. ' def' → logprob: -9.009474754333496
    6. '(' → logprob: -9.009474754333496
    7. '(object' → logprob: -10.384474754333496
    8. ':def' → logprob: -10.384474754333496
    9. '):
' → logprob: -10.634474754333496
    10. 'class' → logprob: -10.634474754333496

Token 116: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.48411083221435547
    2. ' def' → logprob: -0.9841108322143555
    3. '   ' → logprob: -4.6091108322143555
    4. 'class' → logprob: -10.984110832214355
    5. '```' → logprob: -13.234110832214355
    6. ' ' → logprob: -13.609110832214355
    7. '	def' → logprob: -14.359110832214355
    8. '
' → logprob: -14.484110832214355
    9. ':def' → logprob: -14.609110832214355
    10. '    ' → logprob: -14.859110832214355

Token 117: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.007922452874481678
    2. '_init' → logprob: -5.632922649383545
    3. ' def' → logprob: -6.257922649383545
    4. 'init' → logprob: -7.257922649383545
    5. ' ' → logprob: -7.507922649383545
    6. '__' → logprob: -7.632922649383545
    7. ' init' → logprob: -8.007922172546387
    8. 'def' → logprob: -8.757922172546387
    9. ' ' → logprob: -8.882922172546387
    10. '```' → logprob: -11.507922172546387

Token 118: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.176947600673884e-05
    2. '   ' → logprob: -11.125021934509277
    3. 'it' → logprob: -12.500021934509277
    4. ' init' → logprob: -14.000021934509277
    5. '```' → logprob: -14.375021934509277
    6. '__' → logprob: -14.750021934509277
    7. '  ' → logprob: -15.250021934509277
    8. 'iter' → logprob: -15.250021934509277
    9. 'def' → logprob: -15.250021934509277
    10. '(init' → logprob: -16.25002098083496

Token 119: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0007681751740165055
    2. '(self' → logprob: -7.375768184661865
    3. '__' → logprob: -9.000767707824707
    4. '__(
' → logprob: -11.750767707824707
    5. '_(' → logprob: -12.000767707824707
    6. 'self' → logprob: -13.250767707824707
    7. '(' → logprob: -14.125767707824707
    8. '   ' → logprob: -14.250767707824707
    9. ' (' → logprob: -14.750767707824707
    10. ' ' → logprob: -15.750767707824707

Token 120: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00029065259150229394
    2. ' self' → logprob: -8.500290870666504
    3. '       ' → logprob: -9.625290870666504
    4. '
' → logprob: -11.500290870666504
    5. '   ' → logprob: -12.250290870666504
    6. '):
' → logprob: -12.375290870666504
    7. ')' → logprob: -13.750290870666504
    8. ' ' → logprob: -15.625290870666504
    9. '    ' → logprob: -16.250289916992188
    10. '  ' → logprob: -16.375289916992188

Token 121: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3929489850997925
    2. 'self' → logprob: -1.1429489850997925
    3. '   ' → logprob: -6.517949104309082
    4. '       ' → logprob: -6.767949104309082
    5. '__(' → logprob: -7.017949104309082
    6. ' self' → logprob: -7.517949104309082
    7. '):
' → logprob: -7.517949104309082
    8. '
' → logprob: -7.767949104309082
    9. '(self' → logprob: -8.267949104309082
    10. ' ,' → logprob: -8.392949104309082

Token 122: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010095883626490831
    2. ' self' → logprob: -7.376009464263916
    3. 'self' → logprob: -7.876009464263916
    4. '   ' → logprob: -13.001009941101074
    5. '      ' → logprob: -14.876009941101074
    6. '	self' → logprob: -15.126009941101074
    7. '     ' → logprob: -16.376008987426758
    8. '           ' → logprob: -16.876008987426758
    9. '	   ' → logprob: -16.876008987426758
    10. '        
' → logprob: -17.251008987426758

Token 123: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.10115661472082138
    2. ' self' → logprob: -2.351156711578369
    3. '       ' → logprob: -6.976156711578369
    4. '   ' → logprob: -11.351156234741211
    5. ' ' → logprob: -13.976156234741211
    6. 'super' → logprob: -14.351156234741211
    7. '	self' → logprob: -14.601156234741211
    8. '
' → logprob: -15.226156234741211
    9. '```' → logprob: -15.351156234741211
    10. '     ' → logprob: -15.851156234741211

Token 124: '.f' (ID: 1196)
  Prédit: '.f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -0.01050108764320612
    2. ' .' → logprob: -4.885500907897949
    3. ' friends' → logprob: -6.760500907897949
    4. 'friends' → logprob: -7.510500907897949
    5. '._' → logprob: -7.885500907897949
    6. '.friend' → logprob: -8.13550090789795
    7. '_f' → logprob: -8.63550090789795
    8. 'Friends' → logprob: -9.26050090789795
    9. '.' → logprob: -9.26050090789795
    10. '.people' → logprob: -10.01050090789795

Token 125: 'riends' (ID: 16678)
  Prédit: 'riends'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'riends' → logprob: -4.644463479053229e-05
    2. 'riend' → logprob: -10.500046730041504
    3. 'friends' → logprob: -11.250046730041504
    4. 'r' → logprob: -12.250046730041504
    5. 'ri' → logprob: -14.750046730041504
    6. '_' → logprob: -15.375046730041504
    7. 'i' → logprob: -16.000045776367188
    8. '__' → logprob: -16.875045776367188
    9. '```' → logprob: -16.875045776367188
    10. 'RIEND' → logprob: -17.000045776367188

Token 126: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25310564041137695
    2. ' =' → logprob: -1.503105640411377
    3. '=[]' → logprob: -6.753105640411377
    4. ':' → logprob: -12.878105163574219
    5. '=[]
' → logprob: -13.503105163574219
    6. '[]' → logprob: -13.503105163574219
    7. 's' → logprob: -13.878105163574219
    8. ' ' → logprob: -14.128105163574219
    9. '   ' → logprob: -14.253105163574219
    10. '<|end|>' → logprob: -15.503105163574219

Token 127: ' []

' (ID: 32833)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.011048408225178719
    2. '[]' → logprob: -4.511048316955566
    3. ' []
' → logprob: -15.011048316955566
    4. '[]}' → logprob: -15.636048316955566
    5. ' ' → logprob: -17.011049270629883
    6. '[]>' → logprob: -17.636049270629883
    7. ' []

' → logprob: -18.386049270629883
    8. '[]
' → logprob: -18.511049270629883
    9. ' [' → logprob: -18.761049270629883
    10. ' [])' → logprob: -19.136049270629883

Token 128: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009601775673218071
    2. 'def' → logprob: -8.375960350036621
    3. '<|end|>' → logprob: -8.375960350036621
    4. ' def' → logprob: -8.500960350036621
    5. '    
' → logprob: -8.875960350036621
    6. '
' → logprob: -8.875960350036621
    7. '<|end|>' → logprob: -12.250960350036621
    8. ' 
' → logprob: -13.000960350036621
    9. '	def' → logprob: -13.375960350036621
    10. ' ' → logprob: -13.500960350036621

Token 129: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0019362468738108873
    2. ' def' → logprob: -6.251936435699463
    3. '   ' → logprob: -11.876935958862305
    4. '
' → logprob: -14.501935958862305
    5. ' ' → logprob: -16.626935958862305
    6. '

' → logprob: -16.751935958862305
    7. '	def' → logprob: -17.876935958862305
    8. '    
' → logprob: -19.251935958862305
    9. 'de' → logprob: -19.751935958862305
    10. '```' → logprob: -20.001935958862305

Token 130: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.0016195995267480612
    2. '_add' → logprob: -7.001619815826416
    3. ' def' → logprob: -7.751619815826416
    4. 'add' → logprob: -8.251619338989258
    5. '_' → logprob: -12.001619338989258
    6. 'def' → logprob: -12.626619338989258
    7. ' ' → logprob: -13.376619338989258
    8. ' append' → logprob: -13.501619338989258
    9. '   ' → logprob: -14.001619338989258
    10. ' _' → logprob: -14.001619338989258

Token 131: '_friend' (ID: 156782)
  Prédit: '_friend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_friend' → logprob: -0.0005687602679245174
    2. '_f' → logprob: -7.500568866729736
    3. '(self' → logprob: -11.750568389892578
    4. '_' → logprob: -12.875568389892578
    5. '(friend' → logprob: -13.125568389892578
    6. 'Friend' → logprob: -13.500568389892578
    7. '_person' → logprob: -14.500568389892578
    8. 'friend' → logprob: -14.625568389892578
    9. '(' → logprob: -15.000568389892578
    10. '_user' → logprob: -16.000568389892578

Token 132: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00021807955636177212
    2. '(' → logprob: -8.500218391418457
    3. 'self' → logprob: -12.125218391418457
    4. '(
' → logprob: -12.500218391418457
    5. ' (' → logprob: -12.750218391418457
    6. '<|end|>' → logprob: -13.500218391418457
    7. '       ' → logprob: -15.000218391418457
    8. '   ' → logprob: -15.750218391418457
    9. '(s' → logprob: -15.875218391418457
    10. ' self' → logprob: -16.12521743774414

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000422570708906278
    2. ' ,' → logprob: -7.875422477722168
    3. 'self' → logprob: -10.375422477722168
    4. '(self' → logprob: -12.750422477722168
    5. ',self' → logprob: -13.000422477722168
    6. '<|end|>' → logprob: -13.375422477722168
    7. ')' → logprob: -13.875422477722168
    8. '       ' → logprob: -14.125422477722168
    9. ',f' → logprob: -14.250422477722168
    10. ',
' → logprob: -14.375422477722168

Token 134: ' friend' (ID: 5168)
  Prédit: ' friend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' friend' → logprob: -0.3890268802642822
    2. 'friend' → logprob: -1.1390268802642822
    3. 'self' → logprob: -6.639026641845703
    4. ' self' → logprob: -7.139026641845703
    5. '   ' → logprob: -11.389026641845703
    6. '	friend' → logprob: -11.639026641845703
    7. '_friend' → logprob: -11.764026641845703
    8. 'Friend' → logprob: -11.889026641845703
    9. '       ' → logprob: -12.014026641845703
    10. '(friend' → logprob: -13.014026641845703

Token 135: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006864794064313173
    2. '):
' → logprob: -5.50686502456665
    3. ':' → logprob: -6.25686502456665
    4. ')' → logprob: -7.25686502456665
    5. ' ):' → logprob: -9.256864547729492
    6. '       ' → logprob: -11.131864547729492
    7. '   ' → logprob: -11.256864547729492
    8. ' ' → logprob: -11.631864547729492
    9. '<|end|>' → logprob: -11.881864547729492
    10. '(friend' → logprob: -12.131864547729492

Token 136: ' Friend' (ID: 24739)
  Prédit: ' friend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' friend' → logprob: -0.09378722310066223
    2. 'friend' → logprob: -2.46878719329834
    3. 'Friend' → logprob: -5.59378719329834
    4. ' Friend' → logprob: -6.96878719329834
    5. ')' → logprob: -9.34378719329834
    6. ' )' → logprob: -9.71878719329834
    7. '_friend' → logprob: -11.96878719329834
    8. '(friend' → logprob: -11.96878719329834
    9. '	friend' → logprob: -12.21878719329834
    10. '):
' → logprob: -13.09378719329834

Token 137: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14587052166461945
    2. ')' → logprob: -2.5208704471588135
    3. '):
' → logprob: -2.8958704471588135
    4. '   ' → logprob: -10.270870208740234
    5. '       ' → logprob: -10.520870208740234
    6. ')->' → logprob: -11.520870208740234
    7. '):
' → logprob: -11.645870208740234
    8. ':' → logprob: -12.395870208740234
    9. '):

' → logprob: -13.270870208740234
    10. ' ):' → logprob: -13.520870208740234

Token 138: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.061054359131958e-06
    2. 'self' → logprob: -12.375007629394531
    3. ' self' → logprob: -12.500007629394531
    4. '   ' → logprob: -17.12500762939453
    5. '      ' → logprob: -17.50000762939453
    6. '
' → logprob: -19.00000762939453
    7. '```' → logprob: -19.00000762939453
    8. '           ' → logprob: -19.25000762939453
    9. '        
' → logprob: -19.37500762939453
    10. '     ' → logprob: -19.50000762939453

Token 139: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.08509854227304459
    2. ' self' → logprob: -2.5850985050201416
    3. '       ' → logprob: -5.085098743438721
    4. '   ' → logprob: -14.210098266601562
    5. '	self' → logprob: -15.460098266601562
    6. ' ' → logprob: -16.335098266601562
    7. ' ' → logprob: -16.460098266601562
    8. '(self' → logprob: -17.085098266601562
    9. '[self' → logprob: -18.210098266601562
    10. '```' → logprob: -18.210098266601562

Token 140: '.f' (ID: 1196)
  Prédit: '.f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -0.0017840604996308684
    2. '.' → logprob: -6.376783847808838
    3. '.fre' → logprob: -9.751784324645996
    4. 'friends' → logprob: -11.751784324645996
    5. '.friend' → logprob: -11.751784324645996
    6. ' .' → logprob: -12.876784324645996
    7. '​.' → logprob: -14.001784324645996
    8. '.faces' → logprob: -14.251784324645996
    9. ' friends' → logprob: -14.751784324645996
    10. 'riends' → logprob: -14.876784324645996

Token 141: 'riends' (ID: 16678)
  Prédit: 'riends'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'riends' → logprob: -0.0037426024209707975
    2. 'friends' → logprob: -6.003742694854736
    3. 'r' → logprob: -6.878742694854736
    4. 'riend' → logprob: -9.378742218017578
    5. '.f' → logprob: -9.503742218017578
    6. 'ri' → logprob: -10.628742218017578
    7. 'rie' → logprob: -10.753742218017578
    8. '.' → logprob: -12.003742218017578
    9. '.append' → logprob: -12.128742218017578
    10. '.r' → logprob: -12.378742218017578

Token 142: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0004315036640036851
    2. '.' → logprob: -7.750431537628174
    3. ' .' → logprob: -14.875431060791016
    4. '.extend' → logprob: -15.875431060791016
    5. ').' → logprob: -16.000431060791016
    6. '.app' → logprob: -16.250431060791016
    7. 'append' → logprob: -17.125431060791016
    8. '.push' → logprob: -17.125431060791016
    9. '.setdefault' → logprob: -17.125431060791016
    10. '.add' → logprob: -17.375431060791016

Token 143: '(friend' (ID: 198103)
  Prédit: '(friend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(friend' → logprob: -5.836499985889532e-05
    2. '(' → logprob: -9.7500581741333
    3. '(fr' → logprob: -18.125059127807617
    4. 'friend' → logprob: -18.125059127807617
    5. '	friend' → logprob: -18.500059127807617
    6. '(
' → logprob: -18.750059127807617
    7. '_friend' → logprob: -18.875059127807617
    8. '(peer' → logprob: -19.125059127807617
    9. ' (' → logprob: -19.625059127807617
    10. '(f' → logprob: -19.625059127807617

Token 144: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010029351338744164
    2. '<|end|>' → logprob: -4.635029315948486
    3. '<|end|>' → logprob: -8.510029792785645
    4. '
' → logprob: -10.760029792785645
    5. ')
' → logprob: -11.260029792785645
    6. ' )' → logprob: -11.260029792785645
    7. ')return' → logprob: -11.885029792785645
    8. '   ' → logprob: -12.635029792785645
    9. '       ' → logprob: -12.885029792785645
    10. '```' → logprob: -13.385029792785645

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11675884574651718
    2. '
' → logprob: -2.2417588233947754
    3. 'def' → logprob: -5.991758823394775
    4. '    
' → logprob: -6.866758823394775
    5. ' def' → logprob: -8.491759300231934
    6. '<|end|>' → logprob: -9.366759300231934
    7. '

' → logprob: -10.241759300231934
    8. '  
' → logprob: -10.866759300231934
    9. '```' → logprob: -11.616759300231934
    10. '<|end|>' → logprob: -11.616759300231934

Token 146: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0030959583818912506
    2. '   ' → logprob: -6.128096103668213
    3. ' def' → logprob: -7.003096103668213
    4. ' ' → logprob: -14.628095626831055
    5. '
' → logprob: -14.878095626831055
    6. '	def' → logprob: -15.253095626831055
    7. '  ' → logprob: -15.378095626831055
    8. '    
' → logprob: -16.378095626831055
    9. '```' → logprob: -17.003095626831055
    10. '       ' → logprob: -18.128095626831055

Token 147: ' max' (ID: 2999)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.9830727577209473
    2. ' all' → logprob: -1.1080727577209473
    3. ' are' → logprob: -2.1080727577209473
    4. 'are' → logprob: -2.2330727577209473
    5. 'is' → logprob: -3.4830727577209473
    6. 'all' → logprob: -3.6080727577209473
    7. ' def' → logprob: -5.483072757720947
    8. ' ' → logprob: -6.483072757720947
    9. 'def' → logprob: -6.983072757720947
    10. ' any' → logprob: -7.483072757720947

Token 148: '_inv' (ID: 53427)
  Prédit: '_h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.13076481223106384
    2. '_s' → logprob: -3.0057647228240967
    3. '_' → logprob: -3.1307647228240967
    4. '_size' → logprob: -4.630764961242676
    5. '_possible' → logprob: -4.630764961242676
    6. '_group' → logprob: -5.380764961242676
    7. '_people' → logprob: -6.630764961242676
    8. '_total' → logprob: -6.880764961242676
    9. '_f' → logprob: -7.255764961242676
    10. '_friend' → logprob: -8.130764961242676

Token 149: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.08682863414287567
    2. 'itations' → logprob: -3.5868287086486816
    3. 'ited' → logprob: -3.7118287086486816
    4. 'ites' → logprob: -4.461828708648682
    5. 'itable' → logprob: -4.711828708648682
    6. 'itation' → logprob: -5.086828708648682
    7. 'it' → logprob: -6.961828708648682
    8. 'itelist' → logprob: -7.461828708648682
    9. '```' → logprob: -7.836828708648682
    10. '
' → logprob: -8.086828231811523

Token 150: '(self' (ID: 2402)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5443812608718872
    2. '(self' → logprob: -1.4193812608718872
    3. 'd' → logprob: -2.6693811416625977
    4. '_count' → logprob: -2.7943811416625977
    5. '()' → logprob: -3.7943811416625977
    6. 'es' → logprob: -4.294381141662598
    7. '_size' → logprob: -5.669381141662598
    8. 'able' → logprob: -5.919381141662598
    9. '```' → logprob: -6.544381141662598
    10. '(' → logprob: -6.794381141662598

Token 151: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -1.1227473020553589
    2. 'self' → logprob: -1.2477473020553589
    3. ')' → logprob: -1.8727473020553589
    4. '):
' → logprob: -1.8727473020553589
    5. '(self' → logprob: -2.9977474212646484
    6. '   ' → logprob: -4.622747421264648
    7. 's' → logprob: -5.122747421264648
    8. ',' → logprob: -5.372747421264648
    9. '_count' → logprob: -6.122747421264648
    10. '       ' → logprob: -6.247747421264648

Token 152: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004063202068209648
    2. '(' → logprob: -6.254063129425049
    3. 'self' → logprob: -6.379063129425049
    4. ' self' → logprob: -9.254063606262207
    5. '_' → logprob: -9.379063606262207
    6. ':' → logprob: -9.504063606262207
    7. '   ' → logprob: -9.879063606262207
    8. 's' → logprob: -10.379063606262207
    9. '       ' → logprob: -10.504063606262207
    10. ' (' → logprob: -11.004063606262207

Token 153: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3886113166809082
    2. 'int' → logprob: -1.1386113166809082
    3. ' None' → logprob: -7.138611316680908
    4. 'None' → logprob: -7.888611316680908
    5. ' ' → logprob: -8.01361083984375
    6. ' Optional' → logprob: -9.51361083984375
    7. '   ' → logprob: -10.38861083984375
    8. '(int' → logprob: -10.51361083984375
    9. 'Optional' → logprob: -10.51361083984375
    10. '[int' → logprob: -11.38861083984375

Token 154: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.054827217012643814
    2. ':
' → logprob: -3.8048272132873535
    3. '       ' → logprob: -3.9298272132873535
    4. '(self' → logprob: -4.5548272132873535
    5. '(' → logprob: -7.9298272132873535
    6. '   ' → logprob: -8.429827690124512
    7. '):' → logprob: -8.929827690124512
    8. 'self' → logprob: -9.179827690124512
    9. '):
' → logprob: -10.804827690124512
    10. ':self' → logprob: -10.804827690124512

Token 155: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003503626212477684
    2. 'max' → logprob: -8.625349998474121
    3. ' max' → logprob: -9.750349998474121
    4. ' if' → logprob: -10.000349998474121
    5. 'n' → logprob: -10.875349998474121
    6. 'if' → logprob: -11.375349998474121
    7. ' left' → logprob: -11.500349998474121
    8. 'left' → logprob: -11.625349998474121
    9. '   ' → logprob: -11.750349998474121
    10. '      ' → logprob: -13.375349998474121

Token 156: ' #' (ID: 1069)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.8292813301086426
    2. 'left' → logprob: -1.0792813301086426
    3. 'max' → logprob: -1.8292813301086426
    4. 'if' → logprob: -3.2042813301086426
    5. 'lo' → logprob: -4.829281330108643
    6. 'min' → logprob: -5.079281330108643
    7. '       ' → logprob: -6.579281330108643
    8. 'for' → logprob: -6.829281330108643
    9. 'lower' → logprob: -6.954281330108643
    10. 'inv' → logprob: -6.954281330108643

Token 157: ' total' (ID: 3609)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9933382272720337
    2. ' max' → logprob: -1.2433382272720337
    3. ' left' → logprob: -1.7433382272720337
    4. ' low' → logprob: -3.368338108062744
    5. ' lo' → logprob: -3.618338108062744
    6. 'max' → logprob: -3.743338108062744
    7. 'if' → logprob: -3.743338108062744
    8. ' min' → logprob: -4.243338108062744
    9. 'left' → logprob: -4.243338108062744
    10. ' result' → logprob: -4.743338108062744

Token 158: '_people' (ID: 157787)
  Prédit: '_people'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_people' → logprob: -0.019494812935590744
    2. '_inv' → logprob: -4.769495010375977
    3. '_possible' → logprob: -5.269495010375977
    4. '_min' → logprob: -6.269495010375977
    5. ' =' → logprob: -7.019495010375977
    6. '_max' → logprob: -7.019495010375977
    7. '_' → logprob: -7.269495010375977
    8. '_count' → logprob: -8.269495010375977
    9. '_for' → logprob: -8.519495010375977
    10. '   ' → logprob: -9.269495010375977

Token 159: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023577721789479256
    2. '=' → logprob: -3.7735776901245117
    3. '_range' → logprob: -9.023577690124512
    4. '   ' → logprob: -10.273577690124512
    5. 's' → logprob: -10.398577690124512
    6. 'max' → logprob: -11.023577690124512
    7. ',' → logprob: -11.023577690124512
    8. ')' → logprob: -11.273577690124512
    9. '_min' → logprob: -11.273577690124512
    10. 'min' → logprob: -11.398577690124512

Token 160: ' invited' (ID: 26243)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.1730352640151978
    2. ' len' → logprob: -1.1730352640151978
    3. '0' → logprob: -1.4230352640151978
    4. ' ' → logprob: -2.673035144805908
    5. ' max' → logprob: -3.548035144805908
    6. '1' → logprob: -3.798035144805908
    7. 'max' → logprob: -4.423035144805908
    8. ' self' → logprob: -5.423035144805908
    9. 'self' → logprob: -6.423035144805908
    10. '   ' → logprob: -7.548035144805908

Token 161: ' friends' (ID: 5664)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11319378763437271
    2. '_count' → logprob: -2.7381937503814697
    3. '=' → logprob: -4.238193988800049
    4. '   ' → logprob: -4.988193988800049
    5. 's' → logprob: -5.238193988800049
    6. '  ' → logprob: -5.738193988800049
    7. '_range' → logprob: -5.738193988800049
    8. ' ' → logprob: -6.113193988800049
    9. ')' → logprob: -7.113193988800049
    10. 'count' → logprob: -7.238193988800049

Token 162: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3892204463481903
    2. ' =' → logprob: -1.7642204761505127
    3. ' for' → logprob: -3.6392204761505127
    4. '<|end|>' → logprob: -3.6392204761505127
    5. '=' → logprob: -4.139220237731934
    6. 'for' → logprob: -4.264220237731934
    7. ',' → logprob: -4.389220237731934
    8. 'def' → logprob: -4.639220237731934
    9. '   ' → logprob: -4.889220237731934
    10. ' if' → logprob: -5.389220237731934

Token 163: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.013560166582465172
    2. ' ' → logprob: -4.7635602951049805
    3. 'len' → logprob: -6.0135602951049805
    4. 'self' → logprob: -6.7635602951049805
    5. ' len' → logprob: -7.0135602951049805
    6. ' self' → logprob: -9.13856029510498
    7. '0' → logprob: -9.13856029510498
    8. '#' → logprob: -10.01356029510498
    9. '   ' → logprob: -10.01356029510498
    10. '       ' → logprob: -10.51356029510498

Token 164: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010601116344332695
    2. 'len' → logprob: -5.385601043701172
    3. 'self' → logprob: -5.885601043701172
    4. ' ' → logprob: -6.010601043701172
    5. ' len' → logprob: -7.760601043701172
    6. '0' → logprob: -9.885601043701172
    7. 'owner' → logprob: -9.885601043701172
    8. ' self' → logprob: -10.010601043701172
    9. '#' → logprob: -10.635601043701172
    10. '   ' → logprob: -11.135601043701172

Token 165: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03836390748620033
    2. ' for' → logprob: -4.538363933563232
    3. '        ' → logprob: -5.038363933563232
    4. ' max' → logprob: -5.663363933563232
    5. 'max' → logprob: -5.913363933563232
    6. 'total' → logprob: -6.038363933563232
    7. '
' → logprob: -6.288363933563232
    8. '        
' → logprob: -6.538363933563232
    9. '   ' → logprob: -6.663363933563232
    10. 'for' → logprob: -6.913363933563232

Token 166: 'my' (ID: 3825)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5392093062400818
    2. ')' → logprob: -1.9142093658447266
    3. 'self' → logprob: -2.5392093658447266
    4. 'for' → logprob: -2.6642093658447266
    5. ' self' → logprob: -3.1642093658447266
    6. '1' → logprob: -3.7892093658447266
    7. ' yourself' → logprob: -4.289209365844727
    8. ' ' → logprob: -4.539209365844727
    9. '#' → logprob: -4.914209365844727
    10. '       ' → logprob: -5.289209365844727

Token 167: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008396959863603115
    2. ' self' → logprob: -5.383397102355957
    3. ')' → logprob: -5.758397102355957
    4. ' friend' → logprob: -8.508397102355957
    5. '```' → logprob: -8.883397102355957
    6. 'friend' → logprob: -9.633397102355957
    7. 's' → logprob: -9.758397102355957
    8. '_friend' → logprob: -10.633397102355957
    9. ' ' → logprob: -11.133397102355957
    10. ' )' → logprob: -11.383397102355957

Token 168: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.061323441565036774
    2. ' )' → logprob: -3.561323404312134
    3. ')
' → logprob: -4.061323642730713
    4. '       ' → logprob: -4.811323642730713
    5. ' +' → logprob: -6.061323642730713
    6. '+' → logprob: -6.686323642730713
    7. ' )
' → logprob: -6.686323642730713
    8. '
' → logprob: -7.936323642730713
    9. '   ' → logprob: -9.686323165893555
    10. ')+' → logprob: -9.686323165893555

Token 169: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04436669871211052
    2. 'max' → logprob: -3.9193665981292725
    3. ' max' → logprob: -4.044366836547852
    4. ' for' → logprob: -6.544366836547852
    5. ' min' → logprob: -7.169366836547852
    6. 'for' → logprob: -7.419366836547852
    7. 'min' → logprob: -7.669366836547852
    8. 'total' → logprob: -7.919366836547852
    9. '   ' → logprob: -8.044366836547852
    10. ' total' → logprob: -8.044366836547852

Token 170: ' N' (ID: 478)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.7809193730354309
    2. 'max' → logprob: -1.2809193134307861
    3. 'low' → logprob: -1.7809193134307861
    4. 'min' → logprob: -2.905919313430786
    5. 'for' → logprob: -4.530919551849365
    6. ' left' → logprob: -5.155919551849365
    7. 'total' → logprob: -5.280919551849365
    8. '       ' → logprob: -5.405919551849365
    9. 'if' → logprob: -5.905919551849365
    10. 'lo' → logprob: -5.905919551849365

Token 171: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07324583828449249
    2. '=' → logprob: -2.6982457637786865
    3. '_' → logprob: -6.323246002197266
    4. '   ' → logprob: -7.823246002197266
    5. 'um' → logprob: -8.073246002197266
    6. '_total' → logprob: -9.073246002197266
    7. ')' → logprob: -9.198246002197266
    8. ' ' → logprob: -9.448246002197266
    9. '+' → logprob: -9.573246002197266
    10. '  ' → logprob: -9.823246002197266

Token 172: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0639541819691658
    2. ' len' → logprob: -2.8139541149139404
    3. '1' → logprob: -6.5639543533325195
    4. 'max' → logprob: -8.81395435333252
    5. '0' → logprob: -8.93895435333252
    6. '100' → logprob: -9.43895435333252
    7. 'sum' → logprob: -9.93895435333252
    8. ' ' → logprob: -10.18895435333252
    9. '   ' → logprob: -10.43895435333252
    10. '10' → logprob: -10.68895435333252

Token 173: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00024215869780164212
    2. '(' → logprob: -8.375242233276367
    3. 'self' → logprob: -11.500242233276367
    4. ' (' → logprob: -14.000242233276367
    5. ' self' → logprob: -15.000242233276367
    6. '(s' → logprob: -16.000242233276367
    7. '(this' → logprob: -16.250242233276367
    8. '(
' → logprob: -17.625242233276367
    9. 's' → logprob: -18.250242233276367
    10. '(f' → logprob: -18.375242233276367

Token 174: '.f' (ID: 1196)
  Prédit: '.f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -0.000689082604367286
    2. '.' → logprob: -7.5006890296936035
    3. ' .' → logprob: -9.125689506530762
    4. '.friend' → logprob: -11.125689506530762
    5. '.fre' → logprob: -12.250689506530762
    6. 'friends' → logprob: -12.875689506530762
    7. ').' → logprob: -13.125689506530762
    8. '.users' → logprob: -13.625689506530762
    9. '
' → logprob: -14.875689506530762
    10. ' friends' → logprob: -15.625689506530762

Token 175: 'riends' (ID: 16678)
  Prédit: 'riends'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'riends' → logprob: -0.006213527638465166
    2. 'friends' → logprob: -5.131213665008545
    3. 'riend' → logprob: -8.756213188171387
    4. 'r' → logprob: -9.506213188171387
    5. 'ri' → logprob: -10.506213188171387
    6. 'rie' → logprob: -11.631213188171387
    7. ')' → logprob: -12.756213188171387
    8. 're' → logprob: -13.006213188171387
    9. 'RIEND' → logprob: -13.006213188171387
    10. '```' → logprob: -13.756213188171387

Token 176: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0035725077614188194
    2. ')
' → logprob: -5.878572463989258
    3. ')+' → logprob: -8.003572463989258
    4. ' +' → logprob: -8.878572463989258
    5. '+' → logprob: -9.128572463989258
    6. '       ' → logprob: -9.378572463989258
    7. ' )' → logprob: -9.378572463989258
    8. ')

' → logprob: -11.878572463989258
    9. '   ' → logprob: -13.003572463989258
    10. ' )
' → logprob: -13.878572463989258

Token 177: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4490686058998108
    2. ' for' → logprob: -1.074068546295166
    3. '
' → logprob: -4.449068546295166
    4. 'for' → logprob: -5.199068546295166
    5. '        
' → logprob: -6.824068546295166
    6. '   ' → logprob: -7.074068546295166
    7. ',' → logprob: -8.449069023132324
    8. '    
' → logprob: -8.574069023132324
    9. ' 
' → logprob: -8.699069023132324
    10. '<|end|>' → logprob: -9.199069023132324

Token 178: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5334001183509827
    2. ' for' → logprob: -1.533400058746338
    3. 'for' → logprob: -1.658400058746338
    4. ' left' → logprob: -6.033400058746338
    5. 'left' → logprob: -6.283400058746338
    6. '   ' → logprob: -6.408400058746338
    7. 'max' → logprob: -7.658400058746338
    8. ' max' → logprob: -8.408400535583496
    9. ' ' → logprob: -9.033400535583496
    10. 'low' → logprob: -9.533400535583496

Token 179: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03143053874373436
    2. 'left' → logprob: -4.406430721282959
    3. 'max' → logprob: -4.406430721282959
    4. 'low' → logprob: -6.031430721282959
    5. 'best' → logprob: -6.781430721282959
    6. 'def' → logprob: -7.156430721282959
    7. 'lo' → logprob: -7.281430721282959
    8. 'result' → logprob: -7.406430721282959
    9. 'inv' → logprob: -8.5314302444458
    10. 'min' → logprob: -8.6564302444458

Token 180: ' We' (ID: 1416)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5419573187828064
    2. 'for' → logprob: -1.0419573783874512
    3. ' left' → logprob: -4.041957378387451
    4. ' lo' → logprob: -4.916957378387451
    5. 'left' → logprob: -4.916957378387451
    6. 'def' → logprob: -5.166957378387451
    7. ' low' → logprob: -5.166957378387451
    8. ' result' → logprob: -5.291957378387451
    9. ' max' → logprob: -5.666957378387451
    10. 'low' → logprob: -5.791957378387451

Token 181: ' want' (ID: 1682)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12269270420074463
    2. '       ' → logprob: -3.247692584991455
    3. ' def' → logprob: -3.747692584991455
    4. 'for' → logprob: -3.997692584991455
    5. 'def' → logprob: -4.497692584991455
    6. '   ' → logprob: -4.872692584991455
    7. ' max' → logprob: -5.747692584991455
    8. ' possible' → logprob: -5.997692584991455
    9. ' can' → logprob: -6.247692584991455
    10. ' best' → logprob: -6.622692584991455

Token 182: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.02917707897722721
    2. 'to' → logprob: -3.779177188873291
    3. '       ' → logprob: -6.029177188873291
    4. 'max' → logprob: -6.529177188873291
    5. ' max' → logprob: -6.529177188873291
    6. '        ' → logprob: -9.154176712036133
    7. ' a' → logprob: -9.529176712036133
    8. ' ' → logprob: -9.654176712036133
    9. '   ' → logprob: -9.779176712036133
    10. ' for' → logprob: -9.779176712036133

Token 183: ' select' (ID: 4736)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.2361467331647873
    2. 'find' → logprob: -2.2361466884613037
    3. 'max' → logprob: -2.9861466884613037
    4. ' max' → logprob: -3.3611466884613037
    5. ' for' → logprob: -5.236146926879883
    6. '1' → logprob: -5.986146926879883
    7. 'maximize' → logprob: -6.236146926879883
    8. ' invite' → logprob: -6.611146926879883
    9. 'min' → logprob: -6.736146926879883
    10. 'invite' → logprob: -6.861146926879883

Token 184: ' k' (ID: 372)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7510652542114258
    2. ' for' → logprob: -2.501065254211426
    3. 'max' → logprob: -2.501065254211426
    4. ' the' → logprob: -2.626065254211426
    5. ' an' → logprob: -3.001065254211426
    6. ' invited' → logprob: -3.001065254211426
    7. 'for' → logprob: -3.251065254211426
    8. 'total' → logprob: -3.501065254211426
    9. 'invite' → logprob: -3.626065254211426
    10. ' total' → logprob: -4.001065254211426

Token 185: ' friends' (ID: 5664)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3507927358150482
    2. ' such' → logprob: -2.100792646408081
    3. ' =' → logprob: -3.100792646408081
    4. ' for' → logprob: -3.225792646408081
    5. ' from' → logprob: -3.225792646408081
    6. ' between' → logprob: -4.97579288482666
    7. ',' → logprob: -4.97579288482666
    8. ' friends' → logprob: -5.10079288482666
    9. ' ' → logprob: -5.22579288482666
    10. '<|end|>' → logprob: -5.47579288482666

Token 186: ' s' (ID: 265)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0122257471084595
    2. '       ' → logprob: -1.3872257471084595
    3. ' such' → logprob: -1.8872257471084595
    4. 'for' → logprob: -2.51222562789917
    5. 'from' → logprob: -2.88722562789917
    6. ' from' → logprob: -3.63722562789917
    7. ' in' → logprob: -3.88722562789917
    8. ' to' → logprob: -4.13722562789917
    9. ',' → logprob: -4.26222562789917
    10. ' that' → logprob: -5.26222562789917

Token 187: '.t' (ID: 1370)
  Prédit: 'uch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uch' → logprob: -0.0050900219939649105
    2. 't' → logprob: -6.755090236663818
    3. '.t' → logprob: -6.880090236663818
    4. 'such' → logprob: -6.880090236663818
    5. 'atisf' → logprob: -7.005090236663818
    6. 'o' → logprob: -7.880090236663818
    7. '=' → logprob: -9.13008975982666
    8. '   ' → logprob: -9.25508975982666
    9. 'from' → logprob: -9.50508975982666
    10. ' such' → logprob: -10.38008975982666

Token 188: '.' (ID: 13)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.8570151925086975
    2. ' for' → logprob: -1.7320151329040527
    3. ' k' → logprob: -2.2320151329040527
    4. 'that' → logprob: -2.6070151329040527
    5. 'for' → logprob: -2.6070151329040527
    6. '0' → logprob: -3.2320151329040527
    7. '       ' → logprob: -3.2320151329040527
    8. ' all' → logprob: -4.107015132904053
    9. ' ' → logprob: -4.357015132904053
    10. '1' → logprob: -4.732015132904053

Token 189: ' for' (ID: 395)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -1.0296714305877686
    2. 'for' → logprob: -1.2796714305877686
    3. ' for' → logprob: -2.2796714305877686
    4. '1' → logprob: -2.2796714305877686
    5. 'all' → logprob: -2.2796714305877686
    6. ' k' → logprob: -4.154671669006348
    7. ' ' → logprob: -4.654671669006348
    8. 'self' → logprob: -4.779671669006348
    9. 'k' → logprob: -5.154671669006348
    10. '       ' → logprob: -5.654671669006348

Token 190: ' all' (ID: 722)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.06540975719690323
    2. ' all' → logprob: -3.1904096603393555
    3. 'k' → logprob: -3.9404096603393555
    4. 'all' → logprob: -6.5654096603393555
    5. ' ' → logprob: -7.5654096603393555
    6. ' each' → logprob: -8.315409660339355
    7. ' every' → logprob: -8.815409660339355
    8. '0' → logprob: -9.690409660339355
    9. 'each' → logprob: -9.940409660339355
    10. '1' → logprob: -10.065409660339355

Token 191: ' selected' (ID: 6386)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.577713668346405
    2. ' k' → logprob: -0.827713668346405
    3. ' in' → logprob: -7.577713489532471
    4. ' friend' → logprob: -8.202713966369629
    5. ' friends' → logprob: -8.452713966369629
    6. '       ' → logprob: -8.827713966369629
    7. '0' → logprob: -9.202713966369629
    8. '1' → logprob: -9.327713966369629
    9. 'friend' → logprob: -9.702713966369629
    10. 'friends' → logprob: -9.702713966369629

Token 192: ' i' (ID: 575)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7552798390388489
    2. ' k' → logprob: -0.7552798390388489
    3. 'friends' → logprob: -3.630279779434204
    4. ' friends' → logprob: -4.130280017852783
    5. 's' → logprob: -5.255280017852783
    6. ' s' → logprob: -5.630280017852783
    7. '```' → logprob: -6.380280017852783
    8. ' ' → logprob: -6.380280017852783
    9. '<|end|>' → logprob: -7.255280017852783
    10. '   ' → logprob: -7.505280017852783

Token 193: ':
' (ID: 734)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.36919718980789185
    2. ',' → logprob: -1.994197130203247
    3. 'n' → logprob: -2.369197130203247
    4. ':' → logprob: -3.119197130203247
    5. ' n' → logprob: -4.494197368621826
    6. 'in' → logprob: -4.494197368621826
    7. ' friends' → logprob: -5.244197368621826
    8. 's' → logprob: -5.744197368621826
    9. 'friends' → logprob: -7.369197368621826
    10. ' ' → logprob: -7.619197368621826

Token 194: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.057803019881248474
    2. ' for' → logprob: -3.43280291557312
    3. 'for' → logprob: -4.432803153991699
    4. ' k' → logprob: -5.182803153991699
    5. '           ' → logprob: -6.057803153991699
    6. '   ' → logprob: -6.557803153991699
    7. 'k' → logprob: -6.682803153991699
    8. '        ' → logprob: -7.807803153991699
    9. ' ' → logprob: -9.1828031539917
    10. 'range' → logprob: -9.3078031539917

Token 195: ' #' (ID: 1069)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.662078320980072
    2. 'self' → logprob: -1.9120783805847168
    3. ' k' → logprob: -2.037078380584717
    4. '1' → logprob: -3.037078380584717
    5. ' for' → logprob: -3.162078380584717
    6. ' ' → logprob: -3.662078380584717
    7. '       ' → logprob: -3.912078380584717
    8. ' all' → logprob: -4.037078380584717
    9. 'k' → logprob: -4.287078380584717
    10. '0' → logprob: -4.412078380584717

Token 196: ' a' (ID: 261)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -1.1000664234161377
    2. 'self' → logprob: -1.1000664234161377
    3. 'for' → logprob: -2.1000664234161377
    4. ' for' → logprob: -2.3500664234161377
    5. ' k' → logprob: -3.2250664234161377
    6. ' all' → logprob: -3.4750664234161377
    7. '       ' → logprob: -4.475066184997559
    8. '1' → logprob: -4.725066184997559
    9. '           ' → logprob: -5.350066184997559
    10. 'k' → logprob: -5.475066184997559

Token 197: '_i' (ID: 10853)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.3828863203525543
    2. '       ' → logprob: -2.5078864097595215
    3. 'll' → logprob: -2.6328864097595215
    4. ' for' → logprob: -3.2578864097595215
    5. 'max' → logprob: -3.7578864097595215
    6. ' =' → logprob: -4.5078864097595215
    7. '   ' → logprob: -4.5078864097595215
    8. 'for' → logprob: -4.5078864097595215
    9. '=' → logprob: -4.6328864097595215
    10. 'def' → logprob: -5.0078864097595215

Token 198: ' <=' (ID: 5017)
  Prédit: '.min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.min' → logprob: -0.15759190917015076
    2. ' <=' → logprob: -2.1575918197631836
    3. '<=' → logprob: -4.282591819763184
    4. 'min' → logprob: -4.782591819763184
    5. '[' → logprob: -5.782591819763184
    6. '.max' → logprob: -5.907591819763184
    7. '.' → logprob: -7.407591819763184
    8. '[min' → logprob: -8.157591819763184
    9. ' .' → logprob: -8.532591819763184
    10. '   ' → logprob: -8.532591819763184

Token 199: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.049545880407094955
    2. ' k' → logprob: -3.2995457649230957
    3. 'total' → logprob: -5.174545764923096
    4. 'self' → logprob: -6.174545764923096
    5. ' total' → logprob: -6.549545764923096
    6. '1' → logprob: -7.174545764923096
    7. 'N' → logprob: -7.174545764923096
    8. ' N' → logprob: -8.674546241760254
    9. ' self' → logprob: -9.174546241760254
    10. 'max' → logprob: -9.674546241760254

Token 200: '+' (ID: 10)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.2673107385635376
    2. '+' → logprob: -1.3923107385635376
    3. ' and' → logprob: -1.3923107385635376
    4. 'and' → logprob: -1.7673107385635376
    5. '<|end|>' → logprob: -3.392310619354248
    6. ' <=' → logprob: -4.642310619354248
    7. ' ' → logprob: -5.517310619354248
    8. '<=' → logprob: -6.767310619354248
    9. '<|end|>' → logprob: -7.642310619354248
    10. '       ' → logprob: -8.392311096191406

Token 201: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003740694955922663
    2. ' ' → logprob: -8.500373840332031
    3. 'i' → logprob: -9.500373840332031
    4. 'b' → logprob: -10.375373840332031
    5. 'a' → logprob: -10.875373840332031
    6. '0' → logprob: -11.250373840332031
    7. '
' → logprob: -11.250373840332031
    8. '   ' → logprob: -12.625373840332031
    9. '+' → logprob: -12.750373840332031
    10. '```' → logprob: -13.125373840332031

Token 202: ' <=' (ID: 5017)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07638910412788391
    2. 'and' → logprob: -3.2013890743255615
    3. '<|end|>' → logprob: -4.576389312744141
    4. ' ' → logprob: -4.826389312744141
    5. ' <=' → logprob: -5.076389312744141
    6. '+' → logprob: -5.826389312744141
    7. ' +' → logprob: -6.701389312744141
    8. '       ' → logprob: -7.076389312744141
    9. '<=' → logprob: -7.326389312744141
    10. '
' → logprob: -7.451389312744141

Token 203: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0338500440120697
    2. ' b' → logprob: -3.4088499546051025
    3. 'self' → logprob: -9.158849716186523
    4. 'f' → logprob: -10.658849716186523
    5. '       ' → logprob: -11.033849716186523
    6. ' ' → logprob: -11.283849716186523
    7. '   ' → logprob: -11.408849716186523
    8. ' f' → logprob: -11.783849716186523
    9. ' self' → logprob: -12.158849716186523
    10. 'a' → logprob: -12.408849716186523

Token 204: '_i' (ID: 10853)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0308892726898193
    2. '<|end|>' → logprob: -1.7808892726898193
    3. 'for' → logprob: -2.2808892726898193
    4. '       ' → logprob: -2.6558892726898193
    5. ' for' → logprob: -2.7808892726898193
    6. 'max' → logprob: -3.5308892726898193
    7. '+' → logprob: -3.5308892726898193
    8. ' ' → logprob: -4.030889511108398
    9. 's' → logprob: -4.030889511108398
    10. ',' → logprob: -4.155889511108398

Token 205: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43665289878845215
    2. '       ' → logprob: -1.3116528987884521
    3. '<|end|>' → logprob: -3.311652898788452
    4. '        
' → logprob: -4.061653137207031
    5. ' for' → logprob: -4.811653137207031
    6. ',' → logprob: -5.061653137207031
    7. '<|end|>' → logprob: -5.436653137207031
    8. 'def' → logprob: -5.686653137207031
    9. '

' → logprob: -6.936653137207031
    10. ' 
' → logprob: -6.936653137207031

Token 206: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.276494562625885
    2. '<|end|>' → logprob: -1.5264945030212402
    3. '
' → logprob: -4.27649450302124
    4. '<|end|>' → logprob: -5.77649450302124
    5. '        
' → logprob: -5.90149450302124
    6. ',' → logprob: -6.77649450302124
    7. ' for' → logprob: -6.90149450302124
    8. '#' → logprob: -7.77649450302124
    9. ' ' → logprob: -8.151494979858398
    10. '\n' → logprob: -8.401494979858398

Token 207: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08980850130319595
    2. ' for' → logprob: -2.589808464050293
    3. 'for' → logprob: -4.839808464050293
    4. '
' → logprob: -6.714808464050293
    5. '        
' → logprob: -7.089808464050293
    6. 'def' → logprob: -8.089808464050293
    7. '#' (adapté à ' #') → logprob: -9.464808464050293
    8. 'from' → logprob: -9.589808464050293
    9. ' from' → logprob: -9.714808464050293
    10. ',' → logprob: -9.964808464050293

Token 208: ' ==' (ID: 951)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.37110570073127747
    2. 'for' → logprob: -2.121105670928955
    3. '       ' → logprob: -2.496105670928955
    4. ' left' → logprob: -2.871105670928955
    5. 'def' → logprob: -4.496105670928955
    6. ' result' → logprob: -4.996105670928955
    7. 'left' → logprob: -5.121105670928955
    8. ' def' → logprob: -5.246105670928955
    9. ' low' → logprob: -5.371105670928955
    10. ' max' → logprob: -5.371105670928955

Token 209: ' a' (ID: 261)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.34332558512687683
    2. ' for' → logprob: -1.7183256149291992
    3. ' def' → logprob: -2.843325614929199
    4. '       ' → logprob: -3.968325614929199
    5. 'for' → logprob: -5.093325614929199
    6. '#' → logprob: -5.218325614929199
    7. 'def' → logprob: -5.468325614929199
    8. '>
' → logprob: -5.468325614929199
    9. ' range' → logprob: -5.843325614929199
    10. ' #' → logprob: -6.843325614929199

Token 210: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00656901067122817
    2. '_' → logprob: -5.506568908691406
    3. 'nd' → logprob: -7.881568908691406
    4. '<=' → logprob: -8.131568908691406
    5. ' <=' → logprob: -8.381568908691406
    6. 'i' → logprob: -8.506568908691406
    7. ' =' → logprob: -8.756568908691406
    8. '[i' → logprob: -8.756568908691406
    9. '=' → logprob: -9.131568908691406
    10. '[' → logprob: -9.256568908691406

Token 211: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.08947568386793137
    2. '<=' → logprob: -2.464475631713867
    3. '[' → logprob: -9.089475631713867
    4. ' ≤' → logprob: -9.339475631713867
    5. '<|end|>' → logprob: -9.964475631713867
    6. ')' → logprob: -10.089475631713867
    7. '=' → logprob: -10.214475631713867
    8. ' >=' → logprob: -10.839475631713867
    9. '≤' → logprob: -10.839475631713867
    10. 's' → logprob: -11.089475631713867

Token 212: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5232908129692078
    2. ' k' → logprob: -0.8982908129692078
    3. ' (' → logprob: -9.773290634155273
    4. '
' → logprob: -10.398290634155273
    5. '(k' → logprob: -10.648290634155273
    6. 'self' → logprob: -11.398290634155273
    7. ' ' → logprob: -11.523290634155273
    8. '   ' → logprob: -12.023290634155273
    9. '```' → logprob: -12.648290634155273
    10. ' ' → logprob: -12.898290634155273

Token 213: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5863000750541687
    2. ' +' → logprob: -1.3363001346588135
    3. ' and' → logprob: -2.0863001346588135
    4. ' <=' → logprob: -4.211299896240234
    5. ' ' → logprob: -4.461299896240234
    6. '       ' → logprob: -4.711299896240234
    7. '<|end|>' → logprob: -4.961299896240234
    8. 'and' → logprob: -5.086299896240234
    9. '<=' → logprob: -6.586299896240234
    10. '        ' → logprob: -6.961299896240234

Token 214: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002835040504578501
    2. ' ' → logprob: -8.625283241271973
    3. '+' → logprob: -9.625283241271973
    4. '-' → logprob: -11.250283241271973
    5. '
' → logprob: -11.750283241271973
    6. '0' → logprob: -12.500283241271973
    7. ' -' → logprob: -12.875283241271973
    8. ' +' → logprob: -13.000283241271973
    9. '   ' → logprob: -13.125283241271973
    10. '

' → logprob: -14.250283241271973

Token 215: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.14595149457454681
    2. ' <=' → logprob: -2.520951509475708
    3. 'and' → logprob: -3.145951509475708
    4. '<|end|>' → logprob: -5.020951271057129
    5. '<=' → logprob: -5.520951271057129
    6. ' ' → logprob: -6.895951271057129
    7. '<|end|>' → logprob: -8.270951271057129
    8. ' for' → logprob: -9.020951271057129
    9. ',' → logprob: -9.645951271057129
    10. '
' → logprob: -10.145951271057129

Token 216: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.31920096278190613
    2. 'k' → logprob: -1.6942009925842285
    3. ' b' → logprob: -2.8192009925842285
    4. 'b' → logprob: -3.5692009925842285
    5. ' ' → logprob: -6.8192009925842285
    6. ' ' → logprob: -9.06920051574707
    7. '   ' → logprob: -9.31920051574707
    8. ' a' → logprob: -9.56920051574707
    9. '    ' → logprob: -9.69420051574707
    10. 'a' → logprob: -10.06920051574707

Token 217: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00632192799821496
    2. ' +' → logprob: -5.381321907043457
    3. ' <=' → logprob: -6.881321907043457
    4. '<=' → logprob: -7.506321907043457
    5. '<|end|>' → logprob: -10.756321907043457
    6. ' <' → logprob: -10.881321907043457
    7. '<' → logprob: -11.131321907043457
    8. ' ' → logprob: -11.381321907043457
    9. 'max' → logprob: -11.631321907043457
    10. '<|end|>' → logprob: -11.756321907043457

Token 218: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00022201328829396516
    2. ' ' → logprob: -8.625222206115723
    3. 'b' → logprob: -10.375222206115723
    4. ' b' → logprob: -12.000222206115723
    5. '
' → logprob: -13.875222206115723
    6. '>' → logprob: -14.250222206115723
    7. ',' → logprob: -15.187722206115723
    8. '   ' → logprob: -15.250222206115723
    9. '

' → logprob: -15.312722206115723
    10. ')' → logprob: -15.312722206115723

Token 219: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.02060133032500744
    2. '<=' → logprob: -3.895601272583008
    3. ' ' → logprob: -10.770601272583008
    4. ' >=' → logprob: -11.020601272583008
    5. '<|end|>' → logprob: -12.020601272583008
    6. ' <=",' → logprob: -12.145601272583008
    7. ' ' → logprob: -13.520601272583008
    8. '<' → logprob: -13.645601272583008
    9. ')<=' → logprob: -13.645601272583008
    10. '>=' → logprob: -14.020601272583008

Token 220: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.22542612254619598
    2. ' b' → logprob: -1.6004260778427124
    3. 'self' → logprob: -11.975425720214844
    4. '   ' → logprob: -13.725425720214844
    5. '       ' → logprob: -13.850425720214844
    6. ' ' → logprob: -13.975425720214844
    7. '	b' → logprob: -14.350425720214844
    8. '           ' → logprob: -14.600425720214844
    9. ' ' → logprob: -14.600425720214844
    10. ' self' → logprob: -14.850425720214844

Token 221: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0001375089050270617
    2. 'i' → logprob: -10.375137329101562
    3. '[i' → logprob: -10.625137329101562
    4. ')' → logprob: -10.625137329101562
    5. '       ' → logprob: -11.250137329101562
    6. '[' → logprob: -11.375137329101562
    7. ')_' → logprob: -12.375137329101562
    8. '_' → logprob: -12.500137329101562
    9. '   ' → logprob: -12.875137329101562
    10. 'for' → logprob: -13.000137329101562

Token 222: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.785230278968811
    2. '
' → logprob: -1.035230278968811
    3. '<|end|>' → logprob: -2.1602301597595215
    4. '        
' → logprob: -3.6602301597595215
    5. '<|end|>' → logprob: -3.7852301597595215
    6. ',' → logprob: -4.7852301597595215
    7. ' for' → logprob: -5.9102301597595215
    8. '  
' → logprob: -6.1602301597595215
    9. 'def' → logprob: -6.4102301597595215
    10. '

' → logprob: -6.4102301597595215

Token 223: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06857960671186447
    2. '<|end|>' → logprob: -2.94357967376709
    3. '
' → logprob: -5.31857967376709
    4. '        
' → logprob: -5.56857967376709
    5. '<|end|>' → logprob: -5.94357967376709
    6. 'n' → logprob: -8.19357967376709
    7. ',' → logprob: -8.19357967376709
    8. '\n' → logprob: -8.44357967376709
    9. '#' → logprob: -8.44357967376709
    10. ' for' → logprob: -8.44357967376709

Token 224: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06074250862002373
    2. ' for' → logprob: -3.0607426166534424
    3. 'for' → logprob: -5.685742378234863
    4. '        
' → logprob: -6.310742378234863
    5. ' max' → logprob: -6.935742378234863
    6. ' min' → logprob: -7.435742378234863
    7. '#' (adapté à ' #') → logprob: -7.435742378234863
    8. 'def' → logprob: -7.685742378234863
    9. 'max' → logprob: -7.685742378234863
    10. ' left' → logprob: -7.685742378234863

Token 225: ' Because' (ID: 13602)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5203417539596558
    2. '       ' → logprob: -1.1453417539596558
    3. 'for' → logprob: -3.0203418731689453
    4. ' result' → logprob: -4.270341873168945
    5. 'result' → logprob: -5.270341873168945
    6. ' max' → logprob: -5.770341873168945
    7. 'def' → logprob: -5.895341873168945
    8. ' possible' → logprob: -6.020341873168945
    9. ' def' → logprob: -6.145341873168945
    10. ' k' → logprob: -6.395341873168945

Token 226: ' all' (ID: 722)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.6759092211723328
    2. 'k' → logprob: -1.6759092807769775
    3. ' the' → logprob: -2.1759092807769775
    4. ' we' → logprob: -2.8009092807769775
    5. ' of' → logprob: -3.5509092807769775
    6. ' for' → logprob: -3.6759092807769775
    7. ' each' → logprob: -3.6759092807769775
    8. 'we' → logprob: -4.675909042358398
    9. ' a' → logprob: -5.175909042358398
    10. ' total' → logprob: -5.300909042358398

Token 227: ' selected' (ID: 6386)
  Prédit: ' friends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' friends' → logprob: -0.604539692401886
    2. 'friends' → logprob: -1.1045396327972412
    3. ' constraints' → logprob: -3.479539632797241
    4. ' a' → logprob: -3.979539632797241
    5. ' the' → logprob: -4.22953987121582
    6. 'a' → logprob: -4.35453987121582
    7. ' selected' → logprob: -5.22953987121582
    8. 'selected' → logprob: -5.47953987121582
    9. 'constraints' → logprob: -5.60453987121582
    10. 'friend' → logprob: -5.85453987121582

Token 228: ' friends' (ID: 5664)
  Prédit: ' friends'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' friends' → logprob: -0.21019774675369263
    2. 'friends' → logprob: -1.9601976871490479
    3. '_i' → logprob: -4.585197925567627
    4. '_friend' → logprob: -5.085197925567627
    5. ' i' → logprob: -5.335197925567627
    6. '   ' → logprob: -5.335197925567627
    7. '_f' → logprob: -5.460197925567627
    8. 'i' → logprob: -5.710197925567627
    9. '       ' → logprob: -5.835197925567627
    10. 'friend' → logprob: -6.460197925567627

Token 229: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.6187159419059753
    2. '       ' → logprob: -2.11871600151062
    3. 'must' → logprob: -2.24371600151062
    4. ' have' → logprob: -2.49371600151062
    5. ' are' → logprob: -3.11871600151062
    6. ',' → logprob: -3.36871600151062
    7. ' should' → logprob: -3.74371600151062
    8. '   ' → logprob: -4.493715763092041
    9. ' need' → logprob: -5.118715763092041
    10. ''s' → logprob: -5.118715763092041

Token 230: ' be' (ID: 413)
  Prédit: ' satisfy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' satisfy' → logprob: -1.2928935289382935
    2. ' have' → logprob: -1.4178935289382935
    3. ' be' → logprob: -1.7928935289382935
    4. 'have' → logprob: -2.042893409729004
    5. 's' → logprob: -2.292893409729004
    6. 'be' → logprob: -3.167893409729004
    7. ' also' → logprob: -4.292893409729004
    8. 'also' → logprob: -4.417893409729004
    9. 'agree' → logprob: -4.917893409729004
    10. ' agree' → logprob: -6.417893409729004

Token 231: ' happy' (ID: 7150)
  Prédit: 'happy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'happy' → logprob: -0.6277641654014587
    2. ' happy' → logprob: -1.6277642250061035
    3. ' satisfied' → logprob: -2.1277642250061035
    4. 's' → logprob: -2.3777642250061035
    5. ' invited' → logprob: -3.6277642250061035
    6. 'inv' → logprob: -4.7527642250061035
    7. 'h' → logprob: -4.7527642250061035
    8. '   ' → logprob: -5.8777642250061035
    9. '
' → logprob: -6.6277642250061035
    10. ' ' → logprob: -6.8777642250061035

Token 232: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3330546021461487
    2. ' for' → logprob: -1.458054542541504
    3. '
' → logprob: -4.333054542541504
    4. 'for' → logprob: -4.333054542541504
    5. ',' → logprob: -4.958054542541504
    6. '        
' → logprob: -4.958054542541504
    7. 'def' → logprob: -5.708054542541504
    8. '#' → logprob: -7.083054542541504
    9. ' possible' → logprob: -7.458054542541504
    10. 'possible' → logprob: -7.458054542541504

Token 233: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001054603373631835
    2. ' the' → logprob: -8.626054763793945
    3. '        
' → logprob: -8.751054763793945
    4. ' we' → logprob: -8.876054763793945
    5. '#' → logprob: -9.126054763793945
    6. '   ' → logprob: -9.501054763793945
    7. '        ' → logprob: -9.626054763793945
    8. ' for' → logprob: -9.751054763793945
    9. ',' → logprob: -10.251054763793945
    10. '           ' → logprob: -10.501054763793945

Token 234: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6384902000427246
    2. '#' (adapté à ' #') → logprob: -0.7634902000427246
    3. 'def' → logprob: -5.638490200042725
    4. 'k' → logprob: -7.513490200042725
    5. 'for' → logprob: -7.638490200042725
    6. ' for' → logprob: -8.263490676879883
    7. '   ' → logprob: -8.388490676879883
    8. 'result' → logprob: -8.513490676879883
    9. ' #' → logprob: -8.763490676879883
    10. 'max' → logprob: -9.263490676879883

Token 235: ' k' (ID: 372)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7278236746788025
    2. '       ' → logprob: -1.3528237342834473
    3. ' for' → logprob: -2.1028237342834473
    4. 'for' → logprob: -2.4778237342834473
    5. ' #' → logprob: -4.227823734283447
    6. ' k' → logprob: -4.977823734283447
    7. 'min' → logprob: -5.477823734283447
    8. ' min' → logprob: -5.602823734283447
    9. 'k' → logprob: -5.852823734283447
    10. 'def' → logprob: -6.102823734283447

Token 236: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09112560749053955
    2. ' =' → logprob: -2.84112548828125
    3. ' +' → logprob: -3.84112548828125
    4. '=' → logprob: -6.09112548828125
    5. ' must' → logprob: -6.59112548828125
    6. ' can' → logprob: -6.96612548828125
    7. '   ' → logprob: -7.71612548828125
    8. ' ' → logprob: -8.59112548828125
    9. ' +=' → logprob: -8.84112548828125
    10. 'must' → logprob: -9.09112548828125

Token 237: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015741294249892235
    2. ' ' → logprob: -4.640741348266602
    3. '+' → logprob: -5.140741348266602
    4. ' +' → logprob: -10.390741348266602
    5. '   ' → logprob: -10.765741348266602
    6. '
' → logprob: -11.015741348266602
    7. '>=' → logprob: -11.765741348266602
    8. '```' → logprob: -11.890741348266602
    9. ' >=' → logprob: -12.140741348266602
    10. '<=' → logprob: -12.140741348266602

Token 238: ' must' (ID: 2804)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.27863261103630066
    2. '>=' → logprob: -1.778632640838623
    3. ' <=' → logprob: -2.778632640838623
    4. '<=' → logprob: -4.903632640838623
    5. ' must' → logprob: -6.403632640838623
    6. '       ' → logprob: -6.903632640838623
    7. '        ' → logprob: -7.778632640838623
    8. ' is' → logprob: -8.278632164001465
    9. ')' → logprob: -8.528632164001465
    10. ')>=' → logprob: -8.778632164001465

Token 239: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.06481842696666718
    2. ' >=' → logprob: -3.5648183822631836
    3. '>=' → logprob: -4.064818382263184
    4. 'be' → logprob: -4.314818382263184
    5. ' <=' → logprob: -6.564818382263184
    6. '<=' → logprob: -7.314818382263184
    7. '<|end|>' → logprob: -7.314818382263184
    8. ' satisfy' → logprob: -8.439818382263184
    9. '```' → logprob: -8.439818382263184
    10. 'continue' → logprob: -9.064818382263184

Token 240: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.9694388508796692
    2. '>=' → logprob: -1.5944387912750244
    3. 'greater' → logprob: -2.2194387912750244
    4. '<=' → logprob: -2.5944387912750244
    5. 'at' → logprob: -2.7194387912750244
    6. ' >=' → logprob: -2.8444387912750244
    7. 'less' → logprob: -3.3444387912750244
    8. ' <=' → logprob: -3.8444387912750244
    9. ' greater' → logprob: -4.2194390296936035
    10. ' less' → logprob: -4.2194390296936035

Token 241: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.1018965095281601
    2. ' least' → logprob: -3.1018965244293213
    3. 'most' → logprob: -3.1018965244293213
    4. '   ' → logprob: -5.976896286010742
    5. '_le' → logprob: -6.351896286010742
    6. 'le' → logprob: -7.226896286010742
    7. '       ' → logprob: -7.726896286010742
    8. ' most' → logprob: -8.101896286010742
    9. '    ' → logprob: -8.601896286010742
    10. '```' → logprob: -8.851896286010742

Token 242: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.15085874497890472
    2. ' max' → logprob: -2.0258586406707764
    3. 'min' → logprob: -5.0258588790893555
    4. ' min' → logprob: -6.9008588790893555
    5. 'a' → logprob: -8.400858879089355
    6. '       ' → logprob: -9.025858879089355
    7. 'self' → logprob: -9.025858879089355
    8. 'friend' → logprob: -10.525858879089355
    9. '           ' → logprob: -11.275858879089355
    10. ' a' → logprob: -11.275858879089355

Token 243: ' of' (ID: 328)
  Prédit: '(friend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(friend' → logprob: -0.04789251089096069
    2. '(f' → logprob: -3.4228925704956055
    3. '(a' → logprob: -5.1728925704956055
    4. '([' → logprob: -5.7978925704956055
    5. 'friend' → logprob: -6.0478925704956055
    6. '(const' → logprob: -6.7978925704956055
    7. '(' → logprob: -7.2978925704956055
    8. 'f' → logprob: -7.4228925704956055
    9. '(fi' → logprob: -8.547892570495605
    10. '_friend' → logprob: -8.672892570495605

Token 244: ' a' (ID: 261)
  Prédit: '(friend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(friend' → logprob: -0.40058305859565735
    2. 'friend' → logprob: -1.400583028793335
    3. '[' → logprob: -3.525583028793335
    4. '[f' → logprob: -3.900583028793335
    5. ' friend' → logprob: -4.150583267211914
    6. 'a' → logprob: -5.275583267211914
    7. '[a' → logprob: -5.650583267211914
    8. '(f' → logprob: -5.775583267211914
    9. 'f' → logprob: -6.025583267211914
    10. '[i' → logprob: -7.025583267211914

Token 245: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.029048556461930275
    2. '_constraints' → logprob: -4.404048442840576
    3. '_' → logprob: -5.154048442840576
    4. '_values' → logprob: -5.654048442840576
    5. '_min' → logprob: -5.904048442840576
    6. '_s' → logprob: -6.904048442840576
    7. 's' → logprob: -7.904048442840576
    8. '_list' → logprob: -8.279048919677734
    9. '[i' → logprob: -8.529048919677734
    10. '   ' → logprob: -8.529048919677734

Token 246: ' among' (ID: 6200)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5209575891494751
    2. ' and' → logprob: -1.645957589149475
    3. ',' → logprob: -2.6459574699401855
    4. ' =' → logprob: -2.8959574699401855
    5. '+' → logprob: -3.8959574699401855
    6. '        ' → logprob: -4.3959574699401855
    7. ' +' → logprob: -5.0209574699401855
    8. 'def' → logprob: -5.2709574699401855
    9. 'and' → logprob: -5.3959574699401855
    10. ')' → logprob: -5.3959574699401855

Token 247: ' chosen' (ID: 16180)
  Prédit: 'selected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'selected' → logprob: -0.16849377751350403
    2. ' selected' → logprob: -2.9184937477111816
    3. 'the' → logprob: -3.2934937477111816
    4. ' all' → logprob: -3.9184937477111816
    5. 'self' → logprob: -4.043493747711182
    6. 'all' → logprob: -4.168493747711182
    7. ' the' → logprob: -4.793493747711182
    8. ' self' → logprob: -7.043493747711182
    9. 'them' → logprob: -7.543493747711182
    10. ' them' → logprob: -8.41849422454834

Token 248: ' friends' (ID: 5664)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1717681884765625
    2. ' friends' → logprob: -1.1717681884765625
    3. ' and' → logprob: -2.5467681884765625
    4. 'friends' → logprob: -2.5467681884765625
    5. '_f' → logprob: -2.7967681884765625
    6. '       ' → logprob: -2.7967681884765625
    7. '_s' → logprob: -4.0467681884765625
    8. '   ' → logprob: -4.0467681884765625
    9. ' s' → logprob: -4.1717681884765625
    10. 'and' → logprob: -5.0467681884765625

Token 249: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06221247464418411
    2. ',' → logprob: -3.6872124671936035
    3. ' and' → logprob: -4.4372124671936035
    4. '        
' → logprob: -4.5622124671936035
    5. '```' → logprob: -5.9372124671936035
    6. '<|end|>' → logprob: -5.9372124671936035
    7. '<|end|>' → logprob: -7.0622124671936035
    8. '#' → logprob: -7.4372124671936035
    9. ' for' → logprob: -7.4372124671936035
    10. 'def' → logprob: -7.4372124671936035

Token 250: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4175336956977844
    2. '       ' → logprob: -1.5425336360931396
    3. 'and' → logprob: -2.2925336360931396
    4. '        ' → logprob: -4.042533874511719
    5. '#' → logprob: -6.167533874511719
    6. '        
' → logprob: -6.167533874511719
    7. '<|end|>' → logprob: -6.667533874511719
    8. ' k' → logprob: -7.292533874511719
    9. ' ' → logprob: -7.667533874511719
    10. ' #' → logprob: -8.167533874511719

Token 251: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.3064400851726532
    2. '#' → logprob: -2.1814401149749756
    3. ' k' → logprob: -2.5564401149749756
    4. 'k' → logprob: -3.0564401149749756
    5. 'at' → logprob: -4.4314398765563965
    6. '       ' → logprob: -4.9314398765563965
    7. ' #' → logprob: -5.3064398765563965
    8. ' less' → logprob: -7.0564398765563965
    9. '        ' → logprob: -7.8064398765563965
    10. ' ' → logprob: -8.181440353393555

Token 252: ' most' (ID: 1645)
  Prédit: 'most'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'most' → logprob: -0.018266761675477028
    2. ' most' → logprob: -4.018266677856445
    3. 'Most' → logprob: -9.268266677856445
    4. 'max' → logprob: -11.143266677856445
    5. '
' → logprob: -13.143266677856445
    6. 'at' → logprob: -13.643266677856445
    7. '#' → logprob: -14.518266677856445
    8. '   ' → logprob: -14.643266677856445
    9. 'mos' → logprob: -14.643266677856445
    10. '
' → logprob: -14.643266677856445

Token 253: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.054983269423246384
    2. 'min' → logprob: -2.929983377456665
    3. ' max' → logprob: -9.429983139038086
    4. 'max' → logprob: -11.179983139038086
    5. '   ' → logprob: -13.179983139038086
    6. '	min' → logprob: -13.429983139038086
    7. ' ' → logprob: -13.804983139038086
    8. '       ' → logprob: -14.554983139038086
    9. ' the' → logprob: -15.554983139038086
    10. '  ' → logprob: -15.554983139038086

Token 254: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.10673269629478455
    2. 'of' → logprob: -2.3567326068878174
    3. '       ' → logprob: -5.2317328453063965
    4. '_' → logprob: -8.231732368469238
    5. '_of' → logprob: -8.356732368469238
    6. '   ' → logprob: -8.606732368469238
    7. '_i' → logprob: -8.856732368469238
    8. '(' → logprob: -9.481732368469238
    9. ' ' → logprob: -10.231732368469238
    10. '	of' → logprob: -10.356732368469238

Token 255: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5761827230453491
    2. 'b' → logprob: -0.8261827230453491
    3. ' ' → logprob: -9.32618236541748
    4. '   ' → logprob: -10.32618236541748
    5. '(b' → logprob: -10.57618236541748
    6. '[b' → logprob: -10.57618236541748
    7. '[' → logprob: -10.70118236541748
    8. ' [' → logprob: -11.32618236541748
    9. ' (' → logprob: -11.57618236541748
    10. '  ' → logprob: -12.57618236541748

Token 256: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -2.6537622034084052e-05
    2. ' _' → logprob: -11.25002670288086
    3. '```' → logprob: -12.50002670288086
    4. '_' → logprob: -12.62502670288086
    5. '_ai' → logprob: -13.62502670288086
    6. '_f' → logprob: -13.62502670288086
    7. ')_' → logprob: -14.12502670288086
    8. '   ' → logprob: -14.25002670288086
    9. '}_' → logprob: -14.37502670288086
    10. '_people' → logprob: -15.00002670288086

Token 257: ' among' (ID: 6200)
  Prédit: ' among'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' among' → logprob: -0.052198074758052826
    2. '       ' → logprob: -3.8021981716156006
    3. 'among' → logprob: -4.1771979331970215
    4. '
' → logprob: -6.0521979331970215
    5. '        
' → logprob: -6.3021979331970215
    6. '   ' → logprob: -6.4271979331970215
    7. '_' → logprob: -6.6771979331970215
    8. 'Among' → logprob: -7.1771979331970215
    9. ' ' → logprob: -7.5521979331970215
    10. '_i' → logprob: -7.6771979331970215

Token 258: ' chosen' (ID: 16180)
  Prédit: 'chosen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chosen' → logprob: -0.632827639579773
    2. ' chosen' → logprob: -0.757827639579773
    3. 'selected' → logprob: -10.257827758789062
    4. ' selected' → logprob: -10.257827758789062
    5. 'the' → logprob: -10.757827758789062
    6. ' the' → logprob: -10.882827758789062
    7. ' chos' → logprob: -10.882827758789062
    8. '```' → logprob: -11.007827758789062
    9. '   ' → logprob: -11.382827758789062
    10. ' them' → logprob: -11.507827758789062

Token 259: ' friends' (ID: 5664)
  Prédit: 'friends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'friends' → logprob: -0.35342925786972046
    2. '_f' → logprob: -1.3534293174743652
    3. ' friends' → logprob: -3.4784293174743652
    4. '```' → logprob: -5.978429317474365
    5. '_friend' → logprob: -6.478429317474365
    6. '   ' → logprob: -7.228429317474365
    7. 'friend' → logprob: -7.728429317474365
    8. '_i' → logprob: -7.853429317474365
    9. '       ' → logprob: -7.853429317474365
    10. ')' → logprob: -8.103428840637207

Token 260: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11163420975208282
    2. '<|end|>' → logprob: -3.2366342544555664
    3. '
' → logprob: -3.6116342544555664
    4. '        
' → logprob: -3.8616342544555664
    5. ',' → logprob: -4.986634254455566
    6. '<|end|>' → logprob: -5.486634254455566
    7. '.' → logprob: -6.361634254455566
    8. ')' → logprob: -7.361634254455566
    9. '  
' → logprob: -7.611634254455566
    10. '#' → logprob: -7.736634254455566

Token 261: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020276285707950592
    2. ' for' → logprob: -4.270276069641113
    3. '        
' → logprob: -5.645276069641113
    4. '
' → logprob: -6.520276069641113
    5. 'for' → logprob: -7.895276069641113
    6. '#' → logprob: -8.895276069641113
    7. '<|end|>' → logprob: -9.270276069641113
    8. '  
' → logprob: -9.520276069641113
    9. '   ' → logprob: -10.020276069641113
    10. ' 
' → logprob: -10.020276069641113

Token 262: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20310260355472565
    2. ' for' → logprob: -2.5781025886535645
    3. 'result' → logprob: -3.7031025886535645
    4. 'max' → logprob: -3.7031025886535645
    5. '       ' → logprob: -4.3281025886535645
    6. 'left' → logprob: -4.4531025886535645
    7. 'possible' → logprob: -4.7031025886535645
    8. 'low' → logprob: -5.3281025886535645
    9. ' result' → logprob: -5.7031025886535645
    10. 'best' → logprob: -5.8281025886535645

Token 263: ' Approach' (ID: 86383)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3447657823562622
    2. 'left' → logprob: -1.4697657823562622
    3. 'low' → logprob: -1.9697657823562622
    4. 'max' → logprob: -2.2197656631469727
    5. 'best' → logprob: -2.3447656631469727
    6. 'possible' → logprob: -2.9697656631469727
    7. 'result' → logprob: -3.5947656631469727
    8. 'def' → logprob: -3.9697656631469727
    9. 'lo' → logprob: -4.719765663146973
    10. ' left' → logprob: -4.844765663146973

Token 264: ':' (ID: 25)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1718575358390808
    2. '       ' → logprob: -2.1718575954437256
    3. 'for' → logprob: -3.6718575954437256
    4. ' left' → logprob: -5.4218573570251465
    5. ':' → logprob: -5.7968573570251465
    6. ' =' → logprob: -6.5468573570251465
    7. '
' → logprob: -6.6718573570251465
    8. '        ' → logprob: -7.2968573570251465
    9. 'def' → logprob: -7.2968573570251465
    10. ' def' → logprob: -7.4218573570251465

Token 265: ' since' (ID: 3630)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.48755505681037903
    2. ' max' → logprob: -2.1125550270080566
    3. ' result' → logprob: -2.1125550270080566
    4. ' best' → logprob: -2.8625550270080566
    5. 'for' → logprob: -3.3625550270080566
    6. ' left' → logprob: -3.9875550270080566
    7. '       ' → logprob: -4.862555027008057
    8. 'max' → logprob: -5.487555027008057
    9. 'result' → logprob: -5.737555027008057
    10. ' low' → logprob: -5.862555027008057

Token 266: ' we' (ID: 581)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.9676766395568848
    2. ' N' → logprob: -1.2176766395568848
    3. 'N' → logprob: -2.2176766395568848
    4. 'k' → logprob: -2.7176766395568848
    5. ' the' → logprob: -3.0926766395568848
    6. '       ' → logprob: -3.8426766395568848
    7. '   ' → logprob: -4.342676639556885
    8. ' we' → logprob: -4.467676639556885
    9. ' for' → logprob: -4.717676639556885
    10. 'the' → logprob: -4.717676639556885

Token 267: ' want' (ID: 1682)
  Prédit: ' have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' have' → logprob: -1.1169649362564087
    2. ' can' → logprob: -1.2419649362564087
    3. 'have' → logprob: -1.9919649362564087
    4. ' know' → logprob: -2.491964817047119
    5. ' want' → logprob: -2.866964817047119
    6. ' only' → logprob: -3.366964817047119
    7. 'know' → logprob: -3.366964817047119
    8. 'can' → logprob: -4.366964817047119
    9. 'want' → logprob: -4.866964817047119
    10. '       ' → logprob: -5.741964817047119

Token 268: ' max' (ID: 2999)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.01727287285029888
    2. 'to' → logprob: -4.14227294921875
    3. ' the' → logprob: -7.89227294921875
    4. ' k' → logprob: -8.76727294921875
    5. 'max' → logprob: -8.89227294921875
    6. ' a' → logprob: -9.01727294921875
    7. '
' → logprob: -9.26727294921875
    8. '   ' → logprob: -9.64227294921875
    9. ' ' → logprob: -9.76727294921875
    10. 'def' → logprob: -9.89227294921875

Token 269: ' k' (ID: 372)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.214931920170784
    2. '_inv' → logprob: -2.4649319648742676
    3. '_' → logprob: -2.9649319648742676
    4. ' k' → logprob: -3.0899319648742676
    5. 'k' → logprob: -5.964931964874268
    6. 'imize' → logprob: -6.089931964874268
    7. '_possible' → logprob: -6.714931964874268
    8. ' possible' → logprob: -7.214931964874268
    9. ' _' → logprob: -7.214931964874268
    10. 'imum' → logprob: -7.714931964874268

Token 270: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15924157202243805
    2. ' ,' → logprob: -3.5342416763305664
    3. ',
' → logprob: -3.5342416763305664
    4. '       ' → logprob: -3.6592416763305664
    5. ' =' → logprob: -4.159241676330566
    6. ' from' → logprob: -4.659241676330566
    7. ' possible' → logprob: -5.159241676330566
    8. '=' → logprob: -5.284241676330566
    9. ' for' → logprob: -5.534241676330566
    10. '   ' → logprob: -5.909241676330566

Token 271: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5773937702178955
    2. ' for' → logprob: -1.2023937702178955
    3. ' we' → logprob: -2.5773937702178955
    4. ' find' → logprob: -4.327393531799316
    5. ' let's' → logprob: -4.452393531799316
    6. ' k' → logprob: -4.577393531799316
    7. ' try' → logprob: -5.452393531799316
    8. ' consider' → logprob: -5.452393531799316
    9. ' let' → logprob: -5.952393531799316
    10. ' possible' → logprob: -5.952393531799316

Token 272: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.24061526358127594
    2. 'for' → logprob: -2.8656153678894043
    3. '       ' → logprob: -2.9906153678894043
    4. ' k' → logprob: -3.2406153678894043
    5. ' left' → logprob: -4.365615367889404
    6. ' max' → logprob: -4.615615367889404
    7. ' best' → logprob: -4.740615367889404
    8. '
' → logprob: -4.865615367889404
    9. ' possible' → logprob: -4.865615367889404
    10. 'max' → logprob: -6.240615367889404

Token 273: ' we' (ID: 581)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.13763068616390228
    2. 'for' → logprob: -2.2626307010650635
    3. ' left' → logprob: -5.137630462646484
    4. ' max' → logprob: -5.137630462646484
    5. ' result' → logprob: -5.887630462646484
    6. ' lo' → logprob: -6.137630462646484
    7. ' low' → logprob: -6.137630462646484
    8. 'max' → logprob: -7.012630462646484
    9. '       ' → logprob: -7.137630462646484
    10. ' possible' → logprob: -7.387630462646484

Token 274: ' test' (ID: 1746)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.19108611345291138
    2. ' for' → logprob: -2.6910860538482666
    3. ' try' → logprob: -2.8160860538482666
    4. ' check' → logprob: -4.691086292266846
    5. ' iterate' → logprob: -5.066086292266846
    6. ' should' → logprob: -5.316086292266846
    7. 'for' → logprob: -5.316086292266846
    8. ' def' → logprob: -5.566086292266846
    9. 'can' → logprob: -5.566086292266846
    10. ' could' → logprob: -6.066086292266846

Token 275: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.20581841468811035
    2. 'k' → logprob: -1.8308184146881104
    3. ' for' → logprob: -3.8308184146881104
    4. 'for' → logprob: -5.830818176269531
    5. ' from' → logprob: -7.580818176269531
    6. ' possible' → logprob: -8.330818176269531
    7. 'from' → logprob: -8.455818176269531
    8. '   ' → logprob: -9.830818176269531
    9. 'possible' → logprob: -9.955818176269531
    10. ' ' → logprob: -11.580818176269531

Token 276: ' from' (ID: 591)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3152196705341339
    2. 'from' → logprob: -2.0652196407318115
    3. ' from' → logprob: -2.3152196407318115
    4. ' =' → logprob: -3.9402196407318115
    5. '=' → logprob: -4.190219879150391
    6. 'in' → logprob: -4.815219879150391
    7. ' ' → logprob: -6.940219879150391
    8. ' for' → logprob: -7.565219879150391
    9. 's' → logprob: -8.44021987915039
    10. 'for' → logprob: -8.81521987915039

Token 277: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0009359975229017437
    2. ' N' → logprob: -7.000936031341553
    3. '0' → logprob: -10.625935554504395
    4. 'len' → logprob: -16.25093650817871
    5. 'n' → logprob: -17.00093650817871
    6. ' ' → logprob: -17.37593650817871
    7. '1' → logprob: -17.50093650817871
    8. '   ' → logprob: -18.12593650817871
    9. '
' → logprob: -18.37593650817871
    10. '	N' → logprob: -18.75093650817871

Token 278: ' down' (ID: 1917)
  Prédit: ' down'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' down' → logprob: -0.06865808367729187
    2. 'down' → logprob: -2.9436581134796143
    3. ' to' → logprob: -5.068657875061035
    4. ',' → logprob: -5.818657875061035
    5. 'to' → logprob: -5.943657875061035
    6. ' ' → logprob: -6.443657875061035
    7. 'dow' → logprob: -9.568657875061035
    8. ' downward' → logprob: -10.318657875061035
    9. ' dow' → logprob: -10.693657875061035
    10. '
' → logprob: -10.818657875061035

Token 279: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.06370333582162857
    2. ' to' → logprob: -2.8137032985687256
    3. '       ' → logprob: -6.938703536987305
    4. 'wards' → logprob: -8.313703536987305
    5. '_to' → logprob: -8.438703536987305
    6. '   ' → logprob: -8.688703536987305
    7. ' ' → logprob: -11.063703536987305
    8. '    ' → logprob: -11.188703536987305
    9. '        ' → logprob: -11.313703536987305
    10. '=' → logprob: -11.438703536987305

Token 280: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007630754727870226
    2. '1' → logprob: -5.132630825042725
    3. ' ' → logprob: -6.382630825042725
    4. '   ' → logprob: -11.632630348205566
    5. '       ' → logprob: -14.757630348205566
    6. '```' → logprob: -15.007630348205566
    7. '
' → logprob: -16.507631301879883
    8. '    ' → logprob: -16.820131301879883
    9. '           ' → logprob: -16.820131301879883
    10. '  ' → logprob: -17.507631301879883

Token 281: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009132515988312662
    2. '1' → logprob: -7.000913143157959
    3. ' ' → logprob: -13.250913619995117
    4. '   ' → logprob: -18.250913619995117
    5. '```' → logprob: -18.250913619995117
    6. '
' → logprob: -18.875913619995117
    7. '۰' → logprob: -21.750913619995117
    8. '``' → logprob: -22.000913619995117
    9. 'zero' → logprob: -22.125913619995117
    10. '

' → logprob: -22.375913619995117

Token 282: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06654281169176102
    2. ':' → logprob: -3.066542863845825
    3. '
' → logprob: -5.191542625427246
    4. ' for' → logprob: -5.441542625427246
    5. ',' → logprob: -5.816542625427246
    6. ':
' → logprob: -6.066542625427246
    7. '        
' → logprob: -6.691542625427246
    8. '   ' → logprob: -8.066542625427246
    9. 'for' → logprob: -8.191542625427246
    10. '.' → logprob: -9.441542625427246

Token 283: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1367713063955307
    2. ' for' → logprob: -2.2617712020874023
    3. '        
' → logprob: -5.011771202087402
    4. '        ' → logprob: -6.011771202087402
    5. 'for' → logprob: -6.011771202087402
    6. '
' → logprob: -6.011771202087402
    7. ' ' → logprob: -6.136771202087402
    8. ' and' → logprob: -6.511771202087402
    9. '   ' → logprob: -6.761771202087402
    10. ' 
' → logprob: -7.261771202087402

Token 284: ' each' (ID: 2454)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.014561965130269527
    2. 'k' → logprob: -4.264562129974365
    3. ' each' → logprob: -8.889561653137207
    4. ' possible' → logprob: -9.514561653137207
    5. ' ' → logprob: -9.889561653137207
    6. ' friend' → logprob: -10.389561653137207
    7. '   ' → logprob: -10.639561653137207
    8. ' the' → logprob: -10.889561653137207
    9. '```' → logprob: -11.264561653137207
    10. ' friends' → logprob: -12.139561653137207

Token 285: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.07952888309955597
    2. 'k' → logprob: -2.57952880859375
    3. ' ' → logprob: -8.45452880859375
    4. '```' → logprob: -9.32952880859375
    5. ' 
' → logprob: -9.45452880859375
    6. ' friend' → logprob: -9.70452880859375
    7. ')' → logprob: -10.57952880859375
    8. '
' → logprob: -10.82952880859375
    9. '	k' → logprob: -10.95452880859375
    10. 'friend' → logprob: -11.07952880859375

Token 286: ' check' (ID: 2371)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023399215191602707
    2. ',' → logprob: -4.023399353027344
    3. '       ' → logprob: -5.523399353027344
    4. ':
' → logprob: -7.023399353027344
    5. ' :' → logprob: -9.398399353027344
    6. '):' → logprob: -9.398399353027344
    7. ' in' → logprob: -10.398399353027344
    8. ' for' → logprob: -10.523399353027344
    9. '.' → logprob: -10.648399353027344
    10. '   ' → logprob: -10.773399353027344

Token 287: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.014025876298546791
    2. ' ' → logprob: -5.139025688171387
    3. ' whether' → logprob: -6.139025688171387
    4. ' all' → logprob: -6.639025688171387
    5. '    ' → logprob: -6.764025688171387
    6. ' for' → logprob: -7.389025688171387
    7. 'if' → logprob: -7.514025688171387
    8. ' ' → logprob: -8.139025688171387
    9. '   ' → logprob: -8.139025688171387
    10. '       ' → logprob: -8.389025688171387

Token 288: ' there' (ID: 1354)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.8222330212593079
    2. ' all' → logprob: -1.072232961654663
    3. ' there' → logprob: -2.197232961654663
    4. 'any' → logprob: -3.447232961654663
    5. 'all' → logprob: -3.572232961654663
    6. ' k' → logprob: -4.072233200073242
    7. 'there' → logprob: -4.322233200073242
    8. ' self' → logprob: -4.697233200073242
    9. 'self' → logprob: -5.822233200073242
    10. 'k' → logprob: -6.697233200073242

Token 289: ' are' (ID: 553)
  Prédit: ' exists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' exists' → logprob: -0.43631428480148315
    2. 'exists' → logprob: -1.311314344406128
    3. ' is' → logprob: -3.061314344406128
    4. 'is' → logprob: -3.311314344406128
    5. '```' → logprob: -7.686314105987549
    6. ''s' → logprob: -8.686314582824707
    7. ' exist' → logprob: -9.811314582824707
    8. '_exists' → logprob: -10.061314582824707
    9. 'exist' → logprob: -10.311314582824707
    10. ' ' → logprob: -11.436314582824707

Token 290: ' at' (ID: 540)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.0774390697479248
    2. 'k' → logprob: -2.702439069747925
    3. ' subsets' → logprob: -5.577439308166504
    4. ' a' → logprob: -6.827439308166504
    5. ' any' → logprob: -7.077439308166504
    6. ' friends' → logprob: -7.452439308166504
    7. ' at' → logprob: -8.077439308166504
    8. ' combinations' → logprob: -8.327439308166504
    9. ' enough' → logprob: -8.577439308166504
    10. ' exactly' → logprob: -8.702439308166504

Token 291: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.027190743014216423
    2. ' least' → logprob: -3.652190685272217
    3. '   ' → logprob: -8.402191162109375
    4. '```' → logprob: -8.652191162109375
    5. 'k' → logprob: -8.902191162109375
    6. 'le' → logprob: -9.527191162109375
    7. '_le' → logprob: -9.777191162109375
    8. 'lest' → logprob: -9.777191162109375
    9. 'l' → logprob: -10.027191162109375
    10. '       ' → logprob: -10.777191162109375

Token 292: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.47408562898635864
    2. 'k' → logprob: -0.9740856289863586
    3. ' ' → logprob: -12.724085807800293
    4. '(k' → logprob: -13.724085807800293
    5. '[k' → logprob: -13.849085807800293
    6. '_k' → logprob: -14.099085807800293
    7. '    ' → logprob: -14.724085807800293
    8. '
' → logprob: -14.974085807800293
    9. '```' → logprob: -15.224085807800293
    10. ' (' → logprob: -15.349085807800293

Token 293: ' friends' (ID: 5664)
  Prédit: ' friends'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' friends' → logprob: -0.027616648003458977
    2. 'friends' → logprob: -3.7776167392730713
    3. '+' → logprob: -5.527616500854492
    4. 'friend' → logprob: -9.027616500854492
    5. ' friend' → logprob: -9.402616500854492
    6. ' +' → logprob: -10.527616500854492
    7. '_friend' → logprob: -10.777616500854492
    8. ' indices' → logprob: -11.277616500854492
    9. ' ' → logprob: -11.402616500854492
    10. ' of' → logprob: -11.652616500854492

Token 294: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5717743635177612
    2. '       ' → logprob: -1.9467743635177612
    3. ' such' → logprob: -2.571774482727051
    4. ' that' → logprob: -2.821774482727051
    5. ' whose' → logprob: -3.071774482727051
    6. ' with' → logprob: -3.196774482727051
    7. ',' → logprob: -3.821774482727051
    8. ' who' → logprob: -3.946774482727051
    9. ' for' → logprob: -5.446774482727051
    10. ' to' → logprob: -5.571774482727051

Token 295: ' a' (ID: 261)
  Prédit: 'constraint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'constraint' → logprob: -0.038360465317964554
    2. ' constraint' → logprob: -3.413360357284546
    3. 'constraints' → logprob: -6.038360595703125
    4. ' constraints' → logprob: -7.663360595703125
    5. 'self' → logprob: -7.913360595703125
    6. 'min' → logprob: -7.913360595703125
    7. 'a' → logprob: -8.038360595703125
    8. '.constraint' → logprob: -8.663360595703125
    9. ' a' → logprob: -8.788360595703125
    10. 'range' → logprob: -9.163360595703125

Token 296: '_i' (ID: 10853)
  Prédit: '.constraint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.constraint' → logprob: -0.8345333933830261
    2. '.min' → logprob: -1.209533452987671
    3. 'min' → logprob: -1.834533452987671
    4. '_i' → logprob: -3.209533452987671
    5. 'constraint' → logprob: -3.709533452987671
    6. '_min' → logprob: -4.459533214569092
    7. '.max' → logprob: -5.334533214569092
    8. 'max' → logprob: -5.334533214569092
    9. ' min' → logprob: -5.334533214569092
    10. '_constraint' → logprob: -5.834533214569092

Token 297: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.07026495784521103
    2. '<=' → logprob: -2.695265054702759
    3. ']<=' → logprob: -9.82026481628418
    4. '<|end|>' → logprob: -10.32026481628418
    5. 'le' → logprob: -10.44526481628418
    6. ')<=' → logprob: -10.57026481628418
    7. ' ≤' → logprob: -11.07026481628418
    8. ' ' → logprob: -11.07026481628418
    9. ' <=",' → logprob: -11.19526481628418
    10. ',' → logprob: -11.44526481628418

Token 298: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.09530776739120483
    2. ' k' → logprob: -2.4703078269958496
    3. ' (' → logprob: -5.97030782699585
    4. '(k' → logprob: -6.47030782699585
    5. '(' → logprob: -6.72030782699585
    6. '
' → logprob: -7.59530782699585
    7. ' ' → logprob: -8.470307350158691
    8. '1' → logprob: -9.095307350158691
    9. '_k' → logprob: -9.845307350158691
    10. '

' → logprob: -11.220307350158691

Token 299: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03369353339076042
    2. ' +' → logprob: -3.408693552017212
    3. '<|end|>' → logprob: -11.283693313598633
    4. '+
' → logprob: -11.658693313598633
    5. ' plus' → logprob: -12.658693313598633
    6. 's' → logprob: -12.658693313598633
    7. ' and' → logprob: -12.908693313598633
    8. '```' → logprob: -13.158693313598633
    9. 'plus' → logprob: -13.408693313598633
    10. 'and' → logprob: -13.408693313598633

Token 300: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011965957470238209
    2. '+' → logprob: -4.511965751647949
    3. ' ' → logprob: -7.136965751647949
    4. ' +' → logprob: -10.01196575164795
    5. '<|end|>' → logprob: -10.51196575164795
    6. 'and' → logprob: -11.76196575164795
    7. '0' → logprob: -12.13696575164795
    8. '[' → logprob: -12.13696575164795
    9. ')' → logprob: -12.76196575164795
    10. '
' → logprob: -12.82446575164795

Token 301: ' <=' (ID: 5017)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.014880307018756866
    2. 'and' → logprob: -5.639880180358887
    3. ' for' → logprob: -5.764880180358887
    4. ',' → logprob: -5.889880180358887
    5. ' ' → logprob: -6.264880180358887
    6. '       ' → logprob: -6.639880180358887
    7. '        ' → logprob: -7.139880180358887
    8. ' ,' → logprob: -7.639880180358887
    9. ' that' → logprob: -8.889880180358887
    10. ' to' → logprob: -8.889880180358887

Token 302: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5231521129608154
    2. ' b' → logprob: -0.8981521129608154
    3. 'friend' → logprob: -11.773152351379395
    4. ' friend' → logprob: -12.398152351379395
    5. ' friends' → logprob: -12.523152351379395
    6. '_b' → logprob: -12.898152351379395
    7. '
' → logprob: -13.023152351379395
    8. ' ' → logprob: -13.523152351379395
    9. 'friends' → logprob: -13.523152351379395
    10. '	b' → logprob: -13.773152351379395

Token 303: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00013882013445254415
    2. ')' → logprob: -10.750139236450195
    3. 's' → logprob: -11.375139236450195
    4. ')_' → logprob: -11.375139236450195
    5. '```' → logprob: -11.500139236450195
    6. '_a' → logprob: -11.750139236450195
    7. '_k' → logprob: -12.000139236450195
    8. '}_' → logprob: -12.000139236450195
    9. '
' → logprob: -12.125139236450195
    10. ' _' → logprob: -12.125139236450195

Token 304: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.061628129333257675
    2. ' for' → logprob: -3.6866281032562256
    3. ':' → logprob: -4.311628341674805
    4. '
' → logprob: -4.686628341674805
    5. '        
' → logprob: -5.686628341674805
    6. ',' → logprob: -5.811628341674805
    7. 'for' → logprob: -6.061628341674805
    8. '.' → logprob: -7.186628341674805
    9. ' and' → logprob: -7.561628341674805
    10. 'def' → logprob: -7.561628341674805

Token 305: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024099210277199745
    2. ' for' → logprob: -3.774099111557007
    3. 'for' → logprob: -7.399099349975586
    4. '        
' → logprob: -9.024099349975586
    5. '        ' → logprob: -10.399099349975586
    6. '           ' → logprob: -10.649099349975586
    7. '
' → logprob: -10.649099349975586
    8. '   ' → logprob: -11.399099349975586
    9. ',' → logprob: -12.024099349975586
    10. '      ' → logprob: -12.649099349975586

Token 306: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48666879534721375
    2. ' for' → logprob: -1.2366688251495361
    3. 'for' → logprob: -2.361668825149536
    4. '
' → logprob: -7.361668586730957
    5. '   ' → logprob: -10.486668586730957
    6. '        
' → logprob: -10.486668586730957
    7. ' ' → logprob: -12.486668586730957
    8. '        ' → logprob: -12.486668586730957
    9. 'def' → logprob: -12.611668586730957
    10. '```' → logprob: -12.736668586730957

Token 307: ' To' (ID: 2514)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0027203490026295185
    2. ' for' → logprob: -6.002720355987549
    3. 'k' → logprob: -8.75271987915039
    4. '       ' → logprob: -10.62771987915039
    5. 'possible' → logprob: -10.75271987915039
    6. 'def' → logprob: -11.25271987915039
    7. 'total' → logprob: -11.75271987915039
    8. '   ' → logprob: -11.87771987915039
    9. 'max' → logprob: -12.12771987915039
    10. 'inv' → logprob: -13.25271987915039

Token 308: ' optimise' (ID: 143741)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.4138258695602417
    2. 'check' → logprob: -1.5388258695602417
    3. 'test' → logprob: -1.9138258695602417
    4. ' test' → logprob: -2.6638259887695312
    5. ' check' → logprob: -3.1638259887695312
    6. 'for' → logprob: -3.2888259887695312
    7. 'invite' → logprob: -3.4138259887695312
    8. ' def' → logprob: -3.5388259887695312
    9. 'range' → logprob: -3.5388259887695312
    10. 'continue' → logprob: -4.038825988769531

Token 309: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06623859703540802
    2. ' the' → logprob: -4.0662384033203125
    3. ' ,' → logprob: -4.0662384033203125
    4. 'the' → logprob: -4.9412384033203125
    5. 'self' → logprob: -4.9412384033203125
    6. ' this' → logprob: -5.8162384033203125
    7. 'this' → logprob: -6.4412384033203125
    8. 'possible' → logprob: -6.5662384033203125
    9. ' self' → logprob: -6.6912384033203125
    10. 'we' → logprob: -6.9412384033203125

Token 310: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05490947514772415
    2. ' sorted' → logprob: -4.304909706115723
    3. ' for' → logprob: -5.179909706115723
    4. ' valid' → logprob: -5.429909706115723
    5. ' possible' → logprob: -5.679909706115723
    6. ' counts' → logprob: -5.804909706115723
    7. '        ' → logprob: -5.804909706115723
    8. ' from' → logprob: -5.804909706115723
    9. ' sort' → logprob: -6.179909706115723
    10. '#' → logprob: -6.554909706115723

Token 311: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.269612193107605
    2. 'for' → logprob: -1.269612193107605
    3. 'possible' → logprob: -2.0196123123168945
    4. '       ' → logprob: -3.3946123123168945
    5. ' possible' → logprob: -3.3946123123168945
    6. ' valid' → logprob: -3.6446123123168945
    7. 'valid' → logprob: -3.7696123123168945
    8. ' counts' → logprob: -3.8946123123168945
    9. 'count' → logprob: -4.0196123123168945
    10. 'counts' → logprob: -4.1446123123168945

Token 312: ' For' (ID: 2214)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -1.3288795948028564
    2. 'possible' → logprob: -1.3288795948028564
    3. 'min' → logprob: -2.3288795948028564
    4. 'for' → logprob: -2.7038795948028564
    5. 'from' → logprob: -2.9538795948028564
    6. '#' → logprob: -3.3288795948028564
    7. 'counts' → logprob: -3.8288795948028564
    8. 'count' → logprob: -3.9538795948028564
    9. 'c' → logprob: -3.9538795948028564
    10. ' min' → logprob: -4.203879356384277

Token 313: ' each' (ID: 2454)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5698173642158508
    2. 'k' → logprob: -1.069817304611206
    3. ' each' → logprob: -3.569817304611206
    4. 'each' → logprob: -3.694817304611206
    5. 'a' → logprob: -4.444817543029785
    6. ' a' → logprob: -4.694817543029785
    7. ' friend' → logprob: -5.069817543029785
    8. 'friend' → logprob: -5.569817543029785
    9. ' i' → logprob: -6.944817543029785
    10. 'i' → logprob: -7.069817543029785

Token 314: ' friend' (ID: 5168)
  Prédit: ' friend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' friend' → logprob: -0.25242137908935547
    2. 'friend' → logprob: -1.5024213790893555
    3. ' i' → logprob: -9.252421379089355
    4. ' f' → logprob: -9.377421379089355
    5. 'f' → logprob: -9.502421379089355
    6. ' a' → logprob: -9.877421379089355
    7. 'i' → logprob: -10.252421379089355
    8. ' k' → logprob: -10.502421379089355
    9. 'a' → logprob: -11.002421379089355
    10. '_friend' → logprob: -11.127421379089355

Token 315: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018127942457795143
    2. 'constraint' → logprob: -5.393127918243408
    3. ':' → logprob: -5.518127918243408
    4. '   ' → logprob: -6.018127918243408
    5. ' ,' → logprob: -6.018127918243408
    6. ''s' → logprob: -7.143127918243408
    7. '       ' → logprob: -7.143127918243408
    8. 'a' → logprob: -7.768127918243408
    9. ' constraint' → logprob: -8.143128395080566
    10. ' i' → logprob: -8.143128395080566

Token 316: ' can' (ID: 665)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1275980919599533
    2. 'min' → logprob: -2.6275980472564697
    3. ' a' → logprob: -3.5025980472564697
    4. 'we' → logprob: -5.752598285675049
    5. ' min' → logprob: -5.877598285675049
    6. '#' → logprob: -5.877598285675049
    7. '       ' → logprob: -6.502598285675049
    8. 'check' → logprob: -6.877598285675049
    9. 'valid' → logprob: -6.877598285675049
    10. 'lower' → logprob: -7.002598285675049

Token 317: ' they' (ID: 1023)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''s' → logprob: -1.0830326080322266
    2. ''t' → logprob: -1.5830326080322266
    3. ' be' → logprob: -1.8330326080322266
    4. '   ' → logprob: -2.5830326080322266
    5. ' have' → logprob: -3.4580326080322266
    6. '       ' → logprob: -3.5830326080322266
    7. '_have' → logprob: -3.5830326080322266
    8. ''' → logprob: -4.208032608032227
    9. 'not' → logprob: -4.333032608032227
    10. 'have' → logprob: -4.458032608032227

Token 318: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.18674547970294952
    2. 'be' → logprob: -1.936745524406433
    3. ' satisfy' → logprob: -4.561745643615723
    4. ' attend' → logprob: -5.811745643615723
    5. 's' → logprob: -6.186745643615723
    6. 'accept' → logprob: -6.186745643615723
    7. 'particip' → logprob: -6.936745643615723
    8. ' accept' → logprob: -6.936745643615723
    9. ' participate' → logprob: -7.061745643615723
    10. ' have' → logprob: -7.186745643615723

Token 319: ' happy' (ID: 7150)
  Prédit: ' invited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' invited' → logprob: -0.5956865549087524
    2. 'inv' → logprob: -1.3456865549087524
    3. ' satisfied' → logprob: -2.345686435699463
    4. 's' → logprob: -3.095686435699463
    5. 'happy' → logprob: -4.095686435699463
    6. 'included' → logprob: -4.220686435699463
    7. ' happy' → logprob: -5.845686435699463
    8. '_inv' → logprob: -6.095686435699463
    9. 'selected' → logprob: -6.095686435699463
    10. ' ' → logprob: -6.720686435699463

Token 320: ' with' (ID: 483)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7236121296882629
    2. ' with' → logprob: -1.3486120700836182
    3. 'with' → logprob: -2.223612070083618
    4. 'if' → logprob: -2.723612070083618
    5. ' for' → logprob: -3.098612070083618
    6. 'for' → logprob: -3.723612070083618
    7. ' at' → logprob: -5.598612308502197
    8. ' ' → logprob: -6.098612308502197
    9. '   ' → logprob: -6.223612308502197
    10. ' when' → logprob: -6.598612308502197

Token 321: ' total' (ID: 3609)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.38939183950424194
    2. 'k' → logprob: -1.1393918991088867
    3. ' the' → logprob: -6.889391899108887
    4. ' total' → logprob: -8.264391899108887
    5. ' a' → logprob: -8.389391899108887
    6. 'the' → logprob: -8.389391899108887
    7. 'self' → logprob: -9.014391899108887
    8. ' (' → logprob: -9.139391899108887
    9. 'total' → logprob: -9.139391899108887
    10. ' self' → logprob: -9.389391899108887

Token 322: ' =' (ID: 314)
  Prédit: '_people'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_people' → logprob: -0.0006908706855028868
    2. ' _' → logprob: -8.250690460205078
    3. '```' → logprob: -9.250690460205078
    4. 'people' → logprob: -9.750690460205078
    5. '   ' → logprob: -10.250690460205078
    6. '_inv' → logprob: -10.375690460205078
    7. ' =' → logprob: -10.500690460205078
    8. '_' → logprob: -10.625690460205078
    9. 'inv' → logprob: -10.750690460205078
    10. '=' → logprob: -10.750690460205078

Token 323: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.029886094853281975
    2. ' k' → logprob: -3.52988600730896
    3. '(k' → logprob: -10.029886245727539
    4. '1' → logprob: -10.404886245727539
    5. '
' → logprob: -10.904886245727539
    6. '0' → logprob: -11.779886245727539
    7. ' (' → logprob: -12.154886245727539
    8. '{k' → logprob: -12.154886245727539
    9. ' ' → logprob: -12.529886245727539
    10. '   ' → logprob: -12.654886245727539

Token 324: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3792358338832855
    2. ' +' → logprob: -1.379235863685608
    3. '_people' → logprob: -3.2542357444763184
    4. '?' → logprob: -4.504235744476318
    5. '       ' → logprob: -5.879235744476318
    6. ':' → logprob: -5.879235744476318
    7. 'people' → logprob: -6.754235744476318
    8. ' =' → logprob: -7.129235744476318
    9. '=' → logprob: -7.379235744476318
    10. ' for' → logprob: -7.379235744476318

Token 325: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026288547087460756
    2. ' ' → logprob: -8.250263214111328
    3. '   ' → logprob: -14.625263214111328
    4. '+' → logprob: -15.125263214111328
    5. '<|end|>' → logprob: -15.500263214111328
    6. '  ' → logprob: -16.000263214111328
    7. '
' → logprob: -16.125263214111328
    8. '```' → logprob: -16.250263214111328
    9. '_' → logprob: -16.500263214111328
    10. '       ' → logprob: -16.875263214111328

Token 326: '?
' (ID: 3901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012326451018452644
    2. ' for' → logprob: -5.012326240539551
    3. '
' → logprob: -6.262326240539551
    4. 'for' → logprob: -6.512326240539551
    5. '        
' → logprob: -6.887326240539551
    6. 'def' → logprob: -8.01232624053955
    7. '?' → logprob: -8.13732624053955
    8. ',' → logprob: -8.63732624053955
    9. '   ' → logprob: -9.38732624053955
    10. '           ' → logprob: -10.01232624053955

Token 327: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005483710207045078
    2. ' for' → logprob: -6.505483627319336
    3. '           ' → logprob: -7.130483627319336
    4. 'for' → logprob: -7.380483627319336
    5. '   ' → logprob: -7.505483627319336
    6. 'def' → logprob: -7.630483627319336
    7. ',' → logprob: -8.005483627319336
    8. '        ' → logprob: -8.380483627319336
    9. '        
' → logprob: -8.505483627319336
    10. '#' → logprob: -8.755483627319336

Token 328: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22340132296085358
    2. ' for' → logprob: -1.9734013080596924
    3. 'for' → logprob: -2.8484013080596924
    4. 'def' → logprob: -6.2234015464782715
    5. '   ' → logprob: -7.9734015464782715
    6. '        
' → logprob: -8.473401069641113
    7. '           ' → logprob: -9.348401069641113
    8. '#' (adapté à ' #') → logprob: -9.598401069641113
    9. 'For' → logprob: -9.598401069641113
    10. '
' → logprob: -9.598401069641113

Token 329: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3015333116054535
    2. ' for' → logprob: -1.9265333414077759
    3. 'for' → logprob: -2.1765332221984863
    4. 'def' → logprob: -7.426533222198486
    5. '   ' → logprob: -8.801533699035645
    6. '           ' → logprob: -9.051533699035645
    7. '        
' → logprob: -9.051533699035645
    8. '        ' → logprob: -10.426533699035645
    9. '```' → logprob: -10.426533699035645
    10. '
' → logprob: -10.676533699035645

Token 330: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.21892490983009338
    2. 'for' → logprob: -1.968924880027771
    3. '       ' → logprob: -2.9689249992370605
    4. 'def' → logprob: -5.4689249992370605
    5. ' def' → logprob: -7.3439249992370605
    6. '   ' → logprob: -8.218924522399902
    7. '
' → logprob: -8.593924522399902
    8. ' k' → logprob: -9.093924522399902
    9. '    ' → logprob: -9.968924522399902
    10. ' ' → logprob: -10.468924522399902

Token 331: ' each' (ID: 2454)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.008618712425231934
    2. ' k' → logprob: -4.7586188316345215
    3. 'each' → logprob: -13.258618354797363
    4. '```' → logprob: -14.008618354797363
    5. 'friend' → logprob: -14.883618354797363
    6. ' ' → logprob: -15.258618354797363
    7. ' each' → logprob: -15.508618354797363
    8. '   ' → logprob: -15.633618354797363
    9. '_k' → logprob: -15.758618354797363
    10. 'candidate' → logprob: -16.25861930847168

Token 332: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.1298217624425888
    2. ' k' → logprob: -2.12982177734375
    3. 'friend' → logprob: -6.25482177734375
    4. ' friend' → logprob: -7.00482177734375
    5. 'candidate' → logprob: -11.00482177734375
    6. 'possible' → logprob: -11.37982177734375
    7. ' possible' → logprob: -12.00482177734375
    8. 'def' → logprob: -12.12982177734375
    9. ' def' → logprob: -13.00482177734375
    10. ' ' → logprob: -13.12982177734375

Token 333: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14848440885543823
    2. 'in' → logprob: -2.023484468460083
    3. '+' → logprob: -6.023484230041504
    4. 'from' → logprob: -6.273484230041504
    5. ',' → logprob: -7.023484230041504
    6. '       ' → logprob: -8.523484230041504
    7. ':' → logprob: -8.773484230041504
    8. '   ' → logprob: -9.773484230041504
    9. ' from' → logprob: -9.898484230041504
    10. '
' → logprob: -10.648484230041504

Token 334: ' count' (ID: 3605)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.797039806842804
    2. '           ' → logprob: -1.0470397472381592
    3. 'for' → logprob: -2.047039747238159
    4. 'possible' → logprob: -3.922039747238159
    5. '       ' → logprob: -4.297039985656738
    6. ' possible' → logprob: -4.422039985656738
    7. 'count' → logprob: -4.922039985656738
    8. ' count' → logprob: -6.047039985656738
    9. '   ' → logprob: -6.297039985656738
    10. ' valid' → logprob: -6.422039985656738

Token 335: ' friends' (ID: 5664)
  Prédit: ' how'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' how' → logprob: -0.3124462366104126
    2. 'how' → logprob: -2.187446117401123
    3. ' friends' → logprob: -2.812446117401123
    4. 'friends' → logprob: -2.937446117401123
    5. ' the' → logprob: -3.937446117401123
    6. 'the' → logprob: -4.687446117401123
    7. '   ' → logprob: -5.062446117401123
    8. '=' → logprob: -6.812446117401123
    9. ' number' → logprob: -7.062446117401123
    10. ' =' → logprob: -7.437446117401123

Token 336: ' with' (ID: 483)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.795965313911438
    2. '       ' → logprob: -1.170965313911438
    3. 's' → logprob: -2.7959651947021484
    4. 'that' → logprob: -2.9209651947021484
    5. ' =' → logprob: -3.6709651947021484
    6. ' who' → logprob: -3.6709651947021484
    7. 'def' → logprob: -3.7959651947021484
    8. '   ' → logprob: -5.045965194702148
    9. ' for' → logprob: -5.170965194702148
    10. 'who' → logprob: -5.170965194702148

Token 337: ' a' (ID: 261)
  Prédit: 'constraint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'constraint' → logprob: -0.21536336839199066
    2. 'self' → logprob: -2.0903632640838623
    3. 'friend' → logprob: -2.9653632640838623
    4. ' constraint' → logprob: -4.715363502502441
    5. ' self' → logprob: -4.965363502502441
    6. ' friend' → logprob: -7.465363502502441
    7. 'a' → logprob: -7.590363502502441
    8. '   ' → logprob: -7.840363502502441
    9. '
' → logprob: -8.340363502502441
    10. '```' → logprob: -9.090363502502441

Token 338: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.001955275423824787
    2. ' <=' → logprob: -8.126955032348633
    3. '_' → logprob: -8.501955032348633
    4. 'constraint' → logprob: -8.501955032348633
    5. '<=' → logprob: -8.876955032348633
    6. '[i' → logprob: -8.876955032348633
    7. '_constraint' → logprob: -9.251955032348633
    8. '_j' → logprob: -9.251955032348633
    9. '._' → logprob: -9.626955032348633
    10. '```' → logprob: -9.876955032348633

Token 339: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.07938696444034576
    2. '<=' → logprob: -2.5793869495391846
    3. 'le' → logprob: -8.079386711120605
    4. '=' → logprob: -10.329386711120605
    5. 'nd' → logprob: -11.204386711120605
    6. ' ≤' → logprob: -11.704386711120605
    7. '```' → logprob: -11.704386711120605
    8. '   ' → logprob: -11.829386711120605
    9. 't' → logprob: -11.829386711120605
    10. 'pp' → logprob: -11.954386711120605

Token 340: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3133348226547241
    2. ' k' → logprob: -1.3133348226547241
    3. ' (' → logprob: -10.188334465026855
    4. '(k' → logprob: -10.938334465026855
    5. ' ' → logprob: -12.438334465026855
    6. '
' → logprob: -12.563334465026855
    7. '   ' → logprob: -12.563334465026855
    8. '    ' → logprob: -12.938334465026855
    9. '_k' → logprob: -14.563334465026855
    10. '{k' → logprob: -14.688334465026855

Token 341: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004084693267941475
    2. ' +' → logprob: -5.504084587097168
    3. '```' → logprob: -13.504084587097168
    4. '
' → logprob: -13.879084587097168
    5. '1' → logprob: -14.004084587097168
    6. 'and' → logprob: -14.129084587097168
    7. 'plus' → logprob: -14.879084587097168
    8. ' and' → logprob: -15.129084587097168
    9. ' plus' → logprob: -15.566584587097168
    10. '

' → logprob: -15.691584587097168

Token 342: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014609156642109156
    2. ' ' → logprob: -9.12514591217041
    3. '+' → logprob: -10.25014591217041
    4. ' +' → logprob: -15.25014591217041
    5. '   ' → logprob: -15.43764591217041
    6. '[' → logprob: -15.68764591217041
    7. '<|end|>' → logprob: -15.68764591217041
    8. '
' → logprob: -15.75014591217041
    9. '  ' → logprob: -16.062646865844727
    10. '<|end|>' → logprob: -16.187646865844727

Token 343: ' <=' (ID: 5017)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.14712335169315338
    2. ' <=' → logprob: -2.647123336791992
    3. 'and' → logprob: -2.772123336791992
    4. '<=' → logprob: -6.522123336791992
    5. '       ' → logprob: -6.647123336791992
    6. ' for' → logprob: -8.147123336791992
    7. ' ' → logprob: -9.272123336791992
    8. '        ' → logprob: -10.272123336791992
    9. 'for' → logprob: -10.397123336791992
    10. '   ' → logprob: -10.397123336791992

Token 344: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07897108793258667
    2. ' b' → logprob: -2.5789711475372314
    3. 'friend' → logprob: -10.078970909118652
    4. ' friend' → logprob: -11.453970909118652
    5. '   ' → logprob: -11.953970909118652
    6. ' ' → logprob: -12.328970909118652
    7. 'friends' → logprob: -12.578970909118652
    8. ' friends' → logprob: -12.828970909118652
    9. 'a' → logprob: -13.078970909118652
    10. '_b' → logprob: -13.078970909118652

Token 345: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.004029837902635336
    2. 'i' → logprob: -5.629029750823975
    3. 'max' → logprob: -8.254030227661133
    4. 'b' → logprob: -8.879030227661133
    5. '_max' → logprob: -12.504030227661133
    6. '```' → logprob: -12.754030227661133
    7. '._' → logprob: -12.879030227661133
    8. ' _' → logprob: -13.004030227661133
    9. '_people' → logprob: -13.004030227661133
    10. '_' → logprob: -13.129030227661133

Token 346: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020970876794308424
    2. ' for' → logprob: -6.752097129821777
    3. '
' → logprob: -7.877097129821777
    4. '        
' → logprob: -8.502097129821777
    5. 'for' → logprob: -8.627097129821777
    6. ',' → logprob: -9.752097129821777
    7. '   ' → logprob: -10.752097129821777
    8. 'def' → logprob: -11.002097129821777
    9. '           ' → logprob: -11.502097129821777
    10. '<|end|>' → logprob: -11.752097129821777

Token 347: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010640407708706334
    2. '
' → logprob: -10.625106811523438
    3. ' for' → logprob: -10.875106811523438
    4. '        
' → logprob: -11.000106811523438
    5. '   ' → logprob: -11.375106811523438
    6. '           ' → logprob: -11.625106811523438
    7. 'for' → logprob: -11.750106811523438
    8. ',' → logprob: -12.500106811523438
    9. '```' → logprob: -12.750106811523438
    10. 'def' → logprob: -12.750106811523438

Token 348: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01937485672533512
    2. 'for' → logprob: -4.269374847412109
    3. ' for' → logprob: -5.269374847412109
    4. 'def' → logprob: -11.01937484741211
    5. '   ' → logprob: -11.26937484741211
    6. 'result' → logprob: -11.76937484741211
    7. '        
' → logprob: -12.64437484741211
    8. '```' → logprob: -12.76937484741211
    9. 'from' → logprob: -13.51937484741211
    10. '
' → logprob: -13.76937484741211

Token 349: ' Since' (ID: 12265)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5372036099433899
    2. 'result' → logprob: -1.5372035503387451
    3. ' for' → logprob: -2.412203550338745
    4. ' result' → logprob: -3.037203550338745
    5. 'results' → logprob: -3.662203550338745
    6. 'def' → logprob: -4.287203788757324
    7. '   ' → logprob: -4.912203788757324
    8. ' results' → logprob: -5.162203788757324
    9. '       ' → logprob: -5.787203788757324
    10. 'max' → logprob: -6.037203788757324

Token 350: ' N' (ID: 478)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.9459473490715027
    2. ' k' → logprob: -1.3209474086761475
    3. 'N' → logprob: -1.9459474086761475
    4. ' the' → logprob: -2.5709474086761475
    5. ' N' → logprob: -2.5709474086761475
    6. 'the' → logprob: -3.8209474086761475
    7. ' we' → logprob: -5.320947170257568
    8. ' for' → logprob: -5.945947170257568
    9. '   ' → logprob: -6.070947170257568
    10. 'max' → logprob: -6.195947170257568

Token 351: ' can' (ID: 665)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.1531345099210739
    2. ' <=' → logprob: -3.02813458442688
    3. 'is' → logprob: -3.65313458442688
    4. '+' → logprob: -3.90313458442688
    5. ' can' → logprob: -4.153134346008301
    6. '<=' → logprob: -4.278134346008301
    7. '=' → logprob: -6.028134346008301
    8. ' might' → logprob: -6.278134346008301
    9. ' could' → logprob: -6.278134346008301
    10. ' may' → logprob: -6.528134346008301

Token 352: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.28211352229118347
    2. 'be' → logprob: -1.4071135520935059
    3. 'not' → logprob: -7.407113552093506
    4. 'e' → logprob: -8.907113075256348
    5. ' not' → logprob: -9.407113075256348
    6. 't' → logprob: -9.782113075256348
    7. 'ot' → logprob: -10.032113075256348
    8. '	be' → logprob: -11.532113075256348
    9. '_be' → logprob: -11.657113075256348
    10. ' up' → logprob: -13.032113075256348

Token 353: ' ' (ID: 220)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'large' → logprob: -0.3174734115600586
    2. ' large' → logprob: -1.3174734115600586
    3. 'up' → logprob: -6.067473411560059
    4. ' up' → logprob: -6.942473411560059
    5. 'small' → logprob: -7.442473411560059
    6. '100' → logprob: -9.442473411560059
    7. '0' → logprob: -9.817473411560059
    8. 'big' → logprob: -9.817473411560059
    9. ' ' → logprob: -10.442473411560059
    10. ' small' → logprob: -10.442473411560059

Token 354: '1' (ID: 16)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'large' → logprob: -0.07800090312957764
    2. ' large' → logprob: -2.703001022338867
    3. 'up' → logprob: -5.828001022338867
    4. '0' → logprob: -6.203001022338867
    5. '100' → logprob: -6.203001022338867
    6. 'small' → logprob: -8.078001022338867
    7. 'big' → logprob: -8.328001022338867
    8. ' up' → logprob: -8.578001022338867
    9. 'very' → logprob: -9.453001022338867
    10. '10' → logprob: -9.703001022338867

Token 355: 'e' (ID: 68)
  Prédit: '00'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '00' → logprob: -1.0803219079971313
    2. '0' → logprob: -1.2053219079971313
    3. '000' → logprob: -1.7053219079971313
    4. ',' → logprob: -2.580321788787842
    5. '6' → logprob: -3.455321788787842
    6. '   ' → logprob: -3.955321788787842
    7. '       ' → logprob: -4.455321788787842
    8. '<<' → logprob: -5.330321788787842
    9. '           ' → logprob: -5.455321788787842
    10. '2' → logprob: -5.580321788787842

Token 356: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.030503958463668823
    2. '6' → logprob: -3.780503988265991
    3. '7' → logprob: -5.405503749847412
    4. '8' → logprob: -6.030503749847412
    5. '4' → logprob: -8.65550422668457
    6. '9' → logprob: -8.78050422668457
    7. '+' → logprob: -12.40550422668457
    8. '3' → logprob: -13.40550422668457
    9. '   ' → logprob: -14.59300422668457
    10. '```' → logprob: -14.78050422668457

Token 357: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032942749094218016
    2. ',
' → logprob: -6.003294467926025
    3. '       ' → logprob: -7.503294467926025
    4. ' ,' → logprob: -9.003293991088867
    5. ' and' → logprob: -10.128293991088867
    6. 'def' → logprob: -11.003293991088867
    7. ' for' → logprob: -11.003293991088867
    8. ':' → logprob: -11.128293991088867
    9. '
' → logprob: -11.378293991088867
    10. ' we' → logprob: -12.128293991088867

Token 358: ' naive' (ID: 105687)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6143940687179565
    2. '       ' → logprob: -2.114394187927246
    3. ' return' → logprob: -2.489394187927246
    4. ' we' → logprob: -2.739394187927246
    5. '        
' → logprob: -3.239394187927246
    6. 'return' → logprob: -3.489394187927246
    7. 'def' → logprob: -3.614394187927246
    8. 'for' → logprob: -3.739394187927246
    9. ' self' → logprob: -4.239394187927246
    10. ' def' → logprob: -4.739394187927246

Token 359: ' O' (ID: 532)
  Prédit: ' approach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' approach' → logprob: -0.8107452988624573
    2. ' for' → logprob: -1.9357452392578125
    3. 'for' → logprob: -1.9357452392578125
    4. ' iteration' → logprob: -1.9357452392578125
    5. ' solution' → logprob: -2.5607452392578125
    6. 'appro' → logprob: -4.4357452392578125
    7. ' implementation' → logprob: -4.8107452392578125
    8. 'solution' → logprob: -5.3107452392578125
    9. '       ' → logprob: -6.0607452392578125
    10. 'iteration' → logprob: -6.0607452392578125

Token 360: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.04890243336558342
    2. '(n' → logprob: -3.0489025115966797
    3. '(k' → logprob: -8.67390251159668
    4. '(' → logprob: -9.67390251159668
    5. ' (' → logprob: -9.92390251159668
    6. 'N' → logprob: -12.17390251159668
    7. '(M' → logprob: -12.29890251159668
    8. '((' → logprob: -12.54890251159668
    9. '(len' → logprob: -12.67390251159668
    10. '(\' → logprob: -12.92390251159668

Token 361: '^' (ID: 61)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005972762126475573
    2. ' )' → logprob: -5.255972862243652
    3. '^' → logprob: -8.130972862243652
    4. '*' → logprob: -8.380972862243652
    5. ' *' → logprob: -10.005972862243652
    6. ' log' → logprob: -10.380972862243652
    7. '(' → logprob: -10.630972862243652
    8. '^)' → logprob: -11.005972862243652
    9. 'log' → logprob: -11.380972862243652
    10. ' ' → logprob: -11.630972862243652

Token 362: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.2842308680992573e-05
    2. ')' → logprob: -11.750022888183594
    3. '1' → logprob: -12.250022888183594
    4. '^' → logprob: -12.500022888183594
    5. ' ' → logprob: -13.125022888183594
    6. '²' → logprob: -13.250022888183594
    7. '
' → logprob: -13.875022888183594
    8. '

' → logprob: -14.750022888183594
    9. '(N' → logprob: -14.875022888183594
    10. '(' → logprob: -15.125022888183594

Token 363: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002394675277173519
    2. ' )' → logprob: -6.127394676208496
    3. ' is' → logprob: -9.252394676208496
    4. '
' → logprob: -10.252394676208496
    5. ' will' → logprob: -10.877394676208496
    6. ' would' → logprob: -11.002394676208496
    7. ' might' → logprob: -11.877394676208496
    8. ' may' → logprob: -11.877394676208496
    9. ')
' → logprob: -12.002394676208496
    10. '

' → logprob: -12.877394676208496

Token 364: ' would' (ID: 1481)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7622252702713013
    2. ' will' → logprob: -2.0122251510620117
    3. ' would' → logprob: -2.6372251510620117
    4. ')' → logprob: -2.7622251510620117
    5. ' approach' → logprob: -2.8872251510620117
    6. '       ' → logprob: -3.1372251510620117
    7. ' return' → logprob: -3.1372251510620117
    8. ' might' → logprob: -3.8872251510620117
    9. '   ' → logprob: -4.012225151062012
    10. ' for' → logprob: -4.262225151062012

Token 365: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.44584259390830994
    2. ' be' → logprob: -1.0708426237106323
    3. 'T' → logprob: -4.570842742919922
    4. 'timeout' → logprob: -5.820842742919922
    5. ' T' → logprob: -6.570842742919922
    6. 'not' → logprob: -6.945842742919922
    7. ' not' → logprob: -7.820842742919922
    8. 'pass' → logprob: -7.945842742919922
    9. ' timeout' → logprob: -8.070842742919922
    10. ' exceed' → logprob: -9.945842742919922

Token 366: ' too' (ID: 3101)
  Prédit: 'too'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'too' → logprob: -0.004416228737682104
    2. 'T' → logprob: -5.629416465759277
    3. ' too' → logprob: -7.504416465759277
    4. 'slow' → logprob: -8.879416465759277
    5. 'ine' → logprob: -9.629416465759277
    6. 'Too' → logprob: -10.379416465759277
    7. 'O' → logprob: -12.129416465759277
    8. '```' → logprob: -12.129416465759277
    9. ' T' → logprob: -12.254416465759277
    10. 't' → logprob: -12.254416465759277

Token 367: ' slow' (ID: 9800)
  Prédit: ' slow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' slow' → logprob: -0.05496657267212868
    2. 'slow' → logprob: -2.929966688156128
    3. '_' → logprob: -10.929966926574707
    4. 'o' → logprob: -11.304966926574707
    5. 's' → logprob: -11.304966926574707
    6. ' much' → logprob: -11.304966926574707
    7. 'Slow' → logprob: -11.804966926574707
    8. 'sl' → logprob: -12.929966926574707
    9. 'much' → logprob: -13.054966926574707
    10. ' s' → logprob: -13.429966926574707

Token 368: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005326366983354092
    2. '        
' → logprob: -5.755326271057129
    3. '
' → logprob: -6.755326271057129
    4. ' for' → logprob: -7.880326271057129
    5. 'for' → logprob: -8.755326271057129
    6. ',' → logprob: -9.130326271057129
    7. '```' → logprob: -9.505326271057129
    8. '<|end|>' → logprob: -9.630326271057129
    9. '#' → logprob: -10.755326271057129
    10. '        
        
' → logprob: -10.755326271057129

Token 369: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009070320054888725
    2. '
' → logprob: -5.38407039642334
    3. '        
' → logprob: -5.88407039642334
    4. 'from' → logprob: -7.25907039642334
    5. '        ' → logprob: -8.13407039642334
    6. '```' → logprob: -8.88407039642334
    7. '#' → logprob: -9.25907039642334
    8. 'import' → logprob: -9.63407039642334
    9. 'for' → logprob: -10.00907039642334
    10. ',' → logprob: -10.13407039642334

Token 370: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5989670753479004
    2. '       ' → logprob: -1.7239670753479004
    3. ' for' → logprob: -2.4739670753479004
    4. 'result' → logprob: -2.9739670753479004
    5. 'counts' → logprob: -3.4739670753479004
    6. 'possible' → logprob: -3.5989670753479004
    7. 'count' → logprob: -4.4739670753479
    8. 'def' → logprob: -4.5989670753479
    9. 'from' → logprob: -4.7239670753479
    10. '#' (adapté à ' #') → logprob: -5.2239670753479

Token 371: ' Optimization' (ID: 78012)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -1.1739497184753418
    2. 'from' → logprob: -2.048949718475342
    3. 'counts' → logprob: -2.048949718475342
    4. 'result' → logprob: -2.673949718475342
    5. 'count' → logprob: -2.798949718475342
    6. 'left' → logprob: -3.298949718475342
    7. 'inv' → logprob: -3.298949718475342
    8. '#' → logprob: -3.298949718475342
    9. 'def' → logprob: -3.298949718475342
    10. 'valid' → logprob: -3.423949718475342

Token 372: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5910187363624573
    2. '       ' → logprob: -1.2160186767578125
    3. ':
' → logprob: -3.3410186767578125
    4. '#' → logprob: -3.9660186767578125
    5. ' =' → logprob: -4.2160186767578125
    6. '```' → logprob: -4.4660186767578125
    7. '        
' → logprob: -5.0910186767578125
    8. ',' → logprob: -5.2160186767578125
    9. 'counts' → logprob: -5.3410186767578125
    10. 'def' → logprob: -5.5910186767578125

Token 373: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01290101744234562
    2. '        ' → logprob: -5.6379008293151855
    3. ' from' → logprob: -5.6379008293151855
    4. 'from' → logprob: -6.0129008293151855
    5. '        
' → logprob: -7.2629008293151855
    6. '#' → logprob: -8.012901306152344
    7. 'import' → logprob: -8.262901306152344
    8. '```' → logprob: -8.512901306152344
    9. 'Let's' → logprob: -8.512901306152344
    10. ' sort' → logprob: -8.762901306152344

Token 374: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.7896720767021179
    2. 'from' → logprob: -1.6646721363067627
    3. '       ' → logprob: -2.4146721363067627
    4. 'lower' → logprob: -3.0396721363067627
    5. 'min' → logprob: -3.4146721363067627
    6. 'count' → logprob: -3.6646721363067627
    7. 'import' → logprob: -3.9146721363067627
    8. 'We' → logprob: -4.164671897888184
    9. 'possible' → logprob: -4.164671897888184
    10. 'counts' → logprob: -4.289671897888184

Token 375: ' Let's' (ID: 41021)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3083891868591309
    2. 'from' → logprob: -1.8083891868591309
    3. 'friends' → logprob: -2.058389186859131
    4. 'min' → logprob: -2.933389186859131
    5. 'We' → logprob: -3.183389186859131
    6. 'counts' → logprob: -3.308389186859131
    7. 'possible' → logprob: -3.433389186859131
    8. 'count' → logprob: -3.683389186859131
    9. 'Let's' → logprob: -3.808389186859131
    10. 'events' → logprob: -4.058389186859131

Token 376: ' sort' (ID: 4506)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.0832386389374733
    2. 'collect' → logprob: -2.9582386016845703
    3. ' sort' → logprob: -4.58323860168457
    4. 'consider' → logprob: -4.95823860168457
    5. 'first' → logprob: -6.33323860168457
    6. 'create' → logprob: -6.58323860168457
    7. '   ' → logprob: -7.20823860168457
    8. 'store' → logprob: -7.45823860168457
    9. 'try' → logprob: -7.45823860168457
    10. 'count' → logprob: -7.58323860168457

Token 377: ' friends' (ID: 5664)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3715647757053375
    2. '(self' → logprob: -1.2465647459030151
    3. 'by' → logprob: -4.996564865112305
    4. ' self' → logprob: -5.246564865112305
    5. 'friends' → logprob: -5.621564865112305
    6. '_ranges' → logprob: -5.996564865112305
    7. '       ' → logprob: -6.496564865112305
    8. '_by' → logprob: -6.746564865112305
    9. 'the' → logprob: -7.246564865112305
    10. '(' → logprob: -8.246564865112305

Token 378: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.02365828864276409
    2. ' by' → logprob: -4.273658275604248
    3. '   ' → logprob: -6.023658275604248
    4. ',' → logprob: -6.398658275604248
    5. '       ' → logprob: -6.398658275604248
    6. '_by' → logprob: -6.898658275604248
    7. 'self' → logprob: -7.023658275604248
    8. 'based' → logprob: -7.398658275604248
    9. 's' → logprob: -8.023658752441406
    10. '(self' → logprob: -8.898658752441406

Token 379: ' a' (ID: 261)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12217599153518677
    2. 'friend' → logprob: -2.872175931930542
    3. 'constraint' → logprob: -3.622175931930542
    4. 'lambda' → logprob: -4.747176170349121
    5. 'their' → logprob: -4.747176170349121
    6. 'f' → logprob: -5.247176170349121
    7. 'min' → logprob: -6.247176170349121
    8. 'a' → logprob: -6.247176170349121
    9. ' self' → logprob: -6.247176170349121
    10. ' their' → logprob: -7.247176170349121

Token 380: '_i' (ID: 10853)
  Prédit: '_people'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_people' → logprob: -0.02456424944102764
    2. '_i' → logprob: -3.774564266204834
    3. 'people' → logprob: -7.899564266204834
    4. 'min' → logprob: -8.274563789367676
    5. '_min' → logprob: -8.899563789367676
    6. '_person' → logprob: -9.149563789367676
    7. 'i' → logprob: -9.274563789367676
    8. 'nd' → logprob: -9.774563789367676
    9. '```' → logprob: -9.774563789367676
    10. '_' → logprob: -9.899563789367676

Token 381: ' ascending' (ID: 75564)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8715655207633972
    2. ' =' → logprob: -1.121565580368042
    3. 's' → logprob: -2.746565580368042
    4. '_sorted' → logprob: -3.496565580368042
    5. '_min' → logprob: -3.871565580368042
    6. '_values' → logprob: -3.996565580368042
    7. '=' → logprob: -3.996565580368042
    8. '_lower' → logprob: -4.121565341949463
    9. 'and' → logprob: -4.496565341949463
    10. ')' → logprob: -4.746565341949463

Token 382: '.

' (ID: 364)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6117056012153625
    2. '       ' → logprob: -1.2367055416107178
    3. ' and' → logprob: -2.9867055416107178
    4. '.' → logprob: -3.1117055416107178
    5. '.sort' → logprob: -3.7367055416107178
    6. ',
' → logprob: -4.986705780029297
    7. ' =' → logprob: -4.986705780029297
    8. ')' → logprob: -4.986705780029297
    9. ':' → logprob: -5.236705780029297
    10. 'and' → logprob: -5.611705780029297

Token 383: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00169065420050174
    2. '        
' → logprob: -7.876690864562988
    3. ',' → logprob: -8.001690864562988
    4. '.' → logprob: -8.251690864562988
    5. '<|end|>' → logprob: -8.501690864562988
    6. ')' → logprob: -9.501690864562988
    7. '
' → logprob: -9.876690864562988
    8. '        ' → logprob: -10.001690864562988
    9. ' and' → logprob: -10.001690864562988
    10. '   ' → logprob: -10.376690864562988

Token 384: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026511605829000473
    2. 'self' → logprob: -3.9015116691589355
    3. 'sorted' → logprob: -6.0265116691589355
    4. 'friends' → logprob: -6.4015116691589355
    5. ' self' → logprob: -7.1515116691589355
    6. ' sorted' → logprob: -7.7765116691589355
    7. ' friends' → logprob: -8.026511192321777
    8. '```' → logprob: -8.901511192321777
    9. 'friend' → logprob: -9.401511192321777
    10. '   ' → logprob: -10.026511192321777

Token 385: ' For' (ID: 2214)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.42205727100372314
    2. 'sorted' → logprob: -1.6720572710037231
    3. '       ' → logprob: -2.0470571517944336
    4. 'friends' → logprob: -3.6720571517944336
    5. 'a' → logprob: -7.172057151794434
    6. '#' → logprob: -8.297057151794434
    7. '   ' → logprob: -8.547057151794434
    8. ' sorted' → logprob: -9.297057151794434
    9. 'filtered' → logprob: -9.422057151794434
    10. 'friend' → logprob: -9.422057151794434

Token 386: ' each' (ID: 2454)
  Prédit: 'friend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'friend' → logprob: -0.8256668448448181
    2. 'k' → logprob: -1.575666904449463
    3. ' friend' → logprob: -2.200666904449463
    4. 'each' → logprob: -2.325666904449463
    5. 'a' → logprob: -2.700666904449463
    6. ' k' → logprob: -3.575666904449463
    7. 'i' → logprob: -3.825666904449463
    8. ' each' → logprob: -5.200666904449463
    9. 'b' → logprob: -5.700666904449463
    10. ' a' → logprob: -5.825666904449463

Token 387: ' k' (ID: 372)
  Prédit: 'friend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'friend' → logprob: -0.4223954379558563
    2. ' friend' → logprob: -1.1723954677581787
    3. 'k' → logprob: -4.2973952293396
    4. ' k' → logprob: -4.4223952293396
    5. '_friend' → logprob: -5.5473952293396
    6. ' i' → logprob: -7.0473952293396
    7. 'i' → logprob: -7.0473952293396
    8. 'def' → logprob: -7.0473952293396
    9. ' def' → logprob: -7.9223952293396
    10. 'a' → logprob: -8.047395706176758

Token 388: ' from' (ID: 591)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.44946226477622986
    2. ':' → logprob: -1.4494622945785522
    3. ',' → logprob: -2.5744621753692627
    4. 'in' → logprob: -3.5744621753692627
    5. '+' → logprob: -4.074462413787842
    6. ' :' → logprob: -6.574462413787842
    7. 'from' → logprob: -6.949462413787842
    8. '):' → logprob: -7.199462413787842
    9. '       ' → logprob: -7.449462413787842
    10. ' ,' → logprob: -7.449462413787842

Token 389: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0002624086628202349
    2. ' N' → logprob: -8.250262260437012
    3. '0' → logprob: -14.000262260437012
    4. '   ' → logprob: -16.125263214111328
    5. 'len' → logprob: -16.250263214111328
    6. '1' → logprob: -17.000263214111328
    7. 'range' → logprob: -17.250263214111328
    8. ' ' → logprob: -17.625263214111328
    9. '	N' → logprob: -17.875263214111328
    10. '       ' → logprob: -17.875263214111328

Token 390: ' down' (ID: 1917)
  Prédit: ' down'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' down' → logprob: -0.37542590498924255
    2. ' to' → logprob: -2.5004258155822754
    3. ',' → logprob: -2.7504258155822754
    4. 'down' → logprob: -2.8754258155822754
    5. 'to' → logprob: -3.2504258155822754
    6. ' -' → logprob: -3.5004258155822754
    7. '-' → logprob: -3.5004258155822754
    8. '       ' → logprob: -5.250425815582275
    9. ':' → logprob: -5.875425815582275
    10. 'dow' → logprob: -6.875425815582275

Token 391: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.026135174557566643
    2. ' to' → logprob: -3.901135206222534
    3. '       ' → logprob: -5.276134967803955
    4. '   ' → logprob: -9.026135444641113
    5. 'down' → logprob: -9.526135444641113
    6. '           ' → logprob: -9.651135444641113
    7. '_to' → logprob: -10.151135444641113
    8. ',' → logprob: -10.651135444641113
    9. '-' → logprob: -10.651135444641113
    10. ' down' → logprob: -11.026135444641113

Token 392: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.1928003813372925e-05
    2. ' ' → logprob: -10.250051498413086
    3. '1' → logprob: -11.625051498413086
    4. '   ' → logprob: -12.750051498413086
    5. 'k' → logprob: -13.000051498413086
    6. '           ' → logprob: -14.125051498413086
    7. '       ' → logprob: -14.125051498413086
    8. '
' → logprob: -14.625051498413086
    9. '```' → logprob: -15.625051498413086
    10. '               ' → logprob: -16.375051498413086

Token 393: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. '1' → logprob: -13.500001907348633
    3. ' ' → logprob: -14.750001907348633
    4. '   ' → logprob: -15.875001907348633
    5. '```' → logprob: -16.875001907348633
    6. 'k' → logprob: -17.500001907348633
    7. '           ' → logprob: -18.250001907348633
    8. '
' → logprob: -18.250001907348633
    9. '       ' → logprob: -18.375001907348633
    10. '۰' → logprob: -20.125001907348633

Token 394: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.057964008301496506
    2. ',' → logprob: -3.4329640865325928
    3. '       ' → logprob: -4.182963848114014
    4. ':
' → logprob: -4.807963848114014
    5. '):' → logprob: -8.432964324951172
    6. '           ' → logprob: -8.557964324951172
    7. '   ' → logprob: -10.057964324951172
    8. '):
' → logprob: -10.807964324951172
    9. ' :' → logprob: -10.932964324951172
    10. '.' → logprob: -11.057964324951172

Token 395: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003933544736355543
    2. '        ' → logprob: -6.128933429718018
    3. '           ' → logprob: -6.878933429718018
    4. ',' → logprob: -8.128933906555176
    5. '   ' → logprob: -9.503933906555176
    6. '        
' → logprob: -9.628933906555176
    7. '    ' → logprob: -10.128933906555176
    8. ' for' → logprob: -10.128933906555176
    9. '	       ' → logprob: -10.503933906555176
    10. '	   ' → logprob: -11.003933906555176

Token 396: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23678700625896454
    2. '           ' → logprob: -2.6117870807647705
    3. ' for' → logprob: -2.7367870807647705
    4. '        ' → logprob: -2.7367870807647705
    5. 'for' → logprob: -6.486786842346191
    6. '   ' → logprob: -6.861786842346191
    7. '    ' → logprob: -6.861786842346191
    8. ',' → logprob: -7.486786842346191
    9. ' ' → logprob: -7.736786842346191
    10. '            ' → logprob: -7.736786842346191

Token 397: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29724621772766113
    2. ' for' → logprob: -1.5472462177276611
    3. 'for' → logprob: -3.922246217727661
    4. '        ' → logprob: -5.047245979309082
    5. '   ' → logprob: -6.047245979309082
    6. ' k' → logprob: -6.422245979309082
    7. '    ' → logprob: -6.547245979309082
    8. ' total' → logprob: -6.922245979309082
    9. 'def' → logprob: -7.047245979309082
    10. 'k' → logprob: -7.047245979309082

Token 398: ' fix' (ID: 9295)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.6487435102462769
    2. ' ' → logprob: -1.8987435102462769
    3. '   ' → logprob: -2.8987436294555664
    4. ' def' → logprob: -2.8987436294555664
    5. ' try' → logprob: -3.6487436294555664
    6. 'def' → logprob: -3.6487436294555664
    7. '       ' → logprob: -3.7737436294555664
    8. 'can' → logprob: -3.7737436294555664
    9. ' continue' → logprob: -4.023743629455566
    10. ' check' → logprob: -4.023743629455566

Token 399: ' total' (ID: 3609)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.0969420075416565
    2. 'k' → logprob: -3.0969419479370117
    3. ' the' → logprob: -3.9719419479370117
    4. '       ' → logprob: -4.721941947937012
    5. ' a' → logprob: -4.721941947937012
    6. 'the' → logprob: -5.721941947937012
    7. ' friends' → logprob: -6.346941947937012
    8. '   ' → logprob: -6.721941947937012
    9. ' possible' → logprob: -8.096941947937012
    10. ' ' → logprob: -8.096941947937012

Token 400: ' =' (ID: 314)
  Prédit: '_people'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_people' → logprob: -0.0005454073543660343
    2. ' =' → logprob: -8.000545501708984
    3. '=' → logprob: -9.000545501708984
    4. '_' → logprob: -10.125545501708984
    5. '```' → logprob: -11.625545501708984
    6. '_person' → logprob: -11.875545501708984
    7. '=_' → logprob: -11.875545501708984
    8. '   ' → logprob: -11.875545501708984
    9. '_inv' → logprob: -12.125545501708984
    10. '       ' → logprob: -12.875545501708984

Token 401: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.014168089255690575
    2. ' k' → logprob: -4.2641682624816895
    3. '(k' → logprob: -12.889167785644531
    4. '   ' → logprob: -14.014167785644531
    5. ' ' → logprob: -14.889167785644531
    6. '{k' → logprob: -15.389167785644531
    7. '    ' → logprob: -15.639167785644531
    8. ' (' → logprob: -16.26416778564453
    9. '	k' → logprob: -16.38916778564453
    10. '_k' → logprob: -16.76416778564453

Token 402: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.007611005567014217
    2. ' +' → logprob: -4.88261079788208
    3. '   ' → logprob: -13.382611274719238
    4. '
' → logprob: -14.507611274719238
    5. '       ' → logprob: -14.507611274719238
    6. '_plus' → logprob: -14.632611274719238
    7. '```' → logprob: -14.882611274719238
    8. '+
' → logprob: -15.132611274719238
    9. '()+' → logprob: -15.382611274719238
    10. '＋' → logprob: -15.507611274719238

Token 403: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016945181414484978
    2. '+' → logprob: -8.87516975402832
    3. ' ' → logprob: -10.50016975402832
    4. ' +' → logprob: -13.62516975402832
    5. '<|end|>' → logprob: -15.00016975402832
    6. '```' → logprob: -15.25016975402832
    7. '
' → logprob: -16.75016975402832
    8. '   ' → logprob: -17.00016975402832
    9. ')' → logprob: -17.00016975402832
    10. '[' → logprob: -17.12516975402832

Token 404: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3360390067100525
    2. ',' → logprob: -2.0860390663146973
    3. '
' → logprob: -2.4610390663146973
    4. ':' → logprob: -3.2110390663146973
    5. ' and' → logprob: -4.961039066314697
    6. '        
' → logprob: -5.086039066314697
    7. ':
' → logprob: -5.461039066314697
    8. ')' → logprob: -5.461039066314697
    9. ',
' → logprob: -6.211039066314697
    10. '=' → logprob: -6.586039066314697

Token 405: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017080175457522273
    2. ',' → logprob: -7.126708030700684
    3. '<|end|>' → logprob: -8.251708030700684
    4. '        
' → logprob: -8.376708030700684
    5. '           ' → logprob: -9.126708030700684
    6. ' and' → logprob: -9.751708030700684
    7. '        ' → logprob: -10.251708030700684
    8. '#' → logprob: -10.376708030700684
    9. '   ' → logprob: -10.501708030700684
    10. ' ' → logprob: -10.501708030700684

Token 406: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007034324109554291
    2. ',' → logprob: -5.6320343017578125
    3. '           ' → logprob: -7.1320343017578125
    4. '        
' → logprob: -7.2570343017578125
    5. '        ' → logprob: -7.8820343017578125
    6. '<|end|>' → logprob: -8.007034301757812
    7. ')' → logprob: -8.382034301757812
    8. '.' → logprob: -8.507034301757812
    9. ' and' → logprob: -9.382034301757812
    10. '   ' → logprob: -9.507034301757812

Token 407: ' count' (ID: 3605)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019378015771508217
    2. 'count' → logprob: -5.519378185272217
    3. ' valid' → logprob: -5.769378185272217
    4. 'valid' → logprob: -6.644378185272217
    5. 'possible' → logprob: -6.644378185272217
    6. ' possible' → logprob: -7.394378185272217
    7. ' total' → logprob: -7.519378185272217
    8. ' count' → logprob: -7.644378185272217
    9. 'total' → logprob: -7.644378185272217
    10. '```' → logprob: -7.644378185272217

Token 408: ' how' (ID: 1495)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15281593799591064
    2. '=' → logprob: -2.027815818786621
    3. '_' → logprob: -5.402815818786621
    4. '_f' → logprob: -6.027815818786621
    5. 'ed' → logprob: -6.777815818786621
    6. 's' → logprob: -7.902815818786621
    7. '(' → logprob: -8.152815818786621
    8. '   ' → logprob: -8.402815818786621
    9. ',' → logprob: -8.902815818786621
    10. 'ing' → logprob: -9.027815818786621

Token 409: ' many' (ID: 1991)
  Prédit: 'many'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'many' → logprob: -0.5518069267272949
    2. ' many' → logprob: -0.9268069267272949
    3. '_many' → logprob: -3.676806926727295
    4. 'Many' → logprob: -7.676806926727295
    5. 'are' → logprob: -7.926806926727295
    6. '=' → logprob: -8.051807403564453
    7. '   ' → logprob: -8.301807403564453
    8. '       ' → logprob: -8.551807403564453
    9. '[]' → logprob: -9.051807403564453
    10. 'import' → logprob: -9.051807403564453

Token 410: ' friends' (ID: 5664)
  Prédit: 'friends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'friends' → logprob: -0.36936259269714355
    2. ' friends' → logprob: -1.3693625926971436
    3. '_f' → logprob: -3.6193625926971436
    4. 'friend' → logprob: -4.619362831115723
    5. 'have' → logprob: -5.744362831115723
    6. ' have' → logprob: -6.119362831115723
    7. '_friend' → logprob: -6.369362831115723
    8. 's' → logprob: -6.369362831115723
    9. ' can' → logprob: -6.619362831115723
    10. 'can' → logprob: -6.619362831115723

Token 411: ' satisfy' (ID: 35441)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.2277131080627441
    2. ' =' → logprob: -1.6027131080627441
    3. ' have' → logprob: -1.8527131080627441
    4. ' with' → logprob: -2.602713108062744
    5. ' are' → logprob: -2.727713108062744
    6. '=' → logprob: -3.477713108062744
    7. 'with' → logprob: -3.602713108062744
    8. '       ' → logprob: -3.602713108062744
    9. ' satisfy' → logprob: -3.727713108062744
    10. 'can' → logprob: -3.852713108062744

Token 412: ' a' (ID: 261)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8823373913764954
    2. 'friend' → logprob: -0.8823373913764954
    3. ' friend' → logprob: -2.5073373317718506
    4. ' self' → logprob: -2.6323373317718506
    5. '(friend' → logprob: -5.13233757019043
    6. '       ' → logprob: -5.50733757019043
    7. '   ' → logprob: -6.50733757019043
    8. 'f' → logprob: -6.50733757019043
    9. '(self' → logprob: -6.88233757019043
    10. '```' → logprob: -7.13233757019043

Token 413: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.006606660783290863
    2. '_' → logprob: -5.631606578826904
    3. ' <=' → logprob: -6.506606578826904
    4. '<=' → logprob: -6.756606578826904
    5. '[i' → logprob: -9.506607055664062
    6. '_people' → logprob: -10.006607055664062
    7. ' _' → logprob: -10.506607055664062
    8. '_total' → logprob: -11.256607055664062
    9. '_j' → logprob: -11.506607055664062
    10. '```' → logprob: -11.631607055664062

Token 414: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.043169889599084854
    2. '<=' → logprob: -3.1681699752807617
    3. ')' → logprob: -10.168169975280762
    4. '```' → logprob: -10.918169975280762
    5. ')<=' → logprob: -11.293169975280762
    6. '   ' → logprob: -11.293169975280762
    7. ' ' → logprob: -11.418169975280762
    8. '       ' → logprob: -11.668169975280762
    9. '           ' → logprob: -12.043169975280762
    10. '    ' → logprob: -12.168169975280762

Token 415: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.8061169981956482
    2. 'k' → logprob: -1.431117057800293
    3. 'total' → logprob: -1.681117057800293
    4. ' k' → logprob: -2.056117057800293
    5. '   ' → logprob: -9.681117057800293
    6. '       ' → logprob: -10.181117057800293
    7. '           ' → logprob: -10.181117057800293
    8. '    ' → logprob: -10.431117057800293
    9. ' ' → logprob: -11.056117057800293
    10. '        ' → logprob: -11.681117057800293

Token 416: ' <=' (ID: 5017)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12761257588863373
    2. ',' → logprob: -2.877612590789795
    3. ' and' → logprob: -3.002612590789795
    4. ':' → logprob: -5.502612590789795
    5. '.' → logprob: -6.002612590789795
    6. '        
' → logprob: -7.002612590789795
    7. '=' → logprob: -7.127612590789795
    8. ')' → logprob: -7.252612590789795
    9. '           ' → logprob: -7.502612590789795
    10. 'and' → logprob: -7.752612590789795

Token 417: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2462673783302307
    2. ' b' → logprob: -1.621267318725586
    3. 'friend' → logprob: -4.496267318725586
    4. ' friend' → logprob: -4.871267318725586
    5. 'self' → logprob: -6.621267318725586
    6. ' self' → logprob: -8.371267318725586
    7. 'friends' → logprob: -9.121267318725586
    8. ' friends' → logprob: -9.371267318725586
    9. '_friend' → logprob: -11.371267318725586
    10. '```' → logprob: -11.746267318725586

Token 418: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0913102775812149
    2. '_people' → logprob: -2.4663102626800537
    3. '_' → logprob: -6.216310501098633
    4. '_max' → logprob: -8.716310501098633
    5. '_f' → logprob: -9.841310501098633
    6. 'max' → logprob: -10.591310501098633
    7. '_
' → logprob: -10.966310501098633
    8. '   ' → logprob: -11.591310501098633
    9. ')_' → logprob: -11.591310501098633
    10. '+' → logprob: -11.591310501098633

Token 419: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014380889479070902
    2. ',' → logprob: -7.626438140869141
    3. '<|end|>' → logprob: -8.50143814086914
    4. ')' → logprob: -8.87643814086914
    5. '.' → logprob: -9.25143814086914
    6. '        ' → logprob: -9.37643814086914
    7. ':' → logprob: -9.87643814086914
    8. '           ' → logprob: -9.87643814086914
    9. '<|end|>' → logprob: -9.87643814086914
    10. '        
' → logprob: -10.12643814086914

Token 420: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017571680946275592
    2. '        
' → logprob: -7.3767571449279785
    3. ')' → logprob: -8.751757621765137
    4. '\' → logprob: -8.876757621765137
    5. ',' → logprob: -8.876757621765137
    6. '   ' → logprob: -9.001757621765137
    7. '        ' → logprob: -9.376757621765137
    8. '\n' → logprob: -9.626757621765137
    9. '```' → logprob: -9.751757621765137
    10. '<|end|>' → logprob: -9.751757621765137

Token 421: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003326049481984228
    2. '        ' → logprob: -8.875332832336426
    3. '        
' → logprob: -9.750332832336426
    4. '```' → logprob: -10.750332832336426
    5. '           ' → logprob: -11.000332832336426
    6. 'from' → logprob: -11.125332832336426
    7. '   ' → logprob: -11.125332832336426
    8. ',' → logprob: -11.500332832336426
    9. 'friend' → logprob: -11.750332832336426
    10. 'import' → logprob: -12.125332832336426

Token 422: ' To' (ID: 2514)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9957829713821411
    2. 'friends' → logprob: -1.6207829713821411
    3. 'a' → logprob: -1.8707829713821411
    4. 'sorted' → logprob: -1.9957829713821411
    5. 'self' → logprob: -3.1207828521728516
    6. '#' → logprob: -4.495782852172852
    7. 'from' → logprob: -4.620782852172852
    8. 'inv' → logprob: -4.745782852172852
    9. 'lo' → logprob: -5.120782852172852
    10. 'possible' → logprob: -5.120782852172852

Token 423: ' speed' (ID: 7733)
  Prédit: 'do'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'do' → logprob: -1.782490611076355
    2. 'def' → logprob: -2.2824907302856445
    3. ' def' → logprob: -2.4074907302856445
    4. 'import' → logprob: -2.7824907302856445
    5. ' use' → logprob: -2.7824907302856445
    6. ' process' → logprob: -3.0324907302856445
    7. 'implement' → logprob: -3.0324907302856445
    8. 'find' → logprob: -3.1574907302856445
    9. 'continue' → logprob: -3.4074907302856445
    10. 'count' → logprob: -3.7824907302856445

Token 424: ' up' (ID: 869)
  Prédit: ' up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' up' → logprob: -0.009723742492496967
    2. 'up' → logprob: -5.259723663330078
    3. '_up' → logprob: -6.009723663330078
    4. '_' → logprob: -6.509723663330078
    5. '       ' → logprob: -8.509723663330078
    6. '	up' → logprob: -8.634723663330078
    7. '        ' → logprob: -9.884723663330078
    8. ' ' → logprob: -10.384723663330078
    9. 'Up' → logprob: -11.134723663330078
    10. '=' → logprob: -12.009723663330078

Token 425: ',' (ID: 11)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8949801325798035
    2. 'the' → logprob: -1.3949801921844482
    3. ' this' → logprob: -2.0199801921844482
    4. 'this' → logprob: -2.8949801921844482
    5. ',' → logprob: -2.8949801921844482
    6. ' sorting' → logprob: -3.7699801921844482
    7. 'sorting' → logprob: -4.644979953765869
    8. ' access' → logprob: -4.894979953765869
    9. 'self' → logprob: -5.019979953765869
    10. 'it' → logprob: -5.269979953765869

Token 426: ' we' (ID: 581)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8446257710456848
    2. ' self' → logprob: -1.46962571144104
    3. 'from' → logprob: -2.84462571144104
    4. 'a' → logprob: -2.96962571144104
    5. 'we' → logprob: -3.09462571144104
    6. ' a' → logprob: -3.59462571144104
    7. '       ' → logprob: -3.84462571144104
    8. ' we' → logprob: -3.84462571144104
    9. 'friends' → logprob: -3.84462571144104
    10. 'sorted' → logprob: -4.469625949859619

Token 427: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.4902389943599701
    2. 'import' → logprob: -1.3652390241622925
    3. 'can' → logprob: -2.490238904953003
    4. 'def' → logprob: -4.615239143371582
    5. ' import' → logprob: -4.615239143371582
    6. 'sort' → logprob: -5.115239143371582
    7. ''ll' → logprob: -5.490239143371582
    8. ' sort' → logprob: -5.740239143371582
    9. '```' → logprob: -5.865239143371582
    10. 'could' → logprob: -6.115239143371582

Token 428: ':
' (ID: 734)
  Prédit: ' sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sort' → logprob: -0.8002239465713501
    2. 'sort' → logprob: -1.05022394657135
    3. ' use' → logprob: -1.92522394657135
    4. 'use' → logprob: -4.0502238273620605
    5. 'import' → logprob: -4.4252238273620605
    6. ' import' → logprob: -4.9252238273620605
    7. ' pre' → logprob: -5.6752238273620605
    8. ' maintain' → logprob: -5.8002238273620605
    9. ' binary' → logprob: -5.9252238273620605
    10. 'maint' → logprob: -6.3002238273620605

Token 429: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17823487520217896
    2. ' sort' → logprob: -2.178234815597534
    3. 'sort' → logprob: -3.428234815597534
    4. '```' → logprob: -4.803235054016113
    5. 'from' → logprob: -5.678235054016113
    6. ' from' → logprob: -6.678235054016113
    7. 'import' → logprob: -6.803235054016113
    8. ' self' → logprob: -7.178235054016113
    9. 'self' → logprob: -7.803235054016113
    10. ' sorted' → logprob: -8.178235054016113

Token 430: ' #' (ID: 1069)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.6967875957489014
    2. ' sort' → logprob: -1.4467875957489014
    3. '       ' → logprob: -1.8217875957489014
    4. 'self' → logprob: -3.4467875957489014
    5. '#' (adapté à ' #') → logprob: -3.9467875957489014
    6. 'from' → logprob: -4.0717878341674805
    7. ' self' → logprob: -4.5717878341674805
    8. '```' → logprob: -5.3217878341674805
    9. 'def' → logprob: -5.9467878341674805
    10. 'import' → logprob: -5.9467878341674805

Token 431: ' ' (ID: 220)
  Prédit: ' sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sort' → logprob: -1.5938262939453125
    2. 'sort' → logprob: -1.7188262939453125
    3. 'self' → logprob: -1.9688262939453125
    4. 'from' → logprob: -2.0938262939453125
    5. ' self' → logprob: -2.3438262939453125
    6. ' friends' → logprob: -2.7188262939453125
    7. 'friends' → logprob: -2.7188262939453125
    8. ' from' → logprob: -3.7188262939453125
    9. '       ' → logprob: -3.8438262939453125
    10. '#' → logprob: -4.2188262939453125

Token 432: '1' (ID: 16)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.7392999529838562
    2. 'from' → logprob: -1.489300012588501
    3. 'friends' → logprob: -2.114300012588501
    4. 'import' → logprob: -2.864300012588501
    5. 'filter' → logprob: -3.614300012588501
    6. '#' → logprob: -4.364299774169922
    7. 'Sort' → logprob: -4.364299774169922
    8. 'store' → logprob: -4.489299774169922
    9. 'collect' → logprob: -4.614299774169922
    10. 'pre' → logprob: -5.364299774169922

Token 433: ')' (ID: 8)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.12194207310676575
    2. ')' → logprob: -2.9969420433044434
    3. ' sort' → logprob: -4.371942043304443
    4. 'sort' → logprob: -4.371942043304443
    5. ':' → logprob: -4.871942043304443
    6. 'def' → logprob: -4.996942043304443
    7. ' =' → logprob: -5.371942043304443
    8. '.sort' → logprob: -5.371942043304443
    9. '=' → logprob: -5.746942043304443
    10. '#' → logprob: -5.871942043304443

Token 434: ' For' (ID: 2214)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.7367235422134399
    2. 'Sort' → logprob: -1.11172354221344
    3. ' sort' → logprob: -2.1117234230041504
    4. ' Sort' → logprob: -3.1117234230041504
    5. 'Extract' → logprob: -5.48672342300415
    6. 'Create' → logprob: -5.48672342300415
    7. 'extract' → logprob: -5.98672342300415
    8. 'import' → logprob: -6.11172342300415
    9. 'Prepare' → logprob: -6.73672342300415
    10. ' Extract' → logprob: -6.86172342300415

Token 435: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.4321022033691406
    2. 'a' → logprob: -1.8071022033691406
    3. ' each' → logprob: -2.6821022033691406
    4. 'friend' → logprob: -3.9321022033691406
    5. ' friend' → logprob: -4.057102203369141
    6. 'i' → logprob: -4.057102203369141
    7. 'b' → logprob: -4.307102203369141
    8. ' a' → logprob: -4.807102203369141
    9. 'the' → logprob: -4.932102203369141
    10. ' i' → logprob: -5.057102203369141

Token 436: ' friend' (ID: 5168)
  Prédit: 'friend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'friend' → logprob: -0.3889445960521698
    2. ' friend' → logprob: -1.1389446258544922
    3. '_friend' → logprob: -7.013944625854492
    4. ' friend's' → logprob: -8.513944625854492
    5. 'Friend' → logprob: -8.888944625854492
    6. 'a' → logprob: -9.013944625854492
    7. '	friend' → logprob: -9.263944625854492
    8. 'def' → logprob: -9.513944625854492
    9. 'self' → logprob: -9.763944625854492
    10. 'class' → logprob: -9.763944625854492

Token 437: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06643327325582504
    2. '       ' → logprob: -3.6914331912994385
    3. '   ' → logprob: -3.8164331912994385
    4. '.constraint' → logprob: -5.316433429718018
    5. ''s' → logprob: -5.566433429718018
    6. 'a' → logprob: -6.316433429718018
    7. 'constraint' → logprob: -6.316433429718018
    8. ':' → logprob: -7.441433429718018
    9. ' ,' → logprob: -7.691433429718018
    10. '.' → logprob: -7.691433429718018

Token 438: ' record' (ID: 3704)
  Prédit: 'store'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'store' → logprob: -0.7755092978477478
    2. ' store' → logprob: -1.9005093574523926
    3. 'a' → logprob: -2.4005093574523926
    4. 'collect' → logprob: -2.9005093574523926
    5. ' collect' → logprob: -2.9005093574523926
    6. ' extract' → logprob: -3.2755093574523926
    7. 'extract' → logprob: -3.6505093574523926
    8. ' get' → logprob: -4.150509357452393
    9. 'calculate' → logprob: -4.150509357452393
    10. 'compute' → logprob: -4.275509357452393

Token 439: ' (' (ID: 350)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3380943238735199
    2. 'friend' → logprob: -2.8380942344665527
    3. ' (' → logprob: -3.0880942344665527
    4. '(self' → logprob: -3.0880942344665527
    5. 'the' → logprob: -3.3380942344665527
    6. 'their' → logprob: -3.7130942344665527
    7. 'a' → logprob: -4.088094234466553
    8. ' self' → logprob: -4.213094234466553
    9. '(' → logprob: -4.338094234466553
    10. ' their' → logprob: -4.713094234466553

Token 440: 'a' (ID: 64)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.14587052166461945
    2. 'friend' → logprob: -2.0208704471588135
    3. 'a' → logprob: -6.770870685577393
    4. 'constraint' → logprob: -7.145870685577393
    5. ' friend' → logprob: -8.145870208740234
    6. ')' → logprob: -8.520870208740234
    7. ' self' → logprob: -8.520870208740234
    8. 'min' → logprob: -8.520870208740234
    9. '(friend' → logprob: -9.520870208740234
    10. '   ' → logprob: -9.770870208740234

Token 441: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.6689988970756531
    2. '_people' → logprob: -0.7939988970756531
    3. ',' → logprob: -3.543998956680298
    4. ',_' → logprob: -5.793998718261719
    5. ')' → logprob: -7.043998718261719
    6. '       ' → logprob: -7.668998718261719
    7. '_min' → logprob: -7.668998718261719
    8. '_,' → logprob: -7.918998718261719
    9. '_' → logprob: -8.168998718261719
    10. ')_' → logprob: -8.668998718261719

Token 442: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013259568950161338
    2. ',b' → logprob: -7.001326084136963
    3. ' ,' → logprob: -8.751325607299805
    4. ',
' → logprob: -9.501325607299805
    5. '),' → logprob: -9.751325607299805
    6. ')' → logprob: -9.751325607299805
    7. ',max' → logprob: -11.376325607299805
    8. ',a' → logprob: -12.001325607299805
    9. ',min' → logprob: -12.251325607299805
    10. '       ' → logprob: -12.626325607299805

Token 443: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.16129936277866364
    2. ' b' → logprob: -1.9112993478775024
    3. 'self' → logprob: -7.036299228668213
    4. ' self' → logprob: -9.161299705505371
    5. '    ' → logprob: -10.911299705505371
    6. '   ' → logprob: -11.286299705505371
    7. ',b' → logprob: -11.286299705505371
    8. ',' → logprob: -11.411299705505371
    9. '       ' → logprob: -11.786299705505371
    10. ')b' → logprob: -12.286299705505371

Token 444: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0012159519828855991
    2. ')' → logprob: -7.501215934753418
    3. '_people' → logprob: -7.751215934753418
    4. ')_' → logprob: -8.876215934753418
    5. ',' → logprob: -9.876215934753418
    6. '_' → logprob: -11.126215934753418
    7. '_)' → logprob: -11.876215934753418
    8. '_ai' → logprob: -12.876215934753418
    9. '_pe' → logprob: -13.126215934753418
    10. ',_' → logprob: -13.376215934753418

Token 445: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02128099463880062
    2. ',' → logprob: -4.021280765533447
    3. '),' → logprob: -6.021280765533447
    4. ')
' → logprob: -7.896280765533447
    5. '       ' → logprob: -8.396281242370605
    6. ',)' → logprob: -11.021281242370605
    7. '   ' → logprob: -11.271281242370605
    8. ' )' → logprob: -11.396281242370605
    9. '):
' → logprob: -11.896281242370605
    10. '           ' → logprob: -11.896281242370605

Token 446: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37012559175491333
    2. ',' → logprob: -1.4951255321502686
    3. ')' → logprob: -2.7451255321502686
    4. '<|end|>' → logprob: -4.745125770568848
    5. ',
' → logprob: -6.120125770568848
    6. ')
' → logprob: -6.245125770568848
    7. '),' → logprob: -6.620125770568848
    8. '<|end|>' → logprob: -6.745125770568848
    9. '
' → logprob: -7.120125770568848
    10. '#' → logprob: -7.120125770568848

Token 447: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5281050205230713
    2. ')' → logprob: -1.6531050205230713
    3. ',' → logprob: -1.6531050205230713
    4. ')
' → logprob: -4.153104782104492
    5. '),' → logprob: -5.778104782104492
    6. ',
' → logprob: -6.278104782104492
    7. '
' → logprob: -6.903104782104492
    8. '```' → logprob: -7.278104782104492
    9. '   ' → logprob: -7.778104782104492
    10. 'tokens' → logprob: -7.903104782104492

Token 448: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03325188532471657
    2. ',' → logprob: -4.658251762390137
    3. '        
' → logprob: -5.408251762390137
    4. 'import' → logprob: -5.658251762390137
    5. '```' → logprob: -5.783251762390137
    6. '
' → logprob: -6.283251762390137
    7. '2' → logprob: -6.283251762390137
    8. '#' → logprob: -6.408251762390137
    9. 'tokens' → logprob: -6.408251762390137
    10. ')' → logprob: -7.158251762390137

Token 449: '2' (ID: 17)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.9504009485244751
    2. 'sort' → logprob: -1.450400948524475
    3. '2' → logprob: -1.825400948524475
    4. 'friends' → logprob: -2.4504008293151855
    5. '#' → logprob: -3.8254008293151855
    6. '       ' → logprob: -3.9504008293151855
    7. 'a' → logprob: -3.9504008293151855
    8. 'sorted' → logprob: -4.0754008293151855
    9. ')' → logprob: -4.3254008293151855
    10. 'friend' → logprob: -5.5754008293151855

Token 450: ')' (ID: 8)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5335913896560669
    2. ')' → logprob: -1.658591389656067
    3. 'import' → logprob: -2.2835912704467773
    4. ' =' → logprob: -3.0335912704467773
    5. '=' → logprob: -3.7835912704467773
    6. ',' → logprob: -4.783591270446777
    7. 'sort' → logprob: -4.908591270446777
    8. 'a' → logprob: -5.408591270446777
    9. '.sort' → logprob: -5.408591270446777
    10. '   ' → logprob: -5.783591270446777

Token 451: ' We' (ID: 1416)
  Prédit: 'Sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Sort' → logprob: -1.4479730129241943
    2. 'from' → logprob: -1.8229730129241943
    3. 'a' → logprob: -2.0729730129241943
    4. 'friends' → logprob: -2.0729730129241943
    5. 'sort' → logprob: -2.1979730129241943
    6. ' friends' → logprob: -2.8229730129241943
    7. ' Sort' → logprob: -3.3229730129241943
    8. 'b' → logprob: -3.4479730129241943
    9. ' sort' → logprob: -3.5729730129241943
    10. 'Extract' → logprob: -4.322973251342773

Token 452: ' want' (ID: 1682)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.0629568099975586
    2. 'can' → logprob: -1.0629568099975586
    3. 'import' → logprob: -1.6879568099975586
    4. 'sort' → logprob: -3.8129568099975586
    5. '#' → logprob: -4.062956809997559
    6. 'could' → logprob: -4.062956809997559
    7. 'def' → logprob: -4.187956809997559
    8. '...' → logprob: -4.812956809997559
    9. ''ll' → logprob: -5.062956809997559
    10. '=' → logprob: -5.312956809997559

Token 453: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.4473460614681244
    2. 'to' → logprob: -1.0723460912704468
    3. 'friends' → logprob: -4.947346210479736
    4. 'def' → logprob: -5.822346210479736
    5. ' friends' → logprob: -5.947346210479736
    6. 'a' → logprob: -6.822346210479736
    7. '       ' → logprob: -7.197346210479736
    8. 'self' → logprob: -7.447346210479736
    9. ' a' → logprob: -7.697346210479736
    10. '   ' → logprob: -7.822346210479736

Token 454: ' quickly' (ID: 8065)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.295597106218338
    2. ' find' → logprob: -2.2955970764160156
    3. 'sort' → logprob: -2.5455970764160156
    4. 'count' → logprob: -3.2955970764160156
    5. 'check' → logprob: -4.795597076416016
    6. ' sort' → logprob: -5.045597076416016
    7. 'binary' → logprob: -5.170597076416016
    8. 'select' → logprob: -5.545597076416016
    9. 'use' → logprob: -5.920597076416016
    10. 'def' → logprob: -6.295597076416016

Token 455: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.3911161422729492
    2. 'count' → logprob: -2.016116142272949
    3. ' find' → logprob: -2.391116142272949
    4. 'check' → logprob: -2.891116142272949
    5. 'filter' → logprob: -3.891116142272949
    6. ' count' → logprob: -5.141116142272949
    7. 'query' → logprob: -5.391116142272949
    8. ' check' → logprob: -5.391116142272949
    9. 'answer' → logprob: -5.891116142272949
    10. 'know' → logprob: -6.266116142272949

Token 456: ' counts' (ID: 28991)
  Prédit: ' how'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' how' → logprob: -0.7553490996360779
    2. ' the' → logprob: -1.5053491592407227
    3. ' friends' → logprob: -2.0053491592407227
    4. 'friends' → logprob: -2.5053491592407227
    5. 'the' → logprob: -2.7553491592407227
    6. 'how' → logprob: -3.7553491592407227
    7. 'all' → logprob: -6.630349159240723
    8. ' all' → logprob: -7.005349159240723
    9. ' a' → logprob: -7.755349159240723
    10. 'friend' → logprob: -8.130349159240723

Token 457: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9055243730545044
    2. ' of' → logprob: -2.280524253845215
    3. ',' → logprob: -2.530524253845215
    4. ' ' → logprob: -2.530524253845215
    5. '<|end|>' → logprob: -2.905524253845215
    6. ')' → logprob: -3.280524253845215
    7. '[' → logprob: -3.405524253845215
    8. ' =' → logprob: -3.530524253845215
    9. '=' → logprob: -3.905524253845215
    10. '        ' → logprob: -4.030524253845215

Token 458: ' friends' (ID: 5664)
  Prédit: ' friends'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' friends' → logprob: -0.3412494659423828
    2. 'friends' → logprob: -1.3412494659423828
    3. ' b' → logprob: -4.841249465942383
    4. 'a' → logprob: -4.841249465942383
    5. ' a' → logprob: -5.216249465942383
    6. 'b' → logprob: -5.341249465942383
    7. '```' → logprob: -8.841249465942383
    8. ' all' → logprob: -8.966249465942383
    9. ' how' → logprob: -9.091249465942383
    10. ' intervals' → logprob: -9.216249465942383

Token 459: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.2513708174228668
    2. 'with' → logprob: -1.7513707876205444
    3. ' whose' → logprob: -3.626370906829834
    4. ' who' → logprob: -5.501370906829834
    5. ',' → logprob: -5.626370906829834
    6. ' satisfying' → logprob: -5.751370906829834
    7. ' where' → logprob: -5.876370906829834
    8. '       ' → logprob: -6.126370906829834
    9. '<|end|>' → logprob: -7.001370906829834
    10. 'whose' → logprob: -7.126370906829834

Token 460: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.35020461678504944
    2. ' a' → logprob: -1.225204586982727
    3. 'constraint' → logprob: -7.4752044677734375
    4. 'friend' → logprob: -8.225204467773438
    5. 'self' → logprob: -8.850204467773438
    6. ' constraint' → logprob: -9.225204467773438
    7. ' friend' → logprob: -9.225204467773438
    8. ' b' → logprob: -9.350204467773438
    9. '_a' → logprob: -9.475204467773438
    10. 'b' → logprob: -9.600204467773438

Token 461: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00010092071170220152
    2. 'i' → logprob: -9.750101089477539
    3. '_min' → logprob: -11.125101089477539
    4. 'min' → logprob: -11.625101089477539
    5. '```' → logprob: -12.500101089477539
    6. '[i' → logprob: -12.625101089477539
    7. '__' → logprob: -13.250101089477539
    8. '_' → logprob: -13.625101089477539
    9. 's' → logprob: -14.000101089477539
    10. ' _' → logprob: -14.000101089477539

Token 462: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.06250467896461487
    2. '<=' → logprob: -2.812504768371582
    3. ' >=' → logprob: -8.437504768371582
    4. ',' → logprob: -9.687504768371582
    5. '>=' → logprob: -10.187504768371582
    6. ']<=' → logprob: -10.437504768371582
    7. ')<=' → logprob: -10.562504768371582
    8. '[' → logprob: -10.562504768371582
    9. ')' → logprob: -10.687504768371582
    10. '```' → logprob: -10.937504768371582

Token 463: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.5883685946464539
    2. 'total' → logprob: -1.3383686542510986
    3. ' k' → logprob: -2.0883686542510986
    4. 'k' → logprob: -2.8383686542510986
    5. ' ' → logprob: -11.33836841583252
    6. '    ' → logprob: -11.46336841583252
    7. '_total' → logprob: -11.96336841583252
    8. 't' → logprob: -12.08836841583252
    9. '(total' → logprob: -12.21336841583252
    10. '   ' → logprob: -12.46336841583252

Token 464: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3650866150856018
    2. '       ' → logprob: -1.615086555480957
    3. ',' → logprob: -2.615086555480957
    4. 'and' → logprob: -4.240086555480957
    5. ')' → logprob: -5.490086555480957
    6. '.' → logprob: -5.740086555480957
    7. ' for' → logprob: -5.865086555480957
    8. 'import' → logprob: -6.365086555480957
    9. '<|end|>' → logprob: -6.490086555480957
    10. ':' → logprob: -7.240086555480957

Token 465: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.31905022263526917
    2. ' b' → logprob: -1.3190501928329468
    3. 'total' → logprob: -5.694050312042236
    4. ' total' → logprob: -6.444050312042236
    5. ' ' → logprob: -7.694050312042236
    6. '   ' → logprob: -9.194049835205078
    7. '     ' → logprob: -9.944049835205078
    8. 'self' → logprob: -10.069049835205078
    9. '    ' → logprob: -10.694049835205078
    10. '  ' → logprob: -10.694049835205078

Token 466: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00017314712749794126
    2. '>=' → logprob: -9.125173568725586
    3. '_' → logprob: -10.000173568725586
    4. ' >=' → logprob: -12.125173568725586
    5. '_j' → logprob: -12.625173568725586
    6. '[i' → logprob: -13.500173568725586
    7. '```' → logprob: -13.500173568725586
    8. 'i' → logprob: -13.625173568725586
    9. '__' → logprob: -13.750173568725586
    10. '>' → logprob: -14.625173568725586

Token 467: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.041026532649993896
    2. '>=' → logprob: -3.2910265922546387
    3. ' <=' → logprob: -5.916026592254639
    4. '<=' → logprob: -9.41602611541748
    5. ')' → logprob: -10.29102611541748
    6. ']>=' → logprob: -10.91602611541748
    7. ' ' → logprob: -11.04102611541748
    8. ' >' → logprob: -11.16602611541748
    9. '   ' → logprob: -11.41602611541748
    10. '```' → logprob: -11.54102611541748

Token 468: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.10022392123937607
    2. ' total' → logprob: -2.350224018096924
    3. '       ' → logprob: -11.725223541259766
    4. '           ' → logprob: -12.350223541259766
    5. '   ' → logprob: -12.850223541259766
    6. '               ' → logprob: -14.600223541259766
    7. ' ' → logprob: -14.600223541259766
    8. '                   ' → logprob: -15.225223541259766
    9. '```' → logprob: -15.225223541259766
    10. '	total' → logprob: -15.725223541259766

Token 469: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017780542373657227
    2. '        
' → logprob: -4.767780303955078
    3. '
' → logprob: -5.767780303955078
    4. ',' → logprob: -6.017780303955078
    5. 'import' → logprob: -7.142780303955078
    6. ')' → logprob: -7.267780303955078
    7. '```' → logprob: -8.017780303955078
    8. '   ' → logprob: -8.267780303955078
    9. '<|end|>' → logprob: -8.642780303955078
    10. ':' → logprob: -8.767780303955078

Token 470: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009276605560444295
    2. '        
' → logprob: -8.375927925109863
    3. '```' → logprob: -8.375927925109863
    4. '   ' → logprob: -9.000927925109863
    5. '<|end|>' → logprob: -9.125927925109863
    6. '\n' → logprob: -10.250927925109863
    7. ',' → logprob: -10.375927925109863
    8. '\' → logprob: -10.625927925109863
    9. ')' → logprob: -11.000927925109863
    10. 'import' → logprob: -11.125927925109863

Token 471: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016744681634008884
    2. 'import' → logprob: -6.876674652099609
    3. 'from' → logprob: -7.876674652099609
    4. '        
' → logprob: -9.00167465209961
    5. '```' → logprob: -9.87667465209961
    6. '
' → logprob: -10.00167465209961
    7. '        ' → logprob: -11.12667465209961
    8. 'friend' → logprob: -12.12667465209961
    9. 'def' → logprob: -12.37667465209961
    10. 'a' → logprob: -12.37667465209961

Token 472: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14137890934944153
    2. 'a' → logprob: -2.641378879547119
    3. 'import' → logprob: -3.766378879547119
    4. 'def' → logprob: -5.016378879547119
    5. ' a' → logprob: -5.141378879547119
    6. '#' → logprob: -5.266378879547119
    7. ' friends' → logprob: -5.516378879547119
    8. 'friends' → logprob: -5.516378879547119
    9. 'from' → logprob: -5.641378879547119
    10. 'friend' → logprob: -5.891378879547119

Token 473: ' can' (ID: 665)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9618371725082397
    2. ' can' → logprob: -1.0868371725082397
    3. 'can' → logprob: -1.8368371725082397
    4. 'def' → logprob: -3.2118372917175293
    5. 'need' → logprob: -4.711837291717529
    6. 'from' → logprob: -4.711837291717529
    7. 'could' → logprob: -4.961837291717529
    8. ' need' → logprob: -5.086837291717529
    9. '       ' → logprob: -5.336837291717529
    10. ''ll' → logprob: -5.336837291717529

Token 474: ' preprocess' (ID: 122926)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.7441126704216003
    2. 'extract' → logprob: -1.7441127300262451
    3. 'sort' → logprob: -2.119112730026245
    4. 'collect' → logprob: -2.244112730026245
    5. ' use' → logprob: -3.494112730026245
    6. 'first' → logprob: -3.869112730026245
    7. 'pre' → logprob: -3.994112730026245
    8. 'prepare' → logprob: -4.369112491607666
    9. 'import' → logprob: -5.369112491607666
    10. 'store' → logprob: -5.494112491607666

Token 475: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3346307873725891
    2. 'self' → logprob: -1.5846307277679443
    3. 'a' → logprob: -4.084630966186523
    4. ' self' → logprob: -4.334630966186523
    5. ' =' → logprob: -5.084630966186523
    6. 'b' → logprob: -5.084630966186523
    7. '_ranges' → logprob: -5.084630966186523
    8. ' a' → logprob: -5.459630966186523
    9. '(self' → logprob: -5.584630966186523
    10. ',' → logprob: -6.459630966186523

Token 476: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011720214039087296
    2. ' a' → logprob: -5.261720180511475
    3. 'a' → logprob: -5.511720180511475
    4. 'import' → logprob: -7.136720180511475
    5. '```' → logprob: -7.886720180511475
    6. 'from' → logprob: -8.136720657348633
    7. ' friends' → logprob: -8.761720657348633
    8. ' sorted' → logprob: -8.886720657348633
    9. ' from' → logprob: -9.511720657348633
    10. '        ' → logprob: -9.636720657348633

Token 477: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016866575926542282
    2. ' a' → logprob: -4.766866683959961
    3. 'a' → logprob: -5.141866683959961
    4. ' friends' → logprob: -7.141866683959961
    5. ' sorted' → logprob: -7.766866683959961
    6. '        
' → logprob: -8.391866683959961
    7. '```' → logprob: -8.766866683959961
    8. ' ranges' → logprob: -9.141866683959961
    9. ' friend' → logprob: -9.516866683959961
    10. '        ' → logprob: -9.641866683959961

Token 478: ' -' (ID: 533)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3179171085357666
    2. ' a' → logprob: -1.5679171085357666
    3. '       ' → logprob: -3.0679171085357666
    4. ' min' → logprob: -5.3179168701171875
    5. 'min' → logprob: -5.5679168701171875
    6. ' b' → logprob: -6.6929168701171875
    7. 'lower' → logprob: -7.0679168701171875
    8. 'self' → logprob: -7.1929168701171875
    9. 'b' → logprob: -7.3179168701171875
    10. ' self' → logprob: -7.5679168701171875

Token 479: ' Sort' (ID: 25945)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.17837181687355042
    2. ' a' → logprob: -3.3033719062805176
    3. 'self' → logprob: -3.5533719062805176
    4. 'from' → logprob: -3.6783719062805176
    5. 'b' → logprob: -4.178371906280518
    6. 'friends' → logprob: -4.803371906280518
    7. '#' → logprob: -4.928371906280518
    8. ' friends' → logprob: -4.928371906280518
    9. ' b' → logprob: -5.303371906280518
    10. ' self' → logprob: -5.553371906280518

Token 480: ' friends' (ID: 5664)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04975937306880951
    2. '(self' → logprob: -3.7997593879699707
    3. '       ' → logprob: -4.549759387969971
    4. ' self' → logprob: -4.924759387969971
    5. 'friends' → logprob: -5.174759387969971
    6. 'by' → logprob: -6.799759387969971
    7. ' friends' → logprob: -8.049758911132812
    8. '_by' → logprob: -8.174758911132812
    9. '```' → logprob: -8.549758911132812
    10. '_f' → logprob: -8.674758911132812

Token 481: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.3209786117076874
    2. ' by' → logprob: -2.1959786415100098
    3. ' =' → logprob: -3.0709786415100098
    4. '       ' → logprob: -3.3209786415100098
    5. '_by' → logprob: -3.6959786415100098
    6. '=' → logprob: -4.44597864151001
    7. '   ' → logprob: -4.82097864151001
    8. '_f' → logprob: -4.94597864151001
    9. '.sort' → logprob: -4.94597864151001
    10. 'self' → logprob: -5.44597864151001

Token 482: ' a' (ID: 261)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7716867923736572
    2. 'friend' → logprob: -1.0216867923736572
    3. 'constraint' → logprob: -2.7716867923736572
    4. 'lambda' → logprob: -3.2716867923736572
    5. 'f' → logprob: -3.7716867923736572
    6. ' friend' → logprob: -4.146686553955078
    7. ' self' → logprob: -4.271686553955078
    8. ' lambda' → logprob: -4.646686553955078
    9. 'a' → logprob: -5.021686553955078
    10. ' constraint' → logprob: -6.021686553955078

Token 483: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0022538607008755207
    2. 'constraint' → logprob: -6.877254009246826
    3. 'i' → logprob: -7.502254009246826
    4. 'min' → logprob: -8.252253532409668
    5. '_people' → logprob: -9.002253532409668
    6. '_min' → logprob: -9.627253532409668
    7. 'self' → logprob: -10.127253532409668
    8. '_constraint' → logprob: -10.502253532409668
    9. '```' → logprob: -10.627253532409668
    10. '__' → logprob: -11.252253532409668

Token 484: ' ascending' (ID: 75564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27010077238082886
    2. ',' → logprob: -2.3951008319854736
    3. '.sort' → logprob: -3.1451008319854736
    4. ' =' → logprob: -3.2701008319854736
    5. ')' → logprob: -4.5201005935668945
    6. ':' → logprob: -4.8951005935668945
    7. ':
' → logprob: -5.0201005935668945
    8. '_sorted' → logprob: -5.2701005935668945
    9. '=' → logprob: -5.3951005935668945
    10. '[' → logprob: -5.3951005935668945

Token 485: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06303143501281738
    2. '
' → logprob: -3.6880314350128174
    3. ',' → logprob: -4.688031196594238
    4. '\n' → logprob: -4.938031196594238
    5. '        
' → logprob: -5.938031196594238
    6. ':
' → logprob: -6.313031196594238
    7. ',
' → logprob: -6.438031196594238
    8. '   ' → logprob: -6.563031196594238
    9. '\' → logprob: -6.563031196594238
    10. ')' → logprob: -6.563031196594238

Token 486: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016586360288783908
    2. ',' → logprob: -7.0016584396362305
    3. '        
' → logprob: -8.62665843963623
    4. '```' → logprob: -8.62665843963623
    5. ' and' → logprob: -8.75165843963623
    6. '#' → logprob: -9.75165843963623
    7. 'from' → logprob: -9.75165843963623
    8. '
' → logprob: -10.37665843963623
    9. 'and' → logprob: -11.12665843963623
    10. 'import' → logprob: -11.25165843963623

Token 487: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009025071747601032
    2. ',' → logprob: -5.3840250968933105
    3. 'friends' → logprob: -7.0090250968933105
    4. '```' → logprob: -7.5090250968933105
    5. ')' → logprob: -7.6340250968933105
    6. ' friends' → logprob: -7.6340250968933105
    7. '        
' → logprob: -8.009024620056152
    8. '.' → logprob: -8.259024620056152
    9. ' and' → logprob: -8.509024620056152
    10. 'sorted' → logprob: -8.634024620056152

Token 488: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49518752098083496
    2. ' friends' → logprob: -1.245187520980835
    3. 'friends' → logprob: -2.370187520980835
    4. ' b' → logprob: -6.245187759399414
    5. '#' → logprob: -6.495187759399414
    6. 'b' → logprob: -6.620187759399414
    7. ' sorted' → logprob: -6.745187759399414
    8. 'friend' → logprob: -7.620187759399414
    9. '```' → logprob: -7.620187759399414
    10. ' and' → logprob: -7.870187759399414

Token 489: ' Prepare' (ID: 49102)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.2257931232452393
    2. 'Sort' → logprob: -1.4757931232452393
    3. ' b' → logprob: -1.6007931232452393
    4. ' Sort' → logprob: -2.9757931232452393
    5. ' friends' → logprob: -3.1007931232452393
    6. 'import' → logprob: -3.2257931232452393
    7. 'from' → logprob: -3.2257931232452393
    8. 'friends' → logprob: -3.2257931232452393
    9. '#' → logprob: -4.60079288482666
    10. ' from' → logprob: -4.85079288482666

Token 490: ' a' (ID: 261)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.318264126777649
    2. 'two' → logprob: -1.443264126777649
    3. ' two' → logprob: -1.568264126777649
    4. 'a' → logprob: -2.4432640075683594
    5. 'self' → logprob: -2.5682640075683594
    6. ' a' → logprob: -2.6932640075683594
    7. ' b' → logprob: -3.8182640075683594
    8. ' an' → logprob: -4.068264007568359
    9. ' arrays' → logprob: -5.318264007568359
    10. 'sorted' → logprob: -5.818264007568359

Token 491: ' binary' (ID: 15600)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.38719162344932556
    2. 'sorted' → logprob: -1.512191653251648
    3. 'list' → logprob: -3.0121915340423584
    4. ' b' → logprob: -3.3871915340423584
    5. 'bit' → logprob: -5.5121917724609375
    6. ' list' → logprob: -5.8871917724609375
    7. ' sorted' → logprob: -6.1371917724609375
    8. '_b' → logprob: -6.5121917724609375
    9. '_sorted' → logprob: -7.1371917724609375
    10. 'segment' → logprob: -7.1371917724609375

Token 492: ' indexed' (ID: 44010)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.2651103436946869
    2. 'indexed' → logprob: -1.8901103734970093
    3. ' indexed' → logprob: -3.1401102542877197
    4. '_search' → logprob: -3.8901102542877197
    5. ' search' → logprob: -4.140110492706299
    6. 'index' → logprob: -7.390110492706299
    7. 'import' → logprob: -7.765110492706299
    8. '_index' → logprob: -7.890110492706299
    9. '```' → logprob: -8.39011001586914
    10. '<|end|>' → logprob: -8.89011001586914

Token 493: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.49821338057518005
    2. ' tree' → logprob: -0.9982134103775024
    3. '_tree' → logprob: -3.748213291168213
    4. 'ree' → logprob: -8.373213768005371
    5. ' ' → logprob: -10.748213768005371
    6. '-tree' → logprob: -11.123213768005371
    7. 'Tree' → logprob: -11.998213768005371
    8. '  ' → logprob: -13.248213768005371
    9. '   ' → logprob: -13.248213768005371
    10. '_t' → logprob: -13.373213768005371

Token 494: ' or' (ID: 503)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9393464922904968
    2. '<|end|>' → logprob: -1.8143465518951416
    3. '[' → logprob: -1.9393465518951416
    4. ')' → logprob: -2.1893465518951416
    5. ' (' → logprob: -2.5643465518951416
    6. ',' → logprob: -3.0643465518951416
    7. ' or' → logprob: -3.6893465518951416
    8. '       ' → logprob: -4.3143463134765625
    9. ']' → logprob: -4.8143463134765625
    10. '(
' → logprob: -5.0643463134765625

Token 495: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.25219249725341797
    2. ' segment' → logprob: -1.502192497253418
    3. 'sorted' → logprob: -9.252192497253418
    4. 'Segment' → logprob: -9.502192497253418
    5. '_segment' → logprob: -10.252192497253418
    6. ' Segment' → logprob: -11.127192497253418
    7. 'balanced' → logprob: -11.252192497253418
    8. 'seg' → logprob: -11.252192497253418
    9. ' a' → logprob: -12.002192497253418
    10. 'a' → logprob: -12.127192497253418

Token 496: ' tree' (ID: 8165)
  Prédit: ' tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tree' → logprob: -0.5460959672927856
    2. 'tree' → logprob: -1.5460959672927856
    3. '_tree' → logprob: -1.6710959672927856
    4. '_' → logprob: -4.546095848083496
    5. ' _' → logprob: -5.796095848083496
    6. '   ' → logprob: -6.171095848083496
    7. '       ' → logprob: -6.546095848083496
    8. 'ree' → logprob: -6.921095848083496
    9. ' ' → logprob: -8.296095848083496
    10. 'Tree' → logprob: -8.421095848083496

Token 497: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9365416169166565
    2. ',' → logprob: -1.3115415573120117
    3. ')' → logprob: -2.3115415573120117
    4. '[' → logprob: -2.4365415573120117
    5. ' for' → logprob: -3.4365415573120117
    6. '(' → logprob: -3.9365415573120117
    7. '(
' → logprob: -4.186541557312012
    8. ':' → logprob: -4.311541557312012
    9. ' or' → logprob: -4.436541557312012
    10. ']' → logprob: -5.061541557312012

Token 498: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0662354901432991
    2. ' b' → logprob: -2.8162355422973633
    3. ' the' → logprob: -5.941235542297363
    4. 'the' → logprob: -7.066235542297363
    5. 'max' → logprob: -7.816235542297363
    6. ' max' → logprob: -8.691235542297363
    7. ' their' → logprob: -9.566235542297363
    8. '_b' → logprob: -10.066235542297363
    9. 'self' → logprob: -10.316235542297363
    10. 'their' → logprob: -10.941235542297363

Token 499: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00623106025159359
    2. '_' → logprob: -5.25623083114624
    3. '_values' → logprob: -7.75623083114624
    4. ')_' → logprob: -9.506231307983398
    5. ')' → logprob: -9.881231307983398
    6. '_indices' → logprob: -10.006231307983398
    7. ''_' → logprob: -10.006231307983398
    8. '_f' → logprob: -10.131231307983398
    9. '_max' → logprob: -10.631231307983398
    10. '_list' → logprob: -10.631231307983398

Token 500: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3478809595108032
    2. ':' → logprob: -2.4728808403015137
    3. ')' → logprob: -2.5978808403015137
    4. ',' → logprob: -3.3478808403015137
    5. '[' → logprob: -3.5978808403015137
    6. '   ' → logprob: -4.097880840301514
    7. ']' → logprob: -4.222880840301514
    8. 's' → logprob: -4.722880840301514
    9. '):' → logprob: -5.597880840301514
    10. '_' → logprob: -5.722880840301514

Token 501: ' count' (ID: 3605)
  Prédit: ' support'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' support' → logprob: -0.871231198310852
    2. 'support' → logprob: -1.121231198310852
    3. 'query' → logprob: -2.3712310791015625
    4. 'answer' → logprob: -3.7462310791015625
    5. 'perform' → logprob: -3.7462310791015625
    6. 'count' → logprob: -3.9962310791015625
    7. ' query' → logprob: -3.9962310791015625
    8. ' efficiently' → logprob: -3.9962310791015625
    9. ' track' → logprob: -5.1212310791015625
    10. 'efficient' → logprob: -5.2462310791015625

Token 502: ' how' (ID: 1495)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.9264667630195618
    2. ')' → logprob: -2.676466703414917
    3. 'the' → logprob: -2.676466703414917
    4. 'values' → logprob: -2.676466703414917
    5. ' values' → logprob: -2.926466703414917
    6. ']' → logprob: -3.051466703414917
    7. ' frequencies' → logprob: -3.051466703414917
    8. ',' → logprob: -3.426466703414917
    9. ' friends' → logprob: -3.551466703414917
    10. '   ' → logprob: -3.801466703414917

Token 503: ' many' (ID: 1991)
  Prédit: 'many'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'many' → logprob: -0.23518939316272736
    2. ' many' → logprob: -2.110189437866211
    3. '_i' → logprob: -3.735189437866211
    4. '_many' → logprob: -4.235189437866211
    5. 'much' → logprob: -4.485189437866211
    6. '<=' → logprob: -5.110189437866211
    7. 'are' → logprob: -5.860189437866211
    8. '#' → logprob: -5.860189437866211
    9. '>=' → logprob: -5.860189437866211
    10. '_' → logprob: -6.235189437866211

Token 504: ' friends' (ID: 5664)
  Prédit: ' friends'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' friends' → logprob: -0.30791765451431274
    2. '<|end|>' → logprob: -2.057917594909668
    3. 'friends' → logprob: -2.932917594909668
    4. ')' → logprob: -3.807917594909668
    5. ' values' → logprob: -4.057917594909668
    6. ' have' → logprob: -4.807917594909668
    7. ' are' → logprob: -5.182917594909668
    8. 'values' → logprob: -5.432917594909668
    9. ' of' → logprob: -5.432917594909668
    10. ',' → logprob: -5.682917594909668

Token 505: ' with' (ID: 483)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 506: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1630944460630417
    2. ' b' → logprob: -1.913094401359558
    3. ' values' → logprob: -6.788094520568848
    4. 'values' → logprob: -7.788094520568848
    5. ' large' → logprob: -8.038094520568848
    6. ' a' → logprob: -8.288094520568848
    7. 'a' → logprob: -9.038094520568848
    8. 'large' → logprob: -9.163094520568848
    9. 'valid' → logprob: -9.788094520568848
    10. '```' → logprob: -9.788094520568848

Token 507: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -3.3451433409936726e-05
    2. '_' → logprob: -11.250033378601074
    3. 'i' → logprob: -11.625033378601074
    4. '>=' → logprob: -12.250033378601074
    5. '_idx' → logprob: -14.000033378601074
    6. '```' → logprob: -14.000033378601074
    7. '_index' → logprob: -14.125033378601074
    8. ''_' → logprob: -15.000033378601074
    9. '\' → logprob: -15.250033378601074
    10. ')_' → logprob: -15.375033378601074

Token 508: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.2527506649494171
    2. '>=' → logprob: -1.5027506351470947
    3. ']>=' → logprob: -8.002750396728516
    4. '```' → logprob: -8.752750396728516
    5. '≥' → logprob: -8.877750396728516
    6. ')>=' → logprob: -10.127750396728516
    7. ' are' → logprob: -11.002750396728516
    8. 's' → logprob: -11.002750396728516
    9. '   ' → logprob: -11.002750396728516
    10. ' ' → logprob: -11.127750396728516

Token 509: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.22614149749279022
    2. ' total' → logprob: -1.6011414527893066
    3. 'b' → logprob: -7.976141452789307
    4. ' b' → logprob: -7.976141452789307
    5. 'k' → logprob: -11.851141929626465
    6. '0' → logprob: -11.976141929626465
    7. '(total' → logprob: -11.976141929626465
    8. '
' → logprob: -12.476141929626465
    9. ' k' → logprob: -12.976141929626465
    10. '   ' → logprob: -13.226141929626465

Token 510: ' among' (ID: 6200)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10238955914974213
    2. ':' → logprob: -3.3523895740509033
    3. ',' → logprob: -3.7273895740509033
    4. '   ' → logprob: -4.352389335632324
    5. ')' → logprob: -5.227389335632324
    6. ':
' → logprob: -5.352389335632324
    7. '        
' → logprob: -5.852389335632324
    8. '
' → logprob: -6.477389335632324
    9. '):' → logprob: -6.477389335632324
    10. '[' → logprob: -6.602389335632324

Token 511: ' those' (ID: 2617)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.1435375213623047
    2. 'those' → logprob: -1.1435375213623047
    3. ' the' → logprob: -1.6435375213623047
    4. ' those' → logprob: -1.8935375213623047
    5. 'current' → logprob: -5.518537521362305
    6. ' current' → logprob: -6.018537521362305
    7. 'sorted' → logprob: -6.268537521362305
    8. ' friends' → logprob: -6.643537521362305
    9. 'currently' → logprob: -6.768537521362305
    10. 'b' → logprob: -7.143537521362305

Token 512: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -1.1751837730407715
    2. '       ' → logprob: -1.3001837730407715
    3. '   ' → logprob: -2.3001837730407715
    4. ' friends' → logprob: -3.1751837730407715
    5. 'with' → logprob: -3.5501837730407715
    6. ' sorted' → logprob: -3.6751837730407715
    7. ')' → logprob: -3.8001837730407715
    8. '[' → logprob: -3.8001837730407715
    9. '_sorted' → logprob: -3.8001837730407715
    10. ' =' → logprob: -4.0501837730407715

Token 513: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3498505651950836
    2. 'a' → logprob: -1.2248505353927612
    3. 'i' → logprob: -7.349850654602051
    4. 'index' → logprob: -8.47485065460205
    5. 'b' → logprob: -9.09985065460205
    6. ' b' → logprob: -9.97485065460205
    7. ' index' → logprob: -10.34985065460205
    8. 'sorted' → logprob: -10.34985065460205
    9. ' ' → logprob: -10.47485065460205
    10. '   ' → logprob: -10.47485065460205

Token 514: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00010664248111424968
    2. '_' → logprob: -9.625106811523438
    3. 'i' → logprob: -11.625106811523438
    4. '```' → logprob: -11.875106811523438
    5. '[i' → logprob: -12.125106811523438
    6. '[' → logprob: -12.750106811523438
    7. '__' → logprob: -13.125106811523438
    8. '<=' → logprob: -13.125106811523438
    9. '_
' → logprob: -13.375106811523438
    10. '   ' → logprob: -13.375106811523438

Token 515: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.058736652135849
    2. '<=' → logprob: -2.933736562728882
    3. 'sorted' → logprob: -6.808736801147461
    4. ' ' → logprob: -8.308736801147461
    5. ' sorted' → logprob: -8.308736801147461
    6. 's' → logprob: -8.433736801147461
    7. '_sorted' → logprob: -8.433736801147461
    8. ' ≤' → logprob: -8.683736801147461
    9. ' less' → logprob: -8.808736801147461
    10. ' <' → logprob: -8.808736801147461

Token 516: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.6075218915939331
    2. ' total' → logprob: -0.8575218915939331
    3. 'k' → logprob: -4.232522010803223
    4. ' k' → logprob: -4.357522010803223
    5. 'a' → logprob: -6.482522010803223
    6. ' a' → logprob: -6.982522010803223
    7. ' b' → logprob: -7.982522010803223
    8. ' friends' → logprob: -8.232522010803223
    9. 'friends' → logprob: -8.607522010803223
    10. 'b' → logprob: -8.732522010803223

Token 517: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025622067973017693
    2. '
' → logprob: -5.0256218910217285
    3. '        
' → logprob: -5.1506218910217285
    4. 'import' → logprob: -5.7756218910217285
    5. ',' → logprob: -5.9006218910217285
    6. 'from' → logprob: -6.4006218910217285
    7. 'def' → logprob: -6.7756218910217285
    8. ')' → logprob: -7.0256218910217285
    9. '```' → logprob: -7.1506218910217285
    10. '<|end|>' → logprob: -7.2756218910217285

Token 518: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0041579375974833965
    2. '        
' → logprob: -6.629158020019531
    3. ')' → logprob: -7.129158020019531
    4. ',' → logprob: -7.629158020019531
    5. 'from' → logprob: -7.629158020019531
    6. 'import' → logprob: -8.254158020019531
    7. '```' → logprob: -8.629158020019531
    8. '           ' → logprob: -9.004158020019531
    9. '   ' → logprob: -9.504158020019531
    10. '<|end|>' → logprob: -9.754158020019531

Token 519: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03508363664150238
    2. ')' → logprob: -4.785083770751953
    3. '        
' → logprob: -5.160083770751953
    4. 'import' → logprob: -5.410083770751953
    5. 'from' → logprob: -5.785083770751953
    6. '```' → logprob: -5.910083770751953
    7. ',' → logprob: -6.035083770751953
    8. ':' → logprob: -6.160083770751953
    9. '   ' → logprob: -6.660083770751953
    10. '.' → logprob: -7.535083770751953

Token 520: ' But' (ID: 3072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0070935082621872425
    2. '        
' → logprob: -5.88209342956543
    3. '   ' → logprob: -7.00709342956543
    4. 'from' → logprob: -7.25709342956543
    5. 'def' → logprob: -7.38209342956543
    6. 'import' → logprob: -7.75709342956543
    7. '
' → logprob: -8.00709342956543
    8. '```' → logprob: -8.25709342956543
    9. ')' → logprob: -8.38209342956543
    10. ',' → logprob: -8.75709342956543

Token 521: ' b' (ID: 287)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' we' → logprob: -0.7672087550163269
    2. 'we' → logprob: -1.8922088146209717
    3. '       ' → logprob: -2.0172088146209717
    4. '```' → logprob: -3.0172088146209717
    5. ' the' → logprob: -3.3922088146209717
    6. 'def' → logprob: -4.017208576202393
    7. ' to' → logprob: -4.267208576202393
    8. ' for' → logprob: -4.267208576202393
    9. 'import' → logprob: -4.642208576202393
    10. ' let's' → logprob: -4.892208576202393

Token 522: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00032366468803957105
    2. '_' → logprob: -8.375323295593262
    3. 'i' → logprob: -10.250323295593262
    4. '[i' → logprob: -11.625323295593262
    5. '[' → logprob: -12.000323295593262
    6. ' _' → logprob: -12.250323295593262
    7. ''_' → logprob: -12.250323295593262
    8. ')' → logprob: -12.375323295593262
    9. ')_' → logprob: -12.500323295593262
    10. '```' → logprob: -12.750323295593262

Token 523: ' max' (ID: 2999)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3211737871170044
    2. ')' → logprob: -2.821173667907715
    3. '_values' → logprob: -3.071173667907715
    4. '<|end|>' → logprob: -3.071173667907715
    5. ' >=' → logprob: -3.196173667907715
    6. '_list' → logprob: -3.696173667907715
    7. '>=' → logprob: -4.696173667907715
    8. ',' → logprob: -4.821173667907715
    9. '_' → logprob: -4.946173667907715
    10. ' <=' → logprob: -5.321173667907715

Token 524: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16387715935707092
    2. ')' → logprob: -2.913877248764038
    3. ' =' → logprob: -3.163877248764038
    4. '<|end|>' → logprob: -4.413877010345459
    5. ':' → logprob: -4.913877010345459
    6. ' ' → logprob: -5.163877010345459
    7. ',' → logprob: -5.163877010345459
    8. ']' → logprob: -5.288877010345459
    9. '_' → logprob: -5.413877010345459
    10. '}' → logprob: -5.663877010345459

Token 525: ' up' (ID: 869)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.4083169400691986
    2. '100' → logprob: -1.408316969871521
    3. ' ' → logprob: -2.4083168506622314
    4. '   ' → logprob: -7.9083170890808105
    5. '1' → logprob: -8.783316612243652
    6. ' max' → logprob: -9.158316612243652
    7. 'max' → logprob: -10.283316612243652
    8. 'int' → logprob: -11.408316612243652
    9. ' =' → logprob: -12.033316612243652
    10. '  ' → logprob: -12.283316612243652

Token 526: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -1.901854395866394
    2. '_to' → logprob: -1.901854395866394
    3. 'per' → logprob: -2.1518545150756836
    4. ' to' → logprob: -2.4018545150756836
    5. 'p' → logprob: -2.6518545150756836
    6. '0' → logprob: -3.0268545150756836
    7. '=' → logprob: -3.1518545150756836
    8. 'bound' → logprob: -3.2768545150756836
    9. '_' → logprob: -3.5268545150756836
    10. 'pper' → logprob: -3.5268545150756836

Token 527: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.3180095851421356
    2. '10' → logprob: -1.693009614944458
    3. ' ' → logprob: -2.443009614944458
    4. '1' → logprob: -6.568009376525879
    5. '   ' → logprob: -9.568009376525879
    6. 'max' → logprob: -11.068009376525879
    7. '200' → logprob: -11.318009376525879
    8. 'N' → logprob: -11.318009376525879
    9. '  ' → logprob: -12.193009376525879
    10. 'int' → logprob: -12.443009376525879

Token 528: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.47502872347831726
    2. '100' → logprob: -0.9750287532806396
    3. '1' → logprob: -7.6000285148620605
    4. 'N' → logprob: -8.350028991699219
    5. 'int' → logprob: -8.850028991699219
    6. 'max' → logprob: -10.100028991699219
    7. '200' → logprob: -11.475028991699219
    8. ' ' → logprob: -11.600028991699219
    9. '
' → logprob: -13.225028991699219
    10. '0' → logprob: -13.350028991699219

Token 529: '001' (ID: 7659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005251307040452957
    2. '        
' → logprob: -6.255251407623291
    3. '```' → logprob: -7.255251407623291
    4. ',' → logprob: -7.505251407623291
    5. '<|end|>' → logprob: -7.505251407623291
    6. ')' → logprob: -7.880251407623291
    7. '
' → logprob: -9.130250930786133
    8. ':' → logprob: -9.380250930786133
    9. '   ' → logprob: -9.505250930786133
    10. ']' → logprob: -9.630250930786133

Token 530: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7138350009918213
    2. ')' → logprob: -2.0888350009918213
    3. ':' → logprob: -2.4638350009918213
    4. ',' → logprob: -2.4638350009918213
    5. ']' → logprob: -3.0888350009918213
    6. '
' → logprob: -3.5888350009918213
    7. '   ' → logprob: -3.8388350009918213
    8. '[' → logprob: -4.088834762573242
    9. ')
' → logprob: -4.088834762573242
    10. '```' → logprob: -4.338834762573242

Token 531: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15777021646499634
    2. '```' → logprob: -2.7827701568603516
    3. ')' → logprob: -3.1577701568603516
    4. '\n' → logprob: -4.782770156860352
    5. ' 
' → logprob: -5.657770156860352
    6. ']' → logprob: -5.907770156860352
    7. '\' → logprob: -5.907770156860352
    8. '        
' → logprob: -5.907770156860352
    9. ' so' → logprob: -6.282770156860352
    10. '   ' → logprob: -6.282770156860352

Token 532: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.6213696002960205
    2. ' need' → logprob: -0.9963696002960205
    3. ' continue' → logprob: -4.246369361877441
    4. ' will' → logprob: -4.371369361877441
    5. 'import' → logprob: -4.746369361877441
    6. 'need' → logprob: -4.746369361877441
    7. ' have' → logprob: -4.996369361877441
    8. 'can' → logprob: -5.121369361877441
    9. ' may' → logprob: -5.621369361877441
    10. ')' → logprob: -5.746369361877441

Token 533: ' manage' (ID: 11659)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.6542056202888489
    2. ' use' → logprob: -1.404205560684204
    3. 'build' → logprob: -1.529205560684204
    4. 'implement' → logprob: -5.154205799102783
    5. ' build' → logprob: -5.279205799102783
    6. ' implement' → logprob: -6.279205799102783
    7. 'create' → logprob: -6.279205799102783
    8. 'initialize' → logprob: -7.529205799102783
    9. '```' → logprob: -7.654205799102783
    10. ' create' → logprob: -7.904205799102783

Token 534: ' that' (ID: 484)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13194651901721954
    2. ':' → logprob: -3.256946563720703
    3. ',' → logprob: -4.131946563720703
    4. ')' → logprob: -4.256946563720703
    5. ':
' → logprob: -4.881946563720703
    6. '
' → logprob: -5.006946563720703
    7. '```' → logprob: -5.006946563720703
    8. '   ' → logprob: -5.256946563720703
    9. '):' → logprob: -6.006946563720703
    10. ')
' → logprob: -6.006946563720703

Token 535: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06618259847164154
    2. ':' → logprob: -3.9411826133728027
    3. ':
' → logprob: -4.566182613372803
    4. '```' → logprob: -4.941182613372803
    5. '
' → logprob: -5.191182613372803
    6. '):
' → logprob: -5.441182613372803
    7. '        
' → logprob: -5.566182613372803
    8. '):' → logprob: -5.691182613372803
    9. 'def' → logprob: -5.941182613372803
    10. '   ' → logprob: -6.066182613372803

Token 536: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001399760483764112
    2. '        
' → logprob: -6.876399993896484
    3. '```' → logprob: -9.501399993896484
    4. ')' → logprob: -9.751399993896484
    5. '
' → logprob: -10.126399993896484
    6. ',' → logprob: -10.251399993896484
    7. '   ' → logprob: -10.751399993896484
    8. 'def' → logprob: -10.876399993896484
    9. 'from' → logprob: -11.001399993896484
    10. '           ' → logprob: -11.126399993896484

Token 537: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024832691997289658
    2. '        
' → logprob: -6.877483367919922
    3. '```' → logprob: -6.877483367919922
    4. '   ' → logprob: -9.377483367919922
    5. 'from' → logprob: -9.752483367919922
    6. 'import' → logprob: -10.127483367919922
    7. '           ' → logprob: -10.252483367919922
    8. '`' → logprob: -10.627483367919922
    9. '    
' → logprob: -10.877483367919922
    10. '
' → logprob: -10.877483367919922

Token 538: ' Alternative' (ID: 52728)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021132662892341614
    2. 'a' → logprob: -5.271132469177246
    3. 'import' → logprob: -5.271132469177246
    4. 'b' → logprob: -5.771132469177246
    5. 'from' → logprob: -5.896132469177246
    6. '#' → logprob: -6.396132469177246
    7. 'def' → logprob: -6.896132469177246
    8. 'friends' → logprob: -7.271132469177246
    9. 'friend' → logprob: -7.521132469177246
    10. '
' → logprob: -8.646132469177246

Token 539: ' simpl' (ID: 15693)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27619317173957825
    2. '       ' → logprob: -1.9011931419372559
    3. ':
' → logprob: -3.901193141937256
    4. '#' → logprob: -4.401193141937256
    5. '```' → logprob: -4.901193141937256
    6. 'def' → logprob: -5.026193141937256
    7. '
' → logprob: -5.026193141937256
    8. 'from' → logprob: -5.276193141937256
    9. ' approach' → logprob: -5.401193141937256
    10. ',' → logprob: -5.526193141937256

Token 540: 'ification' (ID: 3166)
  Prédit: 'ification'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ification' → logprob: -0.2481170892715454
    2. 'e' → logprob: -1.9981170892715454
    3. 'ation' → logprob: -3.748116970062256
    4. 'def' → logprob: -4.498116970062256
    5. '   ' → logprob: -4.998116970062256
    6. 'ution' → logprob: -5.123116970062256
    7. '#' → logprob: -5.123116970062256
    8. 'class' → logprob: -5.123116970062256
    9. '       ' → logprob: -5.373116970062256
    10. 'ection' → logprob: -5.623116970062256

Token 541: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5372045636177063
    2. '       ' → logprob: -1.0372045040130615
    3. ':
' → logprob: -4.162204742431641
    4. ',' → logprob: -4.662204742431641
    5. '   ' → logprob: -5.162204742431641
    6. '        
' → logprob: -5.162204742431641
    7. '<|end|>' → logprob: -5.787204742431641
    8. '):' → logprob: -5.787204742431641
    9. '#' → logprob: -6.037204742431641
    10. '
' → logprob: -6.037204742431641

Token 542: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013002344639971852
    2. '        
' → logprob: -7.12630033493042
    3. '
' → logprob: -8.126299858093262
    4. '```' → logprob: -9.001299858093262
    5. 'import' → logprob: -10.626299858093262
    6. 'from' → logprob: -11.001299858093262
    7. '#' → logprob: -11.626299858093262
    8. '    
' → logprob: -12.501299858093262
    9. '           ' → logprob: -12.626299858093262
    10. '        

' → logprob: -12.876299858093262

Token 543: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029920823872089386
    2. '```' → logprob: -6.877992153167725
    3. ' friends' → logprob: -7.502992153167725
    4. 'from' → logprob: -8.002991676330566
    5. '#' (adapté à ' #') → logprob: -8.127991676330566
    6. 'friends' → logprob: -8.377991676330566
    7. 'friend' → logprob: -9.502991676330566
    8. '        
' → logprob: -9.627991676330566
    9. 'import' → logprob: -9.752991676330566
    10. '   ' → logprob: -9.752991676330566

Token 544: ' Because' (ID: 13602)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5405846834182739
    2. '#' → logprob: -1.540584683418274
    3. 'friends' → logprob: -2.9155845642089844
    4. 'a' → logprob: -3.0405845642089844
    5. 'from' → logprob: -3.1655845642089844
    6. 'b' → logprob: -3.6655845642089844
    7. 'Let's' → logprob: -5.165584564208984
    8. ' friends' → logprob: -5.165584564208984
    9. '```' → logprob: -5.790584564208984
    10. 'We' → logprob: -5.915584564208984

Token 545: ' a' (ID: 261)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' we' → logprob: -1.1913305521011353
    2. ' the' → logprob: -1.9413305521011353
    3. 'we' → logprob: -2.0663304328918457
    4. ' all' → logprob: -2.9413304328918457
    5. 'the' → logprob: -2.9413304328918457
    6. ' for' → logprob: -3.4413304328918457
    7. ' friends' → logprob: -3.5663304328918457
    8. ' k' → logprob: -3.8163304328918457
    9. 'for' → logprob: -3.8163304328918457
    10. 'b' → logprob: -3.8163304328918457

Token 546: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.14360669255256653
    2. '_' → logprob: -2.018606662750244
    3. '_
' → logprob: -8.393607139587402
    4. ' _' → logprob: -8.643607139587402
    5. 'i' → logprob: -9.643607139587402
    6. 'll' → logprob: -9.893607139587402
    7. '_)' → logprob: -10.143607139587402
    8. 'nd' → logprob: -10.143607139587402
    9. ')' → logprob: -10.268607139587402
    10. '       ' → logprob: -10.518607139587402

Token 547: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5495777726173401
    2. '<=' → logprob: -1.5495777130126953
    3. ',' → logprob: -2.2995777130126953
    4. '_' → logprob: -3.2995777130126953
    5. 's' → logprob: -3.4245777130126953
    6. '_i' → logprob: -4.799577713012695
    7. ')' → logprob: -5.424577713012695
    8. '=' → logprob: -5.924577713012695
    9. ' and' → logprob: -5.924577713012695
    10. '[' → logprob: -6.174577713012695

Token 548: ' b' (ID: 287)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.8850170373916626
    2. 'total' → logprob: -0.8850170373916626
    3. 'b' → logprob: -2.135016918182373
    4. ' b' → logprob: -3.635016918182373
    5. 'k' → logprob: -3.760016918182373
    6. ' k' → logprob: -5.135016918182373
    7. '100' → logprob: -8.135017395019531
    8. 'max' → logprob: -8.510017395019531
    9. ' ' → logprob: -9.010017395019531
    10. ' max' → logprob: -10.385017395019531

Token 549: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.02895938791334629
    2. '_' → logprob: -3.778959274291992
    3. '._' → logprob: -6.528959274291992
    4. 'i' → logprob: -6.903959274291992
    5. ')' → logprob: -7.403959274291992
    6. ' _' → logprob: -7.653959274291992
    7. '[i' → logprob: -7.903959274291992
    8. ')_' → logprob: -7.903959274291992
    9. ''_' → logprob: -8.528959274291992
    10. '.' → logprob: -8.778959274291992

Token 550: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9439452290534973
    2. '       ' → logprob: -1.4439451694488525
    3. ':
' → logprob: -1.6939451694488525
    4. ',' → logprob: -2.9439451694488525
    5. ')' → logprob: -3.3189451694488525
    6. '
' → logprob: -3.5689451694488525
    7. '):' → logprob: -4.318945407867432
    8. ' for' → logprob: -4.693945407867432
    9. '   ' → logprob: -4.943945407867432
    10. '):
' → logprob: -5.068945407867432

Token 551: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12155123800039291
    2. '
' → logprob: -2.746551275253296
    3. '        
' → logprob: -4.371551036834717
    4. ',' → logprob: -4.371551036834717
    5. '```' → logprob: -5.371551036834717
    6. '#' → logprob: -5.496551036834717
    7. ')' → logprob: -5.621551036834717
    8. ',
' → logprob: -6.246551036834717
    9. ':
' → logprob: -6.496551036834717
    10. ':' → logprob: -6.996551036834717

Token 552: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.061900120228528976
    2. '        
' → logprob: -4.0619001388549805
    3. '
' → logprob: -4.1869001388549805
    4. ',' → logprob: -4.3119001388549805
    5. '<|end|>' → logprob: -6.3119001388549805
    6. ',
' → logprob: -6.6869001388549805
    7. '#' (adapté à ' #') → logprob: -6.6869001388549805
    8. '\n' → logprob: -6.9369001388549805
    9. ':
' → logprob: -7.0619001388549805
    10. '<|end|>' → logprob: -7.0619001388549805

Token 553: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17998971045017242
    2. '#' → logprob: -2.179989814758301
    3. '        
' → logprob: -4.054989814758301
    4. '```' → logprob: -4.554989814758301
    5. '
' → logprob: -5.179989814758301
    6. 'for' → logprob: -5.929989814758301
    7. 'Let's' → logprob: -6.054989814758301
    8. ' for' → logprob: -6.179989814758301
    9. 'from' → logprob: -6.304989814758301
    10. '  
' → logprob: -6.679989814758301

Token 554: ' each' (ID: 2454)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5996437668800354
    2. ' k' → logprob: -0.9746437668800354
    3. 'each' → logprob: -3.7246437072753906
    4. ' friend' → logprob: -4.224643707275391
    5. ' each' → logprob: -4.724643707275391
    6. 'friend' → logprob: -4.849643707275391
    7. ' i' → logprob: -5.224643707275391
    8. ' total' → logprob: -5.474643707275391
    9. 'i' → logprob: -5.599643707275391
    10. 'total' → logprob: -6.849643707275391

Token 555: ' total' (ID: 3609)
  Prédit: ' friend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' friend' → logprob: -0.6410722732543945
    2. 'friend' → logprob: -0.7660722732543945
    3. ' k' → logprob: -5.8910722732543945
    4. 'k' → logprob: -6.1410722732543945
    5. '_friend' → logprob: -6.6410722732543945
    6. '       ' → logprob: -8.016072273254395
    7. 'i' → logprob: -8.516072273254395
    8. '   ' → logprob: -8.641072273254395
    9. 'def' → logprob: -8.641072273254395
    10. ' i' → logprob: -8.766072273254395

Token 556: ' =' (ID: 314)
  Prédit: '_people'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_people' → logprob: -1.61830735206604
    2. ' in' → logprob: -1.74330735206604
    3. '+' → logprob: -1.99330735206604
    4. '_' → logprob: -2.11830735206604
    5. ':' → logprob: -2.36830735206604
    6. ',' → logprob: -2.74330735206604
    7. '=' → logprob: -2.99330735206604
    8. ' =' → logprob: -3.36830735206604
    9. '       ' → logprob: -3.74330735206604
    10. '<=' → logprob: -4.868307113647461

Token 557: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.6842644810676575
    2. 'k' → logprob: -1.3092644214630127
    3. ' ' → logprob: -1.8092644214630127
    4. '0' → logprob: -3.0592644214630127
    5. '1' → logprob: -4.309264659881592
    6. ' friends' → logprob: -7.934264659881592
    7. ' range' → logprob: -8.059264183044434
    8. ' N' → logprob: -8.809264183044434
    9. 'range' → logprob: -8.809264183044434
    10. '   ' → logprob: -9.684264183044434

Token 558: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0015158153837546706
    2. ' +' → logprob: -6.751515865325928
    3. '_' → logprob: -8.75151538848877
    4. '```' → logprob: -9.75151538848877
    5. '_i' → logprob: -10.50151538848877
    6. '       ' → logprob: -11.12651538848877
    7. '+
' → logprob: -11.12651538848877
    8. '
' → logprob: -11.50151538848877
    9. ')+' → logprob: -11.75151538848877
    10. '   ' → logprob: -11.75151538848877

Token 559: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.277553620748222e-05
    2. ' ' → logprob: -10.000062942504883
    3. '+' → logprob: -11.625062942504883
    4. '   ' → logprob: -12.750062942504883
    5. '0' → logprob: -13.250062942504883
    6. '       ' → logprob: -13.750062942504883
    7. '```' → logprob: -13.750062942504883
    8. '           ' → logprob: -14.750062942504883
    9. '
' → logprob: -15.500062942504883
    10. '#' → logprob: -15.875062942504883

Token 560: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4645671844482422
    2. ':
' → logprob: -1.3395671844482422
    3. ',' → logprob: -2.964567184448242
    4. '       ' → logprob: -3.464567184448242
    5. '
' → logprob: -5.214567184448242
    6. '):
' → logprob: -5.214567184448242
    7. '#' → logprob: -5.839567184448242
    8. '):' → logprob: -5.839567184448242
    9. '=' → logprob: -6.714567184448242
    10. '+' → logprob: -6.714567184448242

Token 561: ' we' (ID: 581)
  Prédit: ' we'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' we' → logprob: -0.5452569127082825
    2. '       ' → logprob: -1.2952568531036377
    3. 'we' → logprob: -3.0452568531036377
    4. ' friends' → logprob: -3.2952568531036377
    5. '```' → logprob: -3.7952568531036377
    6. ' for' → logprob: -5.045257091522217
    7. 'count' → logprob: -5.545257091522217
    8. '#' → logprob: -5.670257091522217
    9. ' if' → logprob: -6.045257091522217
    10. '           ' → logprob: -6.295257091522217

Token 562: ' want' (ID: 1682)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.7468123435974121
    2. 'can' → logprob: -1.746812343597412
    3. '       ' → logprob: -1.996812343597412
    4. '#' → logprob: -2.121812343597412
    5. 'def' → logprob: -2.996812343597412
    6. 'try' → logprob: -4.746812343597412
    7. ' try' → logprob: -5.121812343597412
    8. '   ' → logprob: -5.496812343597412
    9. 'for' → logprob: -5.746812343597412
    10. 'could' → logprob: -6.121812343597412

Token 563: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.41582947969436646
    2. ' to' → logprob: -1.2908294200897217
    3. 'count' → logprob: -3.6658294200897217
    4. '       ' → logprob: -4.915829658508301
    5. 'friends' → logprob: -5.040829658508301
    6. ' at' → logprob: -5.290829658508301
    7. ' count' → logprob: -5.790829658508301
    8. 'at' → logprob: -5.915829658508301
    9. 'find' → logprob: -6.165829658508301
    10. ' find' → logprob: -6.165829658508301

Token 564: ' know' (ID: 1761)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.26807940006256104
    2. 'check' → logprob: -2.0180792808532715
    3. ' find' → logprob: -3.0180792808532715
    4. 'count' → logprob: -3.2680792808532715
    5. ' check' → logprob: -4.7680792808532715
    6. 'know' → logprob: -6.2680792808532715
    7. 'have' → logprob: -7.0180792808532715
    8. 'see' → logprob: -7.3930792808532715
    9. ' count' → logprob: -7.5180792808532715
    10. 'be' → logprob: -7.6430792808532715

Token 565: ' how' (ID: 1495)
  Prédit: 'how'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'how' → logprob: -0.7497653961181641
    2. ' how' → logprob: -0.8747653961181641
    3. 'if' → logprob: -2.624765396118164
    4. ' if' → logprob: -3.374765396118164
    5. 'whether' → logprob: -6.499765396118164
    6. ' whether' → logprob: -7.624765396118164
    7. 'friends' → logprob: -7.624765396118164
    8. '```' → logprob: -7.874765396118164
    9. 'the' → logprob: -7.999765396118164
    10. ' the' → logprob: -8.999765396118164

Token 566: ' many' (ID: 1991)
  Prédit: 'many'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'many' → logprob: -0.25203388929367065
    2. ' many' → logprob: -1.5020339488983154
    3. '_many' → logprob: -9.627034187316895
    4. '       ' → logprob: -11.252034187316895
    5. '   ' → logprob: -11.377034187316895
    6. '#' → logprob: -12.752034187316895
    7. 'to' → logprob: -13.127034187316895
    8. 'Many' → logprob: -14.002034187316895
    9. '```' → logprob: -14.002034187316895
    10. ' ' → logprob: -14.377034187316895

Token 567: ' friends' (ID: 5664)
  Prédit: ' friends'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' friends' → logprob: -0.1525254100561142
    2. 'friends' → logprob: -2.4025254249572754
    3. ' _' → logprob: -4.027525424957275
    4. '_f' → logprob: -4.277525424957275
    5. '_' → logprob: -4.527525424957275
    6. ' total' → logprob: -6.527525424957275
    7. '_i' → logprob: -6.652525424957275
    8. '_friend' → logprob: -7.027525424957275
    9. '_total' → logprob: -7.152525424957275
    10. ' can' → logprob: -7.652525424957275

Token 568: ' satisfy' (ID: 35441)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.6021850109100342
    2. ' have' → logprob: -1.3521850109100342
    3. ' satisfy' → logprob: -2.477185010910034
    4. 'with' → logprob: -2.727185010910034
    5. ' can' → logprob: -4.477185249328613
    6. 'have' → logprob: -4.602185249328613
    7. '_with' → logprob: -4.727185249328613
    8. '       ' → logprob: -6.227185249328613
    9. '```' → logprob: -6.352185249328613
    10. '_have' → logprob: -6.477185249328613

Token 569: ' a' (ID: 261)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.5201663970947266
    2. ' a' → logprob: -1.1451663970947266
    3. ' <=' → logprob: -3.3951663970947266
    4. ' (' → logprob: -4.645166397094727
    5. 'total' → logprob: -4.770166397094727
    6. 'a' → logprob: -4.895166397094727
    7. ' b' → logprob: -5.145166397094727
    8. ' that' → logprob: -5.395166397094727
    9. '```' → logprob: -5.645166397094727
    10. ' their' → logprob: -5.895166397094727

Token 570: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.002170839812606573
    2. '_' → logprob: -6.252171039581299
    3. ' _' → logprob: -9.87717056274414
    4. '<=' → logprob: -10.00217056274414
    5. ' <=' → logprob: -10.12717056274414
    6. '```' → logprob: -11.00217056274414
    7. 'i' → logprob: -11.62717056274414
    8. '__' → logprob: -11.87717056274414
    9. '[i' → logprob: -12.00217056274414
    10. '   ' → logprob: -12.25217056274414

Token 571: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.011193535290658474
    2. '<=' → logprob: -4.511193752288818
    3. ')' → logprob: -10.76119327545166
    4. '```' → logprob: -11.01119327545166
    5. ')<=' → logprob: -11.13619327545166
    6. ',' → logprob: -11.26119327545166
    7. '[' → logprob: -11.51119327545166
    8. '    ' → logprob: -11.63619327545166
    9. ' ' → logprob: -11.88619327545166
    10. '   ' → logprob: -11.88619327545166

Token 572: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.6332322359085083
    2. ' total' → logprob: -0.7582322359085083
    3. ' k' → logprob: -8.008232116699219
    4. 'k' → logprob: -8.258232116699219
    5. '```' → logprob: -11.508232116699219
    6. '(total' → logprob: -12.008232116699219
    7. 't' → logprob: -12.258232116699219
    8. '
' → logprob: -12.883232116699219
    9. '   ' → logprob: -13.008232116699219
    10. ' ' → logprob: -13.133232116699219

Token 573: ' <=' (ID: 5017)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.14271318912506104
    2. '       ' → logprob: -3.1427130699157715
    3. 'and' → logprob: -3.7677130699157715
    4. ')' → logprob: -4.3927130699157715
    5. ' <=' → logprob: -4.3927130699157715
    6. '```' → logprob: -4.6427130699157715
    7. '<=' → logprob: -4.6427130699157715
    8. ',' → logprob: -4.8927130699157715
    9. '+' → logprob: -6.0177130699157715
    10. ':' → logprob: -6.0177130699157715

Token 574: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.20146040618419647
    2. ' b' → logprob: -1.701460361480713
    3. 'friend' → logprob: -10.826460838317871
    4. ' friend' → logprob: -11.451460838317871
    5. ' ' → logprob: -12.701460838317871
    6. 'self' → logprob: -12.701460838317871
    7. '```' → logprob: -12.701460838317871
    8. '   ' → logprob: -13.826460838317871
    9. '	b' → logprob: -13.826460838317871
    10. ' ' → logprob: -14.201460838317871

Token 575: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00013369438238441944
    2. 'i' → logprob: -9.750133514404297
    3. '_' → logprob: -10.500133514404297
    4. '   ' → logprob: -11.750133514404297
    5. ')' → logprob: -11.875133514404297
    6. '```' → logprob: -11.875133514404297
    7. '[i' → logprob: -12.250133514404297
    8. 'max' → logprob: -12.875133514404297
    9. ')_' → logprob: -12.875133514404297
    10. ''_' → logprob: -13.125133514404297

Token 576: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22159667313098907
    2. ':' → logprob: -2.3465967178344727
    3. '        
' → logprob: -3.8465967178344727
    4. ':
' → logprob: -4.096596717834473
    5. ',' → logprob: -4.221596717834473
    6. '```' → logprob: -4.346596717834473
    7. '
' → logprob: -4.721596717834473
    8. '\n' → logprob: -4.721596717834473
    9. '\' → logprob: -5.721596717834473
    10. ')' → logprob: -5.721596717834473

Token 577: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0042771268635988235
    2. '        
' → logprob: -6.379277229309082
    3. '```' → logprob: -7.254277229309082
    4. '#' → logprob: -7.379277229309082
    5. '<|end|>' → logprob: -8.379277229309082
    6. ',' → logprob: -8.504277229309082
    7. 'import' → logprob: -8.629277229309082
    8. '
' → logprob: -9.379277229309082
    9. '\' → logprob: -9.629277229309082
    10. ')' → logprob: -9.629277229309082

Token 578: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007522981148213148
    2. '```' → logprob: -5.632523059844971
    3. '        
' → logprob: -6.507523059844971
    4. '#' (adapté à ' #') → logprob: -7.382523059844971
    5. 'from' → logprob: -7.632523059844971
    6. 'import' → logprob: -7.757523059844971
    7. '
' → logprob: -8.132522583007812
    8. 'friends' → logprob: -8.882522583007812
    9. 'a' → logprob: -9.382522583007812
    10. 'friend' → logprob: -9.757522583007812

Token 579: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6588128805160522
    2. '#' → logprob: -1.0338128805160522
    3. 'friends' → logprob: -3.533812999725342
    4. 'for' → logprob: -3.908812999725342
    5. 'import' → logprob: -4.283812999725342
    6. '```' → logprob: -4.408812999725342
    7. 'from' → logprob: -4.658812999725342
    8. '        
' → logprob: -5.033812999725342
    9. 'friend' → logprob: -5.158812999725342
    10. 'def' → logprob: -5.283812999725342

Token 580: ',' (ID: 11)
  Prédit: ' friends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' friends' → logprob: -1.14253830909729
    2. ' we' → logprob: -1.39253830909729
    3. '       ' → logprob: -2.01753830909729
    4. 'we' → logprob: -2.64253830909729
    5. 'friends' → logprob: -3.01753830909729
    6. ' total' → logprob: -3.39253830909729
    7. 'for' → logprob: -3.64253830909729
    8. ' for' → logprob: -3.64253830909729
    9. ' sorted' → logprob: -3.76753830909729
    10. 'sorted' → logprob: -4.392538070678711

Token 581: ' both' (ID: 2973)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.5868759155273438
    2. '       ' → logprob: -1.7118759155273438
    3. 'prefix' → logprob: -1.7118759155273438
    4. 'a' → logprob: -2.2118759155273438
    5. ' prefix' → logprob: -2.7118759155273438
    6. 'friends' → logprob: -3.0868759155273438
    7. 'count' → logprob: -3.8368759155273438
    8. 'from' → logprob: -3.9618759155273438
    9. ' #' → logprob: -4.086875915527344
    10. 'all' → logprob: -4.336875915527344

Token 582: ' conditions' (ID: 6409)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6286278367042542
    2. ' a' → logprob: -1.6286277770996094
    3. ' sides' → logprob: -2.6286277770996094
    4. ' lists' → logprob: -3.1286277770996094
    5. 's' → logprob: -4.128627777099609
    6. ' bounds' → logprob: -4.128627777099609
    7. ' arrays' → logprob: -4.253627777099609
    8. ' conditions' → logprob: -4.253627777099609
    9. ' constraints' → logprob: -4.378627777099609
    10. 'bounds' → logprob: -4.503627777099609

Token 583: ' must' (ID: 2804)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.46192800998687744
    2. ' and' → logprob: -1.9619280099868774
    3. ':' → logprob: -2.336927890777588
    4. ' <=' → logprob: -3.086927890777588
    5. ' must' → logprob: -3.586927890777588
    6. 'are' → logprob: -4.461927890777588
    7. ' =' → logprob: -5.336927890777588
    8. 'and' → logprob: -5.336927890777588
    9. '<=' → logprob: -5.336927890777588
    10. ' for' → logprob: -5.461927890777588

Token 584: ' hold' (ID: 5060)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.14749126136302948
    2. 'be' → logprob: -2.272491216659546
    3. 'hold' → logprob: -4.022491455078125
    4. ' hold' → logprob: -4.147491455078125
    5. 's' → logprob: -8.897491455078125
    6. '```' → logprob: -9.647491455078125
    7. ' ' → logprob: -10.772491455078125
    8. ' satisfy' → logprob: -10.897491455078125
    9. '_be' → logprob: -10.897491455078125
    10. 'true' → logprob: -11.647491455078125

Token 585: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4424017667770386
    2. ' for' → logprob: -2.317401885986328
    3. ':' → logprob: -2.442401885986328
    4. ',' → logprob: -2.442401885986328
    5. '
' → logprob: -3.942401885986328
    6. 'for' → logprob: -4.192401885986328
    7. '.' → logprob: -4.442401885986328
    8. '```' → logprob: -4.567401885986328
    9. ':
' → logprob: -4.817401885986328
    10. '<|end|>' → logprob: -5.317401885986328

Token 586: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02209324948489666
    2. '        
' → logprob: -3.8970932960510254
    3. '
' → logprob: -6.897093296051025
    4. '```' → logprob: -8.397092819213867
    5. '        
        
' → logprob: -9.772092819213867
    6. 'from' → logprob: -10.147092819213867
    7. '    
' → logprob: -10.397092819213867
    8. 'import' → logprob: -10.647092819213867
    9. '#' → logprob: -10.772092819213867
    10. '        

' → logprob: -10.772092819213867

Token 587: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03553173691034317
    2. '```' → logprob: -3.535531759262085
    3. 'from' → logprob: -6.160531520843506
    4. '        
' → logprob: -6.535531520843506
    5. '#' (adapté à ' #') → logprob: -6.535531520843506
    6. '``' → logprob: -8.410531997680664
    7. 'import' → logprob: -8.910531997680664
    8. '
' → logprob: -9.160531997680664
    9. '   ' → logprob: -10.410531997680664
    10. 'Let's' → logprob: -10.410531997680664

Token 588: ' Since' (ID: 12265)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.310049444437027
    2. 'friends' → logprob: -1.8100494146347046
    3. 'from' → logprob: -3.435049533843994
    4. '#' → logprob: -3.810049533843994
    5. 'def' → logprob: -4.060049533843994
    6. '```' → logprob: -5.435049533843994
    7. 'for' → logprob: -5.560049533843994
    8. 'a' → logprob: -5.685049533843994
    9. 'import' → logprob: -5.810049533843994
    10. 'friend' → logprob: -5.935049533843994

Token 589: ' we' (ID: 581)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.2446609735488892
    2. 'N' → logprob: -1.6196609735488892
    3. 'we' → logprob: -1.7446609735488892
    4. 'a' → logprob: -2.4946608543395996
    5. 'the' → logprob: -2.7446608543395996
    6. 'True' → logprob: -2.9946608543395996
    7. 'all' → logprob: -3.2446608543395996
    8. 'friends' → logprob: -4.1196608543396
    9. 'total' → logprob: -4.1196608543396
    10. 'len' → logprob: -4.2446608543396

Token 590: ' check' (ID: 2371)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -1.224099040031433
    2. ' can' → logprob: -1.349099040031433
    3. ' want' → logprob: -1.474099040031433
    4. 'have' → logprob: -2.7240991592407227
    5. 'want' → logprob: -2.7240991592407227
    6. ' have' → logprob: -3.3490991592407227
    7. '#' → logprob: -4.349099159240723
    8. 'need' → logprob: -5.224099159240723
    9. 'are' → logprob: -5.474099159240723
    10. 'sorted' → logprob: -5.724099159240723

Token 591: ' multiple' (ID: 7598)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -1.4320430755615234
    2. ' for' → logprob: -1.5570430755615234
    3. ' k' → logprob: -2.1820430755615234
    4. 'for' → logprob: -2.5570430755615234
    5. 'k' → logprob: -2.8070430755615234
    6. ' all' → logprob: -2.9320430755615234
    7. ' if' → logprob: -3.4320430755615234
    8. 'from' → logprob: -3.5570430755615234
    9. ' friends' → logprob: -3.6820430755615234
    10. 'total' → logprob: -3.9320430755615234

Token 592: ' totals' (ID: 92279)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.1280342936515808
    2. ' k' → logprob: -3.7530343532562256
    3. '_k' → logprob: -4.1280341148376465
    4. 'friends' → logprob: -4.2530341148376465
    5. ' friends' → logprob: -4.6280341148376465
    6. '_' → logprob: -4.7530341148376465
    7. 'total' → logprob: -5.2530341148376465
    8. ' steps' → logprob: -5.5030341148376465
    9. ' times' → logprob: -5.5030341148376465
    10. 'for' → logprob: -5.5030341148376465

Token 593: ' from' (ID: 591)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3307019472122192
    2. 'from' → logprob: -1.3307019472122192
    3. 'for' → logprob: -1.9557019472122192
    4. ':' → logprob: -1.9557019472122192
    5. ' for' → logprob: -2.4557018280029297
    6. ' from' → logprob: -3.9557018280029297
    7. '```' → logprob: -4.20570182800293
    8. '_' → logprob: -5.08070182800293
    9. '=' → logprob: -5.20570182800293
    10. ' ranging' → logprob: -5.20570182800293

Token 594: ' large' (ID: 4410)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0047477916814386845
    2. ' N' → logprob: -5.3797478675842285
    3. 'k' → logprob: -9.50474739074707
    4. '```' → logprob: -10.87974739074707
    5. 'max' → logprob: -11.37974739074707
    6. '100' → logprob: -12.25474739074707
    7. '`' → logprob: -12.37974739074707
    8. '   ' → logprob: -13.00474739074707
    9. 'range' → logprob: -13.50474739074707
    10. '1' → logprob: -13.50474739074707

Token 595: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.24956203997135162
    2. 'to' → logprob: -2.3745620250701904
    3. '_' → logprob: -3.1245620250701904
    4. ' down' → logprob: -4.2495622634887695
    5. 'down' → logprob: -4.3745622634887695
    6. '```' → logprob: -4.6245622634887695
    7. ' _' → logprob: -4.7495622634887695
    8. 'k' → logprob: -5.4995622634887695
    9. ' ' → logprob: -5.4995622634887695
    10. '_to' → logprob: -5.7495622634887695

Token 596: ' small' (ID: 3291)
  Prédit: 'small'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'small' → logprob: -0.013416443951427937
    2. ' small' → logprob: -4.388416290283203
    3. 'low' → logprob: -7.763416290283203
    4. 'down' → logprob: -9.013416290283203
    5. 'N' → logprob: -9.638416290283203
    6. ' ' → logprob: -9.763416290283203
    7. '0' → logprob: -9.888416290283203
    8. '```' → logprob: -10.263416290283203
    9. '
' → logprob: -10.388416290283203
    10. 'sm' → logprob: -10.513416290283203

Token 597: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2976300120353699
    2. ',' → logprob: -1.6726300716400146
    3. '       ' → logprob: -3.6726300716400146
    4. ':
' → logprob: -4.4226298332214355
    5. '   ' → logprob: -5.0476298332214355
    6. '):' → logprob: -5.0476298332214355
    7. 'for' → logprob: -5.5476298332214355
    8. ' for' → logprob: -5.6726298332214355
    9. ',
' → logprob: -6.0476298332214355
    10. '#' → logprob: -6.0476298332214355

Token 598: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004411721136420965
    2. '           ' → logprob: -6.879411697387695
    3. ' we' → logprob: -7.004411697387695
    4. '        
' → logprob: -7.504411697387695
    5. ' for' → logprob: -7.629411697387695
    6. '```' → logprob: -8.129411697387695
    7. '   ' → logprob: -8.504411697387695
    8. 'we' → logprob: -8.754411697387695
    9. '#' → logprob: -8.879411697387695
    10. '        ' → logprob: -9.379411697387695

Token 599: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.10118904709815979
    2. 'can' → logprob: -2.976189136505127
    3. '#' → logprob: -4.101189136505127
    4. '       ' → logprob: -4.601189136505127
    5. ' will' → logprob: -5.851189136505127
    6. '   ' → logprob: -6.101189136505127
    7. '```' → logprob: -6.476189136505127
    8. ' continue' → logprob: -6.601189136505127
    9. 'continue' → logprob: -6.726189136505127
    10. ' could' → logprob: -6.851189136505127

Token 600: ' build' (ID: 3024)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.9252402782440186
    2. 'use' → logprob: -1.0502402782440186
    3. ' use' → logprob: -3.3002402782440186
    4. 'initialize' → logprob: -3.4252402782440186
    5. 'build' → logprob: -3.4252402782440186
    6. ' process' → logprob: -3.5502402782440186
    7. 'pre' → logprob: -3.6752402782440186
    8. 'maint' → logprob: -3.8002402782440186
    9. 'continue' → logprob: -4.175240516662598
    10. 'merge' → logprob: -4.425240516662598

Token 601: ' index' (ID: 3472)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.4943732023239136
    2. ' two' → logprob: -1.6193732023239136
    3. 'a' → logprob: -2.119373321533203
    4. 'an' → logprob: -3.619373321533203
    5. ' a' → logprob: -3.744373321533203
    6. ' an' → logprob: -4.994373321533203
    7. 'events' → logprob: -5.244373321533203
    8. ' arrays' → logprob: -5.869373321533203
    9. 'prefix' → logprob: -6.494373321533203
    10. 'b' → logprob: -6.619373321533203

Token 602: ' for' (ID: 395)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.5638605356216431
    2. 'ing' → logprob: -1.813860535621643
    3. '=' → logprob: -3.1888604164123535
    4. ' =' → logprob: -3.1888604164123535
    5. 's' → logprob: -3.3138604164123535
    6. '[' → logprob: -3.4388604164123535
    7. '[]' → logprob: -3.9388604164123535
    8. ']' → logprob: -4.3138604164123535
    9. '_' → logprob: -4.3138604164123535
    10. ')' → logprob: -4.9388604164123535

Token 603: ' a' (ID: 261)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5495465397834778
    2. ' b' → logprob: -1.549546480178833
    3. 'a' → logprob: -2.924546480178833
    4. 'friends' → logprob: -3.049546480178833
    5. ' friends' → logprob: -3.424546480178833
    6. ' a' → logprob: -3.674546480178833
    7. 'all' → logprob: -4.674546718597412
    8. 'the' → logprob: -5.174546718597412
    9. ' the' → logprob: -5.174546718597412
    10. 'both' → logprob: -5.299546718597412

Token 604: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.16290080547332764
    2. '_' → logprob: -1.9129008054733276
    3. 'rr' → logprob: -7.287900924682617
    4. 'rray' → logprob: -7.787900924682617
    5. '_
' → logprob: -8.162900924682617
    6. 'r' → logprob: -8.162900924682617
    7. 'i' → logprob: -8.537900924682617
    8. '_]' → logprob: -8.662900924682617
    9. '_)' → logprob: -8.912900924682617
    10. '_r' → logprob: -9.662900924682617

Token 605: ' and' (ID: 326)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8560909032821655
    2. '_' → logprob: -1.8560909032821655
    3. ']' → logprob: -2.231091022491455
    4. ' =' → logprob: -2.981091022491455
    5. ',' → logprob: -3.231091022491455
    6. ')' → logprob: -3.481091022491455
    7. '       ' → logprob: -3.606091022491455
    8. '=' → logprob: -3.731091022491455
    9. '_to' → logprob: -3.856091022491455
    10. '_list' → logprob: -3.981091022491455

Token 606: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07025906443595886
    2. ' b' → logprob: -2.6952590942382812
    3. '   ' → logprob: -9.945259094238281
    4. 'max' → logprob: -10.070259094238281
    5. ' ' → logprob: -10.320259094238281
    6. 'bi' → logprob: -10.695259094238281
    7. '
' → logprob: -10.820259094238281
    8. '```' → logprob: -10.820259094238281
    9. '_b' → logprob: -11.820259094238281
    10. 'process' → logprob: -11.945259094238281

Token 607: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.029936306178569794
    2. '_' → logprob: -3.5299363136291504
    3. '_
' → logprob: -10.654935836791992
    4. '_]' → logprob: -10.904935836791992
    5. ''_' → logprob: -11.029935836791992
    6. ')' → logprob: -11.279935836791992
    7. ')_' → logprob: -11.404935836791992
    8. ' _' → logprob: -11.529935836791992
    9. '_)' → logprob: -11.654935836791992
    10. 'i' → logprob: -11.654935836791992

Token 608: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.792834997177124
    2. ':' → logprob: -1.917834997177124
    3. ' =' → logprob: -2.042834997177124
    4. ',' → logprob: -2.042834997177124
    5. '   ' → logprob: -2.792834997177124
    6. '
' → logprob: -3.167834997177124
    7. 's' → logprob: -3.292834997177124
    8. ')' → logprob: -3.417834997177124
    9. '_' → logprob: -3.542834997177124
    10. '```' → logprob: -3.542834997177124

Token 609: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005593018140643835
    2. '#' → logprob: -5.7555928230285645
    3. '        
' → logprob: -7.2555928230285645
    4. '```' → logprob: -7.3805928230285645
    5. '   ' → logprob: -8.505593299865723
    6. ',' → logprob: -8.505593299865723
    7. ')' → logprob: -9.005593299865723
    8. '           ' → logprob: -9.380593299865723
    9. '<|end|>' → logprob: -9.630593299865723
    10. 'Let's' → logprob: -10.130593299865723

Token 610: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007414947729557753
    2. '```' → logprob: -5.632414817810059
    3. '        
' → logprob: -7.007414817810059
    4. 'import' → logprob: -7.007414817810059
    5. 'from' → logprob: -7.507414817810059
    6. '#' (adapté à ' #') → logprob: -7.757414817810059
    7. '
' → logprob: -8.382414817810059
    8. 'friends' → logprob: -8.757414817810059
    9. 'friend' → logprob: -9.132414817810059
    10. '   ' → logprob: -9.132414817810059

Token 611: ' Another' (ID: 20064)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4246194362640381
    2. 'from' → logprob: -2.049619436264038
    3. 'friends' → logprob: -2.174619436264038
    4. '#' → logprob: -2.799619436264038
    5. 'import' → logprob: -3.924619436264038
    6. 'def' → logprob: -5.299619674682617
    7. '```' → logprob: -5.299619674682617
    8. '
' → logprob: -5.674619674682617
    9. 'friend' → logprob: -5.924619674682617
    10. 'a' → logprob: -6.424619674682617

Token 612: ' approach' (ID: 7139)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9889447093009949
    2. ' approach' → logprob: -1.2389447689056396
    3. 'def' → logprob: -2.2389447689056396
    4. 'appro' → logprob: -2.3639447689056396
    5. '       ' → logprob: -3.4889447689056396
    6. ':' → logprob: -3.4889447689056396
    7. 'possible' → logprob: -4.1139445304870605
    8. '#' → logprob: -4.7389445304870605
    9. ' possibility' → logprob: -4.7389445304870605
    10. ' possible' → logprob: -5.1139445304870605

Token 613: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1690438836812973
    2. ':
' → logprob: -2.294043779373169
    3. '       ' → logprob: -3.044043779373169
    4. '#' → logprob: -6.169044017791748
    5. ',' → logprob: -6.419044017791748
    6. '```' → logprob: -7.419044017791748
    7. '   ' → logprob: -7.544044017791748
    8. '
' → logprob: -8.04404354095459
    9. ' =' → logprob: -8.41904354095459
    10. '=' → logprob: -8.41904354095459

Token 614: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3579254150390625
    2. 'from' → logprob: -2.1079254150390625
    3. '#' → logprob: -2.4829254150390625
    4. 'friends' → logprob: -3.3579254150390625
    5. 'import' → logprob: -3.7329254150390625
    6. '```' → logprob: -4.3579254150390625
    7. ' friends' → logprob: -4.8579254150390625
    8. 'def' → logprob: -5.3579254150390625
    9. ' from' → logprob: -5.3579254150390625
    10. 'a' → logprob: -6.8579254150390625

Token 615: ' all' (ID: 722)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.762742280960083
    2. ' k' → logprob: -0.762742280960083
    3. ' total' → logprob: -3.012742280960083
    4. 'total' → logprob: -4.637742042541504
    5. ' friend' → logprob: -5.762742042541504
    6. 'each' → logprob: -6.512742042541504
    7. ' each' → logprob: -7.012742042541504
    8. 'friend' → logprob: -7.262742042541504
    9. ' a' → logprob: -7.387742042541504
    10. 'a' → logprob: -7.512742042541504

Token 616: ' friends' (ID: 5664)
  Prédit: 'friends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'friends' → logprob: -0.5514658093452454
    2. ' friends' → logprob: -1.3014657497406006
    3. 'k' → logprob: -2.6764657497406006
    4. ' total' → logprob: -4.42646598815918
    5. 'i' → logprob: -4.42646598815918
    6. ' k' → logprob: -4.67646598815918
    7. 'friend' → logprob: -4.92646598815918
    8. 'total' → logprob: -5.30146598815918
    9. ' i' → logprob: -5.30146598815918
    10. 'a' → logprob: -5.55146598815918

Token 617: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7480950355529785
    2. 'with' → logprob: -2.6230950355529785
    3. ' =' → logprob: -2.7480950355529785
    4. ':' → logprob: -3.1230950355529785
    5. '_sorted' → logprob: -3.1230950355529785
    6. '   ' → logprob: -3.3730950355529785
    7. '```' → logprob: -3.4980950355529785
    8. 's' → logprob: -3.4980950355529785
    9. ' with' → logprob: -3.7480950355529785
    10. '       ' → logprob: -3.9980950355529785

Token 618: ' create' (ID: 2501)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9641070365905762
    2. '#' → logprob: -2.464107036590576
    3. 'sort' → logprob: -2.464107036590576
    4. ' sort' → logprob: -2.589107036590576
    5. 'collect' → logprob: -2.964107036590576
    6. ' we' → logprob: -3.089107036590576
    7. ' friends' → logprob: -3.339107036590576
    8. 'friends' → logprob: -3.339107036590576
    9. 'count' → logprob: -3.464107036590576
    10. 'we' → logprob: -3.464107036590576

Token 619: ' pairs' (ID: 24702)
  Prédit: 'events'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'events' → logprob: -0.5305424332618713
    2. ' two' → logprob: -2.0305423736572266
    3. 'interval' → logprob: -2.4055423736572266
    4. ' intervals' → logprob: -2.9055423736572266
    5. 'two' → logprob: -3.2805423736572266
    6. ' events' → logprob: -3.2805423736572266
    7. 'a' → logprob: -3.7805423736572266
    8. ' a' → logprob: -4.030542373657227
    9. ' an' → logprob: -4.280542373657227
    10. 'an' → logprob: -6.405542373657227

Token 620: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0690386295318604
    2. ' =' → logprob: -1.0690386295318604
    3. '       ' → logprob: -2.5690386295318604
    4. ' (' → logprob: -2.6940386295318604
    5. '   ' → logprob: -3.3190386295318604
    6. '=' → logprob: -3.9440386295318604
    7. ' of' → logprob: -4.194038391113281
    8. '_' → logprob: -4.444038391113281
    9. '(' → logprob: -4.694038391113281
    10. 's' → logprob: -4.944038391113281

Token 621: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7164501547813416
    2. 'friend' → logprob: -1.0914502143859863
    3. 'self' → logprob: -1.9664502143859863
    4. '(friend' → logprob: -4.216450214385986
    5. 'f' → logprob: -5.091450214385986
    6. 'ai' → logprob: -5.841450214385986
    7. '   ' → logprob: -6.341450214385986
    8. 'fi' → logprob: -6.341450214385986
    9. ' friend' → logprob: -6.341450214385986
    10. 'constraint' → logprob: -6.966450214385986

Token 622: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0013574945041909814
    2. ',' → logprob: -6.751357555389404
    3. '_,' → logprob: -9.001357078552246
    4. ',_' → logprob: -10.126357078552246
    5. ' _' → logprob: -12.251357078552246
    6. 'i' → logprob: -12.626357078552246
    7. ')_' → logprob: -12.751357078552246
    8. ',i' → logprob: -13.376357078552246
    9. '       ' → logprob: -13.376357078552246
    10. '   ' → logprob: -13.751357078552246

Token 623: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000872274860739708
    2. ',i' → logprob: -8.125872611999512
    3. ',b' → logprob: -8.375872611999512
    4. ' ,' → logprob: -9.250872611999512
    5. '_i' → logprob: -9.625872611999512
    6. '),' → logprob: -10.250872611999512
    7. '_,' → logprob: -10.500872611999512
    8. ',
' → logprob: -10.750872611999512
    9. ',a' → logprob: -11.500872611999512
    10. '       ' → logprob: -11.625872611999512

Token 624: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02062959223985672
    2. ' b' → logprob: -3.895629644393921
    3. ',' → logprob: -10.1456298828125
    4. ',b' → logprob: -10.2706298828125
    5. '   ' → logprob: -12.3956298828125
    6. ' ' → logprob: -13.3956298828125
    7. '```' → logprob: -13.3956298828125
    8. '       ' → logprob: -13.7706298828125
    9. '    ' → logprob: -13.7706298828125
    10. 'a' → logprob: -14.0206298828125

Token 625: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00103686039801687
    2. ')_' → logprob: -7.501036643981934
    3. ',' → logprob: -8.251036643981934
    4. ')' → logprob: -9.626036643981934
    5. '_' → logprob: -9.876036643981934
    6. '_,' → logprob: -10.501036643981934
    7. ',_' → logprob: -10.751036643981934
    8. ' _' → logprob: -10.876036643981934
    9. 'i' → logprob: -11.626036643981934
    10. '),' → logprob: -12.001036643981934

Token 626: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4188377857208252
    2. '),' → logprob: -1.2938377857208252
    3. ',' → logprob: -2.918837785720825
    4. '       ' → logprob: -5.168837547302246
    5. 's' → logprob: -5.543837547302246
    6. '),
' → logprob: -7.043837547302246
    7. ')
' → logprob: -7.043837547302246
    8. ',)' → logprob: -7.668837547302246
    9. ')s' → logprob: -8.168837547302246
    10. ',
' → logprob: -8.168837547302246

Token 627: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07172556221485138
    2. ',' → logprob: -3.571725606918335
    3. '```' → logprob: -4.196725368499756
    4. ')' → logprob: -4.571725368499756
    5. '#' → logprob: -5.071725368499756
    6. '           ' → logprob: -6.821725368499756
    7. '        
' → logprob: -6.946725368499756
    8. 'Then' → logprob: -7.071725368499756
    9. '),' → logprob: -7.446725368499756
    10. ',
' → logprob: -7.696725368499756

Token 628: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08415061980485916
    2. ',' → logprob: -2.959150552749634
    3. ')' → logprob: -4.334150791168213
    4. '#' (adapté à ' #') → logprob: -5.584150791168213
    5. '   ' → logprob: -6.334150791168213
    6. '[' → logprob: -6.959150791168213
    7. '```' → logprob: -7.209150791168213
    8. '        
' → logprob: -7.334150791168213
    9. '           ' → logprob: -7.459150791168213
    10. ',
' → logprob: -7.459150791168213

Token 629: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4112205505371094
    2. 'friends' → logprob: -1.7862205505371094
    3. '#' → logprob: -2.0362205505371094
    4. ' friends' → logprob: -4.036220550537109
    5. '```' → logprob: -5.661220550537109
    6. 'pairs' → logprob: -6.036220550537109
    7. '   ' → logprob: -6.286220550537109
    8. 'a' → logprob: -6.286220550537109
    9. 'friend' → logprob: -6.411220550537109
    10. 'Then' → logprob: -7.036220550537109

Token 630: ' a' (ID: 261)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.23647378385066986
    2. ' k' → logprob: -2.111473798751831
    3. 'each' → logprob: -2.986473798751831
    4. ' each' → logprob: -4.861473560333252
    5. 'friend' → logprob: -5.111473560333252
    6. ' total' → logprob: -5.236473560333252
    7. 'total' → logprob: -5.361473560333252
    8. 'a' → logprob: -5.361473560333252
    9. ' friend' → logprob: -5.611473560333252
    10. ' (' → logprob: -6.486473560333252

Token 631: ' fixed' (ID: 13213)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.03787506744265556
    2. 'll' → logprob: -3.412875175476074
    3. '_' → logprob: -5.662875175476074
    4. '_ll' → logprob: -7.912875175476074
    5. ' _' → logprob: -9.662875175476074
    6. 'i' → logprob: -9.662875175476074
    7. '_
' → logprob: -9.662875175476074
    8. ',' → logprob: -10.537875175476074
    9. '_l' → logprob: -10.662875175476074
    10. 'l' → logprob: -11.037875175476074

Token 632: ' total' (ID: 3609)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.24598917365074158
    2. ' k' → logprob: -3.3709890842437744
    3. ')' → logprob: -3.6209890842437744
    4. ' total' → logprob: -3.7459890842437744
    5. 'value' → logprob: -4.1209893226623535
    6. 'total' → logprob: -4.1209893226623535
    7. '_i' → logprob: -4.1209893226623535
    8. ' value' → logprob: -4.2459893226623535
    9. '_k' → logprob: -4.2459893226623535
    10. ' friend' → logprob: -4.3709893226623535

Token 633: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8478185534477234
    2. '=' → logprob: -1.5978186130523682
    3. ' =' → logprob: -1.5978186130523682
    4. ')' → logprob: -2.347818613052368
    5. '_i' → logprob: -3.722818613052368
    6. '
' → logprob: -4.847818374633789
    7. '),' → logprob: -4.847818374633789
    8. '_' → logprob: -5.097818374633789
    9. ' ,' → logprob: -5.847818374633789
    10. '):
' → logprob: -6.097818374633789

Token 634: ' t' (ID: 260)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.11523323506116867
    2. ' k' → logprob: -2.3652331829071045
    3. 'total' → logprob: -4.990233421325684
    4. ' total' → logprob: -5.115233421325684
    5. '0' → logprob: -7.240233421325684
    6. 'N' → logprob: -7.990233421325684
    7. ' ' → logprob: -8.615233421325684
    8. ' N' → logprob: -8.990233421325684
    9. '1' → logprob: -8.990233421325684
    10. 'a' → logprob: -9.115233421325684

Token 635: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35764649510383606
    2. '_i' → logprob: -2.3576464653015137
    3. 'otal' → logprob: -2.4826464653015137
    4. ')' → logprob: -3.3576464653015137
    5. '),' → logprob: -3.4826464653015137
    6. '=' → logprob: -4.232646465301514
    7. '):
' → logprob: -4.732646465301514
    8. ' =' → logprob: -5.107646465301514
    9. '
' → logprob: -5.107646465301514
    10. ',
' → logprob: -5.607646465301514

Token 636: ' count' (ID: 3605)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37067073583602905
    2. '#' → logprob: -2.370670795440674
    3. ',' → logprob: -3.120670795440674
    4. '```' → logprob: -3.245670795440674
    5. ' we' → logprob: -3.495670795440674
    6. ' for' → logprob: -3.995670795440674
    7. 'We' → logprob: -4.120670795440674
    8. '           ' → logprob: -4.745670795440674
    9. ' We' → logprob: -4.995670795440674
    10. ' #' → logprob: -5.245670795440674

Token 637: ' friends' (ID: 5664)
  Prédit: ' how'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' how' → logprob: -1.5979446172714233
    2. ' of' → logprob: -1.8479446172714233
    3. 'of' → logprob: -1.9729446172714233
    4. 'friends' → logprob: -2.472944736480713
    5. '_f' → logprob: -2.972944736480713
    6. ',' → logprob: -2.972944736480713
    7. ' friends' → logprob: -3.097944736480713
    8. '_of' → logprob: -3.097944736480713
    9. '_' → logprob: -3.222944736480713
    10. 'the' → logprob: -3.347944736480713

Token 638: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.6985043287277222
    2. 'with' → logprob: -0.8235043287277222
    3. '_with' → logprob: -3.8235044479370117
    4. ',' → logprob: -4.323504447937012
    5. 's' → logprob: -5.448504447937012
    6. '       ' → logprob: -5.573504447937012
    7. ')' → logprob: -5.823504447937012
    8. '=' → logprob: -6.323504447937012
    9. ' satisfying' → logprob: -6.323504447937012
    10. ' =' → logprob: -6.698504447937012

Token 639: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.38695961236953735
    2. ' a' → logprob: -1.1369595527648926
    3. '   ' → logprob: -11.01196002960205
    4. 'ai' → logprob: -11.13696002960205
    5. '```' → logprob: -11.63696002960205
    6. '    ' → logprob: -12.13696002960205
    7. '	a' → logprob: -12.13696002960205
    8. '(a' → logprob: -12.26196002960205
    9. '       ' → logprob: -12.26196002960205
    10. ' ai' → logprob: -12.63696002960205

Token 640: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.011294789612293243
    2. '_' → logprob: -4.511294841766357
    3. ' _' → logprob: -9.6362943649292
    4. 'i' → logprob: -10.5112943649292
    5. '[' → logprob: -10.7612943649292
    6. ')' → logprob: -11.0112943649292
    7. '_,' → logprob: -11.2612943649292
    8. '[i' → logprob: -11.3862943649292
    9. '```' → logprob: -11.8862943649292
    10. '_
' → logprob: -12.0112943649292

Token 641: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.07101419568061829
    2. '<=' → logprob: -2.696014165878296
    3. ')' → logprob: -7.696014404296875
    4. ',' → logprob: -8.321014404296875
    5. ')<=' → logprob: -9.696014404296875
    6. '[' → logprob: -10.321014404296875
    7. '```' → logprob: -10.321014404296875
    8. ' ==' → logprob: -10.696014404296875
    9. '    ' → logprob: -10.946014404296875
    10. ']<=' → logprob: -11.196014404296875

Token 642: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.47662872076034546
    2. ' t' → logprob: -0.9766287207603455
    3. 'total' → logprob: -6.22662878036499
    4. ' total' → logprob: -7.47662878036499
    5. '`t' → logprob: -12.851628303527832
    6. '```' → logprob: -13.851628303527832
    7. '	t' → logprob: -13.976628303527832
    8. '   ' → logprob: -14.351628303527832
    9. '
' → logprob: -15.226628303527832
    10. ' ' → logprob: -15.226628303527832

Token 643: ' <=' (ID: 5017)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08867964893579483
    2. ',' → logprob: -3.338679552078247
    3. ')' → logprob: -3.963679552078247
    4. 'and' → logprob: -4.338679790496826
    5. '+' → logprob: -5.088679790496826
    6. '       ' → logprob: -5.338679790496826
    7. ':' → logprob: -6.963679790496826
    8. ' for' → logprob: -7.088679790496826
    9. ' +' → logprob: -7.463679790496826
    10. '
' → logprob: -7.713679790496826

Token 644: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.062019333243370056
    2. ' b' → logprob: -2.8120193481445312
    3. 'friend' → logprob: -11.187019348144531
    4. '   ' → logprob: -11.937019348144531
    5. ' ' → logprob: -12.062019348144531
    6. ' friend' → logprob: -12.562019348144531
    7. '```' → logprob: -12.562019348144531
    8. 'their' → logprob: -13.062019348144531
    9. '       ' → logprob: -13.312019348144531
    10. '
' → logprob: -13.499519348144531

Token 645: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00012166214582975954
    2. ')' → logprob: -10.0001220703125
    3. '_' → logprob: -11.0001220703125
    4. 'i' → logprob: -11.2501220703125
    5. ')_' → logprob: -11.2501220703125
    6. '   ' → logprob: -12.2501220703125
    7. ''_' → logprob: -12.5001220703125
    8. '```' → logprob: -12.6251220703125
    9. '_o' → logprob: -12.7501220703125
    10. '_it' → logprob: -13.5001220703125

Token 646: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011685455217957497
    2. ':' → logprob: -5.886685371398926
    3. '        
' → logprob: -6.261685371398926
    4. ',' → logprob: -6.386685371398926
    5. '   ' → logprob: -7.011685371398926
    6. ')' → logprob: -7.386685371398926
    7. '
' → logprob: -7.636685371398926
    8. '           ' → logprob: -7.886685371398926
    9. '```' → logprob: -8.011685371398926
    10. '#' → logprob: -8.386685371398926

Token 647: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0158481877297163
    2. '#' → logprob: -4.890848159790039
    3. '        
' → logprob: -5.265848159790039
    4. '
' → logprob: -7.140848159790039
    5. ',' → logprob: -7.765848159790039
    6. '```' → logprob: -8.140848159790039
    7. '<|end|>' → logprob: -8.390848159790039
    8. ')' → logprob: -8.640848159790039
    9. '           ' → logprob: -9.015848159790039
    10. '\n' → logprob: -9.015848159790039

Token 648: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007841786369681358
    2. '
' → logprob: -6.00784158706665
    3. '        
' → logprob: -6.00784158706665
    4. '```' → logprob: -6.38284158706665
    5. '#' (adapté à ' #') → logprob: -7.38284158706665
    6. 'from' → logprob: -9.257842063903809
    7. ',' → logprob: -9.632842063903809
    8. '   ' → logprob: -9.882842063903809
    9. 'import' → logprob: -10.007842063903809
    10. '`
' → logprob: -10.132842063903809

Token 649: ' To' (ID: 2514)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16894684731960297
    2. '#' → logprob: -2.1689467430114746
    3. 'def' → logprob: -4.918946743011475
    4. '
' → logprob: -5.043946743011475
    5. 'from' → logprob: -5.293946743011475
    6. 'for' → logprob: -5.418946743011475
    7. 'friends' → logprob: -5.418946743011475
    8. '```' → logprob: -6.043946743011475
    9. 'import' → logprob: -6.293946743011475
    10. 't' → logprob: -6.543946743011475

Token 650: ' optimize' (ID: 40398)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.4154044389724731
    2. ' proceed' → logprob: -2.2904043197631836
    3. ' process' → logprob: -2.4154043197631836
    4. 'continue' → logprob: -2.5404043197631836
    5. ' continue' → logprob: -3.0404043197631836
    6. 'def' → logprob: -3.1654043197631836
    7. ' def' → logprob: -3.4154043197631836
    8. ' use' → logprob: -3.6654043197631836
    9. ' implement' → logprob: -3.6654043197631836
    10. 'process' → logprob: -3.6654043197631836

Token 651: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0370787382125854
    2. ':' → logprob: -1.5370787382125854
    3. ',' → logprob: -2.037078857421875
    4. ':
' → logprob: -2.662078857421875
    5. ' for' → logprob: -3.287078857421875
    6. 'for' → logprob: -3.537078857421875
    7. 'we' → logprob: -3.787078857421875
    8. '
' → logprob: -4.162078857421875
    9. ' the' → logprob: -4.162078857421875
    10. ' we' → logprob: -4.287078857421875

Token 652: ' for' (ID: 395)
  Prédit: 'we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'we' → logprob: -0.7578882575035095
    2. ' we' → logprob: -0.8828882575035095
    3. ' let's' → logprob: -3.3828883171081543
    4. '#' → logprob: -3.5078883171081543
    5. '       ' → logprob: -3.5078883171081543
    6. 'Let's' → logprob: -5.632888317108154
    7. ' for' → logprob: -5.757888317108154
    8. 'for' → logprob: -5.882888317108154
    9. 'We' → logprob: -6.257888317108154
    10. 'import' → logprob: -6.382888317108154

Token 653: ' each' (ID: 2454)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.2166516780853271
    2. ' t' → logprob: -1.3416516780853271
    3. 'each' → logprob: -1.8416516780853271
    4. ' total' → logprob: -2.716651678085327
    5. 'total' → logprob: -2.841651678085327
    6. 'k' → logprob: -2.841651678085327
    7. ' k' → logprob: -3.091651678085327
    8. ' each' → logprob: -3.341651678085327
    9. 'all' → logprob: -4.591651916503906
    10. ' all' → logprob: -5.341651916503906

Token 654: ' friend' (ID: 5168)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -1.1725002527236938
    2. 'total' → logprob: -1.4225002527236938
    3. 't' → logprob: -2.1725001335144043
    4. ' friend' → logprob: -2.4225001335144043
    5. 'friend' → logprob: -2.6725001335144043
    6. ' t' → logprob: -2.6725001335144043
    7. 'k' → logprob: -3.0475001335144043
    8. ' k' → logprob: -3.6725001335144043
    9. 'a' → logprob: -5.172500133514404
    10. 'i' → logprob: -5.547500133514404

Token 655: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12777404487133026
    2. ' (' → logprob: -3.8777740001678467
    3. '       ' → logprob: -4.002774238586426
    4. ':' → logprob: -4.127774238586426
    5. ' in' → logprob: -4.502774238586426
    6. '#' → logprob: -4.752774238586426
    7. ':
' → logprob: -4.877774238586426
    8. 'in' → logprob: -5.002774238586426
    9. '   ' → logprob: -5.377774238586426
    10. '_i' → logprob: -5.377774238586426

Token 656: ' a' (ID: 261)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' we' → logprob: -0.9032813310623169
    2. 'we' → logprob: -1.278281331062317
    3. ' store' → logprob: -2.6532812118530273
    4. '       ' → logprob: -3.0282812118530273
    5. 'store' → logprob: -3.0282812118530273
    6. 'consider' → logprob: -3.6532812118530273
    7. ' add' → logprob: -4.403281211853027
    8. ' mark' → logprob: -4.403281211853027
    9. ' let's' → logprob: -4.403281211853027
    10. '#' → logprob: -4.403281211853027

Token 657: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0016680421540513635
    2. ',' → logprob: -7.8766679763793945
    3. 'rray' → logprob: -8.376667976379395
    4. 'rr' → logprob: -8.626667976379395
    5. 'i' → logprob: -9.251667976379395
    6. 's' → logprob: -9.251667976379395
    7. ' =' → logprob: -9.376667976379395
    8. '_' → logprob: -9.626667976379395
    9. '_,' → logprob: -10.126667976379395
    10. 'dd' → logprob: -10.126667976379395

Token 658: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.045997027307748795
    2. ' <=' → logprob: -3.920997142791748
    3. '<=' → logprob: -4.545997142791748
    4. ' ,' → logprob: -5.170997142791748
    5. ')' → logprob: -6.295997142791748
    6. '<|end|>' → logprob: -6.420997142791748
    7. 's' → logprob: -6.920997142791748
    8. ',
' → logprob: -7.045997142791748
    9. ' and' → logprob: -7.045997142791748
    10. '       ' → logprob: -8.04599666595459

Token 659: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.31333300471305847
    2. ' b' → logprob: -1.3133330345153809
    3. ' ' → logprob: -11.063332557678223
    4. '_b' → logprob: -11.438332557678223
    5. '   ' → logprob: -11.438332557678223
    6. '```' → logprob: -11.438332557678223
    7. ',' → logprob: -12.438332557678223
    8. ' ' → logprob: -12.688332557678223
    9. ',b' → logprob: -12.688332557678223
    10. '`' → logprob: -13.063332557678223

Token 660: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.04962960630655289
    2. '_' → logprob: -3.0496296882629395
    3. ')' → logprob: -7.9246296882629395
    4. ')_' → logprob: -8.924629211425781
    5. '_
' → logprob: -8.924629211425781
    6. '_)' → logprob: -9.299629211425781
    7. '_,' → logprob: -9.299629211425781
    8. 'i' → logprob: -9.549629211425781
    9. '```' → logprob: -10.424629211425781
    10. ' _' → logprob: -10.549629211425781

Token 661: ' defines' (ID: 37529)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.980849027633667
    2. ':' → logprob: -1.480849027633667
    3. ' =' → logprob: -1.855849027633667
    4. '=' → logprob: -2.730849027633667
    5. ')' → logprob: -2.980849027633667
    6. '       ' → logprob: -3.730849027633667
    7. 's' → logprob: -4.730849266052246
    8. '):' → logprob: -4.730849266052246
    9. '),' → logprob: -5.105849266052246
    10. '.' → logprob: -5.105849266052246

Token 662: ' an' (ID: 448)
  Prédit: ' an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.504941463470459
    2. ' a' → logprob: -1.504941463470459
    3. ' intervals' → logprob: -2.754941463470459
    4. 'an' → logprob: -3.004941463470459
    5. 'a' → logprob: -3.004941463470459
    6. ' ranges' → logprob: -5.504941463470459
    7. 'interval' → logprob: -5.629941463470459
    8. ' the' → logprob: -7.129941463470459
    9. 'ranges' → logprob: -7.379941463470459
    10. ' two' → logprob: -7.379941463470459

Token 663: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.5795754790306091
    2. ' interval' → logprob: -0.8295754790306091
    3. 'inclusive' → logprob: -6.579575538635254
    4. '_interval' → logprob: -7.704575538635254
    5. '[' → logprob: -7.954575538635254
    6. ' inclusive' → logprob: -7.954575538635254
    7. 'range' → logprob: -8.079575538635254
    8. ' range' → logprob: -8.579575538635254
    9. 'event' → logprob: -9.704575538635254
    10. ' [' → logprob: -10.204575538635254

Token 664: ' [' (ID: 723)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5778292417526245
    2. ':' → logprob: -2.077829360961914
    3. ',' → logprob: -2.452829360961914
    4. 's' → logprob: -3.202829360961914
    5. '   ' → logprob: -3.327829360961914
    6. ' for' → logprob: -3.452829360961914
    7. ')' → logprob: -3.702829360961914
    8. '[' → logprob: -4.202829360961914
    9. ':
' → logprob: -4.577829360961914
    10. 'for' → logprob: -4.952829360961914

Token 665: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0608316995203495
    2. 'friend' → logprob: -3.3108317852020264
    3. '0' → logprob: -4.685831546783447
    4. ' a' → logprob: -6.060831546783447
    5. 'self' → logprob: -6.060831546783447
    6. 'ai' → logprob: -6.185831546783447
    7. ',' → logprob: -6.560831546783447
    8. ')' → logprob: -7.060831546783447
    9. 'i' → logprob: -7.310831546783447
    10. 'min' → logprob: -7.685831546783447

Token 666: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0009215848403982818
    2. '_' → logprob: -7.750921726226807
    3. '_,' → logprob: -8.625921249389648
    4. ',' → logprob: -9.125921249389648
    5. 'i' → logprob: -9.125921249389648
    6. ')_' → logprob: -11.125921249389648
    7. ' _' → logprob: -11.125921249389648
    8. '```' → logprob: -11.250921249389648
    9. '_
' → logprob: -11.500921249389648
    10. ']_' → logprob: -11.750921249389648

Token 667: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013770181685686111
    2. ',
' → logprob: -7.876377105712891
    3. ' ,' → logprob: -8.12637710571289
    4. '       ' → logprob: -8.37637710571289
    5. '_i' → logprob: -9.12637710571289
    6. '_,' → logprob: -9.75137710571289
    7. ',i' → logprob: -10.00137710571289
    8. ']' → logprob: -10.12637710571289
    9. '```' → logprob: -10.12637710571289
    10. '           ' → logprob: -10.25137710571289

Token 668: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.575995683670044
    2. ' b' → logprob: -0.825995683670044
    3. ',' → logprob: -10.325995445251465
    4. ',b' → logprob: -10.950995445251465
    5. '   ' → logprob: -13.200995445251465
    6. ' ' → logprob: -13.575995445251465
    7. '```' → logprob: -14.200995445251465
    8. '	b' → logprob: -14.825995445251465
    9. 'max' → logprob: -15.075995445251465
    10. ')b' → logprob: -15.075995445251465

Token 669: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.001057102927006781
    2. 'i' → logprob: -6.876057147979736
    3. '_' → logprob: -11.751056671142578
    4. ']_' → logprob: -12.251056671142578
    5. ']' → logprob: -12.626056671142578
    6. ',' → logprob: -12.876056671142578
    7. '```' → logprob: -13.626056671142578
    8. '_]' → logprob: -14.001056671142578
    9. '_j' → logprob: -14.626056671142578
    10. 'I' → logprob: -14.751056671142578

Token 670: '].
' (ID: 49887)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.016067566350102425
    2. '       ' → logprob: -4.8910675048828125
    3. ']
' → logprob: -5.1410675048828125
    4. ']:' → logprob: -7.5160675048828125
    5. ')' → logprob: -7.6410675048828125
    6. '],' → logprob: -7.6410675048828125
    7. ',' → logprob: -7.8910675048828125
    8. ']:
' → logprob: -8.516067504882812
    9. ']
' → logprob: -8.766067504882812
    10. '].' → logprob: -10.016067504882812

Token 671: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007220868952572346
    2. '        
' → logprob: -6.13222074508667
    3. '#' → logprob: -6.88222074508667
    4. '<|end|>' → logprob: -7.38222074508667
    5. '```' → logprob: -7.50722074508667
    6. ',' → logprob: -7.50722074508667
    7. '\n' → logprob: -7.63222074508667
    8. '   ' → logprob: -7.88222074508667
    9. '\' → logprob: -8.382221221923828
    10. ')' → logprob: -8.507221221923828

Token 672: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03723163157701492
    2. '#' (adapté à ' #') → logprob: -4.0372314453125
    3. '        
' → logprob: -4.6622314453125
    4. '
' → logprob: -5.4122314453125
    5. '<|end|>' → logprob: -6.4122314453125
    6. ',' → logprob: -7.4122314453125
    7. '```' → logprob: -7.7872314453125
    8. '   ' → logprob: -8.2872314453125
    9. '<|end|>' → logprob: -8.2872314453125
    10. '\n' → logprob: -8.7872314453125

Token 673: ' Friend' (ID: 24739)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2755882143974304
    2. '#' → logprob: -1.5255882740020752
    3. '        
' → logprob: -5.025588035583496
    4. 'We' → logprob: -5.150588035583496
    5. '
' → logprob: -6.150588035583496
    6. '```' → logprob: -7.150588035583496
    7. 'Let's' → logprob: -7.275588035583496
    8. 'from' → logprob: -7.275588035583496
    9. '   ' → logprob: -7.525588035583496
    10. ' intervals' → logprob: -7.650588035583496

Token 674: ' is' (ID: 382)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0849834755063057
    2. ' s' → logprob: -3.5849835872650146
    3. '_s' → logprob: -3.7099835872650146
    4. '   ' → logprob: -4.7099833488464355
    5. '_inter' → logprob: -5.3349833488464355
    6. '#' → logprob: -6.0849833488464355
    7. '_ranges' → logprob: -6.0849833488464355
    8. ' can' → logprob: -6.3349833488464355
    9. '_count' → logprob: -7.2099833488464355
    10. '_' → logprob: -7.2099833488464355

Token 675: ' okay' (ID: 25435)
  Prédit: 'happy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'happy' → logprob: -0.09067921340465546
    2. 's' → logprob: -2.715679168701172
    3. ' happy' → logprob: -4.215679168701172
    4. ' satisfied' → logprob: -5.715679168701172
    5. 'h' → logprob: -7.215679168701172
    6. 'consider' → logprob: -7.340679168701172
    7. '_h' → logprob: -8.215679168701172
    8. '"' → logprob: -8.840679168701172
    9. ' ' → logprob: -9.215679168701172
    10. ' considered' → logprob: -9.590679168701172

Token 676: ' if' (ID: 538)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -1.3284251689910889
    2. ' if' → logprob: -1.3284251689910889
    3. 'with' → logprob: -1.4534251689910889
    4. ' to' → logprob: -1.8284251689910889
    5. '       ' → logprob: -3.703425168991089
    6. '   ' → logprob: -4.203425407409668
    7. 's' → logprob: -4.703425407409668
    8. 'to' → logprob: -4.703425407409668
    9. '_to' → logprob: -5.703425407409668
    10. '_with' → logprob: -5.828425407409668

Token 677: ' total' (ID: 3609)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6406275033950806
    2. 'a' → logprob: -1.6406275033950806
    3. ' t' → logprob: -2.015627384185791
    4. ' total' → logprob: -2.640627384185791
    5. 't' → logprob: -3.140627384185791
    6. 'total' → logprob: -3.640627384185791
    7. 'interval' → logprob: -6.515627384185791
    8. '   ' → logprob: -7.265627384185791
    9. ' interval' → logprob: -7.390627384185791
    10. '           ' → logprob: -7.515627384185791

Token 678: ' is' (ID: 382)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.060282934457063675
    2. '<=' → logprob: -3.5602829456329346
    3. ' >=' → logprob: -4.1852827072143555
    4. ' in' → logprob: -5.5602827072143555
    5. '```' → logprob: -6.0602827072143555
    6. ' ==' → logprob: -6.1852827072143555
    7. 's' → logprob: -6.8102827072143555
    8. '=' → logprob: -7.0602827072143555
    9. ' is' → logprob: -7.0602827072143555
    10. ')' → logprob: -7.0602827072143555

Token 679: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.0772753953933716
    2. 'in' → logprob: -1.3272753953933716
    3. 'within' → logprob: -1.8272753953933716
    4. ' within' → logprob: -2.202275276184082
    5. '>=' → logprob: -2.952275276184082
    6. ' between' → logprob: -3.577275276184082
    7. 'between' → logprob: -4.077275276184082
    8. '<=' → logprob: -4.202275276184082
    9. ' >=' → logprob: -5.327275276184082
    10. '```' → logprob: -5.952275276184082

Token 680: ' that' (ID: 484)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7851349711418152
    2. ' [' → logprob: -1.91013503074646
    3. '[a' → logprob: -2.16013503074646
    4. 'the' → logprob: -2.41013503074646
    5. 'their' → logprob: -2.66013503074646
    6. ' the' → logprob: -2.91013503074646
    7. ' their' → logprob: -3.91013503074646
    8. 'range' → logprob: -4.285134792327881
    9. '[i' → logprob: -4.785134792327881
    10. ' range' → logprob: -5.160134792327881

Token 681: ' interval' (ID: 17116)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -1.2612279653549194
    2. 'interval' → logprob: -1.2612279653549194
    3. ' interval' → logprob: -1.7612279653549194
    4. 'range' → logprob: -1.8862279653549194
    5. '_range' → logprob: -3.386228084564209
    6. '_interval' → logprob: -3.511228084564209
    7. '[' → logprob: -3.886228084564209
    8. '[i' → logprob: -5.386228084564209
    9. '_i' → logprob: -6.261228084564209
    10. ' set' → logprob: -6.261228084564209

Token 682: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05167847126722336
    2. ':' → logprob: -4.926678657531738
    3. '\n' → logprob: -5.176678657531738
    4. ',' → logprob: -5.176678657531738
    5. ':
' → logprob: -5.176678657531738
    6. '        
' → logprob: -5.301678657531738
    7. ')' → logprob: -5.551678657531738
    8. '```' → logprob: -6.051678657531738
    9. '\' → logprob: -6.301678657531738
    10. '<|end|>' → logprob: -6.551678657531738

Token 683: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004703999496996403
    2. '        
' → logprob: -6.254703998565674
    3. '```' → logprob: -6.504703998565674
    4. '
' → logprob: -7.129703998565674
    5. '<|end|>' → logprob: -9.254704475402832
    6. 'import' → logprob: -9.504704475402832
    7. '#' → logprob: -9.629704475402832
    8. '           ' → logprob: -10.379704475402832
    9. 'from' → logprob: -10.629704475402832
    10. '\n' → logprob: -10.629704475402832

Token 684: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013308575376868248
    2. '        
' → logprob: -4.763308525085449
    3. '
' → logprob: -5.638308525085449
    4. '```' → logprob: -7.263308525085449
    5. 'from' → logprob: -9.01330852508545
    6. 'import' → logprob: -9.01330852508545
    7. '           ' → logprob: -10.26330852508545
    8. '#' (adapté à ' #') → logprob: -10.38830852508545
    9. '    
' → logprob: -10.63830852508545
    10. '``' → logprob: -11.63830852508545

Token 685: ' Sort' (ID: 25945)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6509872078895569
    2. '       ' → logprob: -1.275987148284912
    3. 'interval' → logprob: -1.775987148284912
    4. 'from' → logprob: -5.025987148284912
    5. 'events' → logprob: -5.775987148284912
    6. 'all' → logprob: -5.900987148284912
    7. 'counts' → logprob: -5.900987148284912
    8. 'points' → logprob: -6.025987148284912
    9. '   ' → logprob: -6.275987148284912
    10. 'count' → logprob: -6.775987148284912

Token 686: ' intervals' (ID: 49900)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3798558712005615
    2. '(self' → logprob: -1.7548558712005615
    3. 'interval' → logprob: -2.2548558712005615
    4. 'friends' → logprob: -4.629856109619141
    5. '_ranges' → logprob: -4.879856109619141
    6. 'by' → logprob: -5.004856109619141
    7. '       ' → logprob: -5.379856109619141
    8. '_inter' → logprob: -6.004856109619141
    9. 'ranges' → logprob: -6.379856109619141
    10. '   ' → logprob: -6.754856109619141

Token 687: ' by' (ID: 656)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5645945072174072
    2. ' =' → logprob: -1.9395945072174072
    3. 'by' → logprob: -2.1895945072174072
    4. '=' → logprob: -3.1895945072174072
    5. '_' → logprob: -3.4395945072174072
    6. '   ' → logprob: -3.5645945072174072
    7. ',' → logprob: -4.064594268798828
    8. ' by' → logprob: -4.064594268798828
    9. '       ' → logprob: -4.564594268798828
    10. '_by' → logprob: -4.939594268798828

Token 688: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0011859419755637646
    2. 'min' → logprob: -7.501185894012451
    3. ' a' → logprob: -8.00118637084961
    4. 'start' → logprob: -8.62618637084961
    5. 'their' → logprob: -9.87618637084961
    6. 'b' → logprob: -10.75118637084961
    7. 'ai' → logprob: -10.87618637084961
    8. '   ' → logprob: -11.25118637084961
    9. ' their' → logprob: -12.50118637084961
    10. 'max' → logprob: -13.00118637084961

Token 689: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.006298826541751623
    2. 'min' → logprob: -5.881299018859863
    3. 'start' → logprob: -6.506299018859863
    4. 'i' → logprob: -6.756299018859863
    5. 'a' → logprob: -7.631299018859863
    6. '[i' → logprob: -10.006299018859863
    7. '_start' → logprob: -10.131299018859863
    8. 'begin' → logprob: -10.256299018859863
    9. '[' → logprob: -10.381299018859863
    10. 'max' → logprob: -10.881299018859863

Token 690: ' ascending' (ID: 75564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3389182686805725
    2. ' =' → logprob: -2.0889182090759277
    3. ',' → logprob: -3.0889182090759277
    4. '_sorted' → logprob: -3.8389182090759277
    5. ':
' → logprob: -4.088918209075928
    6. '.sort' → logprob: -4.463918209075928
    7. ':' → logprob: -4.463918209075928
    8. '=' → logprob: -4.588918209075928
    9. '
' → logprob: -4.963918209075928
    10. '   ' → logprob: -4.963918209075928

Token 691: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03705773130059242
    2. ',' → logprob: -4.037057876586914
    3. '
' → logprob: -5.287057876586914
    4. '        
' → logprob: -5.412057876586914
    5. '```' → logprob: -5.662057876586914
    6. ',
' → logprob: -7.162057876586914
    7. ' friends' → logprob: -7.787057876586914
    8. ')' → logprob: -7.787057876586914
    9. ' and' → logprob: -7.787057876586914
    10. '.sort' → logprob: -8.037057876586914

Token 692: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0256683137267828
    2. ',' → logprob: -3.9006683826446533
    3. '```' → logprob: -5.900668144226074
    4. '        
' → logprob: -6.775668144226074
    5. '
' → logprob: -7.400668144226074
    6. ' and' → logprob: -8.400668144226074
    7. ',
' → logprob: -9.275668144226074
    8. '           ' → logprob: -9.900668144226074
    9. 'and' → logprob: -10.150668144226074
    10. '   ' → logprob: -10.525668144226074

Token 693: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019200751557946205
    2. ',' → logprob: -5.519200801849365
    3. ' friends' → logprob: -5.769200801849365
    4. 'friends' → logprob: -5.769200801849365
    5. '#' (adapté à ' #') → logprob: -6.144200801849365
    6. '```' → logprob: -6.394200801849365
    7. '
' → logprob: -6.644200801849365
    8. ' and' → logprob: -7.269200801849365
    9. '        
' → logprob: -7.519200801849365
    10. 'friend' → logprob: -7.894200801849365

Token 694: ' Then' (ID: 7801)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020775562152266502
    2. '```' → logprob: -4.89577579498291
    3. 'friends' → logprob: -5.39577579498291
    4. '#' → logprob: -5.89577579498291
    5. ' friends' → logprob: -6.52077579498291
    6. '
' → logprob: -7.14577579498291
    7. 'friend' → logprob: -7.64577579498291
    8. 'from' → logprob: -7.64577579498291
    9. '        
' → logprob: -8.02077579498291
    10. 'sorted' → logprob: -8.27077579498291

Token 695: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7211213707923889
    2. 'import' → logprob: -1.9711213111877441
    3. 'from' → logprob: -2.721121311187744
    4. '```' → logprob: -3.096121311187744
    5. 'left' → logprob: -3.221121311187744
    6. 'def' → logprob: -3.471121311187744
    7. '#' → logprob: -3.596121311187744
    8. 'we' → logprob: -3.596121311187744
    9. 'use' → logprob: -3.721121311187744
    10. 'initialize' → logprob: -4.221121311187744

Token 696: ' total' (ID: 3609)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.9698516130447388
    2. 'total' → logprob: -1.7198516130447388
    3. ' each' → logprob: -2.094851493835449
    4. 'k' → logprob: -2.344851493835449
    5. ' total' → logprob: -2.344851493835449
    6. 'b' → logprob: -3.469851493835449
    7. ' b' → logprob: -3.469851493835449
    8. 't' → logprob: -3.719851493835449
    9. ' k' → logprob: -4.094851493835449
    10. ' t' → logprob: -5.094851493835449

Token 697: ' t' (ID: 260)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38162529468536377
    2. '=' → logprob: -1.8816252946853638
    3. ' in' → logprob: -2.256625175476074
    4. 'from' → logprob: -4.256625175476074
    5. ' <=' → logprob: -4.631625175476074
    6. ':' → logprob: -5.506625175476074
    7. '+' → logprob: -5.631625175476074
    8. 'for' → logprob: -5.631625175476074
    9. ' for' → logprob: -6.006625175476074
    10. 's' → logprob: -6.006625175476074

Token 698: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7160957455635071
    2. ':' → logprob: -0.8410957455635071
    3. '=' → logprob: -3.8410956859588623
    4. ' =' → logprob: -3.8410956859588623
    5. ':
' → logprob: -4.091095924377441
    6. '       ' → logprob: -5.341095924377441
    7. '):' → logprob: -6.091095924377441
    8. ')' → logprob: -6.341095924377441
    9. ' we' → logprob: -6.466095924377441
    10. '   ' → logprob: -6.591095924377441

Token 699: ' friends' (ID: 5664)
  Prédit: 'we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'we' → logprob: -0.7610628604888916
    2. ' we' → logprob: -1.2610628604888916
    3. '       ' → logprob: -2.6360628604888916
    4. 'import' → logprob: -3.3860628604888916
    5. '#' → logprob: -3.5110628604888916
    6. 'count' → logprob: -3.7610628604888916
    7. 'while' → logprob: -3.8860628604888916
    8. ' find' → logprob: -4.5110626220703125
    9. ' use' → logprob: -4.5110626220703125
    10. ' while' → logprob: -4.6360626220703125

Token 700: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.8078473806381226
    2. 'with' → logprob: -0.9328473806381226
    3. 's' → logprob: -2.807847499847412
    4. ' =' → logprob: -3.807847499847412
    5. ' satisfying' → logprob: -4.182847499847412
    6. '#' → logprob: -4.432847499847412
    7. ' can' → logprob: -4.932847499847412
    8. '       ' → logprob: -5.182847499847412
    9. ' that' → logprob: -5.557847499847412
    10. ' are' → logprob: -5.557847499847412

Token 701: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03402139991521835
    2. ' a' → logprob: -3.4090213775634766
    3. 'b' → logprob: -8.784021377563477
    4. 'interval' → logprob: -9.534021377563477
    5. ' intervals' → logprob: -10.159021377563477
    6. ' b' → logprob: -10.409021377563477
    7. '```' → logprob: -10.659021377563477
    8. ' ' → logprob: -11.284021377563477
    9. '
' → logprob: -11.534021377563477
    10. '   ' → logprob: -11.534021377563477

Token 702: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0011545089073479176
    2. 'i' → logprob: -7.37615442276001
    3. 'b' → logprob: -8.501154899597168
    4. 'a' → logprob: -9.251154899597168
    5. '_b' → logprob: -10.126154899597168
    6. '[i' → logprob: -10.376154899597168
    7. '<=' → logprob: -10.626154899597168
    8. 's' → logprob: -11.438654899597168
    9. '_is' → logprob: -11.563654899597168
    10. 'range' → logprob: -12.001154899597168

Token 703: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.20283499360084534
    2. '<=' → logprob: -1.702834963798523
    3. ' >' → logprob: -8.327835083007812
    4. ' >=' → logprob: -8.452835083007812
    5. 's' → logprob: -8.577835083007812
    6. '>' → logprob: -8.702835083007812
    7. '>=' → logprob: -8.827835083007812
    8. ')' → logprob: -9.202835083007812
    9. '```' → logprob: -9.452835083007812
    10. '   ' → logprob: -9.827835083007812

Token 704: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.06207602098584175
    2. ' t' → logprob: -2.8120760917663574
    3. 'total' → logprob: -9.3120756149292
    4. ' total' → logprob: -11.8120756149292
    5. '   ' → logprob: -12.0620756149292
    6. '`t' → logprob: -12.8120756149292
    7. '```' → logprob: -13.5620756149292
    8. '	t' → logprob: -15.9370756149292
    9. '
' → logprob: -16.062076568603516
    10. '`' → logprob: -16.312076568603516

Token 705: ' is' (ID: 382)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6910504698753357
    2. ':
' → logprob: -1.5660505294799805
    3. ' and' → logprob: -2.5660505294799805
    4. ',' → logprob: -3.0660505294799805
    5. ' can' → logprob: -3.4410505294799805
    6. ' will' → logprob: -3.8160505294799805
    7. ')' → logprob: -3.8160505294799805
    8. 'and' → logprob: -4.0660505294799805
    9. ' are' → logprob: -4.1910505294799805
    10. ']' → logprob: -4.8160505294799805

Token 706: ' prefix' (ID: 18633)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.04378342628479
    2. ' bis' → logprob: -2.29378342628479
    3. '0' → logprob: -2.79378342628479
    4. 'in' → logprob: -2.91878342628479
    5. 'count' → logprob: -3.04378342628479
    6. 'found' → logprob: -3.04378342628479
    7. 'bis' → logprob: -3.16878342628479
    8. '#' → logprob: -3.41878342628479
    9. ' at' → logprob: -3.54378342628479
    10. 'binary' → logprob: -3.54378342628479

Token 707: ' of' (ID: 328)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.0325566530227661
    2. '_' → logprob: -1.6575566530227661
    3. 'sum' → logprob: -1.6575566530227661
    4. '_s' → logprob: -2.9075565338134766
    5. '       ' → logprob: -3.0325565338134766
    6. '_len' → logprob: -3.5325565338134766
    7. '_length' → logprob: -4.032556533813477
    8. '_size' → logprob: -4.532556533813477
    9. ' _' → logprob: -4.657556533813477
    10. '_count' → logprob: -4.657556533813477

Token 708: ' list' (ID: 1562)
  Prédit: 'friends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'friends' → logprob: -0.6964154839515686
    2. 'self' → logprob: -0.9464154839515686
    3. ' friends' → logprob: -2.821415424346924
    4. ' intervals' → logprob: -4.321415424346924
    5. ' self' → logprob: -4.446415424346924
    6. 'interval' → logprob: -4.571415424346924
    7. 'the' → logprob: -4.821415424346924
    8. 'sorted' → logprob: -4.946415424346924
    9. ' the' → logprob: -6.196415424346924
    10. ' sorted' → logprob: -8.446415901184082

Token 709: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11597764492034912
    2. ',' → logprob: -3.1159777641296387
    3. '        
' → logprob: -4.490977764129639
    4. ' =' → logprob: -4.990977764129639
    5. '
' → logprob: -5.365977764129639
    6. ':' → logprob: -5.365977764129639
    7. '           ' → logprob: -5.615977764129639
    8. '```' → logprob: -5.615977764129639
    9. ':
' → logprob: -5.865977764129639
    10. ')' → logprob: -5.990977764129639

Token 710: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023369399830698967
    2. ',' → logprob: -4.648369312286377
    3. ':' → logprob: -6.273369312286377
    4. '        
' → logprob: -6.398369312286377
    5. '```' → logprob: -6.523369312286377
    6. '.' → logprob: -6.773369312286377
    7. '           ' → logprob: -7.023369312286377
    8. ' =' → logprob: -7.273369312286377
    9. '\n' → logprob: -7.273369312286377
    10. ')' → logprob: -7.398369312286377

Token 711: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003617647336795926
    2. '        
' → logprob: -6.003617763519287
    3. ',' → logprob: -8.378617286682129
    4. '
' → logprob: -8.503617286682129
    5. '           ' → logprob: -8.753617286682129
    6. '```' → logprob: -8.878617286682129
    7. '\n' → logprob: -9.503617286682129
    8. '        ' → logprob: -9.878617286682129
    9. '   ' → logprob: -10.253617286682129
    10. 'import' → logprob: -10.628617286682129

Token 712: ' Then' (ID: 7801)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022043932229280472
    2. 'import' → logprob: -4.897043704986572
    3. 'def' → logprob: -6.147043704986572
    4. 'from' → logprob: -6.272043704986572
    5. '#' → logprob: -6.397043704986572
    6. '   ' → logprob: -6.522043704986572
    7. '           ' → logprob: -6.647043704986572
    8. 'friends' → logprob: -6.647043704986572
    9. '        
' → logprob: -7.272043704986572
    10. 'friend' → logprob: -7.647043704986572

Token 713: ' among' (ID: 6200)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' we' → logprob: -0.675280749797821
    2. 'we' → logprob: -1.1752808094024658
    3. '       ' → logprob: -2.550280809402466
    4. 'import' → logprob: -3.425280809402466
    5. 'from' → logprob: -4.425280570983887
    6. ' use' → logprob: -4.800280570983887
    7. ' for' → logprob: -4.925280570983887
    8. ' let's' → logprob: -5.050280570983887
    9. 'def' → logprob: -5.425280570983887
    10. 'for' → logprob: -5.550280570983887

Token 714: ' prefix' (ID: 18633)
  Prédit: 'those'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'those' → logprob: -0.3544427752494812
    2. 'the' → logprob: -3.104442834854126
    3. 'prefix' → logprob: -3.104442834854126
    4. 'them' → logprob: -3.229442834854126
    5. 'these' → logprob: -3.229442834854126
    6. 'friends' → logprob: -3.354442834854126
    7. ' those' → logprob: -3.479442834854126
    8. 'b' → logprob: -3.604442834854126
    9. 'that' → logprob: -4.229442596435547
    10. ' friends' → logprob: -4.854442596435547

Token 715: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.6462225914001465
    2. ' _' → logprob: -1.7712225914001465
    3. '_' → logprob: -1.8962225914001465
    4. '_s' → logprob: -2.1462225914001465
    5. '[i' → logprob: -3.0212225914001465
    6. '       ' → logprob: -3.2712225914001465
    7. 'of' → logprob: -3.5212225914001465
    8. 's' → logprob: -3.6462225914001465
    9. '_f' → logprob: -3.7712225914001465
    10. '[' → logprob: -3.8962225914001465

Token 716: ' count' (ID: 3605)
  Prédit: 'we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'we' → logprob: -0.397431343793869
    2. ' we' → logprob: -1.1474313735961914
    3. ' use' → logprob: -5.772431373596191
    4. '       ' → logprob: -6.772431373596191
    5. 'use' → logprob: -6.772431373596191
    6. 'count' → logprob: -6.772431373596191
    7. 'b' → logprob: -7.147431373596191
    8. 'for' → logprob: -7.897431373596191
    9. 'def' → logprob: -8.147431373596191
    10. ' for' → logprob: -8.147431373596191

Token 717: ' how' (ID: 1495)
  Prédit: ' how'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' how' → logprob: -0.36573490500450134
    2. 'how' → logprob: -2.490734815597534
    3. ' friends' → logprob: -2.615734815597534
    4. 'friends' → logprob: -2.865734815597534
    5. ' of' → logprob: -3.365734815597534
    6. 'of' → logprob: -3.865734815597534
    7. 'with' → logprob: -4.240735054016113
    8. ' with' → logprob: -4.240735054016113
    9. '       ' → logprob: -5.990735054016113
    10. '   ' → logprob: -6.365735054016113

Token 718: ' many' (ID: 1991)
  Prédit: 'many'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'many' → logprob: -0.014425328932702541
    2. ' many' → logprob: -4.264425277709961
    3. '_many' → logprob: -8.264425277709961
    4. '-many' → logprob: -13.889425277709961
    5. 'to' → logprob: -14.264425277709961
    6. 'may' → logprob: -14.389425277709961
    7. '   ' → logprob: -14.514425277709961
    8. 'Many' → logprob: -14.514425277709961
    9. '[' → logprob: -15.639425277709961
    10. ' ' → logprob: -15.764425277709961

Token 719: ' have' (ID: 679)
  Prédit: ' have'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' have' → logprob: -0.32238128781318665
    2. 'have' → logprob: -1.4473812580108643
    3. ' with' → logprob: -4.072381496429443
    4. ' friends' → logprob: -4.572381496429443
    5. 'friends' → logprob: -5.072381496429443
    6. 'with' → logprob: -5.197381496429443
    7. 's' → logprob: -8.197381019592285
    8. ' of' → logprob: -8.572381019592285
    9. 'friend' → logprob: -8.572381019592285
    10. ')' → logprob: -9.447381019592285

Token 720: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02326807752251625
    2. ' b' → logprob: -3.773267984390259
    3. '   ' → logprob: -10.89826774597168
    4. '```' → logprob: -13.39826774597168
    5. ' ' → logprob: -13.77326774597168
    6. '	b' → logprob: -14.52326774597168
    7. '`' → logprob: -15.64826774597168
    8. '       ' → logprob: -15.77326774597168
    9. '  ' → logprob: -16.14826774597168
    10. ' ' → logprob: -16.27326774597168

Token 721: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -2.6776029699249193e-05
    2. '_' → logprob: -12.12502670288086
    3. '>=' → logprob: -12.25002670288086
    4. 'i' → logprob: -12.50002670288086
    5. ' >=' → logprob: -13.25002670288086
    6. 's' → logprob: -13.25002670288086
    7. '[i' → logprob: -13.50002670288086
    8. '_j' → logprob: -14.25002670288086
    9. '_indices' → logprob: -14.25002670288086
    10. ' _' → logprob: -14.37502670288086

Token 722: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.02573349140584469
    2. ' <=' → logprob: -4.150733470916748
    3. '>=' → logprob: -4.900733470916748
    4. ')' → logprob: -7.525733470916748
    5. '_sorted' → logprob: -7.900733470916748
    6. 's' → logprob: -8.025733947753906
    7. '<=' → logprob: -8.650733947753906
    8. ' ' → logprob: -9.150733947753906
    9. 'sorted' → logprob: -9.275733947753906
    10. '   ' → logprob: -9.525733947753906

Token 723: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3172817826271057
    2. ' t' → logprob: -1.317281723022461
    3. 'total' → logprob: -5.692281723022461
    4. ' total' → logprob: -7.442281723022461
    5. '       ' → logprob: -10.442281723022461
    6. '   ' → logprob: -11.317281723022461
    7. '           ' → logprob: -12.317281723022461
    8. '    ' → logprob: -13.067281723022461
    9. '```' → logprob: -13.442281723022461
    10. '`t' → logprob: -13.942281723022461

Token 724: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05199019983410835
    2. ':' → logprob: -4.426990032196045
    3. '```' → logprob: -4.676990032196045
    4. ',' → logprob: -5.176990032196045
    5. '[' → logprob: -5.426990032196045
    6. ':
' → logprob: -6.176990032196045
    7. '           ' → logprob: -6.176990032196045
    8. ' =' → logprob: -6.301990032196045
    9. ')' → logprob: -6.426990032196045
    10. '   ' → logprob: -6.551990032196045

Token 725: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04125167429447174
    2. '\n' → logprob: -4.2912516593933105
    3. '\' → logprob: -5.2912516593933105
    4. '        
' → logprob: -5.6662516593933105
    5. '```' → logprob: -5.6662516593933105
    6. '           ' → logprob: -5.7912516593933105
    7. ',' → logprob: -6.4162516593933105
    8. ')' → logprob: -6.5412516593933105
    9. '   ' → logprob: -6.6662516593933105
    10. '
' → logprob: -6.7912516593933105

Token 726: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001384997507557273
    2. '        
' → logprob: -7.12638521194458
    3. '           ' → logprob: -8.501384735107422
    4. '        ' → logprob: -9.251384735107422
    5. '   ' → logprob: -10.126384735107422
    6. '```' → logprob: -10.626384735107422
    7. '               ' → logprob: -10.751384735107422
    8. 'def' → logprob: -10.751384735107422
    9. ',' → logprob: -10.751384735107422
    10. ')' → logprob: -10.876384735107422

Token 727: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01106373593211174
    2. 'import' → logprob: -5.511063575744629
    3. 'from' → logprob: -6.386063575744629
    4. 'friends' → logprob: -6.511063575744629
    5. 'friend' → logprob: -7.011063575744629
    6. 'b' → logprob: -7.011063575744629
    7. 'def' → logprob: -7.761063575744629
    8. '#' → logprob: -8.136063575744629
    9. 'class' → logprob: -8.261063575744629
    10. ' friends' → logprob: -8.386063575744629

Token 728: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5968191027641296
    2. ' friends' → logprob: -1.2218191623687744
    3. 'import' → logprob: -3.4718191623687744
    4. ' self' → logprob: -3.4718191623687744
    5. 'self' → logprob: -3.9718191623687744
    6. 'from' → logprob: -4.221818923950195
    7. ' sorted' → logprob: -4.471818923950195
    8. ' from' → logprob: -4.971818923950195
    9. '```' → logprob: -5.096818923950195
    10. 'friends' → logprob: -5.096818923950195

Token 729: ' we' (ID: 581)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1972004771232605
    2. '       ' → logprob: -2.6972005367279053
    3. 'import' → logprob: -3.8222005367279053
    4. 'friends' → logprob: -3.8222005367279053
    5. ' b' → logprob: -4.197200298309326
    6. 'from' → logprob: -4.447200298309326
    7. 'prefix' → logprob: -4.447200298309326
    8. '#' → logprob: -4.572200298309326
    9. 'self' → logprob: -5.072200298309326
    10. ' friends' → logprob: -5.947200298309326

Token 730: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.054247673600912094
    2. ' will' → logprob: -3.9292476177215576
    3. ' need' → logprob: -4.429247856140137
    4. 'can' → logprob: -4.804247856140137
    5. '       ' → logprob: -6.304247856140137
    6. 'import' → logprob: -6.554247856140137
    7. '   ' → logprob: -6.679247856140137
    8. ' have' → logprob: -6.679247856140137
    9. 'need' → logprob: -6.804247856140137
    10. 'def' → logprob: -7.179247856140137

Token 731: ':
' (ID: 734)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.839035153388977
    2. 'build' → logprob: -0.964035153388977
    3. 'maint' → logprob: -3.0890350341796875
    4. 'implement' → logprob: -3.0890350341796875
    5. 'def' → logprob: -3.9640350341796875
    6. 'initialize' → logprob: -4.0890350341796875
    7. 'import' → logprob: -4.3390350341796875
    8. ' use' → logprob: -4.4640350341796875
    9. 'prepare' → logprob: -5.0890350341796875
    10. 'create' → logprob: -5.3390350341796875

Token 732: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002210681326687336
    2. 'import' → logprob: -6.62721061706543
    3. '#' → logprob: -8.37721061706543
    4. 'from' → logprob: -8.37721061706543
    5. 'def' → logprob: -9.25221061706543
    6. '```' → logprob: -9.37721061706543
    7. '   ' → logprob: -9.62721061706543
    8. '        
' → logprob: -9.87721061706543
    9. ' =' → logprob: -10.87721061706543
    10. 'sort' → logprob: -11.00221061706543

Token 733: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008181429468095303
    2. '#' (adapté à ' #') → logprob: -6.383181571960449
    3. 'import' → logprob: -6.633181571960449
    4. '```' → logprob: -6.633181571960449
    5. 'from' → logprob: -7.008181571960449
    6. ' sort' → logprob: -7.633181571960449
    7. '   ' → logprob: -7.883181571960449
    8. 'sort' → logprob: -8.00818157196045
    9. ' sorted' → logprob: -8.13318157196045
    10. 'def' → logprob: -8.38318157196045

Token 734: ' Sort' (ID: 25945)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49689981341362
    2. 'build' → logprob: -1.4968998432159424
    3. '#' → logprob: -2.4968998432159424
    4. 'import' → logprob: -3.7468998432159424
    5. 'def' → logprob: -3.8718998432159424
    6. '   ' → logprob: -4.746899604797363
    7. 'sort' → logprob: -4.871899604797363
    8. 'from' → logprob: -5.121899604797363
    9. ' build' → logprob: -5.621899604797363
    10. '```' → logprob: -5.746899604797363

Token 735: ' friends' (ID: 5664)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.20646825432777405
    2. 'self' → logprob: -1.7064682245254517
    3. 'friends' → logprob: -5.456468105316162
    4. '       ' → logprob: -8.45646858215332
    5. '_f' → logprob: -8.95646858215332
    6. ' self' → logprob: -9.20646858215332
    7. '   ' → logprob: -9.45646858215332
    8. '(f' → logprob: -9.83146858215332
    9. '(' → logprob: -10.08146858215332
    10. 'friend' → logprob: -10.33146858215332

Token 736: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.7999428510665894
    2. '(self' → logprob: -1.4249428510665894
    3. '       ' → logprob: -2.674942970275879
    4. '_by' → logprob: -2.799942970275879
    5. '   ' → logprob: -2.924942970275879
    6. ' by' → logprob: -2.924942970275879
    7. ' =' → logprob: -3.549942970275879
    8. '```' → logprob: -4.049942970275879
    9. '=' → logprob: -4.924942970275879
    10. '.sort' → logprob: -5.674942970275879

Token 737: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.29560554027557373
    2. ' a' → logprob: -2.7956056594848633
    3. 'friend' → logprob: -2.7956056594848633
    4. 'self' → logprob: -3.5456056594848633
    5. ' lambda' → logprob: -3.5456056594848633
    6. ' friend' → logprob: -3.5456056594848633
    7. 'lambda' → logprob: -3.7956056594848633
    8. 'constraint' → logprob: -4.795605659484863
    9. ' self' → logprob: -4.920605659484863
    10. 'f' → logprob: -5.170605659484863

Token 738: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00020652047533076257
    2. '_' → logprob: -8.62520694732666
    3. 'i' → logprob: -11.62520694732666
    4. ' _' → logprob: -12.50020694732666
    5. '__' → logprob: -13.00020694732666
    6. '_friend' → logprob: -13.00020694732666
    7. '_f' → logprob: -13.62520694732666
    8. '_
' → logprob: -13.75020694732666
    9. '_id' → logprob: -13.87520694732666
    10. '```' → logprob: -14.00020694732666

Token 739: ' ascending' (ID: 75564)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8408372402191162
    2. ',' → logprob: -1.2158372402191162
    3. '_' → logprob: -2.840837240219116
    4. '       ' → logprob: -2.965837240219116
    5. '=' → logprob: -3.465837240219116
    6. '   ' → logprob: -3.715837240219116
    7. '_sorted' → logprob: -3.840837240219116
    8. '.' → logprob: -3.965837240219116
    9. '```' → logprob: -4.590837478637695
    10. '.sort' → logprob: -4.590837478637695

Token 740: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2778189480304718
    2. ':
' → logprob: -2.6528189182281494
    3. ',' → logprob: -3.1528189182281494
    4. ' =' → logprob: -3.5278189182281494
    5. ',
' → logprob: -3.6528189182281494
    6. '.sort' → logprob: -4.1528191566467285
    7. '   ' → logprob: -4.5278191566467285
    8. ':' → logprob: -5.0278191566467285
    9. '_sorted' → logprob: -5.0278191566467285
    10. '(self' → logprob: -5.7778191566467285

Token 741: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01779130846261978
    2. ',' → logprob: -5.267791271209717
    3. '
' → logprob: -5.767791271209717
    4. ' =' → logprob: -6.392791271209717
    5. '.sort' → logprob: -6.392791271209717
    6. ',
' → logprob: -6.767791271209717
    7. '        
' → logprob: -7.267791271209717
    8. 'import' → logprob: -7.642791271209717
    9. '           ' → logprob: -7.892791271209717
    10. '```' → logprob: -8.017791748046875

Token 742: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08656586706638336
    2. ',' → logprob: -4.086565971374512
    3. '
' → logprob: -4.336565971374512
    4. '```' → logprob: -4.711565971374512
    5. ' friends' → logprob: -4.836565971374512
    6. ' sorted' → logprob: -4.961565971374512
    7. ',
' → logprob: -5.211565971374512
    8. 'sorted' → logprob: -5.711565971374512
    9. '        
' → logprob: -5.836565971374512
    10. '.sort' → logprob: -5.961565971374512

Token 743: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15975359082221985
    2. 'friends' → logprob: -2.5347535610198975
    3. 'self' → logprob: -3.4097535610198975
    4. ' friends' → logprob: -3.9097535610198975
    5. '```' → logprob: -5.534753799438477
    6. 'friend' → logprob: -5.909753799438477
    7. 'b' → logprob: -6.034753799438477
    8. '   ' → logprob: -6.159753799438477
    9. 'def' → logprob: -6.909753799438477
    10. ' self' → logprob: -7.034753799438477

Token 744: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -1.0512422323226929
    2. 'b' → logprob: -1.3012422323226929
    3. ' friend' → logprob: -1.9262422323226929
    4. 'each' → logprob: -2.9262423515319824
    5. 'i' → logprob: -3.0512423515319824
    6. 'friend' → logprob: -3.3012423515319824
    7. ' i' → logprob: -3.5512423515319824
    8. ' each' → logprob: -3.8012423515319824
    9. 'self' → logprob: -4.676242351531982
    10. ' k' → logprob: -4.926242351531982

Token 745: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -9.543733904138207e-05
    2. '_' → logprob: -10.25009536743164
    3. '```' → logprob: -11.75009536743164
    4. 'i' → logprob: -11.87509536743164
    5. '_values' → logprob: -12.00009536743164
    6. ' _' → logprob: -12.00009536743164
    7. '_idx' → logprob: -12.25009536743164
    8. '_idxs' → logprob: -12.50009536743164
    9. '_indices' → logprob: -12.62509536743164
    10. 's' → logprob: -12.75009536743164

Token 746: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0734226256608963
    2. '_list' → logprob: -3.44842267036438
    3. '_values' → logprob: -4.073422431945801
    4. ' >=' → logprob: -5.948422431945801
    5. '_s' → logprob: -6.073422431945801
    6. '_' → logprob: -6.073422431945801
    7. '_sorted' → logprob: -6.073422431945801
    8. ',' → logprob: -6.198422431945801
    9. ' s' → logprob: -6.573422431945801
    10. ')' → logprob: -6.573422431945801

Token 747: ' we' (ID: 581)
  Prédit: ' insert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' insert' → logprob: -1.1844373941421509
    2. 'import' → logprob: -2.0594372749328613
    3. ' store' → logprob: -2.0594372749328613
    4. ' import' → logprob: -2.0594372749328613
    5. ' create' → logprob: -2.9344372749328613
    6. ' values' → logprob: -3.4344372749328613
    7. ' extract' → logprob: -3.6844372749328613
    8. 'b' → logprob: -3.8094372749328613
    9. 'insert' → logprob: -3.9344372749328613
    10. 'values' → logprob: -3.9344372749328613

Token 748: ' can' (ID: 665)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.215000867843628
    2. 'import' → logprob: -1.340000867843628
    3. ' can' → logprob: -1.965000867843628
    4. '_sorted' → logprob: -2.715000867843628
    5. '.append' → logprob: -2.965000867843628
    6. ' will' → logprob: -3.090000867843628
    7. '_values' → logprob: -3.590000867843628
    8. '=' → logprob: -4.340001106262207
    9. 'sort' → logprob: -4.465001106262207
    10. ' need' → logprob: -4.965001106262207

Token 749: ' keep' (ID: 3357)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.28880399465560913
    2. 'import' → logprob: -2.413804054260254
    3. 'append' → logprob: -3.038804054260254
    4. ' build' → logprob: -3.788804054260254
    5. 'collect' → logprob: -4.038804054260254
    6. 'insert' → logprob: -4.538804054260254
    7. 'maint' → logprob: -4.663804054260254
    8. 'store' → logprob: -4.788804054260254
    9. 'sort' → logprob: -4.913804054260254
    10. 'create' → logprob: -4.913804054260254

Token 750: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.9103149175643921
    2. 'a' → logprob: -1.160314917564392
    3. ' an' → logprob: -1.910314917564392
    4. 'an' → logprob: -2.4103150367736816
    5. 'b' → logprob: -4.785315036773682
    6. '[]' → logprob: -4.785315036773682
    7. 'sorted' → logprob: -4.785315036773682
    8. 'all' → logprob: -5.910315036773682
    9. 'self' → logprob: -6.160315036773682
    10. 'them' → logprob: -6.285315036773682

Token 751: ' Fen' (ID: 48230)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.7152340412139893
    2. 'Fen' → logprob: -1.3402340412139893
    3. 'fen' → logprob: -2.3402340412139893
    4. 'bit' → logprob: -2.8402340412139893
    5. 'segment' → logprob: -3.4652340412139893
    6. 'list' → logprob: -4.09023380279541
    7. 'self' → logprob: -4.71523380279541
    8. ' Fen' → logprob: -4.71523380279541
    9. '[]' → logprob: -5.34023380279541
    10. 'b' → logprob: -5.84023380279541

Token 752: 'wick' (ID: 14105)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.028212744742631912
    2. 'wick' → logprob: -3.653212785720825
    3. '```' → logprob: -6.903212547302246
    4. '       ' → logprob: -8.153212547302246
    5. '   ' → logprob: -8.903212547302246
    6. 't' → logprob: -9.403212547302246
    7. '``' → logprob: -9.903212547302246
    8. 'class' → logprob: -10.028212547302246
    9. 'wt' → logprob: -10.153212547302246
    10. '        ' → logprob: -10.778212547302246

Token 753: ' tree' (ID: 8165)
  Prédit: 'Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.10995953530073166
    2. ' Tree' → logprob: -2.859959602355957
    3. ' tree' → logprob: -4.109959602355957
    4. '_tree' → logprob: -4.109959602355957
    5. 'ree' → logprob: -4.859959602355957
    6. 'tree' → logprob: -5.484959602355957
    7. '_' → logprob: -7.484959602355957
    8. '   ' → logprob: -8.359959602355957
    9. ' _' → logprob: -8.484959602355957
    10. '_T' → logprob: -8.609959602355957

Token 754: ' or' (ID: 503)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.33303776383399963
    2. ',' → logprob: -2.958037853240967
    3. '       ' → logprob: -3.208037853240967
    4. ')' → logprob: -3.458037853240967
    5. '(' → logprob: -3.583037853240967
    6. '[
' → logprob: -3.583037853240967
    7. ':' → logprob: -3.708037853240967
    8. '   ' → logprob: -4.083037853240967
    9. '```' → logprob: -4.833037853240967
    10. '_' → logprob: -5.208037853240967

Token 755: ' Balanced' (ID: 199681)
  Prédit: ' segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.7347635626792908
    2. 'segment' → logprob: -1.2347636222839355
    3. 'Segment' → logprob: -1.4847636222839355
    4. ' Segment' → logprob: -5.9847636222839355
    5. '_segment' → logprob: -8.859763145446777
    6. 'BIT' → logprob: -8.859763145446777
    7. ' BIT' → logprob: -9.609763145446777
    8. '#' → logprob: -11.609763145446777
    9. 'seg' → logprob: -11.609763145446777
    10. 'import' → logprob: -12.359763145446777

Token 756: ' BST' (ID: 91820)
  Prédit: 'Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.07888559997081757
    2. 'tree' → logprob: -3.078885555267334
    3. ')' → logprob: -4.328885555267334
    4. ' tree' → logprob: -5.203885555267334
    5. 'Binary' → logprob: -5.703885555267334
    6. '_tree' → logprob: -6.078885555267334
    7. 'Fen' → logprob: -6.828885555267334
    8. ' Tree' → logprob: -6.953885555267334
    9. 'ree' → logprob: -7.203885555267334
    10. 'tre' → logprob: -7.953885555267334

Token 757: ' tracking' (ID: 20254)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8295188546180725
    2. '[' → logprob: -1.7045187950134277
    3. ':' → logprob: -2.3295187950134277
    4. '   ' → logprob: -2.4545187950134277
    5. ')' → logprob: -2.7045187950134277
    6. ',' → logprob: -3.4545187950134277
    7. '```' → logprob: -4.204518795013428
    8. ']' → logprob: -4.454518795013428
    9. ' =' → logprob: -4.954518795013428
    10. '[
' → logprob: -5.079518795013428

Token 758: ' counts' (ID: 28991)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5171659588813782
    2. ')' → logprob: -2.2671658992767334
    3. '_' → logprob: -2.8921658992767334
    4. 'the' → logprob: -3.2671658992767334
    5. ' the' → logprob: -3.6421658992767334
    6. '       ' → logprob: -4.0171661376953125
    7. 'friends' → logprob: -4.0171661376953125
    8. ' friends' → logprob: -4.1421661376953125
    9. '```' → logprob: -4.1421661376953125
    10. ' b' → logprob: -4.1421661376953125

Token 759: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0695284605026245
    2. '[' → logprob: -1.3195284605026245
    3. ')' → logprob: -2.319528579711914
    4. '   ' → logprob: -2.569528579711914
    5. ',' → logprob: -2.694528579711914
    6. '=' → logprob: -3.944528579711914
    7. '[
' → logprob: -3.944528579711914
    8. ' =' → logprob: -4.319528579711914
    9. ']' → logprob: -4.444528579711914
    10. ':' → logprob: -4.944528579711914

Token 760: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2262112945318222
    2. ' b' → logprob: -1.6012113094329834
    3. 'the' → logprob: -8.726211547851562
    4. ' the' → logprob: -8.851211547851562
    5. 'values' → logprob: -9.101211547851562
    6. '   ' → logprob: -9.601211547851562
    7. '```' → logprob: -9.976211547851562
    8. ' ' → logprob: -10.101211547851562
    9. ' all' → logprob: -10.226211547851562
    10. ' values' → logprob: -10.726211547851562

Token 761: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0005911595653742552
    2. '_' → logprob: -7.875591278076172
    3. ')' → logprob: -9.375591278076172
    4. ')_' → logprob: -10.625591278076172
    5. 'i' → logprob: -10.750591278076172
    6. '_it' → logprob: -11.250591278076172
    7. '[i' → logprob: -11.500591278076172
    8. '_t' → logprob: -11.750591278076172
    9. '[' → logprob: -12.250591278076172
    10. '\' → logprob: -12.375591278076172

Token 762: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2944139242172241
    2. '[' → logprob: -1.4194139242172241
    3. '       ' → logprob: -1.9194139242172241
    4. '   ' → logprob: -2.7944140434265137
    5. ',' → logprob: -2.9194140434265137
    6. '```' → logprob: -3.5444140434265137
    7. '[
' → logprob: -3.6694140434265137
    8. ']' → logprob: -3.6694140434265137
    9. ' =' → logprob: -4.169414043426514
    10. '<|end|>' → logprob: -4.169414043426514

Token 763: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1388971358537674
    2. '   ' → logprob: -3.263897180557251
    3. ',' → logprob: -4.013896942138672
    4. ':' → logprob: -4.513896942138672
    5. '[' → logprob: -4.638896942138672
    6. ')' → logprob: -4.763896942138672
    7. '.' → logprob: -5.138896942138672
    8. '(' → logprob: -5.263896942138672
    9. '(
' → logprob: -5.513896942138672
    10. '        
' → logprob: -5.638896942138672

Token 764: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00958478543907404
    2. 'def' → logprob: -6.009584903717041
    3. '   ' → logprob: -6.134584903717041
    4. ')' → logprob: -6.759584903717041
    5. '        
' → logprob: -7.009584903717041
    6. '           ' → logprob: -7.759584903717041
    7. '```' → logprob: -7.884584903717041
    8. ',' → logprob: -8.009584426879883
    9. '        ' → logprob: -8.759584426879883
    10. ' =' → logprob: -8.884584426879883

Token 765: ' However' (ID: 5551)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015569011680781841
    2. 'def' → logprob: -4.51556921005249
    3. '        
' → logprob: -7.01556921005249
    4. 'from' → logprob: -7.39056921005249
    5. 'import' → logprob: -7.51556921005249
    6. 'class' → logprob: -7.51556921005249
    7. '   ' → logprob: -7.51556921005249
    8. '           ' → logprob: -7.64056921005249
    9. '#' → logprob: -8.640568733215332
    10. '```' → logprob: -9.015568733215332

Token 766: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.074180245399475
    2. ':' → logprob: -1.574180245399475
    3. '_' → logprob: -2.4491801261901855
    4. '[
' → logprob: -2.8241801261901855
    5. '[' → logprob: -3.0741801261901855
    6. '       ' → logprob: -3.5741801261901855
    7. '#' → logprob: -3.5741801261901855
    8. ')' → logprob: -3.6991801261901855
    9. ' we' → logprob: -3.6991801261901855
    10. '.' → logprob: -3.9491801261901855

Token 767: ' even' (ID: 1952)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5882137417793274
    2. 'import' → logprob: -2.7132136821746826
    3. 'from' → logprob: -2.8382136821746826
    4. 'self' → logprob: -3.0882136821746826
    5. 'def' → logprob: -3.0882136821746826
    6. ' we' → logprob: -3.2132136821746826
    7. ' self' → logprob: -3.5882136821746826
    8. ' from' → logprob: -3.8382136821746826
    9. '```' → logprob: -3.9632136821746826
    10. ' fen' → logprob: -4.088213920593262

Token 768: ' simpler' (ID: 48697)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.388094425201416
    2. ' if' → logprob: -1.763094425201416
    3. 'if' → logprob: -2.388094425201416
    4. '#' → logprob: -2.513094425201416
    5. ')' → logprob: -2.638094425201416
    6. 'for' → logprob: -3.013094425201416
    7. ' though' → logprob: -3.638094425201416
    8. '``' → logprob: -3.888094425201416
    9. '       ' → logprob: -4.013094425201416
    10. 'Fen' → logprob: -4.138094425201416

Token 769: ' approach' (ID: 7139)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14369788765907288
    2. '       ' → logprob: -2.76869797706604
    3. ',' → logprob: -3.89369797706604
    4. ':
' → logprob: -4.143697738647461
    5. '#' → logprob: -5.268697738647461
    6. '):' → logprob: -5.268697738647461
    7. '   ' → logprob: -5.518697738647461
    8. 'def' → logprob: -5.893697738647461
    9. ')' → logprob: -5.893697738647461
    10. '```' → logprob: -6.393697738647461

Token 770: ':

' (ID: 1402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.035114943981170654
    2. '       ' → logprob: -4.160114765167236
    3. ':
' → logprob: -5.160114765167236
    4. ',' → logprob: -5.160114765167236
    5. '   ' → logprob: -6.285114765167236
    6. '):' → logprob: -6.660114765167236
    7. '
' → logprob: -7.035114765167236
    8. '=' → logprob: -7.410114765167236
    9. ')' → logprob: -8.035115242004395
    10. '```' → logprob: -8.035115242004395

Token 771: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007837798330001533
    2. '        
' → logprob: -7.875783920288086
    3. 'from' → logprob: -9.250783920288086
    4. '```' → logprob: -9.250783920288086
    5. '
' → logprob: -9.375783920288086
    6. 'import' → logprob: -9.625783920288086
    7. '#' → logprob: -10.500783920288086
    8. '   ' → logprob: -11.750783920288086
    9. '           ' → logprob: -12.000783920288086
    10. 'def' → logprob: -12.125783920288086

Token 772: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04972488805651665
    2. 'friends' → logprob: -3.674724817276001
    3. '#' → logprob: -4.92472505569458
    4. 'from' → logprob: -5.29972505569458
    5. 'import' → logprob: -5.54972505569458
    6. '```' → logprob: -6.29972505569458
    7. 'friend' → logprob: -6.67472505569458
    8. '   ' → logprob: -7.04972505569458
    9. 'def' → logprob: -7.17472505569458
    10. 'sorted' → logprob: -7.42472505569458

Token 773: '.f' (ID: 1196)
  Prédit: '.f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -0.0014136888785287738
    2. 'friends' → logprob: -7.626413822174072
    3. '.sorted' → logprob: -7.626413822174072
    4. '.' → logprob: -8.376413345336914
    5. '.friend' → logprob: -10.251413345336914
    6. '.max' → logprob: -10.376413345336914
    7. '.min' → logprob: -10.626413345336914
    8. '_sorted' → logprob: -10.876413345336914
    9. ' .' → logprob: -11.876413345336914
    10. '.tokens' → logprob: -12.001413345336914

Token 774: 'riends' (ID: 16678)
  Prédit: 'riends'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'riends' → logprob: -9.77022064034827e-05
    2. 'r' → logprob: -10.125097274780273
    3. 'friends' → logprob: -10.375097274780273
    4. 'ri' → logprob: -11.750097274780273
    5. 'riend' → logprob: -12.125097274780273
    6. '```' → logprob: -12.875097274780273
    7. '_' → logprob: -13.250097274780273
    8. '__' → logprob: -13.500097274780273
    9. '_f' → logprob: -13.625097274780273
    10. 'or' → logprob: -13.750097274780273

Token 775: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.011643752455711365
    2. '_sorted' → logprob: -4.511643886566162
    3. 'sorted' → logprob: -7.886643886566162
    4. 'sort' → logprob: -9.261643409729004
    5. ' =' → logprob: -9.761643409729004
    6. '.' → logprob: -11.011643409729004
    7. '.sorted' → logprob: -11.261643409729004
    8. ')' → logprob: -11.511643409729004
    9. '<|end|>' → logprob: -11.511643409729004
    10. '=' → logprob: -12.136643409729004

Token 776: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -8.816591434879228e-05
    2. 'key' → logprob: -9.62508773803711
    3. '()' → logprob: -11.62508773803711
    4. '(' → logprob: -12.25008773803711
    5. '(reverse' → logprob: -12.37508773803711
    6. '(
' → logprob: -12.75008773803711
    7. '(lambda' → logprob: -13.87508773803711
    8. '   ' → logprob: -16.00008773803711
    9. '	key' → logprob: -17.00008773803711
    10. 'reverse' → logprob: -17.12508773803711

Token 777: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.023448703810572624
    2. 'lambda' → logprob: -3.7734487056732178
    3. '(lambda' → logprob: -9.148448944091797
    4. '=' → logprob: -9.273448944091797
    5. ' lambda' → logprob: -13.023448944091797
    6. '_lambda' → logprob: -15.273448944091797
    7. 'attr' → logprob: -16.023448944091797
    8. '   ' → logprob: -16.398448944091797
    9. 'operator' → logprob: -16.523448944091797
    10. '```' → logprob: -17.148448944091797

Token 778: ' f' (ID: 285)
  Prédit: 'friend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'friend' → logprob: -0.023172909393906593
    2. 'f' → logprob: -4.273172855377197
    3. ' friend' → logprob: -4.898172855377197
    4. 'x' → logprob: -6.648172855377197
    5. ' f' → logprob: -8.898173332214355
    6. 'fr' → logprob: -10.148173332214355
    7. ' x' → logprob: -11.023173332214355
    8. '(friend' → logprob: -11.273173332214355
    9. 'self' → logprob: -12.898173332214355
    10. '	friend' → logprob: -13.648173332214355

Token 779: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0076411752961575985
    2. 'f' → logprob: -5.007641315460205
    3. ':f' → logprob: -7.757641315460205
    4. ' :' → logprob: -8.257640838623047
    5. ' f' → logprob: -9.257640838623047
    6. '.f' → logprob: -9.382640838623047
    7. '   ' → logprob: -10.882640838623047
    8. 'lambda' → logprob: -11.507640838623047
    9. 'friend' → logprob: -12.007640838623047
    10. '=lambda' → logprob: -12.507640838623047

Token 780: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.002567098941653967
    2. 'friend' → logprob: -6.002567291259766
    3. 'lambda' → logprob: -9.377567291259766
    4. ' f' → logprob: -12.127567291259766
    5. 'x' → logprob: -14.502567291259766
    6. 'friends' → logprob: -14.752567291259766
    7. ' friend' → logprob: -14.877567291259766
    8. ' lambda' → logprob: -15.877567291259766
    9. 'fr' → logprob: -17.502567291259766
    10. '   ' → logprob: -18.002567291259766

Token 781: '.constraint' (ID: 64839)
  Prédit: '.constraint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.constraint' → logprob: -0.0008492941851727664
    2. '.a' → logprob: -7.87584924697876
    3. '.f' → logprob: -8.750849723815918
    4. 'riend' → logprob: -9.125849723815918
    5. 'constraint' → logprob: -9.500849723815918
    6. '.const' → logprob: -10.000849723815918
    7. 'a' → logprob: -11.000849723815918
    8. '.' → logprob: -11.250849723815918
    9. '.friend' → logprob: -11.625849723815918
    10. '.range' → logprob: -12.000849723815918

Token 782: '.min' (ID: 8649)
  Prédit: '.min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.min' → logprob: -2.696889623621246e-06
    2. 'min' → logprob: -13.25000286102295
    3. '.max' → logprob: -14.37500286102295
    4. '.' → logprob: -17.000001907348633
    5. '.range' → logprob: -17.125001907348633
    6. ':min' → logprob: -17.250001907348633
    7. '.is' → logprob: -17.500001907348633
    8. '.Min' → logprob: -17.750001907348633
    9. ' .' → logprob: -18.375001907348633
    10. '.a' → logprob: -18.500001907348633

Token 783: '_people' (ID: 157787)
  Prédit: '_people'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_people' → logprob: -1.0280383548888494e-06
    2. '_person' → logprob: -13.875000953674316
    3. '_' → logprob: -17.375001907348633
    4. '_pe' → logprob: -18.250001907348633
    5. '_players' → logprob: -18.625001907348633
    6. '\' → logprob: -20.000001907348633
    7. '_students' → logprob: -20.000001907348633
    8. 'People' → logprob: -20.125001907348633
    9. 'people' → logprob: -20.250001907348633
    10. ' _' → logprob: -20.250001907348633

Token 784: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006988984532654285
    2. '.min' → logprob: -5.381989002227783
    3. '.value' → logprob: -7.381989002227783
    4. ')
' → logprob: -7.631989002227783
    5. '.__' → logprob: -8.506988525390625
    6. ' )' → logprob: -8.631988525390625
    7. '.key' → logprob: -9.006988525390625
    8. '._' → logprob: -9.131988525390625
    9. '.val' → logprob: -9.506988525390625
    10. ',' → logprob: -9.631988525390625

Token 785: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005616958253085613
    2. 'b' → logprob: -5.755617141723633
    3. '```' → logprob: -7.130617141723633
    4. ',' → logprob: -7.630617141723633
    5. '        
' → logprob: -7.880617141723633
    6. ' b' → logprob: -7.880617141723633
    7. 'self' → logprob: -9.005617141723633
    8. '   ' → logprob: -10.380617141723633
    9. 'n' → logprob: -10.630617141723633
    10. '
' → logprob: -11.130617141723633

Token 786: ' a' (ID: 261)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.35853737592697144
    2. '       ' → logprob: -1.3585374355316162
    3. 'from' → logprob: -3.983537435531616
    4. 'max' → logprob: -4.108537197113037
    5. 'import' → logprob: -5.858537197113037
    6. '#' → logprob: -6.108537197113037
    7. 'n' → logprob: -6.233537197113037
    8. 'fen' → logprob: -8.108537673950195
    9. ' b' → logprob: -8.233537673950195
    10. 'a' (adapté à ' a') → logprob: -8.233537673950195

Token 787: '_list' (ID: 4162)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.023916833102703094
    2. '_values' → logprob: -4.648916721343994
    3. 'rray' → logprob: -5.148916721343994
    4. 'i' → logprob: -5.523916721343994
    5. 's' → logprob: -7.148916721343994
    6. 'rr' → logprob: -7.273916721343994
    7. '_indices' → logprob: -8.023917198181152
    8. '_vals' → logprob: -8.023917198181152
    9. '_index' → logprob: -8.273917198181152
    10. '_idx' → logprob: -8.648917198181152

Token 788: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760655403137207
    2. '=' → logprob: -0.8260655403137207
    3. '=[]' → logprob: -9.326065063476562
    4. ',' → logprob: -10.701065063476562
    5. '=[' → logprob: -11.576065063476562
    6. '       ' → logprob: -13.701065063476562
    7. ')' → logprob: -13.826065063476562
    8. 's' → logprob: -14.451065063476562
    9. ' =[' → logprob: -14.826065063476562
    10. '=[]
' → logprob: -14.951065063476562

Token 789: ' [' (ID: 723)
  Prédit: '[f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -0.0006452414090745151
    2. '[self' → logprob: -7.750645160675049
    3. '[' → logprob: -8.500645637512207
    4. ' [' → logprob: -11.750645637512207
    5. '[i' → logprob: -13.750645637512207
    6. '[list' → logprob: -13.750645637512207
    7. '[int' → logprob: -15.625645637512207
    8. '[obj' → logprob: -15.875645637512207
    9. '[item' → logprob: -16.12564468383789
    10. '[s' → logprob: -16.25064468383789

Token 790: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.2519339919090271
    2. 'friend' → logprob: -1.5019340515136719
    3. ' friend' → logprob: -12.751934051513672
    4. 'fr' → logprob: -14.376934051513672
    5. 'friends' → logprob: -14.751934051513672
    6. ' f' → logprob: -15.126934051513672
    7. '(friend' → logprob: -15.501934051513672
    8. 'self' → logprob: -15.751934051513672
    9. 'Friend' → logprob: -15.751934051513672
    10. '	friend' → logprob: -16.876934051513672

Token 791: '.constraint' (ID: 64839)
  Prédit: '.constraint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.constraint' → logprob: -0.00021307668066583574
    2. 'constraint' → logprob: -9.250212669372559
    3. '.' → logprob: -9.375212669372559
    4. '.f' → logprob: -10.875212669372559
    5. '.lambda' → logprob: -11.875212669372559
    6. '.friend' → logprob: -13.625212669372559
    7. ' .' → logprob: -14.000212669372559
    8. '.con' → logprob: -14.000212669372559
    9. 'f' → logprob: -14.250212669372559
    10. 'riend' → logprob: -14.375212669372559

Token 792: '.min' (ID: 8649)
  Prédit: '.min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.min' → logprob: -2.8206473871250637e-05
    2. 'min' → logprob: -10.500028610229492
    3. '.max' → logprob: -14.375028610229492
    4. '	min' → logprob: -18.750028610229492
    5. '   ' → logprob: -19.000028610229492
    6. '_min' → logprob: -19.500028610229492
    7. ' min' → logprob: -19.875028610229492
    8. ' .' → logprob: -19.875028610229492
    9. '.m' → logprob: -20.250028610229492
    10. '.' → logprob: -20.375028610229492

Token 793: '_people' (ID: 157787)
  Prédit: '_people'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_people' → logprob: -4.320199877838604e-07
    2. '_person' → logprob: -15.375
    3. '```' → logprob: -16.5
    4. '\' → logprob: -17.25
    5. 'people' → logprob: -17.625
    6. '_players' → logprob: -18.5
    7. '_users' → logprob: -18.625
    8. '_' → logprob: -19.0
    9. '_places' → logprob: -19.0
    10. '_students' → logprob: -19.125

Token 794: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04863017052412033
    2. 'for' → logprob: -3.0486302375793457
    3. ')' → logprob: -10.923629760742188
    4. '       ' → logprob: -11.798629760742188
    5. '	for' → logprob: -12.298629760742188
    6. ']' → logprob: -12.298629760742188
    7. '   ' → logprob: -12.548629760742188
    8. ' ' → logprob: -13.173629760742188
    9. '           ' → logprob: -14.548629760742188
    10. '        ' → logprob: -14.673629760742188

Token 795: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00048381939996033907
    2. 'self' → logprob: -7.875483989715576
    3. ' f' → logprob: -9.250483512878418
    4. 'friend' → logprob: -12.375483512878418
    5. ' self' → logprob: -13.750483512878418
    6. '	f' → logprob: -14.250483512878418
    7. '_f' → logprob: -14.625483512878418
    8. '
' → logprob: -14.750483512878418
    9. '   ' → logprob: -15.375483512878418
    10. '=f' → logprob: -16.250484466552734

Token 796: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.44687139987945557
    2. 'in' → logprob: -1.4468713998794556
    3. 'f' → logprob: -2.196871280670166
    4. 'self' → logprob: -5.071871280670166
    5. '.f' → logprob: -5.446871280670166
    6. 'riend' → logprob: -6.571871280670166
    7. '.friend' → logprob: -7.196871280670166
    8. ' f' → logprob: -7.696871280670166
    9. 'friend' → logprob: -7.696871280670166
    10. 'riends' → logprob: -9.946871757507324

Token 797: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.749814019713085e-06
    2. ' self' → logprob: -12.000006675720215
    3. 'f' → logprob: -15.125006675720215
    4. '
' → logprob: -17.12500762939453
    5. '   ' → logprob: -17.25000762939453
    6. 'elf' → logprob: -17.25000762939453
    7. 'friend' → logprob: -18.12500762939453
    8. 'range' → logprob: -18.25000762939453
    9. '(self' → logprob: -18.37500762939453
    10. '	self' → logprob: -18.50000762939453

Token 798: '.f' (ID: 1196)
  Prédit: 'friends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'friends' → logprob: -0.5147894620895386
    2. '.f' → logprob: -1.0147894620895386
    3. 'riends' → logprob: -3.264789581298828
    4. 'f' → logprob: -6.514789581298828
    5. 'friend' → logprob: -10.264789581298828
    6. 'r' → logprob: -10.514789581298828
    7. ' friends' → logprob: -10.889789581298828
    8. 'riend' → logprob: -11.014789581298828
    9. '	f' → logprob: -11.139789581298828
    10. 'fr' → logprob: -11.389789581298828

Token 799: 'riends' (ID: 16678)
  Prédit: 'riends'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'riends' → logprob: -0.0012458281125873327
    2. 'friends' → logprob: -6.751245975494385
    3. 'ends' → logprob: -10.501245498657227
    4. 'r' → logprob: -10.626245498657227
    5. 'ri' → logprob: -11.751245498657227
    6. 're' → logprob: -11.876245498657227
    7. 'riend' → logprob: -12.376245498657227
    8. 'i' → logprob: -13.501245498657227
    9. 'ir' → logprob: -14.251245498657227
    10. 'RIEND' → logprob: -14.751245498657227

Token 800: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07913322746753693
    2. ']
' → logprob: -2.5791332721710205
    3. ' ]' → logprob: -8.954133033752441
    4. '       ' → logprob: -9.454133033752441
    5. ']
' → logprob: -10.954133033752441
    6. ' ]
' → logprob: -11.204133033752441
    7. ']

' → logprob: -12.579133033752441
    8. '   ' → logprob: -14.829133033752441
    9. 'b' → logprob: -15.579133033752441
    10. ')' → logprob: -16.204133987426758

Token 801: '       ' (ID: 309)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.44627469778060913
    2. '       ' → logprob: -1.071274757385254
    3. ' b' → logprob: -4.071274757385254
    4. '   ' → logprob: -8.696274757385254
    5. '	b' → logprob: -9.321274757385254
    6. '```' → logprob: -10.196274757385254
    7. ' ' → logprob: -11.071274757385254
    8. ',' → logprob: -11.446274757385254
    9. '	' → logprob: -11.946274757385254
    10. 'n' → logprob: -12.321274757385254

Token 802: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.0026535361539572477
    2. '       ' → logprob: -6.2526535987854
    3. 'from' → logprob: -8.002653121948242
    4. 'import' → logprob: -8.377653121948242
    5. 'max' → logprob: -9.752653121948242
    6. '   ' → logprob: -10.002653121948242
    7. ' b' → logprob: -10.377653121948242
    8. 'self' → logprob: -11.502653121948242
    9. '```' → logprob: -13.127653121948242
    10. 'n' → logprob: -13.252653121948242

Token 803: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -7.3458322731312364e-06
    2. '_' → logprob: -12.125007629394531
    3. ' =' → logprob: -14.500007629394531
    4. '_array' → logprob: -15.125007629394531
    5. '_lst' → logprob: -15.250007629394531
    6. 'list' → logprob: -15.625007629394531
    7. '=_' → logprob: -15.875007629394531
    8. '_LIST' → logprob: -16.25000762939453
    9. '_i' → logprob: -16.62500762939453
    10. ' _' → logprob: -16.75000762939453

Token 804: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141363143920898
    2. ' =' → logprob: -1.701413631439209
    3. '=[' → logprob: -15.701414108276367
    4. '[' → logprob: -16.826414108276367
    5. ' =[' → logprob: -17.451414108276367
    6. '   ' → logprob: -17.576414108276367
    7. '＝' → logprob: -18.201414108276367
    8. '=[]' → logprob: -19.076414108276367
    9. '=
' → logprob: -19.576414108276367
    10. ')' → logprob: -19.826414108276367

Token 805: ' [' (ID: 723)
  Prédit: '[f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -0.38697361946105957
    2. ' [' → logprob: -1.1369736194610596
    3. 'sorted' → logprob: -9.51197338104248
    4. '[' → logprob: -11.13697338104248
    5. ' sorted' → logprob: -11.63697338104248
    6. '   ' → logprob: -12.63697338104248
    7. '[self' → logprob: -13.76197338104248
    8. '[b' → logprob: -14.88697338104248
    9. ' ' → logprob: -15.51197338104248
    10. '  ' → logprob: -16.636974334716797

Token 806: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -6.392202976712724e-06
    2. ' f' → logprob: -12.125006675720215
    3. 'friend' → logprob: -14.375006675720215
    4. '   ' → logprob: -15.750006675720215
    5. '(f' → logprob: -16.3750057220459
    6. 'int' → logprob: -17.6250057220459
    7. 'friends' → logprob: -17.6250057220459
    8. '	f' → logprob: -17.7500057220459
    9. '       ' → logprob: -18.0000057220459
    10. '[f' → logprob: -18.2500057220459

Token 807: '.constraint' (ID: 64839)
  Prédit: '.constraint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.constraint' → logprob: -2.7491250875755213e-05
    2. '.' → logprob: -11.375027656555176
    3. 'constraint' → logprob: -12.500027656555176
    4. '.constant' → logprob: -12.625027656555176
    5. '.const' → logprob: -13.000027656555176
    6. '.f' → logprob: -13.000027656555176
    7. ' .' → logprob: -13.125027656555176
    8. '.friend' → logprob: -13.750027656555176
    9. '.con' → logprob: -15.125027656555176
    10. '.condition' → logprob: -15.875027656555176

Token 808: '.max' (ID: 11883)
  Prédit: '.max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.max' → logprob: -0.32497748732566833
    2. '.constraint' → logprob: -1.3249775171279907
    3. '.min' → logprob: -4.574977397918701
    4. 'max' → logprob: -7.199977397918701
    5. '.const' → logprob: -8.44997787475586
    6. '.b' → logprob: -8.57497787475586
    7. '_max' → logprob: -9.94997787475586
    8. 'constraint' → logprob: -10.07497787475586
    9. '.range' → logprob: -11.07497787475586
    10. 's' → logprob: -11.07497787475586

Token 809: '_people' (ID: 157787)
  Prédit: '_people'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_people' → logprob: -4.961759259458631e-06
    2. '_person' → logprob: -12.875004768371582
    3. 'People' → logprob: -13.750004768371582
    4. '```' → logprob: -14.250004768371582
    5. '_' → logprob: -15.625004768371582
    6. '_places' → logprob: -16.7500057220459
    7. '\' → logprob: -16.8750057220459
    8. ' _' → logprob: -16.8750057220459
    9. ')' → logprob: -17.3750057220459
    10. '_questions' → logprob: -17.7500057220459

Token 810: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.18006068468093872
    2. 'for' → logprob: -1.805060625076294
    3. '       ' → logprob: -8.430060386657715
    4. '           ' → logprob: -10.180060386657715
    5. ')' → logprob: -11.055060386657715
    6. '        ' → logprob: -11.430060386657715
    7. '	for' → logprob: -11.555060386657715
    8. ']' → logprob: -12.055060386657715
    9. '   ' → logprob: -12.555060386657715
    10. '               ' → logprob: -12.805060386657715

Token 811: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.282920129597187e-05
    2. ' f' → logprob: -11.625012397766113
    3. 'friend' → logprob: -12.875012397766113
    4. 'self' → logprob: -13.875012397766113
    5. '(f' → logprob: -16.00001335144043
    6. '	f' → logprob: -16.50001335144043
    7. '   ' → logprob: -17.25001335144043
    8. ' friend' → logprob: -18.00001335144043
    9. '[f' → logprob: -18.25001335144043
    10. '
' → logprob: -18.25001335144043

Token 812: ' in' (ID: 306)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.02363722212612629
    2. ' in' → logprob: -4.023637294769287
    3. ' f' → logprob: -5.773637294769287
    4. 'in' → logprob: -6.148637294769287
    5. 'friend' → logprob: -9.273636817932129
    6. 'self' → logprob: -9.773636817932129
    7. '_f' → logprob: -10.648636817932129
    8. ' friend' → logprob: -10.773636817932129
    9. '_' → logprob: -11.898636817932129
    10. '.f' → logprob: -12.648636817932129

Token 813: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.143808109802194e-05
    2. ' self' → logprob: -10.250041007995605
    3. 'f' → logprob: -12.375041007995605
    4. '(self' → logprob: -14.875041007995605
    5. 'friend' → logprob: -15.000041007995605
    6. '
' → logprob: -15.250041007995605
    7. '[self' → logprob: -15.250041007995605
    8. '   ' → logprob: -15.500041007995605
    9. '=self' → logprob: -16.375041961669922
    10. '	self' → logprob: -16.750041961669922

Token 814: '.f' (ID: 1196)
  Prédit: '.f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -0.0037560209166258574
    2. 'friends' → logprob: -5.878756046295166
    3. 'riends' → logprob: -7.128756046295166
    4. 'self' → logprob: -10.628755569458008
    5. 'f' → logprob: -11.003755569458008
    6. 's' → logprob: -11.253755569458008
    7. '.friend' → logprob: -11.253755569458008
    8. 'friend' → logprob: -11.378755569458008
    9. '].' → logprob: -12.128755569458008
    10. 'riend' → logprob: -12.253755569458008

Token 815: 'riends' (ID: 16678)
  Prédit: 'riends'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'riends' → logprob: -0.00015598179015796632
    2. 'friends' → logprob: -9.00015640258789
    3. 'r' → logprob: -11.37515640258789
    4. 'ri' → logprob: -11.75015640258789
    5. 'riend' → logprob: -12.25015640258789
    6. 'ends' → logprob: -12.50015640258789
    7. 'i' → logprob: -12.87515640258789
    8. 're' → logprob: -13.75015640258789
    9. 'e' → logprob: -16.00015640258789
    10. 'a' → logprob: -16.00015640258789

Token 816: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009230977855622768
    2. '       ' → logprob: -4.759231090545654
    3. ']
' → logprob: -7.509231090545654
    4. ' ]' → logprob: -10.259230613708496
    5. ']
' → logprob: -11.009230613708496
    6. ']

' → logprob: -12.259230613708496
    7. ']

' → logprob: -13.259230613708496
    8. ')' → logprob: -13.259230613708496
    9. '   ' → logprob: -13.509230613708496
    10. '()]' → logprob: -13.509230613708496

Token 817: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02630738541483879
    2. 'from' → logprob: -4.026307582855225
    3. 'for' → logprob: -5.276307582855225
    4. 'import' → logprob: -6.151307582855225
    5. '```' → logprob: -7.776307582855225
    6. 'n' → logprob: -9.401307106018066
    7. '        
' → logprob: -9.651307106018066
    8. '
' → logprob: -10.276307106018066
    9. 'fen' → logprob: -10.401307106018066
    10. ' for' → logprob: -10.526307106018066

Token 818: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.48223528265953064
    2. 'fen' → logprob: -1.857235312461853
    3. 'import' → logprob: -2.7322351932525635
    4. '       ' → logprob: -2.9822351932525635
    5. 'max' → logprob: -3.1072351932525635
    6. 'def' → logprob: -3.6072351932525635
    7. 'N' → logprob: -4.482235431671143
    8. 'for' → logprob: -4.857235431671143
    9. 'left' → logprob: -5.482235431671143
    10. 'n' → logprob: -5.732235431671143

Token 819: ' We'll' (ID: 46830)
  Prédit: 'fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fen' → logprob: -0.3182119131088257
    2. 'from' → logprob: -1.5682119131088257
    3. 'bit' → logprob: -3.9432120323181152
    4. '       ' → logprob: -4.318212032318115
    5. 'max' → logprob: -4.318212032318115
    6. 'import' → logprob: -5.568212032318115
    7. 'size' → logprob: -5.818212032318115
    8. 'ft' → logprob: -5.943212032318115
    9. 'for' → logprob: -6.318212032318115
    10. 'def' → logprob: -6.568212032318115

Token 820: ' do' (ID: 621)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.990837037563324
    2. 'use' → logprob: -1.4908370971679688
    3. 'import' → logprob: -1.9908370971679688
    4. 'initialize' → logprob: -2.3658370971679688
    5. 'from' → logprob: -2.6158370971679688
    6. 'def' → logprob: -4.115837097167969
    7. 'implement' → logprob: -4.115837097167969
    8. 'define' → logprob: -4.615837097167969
    9. 'continue' → logprob: -4.740837097167969
    10. 'perform' → logprob: -4.740837097167969

Token 821: ' a' (ID: 261)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7298386096954346
    2. 'import' → logprob: -1.8548386096954346
    3. 'for' → logprob: -2.7298386096954346
    4. '       ' → logprob: -2.9798386096954346
    5. 'def' → logprob: -2.9798386096954346
    6. '```' → logprob: -3.3548386096954346
    7. 'binary' → logprob: -3.3548386096954346
    8. ' for' → logprob: -3.4798386096954346
    9. ' from' → logprob: -4.1048383712768555
    10. 'self' → logprob: -4.3548383712768555

Token 822: ' binary' (ID: 15600)
  Prédit: 'binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binary' → logprob: -0.47042322158813477
    2. 'def' → logprob: -1.9704232215881348
    3. 'for' → logprob: -2.2204232215881348
    4. 'left' → logprob: -3.0954232215881348
    5. ' binary' → logprob: -3.3454232215881348
    6. ' for' → logprob: -3.8454232215881348
    7. '_binary' → logprob: -4.970423221588135
    8. 'bs' → logprob: -5.095423221588135
    9. 'low' → logprob: -5.845423221588135
    10. 'l' → logprob: -6.720423221588135

Token 823: ' search' (ID: 3684)
  Prédit: ' search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' search' → logprob: -0.38965001702308655
    2. 'search' → logprob: -1.1396499872207642
    3. '_search' → logprob: -5.889649868011475
    4. '       ' → logprob: -13.014650344848633
    5. '```' → logprob: -13.139650344848633
    6. '-search' → logprob: -13.889650344848633
    7. '   ' → logprob: -14.139650344848633
    8. '
' → logprob: -14.389650344848633
    9. '_' → logprob: -15.264650344848633
    10. 'Search' → logprob: -16.014650344848633

Token 824: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07849278301000595
    2. '(low' → logprob: -3.0784928798675537
    3. ' for' → logprob: -4.953492641448975
    4. ':' → logprob: -5.203492641448975
    5. ',' → logprob: -5.578492641448975
    6. '
' → logprob: -6.203492641448975
    7. '(' → logprob: -6.328492641448975
    8. '        
' → logprob: -6.953492641448975
    9. 'for' → logprob: -6.953492641448975
    10. 'def' → logprob: -7.328492641448975

Token 825: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.9435006976127625
    2. 'range' → logprob: -1.4435007572174072
    3. 'N' → logprob: -1.6935007572174072
    4. 'low' → logprob: -2.5685007572174072
    5. ' N' → logprob: -3.9435007572174072
    6. 'self' → logprob: -4.068500518798828
    7. '       ' → logprob: -4.193500518798828
    8. ' range' → logprob: -4.193500518798828
    9. ' k' → logprob: -4.193500518798828
    10. 'possible' → logprob: -4.818500518798828

Token 826: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13895824551582336
    2. ':' → logprob: -2.638958215713501
    3. ' =' → logprob: -3.888958215713501
    4. ' for' → logprob: -4.26395845413208
    5. ',' → logprob: -5.01395845413208
    6. 'for' → logprob: -5.63895845413208
    7. '
' → logprob: -5.88895845413208
    8. 'def' → logprob: -6.26395845413208
    9. '=' → logprob: -6.38895845413208
    10. ' in' → logprob: -6.88895845413208

Token 827: ' number' (ID: 2086)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.023405609652400017
    2. ' N' → logprob: -3.7734055519104004
    3. 'len' → logprob: -8.773406028747559
    4. ' len' → logprob: -13.023406028747559
    5. '
' → logprob: -13.898406028747559
    6. '	N' → logprob: -14.273406028747559
    7. '0' → logprob: -14.648406028747559
    8. '[N' → logprob: -14.898406028747559
    9. '   ' → logprob: -15.273406028747559
    10. 'self' → logprob: -15.523406028747559

Token 828: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9377451539039612
    2. 'of' → logprob: -1.4377450942993164
    3. '       ' → logprob: -2.0627450942993164
    4. 's' → logprob: -2.5627450942993164
    5. ' =' → logprob: -3.5627450942993164
    6. '_candidates' → logprob: -3.8127450942993164
    7. 'for' → logprob: -3.9377450942993164
    8. '_of' → logprob: -4.062745094299316
    9. 'self' → logprob: -4.312745094299316
    10. '
' → logprob: -4.687745094299316

Token 829: ' friends' (ID: 5664)
  Prédit: 'friends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'friends' → logprob: -0.0350080206990242
    2. ' friends' → logprob: -3.535007953643799
    3. 'self' → logprob: -5.410007953643799
    4. ' self' → logprob: -8.285008430480957
    5. '   ' → logprob: -8.410008430480957
    6. '       ' → logprob: -9.410008430480957
    7. 'friend' → logprob: -9.785008430480957
    8. 'inv' → logprob: -9.910008430480957
    9. ' invited' → logprob: -10.535008430480957
    10. '```' → logprob: -11.410008430480957

Token 830: ' invited' (ID: 26243)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01894332841038704
    2. ',' → logprob: -4.6439433097839355
    3. ' =' → logprob: -6.0189433097839355
    4. ':' → logprob: -6.0189433097839355
    5. ' for' → logprob: -6.7689433097839355
    6. 'def' → logprob: -7.5189433097839355
    7. '   ' → logprob: -7.8939433097839355
    8. ')' → logprob: -8.143943786621094
    9. '        
' → logprob: -8.143943786621094
    10. ' in' → logprob: -8.268943786621094

Token 831: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08959253132343292
    2. '(low' → logprob: -3.339592456817627
    3. '
' → logprob: -3.839592456817627
    4. 'def' → logprob: -4.714592456817627
    5. ',' → logprob: -5.089592456817627
    6. 'import' → logprob: -5.589592456817627
    7. ' =' → logprob: -6.339592456817627
    8. ':' → logprob: -6.589592456817627
    9. '   ' → logprob: -6.839592456817627
    10. '        
' → logprob: -7.214592456817627

Token 832: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0373440757393837
    2. ':' → logprob: -4.787343978881836
    3. '
' → logprob: -5.037343978881836
    4. ',' → logprob: -5.037343978881836
    5. ' =' → logprob: -5.412343978881836
    6. ':
' → logprob: -5.662343978881836
    7. ' for' → logprob: -6.037343978881836
    8. '        
' → logprob: -6.662343978881836
    9. '```' → logprob: -7.537343978881836
    10. 'for' → logprob: -7.662343978881836

Token 833: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07311099767684937
    2. '
' → logprob: -3.073111057281494
    3. 'def' → logprob: -4.823111057281494
    4. '```' → logprob: -5.073111057281494
    5. ',' → logprob: -5.448111057281494
    6. '        
' → logprob: -5.948111057281494
    7. 'import' → logprob: -7.573111057281494
    8. ',
' → logprob: -7.698111057281494
    9. '(low' → logprob: -7.698111057281494
    10. 'low' → logprob: -8.198110580444336

Token 834: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21166613698005676
    2. '
' → logprob: -2.0866661071777344
    3. 'def' → logprob: -3.3366661071777344
    4. 'low' → logprob: -4.586666107177734
    5. '```' → logprob: -4.961666107177734
    6. 'import' → logprob: -5.211666107177734
    7. 'left' → logprob: -5.586666107177734
    8. ' low' → logprob: -6.711666107177734
    9. ' left' → logprob: -7.211666107177734
    10. '        
' → logprob: -7.336666107177734

Token 835: ' each' (ID: 2454)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.16330112516880035
    2. 'low' → logprob: -2.5383012294769287
    3. 'left' → logprob: -3.0383012294769287
    4. 'lo' → logprob: -4.41330099105835
    5. ' k' → logprob: -5.28830099105835
    6. 'def' → logprob: -5.78830099105835
    7. 'l' → logprob: -6.91330099105835
    8. ' left' → logprob: -7.16330099105835
    9. '_left' → logprob: -7.41330099105835
    10. ' low' → logprob: -8.038301467895508

Token 836: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6393924951553345
    2. ' k' → logprob: -0.8893924951553345
    3. ' mid' → logprob: -3.889392375946045
    4. 'mid' → logprob: -4.014392375946045
    5. 'def' → logprob: -4.514392375946045
    6. ' def' → logprob: -5.764392375946045
    7. 'candidate' → logprob: -6.139392375946045
    8. ' candidate' → logprob: -6.889392375946045
    9. ' possible' → logprob: -7.139392375946045
    10. ' iteration' → logprob: -7.389392375946045

Token 837: ' we' (ID: 581)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00869304221123457
    2. 'in' → logprob: -5.008693218231201
    3. '       ' → logprob: -6.883693218231201
    4. ':' → logprob: -7.633693218231201
    5. '   ' → logprob: -9.008692741394043
    6. ',' → logprob: -9.758692741394043
    7. '        ' → logprob: -9.883692741394043
    8. 'import' → logprob: -10.133692741394043
    9. ' ' → logprob: -10.633692741394043
    10. ')' → logprob: -10.758692741394043

Token 838: ' check' (ID: 2371)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.299952507019043
    2. '       ' → logprob: -1.299952507019043
    3. 'def' → logprob: -1.799952507019043
    4. ' will' → logprob: -2.549952507019043
    5. '   ' → logprob: -3.174952507019043
    6. '=' → logprob: -3.549952507019043
    7. ')' → logprob: -3.924952507019043
    8. 'import' → logprob: -3.924952507019043
    9. ' =' → logprob: -3.924952507019043
    10. 'will' → logprob: -4.174952507019043

Token 839: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04064888879656792
    2. 'def' → logprob: -4.290648937225342
    3. ':' → logprob: -4.790648937225342
    4. '```' → logprob: -5.665648937225342
    5. ',' → logprob: -5.790648937225342
    6. ' for' → logprob: -5.915648937225342
    7. ' def' → logprob: -6.040648937225342
    8. '   ' → logprob: -6.790648937225342
    9. ' in' → logprob: -7.040648937225342
    10. 'import' → logprob: -7.040648937225342

Token 840: ' possible' (ID: 4149)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5790799856185913
    2. 'there' → logprob: -1.7040799856185913
    3. 'self' → logprob: -2.204080104827881
    4. 'any' → logprob: -3.329080104827881
    5. ' there' → logprob: -3.829080104827881
    6. ' self' → logprob: -4.204080104827881
    7. ' k' → logprob: -4.329080104827881
    8. 'def' → logprob: -4.329080104827881
    9. '1' → logprob: -4.829080104827881
    10. 'True' → logprob: -5.079080104827881

Token 841: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31343650817871094
    2. '
' → logprob: -1.688436508178711
    3. ':' → logprob: -3.188436508178711
    4. '```' → logprob: -4.188436508178711
    5. 'def' → logprob: -4.688436508178711
    6. ',' → logprob: -4.813436508178711
    7. '        
' → logprob: -5.438436508178711
    8. ':
' → logprob: -6.188436508178711
    9. '   ' → logprob: -6.313436508178711
    10. ' =' → logprob: -7.438436508178711

Token 842: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19761763513088226
    2. '
' → logprob: -2.072617530822754
    3. '```' → logprob: -3.447617530822754
    4. 'def' → logprob: -4.447617530822754
    5. '        
' → logprob: -5.322617530822754
    6. ',' → logprob: -6.447617530822754
    7. '   ' → logprob: -6.822617530822754
    8. ' def' → logprob: -6.947617530822754
    9. 'import' → logprob: -7.447617530822754
    10. ' for' → logprob: -8.697617530822754

Token 843: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05202833563089371
    2. '```' → logprob: -4.177028179168701
    3. 'left' → logprob: -4.552028179168701
    4. 'low' → logprob: -4.802028179168701
    5. 'def' (adapté à ' def') → logprob: -5.052028179168701
    6. 'import' → logprob: -5.302028179168701
    7. '
' → logprob: -6.302028179168701
    8. ' left' → logprob: -6.552028179168701
    9. ' low' → logprob: -7.427028179168701
    10. '        
' → logprob: -7.927028179168701

Token 844: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.7222496271133423
    2. 'can' → logprob: -1.0972496271133423
    3. ' possible' → logprob: -2.4722495079040527
    4. 'possible' → logprob: -2.5972495079040527
    5. ' is' → logprob: -4.597249507904053
    6. 'is' → logprob: -5.472249507904053
    7. ' check' → logprob: -5.722249507904053
    8. ' feasible' → logprob: -6.097249507904053
    9. 'check' → logprob: -6.597249507904053
    10. ' valid' → logprob: -8.847249984741211

Token 845: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.03456244245171547
    2. '_accept' → logprob: -3.534562349319458
    3. '_choose' → logprob: -6.284562587738037
    4. '_be' → logprob: -6.909562587738037
    5. '_' → logprob: -7.034562587738037
    6. '_find' → logprob: -7.784562587738037
    7. '_in' → logprob: -9.034562110900879
    8. '_continue' → logprob: -9.659562110900879
    9. '_att' → logprob: -9.784562110900879
    10. '_take' → logprob: -10.034562110900879

Token 846: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -5.097437315271236e-05
    2. '```' → logprob: -10.87505054473877
    3. '
' → logprob: -11.37505054473877
    4. '_' → logprob: -12.62505054473877
    5. 'te' → logprob: -12.75005054473877
    6. '__' → logprob: -13.00005054473877
    7. ' ite' → logprob: -13.37505054473877
    8. 'ate' → logprob: -13.50005054473877
    9. '   ' → logprob: -13.62505054473877
    10. 'oke' → logprob: -13.75005054473877

Token 847: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -8.625866030342877e-05
    2. ' (' → logprob: -10.000085830688477
    3. '(self' → logprob: -10.250085830688477
    4. 'self' → logprob: -13.125085830688477
    5. '(' → logprob: -14.000085830688477
    6. '(max' → logprob: -14.250085830688477
    7. '   ' → logprob: -14.500085830688477
    8. 'k' → logprob: -14.750085830688477
    9. '```' → logprob: -15.625085830688477
    10. '       ' → logprob: -15.625085830688477

Token 848: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1860203593969345
    2. ')' → logprob: -2.0610203742980957
    3. ':' → logprob: -3.9360203742980957
    4. '):
' → logprob: -4.311020374298096
    5. ',' → logprob: -4.686020374298096
    6. '   ' → logprob: -9.186019897460938
    7. '       ' → logprob: -9.561019897460938
    8. '):

' → logprob: -10.936019897460938
    9. '):
' → logprob: -11.186019897460938
    10. '(total' → logprob: -11.311019897460938

Token 849: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00022237090161070228
    2. ')' → logprob: -9.125222206115723
    3. ' int' → logprob: -9.625222206115723
    4. 'self' → logprob: -10.875222206115723
    5. '[int' → logprob: -11.250222206115723
    6. '(int' → logprob: -12.500222206115723
    7. 'k' → logprob: -12.875222206115723
    8. '   ' → logprob: -13.125222206115723
    9. '
' → logprob: -13.500222206115723
    10. '       ' → logprob: -13.625222206115723

Token 850: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006641837535426021
    2. '):' → logprob: -7.375664234161377
    3. '):
' → logprob: -10.375663757324219
    4. '   ' → logprob: -13.000663757324219
    5. ' )' → logprob: -13.250663757324219
    6. ')->' → logprob: -13.625663757324219
    7. '):
' → logprob: -14.250663757324219
    8. ':' → logprob: -15.250663757324219
    9. '       ' → logprob: -15.875663757324219
    10. '):

' → logprob: -16.75066375732422

Token 851: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01466816384345293
    2. '):' → logprob: -5.264667987823486
    3. '       ' → logprob: -5.389667987823486
    4. ':
' → logprob: -6.014667987823486
    5. '(self' → logprob: -7.639667987823486
    6. ')' → logprob: -8.014668464660645
    7. '():' → logprob: -8.264668464660645
    8. '):
' → logprob: -8.389668464660645
    9. '<|end|>' → logprob: -8.639668464660645
    10. '   ' → logprob: -8.889668464660645

Token 852: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -7.493430894101039e-05
    2. ' bool' → logprob: -9.500075340270996
    3. '```' → logprob: -16.87507438659668
    4. '<bool' → logprob: -17.87507438659668
    5. '(bool' → logprob: -18.12507438659668
    6. '   ' → logprob: -18.37507438659668
    7. '	bool' → logprob: -18.37507438659668
    8. 'True' → logprob: -19.62507438659668
    9. ')' → logprob: -20.00007438659668
    10. '
' → logprob: -20.37507438659668

Token 853: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003718723077327013
    2. ':
' → logprob: -5.878718852996826
    3. '):' → logprob: -8.128718376159668
    4. '():' → logprob: -8.128718376159668
    5. '       ' → logprob: -8.753718376159668
    6. '<|end|>' → logprob: -10.253718376159668
    7. '():
' → logprob: -10.628718376159668
    8. '):
' → logprob: -10.628718376159668
    9. ':return' → logprob: -11.003718376159668
    10. '   ' → logprob: -11.503718376159668

Token 854: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03255067020654678
    2. '        
' → logprob: -3.907550573348999
    3. '        ' → logprob: -5.157550811767578
    4. ' 
' → logprob: -6.157550811767578
    5. '\n' → logprob: -6.907550811767578
    6. '\' → logprob: -7.157550811767578
    7. '```' → logprob: -8.157550811767578
    8. '    
' → logprob: -8.282550811767578
    9. '<|end|>' → logprob: -8.407550811767578
    10. ')' → logprob: -8.407550811767578

Token 855: ' t' (ID: 260)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.4577123522758484
    2. '       ' → logprob: -1.2077124118804932
    3. 'total' → logprob: -2.707712411880493
    4. '   ' → logprob: -6.707712173461914
    5. '           ' → logprob: -9.207712173461914
    6. ' target' → logprob: -9.707712173461914
    7. 'target' → logprob: -10.457712173461914
    8. ' if' → logprob: -10.582712173461914
    9. '	total' → logprob: -10.582712173461914
    10. '```' → logprob: -10.582712173461914

Token 856: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.316649466753006
    2. ' =' → logprob: -1.3166494369506836
    3. 'otal' → logprob: -5.691649436950684
    4. '=
' → logprob: -13.191649436950684
    5. 'total' → logprob: -13.441649436950684
    6. '       ' → logprob: -13.441649436950684
    7. '           ' → logprob: -13.941649436950684
    8. '=int' → logprob: -15.191649436950684
    9. 'ot' → logprob: -15.441649436950684
    10. '   ' → logprob: -15.441649436950684

Token 857: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.005234594456851482
    2. ' k' → logprob: -5.255234718322754
    3. '           ' → logprob: -14.130234718322754
    4. '               ' → logprob: -18.755233764648438
    5. '   ' → logprob: -19.005233764648438
    6. '	k' → logprob: -19.630233764648438
    7. '            ' → logprob: -19.755233764648438
    8. ' ' → logprob: -20.755233764648438
    9. '{k' → logprob: -21.880233764648438
    10. '          ' → logprob: -22.005233764648438

Token 858: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023246990516781807
    2. ' +' → logprob: -3.773247003555298
    3. '+
' → logprob: -14.398246765136719
    4. '
' → logprob: -15.398246765136719
    5. '()+' → logprob: -15.648246765136719
    6. '＋' → logprob: -16.02324676513672
    7. ')+' → logprob: -16.14824676513672
    8. '   ' → logprob: -16.89824676513672
    9. '```' → logprob: -17.02324676513672
    10. '1' → logprob: -17.14824676513672

Token 859: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '0' → logprob: -17.75
    4. '```' → logprob: -20.75
    5. '
' → logprob: -21.0
    6. '   ' → logprob: -22.875
    7. 'self' → logprob: -23.375
    8. '۱' → logprob: -24.0
    9. '﻿' → logprob: -24.625
    10. '１' → logprob: -24.625

Token 860: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '```' → logprob: -19.75
    4. '0' → logprob: -20.75
    5. '   ' → logprob: -21.0
    6. '
' → logprob: -21.5
    7. '`' → logprob: -23.5
    8. '           ' → logprob: -23.5
    9. '﻿' → logprob: -24.0
    10. '[' → logprob: -24.0

Token 861: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3015788197517395
    2. '
' → logprob: -1.4265787601470947
    3. '<|end|>' → logprob: -5.176578998565674
    4. ',' → logprob: -5.426578998565674
    5. '       ' → logprob: -5.801578998565674
    6. '            
' → logprob: -6.176578998565674
    7. '    
' → logprob: -6.551578998565674
    8. '  
' → logprob: -7.176578998565674
    9. '   ' → logprob: -7.426578998565674
    10. '        
' → logprob: -7.801578998565674

Token 862: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03719235584139824
    2. '       ' → logprob: -3.4121923446655273
    3. '   ' → logprob: -6.662192344665527
    4. 'count' → logprob: -7.287192344665527
    5. 'i' → logprob: -7.662192344665527
    6. ',' → logprob: -8.537192344665527
    7. 'pos' → logprob: -8.662192344665527
    8. 'idx' → logprob: -8.912192344665527
    9. 'index' → logprob: -9.162192344665527
    10. '
' → logprob: -9.162192344665527

Token 863: ' #' (ID: 1069)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.45069679617881775
    2. '           ' → logprob: -1.0756968259811401
    3. '       ' → logprob: -4.57569694519043
    4. 'l' → logprob: -5.45069694519043
    5. 'import' → logprob: -6.07569694519043
    6. 'count' → logprob: -6.70069694519043
    7. 'low' → logprob: -6.95069694519043
    8. ' left' → logprob: -7.07569694519043
    9. 'i' → logprob: -7.70069694519043
    10. '   ' → logprob: -8.07569694519043

Token 864: ' Need' (ID: 19792)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.11920368671417236
    2. 'l' → logprob: -2.869203567504883
    3. 'import' → logprob: -3.119203567504883
    4. 'lo' → logprob: -4.994203567504883
    5. 'from' → logprob: -6.244203567504883
    6. 'low' → logprob: -6.494203567504883
    7. 'count' → logprob: -7.494203567504883
    8. '           ' → logprob: -8.369203567504883
    9. '#' → logprob: -8.744203567504883
    10. 'idx' → logprob: -8.994203567504883

Token 865: ' at' (ID: 540)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.21653331816196442
    2. '           ' → logprob: -2.9665334224700928
    3. 'import' → logprob: -3.2165334224700928
    4. 'idx' → logprob: -3.5915334224700928
    5. 'left' → logprob: -3.7165334224700928
    6. 'cnt' → logprob: -4.466533184051514
    7. 'inv' → logprob: -4.716533184051514
    8. ' count' → logprob: -4.841533184051514
    9. 'friends' → logprob: -5.716533184051514
    10. 'to' → logprob: -6.341533184051514

Token 866: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.0005363515811040998
    2. ' least' → logprob: -7.7505364418029785
    3. 'len' → logprob: -10.62553596496582
    4. 'Least' → logprob: -11.00053596496582
    5. 'most' → logprob: -11.37553596496582
    6. 'le' → logprob: -11.50053596496582
    7. '_le' → logprob: -11.50053596496582
    8. '#' → logprob: -12.12553596496582
    9. 'import' → logprob: -12.25053596496582
    10. 't' → logprob: -12.37553596496582

Token 867: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0011948712635785341
    2. ' k' → logprob: -6.751194953918457
    3. 'count' → logprob: -11.001194953918457
    4. 'left' → logprob: -13.251194953918457
    5. 'cnt' → logprob: -13.626194953918457
    6. '0' → logprob: -14.126194953918457
    7. 'friends' → logprob: -14.126194953918457
    8. '           ' → logprob: -14.251194953918457
    9. 'import' → logprob: -14.751194953918457
    10. 'idx' → logprob: -14.876194953918457

Token 868: ' friends' (ID: 5664)
  Prédit: ' friends'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' friends' → logprob: -0.19151103496551514
    2. 'friends' → logprob: -1.9415110349655151
    3. '           ' → logprob: -5.191511154174805
    4. ')' → logprob: -5.316511154174805
    5. ' with' → logprob: -5.816511154174805
    6. '+' → logprob: -5.816511154174805
    7. '
' → logprob: -6.066511154174805
    8. '_f' → logprob: -6.441511154174805
    9. 'friend' → logprob: -7.066511154174805
    10. ':' → logprob: -7.066511154174805

Token 869: ' with' (ID: 483)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40449270606040955
    2. ' with' → logprob: -1.404492735862732
    3. 'with' → logprob: -3.2794926166534424
    4. ',' → logprob: -4.4044928550720215
    5. ' that' → logprob: -4.9044928550720215
    6. '<|end|>' → logprob: -5.2794928550720215
    7. ' satisfying' → logprob: -5.5294928550720215
    8. ' who' → logprob: -5.6544928550720215
    9. ' =' → logprob: -6.0294928550720215
    10. ' able' → logprob: -6.0294928550720215

Token 870: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4350281357765198
    2. 'constraint' → logprob: -1.435028076171875
    3. 'f' → logprob: -2.310028076171875
    4. 'self' → logprob: -4.685028076171875
    5. ' a' → logprob: -6.185028076171875
    6. 'friend' → logprob: -6.560028076171875
    7. ' f' → logprob: -6.560028076171875
    8. ' constraint' → logprob: -7.810028076171875
    9. 'min' → logprob: -8.060028076171875
    10. '
' → logprob: -9.435028076171875

Token 871: '_i' (ID: 10853)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.6950007081031799
    2. '_i' → logprob: -0.6950007081031799
    3. 'i' → logprob: -7.320000648498535
    4. ' =' → logprob: -8.320000648498535
    5. 'lambda' → logprob: -8.320000648498535
    6. '=' → logprob: -9.070000648498535
    7. '<=' → logprob: -9.195000648498535
    8. '=lambda' → logprob: -9.445000648498535
    9. '_' → logprob: -9.695000648498535
    10. '_f' → logprob: -10.195000648498535

Token 872: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5767784714698792
    2. ' <=' → logprob: -0.8267784714698792
    3. '           ' → logprob: -8.076778411865234
    4. ')' → logprob: -8.826778411865234
    5. ')<=' → logprob: -8.951778411865234
    6. '```' → logprob: -9.576778411865234
    7. ']<=' → logprob: -9.576778411865234
    8. '          ' → logprob: -11.076778411865234
    9. '≤' → logprob: -11.326778411865234
    10. '
' → logprob: -11.576778411865234

Token 873: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0031822288874536753
    2. ' t' → logprob: -5.753182411193848
    3. '
' → logprob: -13.128182411193848
    4. '`t' → logprob: -14.253182411193848
    5. '   ' → logprob: -15.003182411193848
    6. '           ' → logprob: -15.003182411193848
    7. 'k' → logprob: -15.128182411193848
    8. '	t' → logprob: -15.253182411193848
    9. '(t' → logprob: -15.628182411193848
    10. ' ' → logprob: -16.00318145751953

Token 874: ' <=' (ID: 5017)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.11250150203704834
    2. '           ' → logprob: -2.862501621246338
    3. 'and' → logprob: -3.112501621246338
    4. ',' → logprob: -6.487501621246338
    5. '       ' → logprob: -6.987501621246338
    6. '
' → logprob: -7.237501621246338
    7. ')' → logprob: -8.23750114440918
    8. ' count' → logprob: -8.73750114440918
    9. ' ' → logprob: -8.98750114440918
    10. '   ' → logprob: -8.98750114440918

Token 875: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.06386236846446991
    2. 'f' → logprob: -2.8138623237609863
    3. ' b' → logprob: -6.438862323760986
    4. ' f' → logprob: -8.188862800598145
    5. '   ' → logprob: -12.813862800598145
    6. '           ' → logprob: -12.813862800598145
    7. '
' → logprob: -12.813862800598145
    8. ' ' → logprob: -13.313862800598145
    9. '       ' → logprob: -13.813862800598145
    10. 'self' → logprob: -14.063862800598145

Token 876: '_i' (ID: 10853)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.011251057498157024
    2. '_i' → logprob: -4.511250972747803
    3. '_' → logprob: -9.136251449584961
    4. '[i' → logprob: -9.886251449584961
    5. ' _' → logprob: -11.636251449584961
    6. ')' → logprob: -12.011251449584961
    7. ')_' → logprob: -12.511251449584961
    8. '[_' → logprob: -12.886251449584961
    9. '```' → logprob: -13.011251449584961
    10. 'i' → logprob: -13.386251449584961

Token 877: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01280333660542965
    2. ',' → logprob: -5.512803554534912
    3. '
' → logprob: -5.637803554534912
    4. 'count' → logprob: -6.387803554534912
    5. '<|end|>' → logprob: -6.887803554534912
    6. '            
' → logprob: -7.762803554534912
    7. ')' → logprob: -8.012803077697754
    8. '<|end|>' → logprob: -8.137803077697754
    9. '       ' → logprob: -8.387803077697754
    10. ':' → logprob: -8.887803077697754

Token 878: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011340413242578506
    2. '       ' → logprob: -4.761340618133545
    3. '<|end|>' → logprob: -6.136340618133545
    4. '   ' → logprob: -8.761340141296387
    5. '            
' → logprob: -9.636340141296387
    6. '    
' → logprob: -10.011340141296387
    7. '<|end|>' → logprob: -10.136340141296387
    8. '        
' → logprob: -10.136340141296387
    9. ' ' → logprob: -10.511340141296387
    10. '```' → logprob: -10.636340141296387

Token 879: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.13945870101451874
    2. 'left' → logprob: -2.639458656311035
    3. '           ' → logprob: -3.014458656311035
    4. 'l' → logprob: -5.764458656311035
    5. 'valid' → logprob: -6.514458656311035
    6. ' count' → logprob: -7.139458656311035
    7. 'import' → logprob: -7.139458656311035
    8. 'cnt' → logprob: -7.139458656311035
    9. 'low' → logprob: -7.264458656311035
    10. 'lo' → logprob: -7.764458656311035

Token 880: ' find' (ID: 1646)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.39937493205070496
    2. 'left' → logprob: -1.5243749618530273
    3. 'l' → logprob: -3.1493749618530273
    4. 'lo' → logprob: -3.8993749618530273
    5. 'import' → logprob: -4.149374961853027
    6. 'idx' → logprob: -4.774374961853027
    7. '           ' → logprob: -5.274374961853027
    8. 'valid' → logprob: -5.524374961853027
    9. 'low' → logprob: -5.774374961853027
    10. 'cnt' → logprob: -5.774374961853027

Token 881: ' how' (ID: 1495)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.23903752863407135
    2. 'left' → logprob: -1.6140375137329102
    3. 'right' → logprob: -5.36403751373291
    4. 'idx' → logprob: -6.11403751373291
    5. 'l' → logprob: -6.23903751373291
    6. 'index' → logprob: -7.23903751373291
    7. 'pos' → logprob: -7.36403751373291
    8. ' left' → logprob: -7.36403751373291
    9. 'from' → logprob: -7.36403751373291
    10. ' import' → logprob: -7.61403751373291

Token 882: ' many' (ID: 1991)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.003441484412178397
    2. '           ' → logprob: -7.003441333770752
    3. ' import' → logprob: -7.128441333770752
    4. 'from' → logprob: -7.128441333770752
    5. '       ' → logprob: -9.00344181060791
    6. '#' → logprob: -9.12844181060791
    7. '=' → logprob: -9.12844181060791
    8. ' =' → logprob: -9.37844181060791
    9. ')' → logprob: -9.87844181060791
    10. '   ' → logprob: -9.87844181060791

Token 883: ' have' (ID: 679)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5276878476142883
    2. 'left' → logprob: -1.0276877880096436
    3. 'idx' → logprob: -3.7776877880096436
    4. 'pos' → logprob: -4.527688026428223
    5. 'l' → logprob: -5.027688026428223
    6. 'friends' → logprob: -5.152688026428223
    7. 'lo' → logprob: -5.652688026428223
    8. 'index' → logprob: -7.027688026428223
    9. 'from' → logprob: -7.777688026428223
    10. ' import' → logprob: -8.027688026428223

Token 884: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2160969078540802
    2. 'f' → logprob: -2.716096878051758
    3. 'constraint' → logprob: -2.841096878051758
    4. ' a' → logprob: -3.466096878051758
    5. ' f' → logprob: -3.716096878051758
    6. ' constraint' → logprob: -5.341096878051758
    7. 'self' → logprob: -5.966096878051758
    8. 'import' → logprob: -6.466096878051758
    9. 'lambda' → logprob: -6.716096878051758
    10. 'min' → logprob: -7.091096878051758

Token 885: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0491369366645813
    2. '_list' → logprob: -3.0491368770599365
    3. 'i' → logprob: -7.799137115478516
    4. '_' → logprob: -10.174137115478516
    5. '<=' → logprob: -10.424137115478516
    6. '_idx' → logprob: -10.799137115478516
    7. '=' → logprob: -11.424137115478516
    8. ' =' → logprob: -12.424137115478516
    9. '[i' → logprob: -12.424137115478516
    10. 'list' → logprob: -13.049137115478516

Token 886: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.28475233912467957
    2. ' <=' → logprob: -1.409752368927002
    3. ')' → logprob: -6.909752368927002
    4. ')<=' → logprob: -7.409752368927002
    5. ' =' → logprob: -7.909752368927002
    6. '_le' → logprob: -8.409751892089844
    7. ']<=' → logprob: -8.534751892089844
    8. '=' → logprob: -8.534751892089844
    9. '           ' → logprob: -8.784751892089844
    10. '_' → logprob: -9.409751892089844

Token 887: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0031836593989282846
    2. ' t' → logprob: -5.753183841705322
    3. '           ' → logprob: -12.503183364868164
    4. '
' → logprob: -13.128183364868164
    5. '	t' → logprob: -17.003183364868164
    6. '   ' → logprob: -17.128183364868164
    7. '            
' → logprob: -17.503183364868164
    8. '`t' → logprob: -17.503183364868164
    9. '               ' → logprob: -17.753183364868164
    10. 'import' → logprob: -17.753183364868164

Token 888: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1178010702133179
    2. '           ' → logprob: -1.4928010702133179
    3. 'idx' → logprob: -2.1178011894226074
    4. 'left' → logprob: -2.3678011894226074
    5. '       ' → logprob: -2.6178011894226074
    6. '=' → logprob: -3.7428011894226074
    7. ':' → logprob: -3.8678011894226074
    8. ',' → logprob: -3.8678011894226074
    9. '_left' → logprob: -3.9928011894226074
    10. 'index' → logprob: -4.617801189422607

Token 889: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8557808995246887
    2. '       ' → logprob: -1.355780839920044
    3. ' =' → logprob: -2.230780839920044
    4. 'idx' → logprob: -2.855780839920044
    5. 'left' → logprob: -3.355780839920044
    6. ' left' → logprob: -3.730780839920044
    7. 'pos' → logprob: -3.980780839920044
    8. 'index' → logprob: -4.230781078338623
    9. '=' → logprob: -4.480781078338623
    10. '
' → logprob: -4.730781078338623

Token 890: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7725497484207153
    2. 'left' → logprob: -0.7725497484207153
    3. '           ' → logprob: -3.272549629211426
    4. 'l' → logprob: -3.397549629211426
    5. 'lo' → logprob: -6.147549629211426
    6. 'from' → logprob: -7.397549629211426
    7. ' left' → logprob: -7.397549629211426
    8. 'idx' → logprob: -7.647549629211426
    9. 'low' → logprob: -8.022549629211426
    10. '       ' → logprob: -8.772549629211426

Token 891: ' Using' (ID: 17511)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.008312429301440716
    2. 'left' → logprob: -5.008312225341797
    3. 'from' → logprob: -7.133312225341797
    4. '           ' → logprob: -7.883312225341797
    5. ' import' → logprob: -8.383312225341797
    6. 'l' → logprob: -8.883312225341797
    7. ' left' → logprob: -10.508312225341797
    8. 'lo' → logprob: -11.258312225341797
    9. '   ' → logprob: -12.508312225341797
    10. ' from' → logprob: -12.633312225341797

Token 892: ' bis' (ID: 7204)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.16145548224449158
    2. 'bis' → logprob: -2.0364553928375244
    3. 'from' → logprob: -4.1614556312561035
    4. '
' → logprob: -6.0364556312561035
    5. 'left' → logprob: -8.536455154418945
    6. 'binary' → logprob: -9.036455154418945
    7. 'self' → logprob: -9.161455154418945
    8. '```' → logprob: -9.661455154418945
    9. ' bis' → logprob: -9.911455154418945
    10. '           ' → logprob: -10.786455154418945

Token 893: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.03183615952730179
    2. 'r' → logprob: -3.7818362712860107
    3. 'ct' → logprob: -5.281836032867432
    4. 't' → logprob: -6.656836032867432
    5. 'n' → logprob: -7.031836032867432
    6. 'rt' → logprob: -7.656836032867432
    7. 'rch' → logprob: -8.90683650970459
    8. '_left' → logprob: -9.15683650970459
    9. 'ctl' → logprob: -9.28183650970459
    10. 'ctrl' → logprob: -9.78183650970459

Token 894: '_right' (ID: 24402)
  Prédit: '.b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.03248212859034538
    2. '_left' → logprob: -3.782482147216797
    3. '_right' → logprob: -5.407482147216797
    4. 'import' → logprob: -5.657482147216797
    5. 'self' → logprob: -7.407482147216797
    6. '(self' → logprob: -7.782482147216797
    7. ' import' → logprob: -9.532482147216797
    8. '.ins' → logprob: -10.657482147216797
    9. '.' → logprob: -11.032482147216797
    10. 'Right' → logprob: -11.657482147216797

Token 895: ' because' (ID: 2236)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.40075913071632385
    2. '(' → logprob: -1.7757591009140015
    3. '(a' → logprob: -1.9007591009140015
    4. '(
' → logprob: -5.400759220123291
    5. 'import' → logprob: -5.775759220123291
    6. ']' → logprob: -7.025759220123291
    7. 'self' → logprob: -7.150759220123291
    8. '(b' → logprob: -7.150759220123291
    9. ')' → logprob: -7.900759220123291
    10. '(import' → logprob: -8.025758743286133

Token 896: ' a' (ID: 261)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.019912676885724068
    2. 'bis' → logprob: -4.6449127197265625
    3. 'from' → logprob: -4.8949127197265625
    4. 'a' → logprob: -6.2699127197265625
    5. ' bis' → logprob: -8.394912719726562
    6. 'b' → logprob: -8.769912719726562
    7. '__' → logprob: -8.894912719726562
    8. 'self' → logprob: -9.394912719726562
    9. ' import' → logprob: -9.644912719726562
    10. ' from' → logprob: -11.269912719726562

Token 897: '_i' (ID: 10853)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.026984913274645805
    2. 'import' → logprob: -3.651984930038452
    3. 'from' → logprob: -7.526984691619873
    4. 'a' → logprob: -9.276985168457031
    5. 'self' → logprob: -10.776985168457031
    6. '[_' → logprob: -12.401985168457031
    7. 'list' → logprob: -12.901985168457031
    8. '```' → logprob: -13.276985168457031
    9. 'rray' → logprob: -13.526985168457031
    10. 's' → logprob: -13.526985168457031

Token 898: ' <=' (ID: 5017)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33813273906707764
    2. 'import' → logprob: -1.9631327390670776
    3. '(a' → logprob: -3.713132858276367
    4. '<=' → logprob: -4.338132858276367
    5. ',' → logprob: -4.838132858276367
    6. 'a' → logprob: -4.838132858276367
    7. ').' → logprob: -4.963132858276367
    8. '._' → logprob: -4.963132858276367
    9. ')_' → logprob: -4.963132858276367
    10. 's' → logprob: -5.213132858276367

Token 899: ' t' (ID: 260)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0011185461189597845
    2. 't' → logprob: -7.6261186599731445
    3. 'self' → logprob: -7.6261186599731445
    4. 'import' → logprob: -9.001118659973145
    5. ' a' → logprob: -11.001118659973145
    6. 'bis' → logprob: -14.626118659973145
    7. ' self' → logprob: -14.751118659973145
    8. 'from' → logprob: -15.251118659973145
    9. '`' → logprob: -15.376118659973145
    10. '
' → logprob: -15.626118659973145

Token 900: '
' (ID: 198)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.14614596962928772
    2. '(a' → logprob: -2.271146059036255
    3. '(
' → logprob: -4.771145820617676
    4. 'import' → logprob: -5.021145820617676
    5. ')' → logprob: -5.396145820617676
    6. '(' → logprob: -5.521145820617676
    7. 'self' → logprob: -6.396145820617676
    8. '(f' → logprob: -6.396145820617676
    9. '(b' → logprob: -6.896145820617676
    10. ')
' → logprob: -7.146145820617676

Token 901: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.144343301653862
    2. 'import' → logprob: -2.769343376159668
    3. '(' → logprob: -3.269343376159668
    4. ']' → logprob: -4.019343376159668
    5. '(b' → logprob: -5.769343376159668
    6. '(
' → logprob: -6.019343376159668
    7. '       ' → logprob: -6.144343376159668
    8. '           ' → logprob: -6.644343376159668
    9. '```' → logprob: -6.644343376159668
    10. ',' → logprob: -7.019343376159668

Token 902: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.05462700501084328
    2. ')' → logprob: -3.804626941680908
    3. '           ' → logprob: -4.304626941680908
    4. 'from' → logprob: -4.429626941680908
    5. ']' → logprob: -6.179626941680908
    6. 'return' → logprob: -7.179626941680908
    7. ' import' → logprob: -7.429626941680908
    8. ',' → logprob: -7.554626941680908
    9. ' from' → logprob: -8.054627418518066
    10. '```' → logprob: -8.179627418518066

Token 903: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -1.318681188422488e-05
    2. ' bis' → logprob: -11.25001335144043
    3. 'b' → logprob: -15.75001335144043
    4. 'math' → logprob: -20.00001335144043
    5. 'import' → logprob: -20.50001335144043
    6. '```' → logprob: -20.50001335144043
    7. '   ' → logprob: -20.62501335144043
    8. 'sys' → logprob: -20.87501335144043
    9. 'bs' → logprob: -21.37501335144043
    10. '`' → logprob: -21.87501335144043

Token 904: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.001173321157693863
    2. 'ectl' → logprob: -7.751173496246338
    3. 'ection' → logprob: -8.87617301940918
    4. 'ector' → logprob: -9.12617301940918
    5. 'ected' → logprob: -9.25117301940918
    6. 'ects' → logprob: -9.75117301940918
    7. 'import' → logprob: -10.25117301940918
    8. 'ep' → logprob: -10.37617301940918
    9. '       ' → logprob: -10.62617301940918
    10. 'r' → logprob: -10.62617301940918

Token 905: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.177411437034607
    2. '           ' → logprob: -1.427411437034607
    3. '       ' → logprob: -1.677411437034607
    4. '(' → logprob: -2.8024115562438965
    5. ':' → logprob: -3.6774115562438965
    6. '
' → logprob: -3.6774115562438965
    7. '(
' → logprob: -3.8024115562438965
    8. '[' → logprob: -3.9274115562438965
    9. ',' → logprob: -4.0524115562438965
    10. ')
' → logprob: -4.1774115562438965

Token 906: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0609348863363266
    2. ')' → logprob: -3.0609347820281982
    3. '       ' → logprob: -4.810935020446777
    4. '            
' → logprob: -6.060935020446777
    5. '```' → logprob: -8.685935020446777
    6. '[' → logprob: -8.810935020446777
    7. '               ' → logprob: -8.935935020446777
    8. ' )' → logprob: -9.185935020446777
    9. ')
' → logprob: -9.185935020446777
    10. '
' → logprob: -9.310935020446777

Token 907: ' idx' (ID: 14016)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.42118433117866516
    2. 'idx' (adapté à ' idx') → logprob: -1.5461843013763428
    3. '           ' → logprob: -2.7961843013763428
    4. 'count' → logprob: -3.2961843013763428
    5. ' pos' → logprob: -4.421184539794922
    6. 'i' → logprob: -5.171184539794922
    7. 'index' → logprob: -5.421184539794922
    8. ' idx' → logprob: -5.671184539794922
    9. 'left' → logprob: -6.796184539794922
    10. ' count' → logprob: -6.796184539794922

Token 908: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16036762297153473
    2. '=' → logprob: -1.9103676080703735
    3. '=_' → logprob: -9.660367965698242
    4. '=self' → logprob: -11.035367965698242
    5. '           ' → logprob: -11.160367965698242
    6. '=int' → logprob: -11.785367965698242
    7. '<|end|>' → logprob: -11.785367965698242
    8. ')' → logprob: -12.910367965698242
    9. '=
' → logprob: -13.035367965698242
    10. '=len' → logprob: -13.035367965698242

Token 909: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.07446461915969849
    2. ' bis' → logprob: -2.6994645595550537
    3. 'import' → logprob: -5.449464797973633
    4. 'len' → logprob: -8.699464797973633
    5. '           ' → logprob: -10.324464797973633
    6. 'b' → logprob: -11.949464797973633
    7. 'self' → logprob: -12.324464797973633
    8. ' len' → logprob: -12.949464797973633
    9. '0' → logprob: -13.324464797973633
    10. ' import' → logprob: -13.449464797973633

Token 910: 'ect' (ID: 534)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.18135403096675873
    2. 'ect' → logprob: -1.80635404586792
    3. 'sect' → logprob: -6.55635404586792
    4. '.ct' → logprob: -10.056353569030762
    5. 't' → logprob: -10.181353569030762
    6. '```' → logprob: -11.306353569030762
    7. '.b' → logprob: -11.681353569030762
    8. 'с' → logprob: -11.806353569030762
    9. 's' → logprob: -12.056353569030762
    10. '`' → logprob: -12.181353569030762

Token 911: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.024304933845996857
    2. '_right' → logprob: -4.0243048667907715
    3. '.idx' → logprob: -6.1493048667907715
    4. '.' → logprob: -6.1493048667907715
    5. '._' → logprob: -7.0243048667907715
    6. '.right' → logprob: -7.5243048667907715
    7. 'Right' → logprob: -9.27430534362793
    8. '.Right' → logprob: -9.52430534362793
    9. '_RIGHT' → logprob: -9.77430534362793
    10. '.ins' → logprob: -9.89930534362793

Token 912: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.012913372367620468
    2. 'ist' → logprob: -5.387913227081299
    3. 'ect' → logprob: -5.762913227081299
    4. 'right' → logprob: -6.387913227081299
    5. 'import' → logprob: -7.012913227081299
    6. 'bis' → logprob: -7.012913227081299
    7. 's' → logprob: -7.762913227081299
    8. '_right' → logprob: -8.262913703918457
    9. 'ight' → logprob: -8.512913703918457
    10. 'sect' → logprob: -8.762913703918457

Token 913: 'ect' (ID: 534)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.13258974254131317
    2. 'ect' → logprob: -2.132589817047119
    3. 'ght' → logprob: -5.882589817047119
    4. 'cht' → logprob: -6.007589817047119
    5. 'ch' → logprob: -9.007589340209961
    6. 't' → logprob: -9.507589340209961
    7. 'pt' → logprob: -10.007589340209961
    8. 'sect' → logprob: -10.632589340209961
    9. 'ce' → logprob: -11.132589340209961
    10. 'right' → logprob: -11.507589340209961

Token 914: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.004125299863517284
    2. 'right' → logprob: -5.504125118255615
    3. 'self' → logprob: -10.879125595092773
    4. 'a' → logprob: -11.379125595092773
    5. '.b' → logprob: -12.004125595092773
    6. 'Right' → logprob: -12.254125595092773
    7. 'r' → logprob: -13.254125595092773
    8. '_left' → logprob: -13.254125595092773
    9. '_RIGHT' → logprob: -14.629125595092773
    10. 'rights' → logprob: -14.629125595092773

Token 915: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -2.696889623621246e-06
    2. 'a' → logprob: -13.75000286102295
    3. '(self' → logprob: -13.87500286102295
    4. '(' → logprob: -15.25000286102295
    5. '```' → logprob: -15.87500286102295
    6. '(
' → logprob: -16.250001907348633
    7. 'self' → logprob: -17.375001907348633
    8. '           ' → logprob: -17.500001907348633
    9. '[a' → logprob: -17.500001907348633
    10. '       ' → logprob: -17.625001907348633

Token 916: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.570319702499546e-05
    2. 'self' → logprob: -10.875025749206543
    3. 'a' → logprob: -13.000025749206543
    4. ')' → logprob: -13.500025749206543
    5. 'list' → logprob: -14.375025749206543
    6. '_lst' → logprob: -14.375025749206543
    7. '(self' → logprob: -14.875025749206543
    8. '_' → logprob: -15.750025749206543
    9. '_self' → logprob: -15.750025749206543
    10. ')_' → logprob: -15.875025749206543

Token 917: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013386933133006096
    2. ',t' → logprob: -6.626338481903076
    3. '           ' → logprob: -11.626338958740234
    4. ' ,' → logprob: -12.876338958740234
    5. ',
' → logprob: -14.876338958740234
    6. 't' → logprob: -15.251338958740234
    7. ',k' → logprob: -15.751338958740234
    8. '               ' → logprob: -15.876338958740234
    9. '(t' → logprob: -16.001338958740234
    10. ')' → logprob: -16.751338958740234

Token 918: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00043162284418940544
    2. ' t' → logprob: -7.750431537628174
    3. '           ' → logprob: -14.500432014465332
    4. '   ' → logprob: -15.375432014465332
    5. '	t' → logprob: -16.375431060791016
    6. '
' → logprob: -16.875431060791016
    7. '       ' → logprob: -17.000431060791016
    8. '`t' → logprob: -17.250431060791016
    9. ')t' → logprob: -17.375431060791016
    10. ')' → logprob: -18.125431060791016

Token 919: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004653465002775192
    2. '-' → logprob: -9.000465393066406
    3. ')
' → logprob: -9.000465393066406
    4. '           ' → logprob: -9.125465393066406
    5. ')-' → logprob: -9.250465393066406
    6. '       ' → logprob: -12.250465393066406
    7. ' -' → logprob: -12.625465393066406
    8. '-)' → logprob: -13.625465393066406
    9. ' )' → logprob: -14.250465393066406
    10. ')return' → logprob: -14.375465393066406

Token 920: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3396488428115845
    2. '<|end|>' → logprob: -1.7146488428115845
    3. ')' → logprob: -2.464648723602295
    4. '       ' → logprob: -4.214648723602295
    5. '<|end|>' → logprob: -6.589648723602295
    6. '            
' → logprob: -7.089648723602295
    7. ',' → logprob: -7.089648723602295
    8. '```' → logprob: -7.589648723602295
    9. ':' → logprob: -7.714648723602295
    10. '          ' → logprob: -7.839648723602295

Token 921: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.05136008933186531
    2. 'if' → logprob: -3.6763601303100586
    3. '           ' → logprob: -3.9263601303100586
    4. 'valid' → logprob: -6.176360130310059
    5. ' count' → logprob: -6.801360130310059
    6. ' if' → logprob: -7.176360130310059
    7. 'counts' → logprob: -7.926360130310059
    8. 'left' → logprob: -9.051360130310059
    9. 'cnt' → logprob: -9.301360130310059
    10. '
' → logprob: -9.551360130310059

Token 922: ' friends' (ID: 5664)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0067234220914542675
    2. 'valid' → logprob: -5.381723403930664
    3. 'if' → logprob: -6.506723403930664
    4. 'cnt' → logprob: -8.256723403930664
    5. 'import' → logprob: -9.256723403930664
    6. 'left' → logprob: -9.506723403930664
    7. '           ' → logprob: -9.631723403930664
    8. 'eligible' → logprob: -10.881723403930664
    9. 'counts' → logprob: -11.131723403930664
    10. '#' → logprob: -11.256723403930664

Token 923: ' from' (ID: 591)
  Prédit: '_with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_with' → logprob: -0.18000982701778412
    2. 'with' → logprob: -2.3050098419189453
    3. '_in' → logprob: -4.055009841918945
    4. ' =' → logprob: -4.305009841918945
    5. '=' → logprob: -4.555009841918945
    6. 's' → logprob: -4.930009841918945
    7. '_count' → logprob: -4.930009841918945
    8. '_s' → logprob: -5.680009841918945
    9. '_to' → logprob: -6.055009841918945
    10. 'count' → logprob: -7.180009841918945

Token 924: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.028536492725834e-05
    2. ' ' → logprob: -10.125070571899414
    3. 'idx' → logprob: -11.250070571899414
    4. '           ' → logprob: -12.750070571899414
    5. 'index' → logprob: -12.750070571899414
    6. '[' → logprob: -12.750070571899414
    7. 'friends' → logprob: -12.750070571899414
    8. 'start' → logprob: -13.875070571899414
    9. 'self' → logprob: -14.250070571899414
    10. '```' → logprob: -14.375070571899414

Token 925: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.41866585687967e-06
    2. 'idx' → logprob: -12.375008583068848
    3. 'index' → logprob: -14.125008583068848
    4. '[' → logprob: -14.375008583068848
    5. ' ' → logprob: -14.375008583068848
    6. 'friends' → logprob: -14.375008583068848
    7. 'start' → logprob: -14.500008583068848
    8. 'self' → logprob: -15.125008583068848
    9. 'import' → logprob: -15.500008583068848
    10. '```' → logprob: -15.750008583068848

Token 926: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6407288312911987
    2. 'to' → logprob: -0.7657288312911987
    3. ' up' → logprob: -6.015728950500488
    4. '           ' → logprob: -6.265728950500488
    5. 'idx' → logprob: -6.515728950500488
    6. ',' → logprob: -7.390728950500488
    7. ':' → logprob: -8.515728950500488
    8. '[idx' → logprob: -8.640728950500488
    9. ' through' → logprob: -9.015728950500488
    10. '..' → logprob: -9.015728950500488

Token 927: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.005235291086137295
    2. ' idx' → logprob: -5.255235195159912
    3. '[idx' → logprob: -14.13023567199707
    4. '	idx' → logprob: -14.63023567199707
    5. '(idx' → logprob: -15.13023567199707
    6. '           ' → logprob: -15.75523567199707
    7. 'index' → logprob: -17.25523567199707
    8. '_idx' → logprob: -18.75523567199707
    9. '   ' → logprob: -18.88023567199707
    10. '               ' → logprob: -19.13023567199707

Token 928: '-' (ID: 12)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9146133661270142
    2. '-' → logprob: -1.5396133661270142
    3. ' -' → logprob: -1.9146133661270142
    4. ':' → logprob: -2.0396132469177246
    5. '<|end|>' → logprob: -3.1646132469177246
    6. '           ' → logprob: -4.164613246917725
    7. ']' → logprob: -4.289613246917725
    8. '<|end|>' → logprob: -4.789613246917725
    9. '       ' → logprob: -5.414613246917725
    10. '```' → logprob: -5.789613246917725

Token 929: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012513005640357733
    2. '-' → logprob: -7.501251220703125
    3. 'idx' → logprob: -8.126251220703125
    4. ')' → logprob: -8.876251220703125
    5. ' ' → logprob: -8.876251220703125
    6. '`' → logprob: -10.626251220703125
    7. '```' → logprob: -10.626251220703125
    8. ' -' → logprob: -11.001251220703125
    9. ' idx' → logprob: -11.376251220703125
    10. 's' → logprob: -11.626251220703125

Token 930: ' have' (ID: 679)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.134525179862976
    2. '           ' → logprob: -1.384525179862976
    3. '<|end|>' → logprob: -1.634525179862976
    4. ')' → logprob: -2.5095252990722656
    5. ',' → logprob: -3.1345252990722656
    6. 'count' → logprob: -3.8845252990722656
    7. ' if' → logprob: -4.009525299072266
    8. '<|end|>' → logprob: -4.384525299072266
    9. '       ' → logprob: -4.634525299072266
    10. ' count' → logprob: -4.759525299072266

Token 931: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.023774705827236176
    2. ' a' → logprob: -3.7737746238708496
    3. 'f' → logprob: -8.023775100708008
    4. 'constraint' → logprob: -9.648775100708008
    5. 'self' → logprob: -10.523775100708008
    6. 'min' → logprob: -10.898775100708008
    7. ' f' → logprob: -11.273775100708008
    8. ' constraint' → logprob: -11.773775100708008
    9. ' an' → logprob: -12.273775100708008
    10. ' their' → logprob: -12.398775100708008

Token 932: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0061375838704407215
    2. 'i' → logprob: -5.756137371063232
    3. '_list' → logprob: -6.131137371063232
    4. '<=' → logprob: -8.13113784790039
    5. '_idx' → logprob: -9.50613784790039
    6. '[i' → logprob: -9.63113784790039
    7. '   ' → logprob: -9.75613784790039
    8. ' <=' → logprob: -10.13113784790039
    9. 'idx' → logprob: -10.50613784790039
    10. 's' → logprob: -10.75613784790039

Token 933: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3486194312572479
    2. '<=' → logprob: -1.2236194610595703
    3. ']<=' → logprob: -10.22361946105957
    4. ')<=' → logprob: -10.47361946105957
    5. '<|end|>' → logprob: -10.72361946105957
    6. ')' → logprob: -10.72361946105957
    7. ' ≤' → logprob: -11.09861946105957
    8. '≤' → logprob: -11.22361946105957
    9. '```' → logprob: -11.59861946105957
    10. '           ' → logprob: -11.84861946105957

Token 934: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.011053244583308697
    2. ' t' → logprob: -4.511053085327148
    3. '   ' → logprob: -13.511053085327148
    4. ' ' → logprob: -14.386053085327148
    5. '`t' → logprob: -14.636053085327148
    6. 'idx' → logprob: -14.886053085327148
    7. '	t' → logprob: -15.011053085327148
    8. '           ' → logprob: -15.011053085327148
    9. 'total' → logprob: -15.136053085327148
    10. '       ' → logprob: -15.511053085327148

Token 935: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5366934537887573
    2. '           ' → logprob: -1.2866934537887573
    3. '<|end|>' → logprob: -2.661693572998047
    4. 'count' → logprob: -3.536693572998047
    5. '            
' → logprob: -4.536693572998047
    6. '       ' → logprob: -5.286693572998047
    7. ')' → logprob: -5.661693572998047
    8. ' if' → logprob: -5.661693572998047
    9. ',' → logprob: -5.786693572998047
    10. '<|end|>' → logprob: -6.411693572998047

Token 936: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3453914225101471
    2. '       ' → logprob: -1.3453913927078247
    3. 'count' → logprob: -3.5953915119171143
    4. ' count' → logprob: -5.970391273498535
    5. '   ' → logprob: -7.845391273498535
    6. 'if' → logprob: -8.220391273498535
    7. ' if' → logprob: -8.595391273498535
    8. '        
' → logprob: -9.095391273498535
    9. '<|end|>' → logprob: -9.220391273498535
    10. '            
' → logprob: -9.470391273498535

Token 937: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0010757996933534741
    2. 'valid' → logprob: -7.626075744628906
    3. 'cnt' → logprob: -7.876075744628906
    4. '           ' → logprob: -8.876075744628906
    5. 'import' → logprob: -10.626075744628906
    6. 'if' → logprob: -10.751075744628906
    7. 'left' → logprob: -11.751075744628906
    8. 'from' → logprob: -12.251075744628906
    9. '#' (adapté à ' #') → logprob: -12.751075744628906
    10. 'counts' → logprob: -13.001075744628906

Token 938: ' Among' (ID: 32417)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.00974133238196373
    2. 'valid' → logprob: -5.134741306304932
    3. 'b' → logprob: -6.509741306304932
    4. 'cnt' → logprob: -6.884741306304932
    5. 'import' → logprob: -7.384741306304932
    6. 'from' → logprob: -8.00974178314209
    7. 'left' → logprob: -9.75974178314209
    8. '#' → logprob: -9.88474178314209
    9. 'if' → logprob: -10.13474178314209
    10. '           ' → logprob: -10.38474178314209

Token 939: ' these' (ID: 1879)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7488324046134949
    2. 'self' → logprob: -1.3738324642181396
    3. 'those' → logprob: -2.4988324642181396
    4. 'idx' → logprob: -2.6238324642181396
    5. 'friends' → logprob: -3.4988324642181396
    6. '0' → logprob: -3.6238324642181396
    7. 'these' → logprob: -3.8738324642181396
    8. 'the' → logprob: -4.3738322257995605
    9. 'them' → logprob: -5.1238322257995605
    10. ' those' → logprob: -5.3738322257995605

Token 940: ',' (ID: 11)
  Prédit: 'friends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'friends' → logprob: -1.2622394561767578
    2. ',' → logprob: -1.6372394561767578
    3. 'b' → logprob: -1.6372394561767578
    4. 'count' → logprob: -1.8872394561767578
    5. 'indices' → logprob: -2.887239456176758
    6. '           ' → logprob: -3.762239456176758
    7. ' friends' → logprob: -4.137239456176758
    8. 'idx' → logprob: -4.387239456176758
    9. 'import' → logprob: -4.512239456176758
    10. 'indexes' → logprob: -4.637239456176758

Token 941: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.01635410450398922
    2. 'valid' → logprob: -4.391354084014893
    3. '           ' → logprob: -6.141354084014893
    4. 'cnt' → logprob: -7.516354084014893
    5. 'b' → logprob: -8.01635456085205
    6. 'import' → logprob: -8.26635456085205
    7. 'counts' → logprob: -9.26635456085205
    8. 'from' → logprob: -9.39135456085205
    9. 'left' → logprob: -9.64135456085205
    10. 'friends' → logprob: -9.89135456085205

Token 942: ' how' (ID: 1495)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.29274237155914307
    2. '           ' → logprob: -2.6677422523498535
    3. 'valid' → logprob: -2.7927422523498535
    4. '=' → logprob: -2.9177422523498535
    5. '>=' → logprob: -3.9177422523498535
    6. 'how' → logprob: -4.1677422523498535
    7. ' =' → logprob: -4.5427422523498535
    8. 'b' → logprob: -4.5427422523498535
    9. '=count' → logprob: -6.0427422523498535
    10. 'friends' → logprob: -6.4177422523498535

Token 943: ' many' (ID: 1991)
  Prédit: 'many'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'many' → logprob: -0.003626081394031644
    2. ' many' → logprob: -5.753625869750977
    3. '_many' → logprob: -8.378625869750977
    4. 'import' → logprob: -9.753625869750977
    5. 'much' → logprob: -9.753625869750977
    6. '           ' → logprob: -10.628625869750977
    7. 'b' → logprob: -10.878625869750977
    8. 'how' → logprob: -11.878625869750977
    9. '   ' → logprob: -12.128625869750977
    10. 'sum' → logprob: -12.128625869750977

Token 944: ' have' (ID: 679)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.05820640176534653
    2. '>=' → logprob: -3.68320631980896
    3. ' have' → logprob: -4.183206558227539
    4. 'b' → logprob: -4.683206558227539
    5. '           ' → logprob: -5.808206558227539
    6. ' >=' → logprob: -7.183206558227539
    7. '       ' → logprob: -7.558206558227539
    8. '=' → logprob: -7.808206558227539
    9. '≥' → logprob: -8.183206558227539
    10. 'count' → logprob: -8.183206558227539

Token 945: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0018416560487821698
    2. 'self' → logprob: -7.0018415451049805
    3. 'f' → logprob: -7.5018415451049805
    4. ' b' → logprob: -8.87684154510498
    5. '           ' → logprob: -9.62684154510498
    6. '   ' → logprob: -9.62684154510498
    7. '               ' → logprob: -10.37684154510498
    8. 'max' → logprob: -11.00184154510498
    9. '       ' → logprob: -11.50184154510498
    10. '```' → logprob: -11.50184154510498

Token 946: '_i' (ID: 10853)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.21246792376041412
    2. '_i' → logprob: -2.087467908859253
    3. '>=' → logprob: -2.962467908859253
    4. ' >=' → logprob: -5.337468147277832
    5. 'b' → logprob: -6.337468147277832
    6. 'import' → logprob: -6.712468147277832
    7. '[idx' → logprob: -6.712468147277832
    8. '[i' → logprob: -6.837468147277832
    9. 'i' → logprob: -7.087468147277832
    10. 'bis' → logprob: -7.212468147277832

Token 947: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.02668619714677334
    2. ' >=' → logprob: -3.776686191558838
    3. '[idx' → logprob: -6.776686191558838
    4. '=' → logprob: -7.276686191558838
    5. '[' → logprob: -7.776686191558838
    6. '           ' → logprob: -8.026686668395996
    7. '≥' → logprob: -8.776686668395996
    8. '[i' → logprob: -9.026686668395996
    9. '>' → logprob: -9.151686668395996
    10. ']>=' → logprob: -9.151686668395996

Token 948: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.002572448458522558
    2. ' t' → logprob: -6.002572536468506
    3. '           ' → logprob: -9.252572059631348
    4. '               ' → logprob: -15.002572059631348
    5. '
' → logprob: -15.252572059631348
    6. '                   ' → logprob: -15.877572059631348
    7. '   ' → logprob: -16.252573013305664
    8. '`t' → logprob: -16.627573013305664
    9. '       ' → logprob: -16.877573013305664
    10. '	t' → logprob: -17.002573013305664

Token 949: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8010514378547668
    2. 'count' → logprob: -0.9260514378547668
    3. ' count' → logprob: -2.801051378250122
    4. ',' → logprob: -4.426051616668701
    5. '
' → logprob: -4.551051616668701
    6. ')' → logprob: -4.676051616668701
    7. ' =' → logprob: -4.801051616668701
    8. '<|end|>' → logprob: -4.801051616668701
    9. '.count' → logprob: -5.051051616668701
    10. '=' → logprob: -5.051051616668701

Token 950: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007905708043836057
    2. 'count' → logprob: -8.5007905960083
    3. '
' → logprob: -8.6257905960083
    4. ' count' → logprob: -9.3757905960083
    5. '       ' → logprob: -9.5007905960083
    6. '            
' → logprob: -9.7507905960083
    7. '```' → logprob: -9.7507905960083
    8. '<|end|>' → logprob: -10.6257905960083
    9. ' for' → logprob: -10.7507905960083
    10. ',' → logprob: -11.0007905960083

Token 951: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.005439251195639372
    2. '           ' → logprob: -5.630439281463623
    3. 'left' → logprob: -7.380439281463623
    4. ' count' → logprob: -7.755439281463623
    5. 'cnt' → logprob: -7.880439281463623
    6. 'valid' → logprob: -9.005438804626465
    7. 'import' → logprob: -9.255438804626465
    8. '```' → logprob: -9.630438804626465
    9. 'from' → logprob: -9.755438804626465
    10. 'counter' → logprob: -11.755438804626465

Token 952: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03805079311132431
    2. ' =' → logprob: -3.288050889968872
    3. '=count' → logprob: -11.788050651550293
    4. '=
' → logprob: -15.163050651550293
    5. ')' → logprob: -15.288050651550293
    6. 'count' → logprob: -15.788050651550293
    7. '_=' → logprob: -15.788050651550293
    8. '_' → logprob: -15.788050651550293
    9. '=int' → logprob: -15.913050651550293
    10. '           ' → logprob: -16.03805160522461

Token 953: ' ' (ID: 220)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.31329840421676636
    2. '0' → logprob: -1.3132984638214111
    3. 'len' → logprob: -10.688298225402832
    4. ' sum' → logprob: -11.813298225402832
    5. '           ' → logprob: -12.188298225402832
    6. '       ' → logprob: -14.563298225402832
    7. '               ' → logprob: -14.813298225402832
    8. '   ' → logprob: -15.813298225402832
    9. '(sum' → logprob: -16.31329917907715
    10. '                   ' → logprob: -16.43829917907715

Token 954: '0' (ID: 15)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0019348275382071733
    2. '0' → logprob: -6.251935005187988
    3. 'len' → logprob: -12.001935005187988
    4. ' sum' → logprob: -17.001934051513672
    5. '1' → logprob: -18.626934051513672
    6. 'bis' → logprob: -18.876934051513672
    7. '(sum' → logprob: -20.126934051513672
    8. '   ' → logprob: -20.376934051513672
    9. '
' → logprob: -20.626934051513672
    10. 'import' → logprob: -21.001934051513672

Token 955: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47186246514320374
    2. '           ' → logprob: -1.7218624353408813
    3. ' for' → logprob: -2.096862554550171
    4. '<|end|>' → logprob: -3.221862554550171
    5. 'for' → logprob: -3.721862554550171
    6. '	       ' → logprob: -5.971862316131592
    7. '<|end|>' → logprob: -6.346862316131592
    8. ')' → logprob: -6.971862316131592
    9. ',' → logprob: -7.221862316131592
    10. '	for' → logprob: -7.221862316131592

Token 956: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06501013785600662
    2. 'for' → logprob: -3.4400100708007812
    3. ' for' → logprob: -3.5650100708007812
    4. '       ' → logprob: -6.065010070800781
    5. '	       ' → logprob: -8.940010070800781
    6. '   ' → logprob: -10.690010070800781
    7. '<|end|>' → logprob: -10.940010070800781
    8. '	for' → logprob: -10.940010070800781
    9. '```' → logprob: -11.315010070800781
    10. '
' → logprob: -11.440010070800781

Token 957: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.009872484020888805
    2. '           ' → logprob: -5.5098724365234375
    3. 'left' → logprob: -6.0098724365234375
    4. ' for' → logprob: -6.7598724365234375
    5. 'j' → logprob: -6.8848724365234375
    6. 'i' → logprob: -7.1348724365234375
    7. 'l' → logprob: -8.884872436523438
    8. 'right' → logprob: -9.634872436523438
    9. 'from' → logprob: -10.384872436523438
    10. 'lo' → logprob: -10.384872436523438

Token 958: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20168034732341766
    2. 'j' → logprob: -1.701680302619934
    3. ' i' → logprob: -8.576680183410645
    4. ' j' → logprob: -9.701680183410645
    5. '   ' → logprob: -11.451680183410645
    6. '_j' → logprob: -13.076680183410645
    7. '_i' → logprob: -13.701680183410645
    8. 'x' → logprob: -13.826680183410645
    9. ' ' → logprob: -14.076680183410645
    10. '```' → logprob: -14.701680183410645

Token 959: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07890962064266205
    2. 'in' → logprob: -2.5789096355438232
    3. ' i' → logprob: -12.203909873962402
    4. ' ' → logprob: -12.453909873962402
    5. 'i' → logprob: -12.578909873962402
    6. ' <' → logprob: -13.328909873962402
    7. '0' → logprob: -14.078909873962402
    8. ')' → logprob: -14.328909873962402
    9. '	in' → logprob: -14.328909873962402
    10. '=' → logprob: -14.453909873962402

Token 960: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00014168102643452585
    2. ' range' → logprob: -8.875142097473145
    3. 'idx' → logprob: -13.750142097473145
    4. '   ' → logprob: -14.625142097473145
    5. '0' → logprob: -15.875142097473145
    6. '(range' → logprob: -18.000141143798828
    7. '	range' → logprob: -18.000141143798828
    8. 're' → logprob: -18.500141143798828
    9. '
' → logprob: -18.500141143798828
    10. 'r' → logprob: -18.750141143798828

Token 961: '(idx' (ID: 42793)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.011332983151078224
    2. '(idx' → logprob: -4.511332988739014
    3. ' idx' → logprob: -8.886332511901855
    4. '0' → logprob: -9.011332511901855
    5. '[idx' → logprob: -11.136332511901855
    6. '	idx' → logprob: -12.011332511901855
    7. '           ' → logprob: -13.011332511901855
    8. '               ' → logprob: -14.136332511901855
    9. '                   ' → logprob: -14.511332511901855
    10. '   ' → logprob: -14.886332511901855

Token 962: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4157164990901947
    2. '):' → logprob: -1.290716528892517
    3. '-' → logprob: -2.7907164096832275
    4. '           ' → logprob: -6.915716648101807
    5. '       ' → logprob: -7.040716648101807
    6. ')' → logprob: -7.290716648101807
    7. ' -' → logprob: -8.415716171264648
    8. ',' → logprob: -8.665716171264648
    9. ':' → logprob: -8.915716171264648
    10. '0' → logprob: -9.040716171264648

Token 963: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23841652274131775
    2. ' if' → logprob: -1.7384165525436401
    3. 'if' → logprob: -3.3634164333343506
    4. '           ' → logprob: -6.86341667175293
    5. '   ' → logprob: -8.61341667175293
    6. '<|end|>' → logprob: -9.11341667175293
    7. '       ' → logprob: -9.23841667175293
    8. '```' → logprob: -10.23841667175293
    9. '	           ' → logprob: -10.36341667175293
    10. '                       ' → logprob: -10.48841667175293

Token 964: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2900092899799347
    2. '               ' → logprob: -1.5400092601776123
    3. 'if' (adapté à ' if') → logprob: -3.2900092601776123
    4. '   ' → logprob: -10.040009498596191
    5. '           ' → logprob: -10.165009498596191
    6. '                   ' → logprob: -11.790009498596191
    7. '	           ' → logprob: -12.290009498596191
    8. '	if' → logprob: -13.040009498596191
    9. ' ' → logprob: -13.165009498596191
    10. '                ' → logprob: -13.415009498596191

Token 965: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.06197742745280266
    2. ' b' → logprob: -2.8119773864746094
    3. '           ' → logprob: -11.81197738647461
    4. '               ' → logprob: -13.43697738647461
    5. '   ' → logprob: -14.68697738647461
    6. '	b' → logprob: -15.56197738647461
    7. '                   ' → logprob: -15.68697738647461
    8. '       ' → logprob: -16.56197738647461
    9. ' ' → logprob: -17.18697738647461
    10. '.b' → logprob: -17.31197738647461

Token 966: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.282920129597187e-05
    2. '[i' → logprob: -11.500012397766113
    3. '_i' → logprob: -14.125012397766113
    4. 'list' → logprob: -14.375012397766113
    5. 'b' → logprob: -15.125012397766113
    6. '[' → logprob: -15.250012397766113
    7. '[_' → logprob: -15.875012397766113
    8. 'i' → logprob: -16.00001335144043
    9. ')_' → logprob: -16.12501335144043
    10. 'List' → logprob: -16.25001335144043

Token 967: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -15.125000953674316
    3. 'i' → logprob: -15.625000953674316
    4. '```' → logprob: -15.625000953674316
    5. '[
' → logprob: -16.75
    6. '   ' → logprob: -18.375
    7. '[I' → logprob: -18.875
    8. ' [' → logprob: -19.125
    9. '>=' → logprob: -19.5
    10. '\[' → logprob: -19.75

Token 968: ']' (ID: 60)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.03933904320001602
    2. ' >=' → logprob: -3.289339065551758
    3. ']>=' → logprob: -7.039339065551758
    4. ')>=' → logprob: -8.539339065551758
    5. '[i' → logprob: -8.914339065551758
    6. ')' → logprob: -10.289339065551758
    7. '[' → logprob: -10.539339065551758
    8. ']' → logprob: -11.039339065551758
    9. '   ' → logprob: -13.039339065551758
    10. '>' → logprob: -13.039339065551758

Token 969: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.02634059078991413
    2. ' >=' → logprob: -3.6513404846191406
    3. ']>=' → logprob: -10.65134048461914
    4. ')>=' → logprob: -11.90134048461914
    5. '[' → logprob: -12.65134048461914
    6. '   ' → logprob: -13.27634048461914
    7. '>' → logprob: -13.52634048461914
    8. '≥' → logprob: -14.77634048461914
    9. '[
' → logprob: -14.90134048461914
    10. '    ' → logprob: -14.90134048461914

Token 970: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.3868740200996399
    2. 't' → logprob: -1.1368739604949951
    3. '           ' → logprob: -13.011874198913574
    4. '               ' → logprob: -15.386874198913574
    5. '`t' → logprob: -15.511874198913574
    6. '
' → logprob: -16.136873245239258
    7. '            ' → logprob: -16.386873245239258
    8. '	t' → logprob: -16.761873245239258
    9. '                   ' → logprob: -16.886873245239258
    10. '   ' → logprob: -17.761873245239258

Token 971: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8710604906082153
    2. ':
' → logprob: -0.9960604906082153
    3. '               ' → logprob: -1.7460604906082153
    4. '           ' → logprob: -4.246060371398926
    5. '                   ' → logprob: -4.371060371398926
    6. '):
' → logprob: -5.496060371398926
    7. '):' → logprob: -6.246060371398926
    8. ')' → logprob: -6.621060371398926
    9. '                       ' → logprob: -6.746060371398926
    10. '<|end|>' → logprob: -7.621060371398926

Token 972: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005120261572301388
    2. '                       ' → logprob: -6.255120277404785
    3. '               ' → logprob: -6.505120277404785
    4. 'count' → logprob: -6.880120277404785
    5. '                  ' → logprob: -8.130120277404785
    6. ' count' → logprob: -9.630120277404785
    7. '           ' → logprob: -9.755120277404785
    8. '                    ' → logprob: -10.130120277404785
    9. '(count' → logprob: -10.755120277404785
    10. '[count' → logprob: -10.755120277404785

Token 973: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.0047610728070139885
    2. '                       ' → logprob: -5.504761219024658
    3. '                   ' → logprob: -7.379761219024658
    4. ' count' → logprob: -10.0047607421875
    5. '               ' → logprob: -12.3797607421875
    6. '   ' → logprob: -12.3797607421875
    7. '[count' → logprob: -14.1297607421875
    8. '                           ' → logprob: -14.2547607421875
    9. '
' → logprob: -14.3797607421875
    10. '```' → logprob: -14.5047607421875

Token 974: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.015617134980857372
    2. ' +=' → logprob: -4.390617370605469
    3. '                   ' → logprob: -6.390617370605469
    4. '                       ' → logprob: -6.890617370605469
    5. '               ' → logprob: -8.390617370605469
    6. '+' → logprob: -9.640617370605469
    7. ']+=' → logprob: -10.390617370605469
    8. '=' → logprob: -11.140617370605469
    9. '                    ' → logprob: -11.265617370605469
    10. '                  ' → logprob: -11.515617370605469

Token 975: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '   ' → logprob: -20.125
    4. '```' → logprob: -20.875
    5. '
' → logprob: -21.75
    6. '           ' → logprob: -23.625
    7. '۱' → logprob: -23.75
    8. '<|end|>' → logprob: -24.375
    9. '       ' → logprob: -24.5
    10. '１' → logprob: -24.625

Token 976: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 977: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6854665875434875
    2. '<|end|>' → logprob: -0.8104665875434875
    3. '
' → logprob: -3.8104665279388428
    4. '<|end|>' → logprob: -4.560466766357422
    5. ' return' → logprob: -4.685466766357422
    6. 'return' → logprob: -5.935466766357422
    7. '            ' → logprob: -6.435466766357422
    8. '          ' → logprob: -6.935466766357422
    9. '            
' → logprob: -7.435466766357422
    10. '               ' → logprob: -7.810466766357422

Token 978: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009529638104140759
    2. '       ' → logprob: -5.1345295906066895
    3. '   ' → logprob: -6.8845295906066895
    4. 'return' (adapté à ' return') → logprob: -7.1345295906066895
    5. '
' → logprob: -7.2595295906066895
    6. ' return' → logprob: -7.3845295906066895
    7. '<|end|>' → logprob: -8.009530067443848
    8. '	return' → logprob: -10.134530067443848
    9. '	       ' → logprob: -11.384530067443848
    10. '		' → logprob: -11.509530067443848

Token 979: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.001170225441455841
    2. ' count' → logprob: -6.7511701583862305
    3. '   ' → logprob: -19.626171112060547
    4. '(count' → logprob: -20.001171112060547
    5. '	count' → logprob: -20.626171112060547
    6. '
' → logprob: -23.126171112060547
    7. '[count' → logprob: -23.626171112060547
    8. '$count' → logprob: -23.751171112060547
    9. 'counts' → logprob: -24.001171112060547
    10. ' ' → logprob: -24.126171112060547

Token 980: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.05505559965968132
    2. '>=' → logprob: -2.930055618286133
    3. '           ' → logprob: -9.180055618286133
    4. ')>=' → logprob: -10.055055618286133
    5. ' <=' → logprob: -11.305055618286133
    6. '               ' → logprob: -12.930055618286133
    7. '```' → logprob: -12.930055618286133
    8. ')' → logprob: -13.430055618286133
    9. ']>=' → logprob: -13.555055618286133
    10. '<=' → logprob: -13.930055618286133

Token 981: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.5048530030981055e-06
    2. ' k' → logprob: -13.500001907348633
    3. '           ' → logprob: -21.625001907348633
    4. '```' → logprob: -22.125001907348633
    5. '{k' → logprob: -22.375001907348633
    6. '
' → logprob: -24.000001907348633
    7. '   ' → logprob: -24.250001907348633
    8. '	k' → logprob: -24.250001907348633
    9. '               ' → logprob: -24.250001907348633
    10. '       ' → logprob: -24.750001907348633

Token 982: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11361322551965714
    2. '
' → logprob: -2.4886131286621094
    3. '        
' → logprob: -4.488613128662109
    4. '<|end|>' → logprob: -4.738613128662109
    5. '   ' → logprob: -7.113613128662109
    6. '\n' → logprob: -7.488613128662109
    7. '```' → logprob: -7.488613128662109
    8. '    
' → logprob: -7.738613128662109
    9. ')' → logprob: -7.738613128662109
    10. '<|end|>' → logprob: -8.11361312866211

Token 983: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013223844580352306
    2. '```' → logprob: -7.626322269439697
    3. '<|end|>' → logprob: -7.876322269439697
    4. '        
' → logprob: -8.376322746276855
    5. 'for' → logprob: -10.126322746276855
    6. '   ' → logprob: -10.126322746276855
    7. '
' → logprob: -10.376322746276855
    8. 'from' → logprob: -10.376322746276855
    9. ',' → logprob: -10.876322746276855
    10. '<|end|>' → logprob: -11.751322746276855

Token 984: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2136758267879486
    2. 'left' → logprob: -1.838675856590271
    3. 'low' → logprob: -3.9636757373809814
    4. '```' → logprob: -4.5886759757995605
    5. 'l' → logprob: -6.9636759757995605
    6. 'for' → logprob: -7.0886759757995605
    7. 'import' → logprob: -7.2136759757995605
    8. 'lo' → logprob: -7.2136759757995605
    9. '        
' → logprob: -8.338675498962402
    10. '   ' → logprob: -8.463675498962402

Token 985: ' Binary' (ID: 32672)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.13107676804065704
    2. 'low' → logprob: -2.1310768127441406
    3. 'lo' → logprob: -5.631076812744141
    4. '       ' → logprob: -7.756076812744141
    5. 'import' → logprob: -9.63107681274414
    6. 'l' → logprob: -10.13107681274414
    7. ' left' → logprob: -11.75607681274414
    8. 'for' → logprob: -12.25607681274414
    9. '```' → logprob: -12.88107681274414
    10. '#' → logprob: -13.00607681274414

Token 986: ' search' (ID: 3684)
  Prédit: ' search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' search' → logprob: -0.7881159782409668
    2. '_search' → logprob: -1.0381159782409668
    3. 'search' → logprob: -1.6631159782409668
    4. '       ' → logprob: -6.538115978240967
    5. '   ' → logprob: -9.288116455078125
    6. '_' → logprob: -11.038116455078125
    7. 'import' → logprob: -11.163116455078125
    8. ' =' → logprob: -11.663116455078125
    9. ')' → logprob: -11.788116455078125
    10. 'Search' → logprob: -12.288116455078125

Token 987: ' k' (ID: 372)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019099250435829163
    2. 'left' → logprob: -4.644099235534668
    3. '```' → logprob: -5.644099235534668
    4. 'low' → logprob: -6.394099235534668
    5. '
' → logprob: -6.394099235534668
    6. ',' → logprob: -6.894099235534668
    7. 'import' → logprob: -7.144099235534668
    8. 'lo' → logprob: -8.769099235534668
    9. '   ' → logprob: -8.894099235534668
    10. ' left' → logprob: -9.269099235534668

Token 988: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32187068462371826
    2. '       ' → logprob: -1.6968706846237183
    3. '=' → logprob: -2.571870803833008
    4. ',' → logprob: -5.696870803833008
    5. ':' → logprob: -5.821870803833008
    6. '
' → logprob: -6.696870803833008
    7. 'import' → logprob: -6.696870803833008
    8. ' for' → logprob: -6.946870803833008
    9. '(low' → logprob: -6.946870803833008
    10. '        
' → logprob: -7.446870803833008

Token 989: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11855877190828323
    2. 'range' → logprob: -2.368558883666992
    3. ' range' → logprob: -4.243558883666992
    4. '[' → logprob: -5.993558883666992
    5. '   ' → logprob: -7.118558883666992
    6. '       ' → logprob: -8.368558883666992
    7. '
' → logprob: -9.118558883666992
    8. '(' → logprob: -9.493558883666992
    9. ' ' → logprob: -9.493558883666992
    10. '```' → logprob: -11.493558883666992

Token 990: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1756367712223437e-05
    2. '1' → logprob: -12.000011444091797
    3. 'self' → logprob: -12.500011444091797
    4. ',' → logprob: -14.875011444091797
    5. ' ' → logprob: -14.875011444091797
    6. '```' → logprob: -15.000011444091797
    7. '   ' → logprob: -15.250011444091797
    8. 'len' → logprob: -15.375011444091797
    9. 'N' → logprob: -15.625011444091797
    10. '       ' → logprob: -16.375011444091797

Token 991: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011786778923124075
    2. ',N' → logprob: -7.626178741455078
    3. ',
' → logprob: -7.751178741455078
    4. ' ,' → logprob: -8.876178741455078
    5. ',len' → logprob: -9.626178741455078
    6. '       ' → logprob: -10.626178741455078
    7. '1' → logprob: -11.501178741455078
    8. ',n' → logprob: -12.001178741455078
    9. ',self' → logprob: -12.751178741455078
    10. '0' → logprob: -13.001178741455078

Token 992: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.284414678812027
    2. 'len' → logprob: -1.4094146490097046
    3. '       ' → logprob: -6.409414768218994
    4. ' len' → logprob: -7.534414768218994
    5. 'self' → logprob: -7.784414768218994
    6. ' N' → logprob: -7.909414768218994
    7. '   ' → logprob: -9.034414291381836
    8. '           ' → logprob: -9.659414291381836
    9. '```' → logprob: -10.909414291381836
    10. '
' → logprob: -11.034414291381836

Token 993: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6506114602088928
    2. ']
' → logprob: -1.400611400604248
    3. '       ' → logprob: -1.775611400604248
    4. ',' → logprob: -3.025611400604248
    5. '],' → logprob: -5.150611400604248
    6. '+' → logprob: -5.900611400604248
    7. ']:
' → logprob: -6.525611400604248
    8. '   ' → logprob: -6.775611400604248
    9. ']

' → logprob: -7.400611400604248
    10. ',
' → logprob: -7.775611400604248

Token 994: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009540267288684845
    2. '```' → logprob: -5.13454008102417
    3. '
' → logprob: -6.00954008102417
    4. 'left' → logprob: -7.13454008102417
    5. 'low' → logprob: -8.759540557861328
    6. '        
' → logprob: -9.634540557861328
    7. '   ' → logprob: -10.009540557861328
    8. ',' → logprob: -10.509540557861328
    9. ' left' → logprob: -11.134540557861328
    10. 'l' → logprob: -11.759540557861328

Token 995: ' low' (ID: 4465)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.7182600498199463
    2. '       ' → logprob: -1.2182600498199463
    3. 'low' (adapté à ' low') → logprob: -1.7182600498199463
    4. '```' → logprob: -3.4682600498199463
    5. 'import' → logprob: -5.718259811401367
    6. 'lo' → logprob: -5.968259811401367
    7. 'l' → logprob: -9.218259811401367
    8. '``' → logprob: -9.468259811401367
    9. '   ' → logprob: -9.718259811401367
    10. ' left' → logprob: -11.343259811401367

Token 996: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15014393627643585
    2. ' =' → logprob: -2.15014386177063
    3. ',' → logprob: -3.77514386177063
    4. ' ,' → logprob: -12.02514362335205
    5. '       ' → logprob: -12.27514362335205
    6. '<|end|>' → logprob: -13.77514362335205
    7. '=
' → logprob: -14.02514362335205
    8. '0' → logprob: -14.27514362335205
    9. ')' → logprob: -14.52514362335205
    10. '   ' → logprob: -15.27514362335205

Token 997: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' → logprob: -0.3132781684398651
    2. ' high' → logprob: -1.3132781982421875
    3. 'High' → logprob: -11.938278198242188
    4. 'N' → logprob: -12.313278198242188
    5. '=' → logprob: -13.438278198242188
    6. 'len' → logprob: -13.563278198242188
    7. ' N' → logprob: -14.063278198242188
    8. '_high' → logprob: -14.438278198242188
    9. '.high' → logprob: -14.563278198242188
    10. ' =' → logprob: -15.188278198242188

Token 998: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16023601591587067
    2. '=' → logprob: -1.9102360010147095
    3. ',' → logprob: -11.410236358642578
    4. ' ' → logprob: -15.035236358642578
    5. '   ' → logprob: -15.785236358642578
    6. '<|end|>' → logprob: -16.535236358642578
    7. ' ,' → logprob: -17.035236358642578
    8. '0' → logprob: -17.160236358642578
    9. '```' → logprob: -17.410236358642578
    10. ')' → logprob: -17.410236358642578

Token 999: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '       ' → logprob: -17.25000762939453
    4. '   ' → logprob: -17.62500762939453
    5. '[' → logprob: -19.87500762939453
    6. 'N' → logprob: -19.87500762939453
    7. '           ' → logprob: -20.75000762939453
    8. 'len' → logprob: -21.62500762939453
    9. '        ' → logprob: -21.87500762939453
    10. ',' → logprob: -21.87500762939453

Token 1000: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.6550729419104755e-05
    2. 'len' → logprob: -10.750036239624023
    3. 'N' → logprob: -11.125036239624023
    4. '   ' → logprob: -15.875036239624023
    5. ' ' → logprob: -16.000036239624023
    6. '[len' → logprob: -17.500036239624023
    7. '       ' → logprob: -18.000036239624023
    8. '[' → logprob: -18.125036239624023
    9. '(len' → logprob: -18.125036239624023
    10. 'self' → logprob: -18.375036239624023

Token 1001: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018029843922704458
    2. ',
' → logprob: -6.626802921295166
    3. '=' → logprob: -8.376803398132324
    4. '```' → logprob: -8.626803398132324
    5. ' ,' → logprob: -10.501803398132324
    6. '
' → logprob: -10.876803398132324
    7. '       ' → logprob: -11.751803398132324
    8. ' =' → logprob: -12.001803398132324
    9. '0' → logprob: -13.751803398132324
    10. ';' → logprob: -14.501803398132324

Token 1002: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.004340037237852812
    2. 'N' → logprob: -5.504340171813965
    3. ' len' → logprob: -8.504340171813965
    4. '       ' → logprob: -10.379340171813965
    5. '[len' → logprob: -11.254340171813965
    6. '   ' → logprob: -11.379340171813965
    7. '(len' → logprob: -13.504340171813965
    8. ' N' → logprob: -14.379340171813965
    9. '           ' → logprob: -14.879340171813965
    10. '```' → logprob: -15.254340171813965

Token 1003: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.107425062713446e-06
    2. 'self' → logprob: -11.875006675720215
    3. '(' → logprob: -16.12500762939453
    4. '(
' → logprob: -18.25000762939453
    5. '```' → logprob: -18.25000762939453
    6. ' (' → logprob: -19.25000762939453
    7. '=self' → logprob: -19.37500762939453
    8. ' self' → logprob: -20.00000762939453
    9. '
' → logprob: -20.75000762939453
    10. ')' → logprob: -20.87500762939453

Token 1004: '.f' (ID: 1196)
  Prédit: '.f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -0.00033081689616665244
    2. '(f' → logprob: -8.875330924987793
    3. 'friends' → logprob: -9.375330924987793
    4. 'self' → logprob: -9.625330924987793
    5. '(self' → logprob: -10.750330924987793
    6. ').' → logprob: -11.500330924987793
    7. ')' → logprob: -12.500330924987793
    8. '```' → logprob: -14.250330924987793
    9. '.self' → logprob: -14.500330924987793
    10. ' friends' → logprob: -14.625330924987793

Token 1005: 'riends' (ID: 16678)
  Prédit: 'riends'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'riends' → logprob: -0.03627881780266762
    2. '.f' → logprob: -3.66127872467041
    3. 'friends' → logprob: -4.66127872467041
    4. 'r' → logprob: -8.28627872467041
    5. 'riend' → logprob: -8.91127872467041
    6. 'ri' → logprob: -10.03627872467041
    7. '_f' → logprob: -12.03627872467041
    8. '.r' → logprob: -12.16127872467041
    9. 'f' → logprob: -12.41127872467041
    10. '```' → logprob: -12.41127872467041

Token 1006: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002391587011516094
    2. '-' → logprob: -6.877391815185547
    3. ']' → logprob: -7.127391815185547
    4. ')
' → logprob: -8.002391815185547
    5. '+' → logprob: -10.127391815185547
    6. ' -' → logprob: -10.252391815185547
    7. '       ' → logprob: -10.377391815185547
    8. '```' → logprob: -10.377391815185547
    9. ')-' → logprob: -10.627391815185547
    10. ')+' → logprob: -10.752391815185547

Token 1007: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19735580682754517
    2. 'while' → logprob: -1.8223557472229004
    3. '```' → logprob: -4.8223557472229
    4. ' while' → logprob: -5.3223557472229
    5. '   ' → logprob: -5.8223557472229
    6. '
' → logprob: -7.4473557472229
    7. ',' → logprob: -7.4473557472229
    8. '	while' → logprob: -8.947356224060059
    9. '        
' → logprob: -9.697356224060059
    10. '``' → logprob: -10.072356224060059

Token 1008: ' result' (ID: 1534)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.020814431831240654
    2. '       ' → logprob: -4.020814418792725
    3. ' while' → logprob: -6.520814418792725
    4. '```' → logprob: -6.895814418792725
    5. '
' → logprob: -9.395814895629883
    6. '   ' → logprob: -10.020814895629883
    7. 'mid' → logprob: -10.395814895629883
    8. '	while' → logprob: -11.895814895629883
    9. '``' → logprob: -12.270814895629883
    10. 'While' → logprob: -12.395814895629883

Token 1009: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22551262378692627
    2. ' =' → logprob: -1.6005126237869263
    3. ',' → logprob: -9.350512504577637
    4. '=
' → logprob: -12.225512504577637
    5. '<|end|>' → logprob: -13.100512504577637
    6. '```' → logprob: -13.225512504577637
    7. ')' → logprob: -13.475512504577637
    8. ' =
' → logprob: -13.600512504577637
    9. '   ' → logprob: -15.475512504577637
    10. '**' → logprob: -15.975512504577637

Token 1010: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0029881594236940145
    2. 'high' → logprob: -6.252988338470459
    3. ' high' → logprob: -7.502988338470459
    4. ' ' → logprob: -8.1279878616333
    5. 'low' → logprob: -8.7529878616333
    6. ' low' → logprob: -10.6279878616333
    7. ' -' → logprob: -11.0029878616333
    8. '-' → logprob: -11.2529878616333
    9. '   ' → logprob: -15.8779878616333
    10. 'len' → logprob: -16.252988815307617

Token 1011: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023298001906368881
    2. '-' → logprob: -8.375232696533203
    3. 'low' → logprob: -13.250232696533203
    4. 'high' → logprob: -14.375232696533203
    5. ' ' → logprob: -17.000232696533203
    6. ' -' → logprob: -17.000232696533203
    7. '   ' → logprob: -19.250232696533203
    8. '
' → logprob: -20.125232696533203
    9. '−' → logprob: -21.125232696533203
    10. '```' → logprob: -21.250232696533203

Token 1012: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04234432429075241
    2. 'while' → logprob: -3.417344331741333
    3. ' while' → logprob: -4.917344093322754
    4. '
' → logprob: -7.167344093322754
    5. '   ' → logprob: -8.417344093322754
    6. '```' → logprob: -8.417344093322754
    7. '	while' → logprob: -9.292344093322754
    8. '<|end|>' → logprob: -11.417344093322754
    9. '        
' → logprob: -11.792344093322754
    10. ',' → logprob: -12.042344093322754

Token 1013: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08354122191667557
    2. '   ' → logprob: -2.95854115486145
    3. 'while' → logprob: -4.458541393280029
    4. ' while' → logprob: -4.833541393280029
    5. '	while' → logprob: -5.333541393280029
    6. '```' → logprob: -5.583541393280029
    7. '<|end|>' → logprob: -10.333540916442871
    8. '           ' → logprob: -10.708540916442871
    9. ',' → logprob: -10.958540916442871
    10. '``' → logprob: -11.208540916442871

Token 1014: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4795951545238495
    2. 'while' (adapté à ' while') → logprob: -0.9795951843261719
    3. ' while' → logprob: -5.229595184326172
    4. '   ' → logprob: -9.979595184326172
    5. '	while' → logprob: -9.979595184326172
    6. '```' → logprob: -9.979595184326172
    7. '
' → logprob: -12.229595184326172
    8. 'While' → logprob: -14.229595184326172
    9. '           ' → logprob: -14.479595184326172
    10. ',' → logprob: -14.479595184326172

Token 1015: ' low' (ID: 4465)
  Prédit: ' low'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' low' → logprob: -0.014168326742947102
    2. 'low' → logprob: -4.2641682624816895
    3. ' high' → logprob: -12.389168739318848
    4. '(low' → logprob: -14.514168739318848
    5. 'high' → logprob: -15.514168739318848
    6. ' not' → logprob: -19.01416778564453
    7. ' True' → logprob: -19.38916778564453
    8. '_low' → logprob: -19.51416778564453
    9. 'Low' → logprob: -20.01416778564453
    10. '.low' → logprob: -20.01416778564453

Token 1016: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.38693347573280334
    2. '<=' → logprob: -1.136933445930481
    3. ' <' → logprob: -10.386933326721191
    4. '<' → logprob: -11.011933326721191
    5. '```' → logprob: -11.511933326721191
    6. ')<=' → logprob: -13.136933326721191
    7. ' ≤' → logprob: -14.136933326721191
    8. '=' → logprob: -14.261933326721191
    9. ']<=' → logprob: -14.636933326721191
    10. '≤' → logprob: -14.761933326721191

Token 1017: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' → logprob: -0.014163628220558167
    2. ' high' → logprob: -4.264163494110107
    3. '
' → logprob: -16.389163970947266
    4. '(high' → logprob: -16.889163970947266
    5. '```' → logprob: -18.014163970947266
    6. '_high' → logprob: -18.389163970947266
    7. '.high' → logprob: -18.514163970947266
    8. 'hi' → logprob: -18.764163970947266
    9. '   ' → logprob: -19.014163970947266
    10. 'High' → logprob: -19.139163970947266

Token 1018: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2271139919757843
    2. ':
' → logprob: -1.602113962173462
    3. '<|end|>' → logprob: -7.602114200592041
    4. '       ' → logprob: -7.852114200592041
    5. '           ' → logprob: -7.977114200592041
    6. '<|end|>' → logprob: -8.852113723754883
    7. '   ' → logprob: -9.352113723754883
    8. '):
' → logprob: -9.727113723754883
    9. ',' → logprob: -9.852113723754883
    10. '```' → logprob: -9.852113723754883

Token 1019: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009380496107041836
    2. '       ' → logprob: -6.134380340576172
    3. '```' → logprob: -6.259380340576172
    4. '   ' → logprob: -6.384380340576172
    5. '<|end|>' → logprob: -6.384380340576172
    6. '<|end|>' → logprob: -7.884380340576172
    7. ',' → logprob: -8.134380340576172
    8. '            
' → logprob: -8.259380340576172
    9. '
' → logprob: -8.884380340576172
    10. ':
' → logprob: -9.009380340576172

Token 1020: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.4540839195251465
    2. '           ' → logprob: -1.7040839195251465
    3. 'mid' (adapté à ' mid') → logprob: -1.7040839195251465
    4. '   ' → logprob: -7.4540839195251465
    5. '```' → logprob: -8.204084396362305
    6. '[mid' → logprob: -9.579084396362305
    7. ' midpoint' → logprob: -10.079084396362305
    8. '_mid' → logprob: -10.329084396362305
    9. ' middle' → logprob: -10.829084396362305
    10. '       ' → logprob: -11.079084396362305

Token 1021: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6156033873558044
    2. '=' → logprob: -1.4906034469604492
    3. '<|end|>' → logprob: -1.4906034469604492
    4. '<|end|>' → logprob: -5.740603446960449
    5. ')' → logprob: -5.990603446960449
    6. ' ' → logprob: -7.740603446960449
    7. '            ' → logprob: -7.865603446960449
    8. '```' → logprob: -8.24060344696045
    9. ' <<=' → logprob: -8.36560344696045
    10. '           ' → logprob: -8.36560344696045

Token 1022: ' (' (ID: 350)
  Prédit: '(low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(low' → logprob: -0.2520938217639923
    2. ' (' → logprob: -1.50209379196167
    3. ' low' → logprob: -8.877094268798828
    4. 'low' → logprob: -10.627094268798828
    5. '(lower' → logprob: -15.252094268798828
    6. '(high' → logprob: -15.377094268798828
    7. '   ' → logprob: -16.127094268798828
    8. '(l' → logprob: -16.127094268798828
    9. '           ' → logprob: -16.377094268798828
    10. '(left' → logprob: -16.502094268798828

Token 1023: 'low' (ID: 14739)
  Prédit: 'low'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.0002614550176076591
    2. ' low' → logprob: -8.250261306762695
    3. '(low' → logprob: -16.375261306762695
    4. '           ' → logprob: -16.875261306762695
    5. '   ' → logprob: -19.125261306762695
    6. '
' → logprob: -19.625261306762695
    7. 'self' → logprob: -20.625261306762695
    8. '.low' → logprob: -20.750261306762695
    9. '_low' → logprob: -20.875261306762695
    10. 'high' → logprob: -21.250261306762695

Token 1024: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759416222572327
    2. '+' → logprob: -0.8259416222572327
    3. '+B' → logprob: -14.075942039489746
    4. '＋' → logprob: -14.950942039489746
    5. '+k' → logprob: -15.575942039489746
    6. '```' → logprob: -15.700942039489746
    7. ' +
' → logprob: -15.825942039489746
    8. '+b' → logprob: -15.950942039489746
    9. ' ' → logprob: -16.32594108581543
    10. '+
' → logprob: -16.32594108581543

Token 1025: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' → logprob: -4.584861744660884e-05
    2. ' high' → logprob: -10.000045776367188
    3. '(high' → logprob: -15.750045776367188
    4. '.high' → logprob: -15.875045776367188
    5. '1' → logprob: -16.750045776367188
    6. ')' → logprob: -17.000045776367188
    7. '           ' → logprob: -17.375045776367188
    8. '_high' → logprob: -18.125045776367188
    9. '
' → logprob: -18.250045776367188
    10. '```' → logprob: -18.500045776367188

Token 1026: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025219188537448645
    2. ')//' → logprob: -6.002521991729736
    3. ')>>' → logprob: -10.002521514892578
    4. ' )' → logprob: -14.002521514892578
    5. '```' → logprob: -17.127521514892578
    6. '）' → logprob: -17.752521514892578
    7. '//' → logprob: -18.002521514892578
    8. ')
' → logprob: -18.752521514892578
    9. '>>' → logprob: -19.002521514892578
    10. '')' → logprob: -19.252521514892578

Token 1027: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.714453935623169
    2. '>>' → logprob: -1.214453935623169
    3. '//' → logprob: -2.464453935623169
    4. '```' → logprob: -2.589453935623169
    5. ' >>' → logprob: -3.339453935623169
    6. ')' → logprob: -4.21445369720459
    7. ')>>' → logprob: -6.96445369720459
    8. '
' → logprob: -6.96445369720459
    9. '>>>' → logprob: -8.33945369720459
    10. ')//' → logprob: -8.33945369720459

Token 1028: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -18.75
    4. '   ' → logprob: -19.5
    5. '
' → logprob: -20.125
    6. '=' → logprob: -22.125
    7. '۲' → logprob: -22.25
    8. '           ' → logprob: -22.625
    9. '     ' → logprob: -23.375
    10. '２' → logprob: -23.375

Token 1029: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '```' → logprob: -21.125
    4. '=' → logprob: -21.875
    5. '   ' → logprob: -22.875
    6. '۲' → logprob: -23.0
    7. '
' → logprob: -24.25
    8. '3' → logprob: -24.375
    9. '२' → logprob: -25.0
    10. '２' → logprob: -25.375

Token 1030: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1893937587738037
    2. '<|end|>' → logprob: -2.3143937587738037
    3. '
' → logprob: -3.1893937587738037
    4. ')' → logprob: -4.189393997192383
    5. '       ' → logprob: -5.439393997192383
    6. '<|end|>' → logprob: -5.689393997192383
    7. '            
' → logprob: -5.814393997192383
    8. ' if' → logprob: -6.564393997192383
    9. ',' → logprob: -6.814393997192383
    10. ':
' → logprob: -7.439393997192383

Token 1031: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16626688838005066
    2. '
' → logprob: -2.166266918182373
    3. '<|end|>' → logprob: -3.666266918182373
    4. '            
' → logprob: -5.541266918182373
    5. '<|end|>' → logprob: -6.041266918182373
    6. '       ' → logprob: -6.541266918182373
    7. '  
' → logprob: -6.666266918182373
    8. '    
' → logprob: -7.416266918182373
    9. ':' → logprob: -7.541266918182373
    10. ':
' → logprob: -7.541266918182373

Token 1032: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018784116953611374
    2. ' if' → logprob: -4.268784046173096
    3. 'if' (adapté à ' if') → logprob: -5.393784046173096
    4. '            
' → logprob: -10.518784523010254
    5. '
' → logprob: -10.643784523010254
    6. '               ' → logprob: -13.143784523010254
    7. '<|end|>' → logprob: -13.268784523010254
    8. '  
' → logprob: -13.643784523010254
    9. '    
' → logprob: -13.643784523010254
    10. '       ' → logprob: -13.643784523010254

Token 1033: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.31328341364860535
    2. ' can' → logprob: -1.3132834434509277
    3. ' self' → logprob: -11.18828296661377
    4. 'self' → logprob: -12.31328296661377
    5. '	can' → logprob: -13.43828296661377
    6. '           ' → logprob: -13.81328296661377
    7. '(can' → logprob: -14.68828296661377
    8. '_can' → logprob: -15.18828296661377
    9. '.can' → logprob: -16.063283920288086
    10. '               ' → logprob: -16.688283920288086

Token 1034: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.00031735055381432176
    2. 'invite' → logprob: -8.125317573547363
    3. '_in' → logprob: -11.875317573547363
    4. 'inv' → logprob: -12.000317573547363
    5. 'mid' → logprob: -12.250317573547363
    6. '
' → logprob: -14.250317573547363
    7. '```' → logprob: -14.250317573547363
    8. '_INV' → logprob: -14.375317573547363
    9. '_mid' → logprob: -14.750317573547363
    10. '\' → logprob: -15.500317573547363

Token 1035: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.00520707480609417
    2. 'te' → logprob: -5.505207061767578
    3. 'vite' → logprob: -7.505207061767578
    4. 'invite' → logprob: -8.130207061767578
    5. 'ate' → logprob: -9.880207061767578
    6. 'it' → logprob: -10.005207061767578
    7. 'inv' → logprob: -10.505207061767578
    8. 't' → logprob: -10.630207061767578
    9. 'mid' → logprob: -11.005207061767578
    10. '_inv' → logprob: -11.130207061767578

Token 1036: '(mid' (ID: 121498)
  Prédit: '(mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mid' → logprob: -1.1160349458805285e-05
    2. 'mid' → logprob: -11.500011444091797
    3. '[mid' → logprob: -14.375011444091797
    4. '
' → logprob: -16.125011444091797
    5. '(' → logprob: -16.750011444091797
    6. ' mid' → logprob: -17.000011444091797
    7. ')' → logprob: -17.125011444091797
    8. ' (' → logprob: -17.375011444091797
    9. '(
' → logprob: -18.000011444091797
    10. '(m' → logprob: -18.625011444091797

Token 1037: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0040793512016534805
    2. '):
' → logprob: -5.504079341888428
    3. ':' → logprob: -14.629079818725586
    4. ')' → logprob: -15.254079818725586
    5. ' ):' → logprob: -15.629079818725586
    6. '):
' → logprob: -16.379079818725586
    7. '}:' → logprob: -17.129079818725586
    8. '):

' → logprob: -18.129079818725586
    9. ']:' → logprob: -19.379079818725586
    10. ')):' → logprob: -20.254079818725586

Token 1038: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.930552313453518e-05
    2. ':' → logprob: -11.375049591064453
    3. ':
' → logprob: -11.500049591064453
    4. '```' → logprob: -11.500049591064453
    5. '                
' → logprob: -12.125049591064453
    6. '):
' → logprob: -12.875049591064453
    7. '           ' → logprob: -13.000049591064453
    8. '                   ' → logprob: -13.250049591064453
    9. ')' → logprob: -13.750049591064453
    10. '<|end|>' → logprob: -14.250049591064453

Token 1039: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.06054079905152321
    2. '               ' → logprob: -3.3105409145355225
    3. ' result' → logprob: -3.8105409145355225
    4. '           ' → logprob: -9.810541152954102
    5. '   ' → logprob: -10.185541152954102
    6. '
' → logprob: -11.060541152954102
    7. '       ' → logprob: -13.560541152954102
    8. '	result' → logprob: -14.060541152954102
    9. '                   ' → logprob: -14.685541152954102
    10. '```' → logprob: -14.935541152954102

Token 1040: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25192907452583313
    2. '=' → logprob: -1.5019290447235107
    3. ' =
' → logprob: -17.876928329467773
    4. '.=' → logprob: -18.876928329467773
    5. ' =)' → logprob: -19.251928329467773
    6. '=end' → logprob: -19.376928329467773
    7. '<|end|>' → logprob: -19.376928329467773
    8. '＝' → logprob: -19.501928329467773
    9. '=int' → logprob: -19.876928329467773
    10. '=k' → logprob: -20.001928329467773

Token 1041: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.1269282102584839
    2. 'mid' → logprob: -2.1269283294677734
    3. '[mid' → logprob: -17.001928329467773
    4. ' midpoint' → logprob: -17.376928329467773
    5. '(mid' → logprob: -17.501928329467773
    6. '_mid' → logprob: -18.501928329467773
    7. '.mid' → logprob: -19.626928329467773
    8. ' mids' → logprob: -21.126928329467773
    9. '           ' → logprob: -21.876928329467773
    10. ' middle' → logprob: -22.501928329467773

Token 1042: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0059811738319695
    2. '
' → logprob: -5.505980968475342
    3. '                
' → logprob: -6.755980968475342
    4. '           ' → logprob: -8.0059814453125
    5. '<|end|>' → logprob: -8.3809814453125
    6. '            
' → logprob: -9.8809814453125
    7. '                   ' → logprob: -10.6309814453125
    8. '                ' → logprob: -11.0059814453125
    9. '              ' → logprob: -11.6309814453125
    10. '  
' → logprob: -11.7559814453125

Token 1043: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011534631252288818
    2. '
' → logprob: -4.886534690856934
    3. '                
' → logprob: -5.636534690856934
    4. '           ' → logprob: -9.136534690856934
    5. '            
' → logprob: -9.386534690856934
    6. '<|end|>' → logprob: -10.011534690856934
    7. '    
' → logprob: -10.886534690856934
    8. '```' → logprob: -11.136534690856934
    9. '                    
' → logprob: -11.261534690856934
    10. ' 
' → logprob: -11.261534690856934

Token 1044: ' low' (ID: 4465)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' (adapté à ' low') → logprob: -0.12697744369506836
    2. ' low' → logprob: -2.1269774436950684
    3. '               ' → logprob: -10.251977920532227
    4. '.low' → logprob: -12.001977920532227
    5. '           ' → logprob: -12.876977920532227
    6. '
' → logprob: -13.126977920532227
    7. '(low' → logprob: -13.626977920532227
    8. '_low' → logprob: -13.751977920532227
    9. '                
' → logprob: -14.376977920532227
    10. ' 
' → logprob: -15.751977920532227

Token 1045: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014163747429847717
    2. ' =' → logprob: -4.264163970947266
    3. '+=' → logprob: -16.014163970947266
    4. '=
' → logprob: -17.889163970947266
    5. '<|end|>' → logprob: -18.014163970947266
    6. '=int' → logprob: -18.264163970947266
    7. '＝' → logprob: -18.514163970947266
    8. ',' → logprob: -18.639163970947266
    9. ' +=' → logprob: -18.764163970947266
    10. '+' → logprob: -18.889163970947266

Token 1046: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.0015023599844425917
    2. ' mid' → logprob: -6.501502513885498
    3. '[mid' → logprob: -17.501502990722656
    4. '(mid' → logprob: -18.376502990722656
    5. '_mid' → logprob: -19.751502990722656
    6. '.mid' → logprob: -22.626502990722656
    7. 'middle' → logprob: -24.126502990722656
    8. 'Mid' → logprob: -24.501502990722656
    9. 'MID' → logprob: -25.251502990722656
    10. ' midpoint' → logprob: -25.626502990722656

Token 1047: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38688933849334717
    2. ' +' → logprob: -1.1368893384933472
    3. '=' → logprob: -11.636889457702637
    4. ' =' → logprob: -12.886889457702637
    5. ' ' → logprob: -13.511889457702637
    6. 'mid' → logprob: -13.761889457702637
    7. '(mid' → logprob: -13.761889457702637
    8. '1' → logprob: -13.886889457702637
    9. '[mid' → logprob: -14.886889457702637
    10. '
' → logprob: -15.136889457702637

Token 1048: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '```' → logprob: -20.625
    4. '   ' → logprob: -22.5
    5. '
' → logprob: -23.875
    6. '۱' → logprob: -24.375
    7. '<|end|>' → logprob: -25.625
    8. '-' → logprob: -25.75
    9. '``' → logprob: -26.0
    10. '１' → logprob: -26.0

Token 1049: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008188883773982525
    2. '
' → logprob: -5.133188724517822
    3. 'else' → logprob: -6.633188724517822
    4. ' else' → logprob: -8.38318920135498
    5. '<|end|>' → logprob: -8.38318920135498
    6. '       ' → logprob: -8.50818920135498
    7. '            
' → logprob: -9.25818920135498
    8. '```' → logprob: -9.63318920135498
    9. '               ' → logprob: -10.00818920135498
    10. 'high' → logprob: -11.00818920135498

Token 1050: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001418207655660808
    2. 'else' → logprob: -6.626418113708496
    3. ' else' → logprob: -9.876418113708496
    4. '```' → logprob: -11.001418113708496
    5. 'high' → logprob: -11.876418113708496
    6. '
' → logprob: -12.126418113708496
    7. '       ' → logprob: -12.251418113708496
    8. ' high' → logprob: -13.376418113708496
    9. '<|end|>' → logprob: -13.376418113708496
    10. '               ' → logprob: -13.501418113708496

Token 1051: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.018143747001886368
    2. ' else' → logprob: -4.143143653869629
    3. '           ' → logprob: -6.518143653869629
    4. '       ' → logprob: -7.518143653869629
    5. '
' → logprob: -10.143143653869629
    6. '```' → logprob: -10.643143653869629
    7. 'high' → logprob: -12.018143653869629
    8. ':
' → logprob: -12.518143653869629
    9. '   ' → logprob: -12.518143653869629
    10. '               ' → logprob: -13.018143653869629

Token 1052: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7950679659843445
    2. '               ' → logprob: -0.9200679659843445
    3. ':' → logprob: -1.9200680255889893
    4. '<|end|>' → logprob: -6.79506778717041
    5. '           ' → logprob: -7.04506778717041
    6. '):
' → logprob: -8.54506778717041
    7. '```' → logprob: -8.67006778717041
    8. '       ' → logprob: -8.92006778717041
    9. '
' → logprob: -9.04506778717041
    10. '                   ' → logprob: -9.29506778717041

Token 1053: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09104333817958832
    2. ' high' → logprob: -2.46604323387146
    3. 'high' → logprob: -6.216043472290039
    4. '   ' → logprob: -9.466043472290039
    5. '           ' → logprob: -10.966043472290039
    6. '       ' → logprob: -12.841043472290039
    7. '
' → logprob: -13.216043472290039
    8. '                   ' → logprob: -13.216043472290039
    9. '(high' → logprob: -13.841043472290039
    10. '.high' → logprob: -14.841043472290039

Token 1054: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' (adapté à ' high') → logprob: -0.01815052703022957
    2. ' high' → logprob: -4.018150329589844
    3. '               ' → logprob: -14.268150329589844
    4. '.high' → logprob: -17.518150329589844
    5. '_high' → logprob: -18.268150329589844
    6. 'High' → logprob: -18.268150329589844
    7. '
' → logprob: -18.268150329589844
    8. '(high' → logprob: -18.518150329589844
    9. '   ' → logprob: -18.643150329589844
    10. '           ' → logprob: -19.018150329589844

Token 1055: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023245595395565033
    2. ' =' → logprob: -3.7732455730438232
    3. '=
' → logprob: -17.148244857788086
    4. '<|end|>' → logprob: -19.523244857788086
    5. '=}' → logprob: -19.648244857788086
    6. '＝' → logprob: -19.648244857788086
    7. '=end' → logprob: -19.898244857788086
    8. '            ' → logprob: -20.398244857788086
    9. '=cut' → logprob: -20.648244857788086
    10. '.=' → logprob: -20.773244857788086

Token 1056: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.00033546582562848926
    2. ' mid' → logprob: -8.000335693359375
    3. '[mid' → logprob: -17.750335693359375
    4. '(mid' → logprob: -17.750335693359375
    5. '_mid' → logprob: -19.375335693359375
    6. '.mid' → logprob: -20.875335693359375
    7. 'middle' → logprob: -21.625335693359375
    8. '           ' → logprob: -22.375335693359375
    9. '   ' → logprob: -22.500335693359375
    10. 'midt' → logprob: -23.125335693359375

Token 1057: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.34855324029922485
    2. '-' → logprob: -1.22355318069458
    3. '       ' → logprob: -10.598553657531738
    4. '           ' → logprob: -11.223553657531738
    5. '=' → logprob: -11.223553657531738
    6. '-token' → logprob: -11.223553657531738
    7. '               ' → logprob: -11.723553657531738
    8. ' ' → logprob: -11.723553657531738
    9. '         ' → logprob: -12.098553657531738
    10. '   ' → logprob: -12.223553657531738

Token 1058: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '```' → logprob: -19.25
    4. '   ' → logprob: -22.375
    5. '=' → logprob: -22.75
    6. '+' → logprob: -23.0
    7. '۱' → logprob: -23.125
    8. '0' → logprob: -23.125
    9. '
' → logprob: -23.5
    10. '<|end|>' → logprob: -24.125

Token 1059: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5260657072067261
    2. '
' → logprob: -0.9010657072067261
    3. '        
' → logprob: -6.526065826416016
    4. 'return' → logprob: -7.151065826416016
    5. ' return' → logprob: -7.526065826416016
    6. '
' → logprob: -9.776065826416016
    7. '<|end|>' → logprob: -10.401065826416016
    8. '    
' → logprob: -10.651065826416016
    9. '  
' → logprob: -11.276065826416016
    10. '```' → logprob: -12.276065826416016

Token 1060: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001254693343071267
    2. 'return' → logprob: -9.500125885009766
    3. '```' → logprob: -10.250125885009766
    4. ' return' → logprob: -11.375125885009766
    5. '<|end|>' → logprob: -13.625125885009766
    6. '   ' → logprob: -14.375125885009766
    7. '	return' → logprob: -14.500125885009766
    8. '        
' → logprob: -15.000125885009766
    9. '           ' → logprob: -15.125125885009766
    10. '
' → logprob: -15.250125885009766

Token 1061: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005328505299985409
    2. 'return' (adapté à ' return') → logprob: -5.25532865524292
    3. '   ' → logprob: -9.505328178405762
    4. ' return' → logprob: -10.880328178405762
    5. '           ' → logprob: -14.130328178405762
    6. '
' → logprob: -14.630328178405762
    7. '```' → logprob: -16.130329132080078
    8. '	return' → logprob: -16.505329132080078
    9. '      ' → logprob: -17.255329132080078
    10. '        
' → logprob: -17.255329132080078

Token 1062: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.029750484973192215
    2. ' result' → logprob: -3.5297505855560303
    3. '   ' → logprob: -18.52975082397461
    4. '       ' → logprob: -19.27975082397461
    5. '	result' → logprob: -19.65475082397461
    6. '(result' → logprob: -19.77975082397461
    7. '=result' → logprob: -20.52975082397461
    8. '[result' → logprob: -20.52975082397461
    9. 'self' → logprob: -20.77975082397461
    10. '```' → logprob: -21.27975082397461

Token 1063: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1064: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1065: ' Input' (ID: 10090)
  Prédit: 'Friend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Friend' → logprob: -0.6719285845756531
    2. 'Range' → logprob: -1.5469286441802979
    3. 'Solution' → logprob: -2.796928644180298
    4. 'Party' → logprob: -3.046928644180298
    5. ' Friend' → logprob: -3.421928644180298
    6. 'Event' → logprob: -3.421928644180298
    7. ' Solution' → logprob: -3.796928644180298
    8. 'User' → logprob: -4.171928405761719
    9. ' Range' → logprob: -4.296928405761719
    10. 'Invitation' → logprob: -4.546928405761719

Token 1066: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -0.6778437495231628
    2. 'Handler' → logprob: -1.4278438091278076
    3. 'Reader' → logprob: -2.1778438091278076
    4. ':' → logprob: -2.8028438091278076
    5. 'Processor' → logprob: -4.0528435707092285
    6. ':
' → logprob: -4.5528435707092285
    7. '():
' → logprob: -4.6778435707092285
    8. '():' → logprob: -4.8028435707092285
    9. 'Buffer' → logprob: -6.0528435707092285
    10. '_parser' → logprob: -6.0528435707092285

Token 1067: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00195444468408823
    2. ':
' → logprob: -6.251954555511475
    3. ':def' → logprob: -12.126954078674316
    4. '():' → logprob: -12.376954078674316
    5. '(object' → logprob: -12.376954078674316
    6. '<|end|>' → logprob: -12.501954078674316
    7. '):' → logprob: -12.876954078674316
    8. '```' → logprob: -13.626954078674316
    9. ':

' → logprob: -14.001954078674316
    10. '(' → logprob: -14.126954078674316

Token 1068: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011124740121886134
    2. ' def' → logprob: -7.751112461090088
    3. 'def' → logprob: -7.876112461090088
    4. '```' → logprob: -8.501112937927246
    5. 'class' → logprob: -10.126112937927246
    6. ':' → logprob: -10.876112937927246
    7. '<|end|>' → logprob: -10.876112937927246
    8. '    
' → logprob: -11.751112937927246
    9. '    ' → logprob: -12.376112937927246
    10. '	def' → logprob: -13.626112937927246

Token 1069: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.022666683420538902
    2. ' def' → logprob: -4.0226664543151855
    3. '   ' → logprob: -5.5226664543151855
    4. 'class' → logprob: -7.6476664543151855
    5. '```' → logprob: -10.897666931152344
    6. 'staticmethod' → logprob: -11.522666931152344
    7. '@' → logprob: -12.772666931152344
    8. 'classmethod' → logprob: -13.397666931152344
    9. '	def' → logprob: -14.397666931152344
    10. ':def' → logprob: -15.022666931152344

Token 1070: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07771947234869003
    2. 'init' → logprob: -2.7027194499969482
    3. ' __' → logprob: -5.702719688415527
    4. 'staticmethod' → logprob: -5.952719688415527
    5. 'def' → logprob: -6.827719688415527
    6. '_init' → logprob: -7.577719688415527
    7. '```' → logprob: -9.452719688415527
    8. '___' → logprob: -9.452719688415527
    9. 'parse' → logprob: -10.827719688415527
    10. '__
' → logprob: -11.327719688415527

Token 1071: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.1008713702030946e-06
    2. '__' → logprob: -14.375001907348633
    3. 'new' → logprob: -14.500001907348633
    4. 'iter' → logprob: -14.500001907348633
    5. '```' → logprob: -16.250001907348633
    6. 'int' → logprob: -16.375001907348633
    7. 'nit' → logprob: -16.750001907348633
    8. 'it' → logprob: -16.750001907348633
    9. ' init' → logprob: -16.750001907348633
    10. 'Init' → logprob: -17.250001907348633

Token 1072: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.040223684161901474
    2. '(' → logprob: -3.4152235984802246
    3. '__(' → logprob: -5.915223598480225
    4. 'self' → logprob: -6.915223598480225
    5. '(object' → logprob: -7.165223598480225
    6. '(
' → logprob: -7.915223598480225
    7. '<|end|>' → logprob: -8.040224075317383
    8. ' (' → logprob: -8.415224075317383
    9. '__(
' → logprob: -8.665224075317383
    10. ',' → logprob: -8.915224075317383

Token 1073: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006728782900609076
    2. ')' → logprob: -7.375672817230225
    3. '):
' → logprob: -11.000673294067383
    4. '):' → logprob: -11.125673294067383
    5. ' self' → logprob: -11.750673294067383
    6. '
' → logprob: -12.250673294067383
    7. '   ' → logprob: -14.750673294067383
    8. '(self' → logprob: -15.125673294067383
    9. '	self' → logprob: -15.125673294067383
    10. ').__' → logprob: -15.125673294067383

Token 1074: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02415831759572029
    2. '):' → logprob: -4.024158477783203
    3. '):
' → logprob: -5.274158477783203
    4. 'self' → logprob: -7.399158477783203
    5. '<|end|>' → logprob: -10.024158477783203
    6. '   ' → logprob: -10.524158477783203
    7. ',input' → logprob: -10.649158477783203
    8. '(self' → logprob: -10.899158477783203
    9. '<|end|>' → logprob: -10.899158477783203
    10. ',self' → logprob: -11.274158477783203

Token 1075: ' input' (ID: 3422)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0724949836730957
    2. 'input' → logprob: -3.0724949836730957
    3. ')' → logprob: -4.822494983673096
    4. 'lines' → logprob: -4.822494983673096
    5. '):' → logprob: -5.447494983673096
    6. '):
' → logprob: -6.572494983673096
    7. 'text' → logprob: -7.947494983673096
    8. 'data' → logprob: -7.947494983673096
    9. 'source' → logprob: -8.072494506835938
    10. 'raw' → logprob: -8.322494506835938

Token 1076: '_lines' (ID: 42980)
  Prédit: '_data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.5630812644958496
    2. '_str' → logprob: -1.4380812644958496
    3. '_lines' → logprob: -2.0630812644958496
    4. '_string' → logprob: -3.4380812644958496
    5. '_text' → logprob: -3.8130812644958496
    6. '):
' → logprob: -5.68808126449585
    7. '):' → logprob: -6.06308126449585
    8. ':' → logprob: -6.81308126449585
    9. '_source' → logprob: -7.18808126449585
    10. 'data' → logprob: -7.43808126449585

Token 1077: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.38219091296195984
    2. '):' → logprob: -1.3821909427642822
    3. ':' → logprob: -2.7571909427642822
    4. '=None' → logprob: -6.132190704345703
    5. '=' → logprob: -8.007190704345703
    6. '=[]' → logprob: -8.507190704345703
    7. '   ' → logprob: -8.882190704345703
    8. ':list' → logprob: -9.382190704345703
    9. '):
' → logprob: -10.007190704345703
    10. ')' → logprob: -10.007190704345703

Token 1078: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03129606693983078
    2. '   ' → logprob: -3.9062960147857666
    3. 'self' → logprob: -4.906296253204346
    4. 'def' → logprob: -5.906296253204346
    5. '```' → logprob: -8.156295776367188
    6. ' self' → logprob: -8.906295776367188
    7. '<|end|>' → logprob: -10.781295776367188
    8. '[' → logprob: -10.906295776367188
    9. '        
' → logprob: -11.031295776367188
    10. '
' → logprob: -11.406295776367188

Token 1079: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00013715129171032459
    2. '       ' → logprob: -9.000137329101562
    3. ' self' → logprob: -11.250137329101562
    4. 'def' → logprob: -14.875137329101562
    5. '   ' → logprob: -15.875137329101562
    6. '	self' → logprob: -16.375137329101562
    7. 'import' → logprob: -16.625137329101562
    8. '(self' → logprob: -17.125137329101562
    9. '[self' → logprob: -17.875137329101562
    10. '
' → logprob: -18.875137329101562

Token 1080: '.lines' (ID: 96601)
  Prédit: '.input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -0.0005375436157919466
    2. '.lines' → logprob: -7.625537395477295
    3. '.' → logprob: -10.500537872314453
    4. '.data' → logprob: -12.125537872314453
    5. 'input' → logprob: -12.625537872314453
    6. '.raw' → logprob: -12.875537872314453
    7. '.output' → logprob: -13.375537872314453
    8. '.token' → logprob: -13.500537872314453
    9. '=input' → logprob: -13.500537872314453
    10. '.inputs' → logprob: -13.500537872314453

Token 1081: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012011312879621983
    2. ' =' → logprob: -5.887011528015137
    3. '.' → logprob: -6.012011528015137
    4. '.append' → logprob: -6.012011528015137
    5. '=self' → logprob: -6.637011528015137
    6. '.extend' → logprob: -7.262011528015137
    7. '.pop' → logprob: -7.387011528015137
    8. '=[]' → logprob: -8.512011528015137
    9. '.readline' → logprob: -8.637011528015137
    10. '[self' → logprob: -8.762011528015137

Token 1082: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00016432604752480984
    2. 'iter' → logprob: -8.750164031982422
    3. ' input' → logprob: -12.250164031982422
    4. '[input' → logprob: -13.875164031982422
    5. ' iter' → logprob: -17.125164031982422
    6. '(input' → logprob: -17.875164031982422
    7. 'list' → logprob: -17.875164031982422
    8. '   ' → logprob: -18.250164031982422
    9. 'iterator' → logprob: -18.875164031982422
    10. '<input' → logprob: -18.875164031982422

Token 1083: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0024096618872135878
    2. '_tokens' → logprob: -6.8774094581604
    3. '```' → logprob: -8.627409934997559
    4. '[' → logprob: -9.002409934997559
    5. '_' → logprob: -9.127409934997559
    6. 'lines' → logprob: -9.377409934997559
    7. 'def' → logprob: -9.627409934997559
    8. '_iterator' → logprob: -9.877409934997559
    9. '_pointer' → logprob: -9.877409934997559
    10. '_index' → logprob: -10.002409934997559

Token 1084: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6557888984680176
    2. 'def' → logprob: -0.7807888984680176
    3. '
' → logprob: -4.905788898468018
    4. ' def' → logprob: -5.155788898468018
    5. '```' → logprob: -6.030788898468018
    6. '<|end|>' → logprob: -6.280788898468018
    7. '	def' → logprob: -6.405788898468018
    8. '[' → logprob: -6.655788898468018
    9. ':' → logprob: -6.905788898468018
    10. '[
' → logprob: -8.03078842163086

Token 1085: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3565603196620941
    2. 'def' → logprob: -1.2315603494644165
    3. ' def' → logprob: -5.731560230255127
    4. '
' → logprob: -5.731560230255127
    5. '	def' → logprob: -7.106560230255127
    6. '```' → logprob: -8.231560707092285
    7. 'self' → logprob: -8.356560707092285
    8. '       ' → logprob: -8.981560707092285
    9. '    
' → logprob: -9.856560707092285
    10. '<|end|>' → logprob: -10.981560707092285

Token 1086: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.15776246786117554
    2. 'def' → logprob: -2.1577625274658203
    3. '   ' → logprob: -3.6577625274658203
    4. '       ' → logprob: -5.40776252746582
    5. '
' → logprob: -10.15776252746582
    6. ' self' → logprob: -10.28276252746582
    7. ' def' → logprob: -11.40776252746582
    8. '```' → logprob: -12.40776252746582
    9. '	self' → logprob: -12.90776252746582
    10. '	def' → logprob: -15.15776252746582

Token 1087: '.index' (ID: 9736)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.23030439019203186
    2. '_index' → logprob: -1.7303043603897095
    3. 'current' → logprob: -3.730304479598999
    4. '_current' → logprob: -5.98030424118042
    5. 'pos' → logprob: -6.73030424118042
    6. '_pointer' → logprob: -8.355304718017578
    7. '_pos' → logprob: -8.730304718017578
    8. 'pointer' → logprob: -9.355304718017578
    9. '.index' → logprob: -9.480304718017578
    10. '_idx' → logprob: -9.855304718017578

Token 1088: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3471686840057373
    2. '+=' → logprob: -1.5971686840057373
    3. ' +=' → logprob: -2.7221686840057373
    4. ' =' → logprob: -3.7221686840057373
    5. '<|end|>' → logprob: -8.472168922424316
    6. '+' → logprob: -8.847168922424316
    7. '   ' → logprob: -9.097168922424316
    8. '```' → logprob: -9.222168922424316
    9. '_tokens' → logprob: -9.597168922424316
    10. 'self' → logprob: -9.597168922424316

Token 1089: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '۰' → logprob: -21.75
    4. '=' → logprob: -22.75
    5. '```' → logprob: -23.125
    6. '   ' → logprob: -23.125
    7. '<|end|>' → logprob: -23.5
    8. 'self' → logprob: -24.625
    9. '[' → logprob: -25.625
    10. '
' → logprob: -25.875

Token 1090: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '1' → logprob: -19.5
    4. '=' → logprob: -21.375
    5. '۰' → logprob: -21.375
    6. '   ' → logprob: -22.375
    7. '<|end|>' → logprob: -23.125
    8. '```' → logprob: -23.5
    9. '000' → logprob: -23.875
    10. 'self' → logprob: -23.875

Token 1091: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008396248333156109
    2. 'def' → logprob: -4.883396148681641
    3. '    
' → logprob: -7.883396148681641
    4. '
' → logprob: -8.38339614868164
    5. ' def' → logprob: -8.75839614868164
    6. '```' → logprob: -11.38339614868164
    7. '        
' → logprob: -12.13339614868164
    8. '	def' → logprob: -12.50839614868164
    9. '<|end|>' → logprob: -12.88339614868164
    10. ' 
' → logprob: -14.25839614868164

Token 1092: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019981389865279198
    2. 'def' → logprob: -4.019981384277344
    3. '    
' → logprob: -7.394981384277344
    4. ' def' → logprob: -7.644981384277344
    5. '
' → logprob: -7.644981384277344
    6. '```' → logprob: -8.394981384277344
    7. '<|end|>' → logprob: -11.269981384277344
    8. '        
' → logprob: -12.144981384277344
    9. '	def' → logprob: -12.894981384277344
    10. '  
' → logprob: -13.144981384277344

Token 1093: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0001737431448418647
    2. ' def' → logprob: -8.875173568725586
    3. '   ' → logprob: -10.625173568725586
    4. '```' → logprob: -11.625173568725586
    5. '	def' → logprob: -15.500173568725586
    6. 'de' → logprob: -15.750173568725586
    7. 'next' → logprob: -16.375173568725586
    8. ':def' → logprob: -16.875173568725586
    9. '
' → logprob: -17.000173568725586
    10. '``' → logprob: -17.750173568725586

Token 1094: ' readline' (ID: 179561)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'has' → logprob: -0.009839191101491451
    2. 'next' → logprob: -5.009839057922363
    3. 'read' → logprob: -6.009839057922363
    4. ' has' → logprob: -7.509839057922363
    5. 'def' → logprob: -9.884839057922363
    6. '_has' → logprob: -10.634839057922363
    7. '_next' → logprob: -11.259839057922363
    8. 'get' → logprob: -11.509839057922363
    9. '__' → logprob: -12.134839057922363
    10. 'have' → logprob: -12.134839057922363

Token 1095: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.013606603257358074
    2. '()' → logprob: -4.513606548309326
    3. '(' → logprob: -6.013606548309326
    4. 'self' → logprob: -9.763607025146484
    5. 'def' → logprob: -11.513607025146484
    6. '(
' → logprob: -11.638607025146484
    7. '<|end|>' → logprob: -11.763607025146484
    8. '():
' → logprob: -12.263607025146484
    9. '():' → logprob: -12.763607025146484
    10. '[self' → logprob: -13.013607025146484

Token 1096: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16471518576145172
    2. '):
' → logprob: -2.16471529006958
    3. ')' → logprob: -3.41471529006958
    4. 'self' → logprob: -5.53971529006958
    5. '(self' → logprob: -9.164714813232422
    6. ' ):' → logprob: -10.039714813232422
    7. '()' → logprob: -10.539714813232422
    8. '():' → logprob: -10.539714813232422
    9. '):

' → logprob: -11.539714813232422
    10. '():
' → logprob: -11.539714813232422

Token 1097: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04189424589276314
    2. 'return' → logprob: -3.5418941974639893
    3. ' return' → logprob: -4.541894435882568
    4. '        
' → logprob: -6.916894435882568
    5. '```' → logprob: -8.91689395904541
    6. '<|end|>' → logprob: -9.29189395904541
    7. 'self' → logprob: -9.79189395904541
    8. '	return' → logprob: -10.66689395904541
    9. '   ' → logprob: -10.91689395904541
    10. '{return' → logprob: -11.04189395904541

Token 1098: ' line' (ID: 2543)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0018282189266756177
    2. 'if' → logprob: -7.126828193664551
    3. ' return' → logprob: -7.126828193664551
    4. '       ' → logprob: -8.62682819366455
    5. 'self' → logprob: -10.50182819366455
    6. '```' → logprob: -11.62682819366455
    7. ' if' → logprob: -13.50182819366455
    8. '{return' → logprob: -13.62682819366455
    9. '	return' → logprob: -13.87682819366455
    10. '        
' → logprob: -15.12682819366455

Token 1099: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1689525693655014
    2. ' =' → logprob: -2.543952465057373
    3. '()' → logprob: -3.168952465057373
    4. '=self' → logprob: -4.668952465057373
    5. '       ' → logprob: -4.918952465057373
    6. '_tokens' → logprob: -5.918952465057373
    7. '[self' → logprob: -6.168952465057373
    8. '()
' → logprob: -6.293952465057373
    9. '(self' → logprob: -6.293952465057373
    10. '<|end|>' → logprob: -6.293952465057373

Token 1100: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0025322602596133947
    2. ' self' → logprob: -6.002532482147217
    3. '""' → logprob: -10.127532005310059
    4. 'None' → logprob: -11.627532005310059
    5. '''' → logprob: -12.002532005310059
    6. '(self' → logprob: -14.377532005310059
    7. '   ' → logprob: -15.002532005310059
    8. '
' → logprob: -15.127532005310059
    9. ' None' → logprob: -15.627532005310059
    10. ' ' → logprob: -16.127532958984375

Token 1101: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.05192919075489044
    2. 'self' → logprob: -3.051929235458374
    3. 's' → logprob: -6.801928997039795
    4. '[self' → logprob: -7.051928997039795
    5. 'lines' → logprob: -7.176928997039795
    6. ' self' → logprob: -8.301929473876953
    7. '_lines' → logprob: -9.051929473876953
    8. '   ' → logprob: -9.926929473876953
    9. ' lines' → logprob: -10.051929473876953
    10. '.' → logprob: -10.051929473876953

Token 1102: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -2.8444881536415778e-05
    2. 'self' → logprob: -10.500028610229492
    3. '[' → logprob: -14.500028610229492
    4. ' self' → logprob: -15.875028610229492
    5. '(self' → logprob: -16.125028610229492
    6. '       ' → logprob: -17.000028610229492
    7. '	self' → logprob: -17.125028610229492
    8. '   ' → logprob: -17.500028610229492
    9. '```' → logprob: -18.250028610229492
    10. '.pop' → logprob: -18.500028610229492

Token 1103: '.index' (ID: 9736)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.47492700815200806
    2. 'self' → logprob: -0.9749270081520081
    3. ' self' → logprob: -7.099926948547363
    4. '	self' → logprob: -11.099926948547363
    5. '
' → logprob: -12.974926948547363
    6. '   ' → logprob: -13.724926948547363
    7. '```' → logprob: -13.724926948547363
    8. ',self' → logprob: -13.974926948547363
    9. ':self' → logprob: -14.224926948547363
    10. 'elf' → logprob: -14.599926948547363

Token 1104: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.18304528295993805
    2. ']' → logprob: -1.8080452680587769
    3. '].' → logprob: -5.808045387268066
    4. 'self' → logprob: -9.433045387268066
    5. '];' → logprob: -9.433045387268066
    6. '[self' → logprob: -9.808045387268066
    7. '
' → logprob: -9.933045387268066
    8. ']
' → logprob: -11.933045387268066
    9. '])
' → logprob: -12.558045387268066
    10. '       ' → logprob: -13.183045387268066

Token 1105: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5275970101356506
    2. '       ' → logprob: -1.1525969505310059
    3. '
' → logprob: -2.527596950531006
    4. '```' → logprob: -5.027596950531006
    5. ' self' → logprob: -5.402596950531006
    6. '        
' → logprob: -7.027596950531006
    7. '[self' → logprob: -7.027596950531006
    8. '(self' → logprob: -7.777596950531006
    9. '<|end|>' → logprob: -8.527597427368164
    10. '           ' → logprob: -8.902597427368164

Token 1106: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0001847062085289508
    2. '       ' → logprob: -9.000185012817383
    3. ' self' → logprob: -9.750185012817383
    4. '
' → logprob: -13.125185012817383
    5. '(self' → logprob: -15.375185012817383
    6. '[self' → logprob: -15.500185012817383
    7. '	self' → logprob: -15.500185012817383
    8. '```' → logprob: -15.625185012817383
    9. '        
' → logprob: -16.500185012817383
    10. '=self' → logprob: -17.250185012817383

Token 1107: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.12773585319519043
    2. 'index' → logprob: -2.1277358531951904
    3. '_index' → logprob: -8.25273609161377
    4. '=index' → logprob: -8.25273609161377
    5. ' index' → logprob: -9.37773609161377
    6. '.' → logprob: -9.50273609161377
    7. '[index' → logprob: -9.87773609161377
    8. ':index' → logprob: -10.62773609161377
    9. '	index' → logprob: -10.87773609161377
    10. '@index' → logprob: -11.62773609161377

Token 1108: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.003179855877533555
    2. ' +=' → logprob: -5.753180027008057
    3. '+' → logprob: -13.503179550170898
    4. ']+=' → logprob: -14.753179550170898
    5. '+="' → logprob: -16.0031795501709
    6. '=' → logprob: -16.3781795501709
    7. '+='' → logprob: -16.8781795501709
    8. '   ' → logprob: -17.3781795501709
    9. '```' → logprob: -17.7531795501709
    10. '+=(' → logprob: -18.2531795501709

Token 1109: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '```' → logprob: -22.5
    4. '   ' → logprob: -23.375
    5. '
' → logprob: -24.5
    6. '۱' → logprob: -25.75
    7. '１' → logprob: -26.0
    8. '+' → logprob: -26.125
    9. '१' → logprob: -26.875
    10. '=' → logprob: -27.0

Token 1110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -20.75
    3. '```' → logprob: -23.375
    4. '１' → logprob: -24.5
    5. '१' → logprob: -25.625
    6. '۱' → logprob: -25.625
    7. '১' → logprob: -25.875
    8. '   ' → logprob: -25.875
    9. '=' → logprob: -26.125
    10. '-' → logprob: -26.125

Token 1111: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4017758071422577
    2. '       ' → logprob: -1.15177583694458
    3. '
' → logprob: -4.90177583694458
    4. ' return' → logprob: -5.27677583694458
    5. '        
' → logprob: -6.40177583694458
    6. '```' → logprob: -9.026775360107422
    7. '<|end|>' → logprob: -9.526775360107422
    8. '   ' → logprob: -9.776775360107422
    9. '\n' → logprob: -10.151775360107422
    10. '    
' → logprob: -10.276775360107422

Token 1112: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5343888401985168
    2. '       ' → logprob: -0.9093888401985168
    3. ' return' → logprob: -5.034389019012451
    4. '        
' → logprob: -6.409389019012451
    5. '
' → logprob: -6.534389019012451
    6. '   ' → logprob: -7.034389019012451
    7. '    
' → logprob: -8.534388542175293
    8. '```' → logprob: -8.909388542175293
    9. '  
' → logprob: -9.159388542175293
    10. '	return' → logprob: -9.159388542175293

Token 1113: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0026777987368404865
    2. '       ' → logprob: -6.502677917480469
    3. ' return' → logprob: -6.752677917480469
    4. '
' → logprob: -12.627677917480469
    5. '	return' → logprob: -13.627677917480469
    6. 'line' → logprob: -13.752677917480469
    7. '{return' → logprob: -14.502677917480469
    8. ':return' → logprob: -15.127677917480469
    9. '```' → logprob: -15.252677917480469
    10. '   ' → logprob: -16.25267791748047

Token 1114: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -2.15310683415737e-05
    2. ' line' → logprob: -10.750021934509277
    3. 'self' → logprob: -25.00002098083496
    4. '	line' → logprob: -25.12502098083496
    5. '(line' → logprob: -25.25002098083496
    6. '#line' → logprob: -25.37502098083496
    7. '_line' → logprob: -26.00002098083496
    8. '=line' → logprob: -26.75002098083496
    9. 'Line' → logprob: -27.00002098083496
    10. '[line' → logprob: -27.12502098083496

Token 1115: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.4566022157669067
    2. '<|end|>' → logprob: -1.5816022157669067
    3. '```' → logprob: -1.5816022157669067
    4. '   ' → logprob: -1.7066022157669067
    5. 'def' → logprob: -1.9566022157669067
    6. '    
' → logprob: -3.706602096557617
    7. '<|end|>' → logprob: -5.956602096557617
    8. '  
' → logprob: -7.081602096557617
    9. '        
' → logprob: -7.081602096557617
    10. '``' → logprob: -7.331602096557617

Token 1116: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.010151968337595463
    2. '   ' → logprob: -5.5101518630981445
    3. '```' → logprob: -5.6351518630981445
    4. 'class' → logprob: -6.1351518630981445
    5. '
' → logprob: -8.260151863098145
    6. 'import' → logprob: -10.760151863098145
    7. ' def' → logprob: -10.885151863098145
    8. 'from' → logprob: -11.510151863098145
    9. '    
' → logprob: -12.385151863098145
    10. '	def' → logprob: -13.135151863098145

Token 1117: ' Problem' (ID: 26113)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Output' → logprob: -0.5112069845199585
    2. 'Solution' → logprob: -1.0112069845199585
    3. 'Friend' → logprob: -4.511207103729248
    4. 'Range' → logprob: -4.886207103729248
    5. 'Test' → logprob: -5.011207103729248
    6. 'Problem' → logprob: -6.136207103729248
    7. 'Main' → logprob: -6.136207103729248
    8. 'Event' → logprob: -6.386207103729248
    9. 'Solver' → logprob: -6.386207103729248
    10. 'Input' → logprob: -6.511207103729248

Token 1118: 'BS' (ID: 11068)
  Prédit: 'Solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -0.7710891962051392
    2. ':' → logprob: -1.3960891962051392
    3. ':
' → logprob: -1.5210891962051392
    4. 'Solution' → logprob: -3.6460890769958496
    5. 'Definition' → logprob: -4.52108907699585
    6. 'Input' → logprob: -4.77108907699585
    7. 'Statement' → logprob: -5.14608907699585
    8. '):
' → logprob: -5.14608907699585
    9. 'Parser' → logprob: -5.27108907699585
    10. '():
' → logprob: -6.14608907699585

Token 1119: 'olver' (ID: 13941)
  Prédit: 'olver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olver' → logprob: -0.10379624366760254
    2. 'olution' → logprob: -2.3537962436676025
    3. 'olve' → logprob: -5.728796005249023
    4. 't' → logprob: -8.603796005249023
    5. 'ol' → logprob: -10.228796005249023
    6. '```' → logprob: -10.353796005249023
    7. 'ub' → logprob: -10.978796005249023
    8. 'erializer' → logprob: -11.978796005249023
    9. 'ubmit' → logprob: -12.103796005249023
    10. 'canner' → logprob: -12.228796005249023

Token 1120: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002810225123539567
    2. ':
' → logprob: -5.877810001373291
    3. ':def' → logprob: -13.62781047821045
    4. ':

' → logprob: -13.87781047821045
    5. '<|end|>' → logprob: -14.37781047821045
    6. 'class' → logprob: -14.50281047821045
    7. ' :' → logprob: -14.75281047821045
    8. '```' → logprob: -14.87781047821045
    9. '>:' → logprob: -15.25281047821045
    10. '):' → logprob: -15.75281047821045

Token 1121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009028852917253971
    2. ':' → logprob: -5.509028911590576
    3. 'class' → logprob: -6.259028911590576
    4. 'def' → logprob: -6.384028911590576
    5. ':
' → logprob: -7.384028911590576
    6. ' def' → logprob: -7.634028911590576
    7. '```' → logprob: -8.884028434753418
    8. ':def' → logprob: -10.759028434753418
    9. ' class' → logprob: -10.884028434753418
    10. '<|end|>' → logprob: -11.134028434753418

Token 1122: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.2430718094110489
    2. '   ' → logprob: -1.6180717945098877
    3. '```' → logprob: -4.868072032928467
    4. 'class' → logprob: -4.993072032928467
    5. ' def' → logprob: -6.743072032928467
    6. ':' → logprob: -7.868072032928467
    7. ':
' → logprob: -8.243071556091309
    8. '__' → logprob: -8.493071556091309
    9. '``' → logprob: -8.868071556091309
    10. '
' → logprob: -8.993071556091309

Token 1123: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10663755983114243
    2. 'init' → logprob: -2.356637477874756
    3. 'def' → logprob: -5.106637477874756
    4. '_init' → logprob: -8.606637954711914
    5. ' __' → logprob: -9.481637954711914
    6. '```' → logprob: -9.481637954711914
    7. '___' → logprob: -12.106637954711914
    8. 'solve' → logprob: -12.356637954711914
    9. 'staticmethod' → logprob: -12.856637954711914
    10. '.__' → logprob: -13.231637954711914

Token 1124: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.0280383548888494e-06
    2. '__' → logprob: -14.000000953674316
    3. 'new' → logprob: -15.875000953674316
    4. 'int' → logprob: -17.125001907348633
    5. ' init' → logprob: -17.500001907348633
    6. '_init' → logprob: -19.250001907348633
    7. 'Init' → logprob: -19.500001907348633
    8. 'def' → logprob: -19.875001907348633
    9. ' __' → logprob: -20.125001907348633
    10. 'call' → logprob: -20.250001907348633

Token 1125: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.03495609760284424
    2. '(self' → logprob: -3.7849559783935547
    3. '__(
' → logprob: -4.659955978393555
    4. '__' → logprob: -6.659955978393555
    5. 'class' → logprob: -7.784955978393555
    6. '(' → logprob: -8.909955978393555
    7. ' (' → logprob: -8.909955978393555
    8. '__((' → logprob: -9.909955978393555
    9. 'self' → logprob: -10.284955978393555
    10. '(
' → logprob: -10.534955978393555

Token 1126: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.306760805164231e-05
    2. '   ' → logprob: -12.62501335144043
    3. 'class' → logprob: -12.75001335144043
    4. ')' → logprob: -13.12501335144043
    5. '(self' → logprob: -13.62501335144043
    6. ' self' → logprob: -13.87501335144043
    7. '
' → logprob: -13.87501335144043
    8. 'Input' → logprob: -14.00001335144043
    9. '       ' → logprob: -15.75001335144043
    10. 'input' → logprob: -15.75001335144043

Token 1127: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010786404833197594
    2. '(self' → logprob: -4.885786533355713
    3. 'self' → logprob: -5.885786533355713
    4. '__(' → logprob: -8.760786056518555
    5. 'class' → logprob: -9.635786056518555
    6. '):
' → logprob: -9.760786056518555
    7. ',self' → logprob: -9.885786056518555
    8. ' (' → logprob: -11.010786056518555
    9. '(' → logprob: -11.760786056518555
    10. '(lines' → logprob: -12.135786056518555

Token 1128: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.14452087879180908
    2. 'self' → logprob: -2.3945207595825195
    3. 'friend' → logprob: -3.8945207595825195
    4. 'lines' → logprob: -4.2695207595825195
    5. 'friends' → logprob: -5.2695207595825195
    6. '):
' → logprob: -6.5195207595825195
    7. ' input' → logprob: -7.2695207595825195
    8. '):' → logprob: -7.5195207595825195
    9. ')' → logprob: -8.14452075958252
    10. 'Input' → logprob: -8.14452075958252

Token 1129: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.00020520923135336488
    2. '):
' → logprob: -9.750205039978027
    3. '):' → logprob: -9.875205039978027
    4. '_data' → logprob: -10.125205039978027
    5. 'Lines' → logprob: -10.625205039978027
    6. '_tokens' → logprob: -11.500205039978027
    7. '_list' → logprob: -12.625205039978027
    8. ')_' → logprob: -13.125205039978027
    9. 'data' → logprob: -13.250205039978027
    10. 'self' → logprob: -13.375205039978027

Token 1130: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.642827570438385
    2. '):
' → logprob: -0.892827570438385
    3. '       ' → logprob: -3.2678275108337402
    4. '   ' → logprob: -3.6428275108337402
    5. '):
' → logprob: -8.642827987670898
    6. ':' → logprob: -9.267827987670898
    7. ')' → logprob: -10.267827987670898
    8. ',' → logprob: -10.767827987670898
    9. '```' → logprob: -10.892827987670898
    10. '):

' → logprob: -11.017827987670898

Token 1131: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4088384211063385
    2. '   ' → logprob: -1.1588383913040161
    3. 'def' → logprob: -4.158838272094727
    4. 'class' → logprob: -5.408838272094727
    5. 'self' → logprob: -7.908838272094727
    6. ' def' → logprob: -8.033838272094727
    7. '
' → logprob: -8.283838272094727
    8. '        
' → logprob: -8.533838272094727
    9. '```' → logprob: -9.283838272094727
    10. '<|end|>' → logprob: -9.408838272094727

Token 1132: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.005334197543561459
    2. '       ' → logprob: -5.255334377288818
    3. ' self' → logprob: -9.25533390045166
    4. 'def' → logprob: -13.25533390045166
    5. 'class' → logprob: -13.75533390045166
    6. 'input' → logprob: -13.75533390045166
    7. '   ' → logprob: -14.25533390045166
    8. 'Input' → logprob: -16.005334854125977
    9. '	self' → logprob: -16.880334854125977
    10. '(self' → logprob: -17.130334854125977

Token 1133: '.parser' (ID: 50244)
  Prédit: '.lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.000518716755323112
    2. '.input' → logprob: -7.625518798828125
    3. '.inputs' → logprob: -10.875518798828125
    4. '	lines' → logprob: -12.625518798828125
    5. '_lines' → logprob: -13.250518798828125
    6. '.raw' → logprob: -13.375518798828125
    7. '   ' → logprob: -14.125518798828125
    8. 'lines' → logprob: -14.375518798828125
    9. '.parser' → logprob: -14.375518798828125
    10. '._' → logprob: -14.875518798828125

Token 1134: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029791807755827904
    2. ' =' → logprob: -3.529791831970215
    3. '   ' → logprob: -11.029791831970215
    4. '=self' → logprob: -11.529791831970215
    5. '=
' → logprob: -12.154791831970215
    6. 'def' → logprob: -12.904791831970215
    7. '       ' → logprob: -12.904791831970215
    8. 'self' → logprob: -13.279791831970215
    9. 'class' → logprob: -14.279791831970215
    10. '=line' → logprob: -14.404791831970215

Token 1135: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -5.836499985889532e-05
    2. ' Input' → logprob: -9.7500581741333
    3. 'input' → logprob: -18.125059127807617
    4. '_input' → logprob: -19.500059127807617
    5. '	Input' → logprob: -19.750059127807617
    6. 'self' → logprob: -20.500059127807617
    7. '<Input' → logprob: -20.750059127807617
    8. '\Input' → logprob: -21.375059127807617
    9. ' input' → logprob: -21.500059127807617
    10. '_Input' → logprob: -22.000059127807617

Token 1136: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -0.00010652327910065651
    2. 'Lines' → logprob: -9.250106811523438
    3. 'parser' → logprob: -12.500106811523438
    4. '_parser' → logprob: -12.750106811523438
    5. '_lines' → logprob: -13.625106811523438
    6. 'lines' → logprob: -14.375106811523438
    7. '(lines' → logprob: -14.375106811523438
    8. 'Processor' → logprob: -14.625106811523438
    9. '.Parser' → logprob: -15.375106811523438
    10. '(Parser' → logprob: -15.750106811523438

Token 1137: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.007717124652117491
    2. 'input' → logprob: -4.882717132568359
    3. '(' → logprob: -9.88271713256836
    4. '(self' → logprob: -10.63271713256836
    5. '(
' → logprob: -10.88271713256836
    6. '(lines' → logprob: -12.25771713256836
    7. '```' → logprob: -12.75771713256836
    8. 'self' → logprob: -13.13271713256836
    9. '       ' → logprob: -13.25771713256836
    10. '[input' → logprob: -13.50771713256836

Token 1138: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -7.896309739408025e-07
    2. 'lines' → logprob: -15.125000953674316
    3. 'Lines' → logprob: -15.500000953674316
    4. '_LINES' → logprob: -15.750000953674316
    5. '_tokens' → logprob: -16.75
    6. ')' → logprob: -17.625
    7. '.lines' → logprob: -18.0
    8. '_' → logprob: -18.125
    9. '	lines' → logprob: -18.5
    10. '```' → logprob: -18.625

Token 1139: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002671853406354785
    2. '   ' → logprob: -6.127671718597412
    3. '       ' → logprob: -7.752671718597412
    4. '<|end|>' → logprob: -10.25267219543457
    5. ')
' → logprob: -11.62767219543457
    6. ' )' → logprob: -12.12767219543457
    7. '<|end|>' → logprob: -13.62767219543457
    8. ' ' → logprob: -13.87767219543457
    9. '")' → logprob: -13.87767219543457
    10. '}' → logprob: -14.12767219543457

Token 1140: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018595978617668152
    2. 'def' → logprob: -4.518596172332764
    3. '
' → logprob: -5.018596172332764
    4. ' def' → logprob: -7.143596172332764
    5. '```' → logprob: -10.393595695495605
    6. '       ' → logprob: -10.643595695495605
    7. '<|end|>' → logprob: -10.893595695495605
    8. '    
' → logprob: -11.518595695495605
    9. 'class' → logprob: -11.518595695495605
    10. '	def' → logprob: -11.768595695495605

Token 1141: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02633036859333515
    2. '   ' → logprob: -3.7763304710388184
    3. 'self' (adapté à ' self') → logprob: -6.151330471038818
    4. ' def' → logprob: -7.651330471038818
    5. '       ' → logprob: -7.901330471038818
    6. '
' → logprob: -9.27632999420166
    7. ' self' → logprob: -13.15132999420166
    8. '	def' → logprob: -13.27632999420166
    9. 'line' → logprob: -13.52632999420166
    10. ' ' → logprob: -13.65132999420166

Token 1142: '.group' (ID: 13456)
  Prédit: '.f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.f' → logprob: -1.6420116424560547
    2. '.results' → logprob: -1.6420116424560547
    3. '.num' → logprob: -1.6420116424560547
    4. 'class' → logprob: -2.6420116424560547
    5. '.lines' → logprob: -2.7670116424560547
    6. '.n' → logprob: -2.8920116424560547
    7. 'def' → logprob: -3.3920116424560547
    8. '.result' → logprob: -3.3920116424560547
    9. '.range' → logprob: -3.5170116424560547
    10. '.t' → logprob: -3.8920116424560547

Token 1143: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5768260359764099
    2. ' =' → logprob: -0.8268260359764099
    3. '   ' → logprob: -8.201826095581055
    4. '<|end|>' → logprob: -8.201826095581055
    5. 's' → logprob: -9.201826095581055
    6. '.' → logprob: -9.326826095581055
    7. '_' → logprob: -10.951826095581055
    8. ')' → logprob: -10.951826095581055
    9. '<|end|>' → logprob: -11.201826095581055
    10. 'def' → logprob: -11.201826095581055

Token 1144: ' Friend' (ID: 24739)
  Prédit: 'Friend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Friend' → logprob: -0.0024756586644798517
    2. ' Friend' → logprob: -6.002475738525391
    3. ' friend' → logprob: -18.37747573852539
    4. 'friend' → logprob: -18.87747573852539
    5. 'Range' → logprob: -19.25247573852539
    6. '   ' → logprob: -20.12747573852539
    7. 'Friends' → logprob: -20.87747573852539
    8. '       ' → logprob: -21.12747573852539
    9. 'Friendly' → logprob: -21.12747573852539
    10. '_friend' → logprob: -21.75247573852539

Token 1145: 'Group' (ID: 2748)
  Prédit: 'Group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Group' → logprob: -1.9361264946837764e-07
    2. 'roup' → logprob: -16.625
    3. '<Group' → logprob: -17.0
    4. '	Group' → logprob: -17.375
    5. '(Group' → logprob: -18.0
    6. 'G' → logprob: -18.375
    7. 'group' → logprob: -19.5
    8. ' Group' → logprob: -19.625
    9. '.Group' → logprob: -19.75
    10. '_group' → logprob: -19.875

Token 1146: '()

' (ID: 5874)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12990927696228027
    2. '
' → logprob: -2.1299092769622803
    3. '    
' → logprob: -6.629909515380859
    4. 'def' → logprob: -7.129909515380859
    5. '<|end|>' → logprob: -7.379909515380859
    6. ' def' → logprob: -9.62990951538086
    7. '        
' → logprob: -9.87990951538086
    8. '

' → logprob: -10.25490951538086
    9. '  
' → logprob: -10.50490951538086
    10. '<|end|>' → logprob: -11.62990951538086

Token 1147: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028133591637015343
    2. 'def' → logprob: -3.6531336307525635
    3. ' def' → logprob: -6.403133392333984
    4. '
' → logprob: -9.278133392333984
    5. '    
' → logprob: -10.528133392333984
    6. '       ' → logprob: -10.653133392333984
    7. '	def' → logprob: -11.403133392333984
    8. ' ' → logprob: -12.403133392333984
    9. '```' → logprob: -12.653133392333984
    10. 'import' → logprob: -12.653133392333984

Token 1148: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -3.4121114822482923e-06
    2. ' def' → logprob: -12.625003814697266
    3. '   ' → logprob: -17.500003814697266
    4. '
' → logprob: -18.250003814697266
    5. '	def' → logprob: -19.500003814697266
    6. 'import' → logprob: -21.375003814697266
    7. '    
' → logprob: -21.500003814697266
    8. ':def' → logprob: -22.250003814697266
    9. '        
' → logprob: -22.375003814697266
    10. '```' → logprob: -22.750003814697266

Token 1149: ' parse' (ID: 8420)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.43515515327453613
    2. 'def' → logprob: -1.1851551532745361
    3. 'parse' → logprob: -3.685155153274536
    4. 'run' → logprob: -4.560154914855957
    5. 'read' → logprob: -5.060154914855957
    6. ' solve' → logprob: -5.935154914855957
    7. ' def' → logprob: -6.560154914855957
    8. 'process' → logprob: -7.435154914855957
    9. ' run' → logprob: -9.060154914855957
    10. 'load' → logprob: -9.560154914855957

Token 1150: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.564674973487854
    2. '_line' → logprob: -0.939674973487854
    3. '_input' → logprob: -3.8146748542785645
    4. '_friend' → logprob: -4.9396748542785645
    5. '_' → logprob: -5.6896748542785645
    6. 'self' → logprob: -5.8146748542785645
    7. '_next' → logprob: -6.5646748542785645
    8. '_f' → logprob: -6.6896748542785645
    9. '(' → logprob: -7.3146748542785645
    10. '_lines' → logprob: -7.5646748542785645

Token 1151: '):
' (ID: 1883)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.17052523791790009
    2. ')' → logprob: -3.045525312423706
    3. '):' → logprob: -3.420525312423706
    4. ')_' → logprob: -3.545525312423706
    5. '_input' → logprob: -3.795525312423706
    6. '):
' → logprob: -4.295525074005127
    7. 'self' → logprob: -5.670525074005127
    8. '_lines' → logprob: -5.920525074005127
    9. '_self' → logprob: -6.545525074005127
    10. '_friend' → logprob: -6.670525074005127

Token 1152: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.334533878136426e-05
    2. 'while' → logprob: -11.250042915344238
    3. '
' → logprob: -11.625042915344238
    4. '```' → logprob: -11.625042915344238
    5. '   ' → logprob: -12.500042915344238
    6. 'line' → logprob: -12.875042915344238
    7. 'self' → logprob: -13.375042915344238
    8. ' while' → logprob: -13.625042915344238
    9. '	' → logprob: -14.125042915344238
    10. 'n' → logprob: -14.250042915344238

Token 1153: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.21763376891613007
    2. 'line' → logprob: -2.2176337242126465
    3. '       ' → logprob: -3.0926337242126465
    4. ' n' → logprob: -3.4676337242126465
    5. 'num' → logprob: -5.2176337242126465
    6. ' line' → logprob: -5.7176337242126465
    7. 'count' → logprob: -6.7176337242126465
    8. 'N' (adapté à ' N') → logprob: -9.842634201049805
    9. 'lines' → logprob: -9.842634201049805
    10. ' lines' → logprob: -10.467634201049805

Token 1154: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4341670274734497
    2. '=' → logprob: -1.0591670274734497
    3. '()' → logprob: -6.30916690826416
    4. '       ' → logprob: -6.43416690826416
    5. '_line' → logprob: -6.43416690826416
    6. '   ' → logprob: -8.68416690826416
    7. '=line' → logprob: -9.30916690826416
    8. ',' → logprob: -9.55916690826416
    9. 'line' → logprob: -11.05916690826416
    10. '=int' → logprob: -11.30916690826416

Token 1155: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.014164102263748646
    2. ' int' → logprob: -4.264163970947266
    3. '       ' → logprob: -15.139163970947266
    4. 'self' → logprob: -15.389163970947266
    5. '=int' → logprob: -17.014163970947266
    6. '(int' → logprob: -17.389163970947266
    7. '[int' → logprob: -18.264163970947266
    8. '<int' → logprob: -19.514163970947266
    9. '	int' → logprob: -19.514163970947266
    10. '   ' → logprob: -19.764163970947266

Token 1156: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009138475870713592
    2. '(' → logprob: -7.000913619995117
    3. 'self' → logprob: -13.000913619995117
    4. '(
' → logprob: -16.625913619995117
    5. ' (' → logprob: -16.875913619995117
    6. ' self' → logprob: -17.625913619995117
    7. '('' → logprob: -18.250913619995117
    8. '(...)' → logprob: -19.875913619995117
    9. '()' → logprob: -20.000913619995117
    10. '("' → logprob: -20.250913619995117

Token 1157: '.parser' (ID: 50244)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001365116098895669
    2. '(' → logprob: -6.7513651847839355
    3. 'self' → logprob: -9.126364707946777
    4. ' (' → logprob: -9.626364707946777
    5. '(
' → logprob: -11.876364707946777
    6. '.' → logprob: -12.001364707946777
    7. ' self' → logprob: -12.501364707946777
    8. ')' → logprob: -14.251364707946777
    9. '.readline' → logprob: -14.376364707946777
    10. '.(' → logprob: -15.126364707946777

Token 1158: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0013408389640972018
    2. '().' → logprob: -7.376340866088867
    3. '.read' → logprob: -7.501340866088867
    4. '.' → logprob: -8.876340866088867
    5. '.readlines' → logprob: -11.001340866088867
    6. ' .' → logprob: -13.001340866088867
    7. ').' → logprob: -13.001340866088867
    8. '   ' → logprob: -15.501340866088867
    9. ' ().' → logprob: -16.376340866088867
    10. ' readline' → logprob: -16.501340866088867

Token 1159: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.019678466022014618
    2. '())
' → logprob: -4.269678592681885
    3. '()' → logprob: -5.519678592681885
    4. '().' → logprob: -6.519678592681885
    5. '()
' → logprob: -11.269678115844727
    6. ')' → logprob: -13.019678115844727
    7. ' ())' → logprob: -13.394678115844727
    8. '())
' → logprob: -14.144678115844727
    9. '())

' → logprob: -14.394678115844727
    10. '(' → logprob: -14.894678115844727

Token 1160: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18190723657608032
    2. 'for' → logprob: -1.8069071769714355
    3. ' for' → logprob: -6.1819071769714355
    4. '	for' → logprob: -10.056907653808594
    5. '   ' → logprob: -11.056907653808594
    6. '<|end|>' → logprob: -11.056907653808594
    7. '	' → logprob: -11.556907653808594
    8. 'while' → logprob: -12.931907653808594
    9. '```' → logprob: -13.556907653808594
    10. '	       ' → logprob: -13.681907653808594

Token 1161: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.009241010062396526
    2. '       ' → logprob: -4.759241104125977
    3. ' for' → logprob: -7.384241104125977
    4. '	for' → logprob: -12.384241104125977
    5. '   ' → logprob: -14.134241104125977
    6. '	' → logprob: -16.134241104125977
    7. 'while' → logprob: -16.384241104125977
    8. '        
' → logprob: -16.384241104125977
    9. '```' → logprob: -16.509241104125977
    10. '
' → logprob: -17.384241104125977

Token 1162: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00020401719666551799
    2. ' _' → logprob: -8.500204086303711
    3. '_i' → logprob: -15.125204086303711
    4. ' i' → logprob: -16.62520408630371
    5. '_range' → logprob: -16.62520408630371
    6. 'i' → logprob: -17.50020408630371
    7. ' in' → logprob: -17.62520408630371
    8. '_=' → logprob: -17.62520408630371
    9. ' range' → logprob: -18.00020408630371
    10. '_
' → logprob: -18.87520408630371

Token 1163: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1755308359861374
    2. 'in' → logprob: -2.1755309104919434
    3. ' in' → logprob: -3.3005309104919434
    4. ' range' → logprob: -4.550530910491943
    5. '
' → logprob: -12.425530433654785
    6. ' ' → logprob: -13.175530433654785
    7. '  ' → logprob: -13.425530433654785
    8. '(range' → logprob: -13.425530433654785
    9. '   ' → logprob: -13.425530433654785
    10. '(' → logprob: -13.925530433654785

Token 1164: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.615255839889869e-05
    2. ' range' → logprob: -9.250096321105957
    3. '(range' → logprob: -18.12509536743164
    4. '
' → logprob: -18.50009536743164
    5. '   ' → logprob: -19.25009536743164
    6. '	range' → logprob: -20.50009536743164
    7. '```' → logprob: -20.75009536743164
    8. '_range' → logprob: -20.87509536743164
    9. ' ' → logprob: -21.00009536743164
    10. ')' → logprob: -21.00009536743164

Token 1165: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.002389325760304928
    2. '(' → logprob: -6.627389430999756
    3. '(range' → logprob: -7.752389430999756
    4. '(int' → logprob: -8.127388954162598
    5. 'range' → logprob: -8.877388954162598
    6. 'N' → logprob: -9.127388954162598
    7. '(self' → logprob: -10.002388954162598
    8. ' (' → logprob: -11.127388954162598
    9. '(len' → logprob: -11.252388954162598
    10. '(
' → logprob: -11.627388954162598

Token 1166: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.004054890479892492
    2. '):' → logprob: -5.754055023193359
    3. '():
' → logprob: -7.754055023193359
    4. '       ' → logprob: -8.25405502319336
    5. '           ' → logprob: -9.12905502319336
    6. ':
' → logprob: -10.50405502319336
    7. ':' → logprob: -11.12905502319336
    8. '()):
' → logprob: -11.12905502319336
    9. ' ):
' → logprob: -11.75405502319336
    10. '):
' → logprob: -12.00405502319336

Token 1167: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008117707911878824
    2. 'line' → logprob: -7.750811576843262
    3. ' line' → logprob: -8.000811576843262
    4. '#line' → logprob: -11.375811576843262
    5. '```' → logprob: -11.625811576843262
    6. '       ' → logprob: -12.500811576843262
    7. '_line' → logprob: -12.750811576843262
    8. '(line' → logprob: -12.750811576843262
    9. '	       ' → logprob: -13.000811576843262
    10. '[line' → logprob: -13.125811576843262

Token 1168: ' a' (ID: 261)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.4851408004760742
    2. 'a' (adapté à ' a') → logprob: -1.1101408004760742
    3. 'line' → logprob: -3.610140800476074
    4. 'constraint' → logprob: -4.985140800476074
    5. 'parts' → logprob: -5.110140800476074
    6. '           ' → logprob: -5.110140800476074
    7. 'l' → logprob: -5.610140800476074
    8. ' min' → logprob: -6.235140800476074
    9. ' a' → logprob: -7.485140800476074
    10. 'ai' → logprob: -7.485140800476074

Token 1169: '_str' (ID: 6182)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3492805063724518
    2. ',b' → logprob: -1.4742804765701294
    3. '_str' → logprob: -2.974280595779419
    4. '_i' → logprob: -4.47428035736084
    5. 'b' → logprob: -6.59928035736084
    6. '_,' → logprob: -7.09928035736084
    7. ' ,' → logprob: -7.97428035736084
    8. ',_' → logprob: -7.97428035736084
    9. 'i' → logprob: -8.34928035736084
    10. '_line' → logprob: -9.47428035736084

Token 1170: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09255357831716537
    2. '=' → logprob: -2.7175536155700684
    3. ' =' → logprob: -3.8425536155700684
    4. ',b' → logprob: -7.592553615570068
    5. ' ,' → logprob: -8.46755313873291
    6. ',a' → logprob: -9.09255313873291
    7. 'a' → logprob: -10.71755313873291
    8. ',_' → logprob: -11.21755313873291
    9. '           ' → logprob: -11.46755313873291
    10. 's' → logprob: -11.84255313873291

Token 1171: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004307884373702109
    2. ' self' → logprob: -7.750430583953857
    3. '           ' → logprob: -16.875431060791016
    4. 'elf' → logprob: -17.750431060791016
    5. '(self' → logprob: -18.125431060791016
    6. '   ' → logprob: -18.375431060791016
    7. 's' → logprob: -18.625431060791016
    8. '=self' → logprob: -19.375431060791016
    9. '	self' → logprob: -19.375431060791016
    10. 'Self' → logprob: -19.875431060791016

Token 1172: '.parser' (ID: 50244)
  Prédit: '.parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parser' → logprob: -5.5027299822540954e-05
    2. 'parser' → logprob: -10.875055313110352
    3. 'self' → logprob: -11.125055313110352
    4. '.readline' → logprob: -11.625055313110352
    5. '.' → logprob: -12.750055313110352
    6. ' .' → logprob: -13.000055313110352
    7. '.parsers' → logprob: -13.375055313110352
    8. '	parser' → logprob: -13.625055313110352
    9. '._' → logprob: -14.500055313110352
    10. 'e' → logprob: -14.750055313110352

Token 1173: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00021152703266125172
    2. '().' → logprob: -8.500211715698242
    3. '.' → logprob: -12.375211715698242
    4. '.read' → logprob: -12.875211715698242
    5. ' =' → logprob: -15.125211715698242
    6. '.readlines' → logprob: -15.625211715698242
    7. ' readline' → logprob: -15.625211715698242
    8. '   ' → logprob: -16.000211715698242
    9. ' .' → logprob: -16.125211715698242
    10. '._' → logprob: -16.375211715698242

Token 1174: '()
' (ID: 1234)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.30410605669021606
    2. '()
' → logprob: -1.8041059970855713
    3. '()' → logprob: -2.4291059970855713
    4. '           ' → logprob: -5.80410623550415
    5. '.strip' → logprob: -6.17910623550415
    6. '.split' → logprob: -6.30410623550415
    7. ' =' → logprob: -6.67910623550415
    8. '=' → logprob: -7.17910623550415
    9. '.' → logprob: -9.304105758666992
    10. ')' → logprob: -9.804105758666992

Token 1175: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006644221721217036
    2. 'a' → logprob: -8.250664710998535
    3. ',' → logprob: -8.750664710998535
    4. ' =' → logprob: -9.000664710998535
    5. '       ' → logprob: -10.000664710998535
    6. '            
' → logprob: -11.125664710998535
    7. '               ' → logprob: -11.125664710998535
    8. '=' → logprob: -12.000664710998535
    9. 'tokens' → logprob: -12.000664710998535
    10. ',a' → logprob: -12.125664710998535

Token 1176: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.014366697520017624
    2. '           ' → logprob: -4.264366626739502
    3. ' a' → logprob: -8.76436710357666
    4. 'parts' → logprob: -10.51436710357666
    5. 'tokens' → logprob: -12.01436710357666
    6. '_a' → logprob: -12.01436710357666
    7. ' parts' → logprob: -12.88936710357666
    8. '            
' → logprob: -13.63936710357666
    9. '
' → logprob: -14.26436710357666
    10. '[a' → logprob: -14.76436710357666

Token 1177: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06316182017326355
    2. '_min' → logprob: -4.063161849975586
    3. '_tokens' → logprob: -4.563161849975586
    4. '=' → logprob: -4.813161849975586
    5. ' =' → logprob: -4.938161849975586
    6. 'a' → logprob: -6.063161849975586
    7. ',b' → logprob: -6.188161849975586
    8. 'min' → logprob: -6.188161849975586
    9. ',min' → logprob: -6.188161849975586
    10. ',a' → logprob: -6.313161849975586

Token 1178: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -5.836499985889532e-05
    2. ' b' → logprob: -9.7500581741333
    3. '
' → logprob: -20.750059127807617
    4. '_' → logprob: -21.125059127807617
    5. '*b' → logprob: -21.125059127807617
    6. '_b' → logprob: -21.375059127807617
    7. 'space' → logprob: -22.000059127807617
    8. '_,' → logprob: -22.375059127807617
    9. 'c' → logprob: -22.500059127807617
    10. '_=' → logprob: -23.000059127807617

Token 1179: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022992134094238
    2. ' =' → logprob: -1.9102299213409424
    3. ',' → logprob: -12.410229682922363
    4. ')' → logprob: -14.910229682922363
    5. '_str' → logprob: -15.285229682922363
    6. '_tokens' → logprob: -15.910229682922363
    7. '_' → logprob: -16.03523063659668
    8. ' ' → logprob: -16.16023063659668
    9. '=line' → logprob: -16.16023063659668
    10. '_=' → logprob: -16.41023063659668

Token 1180: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.005280126351863146
    2. ' map' → logprob: -5.255280017852783
    3. 'a' → logprob: -10.005280494689941
    4. '[a' → logprob: -14.130280494689941
    5. '(map' → logprob: -15.880280494689941
    6. ' a' → logprob: -16.255279541015625
    7. '[' → logprob: -16.255279541015625
    8. 'list' → logprob: -16.755279541015625
    9. ' [' → logprob: -18.005279541015625
    10. 'tuple' → logprob: -18.255279541015625

Token 1181: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.000714935187716037
    2. 'int' → logprob: -7.8757147789001465
    3. '(str' → logprob: -8.250715255737305
    4. '(lambda' → logprob: -9.625715255737305
    5. 'str' → logprob: -12.500715255737305
    6. '(' → logprob: -13.250715255737305
    7. 'lambda' → logprob: -14.125715255737305
    8. '[int' → logprob: -14.375715255737305
    9. '<int' → logprob: -15.000715255737305
    10. '=int' → logprob: -15.375715255737305

Token 1182: ',' (ID: 11)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.21532903611660004
    2. ',' → logprob: -2.3403289318084717
    3. ',a' → logprob: -2.3403289318084717
    4. 'a' → logprob: -6.965329170227051
    5. ')' → logprob: -9.59032917022705
    6. ')a' → logprob: -10.21532917022705
    7. '           ' → logprob: -10.59032917022705
    8. ' a' → logprob: -11.09032917022705
    9. '(' → logprob: -11.34032917022705
    10. ' (' → logprob: -12.09032917022705

Token 1183: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -5.836499985889532e-05
    2. ' a' → logprob: -9.7500581741333
    3. '           ' → logprob: -20.125059127807617
    4. ')a' → logprob: -20.625059127807617
    5. '(a' → logprob: -20.875059127807617
    6. '	a' → logprob: -21.375059127807617
    7. '_a' → logprob: -22.125059127807617
    8. ',a' → logprob: -23.500059127807617
    9. ')' → logprob: -23.500059127807617
    10. '   ' → logprob: -23.750059127807617

Token 1184: '_str' (ID: 6182)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7743688225746155
    2. '(a' → logprob: -1.3993687629699707
    3. '().' → logprob: -1.5243687629699707
    4. '.readline' → logprob: -3.7743687629699707
    5. '.' → logprob: -4.774368762969971
    6. ')' → logprob: -4.899368762969971
    7. '.split' → logprob: -5.024368762969971
    8. '[a' → logprob: -5.274368762969971
    9. '_str' → logprob: -5.524368762969971
    10. '_a' → logprob: -5.774368762969971

Token 1185: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0037899850867688656
    2. '.split' → logprob: -5.628789901733398
    3. '.strip' → logprob: -8.753789901733398
    4. '.' → logprob: -10.628789901733398
    5. '()' → logprob: -12.503789901733398
    6. '.rstrip' → logprob: -14.128789901733398
    7. ' .' → logprob: -14.253789901733398
    8. 'a' → logprob: -14.253789901733398
    9. '.readline' → logprob: -15.128789901733398
    10. 'split' → logprob: -15.128789901733398

Token 1186: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00575020257383585
    2. '()' → logprob: -5.2557501792907715
    3. '())
' → logprob: -7.7557501792907715
    4. '('' → logprob: -9.88075065612793
    5. ')' → logprob: -10.50575065612793
    6. '(' → logprob: -12.25575065612793
    7. '()
' → logprob: -13.13075065612793
    8. '()]' → logprob: -13.88075065612793
    9. '())

' → logprob: -14.50575065612793
    10. '("' → logprob: -15.13075065612793

Token 1187: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.138441237155348e-05
    2. '<|end|>' → logprob: -9.750091552734375
    3. ',' → logprob: -11.250091552734375
    4. '       ' → logprob: -12.125091552734375
    5. '               ' → logprob: -12.500091552734375
    6. '            
' → logprob: -12.750091552734375
    7. '
' → logprob: -13.625091552734375
    8. '<|end|>' → logprob: -13.750091552734375
    9. 'self' → logprob: -14.000091552734375
    10. 'friend' → logprob: -14.250091552734375

Token 1188: ' constraint' (ID: 44762)
  Prédit: 'friend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'friend' → logprob: -0.401382178068161
    2. 'constraint' (adapté à ' constraint') → logprob: -1.1513822078704834
    3. '           ' → logprob: -5.151381969451904
    4. 'self' → logprob: -5.401381969451904
    5. ' constraint' → logprob: -6.026381969451904
    6. ' friend' → logprob: -6.526381969451904
    7. ' self' → logprob: -8.776382446289062
    8. 'f' → logprob: -10.276382446289062
    9. '       ' → logprob: -11.901382446289062
    10. '
' → logprob: -12.151382446289062

Token 1189: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519337236881256
    2. '=' → logprob: -1.5019336938858032
    3. '       ' → logprob: -13.626934051513672
    4. '=self' → logprob: -13.876934051513672
    5. '           ' → logprob: -14.126934051513672
    6. '=
' → logprob: -14.251934051513672
    7. 's' → logprob: -15.251934051513672
    8. '   ' → logprob: -15.501934051513672
    9. ')' → logprob: -15.626934051513672
    10. ' =
' → logprob: -16.251934051513672

Token 1190: ' Range' (ID: 26714)
  Prédit: 'Range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Range' → logprob: -0.011047814972698689
    2. ' Range' → logprob: -4.511047840118408
    3. ' range' → logprob: -18.88604736328125
    4. 'range' → logprob: -19.88604736328125
    5. '_range' → logprob: -20.76104736328125
    6. '.Range' → logprob: -21.51104736328125
    7. 'Ranges' → logprob: -23.26104736328125
    8. '   ' → logprob: -23.63604736328125
    9. '           ' → logprob: -24.01104736328125
    10. '    ' → logprob: -24.01104736328125

Token 1191: 'Constraint' (ID: 23133)
  Prédit: 'Constraint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Constraint' → logprob: -1.9361264946837764e-07
    2. 'constraint' → logprob: -16.5
    3. 'Range' → logprob: -18.375
    4. '_constraint' → logprob: -19.125
    5. ' Constraint' → logprob: -19.5
    6. '[' → logprob: -20.125
    7. 'Constraints' → logprob: -20.375
    8. '```' → logprob: -20.5
    9. '
' → logprob: -20.875
    10. '.Constraint' → logprob: -20.875

Token 1192: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -3.392824874026701e-05
    2. 'a' → logprob: -10.50003433227539
    3. '(' → logprob: -12.25003433227539
    4. '(
' → logprob: -13.50003433227539
    5. '           ' → logprob: -17.00003433227539
    6. '(b' → logprob: -18.12503433227539
    7. '       ' → logprob: -18.50003433227539
    8. '(min' → logprob: -18.87503433227539
    9. '   ' → logprob: -19.37503433227539
    10. '((' → logprob: -19.50003433227539

Token 1193: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005238140933215618
    2. ',b' → logprob: -5.255238056182861
    3. ' ,' → logprob: -13.63023853302002
    4. ',
' → logprob: -13.88023853302002
    5. 'b' → logprob: -14.00523853302002
    6. ',a' → logprob: -14.25523853302002
    7. ')' → logprob: -15.25523853302002
    8. 'a' → logprob: -15.38023853302002
    9. '           ' → logprob: -16.380237579345703
    10. '),' → logprob: -16.755237579345703

Token 1194: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004078758880496025
    2. ' b' → logprob: -5.5040788650512695
    3. '           ' → logprob: -15.62907886505127
    4. '               ' → logprob: -17.004077911376953
    5. '   ' → logprob: -17.754077911376953
    6. '                   ' → logprob: -17.754077911376953
    7. '       ' → logprob: -17.879077911376953
    8. ')b' → logprob: -18.004077911376953
    9. ' ' → logprob: -18.129077911376953
    10. ',b' → logprob: -18.254077911376953

Token 1195: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1014123484492302
    2. ')' → logprob: -2.351412296295166
    3. '           ' → logprob: -6.726412296295166
    4. ')
' → logprob: -13.101412773132324
    5. '               ' → logprob: -13.226412773132324
    6. '       ' → logprob: -13.476412773132324
    7. ' )
' → logprob: -15.351412773132324
    8. ')

' → logprob: -15.476412773132324
    9. '          ' → logprob: -16.101411819458008
    10. ')`
' → logprob: -16.226411819458008

Token 1196: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005292338784784079
    2. 'friend' → logprob: -5.2552924156188965
    3. ' friend' → logprob: -9.880291938781738
    4. '            
' → logprob: -13.255291938781738
    5. '       ' → logprob: -13.505291938781738
    6. '               ' → logprob: -13.880291938781738
    7. '<|end|>' → logprob: -14.005291938781738
    8. '
' → logprob: -14.130291938781738
    9. '          ' → logprob: -14.880291938781738
    10. '_friend' → logprob: -15.505291938781738

Token 1197: ' friend' (ID: 5168)
  Prédit: 'friend'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'friend' (adapté à ' friend') → logprob: -0.0025788708589971066
    2. 'self' → logprob: -6.8775787353515625
    3. ' friend' → logprob: -6.8775787353515625
    4. '           ' → logprob: -7.6275787353515625
    5. ' self' → logprob: -10.627578735351562
    6. 'f' → logprob: -13.252578735351562
    7. '	friend' → logprob: -15.127578735351562
    8. 'Friend' → logprob: -15.127578735351562
    9. '               ' → logprob: -15.502578735351562
    10. '.friend' → logprob: -16.377578735351562

Token 1198: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004651080351322889
    2. '=' → logprob: -5.379651069641113
    3. ')' → logprob: -10.504651069641113
    4. ' =
' → logprob: -13.879651069641113
    5. '       ' → logprob: -14.379651069641113
    6. '=self' → logprob: -14.879651069641113
    7. '   ' → logprob: -15.004651069641113
    8. '.' → logprob: -15.379651069641113
    9. ' ' → logprob: -15.754651069641113
    10. '=
' → logprob: -15.879651069641113

Token 1199: ' Friend' (ID: 24739)
  Prédit: 'Friend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Friend' → logprob: -4.5491004129871726e-05
    2. ' Friend' → logprob: -10.000045776367188
    3. 'Friends' → logprob: -20.375045776367188
    4. 'friend' → logprob: -20.375045776367188
    5. 'Friendly' → logprob: -21.375045776367188
    6. 'self' → logprob: -24.250045776367188
    7. '_friend' → logprob: -24.250045776367188
    8. ' friend' → logprob: -24.750045776367188
    9. '   ' → logprob: -25.125045776367188
    10. '       ' → logprob: -26.000045776367188

Token 1200: '(const' (ID: 6098)
  Prédit: '(const'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(const' → logprob: -0.004467269871383905
    2. '(self' → logprob: -5.504467487335205
    3. '(' → logprob: -8.254467010498047
    4. '(
' → logprob: -9.629467010498047
    5. '(friend' → logprob: -9.754467010498047
    6. 'constraint' → logprob: -13.629467010498047
    7. 'self' → logprob: -13.629467010498047
    8. 'const' → logprob: -14.504467010498047
    9. ' (' → logprob: -15.129467010498047
    10. '(f' → logprob: -15.379467010498047

Token 1201: 'raint' (ID: 7285)
  Prédit: 'raint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raint' → logprob: -1.9385402993066236e-05
    2. 'st' → logprob: -11.750019073486328
    3. 'rait' → logprob: -12.125019073486328
    4. 'ra' → logprob: -13.125019073486328
    5. 'rain' → logprob: -13.500019073486328
    6. 'raints' → logprob: -13.750019073486328
    7. 'rai' → logprob: -14.000019073486328
    8. 'aint' → logprob: -15.125019073486328
    9. 'tra' → logprob: -16.125019073486328
    10. '(self' → logprob: -16.500019073486328

Token 1202: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02329951710999012
    2. ')
' → logprob: -3.7732994556427
    3. '           ' → logprob: -10.023299217224121
    4. '       ' → logprob: -11.773299217224121
    5. ')
' → logprob: -15.023299217224121
    6. ')

' → logprob: -15.148299217224121
    7. '               ' → logprob: -15.398299217224121
    8. '),' → logprob: -15.398299217224121
    9. '))' → logprob: -15.523299217224121
    10. ')`
' → logprob: -15.773299217224121

Token 1203: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00013047587708570063
    2. 'self' → logprob: -9.375130653381348
    3. '       ' → logprob: -10.500130653381348
    4. ' self' → logprob: -11.750130653381348
    5. '               ' → logprob: -12.625130653381348
    6. '<|end|>' → logprob: -12.875130653381348
    7. '   ' → logprob: -13.250130653381348
    8. '          ' → logprob: -13.875130653381348
    9. '	       ' → logprob: -15.250130653381348
    10. '         ' → logprob: -15.250130653381348

Token 1204: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0012464241590350866
    2. '           ' → logprob: -6.751246452331543
    3. ' self' → logprob: -9.501246452331543
    4. '       ' → logprob: -13.751246452331543
    5. '   ' → logprob: -16.376245498657227
    6. '
' → logprob: -16.751245498657227
    7. '               ' → logprob: -16.876245498657227
    8. '	self' → logprob: -16.876245498657227
    9. '(self' → logprob: -18.501245498657227
    10. '[self' → logprob: -19.126245498657227

Token 1205: '.group' (ID: 13456)
  Prédit: '.group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.group' → logprob: -0.029763570055365562
    2. 'group' → logprob: -3.5297634601593018
    3. ' group' → logprob: -11.529763221740723
    4. 'roup' → logprob: -14.154763221740723
    5. '_group' → logprob: -14.154763221740723
    6. '.groupby' → logprob: -14.654763221740723
    7. '"group' → logprob: -14.779763221740723
    8. '	group' → logprob: -14.904763221740723
    9. '       ' → logprob: -15.654763221740723
    10. '.' → logprob: -16.02976417541504

Token 1206: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -5.438573680294212e-06
    2. '       ' → logprob: -13.250005722045898
    3. 'add' → logprob: -13.375005722045898
    4. '.' → logprob: -13.625005722045898
    5. '.append' → logprob: -14.375005722045898
    6. '   ' → logprob: -16.1250057220459
    7. '.group' → logprob: -16.3750057220459
    8. '           ' → logprob: -16.8750057220459
    9. '.Add' → logprob: -17.7500057220459
    10. '_add' → logprob: -17.7500057220459

Token 1207: '_friend' (ID: 156782)
  Prédit: '_friend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_friend' → logprob: -2.2200749754119897e-06
    2. '_f' → logprob: -13.375001907348633
    3. 'friend' → logprob: -14.750001907348633
    4. '_' → logprob: -16.500001907348633
    5. '(friend' → logprob: -16.750001907348633
    6. '_fr' → logprob: -17.000001907348633
    7. '
' → logprob: -18.500001907348633
    8. '```' → logprob: -19.500001907348633
    9. '(_' → logprob: -19.875001907348633
    10. '_guest' → logprob: -20.000001907348633

Token 1208: '(friend' (ID: 198103)
  Prédit: '(friend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(friend' → logprob: -0.00020771251001860946
    2. 'friend' → logprob: -8.500207901000977
    3. '(' → logprob: -12.875207901000977
    4. '(
' → logprob: -13.875207901000977
    5. 'riend' → logprob: -15.250207901000977
    6. '	friend' → logprob: -16.000207901000977
    7. ')' → logprob: -16.250207901000977
    8. ' (' → logprob: -16.250207901000977
    9. '```' → logprob: -16.250207901000977
    10. ' friend' → logprob: -16.500207901000977

Token 1209: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011852304451167583
    2. '<|end|>' → logprob: -6.876185417175293
    3. '       ' → logprob: -9.751185417175293
    4. '()' → logprob: -10.251185417175293
    5. '())' → logprob: -10.251185417175293
    6. ')
' → logprob: -11.501185417175293
    7. '<|end|>' → logprob: -11.751185417175293
    8. ')return' → logprob: -13.126185417175293
    9. '")' → logprob: -14.501185417175293
    10. ')}' → logprob: -14.751185417175293

Token 1210: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1932734251022339
    2. '
' → logprob: -1.9432734251022339
    3. 'def' → logprob: -3.8182735443115234
    4. '<|end|>' → logprob: -4.943273544311523
    5. ' def' → logprob: -6.318273544311523
    6. '    
' → logprob: -7.693273544311523
    7. '<|end|>' → logprob: -7.693273544311523
    8. '```' → logprob: -8.443273544311523
    9. '

' → logprob: -8.943273544311523
    10. '        
' → logprob: -8.943273544311523

Token 1211: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.10022284835577011
    2. '   ' → logprob: -2.3502228260040283
    3. ' def' → logprob: -11.10022258758545
    4. '
' → logprob: -14.10022258758545
    5. '    
' → logprob: -15.47522258758545
    6. '	def' → logprob: -15.85022258758545
    7. '```' → logprob: -17.225223541259766
    8. '       ' → logprob: -17.725223541259766
    9. '        
' → logprob: -18.600223541259766
    10. 'Def' → logprob: -18.725223541259766

Token 1212: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.0037997264880687
    2. 'max' → logprob: -5.753799915313721
    3. ' solve' → logprob: -7.628799915313721
    4. 'run' → logprob: -9.753799438476562
    5. 'compute' → logprob: -9.878799438476562
    6. 'get' → logprob: -11.253799438476562
    7. ' max' → logprob: -12.253799438476562
    8. 'maximize' → logprob: -12.878799438476562
    9. 'def' → logprob: -13.128799438476562
    10. 'calculate' → logprob: -13.753799438476562

Token 1213: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.253713218029588e-05
    2. '(' → logprob: -10.250062942504883
    3. '   ' → logprob: -11.125062942504883
    4. '       ' → logprob: -12.000062942504883
    5. '(
' → logprob: -12.250062942504883
    6. 'self' → logprob: -14.125062942504883
    7. '():
' → logprob: -15.500062942504883
    8. 'def' → logprob: -15.625062942504883
    9. '```' → logprob: -16.125062942504883
    10. ' (' → logprob: -17.000062942504883

Token 1214: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.09559308737516403
    2. '):' → logprob: -2.970592975616455
    3. '(self' → logprob: -3.720592975616455
    4. ')' → logprob: -4.720592975616455
    5. 'self' → logprob: -5.095592975616455
    6. '   ' → logprob: -8.095593452453613
    7. '       ' → logprob: -9.470593452453613
    8. '):

' → logprob: -9.845593452453613
    9. '):
' → logprob: -9.970593452453613
    10. ')(' → logprob: -9.970593452453613

Token 1215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.9146995327901095e-05
    2. '```' → logprob: -11.375019073486328
    3. '   ' → logprob: -12.000019073486328
    4. 'result' → logprob: -14.500019073486328
    5. 'return' → logprob: -14.750019073486328
    6. '
' → logprob: -15.625019073486328
    7. '           ' → logprob: -16.375019073486328
    8. '        
' → logprob: -16.875019073486328
    9. '`' → logprob: -17.250019073486328
    10. '      ' → logprob: -17.375019073486328

Token 1216: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0009456383413635194
    2. '       ' → logprob: -7.000945568084717
    3. 'result' → logprob: -10.500946044921875
    4. ' return' → logprob: -12.250946044921875
    5. 'max' → logprob: -13.625946044921875
    6. '```' → logprob: -14.625946044921875
    7. 'print' → logprob: -15.625946044921875
    8. 'res' → logprob: -18.000946044921875
    9. '
' → logprob: -18.125946044921875
    10. '   ' → logprob: -18.375946044921875

Token 1217: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1269282102584839
    2. ' self' → logprob: -2.1269283294677734
    3. '       ' → logprob: -16.751928329467773
    4. '   ' → logprob: -17.376928329467773
    5. '(self' → logprob: -17.626928329467773
    6. '	self' → logprob: -19.376928329467773
    7. '        
' → logprob: -21.501928329467773
    8. '[self' → logprob: -21.751928329467773
    9. '```' → logprob: -22.126928329467773
    10. '
' → logprob: -22.251928329467773

Token 1218: '.group' (ID: 13456)
  Prédit: '.group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.group' → logprob: -0.0003221150254830718
    2. '.max' → logprob: -8.750322341918945
    3. '.' → logprob: -9.250322341918945
    4. '.groupby' → logprob: -9.750322341918945
    5. '.groups' → logprob: -12.125322341918945
    6. 'group' → logprob: -14.625322341918945
    7. '
' → logprob: -14.750322341918945
    8. '.solve' → logprob: -15.000322341918945
    9. ' .' → logprob: -15.125322341918945
    10. '   ' → logprob: -15.375322341918945

Token 1219: '.max' (ID: 11883)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.22622324526309967
    2. '.max' → logprob: -1.6012232303619385
    3. 'max' → logprob: -8.85122299194336
    4. '.solve' → logprob: -8.85122299194336
    5. '   ' → logprob: -9.72622299194336
    6. '<|end|>' → logprob: -10.35122299194336
    7. '.get' → logprob: -10.47622299194336
    8. '().' → logprob: -10.47622299194336
    9. '       ' → logprob: -10.47622299194336
    10. '.mainloop' → logprob: -10.47622299194336

Token 1220: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.00010032468708232045
    2. 'invite' → logprob: -9.375100135803223
    3. '_in' → logprob: -11.125100135803223
    4. 'Invite' → logprob: -15.125100135803223
    5. 'inv' → logprob: -15.625100135803223
    6. '```' → logprob: -16.00010108947754
    7. '_INV' → logprob: -17.25010108947754
    8. '-in' → logprob: -17.50010108947754
    9. '\' → logprob: -17.62510108947754
    10. '(inv' → logprob: -18.12510108947754

Token 1221: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -1.3856492842023727e-06
    2. 'te' → logprob: -13.875000953674316
    3. 'invite' → logprob: -16.375001907348633
    4. '```' → logprob: -17.000001907348633
    5. '
' → logprob: -17.125001907348633
    6. '(' → logprob: -17.250001907348633
    7. '_' → logprob: -17.625001907348633
    8. '[' → logprob: -17.750001907348633
    9. '_inv' → logprob: -18.000001907348633
    10. '__' → logprob: -18.125001907348633

Token 1222: '()


' (ID: 29771)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005076737608760595
    2. '()
' → logprob: -6.130076885223389
    3. '<|end|>' → logprob: -6.380076885223389
    4. 'def' → logprob: -7.755076885223389
    5. '(' → logprob: -7.880076885223389
    6. '()

' → logprob: -8.75507640838623
    7. '(
' → logprob: -9.00507640838623
    8. '#' → logprob: -10.63007640838623
    9. '()\' → logprob: -11.38007640838623
    10. '```' → logprob: -11.50507640838623

Token 1223: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17369268834590912
    2. '#' → logprob: -1.9236927032470703
    3. 'def' → logprob: -4.92369270324707
    4. '```' → logprob: -5.42369270324707
    5. 'input' → logprob: -6.54869270324707
    6. 'import' → logprob: -8.42369270324707
    7. ' if' → logprob: -10.54869270324707
    8. 'from' → logprob: -12.54869270324707
    9. 'lines' → logprob: -12.54869270324707
    10. '``' → logprob: -12.92369270324707

Token 1224: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.1269901692867279
    2. 'main' → logprob: -2.1269900798797607
    3. ' run' → logprob: -10.62699031829834
    4. '__' → logprob: -10.87699031829834
    5. ' solve' → logprob: -11.37699031829834
    6. ' __' → logprob: -13.00199031829834
    7. 'solve' → logprob: -13.25199031829834
    8. 'run' → logprob: -13.37699031829834
    9. '_main' → logprob: -13.75199031829834
    10. ' solution' → logprob: -15.37699031829834

Token 1225: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -5.943783253314905e-05
    2. '():
' → logprob: -9.750059127807617
    3. '()' → logprob: -14.500059127807617
    4. ' ():' → logprob: -14.625059127807617
    5. '():

' → logprob: -16.750059127807617
    6. '():
' → logprob: -17.000059127807617
    7. '(' → logprob: -17.500059127807617
    8. '().' → logprob: -18.000059127807617
    9. '()">' → logprob: -18.750059127807617
    10. '()>' → logprob: -18.875059127807617

Token 1226: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023183858022093773
    2. 'import' → logprob: -4.148183822631836
    3. 'input' → logprob: -5.648183822631836
    4. ' import' → logprob: -6.773183822631836
    5. ' input' → logprob: -6.898183822631836
    6. ' lines' → logprob: -7.523183822631836
    7. ' parser' → logprob: -7.648183822631836
    8. 'parser' → logprob: -9.148183822631836
    9. '	import' → logprob: -9.398183822631836
    10. 'def' → logprob: -9.648183822631836

Token 1227: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.014252597466111183
    2. ' import' → logprob: -4.764252662658691
    3. 'input' → logprob: -5.264252662658691
    4. '   ' → logprob: -7.889252662658691
    5. ' input' → logprob: -9.639252662658691
    6. 'if' → logprob: -12.264252662658691
    7. '	import' → logprob: -13.389252662658691
    8. 'lines' → logprob: -13.764252662658691
    9. ' lines' → logprob: -14.139252662658691
    10. '```' → logprob: -14.764252662658691

Token 1228: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -1.9361264946837764e-07
    2. ' sys' → logprob: -16.5
    3. 'bis' → logprob: -21.875
    4. '=sys' → logprob: -22.75
    5. '(sys' → logprob: -23.75
    6. '```' → logprob: -24.25
    7. '	sys' → logprob: -24.75
    8. 'math' → logprob: -25.625
    9. '
' → logprob: -26.0
    10. 'io' → logprob: -26.0

Token 1229: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018204957246780396
    2. '
' → logprob: -4.393205165863037
    3. 'input' → logprob: -5.518205165863037
    4. '    
' → logprob: -6.643205165863037
    5. ' lines' → logprob: -8.518204689025879
    6. ' input' → logprob: -10.018204689025879
    7. 'lines' → logprob: -10.268204689025879
    8. '```' → logprob: -10.393204689025879
    9. 'def' → logprob: -11.143204689025879
    10. '	lines' → logprob: -11.643204689025879

Token 1230: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47916197776794434
    2. 'input' → logprob: -0.9791619777679443
    3. 'lines' → logprob: -5.854162216186523
    4. 'def' → logprob: -7.479162216186523
    5. 'if' → logprob: -7.604162216186523
    6. '
' → logprob: -7.979162216186523
    7. ' input' → logprob: -8.104162216186523
    8. ' lines' → logprob: -8.854162216186523
    9. '```' → logprob: -9.354162216186523
    10. '    
' → logprob: -9.479162216186523

Token 1231: ' lines' (ID: 8698)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.040531791746616364
    2. '   ' → logprob: -3.290531873703003
    3. 'lines' (adapté à ' lines') → logprob: -6.040531635284424
    4. ' input' → logprob: -9.540532112121582
    5. '
' → logprob: -11.040532112121582
    6. 'data' → logprob: -12.290532112121582
    7. 'def' → logprob: -12.290532112121582
    8. ' lines' → logprob: -12.415532112121582
    9. 'if' → logprob: -13.790532112121582
    10. '_input' → logprob: -13.790532112121582

Token 1232: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.049925971776247025
    2. ' =' → logprob: -3.0499260425567627
    3. '=sys' → logprob: -6.799925804138184
    4. '   ' → logprob: -8.924925804138184
    5. '=
' → logprob: -10.174925804138184
    6. '=subprocess' → logprob: -10.799925804138184
    7. '=line' → logprob: -11.674925804138184
    8. '=[]' → logprob: -12.174925804138184
    9. '=input' → logprob: -12.299925804138184
    10. 'import' → logprob: -13.424925804138184

Token 1233: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.47411367297172546
    2. 'sys' → logprob: -0.9741137027740479
    3. '   ' → logprob: -10.474113464355469
    4. '=sys' → logprob: -12.599113464355469
    5. '(sys' → logprob: -13.099113464355469
    6. '	sys' → logprob: -13.224113464355469
    7. '[' → logprob: -14.724113464355469
    8. ' [' → logprob: -14.974113464355469
    9. '[]' → logprob: -15.349113464355469
    10. '_sys' → logprob: -16.72411346435547

Token 1234: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.007628988474607468
    2. 'import' → logprob: -6.007628917694092
    3. 'in' → logprob: -6.382628917694092
    4. '   ' → logprob: -6.882628917694092
    5. 'stdin' → logprob: -7.257628917694092
    6. '=sys' → logprob: -8.25762939453125
    7. 'In' → logprob: -8.38262939453125
    8. 'lines' → logprob: -8.38262939453125
    9. '[' → logprob: -8.50762939453125
    10. '=' → logprob: -9.88262939453125

Token 1235: '.read' (ID: 7211)
  Prédit: '.readlines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readlines' → logprob: -0.002368870424106717
    2. '.readline' → logprob: -6.127368927001953
    3. 'read' → logprob: -8.877368927001953
    4. '.read' → logprob: -10.752368927001953
    5. '.' → logprob: -11.002368927001953
    6. 'buffer' → logprob: -13.127368927001953
    7. '```' → logprob: -13.377368927001953
    8. 'lines' → logprob: -14.127368927001953
    9. '.buffer' → logprob: -14.127368927001953
    10. '   ' → logprob: -15.002368927001953

Token 1236: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0005526751047000289
    2. 'lines' → logprob: -7.875552654266357
    3. '_lines' → logprob: -9.125553131103516
    4. '()' → logprob: -9.750553131103516
    5. '()
' → logprob: -13.875553131103516
    6. 'split' → logprob: -13.875553131103516
    7. '.split' → logprob: -14.375553131103516
    8. ' lines' → logprob: -14.500553131103516
    9. 'Lines' → logprob: -14.500553131103516
    10. '.lines' → logprob: -14.875553131103516

Token 1237: 'strip' (ID: 23905)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.037972744554281235
    2. 'decode' → logprob: -3.5379726886749268
    3. 'read' → logprob: -5.287972927093506
    4. 'strip' → logprob: -5.787972927093506
    5. 'lines' → logprob: -9.787972450256348
    6. 'rstrip' → logprob: -11.537972450256348
    7. '```' → logprob: -12.662972450256348
    8. '(split' → logprob: -13.787972450256348
    9. '
' → logprob: -14.037972450256348
    10. ' split' → logprob: -14.162972450256348

Token 1238: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.1054253011243418e-05
    2. '()' → logprob: -10.875020980834961
    3. '('\' → logprob: -13.750020980834961
    4. '.split' → logprob: -14.500020980834961
    5. '()
' → logprob: -15.125020980834961
    6. 'split' → logprob: -16.12502098083496
    7. '()\' → logprob: -17.25002098083496
    8. '   ' → logprob: -19.12502098083496
    9. '("\' → logprob: -19.50002098083496
    10. '().
' → logprob: -19.62502098083496

Token 1239: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.3856492842023727e-06
    2. ' split' → logprob: -13.625000953674316
    3. 'decode' → logprob: -17.125001907348633
    4. '(split' → logprob: -17.625001907348633
    5. 'lines' → logprob: -18.375001907348633
    6. 'rstrip' → logprob: -20.625001907348633
    7. 'spl' → logprob: -20.750001907348633
    8. '.split' → logprob: -20.875001907348633
    9. 'read' → logprob: -21.875001907348633
    10. '```' → logprob: -22.375001907348633

Token 1240: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.27568936347961426
    2. 'lines' → logprob: -1.5256893634796143
    3. '()' → logprob: -3.7756893634796143
    4. '("\' → logprob: -7.900689125061035
    5. '()
' → logprob: -9.025689125061035
    6. '()\' → logprob: -9.775689125061035
    7. ''\' → logprob: -11.525689125061035
    8. '()[' → logprob: -14.775689125061035
    9. '"\' → logprob: -15.650689125061035
    10. '(' → logprob: -16.02569007873535

Token 1241: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.320199877838604e-07
    2. '\n' → logprob: -15.375
    3. '
' → logprob: -16.0
    4. 'newline' → logprob: -18.25
    5. 'lines' → logprob: -19.125
    6. 'ndef' → logprob: -19.75
    7. ' n' → logprob: -20.375
    8. '```' → logprob: -20.5
    9. '	n' → logprob: -20.75
    10. 't' → logprob: -21.25

Token 1242: '')
' (ID: 2515)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.458640456199646
    2. '')
' → logprob: -1.458640456199646
    3. '   ' → logprob: -2.9586405754089355
    4. ')' → logprob: -2.9586405754089355
    5. '')' → logprob: -3.4586405754089355
    6. ')')
' → logprob: -10.458640098571777
    7. '")
' → logprob: -11.833640098571777
    8. ')
' → logprob: -12.583640098571777
    9. '`)
' → logprob: -12.708640098571777
    10. '```' → logprob: -12.833640098571777

Token 1243: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0359685942530632
    2. 'group' → logprob: -3.410968542098999
    3. 'for' → logprob: -6.535968780517578
    4. 'parser' → logprob: -8.660968780517578
    5. '
' → logprob: -8.785968780517578
    6. 'friend' → logprob: -9.035968780517578
    7. ' group' → logprob: -9.160968780517578
    8. ' for' → logprob: -9.410968780517578
    9. 'solver' → logprob: -9.410968780517578
    10. '    
' → logprob: -10.285968780517578

Token 1244: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -0.04559918865561485
    2. '   ' → logprob: -4.045598983764648
    3. 'group' → logprob: -4.295598983764648
    4. 'parser' → logprob: -4.795598983764648
    5. 'problem' → logprob: -5.420598983764648
    6. 'ps' → logprob: -7.920598983764648
    7. ' solver' → logprob: -8.545598983764648
    8. 'solution' → logprob: -9.545598983764648
    9. 'p' → logprob: -9.670598983764648
    10. 's' → logprob: -11.045598983764648

Token 1245: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02636498026549816
    2. '=' → logprob: -3.651365041732788
    3. '   ' → logprob: -9.776365280151367
    4. '.solve' → logprob: -13.276365280151367
    5. '.' → logprob: -13.776365280151367
    6. ' =
' → logprob: -14.026365280151367
    7. '<|end|>' → logprob: -14.026365280151367
    8. '=
' → logprob: -14.651365280151367
    9. '<|end|>' → logprob: -14.651365280151367
    10. '=s' → logprob: -14.651365280151367

Token 1246: ' Problem' (ID: 26113)
  Prédit: 'Problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Problem' → logprob: -1.0206720617134124e-05
    2. ' Problem' → logprob: -11.50001049041748
    3. 'Friend' → logprob: -21.000009536743164
    4. 'Proble' → logprob: -21.375009536743164
    5. 'Solution' → logprob: -21.625009536743164
    6. 'problem' → logprob: -21.750009536743164
    7. '_problem' → logprob: -21.750009536743164
    8. ' problem' → logprob: -22.000009536743164
    9. 'Program' → logprob: -22.500009536743164
    10. '   ' → logprob: -22.500009536743164

Token 1247: 'BS' (ID: 11068)
  Prédit: 'BS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BS' → logprob: -5.3358446166384965e-05
    2. 'B' → logprob: -9.875053405761719
    3. 'Solver' → logprob: -14.000053405761719
    4. '_B' → logprob: -14.875053405761719
    5. '```' → logprob: -15.625053405761719
    6. ' BS' → logprob: -16.12505340576172
    7. '
' → logprob: -16.37505340576172
    8. 'solver' → logprob: -16.50005340576172
    9. 'b' → logprob: -16.87505340576172
    10. '=' → logprob: -17.75005340576172

Token 1248: 'olver' (ID: 13941)
  Prédit: 'olver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olver' → logprob: -0.006168863270431757
    2. 'Solver' → logprob: -5.256168842315674
    3. 'solver' → logprob: -7.006168842315674
    4. 'oler' → logprob: -10.881169319152832
    5. '_solver' → logprob: -12.631169319152832
    6. 'over' → logprob: -12.756169319152832
    7. ' solver' → logprob: -13.381169319152832
    8. 'olve' → logprob: -14.756169319152832
    9. 'ol' → logprob: -14.881169319152832
    10. 'S' → logprob: -15.881169319152832

Token 1249: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.12700748443603516
    2. 'lines' → logprob: -2.127007484436035
    3. '   ' → logprob: -9.502007484436035
    4. ' lines' → logprob: -12.627007484436035
    5. '	lines' → logprob: -14.002007484436035
    6. '(
' → logprob: -14.502007484436035
    7. '```' → logprob: -16.87700653076172
    8. '.lines' → logprob: -17.00200653076172
    9. '
' → logprob: -17.37700653076172
    10. '(' → logprob: -17.75200653076172

Token 1250: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07706587761640549
    2. ')
' → logprob: -2.827065944671631
    3. '   ' → logprob: -4.202065944671631
    4. '[' → logprob: -12.202065467834473
    5. '()' → logprob: -12.327065467834473
    6. '())
' → logprob: -13.202065467834473
    7. '())' → logprob: -13.327065467834473
    8. ')
' → logprob: -13.952065467834473
    9. '()
' → logprob: -13.952065467834473
    10. '
' → logprob: -14.702065467834473

Token 1251: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01818155124783516
    2. 'solver' → logprob: -4.018181324005127
    3. 'def' → logprob: -11.268181800842285
    4. 'main' → logprob: -11.518181800842285
    5. '```' → logprob: -12.518181800842285
    6. '    
' → logprob: -13.018181800842285
    7. '
' → logprob: -13.768181800842285
    8. ' solver' → logprob: -14.268181800842285
    9. '_solver' → logprob: -14.768181800842285
    10. '  ' → logprob: -14.893181800842285

Token 1252: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -9.639096970204264e-05
    2. '   ' → logprob: -9.250096321105957
    3. ' solver' → logprob: -16.125097274780273
    4. '```' → logprob: -17.625097274780273
    5. 'sol' → logprob: -18.250097274780273
    6. 'parser' → logprob: -18.500097274780273
    7. '
' → logprob: -18.750097274780273
    8. '_solver' → logprob: -18.750097274780273
    9. 'solve' → logprob: -20.125097274780273
    10. '    
' → logprob: -20.250097274780273

Token 1253: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -9.043078898685053e-05
    2. '.' → logprob: -9.375090599060059
    3. '.parser' → logprob: -12.875090599060059
    4. '.solve' → logprob: -13.000090599060059
    5. '.process' → logprob: -16.375089645385742
    6. 'parse' → logprob: -16.375089645385742
    7. '=parse' → logprob: -16.500089645385742
    8. '.
' → logprob: -16.500089645385742
    9. ' .' → logprob: -16.750089645385742
    10. '   ' → logprob: -16.875089645385742

Token 1254: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01325128972530365
    2. 'print' → logprob: -4.763251304626465
    3. 'result' → logprob: -5.388251304626465
    4. '    
' → logprob: -10.888251304626465
    5. '
' → logprob: -11.138251304626465
    6. '```' → logprob: -11.513251304626465
    7. 'return' → logprob: -12.263251304626465
    8. 'output' → logprob: -12.513251304626465
    9. ' result' → logprob: -13.263251304626465
    10. ' print' → logprob: -13.763251304626465

Token 1255: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020800422877073288
    2. 'print' → logprob: -4.270800590515137
    3. 'result' → logprob: -5.020800590515137
    4. '```' → logprob: -11.895800590515137
    5. 'return' → logprob: -13.145800590515137
    6. '
' → logprob: -13.145800590515137
    7. '    
' → logprob: -13.145800590515137
    8. 'output' → logprob: -13.645800590515137
    9. 'answer' → logprob: -13.895800590515137
    10. ' result' → logprob: -14.895800590515137

Token 1256: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.002134675160050392
    2. 'result' → logprob: -6.252134799957275
    3. '   ' → logprob: -8.502134323120117
    4. ' print' → logprob: -13.252134323120117
    5. 'answer' → logprob: -14.252134323120117
    6. 'res' → logprob: -14.752134323120117
    7. '```' → logprob: -17.252134323120117
    8. '
' → logprob: -17.252134323120117
    9. 'output' → logprob: -18.127134323120117
    10. ' result' → logprob: -18.127134323120117

Token 1257: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.004272615537047386
    2. '(' → logprob: -5.5042724609375
    3. 'solver' → logprob: -8.6292724609375
    4. '()' → logprob: -12.1292724609375
    5. '(f' → logprob: -12.1292724609375
    6. '('' → logprob: -13.3792724609375
    7. '(
' → logprob: -13.8792724609375
    8. '(solution' → logprob: -14.0042724609375
    9. '(sol' → logprob: -14.2542724609375
    10. '("' → logprob: -16.1292724609375

Token 1258: 'olver' (ID: 13941)
  Prédit: 'olver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olver' → logprob: -4.9186317482963204e-05
    2. 'olve' → logprob: -10.250049591064453
    3. 'solver' → logprob: -11.250049591064453
    4. ')' → logprob: -15.250049591064453
    5. 'over' → logprob: -15.750049591064453
    6. 'ol' → logprob: -15.750049591064453
    7. 'oler' → logprob: -16.125049591064453
    8. '(' → logprob: -17.375049591064453
    9. 'ov' → logprob: -17.625049591064453
    10. 'olution' → logprob: -17.875049591064453

Token 1259: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -0.00015622020873706788
    2. '.max' → logprob: -9.37515640258789
    3. '.' → logprob: -10.25015640258789
    4. ').' → logprob: -10.62515640258789
    5. '.s' → logprob: -12.12515640258789
    6. '.sol' → logprob: -12.75015640258789
    7. ')' → logprob: -13.87515640258789
    8. ' .' → logprob: -14.62515640258789
    9. '.run' → logprob: -14.75015640258789
    10. '.solution' → logprob: -15.00015640258789

Token 1260: '())


' (ID: 131583)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0015727103454992175
    2. '()' → logprob: -6.501572608947754
    3. ')' → logprob: -9.626572608947754
    4. '())
' → logprob: -12.501572608947754
    5. ' ())' → logprob: -14.876572608947754
    6. '   ' → logprob: -16.25157356262207
    7. '(),' → logprob: -16.50157356262207
    8. '()
' → logprob: -16.62657356262207
    9. '(' → logprob: -16.75157356262207
    10. '()))' → logprob: -17.00157356262207

Token 1261: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00017517358355689794
    2. 'main' → logprob: -8.750175476074219
    3. '```' → logprob: -11.125175476074219
    4. ' if' → logprob: -13.500175476074219
    5. '
' → logprob: -14.625175476074219
    6. '#' → logprob: -17.12517547607422
    7. '    
' → logprob: -18.12517547607422
    8. '__' → logprob: -18.87517547607422
    9. '#if' → logprob: -19.00017547607422
    10. '(main' → logprob: -19.00017547607422

Token 1262: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10025745630264282
    2. ' __' → logprob: -2.350257396697998
    3. 'name' → logprob: -10.100257873535156
    4. '_name' → logprob: -12.225257873535156
    5. '___' → logprob: -12.850257873535156
    6. '```' → logprob: -14.475257873535156
    7. 'Name' → logprob: -14.725257873535156
    8. ' ' → logprob: -14.850257873535156
    9. '  ' → logprob: -15.600257873535156
    10. ''' → logprob: -15.975257873535156

Token 1263: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.054984062910079956
    2. '==' → logprob: -3.3049840927124023
    3. ' ==' → logprob: -4.304984092712402
    4. 'name' → logprob: -5.929984092712402
    5. '=="' → logprob: -7.554984092712402
    6. '=='' → logprob: -10.179984092712402
    7. ' __' → logprob: -10.429984092712402
    8. 'main' → logprob: -11.304984092712402
    9. '==
' → logprob: -11.929984092712402
    10. 'NAME' → logprob: -12.304984092712402

Token 1264: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.941161776310764e-05
    2. '==' → logprob: -10.250039100646973
    3. '__.__' → logprob: -13.375039100646973
    4. ' ==' → logprob: -13.625039100646973
    5. '=="' → logprob: -14.750039100646973
    6. 'name' → logprob: -15.250039100646973
    7. '____' → logprob: -15.875039100646973
    8. '__
' → logprob: -16.25004005432129
    9. '___' → logprob: -16.25004005432129
    10. '__.' → logprob: -16.50004005432129

Token 1265: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.27461299300193787
    2. '__' → logprob: -1.5246130228042603
    3. ' ==' → logprob: -4.399612903594971
    4. '=="' → logprob: -4.774612903594971
    5. '=='' → logprob: -6.399612903594971
    6. '==
' → logprob: -11.024613380432129
    7. '=' → logprob: -11.149613380432129
    8. '===' → logprob: -12.524613380432129
    9. '[' → logprob: -13.774613380432129
    10. '"' → logprob: -13.774613380432129

Token 1266: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03806111589074135
    2. ''' → logprob: -3.2880611419677734
    3. '__' → logprob: -11.038061141967773
    4. ' "__' → logprob: -12.788061141967773
    5. '"name' → logprob: -15.413061141967773
    6. ' '__' → logprob: -16.163061141967773
    7. '"class' → logprob: -16.288061141967773
    8. ''"' → logprob: -16.413061141967773
    9. '"user' → logprob: -16.413061141967773
    10. '   ' → logprob: -16.913061141967773

Token 1267: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07908156514167786
    2. 'main' → logprob: -2.5790815353393555
    3. '"' → logprob: -8.954081535339355
    4. ''' → logprob: -9.954081535339355
    5. '_main' → logprob: -11.829081535339355
    6. 'name' → logprob: -12.579081535339355
    7. '___' → logprob: -13.079081535339355
    8. ' main' → logprob: -14.204081535339355
    9. '__":
' → logprob: -14.454081535339355
    10. '____' → logprob: -15.204081535339355

Token 1268: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5767101049423218
    2. '__":
' → logprob: -0.8267101049423218
    3. '__':
' → logprob: -7.701710224151611
    4. '__:' → logprob: -8.826709747314453
    5. '__.' → logprob: -10.076709747314453
    6. '__
' → logprob: -10.201709747314453
    7. '__["' → logprob: -10.576709747314453
    8. '__.__' → logprob: -10.826709747314453
    9. '==' → logprob: -11.076709747314453
    10. ' ==' → logprob: -12.201709747314453

Token 1269: '   ' (ID: 271)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.009344237856566906
    2. 'main' → logprob: -5.009344100952148
    3. '"' → logprob: -6.384344100952148
    4. '   ' → logprob: -7.509344100952148
    5. '__":
' → logprob: -8.634344100952148
    6. ''' → logprob: -8.884344100952148
    7. '____' → logprob: -10.509344100952148
    8. '__':
' → logprob: -11.634344100952148
    9. '__
' → logprob: -12.134344100952148
    10. '("__' → logprob: -12.134344100952148

Token 1270: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -16.75
    3. '	main' → logprob: -19.5
    4. '   ' → logprob: -20.0
    5. '_main' → logprob: -23.5
    6. '.main' → logprob: -24.625
    7. '(main' → logprob: -24.875
    8. 'import' → logprob: -25.5
    9. '
' → logprob: -26.375
    10. '```' → logprob: -27.25

Token 1271: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1269
Tokens correctement prédits (1ère position, stricte): 482
Tokens correctement prédits (1ère position, avec adaptation): 520
Tokens correctement prédits (top 10): 955
Précision stricte (1ère position): 37.98%
Précision adaptée (1ère position): 40.98%
Précision (top 10): 75.26%
================================================================================
