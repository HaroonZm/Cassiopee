================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:27:18
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

def common_divisors(numbers):
    # Calculer le PGCD de la liste des nombres
    gcd_value = numbers[0]
    for num in numbers[1:]:
        gcd_value = math.gcd(gcd_value, num)

    # Trouver tous les diviseurs du PGCD
    divisors = []
    for i in range(1, int(math.isqrt(gcd_value)) + 1):
        if gcd_value % i == 0:
            divisors.append(i)
            if i != gcd_value // i:
                divisors.append(gcd_value // i)

    return sorted(divisors)

def main():
    n = int(sys.stdin.readline())
    numbers = list(map(int, sys.stdin.readline().split()))
    divisors = common_divisors(numbers)
    for d in divisors:
        print(d)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.17236806452274323
    2. '\n' → logprob: -2.172368049621582
    3. '<|end|>' → logprob: -4.047368049621582
    4. 'import' → logprob: -4.547368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. '\' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '[' → logprob: -6.922368049621582
    9. '```' → logprob: -7.172368049621582
    10. '.readline' → logprob: -7.172368049621582

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -7.755678961984813e-05
    2. 'os' → logprob: -9.500077247619629
    3. ' math' → logprob: -13.625077247619629
    4. ' re' → logprob: -14.500077247619629
    5. ' json' → logprob: -15.125077247619629
    6. '"os' → logprob: -15.375077247619629
    7. '_os' → logprob: -16.125078201293945
    8. ' io' → logprob: -16.375078201293945
    9. ' ' → logprob: -16.375078201293945
    10. '	os' → logprob: -17.000078201293945

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4576877951622009
    2. '\n' → logprob: -1.8326878547668457
    3. '\' → logprob: -2.3326878547668457
    4. 'import' → logprob: -3.0826878547668457
    5. '```' → logprob: -3.8326878547668457
    6. '
' → logprob: -4.207687854766846
    7. '<|end|>' → logprob: -4.207687854766846
    8. ',' → logprob: -5.582687854766846
    9. '

' → logprob: -5.832687854766846
    10. '<|end|>' → logprob: -6.582687854766846

Token 6: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.111208438873291
    2. '\' → logprob: -1.611208438873291
    3. 'import' → logprob: -1.861208438873291
    4. '.' → logprob: -1.861208438873291
    5. '```' → logprob: -2.611208438873291
    6. 'def' → logprob: -3.361208438873291
    7. '
' → logprob: -4.111208438873291
    8. ',' → logprob: -4.611208438873291
    9. '#' → logprob: -5.236208438873291
    10. '<|end|>' → logprob: -5.361208438873291

Token 7: ' common' (ID: 5355)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0015667574480175972
    2. ' calculate' → logprob: -7.1265668869018555
    3. '_' → logprob: -8.001566886901855
    4. ' ' → logprob: -8.751566886901855
    5. ' space' → logprob: -9.876566886901855
    6. ' factorial' → logprob: -10.501566886901855
    7. ' math' → logprob: -10.751566886901855
    8. ' add' → logprob: -11.001566886901855
    9. ' ```' → logprob: -11.251566886901855
    10. '_space' → logprob: -11.501566886901855

Token 8: '_div' (ID: 36926)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.000551483070012182
    2. '_suffix' → logprob: -8.125551223754883
    3. '_prefix' → logprob: -9.250551223754883
    4. '_space' → logprob: -10.500551223754883
    5. '```' → logprob: -10.625551223754883
    6. '_function' → logprob: -11.375551223754883
    7. '_factor' → logprob: -11.750551223754883
    8. '_s' → logprob: -11.750551223754883
    9. '_token' → logprob: -11.750551223754883
    10. '_name' → logprob: -12.125551223754883

Token 9: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.5763077735900879
    2. 'isor' → logprob: -0.8263077735900879
    3. '_' → logprob: -8.20130729675293
    4. 'isible' → logprob: -10.20130729675293
    5. '```' → logprob: -11.70130729675293
    6. 's' → logprob: -11.82630729675293
    7. 'ider' → logprob: -12.07630729675293
    8. 'i' → logprob: -12.32630729675293
    9. '_is' → logprob: -12.70130729675293
    10. 'isos' → logprob: -13.07630729675293

Token 10: 'ors' (ID: 914)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.12692999839782715
    2. 'ors' → logprob: -2.126929998397827
    3. ' or' → logprob: -13.626930236816406
    4. '```' → logprob: -16.126930236816406
    5. 'ior' → logprob: -16.376930236816406
    6. 'o' → logprob: -16.626930236816406
    7. 'iors' → logprob: -16.751930236816406
    8. '   ' → logprob: -17.001930236816406
    9. '**' → logprob: -17.251930236816406
    10. '(or' → logprob: -17.251930236816406

Token 11: '(numbers' (ID: 98592)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002371521550230682
    2. '_' → logprob: -8.750237464904785
    3. ' (' → logprob: -11.125237464904785
    4. '(_' → logprob: -11.625237464904785
    5. '(a' → logprob: -11.750237464904785
    6. '(n' → logprob: -11.875237464904785
    7. 's' → logprob: -12.375237464904785
    8. '(
' → logprob: -12.375237464904785
    9. '(x' → logprob: -12.375237464904785
    10. '(:' → logprob: -12.875237464904785

Token 12: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0014414230827242136
    2. ')' → logprob: -6.751441478729248
    3. '[' → logprob: -8.50144100189209
    4. ':' → logprob: -10.87644100189209
    5. '):
' → logprob: -11.37644100189209
    6. ',' → logprob: -11.37644100189209
    7. '[]):' → logprob: -11.75144100189209
    8. ' ):' → logprob: -12.00144100189209
    9. '   ' → logprob: -13.00144100189209
    10. '=' → logprob: -14.00144100189209

Token 13: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10300282388925552
    2. ':
' → logprob: -2.8530027866363525
    3. '   ' → logprob: -3.3530027866363525
    4. ' :' → logprob: -6.103003025054932
    5. '():' → logprob: -7.478003025054932
    6. ' :
' → logprob: -7.478003025054932
    7. '(' → logprob: -7.853003025054932
    8. '):' → logprob: -7.853003025054932
    9. '):
' → logprob: -8.978002548217773
    10. '```' → logprob: -9.103002548217773

Token 14: ' #' (ID: 1069)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -1.3623336553573608
    2. '   ' → logprob: -1.3623336553573608
    3. '\' → logprob: -2.1123337745666504
    4. '     
' → logprob: -2.3623337745666504
    5. ' 
' → logprob: -2.4873337745666504
    6. ' ' → logprob: -2.7373337745666504
    7. ' \' → logprob: -3.9873337745666504
    8. '    
' → logprob: -4.23733377456665
    9. 'return' → logprob: -4.48733377456665
    10. '\n' → logprob: -4.48733377456665

Token 15: ' Calcul' (ID: 57243)
  Prédit: ' divis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' divis' → logprob: -0.6964601874351501
    2. '   ' → logprob: -1.696460247039795
    3. ' common' → logprob: -2.071460247039795
    4. '    ' → logprob: -2.946460247039795
    5. 'div' → logprob: -3.196460247039795
    6. ' ' → logprob: -3.696460247039795
    7. ' div' → logprob: -4.446460247039795
    8. ' result' → logprob: -4.696460247039795
    9. ' counter' → logprob: -4.821460247039795
    10. 'common' → logprob: -4.946460247039795

Token 16: 'er' (ID: 259)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.00012070851516909897
    2. 'ator' → logprob: -10.250121116638184
    3. '   ' → logprob: -10.250121116638184
    4. 'ators' → logprob: -11.375121116638184
    5. 'ating' → logprob: -11.500121116638184
    6. '#' → logprob: -12.250121116638184
    7. ' ate' → logprob: -12.250121116638184
    8. 'at' → logprob: -12.875121116638184
    9. ' at' → logprob: -13.250121116638184
    10. 'a' → logprob: -13.250121116638184

Token 17: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10784109681844711
    2. ' l' → logprob: -3.6078410148620605
    3. '   ' → logprob: -3.6078410148620605
    4. '  ' → logprob: -4.1078410148620605
    5. 'e' → logprob: -4.4828410148620605
    6. ' la' → logprob: -5.9828410148620605
    7. '_' → logprob: -5.9828410148620605
    8. ' =' → logprob: -6.1078410148620605
    9. '(' → logprob: -6.7328410148620605
    10. '    ' → logprob: -6.8578410148620605

Token 18: ' PG' (ID: 44249)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.736549437046051
    2. ' ' → logprob: -1.4865493774414062
    3. ' minimum' → logprob: -2.3615493774414062
    4. ' plus' → logprob: -3.1115493774414062
    5. ' gcd' → logprob: -3.3615493774414062
    6. ' max' → logprob: -3.4865493774414062
    7. ' min' → logprob: -3.7365493774414062
    8. ' set' → logprob: -4.486549377441406
    9. ' maximum' → logprob: -4.611549377441406
    10. '  ' → logprob: -4.861549377441406

Token 19: 'CD' (ID: 8257)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.028729960322380066
    2. 'CD' → logprob: -4.2787299156188965
    3. 'c' → logprob: -5.0287299156188965
    4. 'C' → logprob: -5.7787299156188965
    5. 'd' → logprob: -7.0287299156188965
    6. '   ' → logprob: -7.1537299156188965
    7. '_cd' → logprob: -7.9037299156188965
    8. '```' → logprob: -8.028730392456055
    9. '_c' → logprob: -8.278730392456055
    10. 'r' → logprob: -8.278730392456055

Token 20: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06052038446068764
    2. '_' → logprob: -3.1855204105377197
    3. ' (' → logprob: -4.810520172119141
    4. '   ' → logprob: -5.685520172119141
    5. ' ' → logprob: -6.560520172119141
    6. 's' → logprob: -6.935520172119141
    7. 'def' → logprob: -6.935520172119141
    8. '=' → logprob: -7.060520172119141
    9. ' =' → logprob: -7.435520172119141
    10. '(
' → logprob: -8.18552017211914

Token 21: ' la' (ID: 557)
  Prédit: ' tous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tous' → logprob: -1.3368394374847412
    2. ' la' → logprob: -1.4618394374847412
    3. 'numbers' → logprob: -1.4618394374847412
    4. ' numbers' → logprob: -2.211839437484741
    5. ' all' → logprob: -2.961839437484741
    6. ' ' → logprob: -3.586839437484741
    7. ' les' → logprob: -3.586839437484741
    8. 'all' → logprob: -4.33683967590332
    9. ' toutes' → logprob: -4.58683967590332
    10. 'l' → logprob: -5.08683967590332

Token 22: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.499213844537735
    2. 'prem' → logprob: -1.8742138147354126
    3. 'liste' → logprob: -2.374213933944702
    4. 'numbers' → logprob: -2.874213933944702
    5. ' list' → logprob: -3.499213933944702
    6. ' numbers' → logprob: -3.499213933944702
    7. 'list' → logprob: -4.624213695526123
    8. ' ' → logprob: -5.249213695526123
    9. ' premier' → logprob: -5.999213695526123
    10. ' première' → logprob: -6.499213695526123

Token 23: ' des' (ID: 731)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6570229530334473
    2. '   ' → logprob: -1.1570229530334473
    3. ' ' → logprob: -2.5320229530334473
    4. ' (' → logprob: -3.0320229530334473
    5. '_' → logprob: -4.657022953033447
    6. 'def' → logprob: -4.782022953033447
    7. '  ' → logprob: -5.907022953033447
    8. ' des' → logprob: -5.907022953033447
    9. 's' → logprob: -6.032022953033447
    10. '(
' → logprob: -6.157022953033447

Token 24: ' nombres' (ID: 76205)
  Prédit: ' numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.2496093064546585
    2. 'numbers' → logprob: -1.624609351158142
    3. ' nombres' → logprob: -3.7496092319488525
    4. 'n' → logprob: -9.374608993530273
    5. ' ' → logprob: -9.749608993530273
    6. ' nombre' → logprob: -10.249608993530273
    7. ' num' → logprob: -10.249608993530273
    8. 'nombre' → logprob: -10.499608993530273
    9. ' números' → logprob: -10.624608993530273
    10. 'num' → logprob: -10.874608993530273

Token 25: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037541247438639402
    2. '    ' → logprob: -6.628754138946533
    3. 'def' → logprob: -7.378754138946533
    4. ' ' → logprob: -7.878754138946533
    5. '    
' → logprob: -8.378753662109375
    6. '  ' → logprob: -8.378753662109375
    7. ':' → logprob: -9.378753662109375
    8. 'return' → logprob: -9.503753662109375
    9. ' return' → logprob: -9.503753662109375
    10. '```' → logprob: -9.628753662109375

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017800184432417154
    2. 'def' → logprob: -6.876780033111572
    3. '    ' → logprob: -8.626779556274414
    4. ' ' → logprob: -9.251779556274414
    5. '  ' → logprob: -9.251779556274414
    6. '    
' → logprob: -9.626779556274414
    7. 'import' → logprob: -9.876779556274414
    8. ' def' → logprob: -10.376779556274414
    9. ':' → logprob: -10.626779556274414
    10. '(' → logprob: -10.751779556274414

Token 27: ' gcd' (ID: 106918)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.046555742621421814
    2. ' gcd' → logprob: -4.671555519104004
    3. ' pg' → logprob: -4.671555519104004
    4. '    ' → logprob: -4.796555519104004
    5. 'g' → logprob: -5.921555519104004
    6. ' g' → logprob: -5.921555519104004
    7. '    
' → logprob: -6.046555519104004
    8. ' return' → logprob: -6.171555519104004
    9. 'result' → logprob: -6.421555519104004
    10. 'n' → logprob: -6.921555519104004

Token 28: '_value' (ID: 6734)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06576991081237793
    2. ' =' → logprob: -3.190769910812378
    3. '_val' → logprob: -4.940770149230957
    4. '=' → logprob: -5.065770149230957
    5. '_value' → logprob: -5.065770149230957
    6. '(' → logprob: -6.315770149230957
    7. '_result' → logprob: -7.440770149230957
    8. 's' → logprob: -9.440770149230957
    9. ' ' → logprob: -9.565770149230957
    10. '_=' → logprob: -9.565770149230957

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004640880040824413
    2. '=' → logprob: -5.379641056060791
    3. ' ' → logprob: -10.879640579223633
    4. '   ' → logprob: -14.379640579223633
    5. 's' → logprob: -14.879640579223633
    6. '  ' → logprob: -15.254640579223633
    7. '_' → logprob: -16.004640579223633
    8. '=int' → logprob: -16.004640579223633
    9. ' ' → logprob: -16.254640579223633
    10. ',' → logprob: -16.754640579223633

Token 30: ' numbers' (ID: 8663)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.6839945912361145
    2. 'math' → logprob: -1.5589945316314697
    3. ' numbers' → logprob: -1.6839945316314697
    4. 'numbers' → logprob: -2.3089945316314697
    5. ' ' → logprob: -10.30899429321289
    6. '0' → logprob: -11.93399429321289
    7. '1' → logprob: -12.18399429321289
    8. '   ' → logprob: -12.68399429321289
    9. '(numbers' → logprob: -12.68399429321289
    10. '```' → logprob: -13.30899429321289

Token 31: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.9153885558771435e-06
    2. ' [' → logprob: -12.625005722045898
    3. '0' → logprob: -13.375005722045898
    4. '[-' → logprob: -14.625005722045898
    5. 'def' → logprob: -16.1250057220459
    6. 'import' → logprob: -16.1250057220459
    7. ' ' → logprob: -16.6250057220459
    8. '```' → logprob: -16.6250057220459
    9. '   ' → logprob: -17.5625057220459
    10. '[
' → logprob: -17.6250057220459

Token 32: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5094070477061905e-05
    2. ' ' → logprob: -11.125015258789062
    3. '-' → logprob: -15.500015258789062
    4. ']' → logprob: -17.250015258789062
    5. '1' → logprob: -17.750015258789062
    6. '   ' → logprob: -18.000015258789062
    7. '۰' → logprob: -18.625015258789062
    8. '  ' → logprob: -19.000015258789062
    9. '00' → logprob: -19.062515258789062
    10. ' -' → logprob: -19.125015258789062

Token 33: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06037237495183945
    2. ' )' → logprob: -2.9353723526000977
    3. '<|end|>' → logprob: -6.060372352600098
    4. ',' → logprob: -6.560372352600098
    5. ' ' → logprob: -6.810372352600098
    6. ' ,' → logprob: -8.435372352600098
    7. '<|end|>' → logprob: -9.560372352600098
    8. '   ' → logprob: -10.310372352600098
    9. '),' → logprob: -10.435372352600098
    10. ' )
' → logprob: -10.560372352600098

Token 34: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 35: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8406654596328735
    2. 'for' (adapté à ' for') → logprob: -0.8406654596328735
    3. ' ' → logprob: -2.090665340423584
    4. ' 
' → logprob: -4.965665340423584
    5. '.' → logprob: -6.715665340423584
    6. '<|end|>' → logprob: -6.965665340423584
    7. '=' → logprob: -7.465665340423584
    8. '    
' → logprob: -7.590665340423584
    9. '  
' → logprob: -7.590665340423584
    10. '   ' → logprob: -7.840665340423584

Token 36: ' num' (ID: 2269)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13620731234550476
    2. ' num' → logprob: -2.136207342147827
    3. ' number' → logprob: -5.011207103729248
    4. ' n' → logprob: -6.511207103729248
    5. 'num' → logprob: -7.636207103729248
    6. ' i' → logprob: -8.011207580566406
    7. '  ' → logprob: -8.886207580566406
    8. 'n' → logprob: -10.261207580566406
    9. 'number' → logprob: -10.511207580566406
    10. ' x' → logprob: -11.261207580566406

Token 37: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0015375965740531683
    2. ' ' → logprob: -6.626537799835205
    3. 'in' → logprob: -8.876537322998047
    4. 's' → logprob: -9.751537322998047
    5. '  ' → logprob: -11.626537322998047
    6. '   ' → logprob: -13.751537322998047
    7. ' ' → logprob: -13.876537322998047
    8. ' i' → logprob: -14.501537322998047
    9. ' ,' → logprob: -14.751537322998047
    10. ',' → logprob: -14.751537322998047

Token 38: ' numbers' (ID: 8663)
  Prédit: ' numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.0006623993394896388
    2. 'numbers' → logprob: -7.500662326812744
    3. ' ' → logprob: -9.250662803649902
    4. 'umbers' → logprob: -11.750662803649902
    5. ' ' → logprob: -12.750662803649902
    6. '(numbers' → logprob: -14.375662803649902
    7. '_numbers' → logprob: -14.500662803649902
    8. ' range' → logprob: -14.500662803649902
    9. ' number' → logprob: -15.625662803649902
    10. '  ' → logprob: -15.750662803649902

Token 39: '[' (ID: 58)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11077141016721725
    2. '[' → logprob: -2.610771417617798
    3. ' :' → logprob: -3.485771417617798
    4. '   ' → logprob: -7.360771179199219
    5. '    ' → logprob: -10.485771179199219
    6. '1' → logprob: -10.735771179199219
    7. ':
' → logprob: -10.860771179199219
    8. '2' → logprob: -11.860771179199219
    9. '[:' → logprob: -11.860771179199219
    10. ' ' → logprob: -12.360771179199219

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000889067945536226
    2. '):' → logprob: -7.625889301300049
    3. ' ' → logprob: -8.12588882446289
    4. ':' → logprob: -9.87588882446289
    5. ' ):' → logprob: -10.62588882446289
    6. '[' → logprob: -11.37588882446289
    7. ')' → logprob: -12.12588882446289
    8. ' :' → logprob: -12.37588882446289
    9. ']):' → logprob: -13.12588882446289
    10. '):
' → logprob: -13.12588882446289

Token 41: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2865302562713623
    2. ' :' → logprob: -1.5365302562713623
    3. '):' → logprob: -3.6615302562713623
    4. ' ):' → logprob: -4.911530494689941
    5. ']:' → logprob: -8.036530494689941
    6. ')' → logprob: -8.411530494689941
    7. ',' → logprob: -9.411530494689941
    8. ' ,' → logprob: -9.911530494689941
    9. ' :]' → logprob: -10.161530494689941
    10. '):
' → logprob: -10.411530494689941

Token 42: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3541521430015564
    2. '):
' → logprob: -2.229152202606201
    3. '):' → logprob: -2.604152202606201
    4. ' ):
' → logprob: -3.104152202606201
    5. ' :' → logprob: -3.979152202606201
    6. ' ' → logprob: -4.104152202606201
    7. ' ):' → logprob: -4.604152202606201
    8. '   ' → logprob: -4.979152202606201
    9. ':
' → logprob: -5.354152202606201
    10. ')' → logprob: -5.479152202606201

Token 43: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.4160315990447998
    2. '       ' → logprob: -1.4160315990447998
    3. '   ' → logprob: -3.2910315990448
    4. ' ' → logprob: -3.5410315990448
    5. '     
' → logprob: -4.416031837463379
    6. '    
' → logprob: -5.291031837463379
    7. ' 
' → logprob: -5.791031837463379
    8. '        
' → logprob: -6.416031837463379
    9. ' gcd' → logprob: -6.416031837463379
    10. '=' → logprob: -6.416031837463379

Token 44: ' gcd' (ID: 106918)
  Prédit: ' gcd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gcd' → logprob: -0.03405872732400894
    2. 'g' → logprob: -4.159058570861816
    3. ' math' → logprob: -5.534058570861816
    4. ' 
' → logprob: -5.534058570861816
    5. '       ' → logprob: -5.659058570861816
    6. '    ' → logprob: -6.284058570861816
    7. ' ' → logprob: -6.784058570861816
    8. ' import' → logprob: -7.034058570861816
    9. '        ' → logprob: -7.159058570861816
    10. 'import' → logprob: -7.409058570861816

Token 45: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.49673616886138916
    2. '_' → logprob: -0.9967361688613892
    3. '_val' → logprob: -3.8717360496520996
    4. ' =' → logprob: -7.3717360496521
    5. ' _' → logprob: -8.121736526489258
    6. '=' → logprob: -8.371736526489258
    7. '=_' → logprob: -9.746736526489258
    8. '_=' → logprob: -9.746736526489258
    9. '_va' → logprob: -9.746736526489258
    10. '```' → logprob: -10.496736526489258

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011049704626202583
    2. '=' → logprob: -4.511049747467041
    3. ' ' → logprob: -13.261049270629883
    4. ' =
' → logprob: -17.761049270629883
    5. ')' → logprob: -18.136049270629883
    6. ',' → logprob: -18.761049270629883
    7. ' *=' → logprob: -18.761049270629883
    8. '=int' → logprob: -18.886049270629883
    9. ' =
' → logprob: -19.011049270629883
    10. 's' → logprob: -19.011049270629883

Token 47: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.020562559366226196
    2. 'math' → logprob: -3.8955626487731934
    3. ' ' → logprob: -11.395562171936035
    4. ' int' → logprob: -12.145562171936035
    5. ' m' → logprob: -14.145562171936035
    6. '(math' → logprob: -14.520562171936035
    7. ' ' → logprob: -14.770562171936035
    8. 'Math' → logprob: -14.770562171936035
    9. '  ' → logprob: -14.895562171936035
    10. 'm' → logprob: -15.020562171936035

Token 48: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -0.0044136205688118935
    2. '.' → logprob: -5.504413604736328
    3. '.sqrt' → logprob: -8.754413604736328
    4. '.f' → logprob: -10.129413604736328
    5. ' .' → logprob: -10.379413604736328
    6. '.ceil' → logprob: -10.879413604736328
    7. '.atan' → logprob: -11.504413604736328
    8. '.s' → logprob: -11.754413604736328
    9. '.gnu' → logprob: -12.129413604736328
    10. '.floor' → logprob: -12.254413604736328

Token 49: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -2.1008713702030946e-06
    2. 'c' → logprob: -14.125001907348633
    3. 'cdn' → logprob: -14.125001907348633
    4. 'cdf' → logprob: -15.250001907348633
    5. 'CD' → logprob: -15.375001907348633
    6. 'g' → logprob: -16.375001907348633
    7. '	cd' → logprob: -18.000001907348633
    8. '_cd' → logprob: -18.250001907348633
    9. '.cd' → logprob: -18.875001907348633
    10. '.c' → logprob: -19.000001907348633

Token 50: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.31326788663864136
    2. '(' → logprob: -1.3132679462432861
    3. '(
' → logprob: -12.563267707824707
    4. ' (' → logprob: -13.813267707824707
    5. 'g' → logprob: -14.938267707824707
    6. '(

' → logprob: -15.313267707824707
    7. '(gca' → logprob: -15.438267707824707
    8. '(s' → logprob: -16.313268661499023
    9. '(gt' → logprob: -16.313268661499023
    10. '(value' → logprob: -16.438268661499023

Token 51: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.00017481597024016082
    2. 'c' → logprob: -8.875174522399902
    3. 'cdf' → logprob: -11.125174522399902
    4. 'cdn' → logprob: -12.000174522399902
    5. 'd' → logprob: -12.250174522399902
    6. 'num' → logprob: -13.125174522399902
    7. '_cd' → logprob: -13.375174522399902
    8. 'CD' → logprob: -13.750174522399902
    9. 'cc' → logprob: -14.125174522399902
    10. 'cm' → logprob: -14.500174522399902

Token 52: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0005297990282997489
    2. '_' → logprob: -7.625529766082764
    3. '_val' → logprob: -10.875530242919922
    4. ' _' → logprob: -11.750530242919922
    5. ')_' → logprob: -12.500530242919922
    6. '_v' → logprob: -12.875530242919922
    7. 'value' → logprob: -13.000530242919922
    8. 'alue' → logprob: -13.250530242919922
    9. '_va' → logprob: -13.875530242919922
    10. '__' → logprob: -14.500530242919922

Token 53: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005246798973530531
    2. ',num' → logprob: -5.255246639251709
    3. ' ,' → logprob: -11.630247116088867
    4. ',n' → logprob: -12.505247116088867
    5. ',
' → logprob: -15.255247116088867
    6. ',int' → logprob: -17.255247116088867
    7. '   ' → logprob: -17.755247116088867
    8. ',

' → logprob: -18.255247116088867
    9. ',user' → logprob: -18.630247116088867
    10. ',s' → logprob: -18.880247116088867

Token 54: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.014166207052767277
    2. 'num' → logprob: -4.264166355133057
    3. ' ' → logprob: -13.764165878295898
    4. ')' → logprob: -14.514165878295898
    5. ' ' → logprob: -14.514165878295898
    6. ' )' → logprob: -15.389165878295898
    7. ',num' → logprob: -16.0141658782959
    8. '(num' → logprob: -16.0141658782959
    9. '	num' → logprob: -16.6391658782959
    10. '[num' → logprob: -16.6391658782959

Token 55: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3557529857498594e-05
    2. ')
' → logprob: -11.25002384185791
    3. ' )' → logprob: -11.62502384185791
    4. '   ' → logprob: -13.62502384185791
    5. '       ' → logprob: -16.000022888183594
    6. ')

' → logprob: -16.750022888183594
    7. ')`' → logprob: -16.875022888183594
    8. '))' → logprob: -17.000022888183594
    9. ')return' → logprob: -17.875022888183594
    10. ' ' → logprob: -18.750022888183594

Token 56: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26789727807044983
    2. '    
' → logprob: -1.7678972482681274
    3. '   ' → logprob: -3.642897367477417
    4. ' 
' → logprob: -3.642897367477417
    5. '  
' → logprob: -5.017897129058838
    6. '   
' → logprob: -5.517897129058838
    7. '

' → logprob: -8.017897605895996
    8. '
    
' → logprob: -8.517897605895996
    9. '\n' → logprob: -8.642897605895996
    10. '     
' → logprob: -8.767897605895996

Token 57: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3479686677455902
    2. '
' → logprob: -2.097968578338623
    3. '    
' → logprob: -2.097968578338623
    4. ' 
' → logprob: -4.472968578338623
    5. 'return' → logprob: -4.722968578338623
    6. ' return' → logprob: -4.847968578338623
    7. 'result' → logprob: -4.972968578338623
    8. ' result' → logprob: -5.972968578338623
    9. ' common' → logprob: -6.222968578338623
    10. 'common' → logprob: -6.222968578338623

Token 58: ' Trou' (ID: 58947)
  Prédit: ' common'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' common' → logprob: -1.2133322954177856
    2. ' divis' → logprob: -1.2133322954177856
    3. ' result' → logprob: -1.9633322954177856
    4. '   ' → logprob: -2.213332176208496
    5. ' div' → logprob: -2.588332176208496
    6. ' return' → logprob: -3.338332176208496
    7. 'div' → logprob: -3.588332176208496
    8. 'common' → logprob: -5.713332176208496
    9. 'result' → logprob: -5.713332176208496
    10. 'return' → logprob: -6.338332176208496

Token 59: 'ver' (ID: 445)
  Prédit: 'ver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ver' → logprob: -0.007188673131167889
    2. 've' → logprob: -5.25718879699707
    3. 'v' → logprob: -6.50718879699707
    4. '   ' → logprob: -8.50718879699707
    5. 'vez' → logprob: -9.25718879699707
    6. '#' → logprob: -10.63218879699707
    7. '       ' → logprob: -11.00718879699707
    8. '     ' → logprob: -11.25718879699707
    9. 'ves' → logprob: -11.50718879699707
    10. '    ' → logprob: -11.50718879699707

Token 60: ' tous' (ID: 10688)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.691246509552002
    2. ' l' → logprob: -1.066246509552002
    3. ' ' → logprob: -2.441246509552002
    4. ' la' → logprob: -4.316246509552002
    5. ' le' → logprob: -4.691246509552002
    6. ' ' → logprob: -4.816246509552002
    7. 's' → logprob: -4.941246509552002
    8. ' i' → logprob: -5.191246509552002
    9. '   ' → logprob: -5.316246509552002
    10. ' the' → logprob: -5.441246509552002

Token 61: ' les' (ID: 1341)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6886063814163208
    2. ' ' → logprob: -0.9386063814163208
    3. ' les' → logprob: -2.9386062622070312
    4. 'div' → logprob: -3.6886062622070312
    5. ' divis' → logprob: -4.688606262207031
    6. 'i' → logprob: -4.813606262207031
    7. '   ' → logprob: -5.813606262207031
    8. 'les' → logprob: -6.438606262207031
    9. '  ' → logprob: -6.813606262207031
    10. '_' → logprob: -6.938606262207031

Token 62: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -1.048685908317566
    2. ' divis' → logprob: -1.048685908317566
    3. ' div' → logprob: -1.548685908317566
    4. ' i' → logprob: -2.6736860275268555
    5. ' d' → logprob: -5.2986860275268555
    6. 'i' → logprob: -5.6736860275268555
    7. '	div' → logprob: -5.9236860275268555
    8. ' ' → logprob: -6.0486860275268555
    9. ' common' → logprob: -6.7986860275268555
    10. 'd' → logprob: -7.0486860275268555

Token 63: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.4944406747817993
    2. 'i' → logprob: -1.4944406747817993
    3. 'is' → logprob: -1.9944406747817993
    4. '   ' → logprob: -4.74444055557251
    5. '```' → logprob: -5.24444055557251
    6. 's' → logprob: -5.86944055557251
    7. 'e' → logprob: -6.11944055557251
    8. '_' → logprob: -6.36944055557251
    9. '    ' → logprob: -6.99444055557251
    10. '       ' → logprob: -6.99444055557251

Token 64: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -2.3795937522663735e-05
    2. 'u' → logprob: -10.75002384185791
    3. 'rs' → logprob: -14.25002384185791
    4. '```' → logprob: -14.25002384185791
    5. '   ' → logprob: -15.12502384185791
    6. 'ur' → logprob: -15.50002384185791
    7. ' urs' → logprob: -15.50002384185791
    8. 'us' → logprob: -16.750022888183594
    9. 'ursors' → logprob: -17.000022888183594
    10. ' ' → logprob: -17.000022888183594

Token 65: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3280666172504425
    2. ' de' → logprob: -1.4530665874481201
    3. ' of' → logprob: -4.578066825866699
    4. 's' → logprob: -4.578066825866699
    5. 'de' → logprob: -5.203066825866699
    6. ' i' → logprob: -5.828066825866699
    7. 'def' → logprob: -5.953066825866699
    8. ' du' → logprob: -6.203066825866699
    9. 'du' → logprob: -6.328066825866699
    10. 'g' → logprob: -6.453066825866699

Token 66: ' PG' (ID: 44249)
  Prédit: ' gcd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' gcd' → logprob: -0.006523880176246166
    2. 'g' → logprob: -5.131524085998535
    3. ' ' → logprob: -8.131524085998535
    4. ' ' → logprob: -8.381524085998535
    5. ' g' → logprob: -10.006524085998535
    6. '	g' → logprob: -12.256524085998535
    7. ' space' → logprob: -12.506524085998535
    8. ' math' → logprob: -12.881524085998535
    9. '_g' → logprob: -13.006524085998535
    10. ' gsl' → logprob: -13.631524085998535

Token 67: 'CD' (ID: 8257)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3524060845375061
    2. 'cd' → logprob: -1.3524060249328613
    3. '   ' → logprob: -3.6024060249328613
    4. 'cid' → logprob: -5.477406024932861
    5. 'd' → logprob: -5.727406024932861
    6. '_c' → logprob: -7.352406024932861
    7. ' gcd' → logprob: -7.852406024932861
    8. 'cad' → logprob: -8.10240650177002
    9. '  ' → logprob: -8.35240650177002
    10. 'div' → logprob: -8.60240650177002

Token 68: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005539901088923216
    2. '
' → logprob: -6.255539894104004
    3. '    
' → logprob: -6.505539894104004
    4. 's' → logprob: -7.255539894104004
    5. 'n' → logprob: -7.630539894104004
    6. ':' → logprob: -8.755539894104004
    7. 'def' → logprob: -9.130539894104004
    8. '\n' → logprob: -9.255539894104004
    9. 'div' → logprob: -9.380539894104004
    10. '  
' → logprob: -9.380539894104004

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006096287979744375
    2. 'div' → logprob: -8.125609397888184
    3. ' divis' → logprob: -8.875609397888184
    4. '    
' → logprob: -9.625609397888184
    5. ' div' → logprob: -10.250609397888184
    6. '  ' → logprob: -11.250609397888184
    7. '```' → logprob: -11.375609397888184
    8. '	div' → logprob: -11.500609397888184
    9. '
' → logprob: -11.625609397888184
    10. 'def' → logprob: -12.625609397888184

Token 70: ' divis' (ID: 37826)
  Prédit: ' divis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' divis' → logprob: -0.3046240508556366
    2. 'div' → logprob: -1.429624080657959
    3. ' div' → logprob: -4.179624080657959
    4. '   ' → logprob: -4.929624080657959
    5. ' import' → logprob: -8.4296236038208
    6. ' result' → logprob: -8.9296236038208
    7. '	div' → logprob: -9.3046236038208
    8. 'import' → logprob: -9.8046236038208
    9. ' common' → logprob: -10.1796236038208
    10. 'result' → logprob: -10.4296236038208

Token 71: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.009264862164855003
    2. 'eurs' → logprob: -5.009264945983887
    3. 'e' → logprob: -6.134264945983887
    4. '   ' → logprob: -9.509264945983887
    5. '```' → logprob: -9.634264945983887
    6. 'o' → logprob: -9.759264945983887
    7. 'eux' → logprob: -9.759264945983887
    8. 'iors' → logprob: -10.634264945983887
    9. 'ers' → logprob: -11.384264945983887
    10. '=' → logprob: -11.509264945983887

Token 72: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016236355528235435
    2. '=' → logprob: -4.141236305236816
    3. '_' → logprob: -8.891236305236816
    4. ' ' → logprob: -10.016236305236816
    5. 's' → logprob: -12.016236305236816
    6. '   ' → logprob: -12.766236305236816
    7. '	' → logprob: -13.516236305236816
    8. '=[]' → logprob: -13.641236305236816
    9. ' ' → logprob: -13.766236305236816
    10. '_space' → logprob: -13.891236305236816

Token 73: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6995738744735718
    2. ' []' → logprob: -0.6995738744735718
    3. 'set' → logprob: -5.574573993682861
    4. ' set' → logprob: -6.949573993682861
    5. ' [' → logprob: -7.074573993682861
    6. '[' → logprob: -7.199573993682861
    7. '[]
' → logprob: -10.199573516845703
    8. ' []
' → logprob: -12.199573516845703
    9. ' ' → logprob: -12.449573516845703
    10. '[int' → logprob: -12.449573516845703

Token 74: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06916670501232147
    2. ' for' → logprob: -2.944166660308838
    3. 'for' → logprob: -4.569166660308838
    4. '    
' → logprob: -6.444166660308838
    5. 'n' → logprob: -7.569166660308838
    6. '
' → logprob: -7.694166660308838
    7. 'import' → logprob: -8.069167137145996
    8. '```' → logprob: -8.319167137145996
    9. ' i' → logprob: -8.944167137145996
    10. '   
' → logprob: -9.444167137145996

Token 75: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.7073518633842468
    2. ' for' → logprob: -0.9573518633842468
    3. 'limit' → logprob: -2.7073519229888916
    4. ' limit' → logprob: -3.7073519229888916
    5. '   ' → logprob: -3.9573519229888916
    6. ' i' → logprob: -5.2073516845703125
    7. 'import' → logprob: -5.9573516845703125
    8. ' import' → logprob: -6.2073516845703125
    9. 'i' → logprob: -6.3323516845703125
    10. 'max' → logprob: -7.8323516845703125

Token 76: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0018965097842738032
    2. 'i' → logprob: -6.376896381378174
    3. ' d' → logprob: -8.626896858215332
    4. '	i' → logprob: -11.751896858215332
    5. 'd' → logprob: -12.376896858215332
    6. ' ' → logprob: -13.251896858215332
    7. ' divisor' → logprob: -14.376896858215332
    8. '```' → logprob: -15.626896858215332
    9. ' ' → logprob: -16.126895904541016
    10. ' x' → logprob: -16.376895904541016

Token 77: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0022939443588256836
    2. 'in' → logprob: -6.127294063568115
    3. ' ' → logprob: -9.252293586730957
    4. ' i' → logprob: -11.627293586730957
    5. '1' → logprob: -13.627293586730957
    6. 'range' → logprob: -14.377293586730957
    7. 'n' → logprob: -14.752293586730957
    8. '   ' → logprob: -15.252293586730957
    9. ' ' → logprob: -15.252293586730957
    10. '  ' → logprob: -15.252293586730957

Token 78: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0017067246371880174
    2. 'range' → logprob: -6.376706600189209
    3. ' ' → logprob: -13.251707077026367
    4. '	range' → logprob: -13.251707077026367
    5. '(range' → logprob: -15.626707077026367
    6. '   ' → logprob: -16.001707077026367
    7. ' ' → logprob: -16.001707077026367
    8. '  ' → logprob: -16.251707077026367
    9. '```' → logprob: -16.751707077026367
    10. ' rang' → logprob: -17.126707077026367

Token 79: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.383526149671525e-05
    2. '1' → logprob: -10.375053405761719
    3. ' (' → logprob: -10.750053405761719
    4. ' ' → logprob: -14.000053405761719
    5. '(
' → logprob: -15.250053405761719
    6. '(int' → logprob: -17.00005340576172
    7. '2' → logprob: -17.00005340576172
    8. 'int' → logprob: -18.12505340576172
    9. '[' → logprob: -18.37505340576172
    10. '   ' → logprob: -18.75005340576172

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002967320033349097
    2. ' ' → logprob: -8.125296592712402
    3. 'int' → logprob: -15.125296592712402
    4. '   ' → logprob: -16.00029754638672
    5. '(' → logprob: -16.37529754638672
    6. '2' → logprob: -17.25029754638672
    7. '  ' → logprob: -17.56279754638672
    8. ',' → logprob: -17.87529754638672
    9. '	' → logprob: -17.87529754638672
    10. '```' → logprob: -18.12529754638672

Token 81: ',' (ID: 11)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.387350469827652
    2. ',' → logprob: -1.1373504400253296
    3. ',g' → logprob: -8.012350082397461
    4. ',int' → logprob: -8.887350082397461
    5. 'g' → logprob: -11.887350082397461
    6. ' ,
' → logprob: -13.762350082397461
    7. 'int' → logprob: -14.512350082397461
    8. ' ,

' → logprob: -14.762350082397461
    9. ',i' → logprob: -15.137350082397461
    10. ',
' → logprob: -15.512350082397461

Token 82: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.6377711296081543
    2. 'int' → logprob: -1.0127711296081543
    3. 'g' → logprob: -2.5127711296081543
    4. ' gcd' → logprob: -3.6377711296081543
    5. ' math' → logprob: -7.387771129608154
    6. ' ' → logprob: -8.637771606445312
    7. 'math' → logprob: -9.387771606445312
    8. ' g' → logprob: -10.137771606445312
    9. '	g' → logprob: -11.762771606445312
    10. '```' → logprob: -12.012771606445312

Token 83: '(math' (ID: 86464)
  Prédit: '(math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.15230371057987213
    2. '(g' → logprob: -2.027303695678711
    3. '(' → logprob: -4.777303695678711
    4. ' (' → logprob: -6.902303695678711
    5. '(s' → logprob: -10.027303695678711
    6. 'math' → logprob: -10.152303695678711
    7. '(m' → logprob: -10.277303695678711
    8. '((' → logprob: -11.277303695678711
    9. '(
' → logprob: -11.527303695678711
    10. ' math' → logprob: -11.652303695678711

Token 84: '.is' (ID: 3109)
  Prédit: '.sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.004650253336876631
    2. '.' → logprob: -5.629650115966797
    3. '.g' → logprob: -7.754650115966797
    4. '.is' → logprob: -8.004650115966797
    5. ' .' → logprob: -9.254650115966797
    6. '.s' → logprob: -9.879650115966797
    7. '.math' → logprob: -9.879650115966797
    8. 'sqrt' → logprob: -10.129650115966797
    9. '.ceil' → logprob: -11.254650115966797
    10. '.floor' → logprob: -11.754650115966797

Token 85: 'qrt' (ID: 17629)
  Prédit: 'qrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qrt' → logprob: -2.45848218582978e-06
    2. 'q' → logprob: -13.00000286102295
    3. 'sqrt' → logprob: -16.375001907348633
    4. 'qr' → logprob: -17.000001907348633
    5. 'quare' → logprob: -17.625001907348633
    6. 'rt' → logprob: -19.250001907348633
    7. 'r' → logprob: -19.375001907348633
    8. 'qt' → logprob: -19.750001907348633
    9. '```' → logprob: -19.875001907348633
    10. 't' → logprob: -20.250001907348633

Token 86: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -7.362307223957032e-05
    2. '(' → logprob: -9.625073432922363
    3. 'g' → logprob: -13.125073432922363
    4. ' (' → logprob: -13.250073432922363
    5. '(
' → logprob: -13.250073432922363
    6. '(s' → logprob: -14.625073432922363
    7. ')' → logprob: -14.750073432922363
    8. ')(' → logprob: -14.875073432922363
    9. '(math' → logprob: -15.875073432922363
    10. '((' → logprob: -16.25007438659668

Token 87: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.0003290288441348821
    2. 'c' → logprob: -8.37532901763916
    3. 'cdf' → logprob: -10.25032901763916
    4. ')' → logprob: -11.00032901763916
    5. 'cdn' → logprob: -12.12532901763916
    6. 'g' → logprob: -12.56282901763916
    7. ' gcd' → logprob: -12.87532901763916
    8. 'cf' → logprob: -13.06282901763916
    9. '```' → logprob: -13.06282901763916
    10. 'CD' → logprob: -13.12532901763916

Token 88: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -4.906711546937004e-05
    2. '_' → logprob: -11.250048637390137
    3. '_val' → logprob: -11.250048637390137
    4. 'value' → logprob: -11.500048637390137
    5. ')_' → logprob: -11.875048637390137
    6. ' _' → logprob: -13.125048637390137
    7. ')' → logprob: -13.875048637390137
    8. '   ' → logprob: -14.500048637390137
    9. '_va' → logprob: -15.375048637390137
    10. 'alue' → logprob: -15.500048637390137

Token 89: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1083626076579094
    2. '))' → logprob: -2.6083626747131348
    3. ')+' → logprob: -4.108362674713135
    4. ' )' → logprob: -5.108362674713135
    5. '))+' → logprob: -5.233362674713135
    6. ' ))' → logprob: -7.983362674713135
    7. '(' → logprob: -8.108362197875977
    8. '(g' → logprob: -8.733362197875977
    9. '   ' → logprob: -8.733362197875977
    10. ' ' → logprob: -9.358362197875977

Token 90: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2519982159137726
    2. '+' → logprob: -1.5019981861114502
    3. ' ' → logprob: -10.501997947692871
    4. '()+' → logprob: -10.626997947692871
    5. ')+' → logprob: -11.376997947692871
    6. '   ' → logprob: -12.876997947692871
    7. ')' → logprob: -13.376997947692871
    8. '()' → logprob: -14.751997947692871
    9. ' +
' → logprob: -15.376997947692871
    10. '+i' → logprob: -15.501997947692871

Token 91: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010341187007725239
    2. ' ' → logprob: -6.876034259796143
    3. '2' → logprob: -14.501033782958984
    4. '   ' → logprob: -15.001033782958984
    5. '```' → logprob: -15.376033782958984
    6. '(' → logprob: -15.876033782958984
    7. '
' → logprob: -17.063533782958984
    8. ')' → logprob: -17.126033782958984
    9. '  ' → logprob: -17.188533782958984
    10. '    ' → logprob: -17.251033782958984

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -17.625059127807617
    4. '2' → logprob: -18.125059127807617
    5. '  ' → logprob: -18.625059127807617
    6. '```' → logprob: -19.250059127807617
    7. '+' → logprob: -20.000059127807617
    8. '１' → logprob: -20.062559127807617
    9. ')' → logprob: -20.375059127807617
    10. ' ' → logprob: -20.500059127807617

Token 93: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.033309537917375565
    2. '):
' → logprob: -3.9083094596862793
    3. ':' → logprob: -4.408309459686279
    4. ')' → logprob: -8.408309936523438
    5. '   ' → logprob: -9.033309936523438
    6. ' ):' → logprob: -9.533309936523438
    7. '):
' → logprob: -10.283309936523438
    8. ' :' → logprob: -10.533309936523438
    9. ':
' → logprob: -11.783309936523438
    10. ',' → logprob: -11.783309936523438

Token 94: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20373904705047607
    2. ':' → logprob: -1.703739047050476
    3. ':
' → logprob: -6.828739166259766
    4. ' :' → logprob: -7.703739166259766
    5. '   ' → logprob: -8.078739166259766
    6. ' if' → logprob: -8.828739166259766
    7. '    ' → logprob: -9.078739166259766
    8. '<|end|>' → logprob: -9.578739166259766
    9. 'if' → logprob: -10.328739166259766
    10. ' :
' → logprob: -10.578739166259766

Token 95: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.420432984828949
    2. 'if' (adapté à ' if') → logprob: -1.5454330444335938
    3. '       ' → logprob: -2.1704330444335938
    4. ' ' → logprob: -4.295433044433594
    5. '   ' → logprob: -6.420433044433594
    6. '    ' → logprob: -8.670433044433594
    7. '           ' → logprob: -9.420433044433594
    8. ' 
' → logprob: -9.670433044433594
    9. '        ' → logprob: -10.045433044433594
    10. '<|end|>' → logprob: -10.045433044433594

Token 96: ' gcd' (ID: 106918)
  Prédit: ' gcd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gcd' → logprob: -0.00027718624914996326
    2. 'g' → logprob: -8.250277519226074
    3. ' ' → logprob: -11.250277519226074
    4. ' ' → logprob: -13.500277519226074
    5. ' gc' → logprob: -14.750277519226074
    6. ' g' → logprob: -15.000277519226074
    7. '	g' → logprob: -15.375277519226074
    8. ' gsl' → logprob: -15.875277519226074
    9. ' (' → logprob: -16.375276565551758
    10. ' gql' → logprob: -16.750276565551758

Token 97: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -8.65707261255011e-06
    2. '_val' → logprob: -12.250008583068848
    3. '_' → logprob: -12.625008583068848
    4. 'value' → logprob: -15.500008583068848
    5. '_va' → logprob: -15.875008583068848
    6. '_v' → logprob: -16.000009536743164
    7. '_VALUE' → logprob: -18.000009536743164
    8. 'alue' → logprob: -18.125009536743164
    9. '_Value' → logprob: -18.125009536743164
    10. ' _' → logprob: -18.500009536743164

Token 98: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.16152365505695343
    2. '%' → logprob: -1.911523699760437
    3. '%i' → logprob: -6.661523818969727
    4. ' ' → logprob: -11.286523818969727
    5. ' ' → logprob: -12.161523818969727
    6. '%d' → logprob: -14.411523818969727
    7. '%e' → logprob: -15.161523818969727
    8. '%s' → logprob: -15.161523818969727
    9. '%x' → logprob: -15.661523818969727
    10. '%c' → logprob: -15.911523818969727

Token 99: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4740898311138153
    2. 'i' → logprob: -0.9740898609161377
    3. '	i' → logprob: -11.974089622497559
    4. ' ' → logprob: -12.099089622497559
    5. '<|end|>' → logprob: -14.474089622497559
    6. '```' → logprob: -15.724089622497559
    7. ' ' → logprob: -16.224090576171875
    8. '  ' → logprob: -16.474090576171875
    9. '   ' → logprob: -17.599090576171875
    10. '<|end|>' → logprob: -17.599090576171875

Token 100: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.029757322743535042
    2. '==' → logprob: -3.529757261276245
    3. '=' → logprob: -12.654757499694824
    4. ' =' → logprob: -13.654757499694824
    5. ' ' → logprob: -13.904757499694824
    6. ')==' → logprob: -13.904757499694824
    7. '===' → logprob: -15.404757499694824
    8. ']==' → logprob: -16.029756546020508
    9. '0' → logprob: -16.279756546020508
    10. ' ===' → logprob: -16.404756546020508

Token 101: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06196768581867218
    2. ' ' → logprob: -2.811967611312866
    3. ' ' → logprob: -17.436967849731445
    4. '۰' → logprob: -17.436967849731445
    5. '  ' → logprob: -17.561967849731445
    6. '   ' → logprob: -18.311967849731445
    7. '    ' → logprob: -19.061967849731445
    8. '٠' → logprob: -19.624467849731445
    9. '```' → logprob: -19.936967849731445
    10. '	' → logprob: -20.311967849731445

Token 102: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '۰' → logprob: -18.750261306762695
    4. ' ' → logprob: -20.500261306762695
    5. '  ' → logprob: -20.625261306762695
    6. '٠' → logprob: -20.875261306762695
    7. '   ' → logprob: -21.312761306762695
    8. '０' → logprob: -21.500261306762695
    9. '00' → logprob: -21.500261306762695
    10. '

' → logprob: -22.187761306762695

Token 103: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026581496000289917
    2. ':
' → logprob: -3.6515815258026123
    3. '):' → logprob: -9.026581764221191
    4. '):
' → logprob: -9.526581764221191
    5. '       ' → logprob: -9.901581764221191
    6. ':
' → logprob: -10.651581764221191
    7. ' :' → logprob: -12.026581764221191
    8. ':

' → logprob: -12.901581764221191
    9. '           ' → logprob: -13.776581764221191
    10. '   ' → logprob: -14.026581764221191

Token 104: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22546762228012085
    2. '           ' → logprob: -1.6004676818847656
    3. 'div' → logprob: -10.100467681884766
    4. '
' → logprob: -12.475467681884766
    5. '        
' → logprob: -12.975467681884766
    6. '   ' → logprob: -13.475467681884766
    7. '```' → logprob: -13.600467681884766
    8. '	       ' → logprob: -13.850467681884766
    9. '          ' → logprob: -14.350467681884766
    10. '            
' → logprob: -14.600467681884766

Token 105: ' divis' (ID: 37826)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.27161863446235657
    2. ' divis' → logprob: -2.021618604660034
    3. '           ' → logprob: -2.271618604660034
    4. '               ' → logprob: -6.146618843078613
    5. ' div' → logprob: -9.896618843078613
    6. '	div' → logprob: -10.396618843078613
    7. '   ' → logprob: -11.021618843078613
    8. '       ' → logprob: -11.146618843078613
    9. ' ' → logprob: -13.021618843078613
    10. ' dividends' → logprob: -13.271618843078613

Token 106: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.0011485524009913206
    2. 's' → logprob: -8.126148223876953
    3. '       ' → logprob: -8.876148223876953
    4. '           ' → logprob: -9.001148223876953
    5. 'rors' → logprob: -9.126148223876953
    6. 'tors' → logprob: -9.376148223876953
    7. 'iors' → logprob: -9.376148223876953
    8. '   ' → logprob: -9.751148223876953
    9. 'rs' → logprob: -9.876148223876953
    10. '               ' → logprob: -10.251148223876953

Token 107: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0032611307688057423
    2. '.' → logprob: -5.753261089324951
    3. '.extend' → logprob: -9.50326156616211
    4. ' .' → logprob: -12.00326156616211
    5. '.ap' → logprob: -13.87826156616211
    6. '.app' → logprob: -14.50326156616211
    7. '.Append' → logprob: -14.75326156616211
    8. '.add' → logprob: -15.00326156616211
    9. '.py' → logprob: -15.00326156616211
    10. '​.' → logprob: -16.62826156616211

Token 108: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00010914575977949426
    2. '(' → logprob: -9.12510871887207
    3. ' (' → logprob: -15.75010871887207
    4. 'i' → logprob: -17.12510871887207
    5. '(
' → logprob: -17.37510871887207
    6. ' i' → logprob: -18.25010871887207
    7. '(I' → logprob: -19.62510871887207
    8. '(

' → logprob: -20.75010871887207
    9. '(ii' → logprob: -21.25010871887207
    10. ')' → logprob: -21.25010871887207

Token 109: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2126239687204361
    2. ')
' → logprob: -1.837623953819275
    3. ')' → logprob: -3.4626240730285645
    4. '       ' → logprob: -7.4626240730285645
    5. '
' → logprob: -8.212623596191406
    6. '            
' → logprob: -10.212623596191406
    7. ')
' → logprob: -10.587623596191406
    8. '               ' → logprob: -10.837623596191406
    9. ' )
' → logprob: -10.962623596191406
    10. ',' → logprob: -11.837623596191406

Token 110: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.704065213445574e-05
    2. '
' → logprob: -11.000046730041504
    3. 'if' → logprob: -11.000046730041504
    4. ' if' → logprob: -12.375046730041504
    5. '       ' → logprob: -12.500046730041504
    6. '            
' → logprob: -13.000046730041504
    7. '```' → logprob: -13.250046730041504
    8. '          ' → logprob: -14.750046730041504
    9. '``' → logprob: -15.125046730041504
    10. '         ' → logprob: -15.625046730041504

Token 111: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.02183423936367035
    2. ' if' → logprob: -4.021834373474121
    3. '           ' → logprob: -5.646834373474121
    4. 'div' → logprob: -9.021834373474121
    5. '               ' → logprob: -11.271834373474121
    6. ' divis' → logprob: -11.396834373474121
    7. '```' → logprob: -13.521834373474121
    8. '
' → logprob: -14.271834373474121
    9. ' ' → logprob: -14.271834373474121
    10. '            
' → logprob: -14.521834373474121

Token 112: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3484826385974884
    2. ' i' → logprob: -1.223482608795166
    3. ' gcd' → logprob: -11.098483085632324
    4. '	i' → logprob: -11.473483085632324
    5. '   ' → logprob: -12.473483085632324
    6. ' ' → logprob: -12.848483085632324
    7. '(i' → logprob: -13.473483085632324
    8. 'g' → logprob: -13.723483085632324
    9. '    ' → logprob: -14.098483085632324
    10. ' (' → logprob: -14.098483085632324

Token 113: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.3871087431907654
    2. ' !=' → logprob: -1.1371088027954102
    3. '*' → logprob: -8.88710880279541
    4. ' *' → logprob: -10.38710880279541
    5. '*i' → logprob: -11.38710880279541
    6. '!=(' → logprob: -11.51210880279541
    7. '!==' → logprob: -11.51210880279541
    8. ' ' → logprob: -11.63710880279541
    9. ')!=' → logprob: -11.88710880279541
    10. '()!=' → logprob: -12.26210880279541

Token 114: ' gcd' (ID: 106918)
  Prédit: ' gcd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gcd' → logprob: -0.08931652456521988
    2. 'g' → logprob: -2.4643166065216064
    3. ' ' → logprob: -8.089316368103027
    4. '   ' → logprob: -11.089316368103027
    5. '	g' → logprob: -11.339316368103027
    6. '1' → logprob: -11.339316368103027
    7. ' g' → logprob: -12.214316368103027
    8. '  ' → logprob: -12.214316368103027
    9. '    ' → logprob: -12.714316368103027
    10. ' ' → logprob: -12.839316368103027

Token 115: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.306760805164231e-05
    2. 'alue' → logprob: -11.75001335144043
    3. 'value' → logprob: -12.37501335144043
    4. '_VALUE' → logprob: -14.75001335144043
    5. '_' → logprob: -16.12501335144043
    6. 'div' → logprob: -16.25001335144043
    7. 'Value' → logprob: -16.62501335144043
    8. '_Value' → logprob: -16.75001335144043
    9. 'ivot' → logprob: -17.37501335144043
    10. '_values' → logprob: -17.50001335144043

Token 116: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.1434829831123352
    2. ' //' → logprob: -2.0184829235076904
    3. ' ' → logprob: -7.2684831619262695
    4. '/' → logprob: -9.64348316192627
    5. ' ' → logprob: -10.76848316192627
    6. ' /' → logprob: -11.64348316192627
    7. '```' → logprob: -12.26848316192627
    8. '#' → logprob: -12.26848316192627
    9. '/i' → logprob: -13.76848316192627
    10. '   ' → logprob: -14.14348316192627

Token 117: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0024758970830589533
    2. ' i' → logprob: -6.002475738525391
    3. ' ' → logprob: -15.62747573852539
    4. '	i' → logprob: -16.37747573852539
    5. '   ' → logprob: -16.62747573852539
    6. ' ' → logprob: -18.75247573852539
    7. '  ' → logprob: -18.75247573852539
    8. '```' → logprob: -19.00247573852539
    9. '           ' → logprob: -20.50247573852539
    10. '    ' → logprob: -20.62747573852539

Token 118: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14397847652435303
    2. ':
' → logprob: -2.0189785957336426
    3. '):
' → logprob: -7.268978595733643
    4. '           ' → logprob: -8.018978118896484
    5. '):' → logprob: -9.393978118896484
    6. ',' → logprob: -9.518978118896484
    7. ' and' → logprob: -10.518978118896484
    8. ':
' → logprob: -10.768978118896484
    9. ')' → logprob: -11.143978118896484
    10. '               ' → logprob: -11.643978118896484

Token 119: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.021286362782120705
    2. ' divis' → logprob: -3.8962862491607666
    3. 'div' → logprob: -7.521286487579346
    4. '           ' → logprob: -9.271286010742188
    5. '                
' → logprob: -10.396286010742188
    6. ' div' → logprob: -10.646286010742188
    7. ' ' → logprob: -11.521286010742188
    8. '              ' → logprob: -11.646286010742188
    9. '_div' → logprob: -12.146286010742188
    10. '                   ' → logprob: -12.396286010742188

Token 120: ' divis' (ID: 37826)
  Prédit: ' divis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' divis' → logprob: -0.04348482936620712
    2. 'div' → logprob: -3.418484926223755
    3. '               ' → logprob: -4.668484687805176
    4. ' div' → logprob: -8.543484687805176
    5. '                   ' → logprob: -9.293484687805176
    6. '                ' → logprob: -10.418484687805176
    7. ' dividends' → logprob: -11.168484687805176
    8. '_div' → logprob: -11.418484687805176
    9. '	div' → logprob: -11.418484687805176
    10. ' divisions' → logprob: -11.543484687805176

Token 121: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.0017061287071555853
    2. 's' → logprob: -6.876706123352051
    3. '               ' → logprob: -8.50170612335205
    4. 'rs' → logprob: -9.50170612335205
    5. 'ators' → logprob: -9.62670612335205
    6. 'tors' → logprob: -9.75170612335205
    7. 'ers' → logprob: -10.00170612335205
    8. 'urs' → logprob: -10.12670612335205
    9. 'iors' → logprob: -10.12670612335205
    10. 'rors' → logprob: -10.25170612335205

Token 122: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0011936791706830263
    2. '.' → logprob: -6.751193523406982
    3. '.extend' → logprob: -11.00119400024414
    4. ' .' → logprob: -13.00119400024414
    5. '.app' → logprob: -14.00119400024414
    6. '.setdefault' → logprob: -14.00119400024414
    7. '.add' → logprob: -14.25119400024414
    8. '           ' → logprob: -14.50119400024414
    9. ').' → logprob: -14.62619400024414
    10. '               ' → logprob: -14.75119400024414

Token 123: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.00033665422233752906
    2. '(' → logprob: -8.000336647033691
    3. ' (' → logprob: -14.625336647033691
    4. '((' → logprob: -15.250336647033691
    5. '(
' → logprob: -15.375336647033691
    6. 'g' → logprob: -16.000337600708008
    7. '(math' → logprob: -16.375337600708008
    8. '(gc' → logprob: -16.875337600708008
    9. '(c' → logprob: -18.375337600708008
    10. '(gca' → logprob: -18.750337600708008

Token 124: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -8.537868779967539e-06
    2. 'c' → logprob: -13.000008583068848
    3. 'cdf' → logprob: -13.750008583068848
    4. ' gcd' → logprob: -13.750008583068848
    5. 'div' → logprob: -13.875008583068848
    6. '   ' → logprob: -14.000008583068848
    7. '(cd' → logprob: -14.875008583068848
    8. 'cdn' → logprob: -15.125008583068848
    9. ')' → logprob: -15.125008583068848
    10. '(g' → logprob: -15.250008583068848

Token 125: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -6.492120155598968e-05
    2. 'value' → logprob: -9.750064849853516
    3. 'alue' → logprob: -12.250064849853516
    4. 'Value' → logprob: -14.375064849853516
    5. '_VALUE' → logprob: -15.000064849853516
    6. '_values' → logprob: -15.375064849853516
    7. '_' → logprob: -15.625064849853516
    8. 'div' → logprob: -16.125064849853516
    9. '_Value' → logprob: -16.250064849853516
    10. '_val' → logprob: -17.000064849853516

Token 126: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.08908919245004654
    2. '//' → logprob: -2.4640891551971436
    3. ' ' → logprob: -9.214089393615723
    4. ' ' → logprob: -10.214089393615723
    5. ' /' → logprob: -12.714089393615723
    6. '/' → logprob: -12.964089393615723
    7. '#' → logprob: -13.339089393615723
    8. ' //
' → logprob: -13.339089393615723
    9. '/i' → logprob: -13.714089393615723
    10. '%' → logprob: -13.964089393615723

Token 127: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.007607100997120142
    2. ' i' → logprob: -4.8826069831848145
    3. ' ' → logprob: -14.632607460021973
    4. '	i' → logprob: -15.382607460021973
    5. '   ' → logprob: -15.632607460021973
    6. ')' → logprob: -16.757606506347656
    7. '  ' → logprob: -17.632606506347656
    8. ')i' → logprob: -17.882606506347656
    9. '_i' → logprob: -18.632606506347656
    10. '(i' → logprob: -18.757606506347656

Token 128: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009777903323993087
    2. ')
' → logprob: -7.000977993011475
    3. '   ' → logprob: -9.750977516174316
    4. '       ' → logprob: -12.375977516174316
    5. ')

' → logprob: -13.750977516174316
    6. ' )' → logprob: -14.000977516174316
    7. ')return' → logprob: -14.125977516174316
    8. ')
' → logprob: -14.875977516174316
    9. '           ' → logprob: -15.500977516174316
    10. '))' → logprob: -16.250978469848633

Token 129: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049342796206474304
    2. '
' → logprob: -3.0493428707122803
    3. '    
' → logprob: -7.299342632293701
    4. '  
' → logprob: -10.42434310913086
    5. 'return' → logprob: -11.29934310913086
    6. ' ' → logprob: -11.92434310913086
    7. '   
' → logprob: -11.92434310913086
    8. ' 
' → logprob: -12.04934310913086
    9. '

' → logprob: -12.04934310913086
    10. ' return' → logprob: -12.54934310913086

Token 130: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.75799560546875
    2. 'div' → logprob: -1.00799560546875
    3. '   ' → logprob: -1.88299560546875
    4. '
' → logprob: -4.75799560546875
    5. ' return' → logprob: -5.38299560546875
    6. ' divis' → logprob: -7.38299560546875
    7. '    
' → logprob: -8.25799560546875
    8. ' ' → logprob: -9.25799560546875
    9. '  ' → logprob: -10.13299560546875
    10. '	div' → logprob: -10.38299560546875

Token 131: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.005263880360871553
    2. ' sorted' → logprob: -5.255263805389404
    3. 'div' → logprob: -10.505264282226562
    4. '(sorted' → logprob: -13.255264282226562
    5. ' ' → logprob: -14.505264282226562
    6. '   ' → logprob: -15.755264282226562
    7. 'sort' → logprob: -16.005264282226562
    8. '.sorted' → logprob: -16.255264282226562
    9. ' divis' → logprob: -17.630264282226562
    10. ' ' → logprob: -17.755264282226562

Token 132: '(div' (ID: 73108)
  Prédit: '(div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(div' → logprob: -9.77022064034827e-05
    2. '(' → logprob: -9.250097274780273
    3. 'div' → logprob: -13.625097274780273
    4. '(dist' → logprob: -16.500097274780273
    5. '	div' → logprob: -17.125097274780273
    6. '(def' → logprob: -17.250097274780273
    7. ' (' → logprob: -17.250097274780273
    8. '(d' → logprob: -17.250097274780273
    9. '()' → logprob: -18.250097274780273
    10. ' divis' → logprob: -18.375097274780273

Token 133: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0010141143575310707
    2. 's' → logprob: -7.376014232635498
    3. 'tors' → logprob: -8.87601375579834
    4. 'div' → logprob: -9.62601375579834
    5. 'vis' → logprob: -10.00101375579834
    6. ')' → logprob: -10.87601375579834
    7. 'ors' → logprob: -11.12601375579834
    8. '(div' → logprob: -11.62601375579834
    9. ' divis' → logprob: -11.75101375579834
    10. '(' → logprob: -11.75101375579834

Token 134: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.017720459029078484
    2. 's' → logprob: -4.2677202224731445
    3. 'tors' → logprob: -5.7677202224731445
    4. 'rs' → logprob: -8.017720222473145
    5. 'rors' → logprob: -10.892720222473145
    6. 'urs' → logprob: -11.517720222473145
    7. 'sorted' → logprob: -11.642720222473145
    8. 'iors' → logprob: -11.642720222473145
    9. 'ators' → logprob: -12.267720222473145
    10. 'eurs' → logprob: -12.392720222473145

Token 135: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.796184723294573e-06
    2. ')
' → logprob: -12.250005722045898
    3. ' )' → logprob: -14.250005722045898
    4. '))' → logprob: -16.6250057220459
    5. '())' → logprob: -17.1250057220459
    6. ']' → logprob: -17.1250057220459
    7. ')

' → logprob: -17.2500057220459
    8. '   ' → logprob: -17.7500057220459
    9. '()' → logprob: -17.7500057220459
    10. '<|end|>' → logprob: -18.0000057220459

Token 136: 'def' (ID: 1314)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.7098299264907837
    2. 'n' → logprob: -1.3348299264907837
    3. 'def' → logprob: -2.584829807281494
    4. '#' → logprob: -2.709829807281494
    5. '
' → logprob: -3.584829807281494
    6. '\n' → logprob: -3.834829807281494
    7. 'print' → logprob: -3.959829807281494
    8. 'if' → logprob: -4.209829807281494
    9. '  
' → logprob: -5.459829807281494
    10. '[' → logprob: -5.834829807281494

Token 137: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.002819731831550598
    2. 'main' → logprob: -5.877819538116455
    3. ' solve' → logprob: -11.627820014953613
    4. ' factorial' → logprob: -13.627820014953613
    5. 'solve' → logprob: -13.752820014953613
    6. '_main' → logprob: -13.752820014953613
    7. ' parse' → logprob: -14.627820014953613
    8. ' find' → logprob: -14.877820014953613
    9. ' input' → logprob: -15.252820014953613
    10. ' test' → logprob: -15.252820014953613

Token 138: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0001478796184528619
    2. '(' → logprob: -9.250147819519043
    3. ' ():' → logprob: -10.625147819519043
    4. '()' → logprob: -10.750147819519043
    5. '():
' → logprob: -12.375147819519043
    6. '():
' → logprob: -15.125147819519043
    7. '()(' → logprob: -15.250147819519043
    8. '()>' → logprob: -15.375147819519043
    9. ':' → logprob: -15.500147819519043
    10. '(:' → logprob: -15.625147819519043

Token 139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011735594598576427
    2. 'n' → logprob: -7.626173496246338
    3. ' numbers' → logprob: -8.126173973083496
    4. 'import' → logprob: -9.001173973083496
    5. ' n' → logprob: -9.501173973083496
    6. 'numbers' → logprob: -9.501173973083496
    7. ' import' → logprob: -10.001173973083496
    8. ' if' → logprob: -10.876173973083496
    9. ' input' → logprob: -11.376173973083496
    10. 'if' → logprob: -11.626173973083496

Token 140: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5957983136177063
    2. 'n' (adapté à ' n') → logprob: -1.0957982540130615
    3. 'input' → logprob: -2.8457982540130615
    4. ' n' → logprob: -3.3457982540130615
    5. ' input' → logprob: -4.595798492431641
    6. 't' → logprob: -5.720798492431641
    7. 'numbers' → logprob: -6.220798492431641
    8. 'lines' → logprob: -6.470798492431641
    9. ' lines' → logprob: -6.720798492431641
    10. 'import' → logprob: -6.845798492431641

Token 141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0007233949727378786
    2. '=' → logprob: -7.375723361968994
    3. ',' → logprob: -9.750723838806152
    4. '=int' → logprob: -11.375723838806152
    5. ' ' → logprob: -11.625723838806152
    6. ' =
' → logprob: -11.625723838806152
    7. '   ' → logprob: -12.125723838806152
    8. 'umbers' → logprob: -13.750723838806152
    9. ' ,' → logprob: -14.500723838806152
    10. 'umber' → logprob: -14.625723838806152

Token 142: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.07891204208135605
    2. 'int' → logprob: -2.5789120197296143
    3. ' ' → logprob: -10.953911781311035
    4. ' len' → logprob: -12.953911781311035
    5. '=int' → logprob: -14.203911781311035
    6. '[int' → logprob: -14.703911781311035
    7. '<int' → logprob: -15.328911781311035
    8. 'len' → logprob: -15.453911781311035
    9. '(int' → logprob: -15.453911781311035
    10. ' in' → logprob: -15.828911781311035

Token 143: '(sys' (ID: 41042)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6694576740264893
    2. '(' → logprob: -0.9194576740264893
    3. '(sys' → logprob: -2.4194576740264893
    4. 'input' → logprob: -8.29445743560791
    5. ' (' → logprob: -10.16945743560791
    6. 'sys' → logprob: -11.54445743560791
    7. '()' → logprob: -12.54445743560791
    8. '(
' → logprob: -12.54445743560791
    9. ' input' → logprob: -13.16945743560791
    10. ' sys' → logprob: -14.91945743560791

Token 144: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.005414350423961878
    2. '.argv' → logprob: -5.2554144859313965
    3. '.' → logprob: -9.255414009094238
    4. '.readline' → logprob: -9.380414009094238
    5. 'stdin' → logprob: -15.755414009094238
    6. '.std' → logprob: -16.130414962768555
    7. '(stdin' → logprob: -16.255414962768555
    8. ' .' → logprob: -16.380414962768555
    9. '.input' → logprob: -16.505414962768555
    10. '.stdout' → logprob: -16.755414962768555

Token 145: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -4.723352049040841e-06
    2. '.read' → logprob: -12.500004768371582
    3. '.' → logprob: -14.125004768371582
    4. ' readline' → logprob: -16.500003814697266
    5. '.readlines' → logprob: -18.000003814697266
    6. '().' → logprob: -18.000003814697266
    7. 'read' → logprob: -18.375003814697266
    8. '.stdin' → logprob: -19.375003814697266
    9. '.Read' → logprob: -19.375003814697266
    10. ' .' → logprob: -19.875003814697266

Token 146: '())
' (ID: 4574)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.7002633810043335
    2. '())' → logprob: -0.7002633810043335
    3. '()' → logprob: -4.950263500213623
    4. '())
' → logprob: -12.575263023376465
    5. ' ())' → logprob: -12.825263023376465
    6. '()
' → logprob: -13.325263023376465
    7. ')' → logprob: -14.325263023376465
    8. '(' → logprob: -14.950263023376465
    9. '()))' → logprob: -15.450263023376465
    10. '();)' → logprob: -15.950263023376465

Token 147: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017129797488451004
    2. 'numbers' → logprob: -4.267129898071289
    3. ' numbers' → logprob: -5.892129898071289
    4. '    
' → logprob: -9.517129898071289
    5. '(numbers' → logprob: -10.017129898071289
    6. '
' → logprob: -10.517129898071289
    7. 'n' → logprob: -11.392129898071289
    8. '_numbers' → logprob: -11.517129898071289
    9. 'nums' → logprob: -11.517129898071289
    10. '  ' → logprob: -11.767129898071289

Token 148: ' numbers' (ID: 8663)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' (adapté à ' numbers') → logprob: -0.015789514407515526
    2. '   ' → logprob: -4.26578950881958
    3. ' numbers' → logprob: -6.51578950881958
    4. 'nums' → logprob: -9.140789985656738
    5. 'values' → logprob: -11.515789985656738
    6. '(numbers' → logprob: -12.140789985656738
    7. '    
' → logprob: -12.765789985656738
    8. '_numbers' → logprob: -12.890789985656738
    9. 'num' → logprob: -12.890789985656738
    10. '  ' → logprob: -13.265789985656738

Token 149: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005932709202170372
    2. '=' → logprob: -5.130932807922363
    3. '=[]' → logprob: -13.380932807922363
    4. ' ' → logprob: -14.005932807922363
    5. ' =[' → logprob: -14.005932807922363
    6. ' ' → logprob: -15.255932807922363
    7. '[]' → logprob: -15.880932807922363
    8. ')' → logprob: -15.880932807922363
    9. '[:]' → logprob: -16.505931854248047
    10. '.append' → logprob: -17.005931854248047

Token 150: ' list' (ID: 1562)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.2982204854488373
    2. '[' → logprob: -1.5482205152511597
    3. 'list' → logprob: -3.92322039604187
    4. '[]' → logprob: -4.048220634460449
    5. ' [' → logprob: -5.548220634460449
    6. ' list' → logprob: -6.173220634460449
    7. '[int' → logprob: -7.048220634460449
    8. '[List' → logprob: -7.798220634460449
    9. '[n' → logprob: -8.17322063446045
    10. '[l' → logprob: -9.54822063446045

Token 151: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.001202254556119442
    2. '(' → logprob: -6.75120210647583
    3. '(int' → logprob: -11.126202583312988
    4. '()' → logprob: -11.126202583312988
    5. '(range' → logprob: -13.751202583312988
    6. 'map' → logprob: -14.626202583312988
    7. '(sys' → logprob: -15.126202583312988
    8. '(
' → logprob: -15.501202583312988
    9. '(s' → logprob: -16.751201629638672
    10. '((' → logprob: -16.876201629638672

Token 152: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0024794621858745813
    2. '(' → logprob: -6.002479553222656
    3. ' (' → logprob: -13.252479553222656
    4. 'int' → logprob: -14.377479553222656
    5. '<int' → logprob: -15.002479553222656
    6. '(
' → logprob: -15.377479553222656
    7. ',int' → logprob: -15.377479553222656
    8. '[int' → logprob: -15.627479553222656
    9. ')' → logprob: -16.127479553222656
    10. '=int' → logprob: -16.252479553222656

Token 153: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.0059029581025242805
    2. ',' → logprob: -5.2559027671813965
    3. 'sys' → logprob: -8.005903244018555
    4. '(' → logprob: -8.880903244018555
    5. '=sys' → logprob: -9.255903244018555
    6. ' sys' → logprob: -9.505903244018555
    7. ' (' → logprob: -11.380903244018555
    8. ' ,' → logprob: -12.130903244018555
    9. '	sys' → logprob: -12.505903244018555
    10. '(
' → logprob: -12.630903244018555

Token 154: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.004092766437679529
    2. ' sys' → logprob: -5.504092693328857
    3. '(sys' → logprob: -11.379093170166016
    4. '   ' → logprob: -13.254093170166016
    5. '	sys' → logprob: -14.254093170166016
    6. '=sys' → logprob: -14.754093170166016
    7. ' ' → logprob: -16.879093170166016
    8. '.sys' → logprob: -17.629093170166016
    9. '  ' → logprob: -18.004093170166016
    10. 'Sys' → logprob: -18.504093170166016

Token 155: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.306760805164231e-05
    2. 'stdin' → logprob: -12.00001335144043
    3. '.readline' → logprob: -12.12501335144043
    4. '.stdout' → logprob: -14.25001335144043
    5. '(stdin' → logprob: -14.37501335144043
    6. '.' → logprob: -15.50001335144043
    7. '.argv' → logprob: -17.62501335144043
    8. '.stderr' → logprob: -18.12501335144043
    9. ' stdin' → logprob: -18.50001335144043
    10. '.std' → logprob: -18.50001335144043

Token 156: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -2.3676733690081164e-05
    2. '.stdin' → logprob: -11.12502384185791
    3. '.' → logprob: -11.87502384185791
    4. '().' → logprob: -13.87502384185791
    5. '.readlines' → logprob: -14.12502384185791
    6. 'stdin' → logprob: -16.750022888183594
    7. '```' → logprob: -16.875022888183594
    8. '   ' → logprob: -17.125022888183594
    9. '(stdin' → logprob: -17.125022888183594
    10. '=sys' → logprob: -17.375022888183594

Token 157: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.166338137816638e-05
    2. '()' → logprob: -10.375031471252441
    3. ' ().' → logprob: -15.500031471252441
    4. '()
' → logprob: -16.500032424926758
    5. '(' → logprob: -16.750032424926758
    6. '()

' → logprob: -19.875032424926758
    7. '()?.' → logprob: -20.000032424926758
    8. '()`' → logprob: -20.500032424926758
    9. '.readline' → logprob: -20.750032424926758
    10. '().'' → logprob: -20.750032424926758

Token 158: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.25264620780944824
    2. 'split' → logprob: -1.5026462078094482
    3. 'rstrip' → logprob: -7.252646446228027
    4. 'read' → logprob: -11.752646446228027
    5. ' strip' → logprob: -14.627646446228027
    6. ' split' → logprob: -15.252646446228027
    7. 'decode' → logprob: -17.37764549255371
    8. '(split' → logprob: -17.87764549255371
    9. '.strip' → logprob: -18.75264549255371
    10. '(strip' → logprob: -19.00264549255371

Token 159: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.06011165305972099
    2. '()' → logprob: -2.9351117610931396
    3. '())' → logprob: -5.6851115226745605
    4. '))' → logprob: -6.5601115226745605
    5. '(' → logprob: -8.560111999511719
    6. '()))
' → logprob: -8.685111999511719
    7. '())))' → logprob: -10.810111999511719
    8. ')' → logprob: -11.810111999511719
    9. '()));' → logprob: -12.685111999511719
    10. '()))

' → logprob: -12.935111999511719

Token 160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1744300127029419
    2. '
' → logprob: -1.924430012702942
    3. '    
' → logprob: -4.299429893493652
    4. '  
' → logprob: -8.424429893493652
    5. 'print' → logprob: -8.549429893493652
    6. 'div' → logprob: -10.299429893493652
    7. '   
' → logprob: -10.799429893493652
    8. ' 
' → logprob: -11.549429893493652
    9. 'for' → logprob: -11.549429893493652
    10. '```' → logprob: -12.049429893493652

Token 161: ' divis' (ID: 37826)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.04176334664225578
    2. 'result' → logprob: -4.2917633056640625
    3. '   ' → logprob: -4.4167633056640625
    4. '
' → logprob: -5.4167633056640625
    5. 'for' → logprob: -5.4167633056640625
    6. 'common' → logprob: -5.6667633056640625
    7. ' divis' → logprob: -7.1667633056640625
    8. '    
' → logprob: -7.2917633056640625
    9. ' div' → logprob: -7.6667633056640625
    10. 'results' → logprob: -8.291763305664062

Token 162: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -4.811348480870947e-05
    2. 'iors' → logprob: -10.37504768371582
    3. 'eurs' → logprob: -12.50004768371582
    4. 's' → logprob: -13.00004768371582
    5. 'is' → logprob: -13.12504768371582
    6. '```' → logprob: -13.75004768371582
    7. 'ers' → logprob: -14.00004768371582
    8. '   ' → logprob: -14.12504768371582
    9. 'e' → logprob: -14.25004768371582
    10. 'orsi' → logprob: -14.37504768371582

Token 163: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06368128955364227
    2. '=' → logprob: -2.8136813640594482
    3. '(' → logprob: -6.563681125640869
    4. '_' → logprob: -8.438681602478027
    5. '_output' → logprob: -10.563681602478027
    6. ')' → logprob: -10.688681602478027
    7. 's' → logprob: -11.438681602478027
    8. '_list' → logprob: -11.938681602478027
    9. '()' → logprob: -12.188681602478027
    10. ' ' → logprob: -13.438681602478027

Token 164: ' common' (ID: 5355)
  Prédit: 'common'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'common' → logprob: -0.03804263845086098
    2. ' common' → logprob: -3.2880425453186035
    3. '(common' → logprob: -13.788043022155762
    4. '	common' → logprob: -16.538042068481445
    5. '_common' → logprob: -19.788042068481445
    6. 'Common' → logprob: -19.788042068481445
    7. '.common' → logprob: -20.288042068481445
    8. 'comm' → logprob: -20.288042068481445
    9. '   ' → logprob: -21.288042068481445
    10. 'commons' → logprob: -21.413042068481445

Token 165: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -9.209963900502771e-05
    2. '_' → logprob: -9.500092506408691
    3. 'div' → logprob: -11.000092506408691
    4. '_common' → logprob: -15.750092506408691
    5. '_DIV' → logprob: -16.375091552734375
    6. 'Div' → logprob: -17.000091552734375
    7. '<div' → logprob: -17.250091552734375
    8. '_def' → logprob: -17.250091552734375
    9. ' divis' → logprob: -17.375091552734375
    10. '(div' → logprob: -17.500091552734375

Token 166: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.013589557260274887
    2. 's' → logprob: -4.888589382171631
    3. 'ors' → logprob: -5.263589382171631
    4. 'itors' → logprob: -9.263589859008789
    5. 'tors' → logprob: -9.388589859008789
    6. 'rs' → logprob: -9.388589859008789
    7. 'iors' → logprob: -9.513589859008789
    8. 'div' → logprob: -9.763589859008789
    9. 'ectors' → logprob: -9.888589859008789
    10. '```' → logprob: -10.263589859008789

Token 167: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.009361833333969116
    2. 's' → logprob: -5.134361743927002
    3. 'tors' → logprob: -5.759361743927002
    4. 'rs' → logprob: -9.50936222076416
    5. 'is' → logprob: -10.25936222076416
    6. 'ators' → logprob: -10.38436222076416
    7. 'div' → logprob: -10.63436222076416
    8. 'itors' → logprob: -10.88436222076416
    9. 'rors' → logprob: -10.88436222076416
    10. 'urs' → logprob: -11.13436222076416

Token 168: '(numbers' (ID: 98592)
  Prédit: '(numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(numbers' → logprob: -3.650518920039758e-06
    2. '(' → logprob: -12.750003814697266
    3. '(n' → logprob: -14.875003814697266
    4. ' (' → logprob: -16.125003814697266
    5. '(nums' → logprob: -16.125003814697266
    6. 'numbers' → logprob: -17.375003814697266
    7. '(number' → logprob: -17.500003814697266
    8. '(div' → logprob: -18.125003814697266
    9. '(values' → logprob: -18.500003814697266
    10. '(names' → logprob: -18.625003814697266

Token 169: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.04885384067893028
    2. ')' → logprob: -3.048853874206543
    3. '()
' → logprob: -8.923853874206543
    4. '()' → logprob: -9.798853874206543
    5. ')
' → logprob: -10.423853874206543
    6. '())
' → logprob: -10.423853874206543
    7. ')

' → logprob: -11.798853874206543
    8. ' )
' → logprob: -11.923853874206543
    9. '   ' → logprob: -12.923853874206543
    10. '())' → logprob: -13.798853874206543

Token 170: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16353954374790192
    2. 'for' → logprob: -1.9135395288467407
    3. 'print' → logprob: -6.038539409637451
    4. ' for' → logprob: -7.038539409637451
    5. '    
' → logprob: -10.16353988647461
    6. '<|end|>' → logprob: -12.53853988647461
    7. '```' → logprob: -13.16353988647461
    8. '	for' → logprob: -13.53853988647461
    9. '[' → logprob: -14.66353988647461
    10. '
' → logprob: -14.91353988647461

Token 171: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2028561234474182
    2. 'print' → logprob: -1.7028560638427734
    3. ' for' → logprob: -6.702856063842773
    4. '   ' → logprob: -8.702856063842773
    5. ' print' → logprob: -10.452856063842773
    6. '
' → logprob: -10.952856063842773
    7. '    
' → logprob: -13.702856063842773
    8. ' 
' → logprob: -14.952856063842773
    9. '```' → logprob: -15.827856063842773
    10. 'if' → logprob: -16.952856063842773

Token 172: ' d' (ID: 272)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.4630546271800995
    2. 'd' → logprob: -1.4630546569824219
    3. ' divisor' → logprob: -2.463054656982422
    4. ' d' → logprob: -2.963054656982422
    5. ' div' → logprob: -6.088054656982422
    6. '	div' → logprob: -12.713054656982422
    7. ' divis' → logprob: -12.963054656982422
    8. 'divider' → logprob: -14.088054656982422
    9. '```' → logprob: -14.088054656982422
    10. '(div' → logprob: -14.838054656982422

Token 173: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0016363817267119884
    2. 'in' → logprob: -6.751636505126953
    3. ' ' → logprob: -7.751636505126953
    4. '  ' → logprob: -11.001636505126953
    5. ' i' → logprob: -11.876636505126953
    6. 'd' → logprob: -12.876636505126953
    7. ' ' → logprob: -13.001636505126953
    8. 'n' → logprob: -13.126636505126953
    9. '	in' → logprob: -13.501636505126953
    10. '   ' → logprob: -13.501636505126953

Token 174: ' divis' (ID: 37826)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.0017031522002071142
    2. ' divis' → logprob: -6.376703262329102
    3. '	div' → logprob: -15.126703262329102
    4. ' div' → logprob: -15.376703262329102
    5. 'dis' → logprob: -16.0017032623291
    6. '   ' → logprob: -16.1267032623291
    7. 'Div' → logprob: -16.7517032623291
    8. '(div' → logprob: -16.7517032623291
    9. ' ' → logprob: -17.0017032623291
    10. '_div' → logprob: -17.1267032623291

Token 175: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.010429836809635162
    2. 'is' → logprob: -4.760429859161377
    3. 's' → logprob: -6.385429859161377
    4. 'iors' → logprob: -9.510429382324219
    5. 'tors' → logprob: -10.760429382324219
    6. 'rs' → logprob: -11.635429382324219
    7. 'rors' → logprob: -11.885429382324219
    8. 'ators' → logprob: -12.635429382324219
    9. 'ers' → logprob: -13.260429382324219
    10. 'os' → logprob: -13.510429382324219

Token 176: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01606663130223751
    2. ':
' → logprob: -4.141066551208496
    3. '):' → logprob: -11.516066551208496
    4. 'print' → logprob: -12.141066551208496
    5. '   ' → logprob: -12.266066551208496
    6. '):
' → logprob: -12.266066551208496
    7. ':
' → logprob: -13.516066551208496
    8. ',' → logprob: -13.891066551208496
    9. ' print' → logprob: -13.891066551208496
    10. ')' → logprob: -14.141066551208496

Token 177: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010561727918684483
    2. 'print' → logprob: -4.635561943054199
    3. ' print' → logprob: -7.135561943054199
    4. '   ' → logprob: -13.1355619430542
    5. '           ' → logprob: -13.5105619430542
    6. '        
' → logprob: -13.5105619430542
    7. '```' → logprob: -14.1355619430542
    8. '`' → logprob: -14.6355619430542
    9. '(print' → logprob: -14.8855619430542
    10. '      ' → logprob: -15.1355619430542

Token 178: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.000158842682139948
    2. ' print' → logprob: -8.75015926361084
    3. 'pr' → logprob: -15.62515926361084
    4. '   ' → logprob: -15.75015926361084
    5. '       ' → logprob: -17.000158309936523
    6. '```' → logprob: -18.750158309936523
    7. 'prin' → logprob: -18.875158309936523
    8. 'printf' → logprob: -19.125158309936523
    9. '	print' → logprob: -20.125158309936523
    10. 'sys' → logprob: -21.000158309936523

Token 179: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.00013524403038900346
    2. '(' → logprob: -9.00013542175293
    3. 'd' → logprob: -11.37513542175293
    4. '(f' → logprob: -15.62513542175293
    5. ' (' → logprob: -16.37513542175293
    6. ' d' → logprob: -17.50013542175293
    7. '()' → logprob: -18.37513542175293
    8. '('' → logprob: -19.00013542175293
    9. '((' → logprob: -19.12513542175293
    10. '(
' → logprob: -19.25013542175293

Token 180: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. ')
' → logprob: -13.250001907348633
    3. ' )' → logprob: -15.750001907348633
    4. '))' → logprob: -17.000001907348633
    5. ')`' → logprob: -17.000001907348633
    6. ')d' → logprob: -17.500001907348633
    7. '   ' → logprob: -18.750001907348633
    8. ')

' → logprob: -18.750001907348633
    9. ')}' → logprob: -18.875001907348633
    10. '}' → logprob: -19.125001907348633

Token 181: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0017752613639459014
    2. '
' → logprob: -6.37677526473999
    3. ' if' → logprob: -10.376774787902832
    4. '\n' → logprob: -10.501774787902832
    5. '```' → logprob: -11.876774787902832
    6. '<|end|>' → logprob: -12.001774787902832
    7. '  
' → logprob: -14.751774787902832
    8. '

' → logprob: -15.251774787902832
    9. '\' → logprob: -15.501774787902832
    10. '#' → logprob: -15.876774787902832

Token 182: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.005951079539954662
    2. '__' → logprob: -5.130950927734375
    3. '_' → logprob: -11.505950927734375
    4. '_name' → logprob: -12.505950927734375
    5. ' ' → logprob: -12.755950927734375
    6. ' _' → logprob: -13.255950927734375
    7. ' ___' → logprob: -13.630950927734375
    8. ' ' → logprob: -13.880950927734375
    9. '___' → logprob: -13.880950927734375
    10. 'name' → logprob: -14.630950927734375

Token 183: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.015455612912774086
    2. ' __' → logprob: -4.890455722808838
    3. ' ==' → logprob: -5.640455722808838
    4. '.__' → logprob: -6.390455722808838
    5. '==' → logprob: -7.140455722808838
    6. '__.__' → logprob: -7.140455722808838
    7. '__.' → logprob: -7.890455722808838
    8. ' .' → logprob: -8.39045524597168
    9. '.' → logprob: -8.89045524597168
    10. '.name' → logprob: -10.01545524597168

Token 184: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -7.822646693966817e-06
    2. '==' → logprob: -12.125007629394531
    3. '__.__' → logprob: -13.125007629394531
    4. ' ==' → logprob: -16.00000762939453
    5. '___' → logprob: -16.87500762939453
    6. '__.' → logprob: -17.37500762939453
    7. '_' → logprob: -17.37500762939453
    8. '____' → logprob: -17.50000762939453
    9. '__["' → logprob: -18.50000762939453
    10. '__,' → logprob: -18.50000762939453

Token 185: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.8414195775985718
    2. ' ==' → logprob: -1.0914195775985718
    3. '==' → logprob: -1.4664195775985718
    4. '=="' → logprob: -6.091419696807861
    5. '.__' → logprob: -10.091419219970703
    6. '=='' → logprob: -10.966419219970703
    7. '_' → logprob: -11.091419219970703
    8. '.' → logprob: -11.091419219970703
    9. '___' → logprob: -11.341419219970703
    10. '=' → logprob: -11.466419219970703

Token 186: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.030306674540042877
    2. ''' → logprob: -3.530306577682495
    3. ' "__' → logprob: -7.530306816101074
    4. '__' → logprob: -11.530306816101074
    5. ' '__' → logprob: -11.655306816101074
    6. '"user' → logprob: -15.405306816101074
    7. ''"' → logprob: -15.905306816101074
    8. ' "' → logprob: -16.155305862426758
    9. '"name' → logprob: -16.280305862426758
    10. '"'' → logprob: -16.405305862426758

Token 187: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.011201671324670315
    2. '__' → logprob: -4.511201858520508
    3. 'name' → logprob: -9.261201858520508
    4. '```' → logprob: -11.636201858520508
    5. 'built' → logprob: -11.886201858520508
    6. 'm' → logprob: -11.886201858520508
    7. 'py' → logprob: -12.136201858520508
    8. '__":
' → logprob: -12.261201858520508
    9. 'ma' → logprob: -12.511201858520508
    10. 'python' → logprob: -12.511201858520508

Token 188: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.2014571875333786
    2. '__' → logprob: -1.701457142829895
    3. '__':
' → logprob: -10.576457023620605
    4. '__["' → logprob: -11.826457023620605
    5. '__.' → logprob: -11.951457023620605
    6. '__.__' → logprob: -13.451457023620605
    7. '__
' → logprob: -14.201457023620605
    8. '__
' → logprob: -14.326457023620605
    9. '__",' → logprob: -14.451457023620605
    10. '__("' → logprob: -14.951457023620605

Token 189: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.16981913149356842
    2. '"' → logprob: -2.0448191165924072
    3. ' main' → logprob: -3.6698191165924072
    4. '__' → logprob: -7.794819355010986
    5. '   ' → logprob: -8.169818878173828
    6. ''' → logprob: -8.169818878173828
    7. '	main' → logprob: -8.419818878173828
    8. ' "__' → logprob: -10.294818878173828
    9. ' "' → logprob: -10.669818878173828
    10. '_main' → logprob: -10.919818878173828

Token 190: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.676292231422849e-05
    2. ' main' → logprob: -11.000017166137695
    3. '	main' → logprob: -18.625017166137695
    4. '   ' → logprob: -20.375017166137695
    5. 'ma' → logprob: -23.250017166137695
    6. 'mai' → logprob: -23.500017166137695
    7. ' ' → logprob: -23.625017166137695
    8. '.main' → logprob: -23.750017166137695
    9. '_main' → logprob: -23.750017166137695
    10. 'maine' → logprob: -24.000017166137695

Token 191: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -7.815280696377158e-05
    2. '(' → logprob: -10.000078201293945
    3. '()
' → logprob: -10.375078201293945
    4. '()`' → logprob: -14.875078201293945
    5. ' ()' → logprob: -15.250078201293945
    6. '()\' → logprob: -15.375078201293945
    7. '()

' → logprob: -15.875078201293945
    8. '():' → logprob: -16.125078201293945
    9. '(
' → logprob: -16.375078201293945
    10. '```' → logprob: -16.375078201293945


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 189
Tokens correctement prédits (1ère position, stricte): 101
Tokens correctement prédits (1ère position, avec adaptation): 108
Tokens correctement prédits (top 10): 170
Précision stricte (1ère position): 53.44%
Précision adaptée (1ère position): 57.14%
Précision (top 10): 89.95%
================================================================================
