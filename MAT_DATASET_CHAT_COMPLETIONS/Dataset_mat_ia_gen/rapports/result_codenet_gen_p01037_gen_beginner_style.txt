================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N, M = map(int, input().split())
painted = [False]*N

for _ in range(M):
    a, L = map(int, input().split())
    for i in range(L):
        painted[(a+i)%N] = True

intervals = []
count = 0
for i in range(N):
    if painted[i]:
        count += 1
    elif count > 0:
        intervals.append(count)
        count = 0
if count > 0:
    intervals.append(count)

# Si le début et la fin sont peints, ils forment une intervalle circulaire
if len(intervals) > 1 and painted[0] and painted[-1]:
    intervals[0] += intervals[-1]
    intervals.pop()

intervals.sort(reverse=True)

length_count = {}
for length in intervals:
    length_count[length] = length_count.get(length, 0) + 1

for length in sorted(length_count.keys(), reverse=True):
    print(length, length_count[length])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' M' (ID: 391)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1221938282251358
    2. ',' → logprob: -2.3721938133239746
    3. ' =' → logprob: -3.8721938133239746
    4. '```' → logprob: -8.497194290161133
    5. ';' → logprob: -8.747194290161133
    6. ')' → logprob: -8.747194290161133
    7. ''' → logprob: -9.497194290161133
    8. ',
' → logprob: -9.747194290161133
    9. '[' → logprob: -9.747194290161133
    10. '`' → logprob: -10.122194290161133

Token 4: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.09035221487283707
    2. 'map' → logprob: -2.4653522968292236
    3. ' input' → logprob: -7.3403520584106445
    4. 'input' → logprob: -7.9653520584106445
    5. ' ' → logprob: -8.590352058410645
    6. '10' → logprob: -9.090352058410645
    7. '0' → logprob: -9.840352058410645
    8. ' list' → logprob: -10.215352058410645
    9. 'list' → logprob: -11.715352058410645
    10. ' int' → logprob: -12.215352058410645

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.060235459357500076
    2. '(lambda' → logprob: -3.3102355003356934
    3. '```' → logprob: -4.435235500335693
    4. '<|end|>' → logprob: -5.435235500335693
    5. '(int' → logprob: -6.435235500335693
    6. '(str' → logprob: -6.935235500335693
    7. ')' → logprob: -7.060235500335693
    8. '(user' → logprob: -8.435235023498535
    9. '<|end|>' → logprob: -8.810235023498535
    10. '(
' → logprob: -9.060235023498535

Token 6: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.654670774936676
    2. '(input' → logprob: -0.779670774936676
    3. '(' → logprob: -4.279670715332031
    4. 'input' → logprob: -5.529670715332031
    5. '```' → logprob: -6.654670715332031
    6. ')(' → logprob: -7.279670715332031
    7. ',input' → logprob: -8.154670715332031
    8. ',' → logprob: -8.154670715332031
    9. '(str' → logprob: -8.654670715332031
    10. '=input' → logprob: -8.779670715332031

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06198427081108093
    2. ' input' → logprob: -2.8119843006134033
    3. '(input' → logprob: -11.061984062194824
    4. ',input' → logprob: -14.561984062194824
    5. ')' → logprob: -15.311984062194824
    6. '=input' → logprob: -16.68698501586914
    7. '```' → logprob: -16.81198501586914
    8. '<input' → logprob: -17.43698501586914
    9. '	input' → logprob: -17.56198501586914
    10. '[input' → logprob: -17.68698501586914

Token 8: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.41796207427978516
    2. '()' → logprob: -1.1679620742797852
    3. ')' → logprob: -4.792962074279785
    4. '().' → logprob: -4.917962074279785
    5. '(' → logprob: -5.292962074279785
    6. '('' → logprob: -5.542962074279785
    7. '());' → logprob: -6.667962074279785
    8. '`()' → logprob: -7.042962074279785
    9. '(""))' → logprob: -7.417962074279785
    10. '()))' → logprob: -7.417962074279785

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.001980856526643038
    2. 'strip' → logprob: -6.251980781555176
    3. ')' → logprob: -10.751980781555176
    4. 'rstrip' → logprob: -11.126980781555176
    5. 'read' → logprob: -11.376980781555176
    6. ' split' → logprob: -12.501980781555176
    7. 'spl' → logprob: -14.876980781555176
    8. '(split' → logprob: -15.626980781555176
    9. 'startswith' → logprob: -15.751980781555176
    10. 'replace' → logprob: -15.876980781555176

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01605372317135334
    2. '())' → logprob: -4.641053676605225
    3. '))' → logprob: -5.141053676605225
    4. '()' → logprob: -8.516054153442383
    5. '`)' → logprob: -9.266054153442383
    6. '(' → logprob: -9.391054153442383
    7. '()))' → logprob: -10.891054153442383
    8. '')' → logprob: -12.016054153442383
    9. ')))' → logprob: -12.516054153442383
    10. ')`' → logprob: -12.766054153442383

Token 11: 'paint' (ID: 44758)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9933879971504211
    2. 'a' → logprob: -1.6183879375457764
    3. ',' → logprob: -2.1183879375457764
    4. '[' → logprob: -2.9933879375457764
    5. 'for' → logprob: -3.2433879375457764
    6. '```' → logprob: -3.3683879375457764
    7. '\n' → logprob: -3.3683879375457764
    8. ')' → logprob: -3.4933879375457764
    9. 'x' → logprob: -3.6183879375457764
    10. '`' → logprob: -3.8683879375457764

Token 12: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.07470691204071045
    2. '(' → logprob: -3.44970703125
    3. '[' → logprob: -3.69970703125
    4. 'ing' → logprob: -4.94970703125
    5. 'er' → logprob: -5.94970703125
    6. '_' → logprob: -6.44970703125
    7. '_area' → logprob: -6.69970703125
    8. '_colors' → logprob: -7.57470703125
    9. '()' → logprob: -7.82470703125
    10. '[]' → logprob: -8.32470703125

Token 13: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4133392572402954
    2. '[' → logprob: -1.1633392572402954
    3. '_tiles' → logprob: -4.538339138031006
    4. '_positions' → logprob: -5.913339138031006
    5. '_area' → logprob: -6.038339138031006
    6. '_cells' → logprob: -6.163339138031006
    7. '[]' → logprob: -6.788339138031006
    8. '_spaces' → logprob: -7.163339138031006
    9. '_rows' → logprob: -7.413339138031006
    10. '_count' → logprob: -7.413339138031006

Token 14: ' [' (ID: 723)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.23587465286254883
    2. '[' → logprob: -1.9858746528625488
    3. '[]' → logprob: -2.860874652862549
    4. ' set' → logprob: -4.985874652862549
    5. ' [' → logprob: -5.735874652862549
    6. ' []' → logprob: -5.735874652862549
    7. '{}' → logprob: -6.860874652862549
    8. '[[' → logprob: -7.360874652862549
    9. ' ' → logprob: -7.985874652862549
    10. '[int' → logprob: -9.73587417602539

Token 15: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.1219470351934433
    2. '0' → logprob: -2.8719470500946045
    3. '[' → logprob: -2.8719470500946045
    4. ' False' → logprob: -6.746946811676025
    5. ' [' → logprob: -8.746947288513184
    6. ']' → logprob: -8.871947288513184
    7. '[]' → logprob: -8.996947288513184
    8. '(False' → logprob: -11.621947288513184
    9. ' ' → logprob: -12.371947288513184
    10. ' ]' → logprob: -12.371947288513184

Token 16: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002268493641167879
    2. '[' → logprob: -6.877268314361572
    3. ' for' → logprob: -8.12726879119873
    4. ')]' → logprob: -8.25226879119873
    5. ')' → logprob: -8.37726879119873
    6. ']*' → logprob: -9.25226879119873
    7. 'for' → logprob: -9.87726879119873
    8. '[N' → logprob: -10.00226879119873
    9. '`]' → logprob: -10.12726879119873
    10. ' ]' → logprob: -10.25226879119873

Token 17: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00678109610453248
    2. '(N' → logprob: -5.256781101226807
    3. 'M' → logprob: -6.756781101226807
    4. '(' → logprob: -8.506780624389648
    5. '(M' → logprob: -9.131780624389648
    6. ' N' → logprob: -10.006780624389648
    7. ' (' → logprob: -11.006780624389648
    8. '100' → logprob: -11.756780624389648
    9. ' ' → logprob: -14.256780624389648
    10. '101' → logprob: -14.506780624389648

Token 18: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.049336325377225876
    2. ' for' → logprob: -3.1743364334106445
    3. '
' → logprob: -6.0493364334106445
    4. ' 
' → logprob: -6.4243364334106445
    5. 'paint' → logprob: -6.7993364334106445
    6. 'count' → logprob: -8.799336433410645
    7. 's' → logprob: -8.799336433410645
    8. 'i' → logprob: -9.049336433410645
    9. 'colors' → logprob: -9.299336433410645
    10. 'max' → logprob: -9.424336433410645

Token 19: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009014204144477844
    2. ' for' → logprob: -4.759014129638672
    3. '\n' → logprob: -8.384014129638672
    4. '
' → logprob: -9.009014129638672
    5. '```' → logprob: -11.759014129638672
    6. '0' → logprob: -11.884014129638672
    7. '\' → logprob: -12.134014129638672
    8. ' 
' → logprob: -12.384014129638672
    9. '' → logprob: -12.384014129638672
    10. 'f' → logprob: -13.259014129638672

Token 20: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10466115176677704
    2. ' i' → logprob: -2.354661226272583
    3. ' _' → logprob: -5.979660987854004
    4. '  ' → logprob: -6.479660987854004
    5. '_' → logprob: -8.354660987854004
    6. 'i' → logprob: -8.979660987854004
    7. ' ‌' → logprob: -11.354660987854004
    8. ' )' → logprob: -12.979660987854004
    9. ')' → logprob: -13.729660987854004
    10. ' ' → logprob: -14.354660987854004

Token 21: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2067454606294632
    2. 'in' → logprob: -1.7067455053329468
    3. 'n' → logprob: -6.456745624542236
    4. ' ' → logprob: -6.456745624542236
    5. 'i' → logprob: -6.706745624542236
    6. ' i' → logprob: -7.956745624542236
    7. '  ' → logprob: -8.581745147705078
    8. 'range' → logprob: -9.206745147705078
    9. '_' → logprob: -9.706745147705078
    10. 's' → logprob: -10.206745147705078

Token 22: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12693072855472565
    2. ' range' → logprob: -2.1269307136535645
    3. 'paint' → logprob: -14.126931190490723
    4. '	range' → logprob: -14.251931190490723
    5. '(range' → logprob: -14.876931190490723
    6. '_range' → logprob: -15.251931190490723
    7. ' xrange' → logprob: -15.876931190490723
    8. '[' → logprob: -16.626930236816406
    9. ' ' → logprob: -16.626930236816406
    10. 'rang' → logprob: -16.751930236816406

Token 23: '(M' (ID: 6103)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011808235431089997
    2. '(M' → logprob: -6.876180648803711
    3. ' (' → logprob: -9.251180648803711
    4. '(N' → logprob: -10.126180648803711
    5. '(
' → logprob: -12.626180648803711
    6. '(s' → logprob: -12.751180648803711
    7. '(int' → logprob: -13.501180648803711
    8. '(n' → logprob: -14.001180648803711
    9. '(len' → logprob: -14.376180648803711
    10. '(range' → logprob: -14.376180648803711

Token 24: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008217735216021538
    2. ')' → logprob: -4.883217811584473
    3. ':' → logprob: -8.133217811584473
    4. ' ):' → logprob: -8.383217811584473
    5. '):
' → logprob: -9.633217811584473
    6. ',' → logprob: -11.508217811584473
    7. ' )' → logprob: -12.008217811584473
    8. ''):' → logprob: -13.508217811584473
    9. '+' → logprob: -13.758217811584473
    10. ' :' → logprob: -14.383217811584473

Token 25: '   ' (ID: 271)
  Prédit: ' color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' color' → logprob: -1.3236039876937866
    2. ' s' → logprob: -2.073604106903076
    3. ' paint' → logprob: -2.323604106903076
    4. ' a' → logprob: -2.448604106903076
    5. ' x' → logprob: -2.573604106903076
    6. ' ,' → logprob: -2.948604106903076
    7. ' ' → logprob: -3.073604106903076
    8. ' i' → logprob: -3.198604106903076
    9. '   ' → logprob: -3.573604106903076
    10. ',' → logprob: -3.948604106903076

Token 26: ' a' (ID: 261)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.945614755153656
    2. 'a' (adapté à ' a') → logprob: -1.4456148147583008
    3. ' l' → logprob: -2.320614814758301
    4. 'x' → logprob: -2.570614814758301
    5. 'i' → logprob: -2.945614814758301
    6. 'L' → logprob: -3.195614814758301
    7. ' a' → logprob: -3.820614814758301
    8. ' L' → logprob: -3.945614814758301
    9. 's' → logprob: -4.320614814758301
    10. '```' → logprob: -4.445614814758301

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06526479870080948
    2. ' ,' → logprob: -2.8152647018432617
    3. ',b' → logprob: -5.940264701843262
    4. ' ' → logprob: -8.565264701843262
    5. ',a' → logprob: -8.565264701843262
    6. ',p' → logprob: -10.315264701843262
    7. ',k' → logprob: -11.065264701843262
    8. ',_' → logprob: -11.065264701843262
    9. ',i' → logprob: -11.190264701843262
    10. 'b' → logprob: -11.315264701843262

Token 28: ' L' (ID: 451)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03809060528874397
    2. ' b' → logprob: -3.288090705871582
    3. ' ' → logprob: -10.038090705871582
    4. '_' → logprob: -13.538090705871582
    5. '_b' → logprob: -14.163090705871582
    6. 'd' → logprob: -14.663090705871582
    7. 's' → logprob: -14.663090705871582
    8. 'p' → logprob: -14.788090705871582
    9. '  ' → logprob: -15.038090705871582
    10. 'x' → logprob: -15.163090705871582

Token 29: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016895761713385582
    2. '=' → logprob: -4.516895771026611
    3. ' =' → logprob: -5.266895771026611
    4. ',r' → logprob: -8.391895294189453
    5. ' ,' → logprob: -8.641895294189453
    6. ',R' → logprob: -9.641895294189453
    7. ',a' → logprob: -10.141895294189453
    8. ',i' → logprob: -10.891895294189453
    9. 'a' → logprob: -11.141895294189453
    10. ',p' → logprob: -11.516895294189453

Token 30: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.25195223093032837
    2. 'map' → logprob: -1.5019521713256836
    3. ' ' → logprob: -11.626952171325684
    4. '	map' → logprob: -12.251952171325684
    5. 'input' → logprob: -12.751952171325684
    6. ' input' → logprob: -12.876952171325684
    7. '(map' → logprob: -14.501952171325684
    8. 'm' → logprob: -14.626952171325684
    9. '  ' → logprob: -14.751952171325684
    10. 'int' → logprob: -14.876952171325684

Token 31: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0012270158622413874
    2. '(' → logprob: -6.751226902008057
    3. 'int' → logprob: -11.376227378845215
    4. '=int' → logprob: -11.376227378845215
    5. '<int' → logprob: -11.501227378845215
    6. ',int' → logprob: -12.126227378845215
    7. '[int' → logprob: -12.251227378845215
    8. '(str' → logprob: -12.751227378845215
    9. '(lambda' → logprob: -12.876227378845215
    10. '<|end|>' → logprob: -13.126227378845215

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019430378451943398
    2. ',input' → logprob: -6.251943111419678
    3. ' ,' → logprob: -11.62694263458252
    4. 'input' → logprob: -13.25194263458252
    5. '(' → logprob: -13.75194263458252
    6. '(),' → logprob: -14.00194263458252
    7. ',int' → logprob: -14.50194263458252
    8. '(input' → logprob: -14.87694263458252
    9. '```' → logprob: -15.00194263458252
    10. ')' → logprob: -15.00194263458252

Token 33: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2519303858280182
    2. ' input' → logprob: -1.5019303560256958
    3. ')' → logprob: -14.626930236816406
    4. '(input' → logprob: -14.751930236816406
    5. '=input' → logprob: -16.001930236816406
    6. ' ' → logprob: -16.126930236816406
    7. ',input' → logprob: -16.751930236816406
    8. '_input' → logprob: -16.876930236816406
    9. '	input' → logprob: -17.126930236816406
    10. 'Input' → logprob: -17.251930236816406

Token 34: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.749814019713085e-06
    2. '()' → logprob: -12.375006675720215
    3. ' ().' → logprob: -13.875006675720215
    4. ')' → logprob: -14.125006675720215
    5. '.' → logprob: -14.250006675720215
    6. '   ' → logprob: -16.62500762939453
    7. '(' → logprob: -17.25000762939453
    8. '.split' → logprob: -17.75000762939453
    9. ' .' → logprob: -18.00000762939453
    10. ').' → logprob: -18.50000762939453

Token 35: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.6240566083070007e-06
    2. 'strip' → logprob: -14.250001907348633
    3. 'spl' → logprob: -15.125001907348633
    4. ' split' → logprob: -15.375001907348633
    5. '(split' → logprob: -15.500001907348633
    6. 'rstrip' → logprob: -15.875001907348633
    7. ')' → logprob: -16.250001907348633
    8. 'plit' → logprob: -18.375001907348633
    9. 'sp' → logprob: -18.750001907348633
    10. '```' → logprob: -19.000001907348633

Token 36: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016492942348122597
    2. '())' → logprob: -4.64149284362793
    3. '()' → logprob: -5.01649284362793
    4. ')
' → logprob: -10.51649284362793
    5. '))' → logprob: -10.64149284362793
    6. '`)' → logprob: -11.39149284362793
    7. ')`' → logprob: -12.01649284362793
    8. ')a' → logprob: -12.51649284362793
    9. ' )' → logprob: -13.26649284362793
    10. '())
' → logprob: -13.26649284362793

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12712423503398895
    2. '```' → logprob: -3.252124309539795
    3. '[' → logprob: -4.127124309539795
    4. '    
' → logprob: -4.377124309539795
    5. ' for' → logprob: -4.877124309539795
    6. 'for' → logprob: -5.252124309539795
    7. ' 
' → logprob: -5.502124309539795
    8. '  
' → logprob: -5.502124309539795
    9. '<|end|>' → logprob: -5.627124309539795
    10. 'a' → logprob: -5.627124309539795

Token 38: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.505990207195282
    2. ' for' → logprob: -1.3809902667999268
    3. 'a' → logprob: -2.6309902667999268
    4. '   ' → logprob: -3.2559902667999268
    5. '[' → logprob: -4.255990028381348
    6. 'if' → logprob: -5.380990028381348
    7. ' ' → logprob: -5.630990028381348
    8. '<|end|>' → logprob: -6.255990028381348
    9. '```' → logprob: -6.505990028381348
    10. ' a' → logprob: -6.755990028381348

Token 39: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.05353954806923866
    2. ' range' → logprob: -3.428539514541626
    3. ' ' → logprob: -4.428539752960205
    4. 'i' → logprob: -5.553539752960205
    5. ' _' → logprob: -6.428539752960205
    6. ' in' → logprob: -7.303539752960205
    7. '_' → logprob: -7.553539752960205
    8. 'range' → logprob: -7.553539752960205
    9. ' L' → logprob: -8.428539276123047
    10. ' a' → logprob: -9.053539276123047

Token 40: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00894308090209961
    2. 'in' → logprob: -4.7589430809021
    3. ' ' → logprob: -8.133943557739258
    4. '<|end|>' → logprob: -12.133943557739258
    5. '  ' → logprob: -12.258943557739258
    6. '    ' → logprob: -12.883943557739258
    7. 'a' → logprob: -12.883943557739258
    8. 'n' → logprob: -12.883943557739258
    9. '	in' → logprob: -13.008943557739258
    10. ')' → logprob: -13.133943557739258

Token 41: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.006717386189848185
    2. 'range' → logprob: -5.006717205047607
    3. '	range' → logprob: -14.131717681884766
    4. '(range' → logprob: -14.506717681884766
    5. ' xrange' → logprob: -14.631717681884766
    6. 'rang' → logprob: -16.006717681884766
    7. ' ran' → logprob: -17.006717681884766
    8. ' ' → logprob: -17.131717681884766
    9. ' rang' → logprob: -17.256717681884766
    10. '_range' → logprob: -17.631717681884766

Token 42: '(L' (ID: 11075)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.2328845113515854
    2. '(L' → logprob: -1.7328845262527466
    3. '(' → logprob: -3.482884407043457
    4. ' (' → logprob: -9.107884407043457
    5. '(i' → logprob: -9.732884407043457
    6. '(max' → logprob: -9.982884407043457
    7. 'a' → logprob: -11.732884407043457
    8. '((' → logprob: -12.107884407043457
    9. '(N' → logprob: -12.107884407043457
    10. '(n' → logprob: -12.232884407043457

Token 43: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006327360169962049
    2. '):
' → logprob: -7.7506327629089355
    3. ' ):' → logprob: -9.000632286071777
    4. ')' → logprob: -9.750632286071777
    5. ':' → logprob: -12.000632286071777
    6. '+' → logprob: -12.250632286071777
    7. ',' → logprob: -12.750632286071777
    8. '   ' → logprob: -12.875632286071777
    9. '():' → logprob: -14.625632286071777
    10. '-' → logprob: -14.875632286071777

Token 44: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: ' painted' (ID: 33842)
  Prédit: ' painted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' painted' → logprob: -0.01947914995253086
    2. 'paint' → logprob: -4.644479274749756
    3. ' paint' → logprob: -4.894479274749756
    4. ' if' → logprob: -7.019479274749756
    5. ' Painted' → logprob: -7.394479274749756
    6. ' a' → logprob: -8.144478797912598
    7. '-painted' → logprob: -9.769478797912598
    8. ' painter' → logprob: -9.894478797912598
    9. ' p' → logprob: -9.894478797912598
    10. 'a' → logprob: -10.269478797912598

Token 46: '[(' (ID: 20542)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.02745104767382145
    2. '[' → logprob: -3.6524510383605957
    3. '[i' → logprob: -7.027451038360596
    4. '[min' → logprob: -9.402451515197754
    5. '[N' → logprob: -9.402451515197754
    6. 'a' → logprob: -11.277451515197754
    7. '```' → logprob: -11.402451515197754
    8. '[int' → logprob: -11.902451515197754
    9. '[...]' → logprob: -12.027451515197754
    10. '[(' → logprob: -12.152451515197754

Token 47: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0013699998380616307
    2. '(a' → logprob: -6.751369953155518
    3. ' a' → logprob: -8.626370429992676
    4. 'i' → logprob: -11.501370429992676
    5. ' (' → logprob: -13.126370429992676
    6. ')a' → logprob: -13.126370429992676
    7. '   ' → logprob: -13.501370429992676
    8. '[a' → logprob: -13.751370429992676
    9. '(' → logprob: -14.376370429992676
    10. ')' → logprob: -14.501370429992676

Token 48: '+i' (ID: 49691)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.24918320775032043
    2. ' -' → logprob: -1.749183177947998
    3. '+i' → logprob: -3.499183177947998
    4. '+' → logprob: -4.499183177947998
    5. ' +' → logprob: -5.249183177947998
    6. '-i' → logprob: -11.624183654785156
    7. ' ' → logprob: -11.624183654785156
    8. '−' → logprob: -11.999183654785156
    9. '+-' → logprob: -12.186683654785156
    10. '+j' → logprob: -12.936683654785156

Token 49: ')%' (ID: 57656)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.11387016624212265
    2. ' -' → logprob: -2.363870143890381
    3. ')' → logprob: -4.363870143890381
    4. ')%' → logprob: -7.238870143890381
    5. ' )' → logprob: -10.113870620727539
    6. ')-' → logprob: -11.113870620727539
    7. ')]' → logprob: -11.113870620727539
    8. '1' → logprob: -11.238870620727539
    9. '%' → logprob: -11.363870620727539
    10. '-)' → logprob: -11.738870620727539

Token 50: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.8624639324116288e-06
    2. ' N' → logprob: -13.250001907348633
    3. '>N' → logprob: -19.625001907348633
    4. 'n' → logprob: -20.000001907348633
    5. ')' → logprob: -20.500001907348633
    6. '<|end|>' → logprob: -20.625001907348633
    7. ']' → logprob: -21.625001907348633
    8. '```' → logprob: -21.625001907348633
    9. '	N' → logprob: -21.750001907348633
    10. ' ' → logprob: -22.500001907348633

Token 51: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00021748353901784867
    2. ']=' → logprob: -8.62521743774414
    3. ' ]' → logprob: -10.25021743774414
    4. '=' → logprob: -13.12521743774414
    5. '=True' → logprob: -16.25021743774414
    6. ')' → logprob: -16.50021743774414
    7. 'True' → logprob: -16.75021743774414
    8. ' =' → logprob: -17.00021743774414
    9. '`]' → logprob: -17.25021743774414
    10. '']' → logprob: -17.37521743774414

Token 52: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575966477394104
    2. ' =' → logprob: -0.825966477394104
    3. '=True' → logprob: -11.450966835021973
    4. ']' → logprob: -11.950966835021973
    5. '[' → logprob: -12.450966835021973
    6. ' ' → logprob: -12.950966835021973
    7. ' |=' → logprob: -13.700966835021973
    8. ')' → logprob: -14.450966835021973
    9. ']=' → logprob: -14.825966835021973
    10. '=False' → logprob: -15.450966835021973

Token 53: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0031777136027812958
    2. ' True' → logprob: -5.753177642822266
    3. 'T' → logprob: -17.628177642822266
    4. '(True' → logprob: -18.503177642822266
    5. 'Tr' → logprob: -18.753177642822266
    6. '=True' → logprob: -18.878177642822266
    7. '1' → logprob: -19.878177642822266
    8. 'False' → logprob: -19.878177642822266
    9. '.True' → logprob: -21.253177642822266
    10. '`' → logprob: -22.003177642822266

Token 54: '

' (ID: 279)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6307361721992493
    2. '\n' → logprob: -1.7557361125946045
    3. '<|end|>' → logprob: -2.2557361125946045
    4. '```' → logprob: -2.6307361125946045
    5. '
' → logprob: -3.1307361125946045
    6. 'for' → logprob: -3.6307361125946045
    7. 'p' → logprob: -4.505736351013184
    8. 'print' → logprob: -5.130736351013184
    9. 'newline' → logprob: -5.380736351013184
    10. ')' → logprob: -5.505736351013184

Token 55: 'interval' (ID: 37558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5455743670463562
    2. 'for' → logprob: -1.170574426651001
    3. '#' → logprob: -3.920574426651001
    4. 'all' → logprob: -3.920574426651001
    5. 'if' → logprob: -4.295574188232422
    6. 'True' → logprob: -4.295574188232422
    7. '```' → logprob: -4.420574188232422
    8. 'count' → logprob: -4.920574188232422
    9. 'pr' → logprob: -5.670574188232422
    10. 'paint' → logprob: -6.170574188232422

Token 56: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.039880555123090744
    2. '_s' → logprob: -3.7898805141448975
    3. '_' → logprob: -4.164880752563477
    4. ' =' → logprob: -7.414880752563477
    5. '_start' → logprob: -8.914880752563477
    6. '=' → logprob: -9.914880752563477
    7. '_count' → logprob: -10.539880752563477
    8. '(' → logprob: -10.539880752563477
    9. '_len' → logprob: -10.664880752563477
    10. '_length' → logprob: -10.914880752563477

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.035007327795028687
    2. '=' → logprob: -3.4100072383880615
    3. '_' → logprob: -7.535007476806641
    4. '=[]' → logprob: -8.66000747680664
    5. 's' → logprob: -8.78500747680664
    6. '<|end|>' → logprob: -8.91000747680664
    7. ' ' → logprob: -9.28500747680664
    8. '[' → logprob: -9.53500747680664
    9. ',' → logprob: -9.53500747680664
    10. '.' → logprob: -10.16000747680664

Token 58: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.011833195574581623
    2. ' []' → logprob: -4.636833190917969
    3. '[' → logprob: -6.386833190917969
    4. '[]
' → logprob: -8.511833190917969
    5. '0' → logprob: -9.136833190917969
    6. ' ' → logprob: -11.261833190917969
    7. '[(' → logprob: -11.261833190917969
    8. ' [' → logprob: -11.261833190917969
    9. '[]

' → logprob: -11.511833190917969
    10. '[]}' → logprob: -11.886833190917969

Token 59: 'count' (ID: 5420)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.172587588429451
    2. 'current' → logprob: -2.0475876331329346
    3. 'for' → logprob: -4.1725873947143555
    4. 'last' → logprob: -5.4225873947143555
    5. 'count' → logprob: -5.6725873947143555
    6. 'prev' → logprob: -5.9225873947143555
    7. 'i' → logprob: -7.2975873947143555
    8. 'l' → logprob: -7.4225873947143555
    9. ' start' → logprob: -7.5475873947143555
    10. 'cnt' → logprob: -7.9225873947143555

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20793551206588745
    2. '=' → logprob: -1.7079355716705322
    3. '_' → logprob: -5.082935333251953
    4. ' ' → logprob: -9.582935333251953
    5. 'ed' → logprob: -9.582935333251953
    6. '_=' → logprob: -9.707935333251953
    7. '(' → logprob: -9.832935333251953
    8. 's' → logprob: -10.832935333251953
    9. '  ' → logprob: -12.207935333251953
    10. ')' → logprob: -12.832935333251953

Token 61: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04301300644874573
    2. ' ' → logprob: -3.168013095855713
    3. '1' → logprob: -11.293012619018555
    4. ' ' → logprob: -14.168012619018555
    5. '<|end|>' → logprob: -16.043012619018555
    6. '(' → logprob: -16.168012619018555
    7. '```' → logprob: -16.355512619018555
    8. '[' → logprob: -16.543012619018555
    9. '000' → logprob: -16.793012619018555
    10. '۰' → logprob: -16.855512619018555

Token 62: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001095926738344133
    2. ' ' → logprob: -6.876095771789551
    3. '1' → logprob: -10.12609577178955
    4. 'paint' → logprob: -11.25109577178955
    5. 'sum' → logprob: -13.00109577178955
    6. '```' → logprob: -13.50109577178955
    7. 'int' → logprob: -13.87609577178955
    8. '-' → logprob: -14.93859577178955
    9. ' painted' → logprob: -14.93859577178955
    10. 'len' → logprob: -15.00109577178955

Token 63: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2890835106372833
    2. 'for' → logprob: -1.664083480834961
    3. ' for' → logprob: -3.039083480834961
    4. '\n' → logprob: -5.164083480834961
    5. ' 
' → logprob: -5.289083480834961
    6. '<|end|>' → logprob: -6.414083480834961
    7. '
' → logprob: -8.164083480834961
    8. 'i' → logprob: -8.414083480834961
    9. '' → logprob: -8.789083480834961
    10. '  
' → logprob: -8.914083480834961

Token 64: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0021691746078431606
    2. ' for' → logprob: -6.252169132232666
    3. 'i' → logprob: -9.502169609069824
    4. '
' → logprob: -9.877169609069824
    5. 'in' → logprob: -10.002169609069824
    6. 'current' → logprob: -10.752169609069824
    7. '```' → logprob: -11.377169609069824
    8. 'max' → logprob: -12.002169609069824
    9. 'n' → logprob: -12.002169609069824
    10. 'prev' → logprob: -12.252169609069824

Token 65: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5510284900665283
    2. ' painted' → logprob: -1.3010284900665283
    3. 'i' → logprob: -2.8010284900665283
    4. 'paint' → logprob: -3.4260284900665283
    5. ' x' → logprob: -3.8010284900665283
    6. ' p' → logprob: -4.551028251647949
    7. ' paint' → logprob: -4.676028251647949
    8. 'x' → logprob: -5.301028251647949
    9. 'p' → logprob: -6.051028251647949
    10. ' ' → logprob: -6.926028251647949

Token 66: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006766768172383308
    2. 'in' → logprob: -5.1317667961120605
    3. ' ' → logprob: -7.5067667961120605
    4. ',' → logprob: -8.256766319274902
    5. ' ,' → logprob: -11.006766319274902
    6. ' i' → logprob: -13.131766319274902
    7. '  ' → logprob: -13.256766319274902
    8. 'range' → logprob: -13.256766319274902
    9. '	in' → logprob: -13.381766319274902
    10. 'n' → logprob: -13.756766319274902

Token 67: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3869437575340271
    2. ' range' → logprob: -1.1369438171386719
    3. 'paint' → logprob: -10.261943817138672
    4. ' ' → logprob: -11.261943817138672
    5. '	range' → logprob: -12.136943817138672
    6. '   ' → logprob: -12.386943817138672
    7. '  ' → logprob: -12.761943817138672
    8. '```' → logprob: -13.261943817138672
    9. ' painted' → logprob: -13.386943817138672
    10. 'ran' → logprob: -13.511943817138672

Token 68: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.004118649754673243
    2. '(' → logprob: -5.5041184425354
    3. '(len' → logprob: -10.379118919372559
    4. '(n' → logprob: -12.504118919372559
    5. ' (' → logprob: -12.879118919372559
    6. 'N' → logprob: -13.629118919372559
    7. '(
' → logprob: -13.879118919372559
    8. ' N' → logprob: -15.004118919372559
    9. '(

' → logprob: -15.629118919372559
    10. ')' → logprob: -16.754117965698242

Token 69: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0037278688978403807
    2. '):
' → logprob: -5.753727912902832
    3. ' ):' → logprob: -8.003727912902832
    4. '+' → logprob: -9.253727912902832
    5. ')' → logprob: -9.878727912902832
    6. ':' → logprob: -10.003727912902832
    7. '):
' → logprob: -11.378727912902832
    8. '-' → logprob: -11.878727912902832
    9. ' ):
' → logprob: -13.878727912902832
    10. ' ' → logprob: -14.003727912902832

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023122945800423622
    2. ' if' → logprob: -3.898123025894165
    3. ' ' → logprob: -6.523122787475586
    4. '<|end|>' → logprob: -7.648122787475586
    5. '    ' → logprob: -7.898122787475586
    6. '    
' → logprob: -9.398122787475586
    7. ' 
' → logprob: -9.773122787475586
    8. 'if' → logprob: -10.523122787475586
    9. '  ' → logprob: -10.523122787475586
    10. '       ' → logprob: -10.773122787475586

Token 71: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6508672833442688
    2. 'if' (adapté à ' if') → logprob: -0.7758672833442688
    3. '   ' → logprob: -4.025867462158203
    4. '```' → logprob: -8.525867462158203
    5. '       ' → logprob: -11.525867462158203
    6. '    ' → logprob: -11.525867462158203
    7. ' ' → logprob: -11.775867462158203
    8. ' not' → logprob: -11.900867462158203
    9. '``' → logprob: -12.275867462158203
    10. 'not' → logprob: -13.275867462158203

Token 72: ' painted' (ID: 33842)
  Prédit: ' painted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' painted' → logprob: -0.009309637360274792
    2. ' not' → logprob: -4.884309768676758
    3. 'paint' → logprob: -7.009309768676758
    4. ' ' → logprob: -7.384309768676758
    5. 'not' → logprob: -8.759309768676758
    6. ' paint' → logprob: -11.759309768676758
    7. ' ' → logprob: -12.259309768676758
    8. ' Painted' → logprob: -12.821809768676758
    9. '   ' → logprob: -14.259309768676758
    10. '  ' → logprob: -14.321809768676758

Token 73: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.007613136898726225
    2. '[' → logprob: -4.882613182067871
    3. '[I' → logprob: -12.757613182067871
    4. ' [' → logprob: -14.632613182067871
    5. '[in' → logprob: -14.757613182067871
    6. '[
' → logprob: -15.007613182067871
    7. '[a' → logprob: -15.132613182067871
    8. '[int' → logprob: -15.257613182067871
    9. '\[' → logprob: -15.382613182067871
    10. '[N' → logprob: -15.507613182067871

Token 74: ']:
' (ID: 22152)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.0301568508148193
    2. '==' → logprob: -1.2801568508148193
    3. '):' → logprob: -1.7801568508148193
    4. ':' → logprob: -2.4051568508148193
    5. 'and' → logprob: -2.9051568508148193
    6. ']:' → logprob: -3.4051568508148193
    7. ' ==' → logprob: -5.280157089233398
    8. ']==' → logprob: -5.405157089233398
    9. ']' → logprob: -5.655157089233398
    10. ')' → logprob: -6.780157089233398

Token 75: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04062656685709953
    2. '   ' → logprob: -4.165626525878906
    3. ' count' → logprob: -4.165626525878906
    4. 'count' → logprob: -4.915626525878906
    5. '```' → logprob: -7.290626525878906
    6. '
' → logprob: -8.665626525878906
    7. '	count' → logprob: -8.915626525878906
    8. '``' → logprob: -9.415626525878906
    9. ' ' → logprob: -9.415626525878906
    10. ' if' → logprob: -10.165626525878906

Token 76: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.001677794847637415
    2. ' count' → logprob: -6.501677989959717
    3. '   ' → logprob: -9.376677513122559
    4. '
' → logprob: -10.001677513122559
    5. '       ' → logprob: -10.376677513122559
    6. '	count' → logprob: -12.126677513122559
    7. '```' → logprob: -12.751677513122559
    8. 'if' → logprob: -13.501677513122559
    9. '``' → logprob: -13.876677513122559
    10. ' ' → logprob: -13.876677513122559

Token 77: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.056928858160972595
    2. '+=' → logprob: -3.056928873062134
    3. '+' → logprob: -4.806928634643555
    4. ' +' → logprob: -9.306928634643555
    5. '=' → logprob: -10.681928634643555
    6. ' =' → logprob: -11.431928634643555
    7. ' ' → logprob: -13.431928634643555
    8. ')' → logprob: -14.056928634643555
    9. '++' → logprob: -14.056928634643555
    10. ' ==' → logprob: -14.056928634643555

Token 78: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '```' → logprob: -18.87502670288086
    4. '   ' → logprob: -19.37502670288086
    5. '<|end|>' → logprob: -19.75002670288086
    6. '0' → logprob: -21.37502670288086
    7. '  ' → logprob: -21.50002670288086
    8. '2' → logprob: -21.62502670288086
    9. '１' → logprob: -22.12502670288086
    10. ' ' → logprob: -22.12502670288086

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '```' → logprob: -19.625001907348633
    4. '<|end|>' → logprob: -21.125001907348633
    5. '   ' → logprob: -21.375001907348633
    6. '-' → logprob: -21.875001907348633
    7. '+' → logprob: -22.000001907348633
    8. '`' → logprob: -22.375001907348633
    9. 'int' → logprob: -22.375001907348633
    10. '  ' → logprob: -22.500001907348633

Token 80: '
' (ID: 198)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.7779792547225952
    2. 'else' → logprob: -1.1529792547225952
    3. '   ' → logprob: -1.6529792547225952
    4. '<|end|>' → logprob: -4.277979373931885
    5. 'elif' → logprob: -4.402979373931885
    6. ' elif' → logprob: -5.277979373931885
    7. '
' → logprob: -6.777979373931885
    8. '	else' → logprob: -8.527978897094727
    9. '```' → logprob: -8.527978897094727
    10. '<|end|>' → logprob: -8.652978897094727

Token 81: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.31047511100769043
    2. ' else' → logprob: -1.4354751110076904
    3. 'elif' → logprob: -4.1854753494262695
    4. '   ' → logprob: -4.8104753494262695
    5. ' elif' → logprob: -5.6854753494262695
    6. '```' → logprob: -6.3104753494262695
    7. '
' → logprob: -9.43547534942627
    8. ' ' → logprob: -9.81047534942627
    9. '``' → logprob: -9.81047534942627
    10. '    
' → logprob: -10.93547534942627

Token 82: ' elif' (ID: 9497)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.19497452676296234
    2. 'else' → logprob: -1.8199745416641235
    3. ' elif' → logprob: -4.444974422454834
    4. 'elif' (adapté à ' elif') → logprob: -5.819974422454834
    5. '   ' → logprob: -8.194974899291992
    6. '```' → logprob: -9.319974899291992
    7. '	else' → logprob: -10.694974899291992
    8. ' ' → logprob: -11.944974899291992
    9. '	elif' → logprob: -12.194974899291992
    10. '_else' → logprob: -12.319974899291992

Token 83: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.10021993517875671
    2. 'count' → logprob: -2.350219964981079
    3. ' ' → logprob: -11.6002197265625
    4. '	count' → logprob: -13.2252197265625
    5. ' not' → logprob: -13.7252197265625
    6. ' ' → logprob: -14.8502197265625
    7. '(count' → logprob: -15.1002197265625
    8. '<count' → logprob: -15.4752197265625
    9. ' coun' → logprob: -16.7252197265625
    10. '$count' → logprob: -16.8502197265625

Token 84: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.38716959953308105
    2. ' >' → logprob: -1.137169599533081
    3. ':' → logprob: -8.26216983795166
    4. ' !=' → logprob: -10.51216983795166
    5. '!=' → logprob: -11.88716983795166
    6. ' ' → logprob: -12.76216983795166
    7. ' ' → logprob: -13.51216983795166
    8. '.' → logprob: -14.76216983795166
    9. '   ' → logprob: -14.88716983795166
    10. '>:' → logprob: -15.26216983795166

Token 85: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010332842357456684
    2. ' ' → logprob: -6.876033306121826
    3. '<|end|>' → logprob: -14.626032829284668
    4. '```' → logprob: -17.501033782958984
    5. '<|end|>' → logprob: -18.251033782958984
    6. '۰' → logprob: -18.501033782958984
    7. '>' → logprob: -18.626033782958984
    8. '1' → logprob: -18.876033782958984
    9. '=' → logprob: -19.126033782958984
    10. '_' → logprob: -19.251033782958984

Token 86: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '۰' → logprob: -19.500017166137695
    4. '０' → logprob: -19.750017166137695
    5. '```' → logprob: -20.000017166137695
    6. 'zero' → logprob: -20.250017166137695
    7. '<|end|>' → logprob: -20.375017166137695
    8. '०' → logprob: -21.625017166137695
    9. '`' → logprob: -21.625017166137695
    10. '_' → logprob: -22.000017166137695

Token 87: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019445802317932248
    2. ':
' → logprob: -6.251944541931152
    3. ' :' → logprob: -11.501944541931152
    4. '):' → logprob: -13.376944541931152
    5. ':

' → logprob: -14.251944541931152
    6. ',' → logprob: -14.251944541931152
    7. '       ' → logprob: -14.626944541931152
    8. ':
' → logprob: -14.626944541931152
    9. '   ' → logprob: -14.876944541931152
    10. '=' → logprob: -15.001944541931152

Token 88: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7174726128578186
    2. '       ' → logprob: -1.3424725532531738
    3. ':' → logprob: -2.092472553253174
    4. ':
' → logprob: -2.967472553253174
    5. '```' → logprob: -3.467472553253174
    6. '<|end|>' → logprob: -4.342472553253174
    7. '):
' → logprob: -4.467472553253174
    8. '
' → logprob: -4.842472553253174
    9. ' intervals' → logprob: -5.467472553253174
    10. ',' → logprob: -6.217472553253174

Token 89: ' intervals' (ID: 49900)
  Prédit: ' intervals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.08179628103971481
    2. 'interval' → logprob: -3.081796169281006
    3. '       ' → logprob: -3.831796169281006
    4. '
' → logprob: -4.706796169281006
    5. '   ' → logprob: -6.456796169281006
    6. '```' → logprob: -8.331796646118164
    7. '           ' → logprob: -10.081796646118164
    8. '        
' → logprob: -10.206796646118164
    9. 'Intervals' → logprob: -10.706796646118164
    10. '    
' → logprob: -11.081796646118164

Token 90: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0024775585625320673
    2. '.' → logprob: -6.002477645874023
    3. '.app' → logprob: -14.502477645874023
    4. ' .' → logprob: -15.127477645874023
    5. '.push' → logprob: -15.502477645874023
    6. '.extend' → logprob: -15.502477645874023
    7. '.Append' → logprob: -15.502477645874023
    8. '.add' → logprob: -15.627477645874023
    9. 'append' → logprob: -16.002477645874023
    10. '.setdefault' → logprob: -16.127477645874023

Token 91: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.00015157493180595338
    2. '(' → logprob: -9.000151634216309
    3. 'count' → logprob: -10.500151634216309
    4. '((' → logprob: -15.500151634216309
    5. ' (' → logprob: -15.875151634216309
    6. '(c' → logprob: -16.500150680541992
    7. '(cnt' → logprob: -16.750150680541992
    8. '=count' → logprob: -17.500150680541992
    9. '[count' → logprob: -17.875150680541992
    10. '(
' → logprob: -17.875150680541992

Token 92: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013391701504588127
    2. ')
' → logprob: -6.626338958740234
    3. '   ' → logprob: -12.251338958740234
    4. ' )' → logprob: -12.251338958740234
    5. '),' → logprob: -14.376338958740234
    6. '       ' → logprob: -14.376338958740234
    7. ')`' → logprob: -14.626338958740234
    8. ')
' → logprob: -14.876338958740234
    9. '`)' → logprob: -15.126338958740234
    10. '))' → logprob: -15.626338958740234

Token 93: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13616257905960083
    2. '   ' → logprob: -2.761162519454956
    3. '    
' → logprob: -4.011162757873535
    4. '        
' → logprob: -4.011162757873535
    5. '
' → logprob: -4.261162757873535
    6. 'count' → logprob: -5.136162757873535
    7. ' 
' → logprob: -6.261162757873535
    8. '  
' → logprob: -7.011162757873535
    9. '``' → logprob: -7.136162757873535
    10. '	' → logprob: -7.261162757873535

Token 94: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.0013892814749851823
    2. ' count' → logprob: -6.626389503479004
    3. '   ' → logprob: -10.001389503479004
    4. '       ' → logprob: -11.501389503479004
    5. '
' → logprob: -12.751389503479004
    6. '```' → logprob: -13.751389503479004
    7. '	count' → logprob: -13.751389503479004
    8. ' ' → logprob: -14.001389503479004
    9. '0' → logprob: -14.376389503479004
    10. '    
' → logprob: -15.126389503479004

Token 95: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031777136027812958
    2. ' =' → logprob: -5.753177642822266
    3. '0' → logprob: -16.753177642822266
    4. '＝' → logprob: -18.128177642822266
    5. '.=' → logprob: -19.003177642822266
    6. '=
' → logprob: -19.378177642822266
    7. '=}' → logprob: -19.503177642822266
    8. '_=' → logprob: -20.378177642822266
    9. '=

' → logprob: -20.753177642822266
    10. ' ' → logprob: -20.753177642822266

Token 96: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '۰' → logprob: -20.500017166137695
    4. '   ' → logprob: -21.500017166137695
    5. '<|end|>' → logprob: -21.625017166137695
    6. '```' → logprob: -21.750017166137695
    7. '０' → logprob: -22.625017166137695
    8. ' ' → logprob: -23.375017166137695
    9. ' ' → logprob: -23.375017166137695
    10. '٠' → logprob: -23.750017166137695

Token 97: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '۰' → logprob: -19.125
    4. '```' → logprob: -21.0
    5. '０' → logprob: -21.125
    6. '   ' → logprob: -21.75
    7. '०' → logprob: -22.0
    8. '০' → logprob: -22.0
    9. '<|end|>' → logprob: -22.125
    10. '00' → logprob: -22.25

Token 98: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00013798571308143437
    2. '```' → logprob: -9.500138282775879
    3. ' if' → logprob: -10.125138282775879
    4. '
' → logprob: -11.375138282775879
    5. '#' → logprob: -11.875138282775879
    6. 'elif' → logprob: -13.250138282775879
    7. 'else' → logprob: -13.625138282775879
    8. 'i' → logprob: -14.500138282775879
    9. '``' → logprob: -15.500138282775879
    10. '`' → logprob: -15.750138282775879

Token 99: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -3.1186566047836095e-05
    2. '```' → logprob: -10.500031471252441
    3. '#' → logprob: -13.125031471252441
    4. ' if' → logprob: -13.875031471252441
    5. '
' → logprob: -15.500031471252441
    6. 'else' → logprob: -15.750031471252441
    7. 'elif' → logprob: -16.000030517578125
    8. 'i' → logprob: -16.500030517578125
    9. 'print' → logprob: -16.625030517578125
    10. '``' → logprob: -17.125030517578125

Token 100: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.47134220600128174
    2. 'count' → logprob: -1.4713422060012817
    3. ' painted' → logprob: -1.9713422060012817
    4. 'paint' → logprob: -5.221342086791992
    5. ' ' → logprob: -6.846342086791992
    6. ' paint' → logprob: -8.096342086791992
    7. ' not' → logprob: -9.346342086791992
    8. ' Painted' → logprob: -11.096342086791992
    9. ' ' → logprob: -11.221342086791992
    10. ' counted' → logprob: -11.346342086791992

Token 101: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.10020678490400314
    2. ' >' → logprob: -2.3502068519592285
    3. ' ' → logprob: -15.97520637512207
    4. '&gt' → logprob: -16.85020637512207
    5. '＞' → logprob: -17.72520637512207
    6. ':' → logprob: -18.47520637512207
    7. '">' → logprob: -18.47520637512207
    8. ' ' → logprob: -18.47520637512207
    9. ')' → logprob: -18.60020637512207
    10. ')>' → logprob: -18.60020637512207

Token 102: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47407716512680054
    2. '0' → logprob: -0.9740771651268005
    3. '<|end|>' → logprob: -16.349077224731445
    4. '```' → logprob: -17.099077224731445
    5. ' ' → logprob: -17.349077224731445
    6. '  ' → logprob: -17.349077224731445
    7. '=' → logprob: -17.724077224731445
    8. '۰' → logprob: -18.911577224731445
    9. '>' → logprob: -19.349077224731445
    10. '   ' → logprob: -19.474077224731445

Token 103: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -19.000051498413086
    4. '```' → logprob: -19.125051498413086
    5. 'N' → logprob: -20.375051498413086
    6. '  ' → logprob: -20.625051498413086
    7. '۰' → logprob: -21.125051498413086
    8. '=' → logprob: -21.125051498413086
    9. ' ' → logprob: -21.500051498413086
    10. '０' → logprob: -21.625051498413086

Token 104: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10040723532438278
    2. ':
' → logprob: -2.350407123565674
    3. '   ' → logprob: -8.600407600402832
    4. '):
' → logprob: -11.850407600402832
    5. ':

' → logprob: -12.975407600402832
    6. ':
' → logprob: -12.975407600402832
    7. ',' → logprob: -13.850407600402832
    8. '):' → logprob: -14.350407600402832
    9. '<|end|>' → logprob: -14.475407600402832
    10. ' intervals' → logprob: -14.725407600402832

Token 105: '   ' (ID: 271)
  Prédit: ' intervals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.19933122396469116
    2. '   ' → logprob: -1.824331283569336
    3. 'interval' → logprob: -3.949331283569336
    4. '```' → logprob: -9.449331283569336
    5. '
' → logprob: -11.199331283569336
    6. 'Intervals' → logprob: -11.324331283569336
    7. '       ' → logprob: -11.949331283569336
    8. '    
' → logprob: -12.199331283569336
    9. '(interval' → logprob: -13.074331283569336
    10. 'inter' → logprob: -13.324331283569336

Token 106: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.1269536167383194
    2. ' intervals' → logprob: -2.126953601837158
    3. '   ' → logprob: -10.626954078674316
    4. '```' → logprob: -14.626954078674316
    5. 'Intervals' → logprob: -14.751954078674316
    6. '(interval' → logprob: -15.376954078674316
    7. '
' → logprob: -15.876954078674316
    8. ' interval' → logprob: -16.751953125
    9. '       ' → logprob: -16.751953125
    10. ' ' → logprob: -17.376953125

Token 107: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0015052208909764886
    2. '.' → logprob: -6.501505374908447
    3. ' .' → logprob: -13.251504898071289
    4. 'append' → logprob: -14.251504898071289
    5. '   ' → logprob: -15.751504898071289
    6. '.extend' → logprob: -16.00150489807129
    7. '.setdefault' → logprob: -17.25150489807129
    8. '.push' → logprob: -17.50150489807129
    9. '+.' → logprob: -17.50150489807129
    10. '.Append' → logprob: -17.62650489807129

Token 108: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -1.7835754988482222e-05
    2. '(' → logprob: -11.375018119812012
    3. 'count' → logprob: -12.000018119812012
    4. ' (' → logprob: -17.625017166137695
    5. '(cnt' → logprob: -18.125017166137695
    6. '=count' → logprob: -18.375017166137695
    7. ',count' → logprob: -18.500017166137695
    8. '[count' → logprob: -18.625017166137695
    9. '(c' → logprob: -18.875017166137695
    10. '(
' → logprob: -18.875017166137695

Token 109: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5822400857578032e-05
    2. ')
' → logprob: -11.500025749206543
    3. ' )' → logprob: -12.125025749206543
    4. '#' → logprob: -12.500025749206543
    5. ']' → logprob: -13.625025749206543
    6. 'print' → logprob: -14.000025749206543
    7. '()' → logprob: -14.125025749206543
    8. ')`' → logprob: -15.000025749206543
    9. ')

' → logprob: -15.125025749206543
    10. ')#' → logprob: -15.125025749206543

Token 110: '#' (ID: 2)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.15370027720928192
    2. 'if' → logprob: -2.153700351715088
    3. 'print' → logprob: -4.153700351715088
    4. 'max' → logprob: -4.653700351715088
    5. ' intervals' → logprob: -8.40369987487793
    6. '```' → logprob: -8.40369987487793
    7. 'for' → logprob: -8.52869987487793
    8. 'answer' → logprob: -9.40369987487793
    9. 'sorted' → logprob: -9.40369987487793
    10. 'result' → logprob: -9.77869987487793

Token 111: ' Si' (ID: 7832)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.2596476972103119
    2. 'if' → logprob: -1.6346477270126343
    3. 'print' → logprob: -3.8846476078033447
    4. ' intervals' → logprob: -5.259647846221924
    5. 'max' → logprob: -5.884647846221924
    6. ' if' → logprob: -6.134647846221924
    7. 'result' → logprob: -7.259647846221924
    8. 'for' → logprob: -7.634647846221924
    9. 'answer' → logprob: -8.009647369384766
    10. 'min' → logprob: -8.134647369384766

Token 112: ' le' (ID: 505)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -1.0817930698394775
    2. ' intervals' → logprob: -1.0817930698394775
    3. 'n' → logprob: -2.2067930698394775
    4. 'm' → logprob: -2.9567930698394775
    5. 'ze' → logprob: -3.0817930698394775
    6. 'if' → logprob: -3.7067930698394775
    7. 'mpl' → logprob: -3.8317930698394775
    8. 'mp' → logprob: -3.9567930698394775
    9. '#' → logprob: -4.206792831420898
    10. 'nt' → logprob: -5.331792831420898

Token 113: ' début' (ID: 29589)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.1388251781463623
    2. 'n' → logprob: -1.2638251781463623
    3. 'not' → logprob: -1.3888251781463623
    4. 'interval' → logprob: -2.7638251781463623
    5. 'max' → logprob: -3.8888251781463623
    6. 'if' → logprob: -4.013825416564941
    7. 'min' → logprob: -4.138825416564941
    8. 'plus' → logprob: -4.763825416564941
    9. 'non' → logprob: -5.763825416564941
    10. 'nombre' → logprob: -5.888825416564941

Token 114: ' et' (ID: 859)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.7801539301872253
    2. 'paint' → logprob: -1.4051539897918701
    3. 'and' → logprob: -1.9051539897918701
    4. 'de' → logprob: -3.40515398979187
    5. ' et' → logprob: -3.53015398979187
    6. 'des' → logprob: -3.90515398979187
    7. 'interval' → logprob: -4.030153751373291
    8. ' and' → logprob: -4.030153751373291
    9. ' painted' → logprob: -5.155153751373291
    10. ' intervals' → logprob: -5.405153751373291

Token 115: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.06460702419281006
    2. 'paint' → logprob: -3.3146071434020996
    3. 'len' → logprob: -4.3146071434021
    4. 'interval' → logprob: -5.4396071434021
    5. '#' → logprob: -5.9396071434021
    6. ' la' → logprob: -6.0646071434021
    7. 'end' → logprob: -6.6896071434021
    8. 'fin' → logprob: -7.1896071434021
    9. 'pe' → logprob: -7.3146071434021
    10. ' intervals' → logprob: -8.064606666564941

Token 116: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.00027587503427639604
    2. ' fin' → logprob: -8.375275611877441
    3. 'end' → logprob: -10.375275611877441
    4. 'final' → logprob: -11.750275611877441
    5. 'if' → logprob: -12.875275611877441
    6. 'f' → logprob: -13.875275611877441
    7. 'Fin' → logprob: -14.625275611877441
    8. '#' → logprob: -14.750275611877441
    9. '-fin' → logprob: -15.000275611877441
    10. 'fim' → logprob: -15.375275611877441

Token 117: ' sont' (ID: 5242)
  Prédit: 'paint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'paint' → logprob: -0.18573439121246338
    2. ' painted' → logprob: -2.310734272003174
    3. 'interval' → logprob: -3.685734272003174
    4. '#' → logprob: -4.685734272003174
    5. ' intervals' → logprob: -4.685734272003174
    6. 'if' → logprob: -5.310734272003174
    7. ' de' → logprob: -5.435734272003174
    8. 'de' → logprob: -5.435734272003174
    9. 's' → logprob: -5.935734272003174
    10. 'pe' → logprob: -6.060734272003174

Token 118: ' pe' (ID: 1045)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.3225288689136505
    2. 'paint' → logprob: -1.6975288391113281
    3. 'True' → logprob: -2.447528839111328
    4. ' pe' → logprob: -5.697528839111328
    5. ' True' → logprob: -6.447528839111328
    6. '#' → logprob: -7.947528839111328
    7. 'true' → logprob: -8.697528839111328
    8. 'v' → logprob: -9.322528839111328
    9. '```' → logprob: -9.322528839111328
    10. ' peint' → logprob: -10.072528839111328

Token 119: 'ints' (ID: 20448)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2240956425666809
    2. 'inted' → logprob: -1.9740955829620361
    3. 'ints' → logprob: -2.849095582962036
    4. 'inte' → logprob: -6.599095821380615
    5. 'nt' → logprob: -7.349095821380615
    6. 'intes' → logprob: -7.724095821380615
    7. '#' → logprob: -8.099095344543457
    8. 'r' → logprob: -8.974095344543457
    9. 'ainted' → logprob: -8.974095344543457
    10. 'ign' → logprob: -9.224095344543457

Token 120: ',' (ID: 11)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.066179633140564
    2. ' if' → logprob: -1.066179633140564
    3. ' and' → logprob: -1.566179633140564
    4. ',' → logprob: -3.0661797523498535
    5. 'and' → logprob: -3.3161797523498535
    6. ':' → logprob: -4.1911797523498535
    7. ' et' → logprob: -6.1911797523498535
    8. 's' → logprob: -7.6911797523498535
    9. 'et' → logprob: -7.6911797523498535
    10. '```' → logprob: -7.8161797523498535

Token 121: ' ils' (ID: 15387)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11296233534812927
    2. ' if' → logprob: -2.237962245941162
    3. '#' → logprob: -9.86296272277832
    4. '   ' → logprob: -10.36296272277832
    5. 'i' → logprob: -11.11296272277832
    6. ' i' → logprob: -11.36296272277832
    7. 'while' → logprob: -11.86296272277832
    8. ' #' → logprob: -12.11296272277832
    9. ' ' → logprob: -12.61296272277832
    10. '```' → logprob: -12.86296272277832

Token 122: ' for' (ID: 395)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8233014941215515
    2. ' peuvent' → logprob: -1.5733015537261963
    3. ' can' → logprob: -2.3233015537261963
    4. '#' → logprob: -2.4483015537261963
    5. 'pe' → logprob: -2.6983015537261963
    6. ' sont' → logprob: -3.3233015537261963
    7. ' are' → logprob: -3.5733015537261963
    8. 'can' → logprob: -5.073301315307617
    9. ' could' → logprob: -5.573301315307617
    10. ' should' → logprob: -5.698301315307617

Token 123: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -3.173704271830502e-06
    2. 'mant' → logprob: -13.62500286102295
    3. 'm' → logprob: -14.00000286102295
    4. '#' → logprob: -15.25000286102295
    5. 'ments' → logprob: -15.75000286102295
    6. '```' → logprob: -15.75000286102295
    7. 'ent' → logprob: -15.87500286102295
    8. 'me' → logprob: -16.125003814697266
    9. 'mnt' → logprob: -17.000003814697266
    10. 'cent' → logprob: -17.000003814697266

Token 124: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.07296273857355118
    2. 'une' → logprob: -3.072962760925293
    3. ' un' → logprob: -3.947962760925293
    4. 'un' → logprob: -5.447962760925293
    5. ' la' → logprob: -8.572962760925293
    6. 'a' → logprob: -9.322962760925293
    7. ' a' → logprob: -9.822962760925293
    8. ' ' → logprob: -10.197962760925293
    9. '#' → logprob: -10.197962760925293
    10. ''une' → logprob: -10.197962760925293

Token 125: ' interval' (ID: 17116)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'unique' → logprob: -0.6738019585609436
    2. 'se' → logprob: -1.9238018989562988
    3. ' seule' → logprob: -2.048801898956299
    4. 'm' → logprob: -2.548801898956299
    5. 'interval' → logprob: -3.298801898956299
    6. ' même' → logprob: -3.673801898956299
    7. 'continu' → logprob: -3.798801898956299
    8. 'single' → logprob: -3.923801898956299
    9. 'contin' → logprob: -4.298801898956299
    10. 'continuous' → logprob: -4.798801898956299

Token 126: 'le' (ID: 282)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0859975814819336
    2. 'le' → logprob: -1.4609975814819336
    3. 's' → logprob: -2.2109975814819336
    4. '#' → logprob: -2.5859975814819336
    5. 've' → logprob: -2.7109975814819336
    6. 'se' → logprob: -3.2109975814819336
    7. 'd' → logprob: -3.9609975814819336
    8. 'l' → logprob: -4.210997581481934
    9. 'les' → logprob: -4.335997581481934
    10. 'val' → logprob: -4.335997581481934

Token 127: ' circul' (ID: 20568)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.056561559438705444
    2. 'if' → logprob: -2.9315614700317383
    3. ' and' → logprob: -7.056561470031738
    4. ',' → logprob: -8.056561470031738
    5. 's' → logprob: -8.181561470031738
    6. ' si' → logprob: -9.931561470031738
    7. ':' → logprob: -10.181561470031738
    8. '.' → logprob: -10.181561470031738
    9. ' of' → logprob: -11.056561470031738
    10. 'and' → logprob: -11.181561470031738

Token 128: 'aire' (ID: 8189)
  Prédit: 'aire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.004175867885351181
    2. 'aires' → logprob: -6.379175662994385
    3. 'ire' → logprob: -7.129175662994385
    4. 're' → logprob: -8.004176139831543
    5. 'r' → logprob: -8.254176139831543
    6. '#' → logprob: -8.504176139831543
    7. '```' → logprob: -9.004176139831543
    8. 'e' → logprob: -9.379176139831543
    9. 'are' → logprob: -9.504176139831543
    10. 'a' → logprob: -9.504176139831543

Token 129: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14322176575660706
    2. ' if' → logprob: -2.018221855163574
    3. ',' → logprob: -8.143221855163574
    4. '```' → logprob: -9.393221855163574
    5. ' 
' → logprob: -10.268221855163574
    6. '<|end|>' → logprob: -10.643221855163574
    7. '
' → logprob: -10.893221855163574
    8. 'i' → logprob: -11.143221855163574
    9. '  
' → logprob: -11.393221855163574
    10. '.' → logprob: -11.643221855163574

Token 130: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -7.73183855926618e-05
    2. ' if' → logprob: -9.500077247619629
    3. '```' → logprob: -13.000077247619629
    4. 'If' → logprob: -16.750078201293945
    5. 's' → logprob: -16.875078201293945
    6. 'i' → logprob: -17.500078201293945
    7. '
' → logprob: -17.625078201293945
    8. ',' → logprob: -17.750078201293945
    9. 'ifs' → logprob: -18.125078201293945
    10. '#' → logprob: -18.125078201293945

Token 131: ' len' (ID: 4631)
  Prédit: ' painted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' painted' → logprob: -0.0008120091515593231
    2. 'paint' → logprob: -7.12581205368042
    3. ' intervals' → logprob: -11.875811576843262
    4. ' ' → logprob: -15.500811576843262
    5. ' len' → logprob: -16.000812530517578
    6. 'len' → logprob: -16.250812530517578
    7. ' Painted' → logprob: -16.750812530517578
    8. ' paint' → logprob: -16.875812530517578
    9. 'interval' → logprob: -17.375812530517578
    10. '-painted' → logprob: -17.875812530517578

Token 132: '(interval' (ID: 100435)
  Prédit: '(interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(interval' → logprob: -4.084206375409849e-05
    2. '(p' → logprob: -10.125041007995605
    3. 'interval' → logprob: -14.500041007995605
    4. '(' → logprob: -16.12504005432129
    5. ' (' → logprob: -17.25004005432129
    6. '(period' → logprob: -18.37504005432129
    7. '(inter' → logprob: -18.50004005432129
    8. '(i' → logprob: -18.87504005432129
    9. ' intervals' → logprob: -19.12504005432129
    10. '(in' → logprob: -19.25004005432129

Token 133: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.011881615966558456
    2. '(interval' → logprob: -4.7618818283081055
    3. 'interval' → logprob: -6.0118818283081055
    4. 'vals' → logprob: -7.3868818283081055
    5. 'als' → logprob: -9.886881828308105
    6. ' intervals' → logprob: -9.886881828308105
    7. '>' → logprob: -10.511881828308105
    8. '(s' → logprob: -11.261881828308105
    9. 'val' → logprob: -11.261881828308105
    10. ')' → logprob: -11.761881828308105

Token 134: ')' (ID: 8)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5777587890625
    2. '>' → logprob: -0.8277587890625
    3. ')' → logprob: -6.4527587890625
    4. ')>' → logprob: -8.9527587890625
    5. ' ' → logprob: -9.5777587890625
    6. ' )' → logprob: -10.2027587890625
    7. ' >=' → logprob: -13.0777587890625
    8. '>=' → logprob: -13.3277587890625
    9. 'and' → logprob: -14.4527587890625
    10. '()>' → logprob: -14.8277587890625

Token 135: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.03804987296462059
    2. ' >' → logprob: -3.2880499362945557
    3. ' ' → logprob: -12.663049697875977
    4. '>=' → logprob: -13.038049697875977
    5. '1' → logprob: -14.038049697875977
    6. '()>' → logprob: -14.038049697875977
    7. 'and' → logprob: -14.163049697875977
    8. '＞' → logprob: -15.163049697875977
    9. ')>' → logprob: -16.038049697875977
    10. '">' → logprob: -16.413049697875977

Token 136: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.032162655144929886
    2. '0' → logprob: -3.532162666320801
    3. ' ' → logprob: -6.032162666320801
    4. '>' → logprob: -12.0321626663208
    5. '=' → logprob: -13.4071626663208
    6. ' ' → logprob: -13.6571626663208
    7. '１' → logprob: -16.282161712646484
    8. ' ' → logprob: -16.594661712646484
    9. '```' → logprob: -17.094661712646484
    10. '	' → logprob: -17.094661712646484

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017137357499450445
    2. '0' → logprob: -6.376713752746582
    3. ' ' → logprob: -11.376713752746582
    4. '>' → logprob: -15.876713752746582
    5. '１' → logprob: -18.126712799072266
    6. '१' → logprob: -18.751712799072266
    7. '۱' → logprob: -18.751712799072266
    8. '

' → logprob: -18.876712799072266
    9. '১' → logprob: -19.001712799072266
    10. '```' → logprob: -19.189212799072266

Token 138: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0017320599872618914
    2. 'and' → logprob: -6.376731872558594
    3. '   ' → logprob: -11.376731872558594
    4. ' ' → logprob: -12.001731872558594
    5. ':
' → logprob: -12.001731872558594
    6. ':' → logprob: -12.626731872558594
    7. '    ' → logprob: -13.376731872558594
    8. '	and' → logprob: -14.751731872558594
    9. ' и' → logprob: -15.251731872558594
    10. ' và' → logprob: -15.876731872558594

Token 139: ' painted' (ID: 33842)
  Prédit: 'paint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paint' → logprob: -0.012516953982412815
    2. ' painted' → logprob: -4.387516975402832
    3. ' paint' → logprob: -12.512516975402832
    4. 'pain' → logprob: -14.762516975402832
    5. '```' → logprob: -15.075016975402832
    6. 'Paint' → logprob: -15.325016975402832
    7. '-painted' → logprob: -15.450016975402832
    8. ' ' → logprob: -15.762516975402832
    9. 'pa' → logprob: -15.762516975402832
    10. ' ' → logprob: -15.762516975402832

Token 140: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.080963092041202e-06
    2. '[-' → logprob: -12.375004768371582
    3. '[N' → logprob: -14.625004768371582
    4. '0' → logprob: -15.125004768371582
    5. ' [' → logprob: -15.875004768371582
    6. '[
' → logprob: -17.1250057220459
    7. '
' → logprob: -19.3750057220459
    8. '```' → logprob: -19.6250057220459
    9. '[:' → logprob: -19.7500057220459
    10. '][' → logprob: -20.1250057220459

Token 141: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001815121271647513
    2. '-' → logprob: -6.376815319061279
    3. 'N' → logprob: -9.376814842224121
    4. ' ' → logprob: -10.876814842224121
    5. '-N' → logprob: -12.126814842224121
    6. ' -' → logprob: -12.876814842224121
    7. '[' → logprob: -15.376814842224121
    8. ' N' → logprob: -15.751814842224121
    9. ')' → logprob: -16.126815795898438
    10. '```' → logprob: -16.126815795898438

Token 142: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002352695446461439
    2. ' ]' → logprob: -7.002352714538574
    3. 'and' → logprob: -7.127352714538574
    4. ' and' → logprob: -7.502352714538574
    5. ' ' → logprob: -10.002352714538574
    6. ']==' → logprob: -10.877352714538574
    7. '0' → logprob: -11.877352714538574
    8. '-' → logprob: -12.252352714538574
    9. ')' → logprob: -12.377352714538574
    10. '1' → logprob: -14.127352714538574

Token 143: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12702175974845886
    2. 'and' → logprob: -2.1270217895507812
    3. ' ' → logprob: -9.877021789550781
    4. ' True' → logprob: -10.377021789550781
    5. 'True' → logprob: -11.627021789550781
    6. '=True' → logprob: -14.127021789550781
    7. ' a' → logprob: -14.627021789550781
    8. '==' → logprob: -15.627021789550781
    9. ')' → logprob: -15.752021789550781
    10. ' an' → logprob: -16.00202178955078

Token 144: ' painted' (ID: 33842)
  Prédit: 'paint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paint' → logprob: -0.038044821470975876
    2. ' painted' → logprob: -3.2880449295043945
    3. ' paint' → logprob: -13.038044929504395
    4. '   ' → logprob: -15.288044929504395
    5. ' ' → logprob: -15.788044929504395
    6. '-painted' → logprob: -15.788044929504395
    7. 'pa' → logprob: -16.163043975830078
    8. 'pain' → logprob: -16.288043975830078
    9. '  ' → logprob: -16.413043975830078
    10. ' Painted' → logprob: -16.538043975830078

Token 145: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.06207120418548584
    2. '[N' → logprob: -2.8120713233947754
    3. '[' → logprob: -9.187070846557617
    4. '[
' → logprob: -14.562070846557617
    5. '-' → logprob: -15.437070846557617
    6. 'N' → logprob: -15.562070846557617
    7. '[n' → logprob: -15.812070846557617
    8. ' [-' → logprob: -17.187070846557617
    9. '-N' → logprob: -17.562070846557617
    10. '```' → logprob: -17.812070846557617

Token 146: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5570885807392187e-05
    2. ' ' → logprob: -11.250015258789062
    3. ']' → logprob: -13.375015258789062
    4. '-' → logprob: -15.375015258789062
    5. 'N' → logprob: -15.750015258789062
    6. ' ' → logprob: -16.625015258789062
    7. 'true' → logprob: -16.875015258789062
    8. '   ' → logprob: -17.000015258789062
    9. '])' → logprob: -17.312515258789062
    10. '  ' → logprob: -17.437515258789062

Token 147: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0014030871680006385
    2. ']' → logprob: -6.876402854919434
    3. ']:
' → logprob: -8.251402854919434
    4. ' ]' → logprob: -10.126402854919434
    5. ':' → logprob: -10.251402854919434
    6. '):' → logprob: -10.876402854919434
    7. ']:
' → logprob: -11.751402854919434
    8. ']==' → logprob: -13.126402854919434
    9. ']):' → logprob: -13.501402854919434
    10. ']:

' → logprob: -13.501402854919434

Token 148: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1873379349708557
    2. ':
' → logprob: -1.812337875366211
    3. '   ' → logprob: -5.687337875366211
    4. ' :
' → logprob: -6.187337875366211
    5. ' :' → logprob: -6.312337875366211
    6. '):
' → logprob: -8.937337875366211
    7. ',' → logprob: -9.687337875366211
    8. ' and' → logprob: -10.187337875366211
    9. ':
' → logprob: -11.187337875366211
    10. '):' → logprob: -11.562337875366211

Token 149: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.1602364182472229
    2. ' intervals' → logprob: -1.9102363586425781
    3. '   ' → logprob: -11.535236358642578
    4. '
' → logprob: -13.785236358642578
    5. '(interval' → logprob: -14.535236358642578
    6. ' interval' → logprob: -14.785236358642578
    7. 'count' → logprob: -15.785236358642578
    8. '```' → logprob: -16.160236358642578
    9. 'inter' → logprob: -16.285236358642578
    10. 'Intervals' → logprob: -16.410236358642578

Token 150: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10021411627531052
    2. '[-' → logprob: -2.3502140045166016
    3. '[:-' → logprob: -11.850214004516602
    4. '=' → logprob: -16.2252140045166
    5. '0' → logprob: -16.6002140045166
    6. '[:' → logprob: -16.9752140045166
    7. ' [' → logprob: -16.9752140045166
    8. '
' → logprob: -17.3502140045166
    9. '=[' → logprob: -17.7252140045166
    10. '[len' → logprob: -17.7252140045166

Token 151: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006311862962320447
    2. '-' → logprob: -7.375631332397461
    3. ' ' → logprob: -12.750631332397461
    4. ' -' → logprob: -14.625631332397461
    5. ']' → logprob: -14.875631332397461
    6. '1' → logprob: -15.375631332397461
    7. ':' → logprob: -15.500631332397461
    8. ')' → logprob: -15.625631332397461
    9. '   ' → logprob: -16.25063133239746
    10. '```' → logprob: -16.37563133239746

Token 152: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004633876495063305
    2. ']+=' → logprob: -5.379633903503418
    3. ' ]' → logprob: -11.754633903503418
    4. ')' → logprob: -12.254633903503418
    5. '+=' → logprob: -15.004633903503418
    6. ']+' → logprob: -15.254633903503418
    7. ' +=' → logprob: -15.629633903503418
    8. ']=' → logprob: -16.1296329498291
    9. '>' → logprob: -16.2546329498291
    10. '}' → logprob: -16.7546329498291

Token 153: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.015089447610080242
    2. ' +=' → logprob: -4.265089511871338
    3. ']+=' → logprob: -7.515089511871338
    4. '=' → logprob: -7.890089511871338
    5. '+' → logprob: -12.39008903503418
    6. '```' → logprob: -14.64008903503418
    7. ' =' → logprob: -14.89008903503418
    8. '+=(' → logprob: -15.26508903503418
    9. ' ' → logprob: -15.51508903503418
    10. '+='' → logprob: -15.76508903503418

Token 154: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.0067154900170862675
    2. ' intervals' → logprob: -5.006715297698975
    3. '(interval' → logprob: -16.131715774536133
    4. '   ' → logprob: -17.381715774536133
    5. ' interval' → logprob: -17.631715774536133
    6. ' ' → logprob: -19.381715774536133
    7. 'int' → logprob: -20.006715774536133
    8. 'count' → logprob: -20.881715774536133
    9. '  ' → logprob: -20.881715774536133
    10. 'inte' → logprob: -21.131715774536133

Token 155: '[-' (ID: 17503)
  Prédit: 'pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' → logprob: -1.2004094123840332
    2. '.pop' → logprob: -1.2004094123840332
    3. '[' → logprob: -1.5754094123840332
    4. '[-' → logprob: -1.7004094123840332
    5. 'interval' → logprob: -5.450409412384033
    6. '.' → logprob: -6.825409412384033
    7. 'n' → logprob: -6.825409412384033
    8. 's' → logprob: -7.200409412384033
    9. ' intervals' → logprob: -7.950409412384033
    10. '1' → logprob: -8.825408935546875

Token 156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ']' → logprob: -16.625
    3. ' ' → logprob: -16.75
    4. '```' → logprob: -17.75
    5. '2' → logprob: -18.0
    6. '0' → logprob: -18.875
    7. '-' → logprob: -19.5
    8. '(' → logprob: -19.5
    9. ')' → logprob: -20.125
    10. '#' → logprob: -20.625

Token 157: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4853037893772125
    2. ']
' → logprob: -0.9853037595748901
    3. ')' → logprob: -5.23530387878418
    4. ')
' → logprob: -5.61030387878418
    5. '<|end|>' → logprob: -6.73530387878418
    6. '   ' → logprob: -7.61030387878418
    7. '
' → logprob: -8.36030387878418
    8. ' ]' → logprob: -9.61030387878418
    9. ']
' → logprob: -10.61030387878418
    10. '<|end|>' → logprob: -10.73530387878418

Token 158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048876211047172546
    2. ' intervals' → logprob: -3.0488762855529785
    3. 'interval' → logprob: -8.17387580871582
    4. '```' → logprob: -12.92387580871582
    5. '    
' → logprob: -13.92387580871582
    6. ' del' → logprob: -14.04887580871582
    7. '   ' → logprob: -14.29887580871582
    8. '  ' → logprob: -14.92387580871582
    9. '#' → logprob: -15.17387580871582
    10. '1' → logprob: -15.54887580871582

Token 159: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.008634308353066444
    2. ' intervals' → logprob: -4.758634090423584
    3. '   ' → logprob: -10.883634567260742
    4. 'del' → logprob: -14.633634567260742
    5. '```' → logprob: -15.258634567260742
    6. '(interval' → logprob: -15.758634567260742
    7. ' del' → logprob: -16.758634567260742
    8. '    
' → logprob: -17.008634567260742
    9. '
' → logprob: -17.508634567260742
    10. 'inter' → logprob: -18.633634567260742

Token 160: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.00035262384335510433
    2. 'pop' → logprob: -8.62535285949707
    3. '.' → logprob: -8.75035285949707
    4. '().' → logprob: -12.25035285949707
    5. '	pop' → logprob: -12.25035285949707
    6. '(pop' → logprob: -13.50035285949707
    7. '=' → logprob: -13.62535285949707
    8. ' pop' → logprob: -14.37535285949707
    9. '].' → logprob: -14.37535285949707
    10. '.Pop' → logprob: -14.75035285949707

Token 161: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.394135612528771e-05
    2. '(-' → logprob: -10.500043869018555
    3. '()-' → logprob: -11.125043869018555
    4. '()
' → logprob: -13.750043869018555
    5. '()

' → logprob: -15.875043869018555
    6. '()]' → logprob: -15.875043869018555
    7. '(' → logprob: -16.000043869018555
    8. '()`' → logprob: -16.375043869018555
    9. ' ()' → logprob: -17.750043869018555
    10. '()%' → logprob: -18.000043869018555

Token 162: 'interval' (ID: 37558)
  Prédit: 'interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.17215685546398163
    2. 'print' → logprob: -2.797156810760498
    3. 'max' → logprob: -2.922156810760498
    4. 'if' → logprob: -3.297156810760498
    5. ' intervals' → logprob: -6.297156810760498
    6. '#' → logprob: -6.922156810760498
    7. 'answer' → logprob: -7.172156810760498
    8. 'sorted' → logprob: -7.422156810760498
    9. 'result' → logprob: -8.047157287597656
    10. '
' → logprob: -8.172157287597656

Token 163: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.005683934316039085
    2. 'als' → logprob: -5.255683898925781
    3. 'vals' → logprob: -7.755683898925781
    4. 'val' → logprob: -11.630683898925781
    5. 'al' → logprob: -12.880683898925781
    6. '```' → logprob: -13.255683898925781
    7. '=' → logprob: -13.755683898925781
    8. 'sort' → logprob: -13.755683898925781
    9. '[' → logprob: -13.880683898925781
    10. 'max' → logprob: -14.255683898925781

Token 164: '.sort' (ID: 19551)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 165: '(reverse' (ID: 110806)
  Prédit: '(reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -0.3873232901096344
    2. '()' → logprob: -1.137323260307312
    3. 'reverse' → logprob: -8.012323379516602
    4. '(' → logprob: -9.262323379516602
    5. '()
' → logprob: -10.637323379516602
    6. '(re' → logprob: -14.637323379516602
    7. '.reverse' → logprob: -15.387323379516602
    8. '(key' → logprob: -15.762323379516602
    9. '_reverse' → logprob: -16.0123233795166
    10. ')' → logprob: -16.0123233795166

Token 166: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.6010880470275879
    2. '())' → logprob: -1.351088047027588
    3. ')' → logprob: -2.226088047027588
    4. '()' → logprob: -2.601088047027588
    5. '(True' → logprob: -4.726088047027588
    6. '(' → logprob: -6.851088047027588
    7. '=' → logprob: -8.10108757019043
    8. '(),' → logprob: -8.47608757019043
    9. '())
' → logprob: -10.10108757019043
    10. '()>' → logprob: -10.10108757019043

Token 167: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.263011578586884e-05
    2. ')
' → logprob: -10.125042915344238
    3. '()' → logprob: -13.625042915344238
    4. ' )' → logprob: -14.875042915344238
    5. '))' → logprob: -15.250042915344238
    6. ']' → logprob: -16.000041961669922
    7. '())' → logprob: -16.125041961669922
    8. ')`' → logprob: -16.375041961669922
    9. '),' → logprob: -16.875041961669922
    10. ')

' → logprob: -17.000041961669922

Token 168: 'length' (ID: 7914)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6540473103523254
    2. 'print' → logprob: -0.7790473103523254
    3. 'answer' → logprob: -4.90404748916626
    4. 'result' → logprob: -5.40404748916626
    5. 'total' → logprob: -6.27904748916626
    6. 'import' → logprob: -6.40404748916626
    7. 'max' → logprob: -6.65404748916626
    8. 'for' → logprob: -6.77904748916626
    9. 'k' → logprob: -6.90404748916626
    10. 'res' → logprob: -7.27904748916626

Token 169: '_count' (ID: 7536)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0669858530163765
    2. ' =' → logprob: -3.691985845565796
    3. '=' → logprob: -3.941985845565796
    4. '_' → logprob: -4.441986083984375
    5. '(' → logprob: -5.316986083984375
    6. '_max' → logprob: -6.941986083984375
    7. '(interval' → logprob: -7.316986083984375
    8. '()' → logprob: -7.941986083984375
    9. '_s' → logprob: -8.316986083984375
    10. 'max' → logprob: -8.441986083984375

Token 170: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2661675810813904
    2. ' =' → logprob: -1.5161676406860352
    3. '=' → logprob: -4.266167640686035
    4. ',' → logprob: -10.016167640686035
    5. 'ed' → logprob: -10.641167640686035
    6. 'er' → logprob: -10.891167640686035
    7. '_map' → logprob: -12.641167640686035
    8. '_' → logprob: -12.891167640686035
    9. '[' → logprob: -13.266167640686035
    10. '=s' → logprob: -13.891167640686035

Token 171: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0036044635344296694
    2. '0' → logprob: -6.253604412078857
    3. 'len' → logprob: -7.128604412078857
    4. '{' → logprob: -7.378604412078857
    5. 'interval' → logprob: -9.128604888916016
    6. ' {}' → logprob: -9.378604888916016
    7. '{}
' → logprob: -11.378604888916016
    8. ' intervals' → logprob: -11.503604888916016
    9. '1' → logprob: -11.753604888916016
    10. '{}\' → logprob: -12.503604888916016

Token 172: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.7954958821064793e-05
    2. ' for' → logprob: -11.000018119812012
    3. 'length' → logprob: -13.875018119812012
    4. '```' → logprob: -16.750017166137695
    5. 'interval' → logprob: -17.125017166137695
    6. ')' → logprob: -17.500017166137695
    7. 'prev' → logprob: -17.875017166137695
    8. 'if' → logprob: -18.000017166137695
    9. 'current' → logprob: -18.000017166137695
    10. 'For' → logprob: -18.125017166137695

Token 173: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.06886841356754303
    2. 'interval' → logprob: -3.193868398666382
    3. 'l' → logprob: -3.818868398666382
    4. 'x' → logprob: -6.443868637084961
    5. ' length' → logprob: -6.443868637084961
    6. ' interval' → logprob: -8.818868637084961
    7. 'i' → logprob: -8.818868637084961
    8. 'L' → logprob: -10.943868637084961
    9. 'val' → logprob: -11.068868637084961
    10. ' l' → logprob: -11.443868637084961

Token 174: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.112886942923069
    2. 'in' → logprob: -2.237886905670166
    3. ',' → logprob: -10.612887382507324
    4. ' ' → logprob: -11.237887382507324
    5. '_in' → logprob: -11.362887382507324
    6. 's' → logprob: -12.612887382507324
    7. 'length' → logprob: -12.987887382507324
    8. ' ,' → logprob: -13.362887382507324
    9. 'In' → logprob: -13.987887382507324
    10. ',in' → logprob: -14.112887382507324

Token 175: ' intervals' (ID: 49900)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.048590436577796936
    2. ' intervals' → logprob: -3.0485904216766357
    3. ' interval' → logprob: -13.298590660095215
    4. '(interval' → logprob: -13.673590660095215
    5. '   ' → logprob: -16.2985897064209
    6. ' ' → logprob: -16.9235897064209
    7. 'inter' → logprob: -17.0485897064209
    8. 'inte' → logprob: -17.4235897064209
    9. 'int' → logprob: -17.4235897064209
    10. 'Intervals' → logprob: -17.7985897064209

Token 176: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0052547454833984375
    2. ':
' → logprob: -5.255254745483398
    3. ':length' → logprob: -12.005254745483398
    4. '=' → logprob: -12.630254745483398
    5. '   ' → logprob: -13.130254745483398
    6. ',' → logprob: -13.255254745483398
    7. '):
' → logprob: -13.255254745483398
    8. '):' → logprob: -13.630254745483398
    9. '[length' → logprob: -13.880254745483398
    10. ' length' → logprob: -14.130254745483398

Token 177: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00041267683263868093
    2. 'length' → logprob: -8.375412940979004
    3. ' length' → logprob: -8.625412940979004
    4. '	length' → logprob: -13.625412940979004
    5. '_length' → logprob: -14.875412940979004
    6. '[length' → logprob: -15.250412940979004
    7. ',length' → logprob: -15.375412940979004
    8. '(length' → logprob: -15.750412940979004
    9. ' if' → logprob: -16.125411987304688
    10. 'if' → logprob: -16.250411987304688

Token 178: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' (adapté à ' length') → logprob: -0.008564929477870464
    2. ' length' → logprob: -5.0085649490356445
    3. '   ' → logprob: -6.8835649490356445
    4. 'if' → logprob: -7.1335649490356445
    5. ' if' → logprob: -10.633564949035645
    6. '	length' → logprob: -14.258564949035645
    7. '_length' → logprob: -15.133564949035645
    8. ' ' → logprob: -16.133563995361328
    9. 'Length' → logprob: -16.508563995361328
    10. '
' → logprob: -16.633563995361328

Token 179: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00028505371301434934
    2. '_length' → logprob: -8.625285148620605
    3. '_' → logprob: -10.000285148620605
    4. '=' → logprob: -10.375285148620605
    5. 'count' → logprob: -10.875285148620605
    6. '_counts' → logprob: -12.875285148620605
    7. ' =' → logprob: -13.125285148620605
    8. '_len' → logprob: -14.125285148620605
    9. ' in' → logprob: -14.375285148620605
    10. ']' → logprob: -14.625285148620605

Token 180: '[length' (ID: 130091)
  Prédit: '[length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[length' → logprob: -1.3856492842023727e-06
    2. '[' → logprob: -14.125000953674316
    3. '[len' → logprob: -15.500000953674316
    4. '.setdefault' → logprob: -15.625000953674316
    5. '[l' → logprob: -16.625001907348633
    6. ' [' → logprob: -17.125001907348633
    7. 'length' → logprob: -17.875001907348633
    8. ',length' → logprob: -18.500001907348633
    9. '(length' → logprob: -18.625001907348633
    10. '[L' → logprob: -18.750001907348633

Token 181: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1440216302871704
    2. ']' → logprob: -2.144021511077881
    3. ' =' → logprob: -4.519021511077881
    4. ']=' → logprob: -5.144021511077881
    5. ']+=' → logprob: -8.894021987915039
    6. '+=' → logprob: -9.894021987915039
    7. ' ]' → logprob: -10.644021987915039
    8. ' +=' → logprob: -14.019021987915039
    9. ')' → logprob: -14.144021987915039
    10. 'if' → logprob: -14.769021987915039

Token 182: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015779515961185098
    2. ' =' → logprob: -6.501577854156494
    3. '+=' → logprob: -9.501578330993652
    4. ' +=' → logprob: -14.501578330993652
    5. '=count' → logprob: -15.626578330993652
    6. '=
' → logprob: -16.751577377319336
    7. 'length' → logprob: -17.126577377319336
    8. '=

' → logprob: -17.251577377319336
    9. '=len' → logprob: -18.001577377319336
    10. '=}' → logprob: -19.001577377319336

Token 183: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.012511883862316608
    2. ' length' → logprob: -4.387511730194092
    3. '	length' → logprob: -14.01251220703125
    4. 'leng' → logprob: -14.63751220703125
    5. 'len' → logprob: -14.88751220703125
    6. '   ' → logprob: -15.88751220703125
    7. ' ' → logprob: -16.26251220703125
    8. 'interval' → logprob: -16.26251220703125
    9. 'ength' → logprob: -16.76251220703125
    10. '(length' → logprob: -17.01251220703125

Token 184: '_count' (ID: 7536)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.40954506397247314
    2. 'length' → logprob: -1.2845450639724731
    3. ' +' → logprob: -3.1595449447631836
    4. '0' → logprob: -5.284544944763184
    5. 'ength' → logprob: -5.409544944763184
    6. ' length' → logprob: -5.534544944763184
    7. '1' → logprob: -6.659544944763184
    8. ' ' → logprob: -7.409544944763184
    9. '_length' → logprob: -7.909544944763184
    10. '=' → logprob: -8.159544944763184

Token 185: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -4.1557283111615106e-05
    2. 'get' → logprob: -10.250041961669922
    3. '.' → logprob: -12.375041961669922
    4. 'length' → logprob: -14.125041961669922
    5. ' .' → logprob: -14.750041961669922
    6. '[length' → logprob: -14.875041961669922
    7. '.setdefault' → logprob: -15.625041961669922
    8. '].' → logprob: -16.250041961669922
    9. '+' → logprob: -16.500041961669922
    10. '```' → logprob: -16.625041961669922

Token 186: '(length' (ID: 47037)
  Prédit: '(length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -2.2200749754119897e-06
    2. 'length' → logprob: -13.250001907348633
    3. ',length' → logprob: -15.375001907348633
    4. '[length' → logprob: -16.375001907348633
    5. '(' → logprob: -16.500001907348633
    6. ':length' → logprob: -20.625001907348633
    7. ' length' → logprob: -20.875001907348633
    8. '	length' → logprob: -21.625001907348633
    9. '(len' → logprob: -21.875001907348633
    10. '(l' → logprob: -22.625001907348633

Token 187: ',' (ID: 11)
  Prédit: ',length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',length' → logprob: -0.21694634854793549
    2. '(length' → logprob: -1.7169463634490967
    3. ',' → logprob: -4.216946125030518
    4. 'length' → logprob: -7.341946125030518
    5. '[length' → logprob: -10.966946601867676
    6. ':length' → logprob: -13.216946601867676
    7. ' length' → logprob: -14.091946601867676
    8. ')' → logprob: -14.841946601867676
    9. ' ,' → logprob: -14.966946601867676
    10. '```' → logprob: -14.966946601867676

Token 188: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -17.500017166137695
    4. ')' → logprob: -18.875017166137695
    5. '1' → logprob: -21.000017166137695
    6. '    ' → logprob: -21.000017166137695
    7. '۰' → logprob: -21.000017166137695
    8. '  ' → logprob: -21.125017166137695
    9. '```' → logprob: -21.125017166137695
    10. ' ' → logprob: -21.625017166137695

Token 189: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '1' → logprob: -17.625017166137695
    4. '   ' → logprob: -17.750017166137695
    5. ')' → logprob: -17.875017166137695
    6. '۰' → logprob: -18.812517166137695
    7. '
' → logprob: -19.062517166137695
    8. '```' → logprob: -19.375017166137695
    9. '

' → logprob: -19.500017166137695
    10. '  ' → logprob: -19.500017166137695

Token 190: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4763621389865875
    2. '0' → logprob: -0.9763621091842651
    3. ')+' → logprob: -6.351362228393555
    4. '+' → logprob: -7.601362228393555
    5. '1' → logprob: -11.351362228393555
    6. '+)' → logprob: -11.476362228393555
    7. ' )' → logprob: -12.726362228393555
    8. '()' → logprob: -12.976362228393555
    9. '```' → logprob: -12.976362228393555
    10. ' ' → logprob: -13.226362228393555

Token 191: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07889925688505173
    2. ' +' → logprob: -2.5788991451263428
    3. '0' → logprob: -11.953899383544922
    4. '1' → logprob: -14.203899383544922
    5. '+k' → logprob: -14.703899383544922
    6. '()+' → logprob: -15.203899383544922
    7. '+i' → logprob: -15.453899383544922
    8. '+=' → logprob: -15.578899383544922
    9. ')+' → logprob: -15.828899383544922
    10. '+n' → logprob: -15.953899383544922

Token 192: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -19.000059127807617
    4. '```' → logprob: -20.750059127807617
    5. '  ' → logprob: -22.250059127807617
    6. ' ' → logprob: -22.875059127807617
    7. '
' → logprob: -23.250059127807617
    8. '0' → logprob: -23.250059127807617
    9. '    ' → logprob: -24.875059127807617
    10. '	' → logprob: -25.125059127807617

Token 193: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -20.125
    4. '   ' → logprob: -20.625
    5. '
' → logprob: -23.625
    6. '  ' → logprob: -24.25
    7. '0' → logprob: -24.625
    8. '۱' → logprob: -25.5
    9. '`' → logprob: -25.5
    10. '１' → logprob: -25.625

Token 194: '

' (ID: 279)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.11789194494485855
    2. 'print' → logprob: -4.367891788482666
    3. 'keys' → logprob: -4.492891788482666
    4. 'result' → logprob: -4.492891788482666
    5. 'best' → logprob: -4.617891788482666
    6. 'answer' → logprob: -4.617891788482666
    7. '#' → logprob: -5.117891788482666
    8. 'length' → logprob: -5.117891788482666
    9. '(' → logprob: -5.367891788482666
    10. 'largest' → logprob: -5.617891788482666

Token 195: 'for' (ID: 1938)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5626246929168701
    2. 'result' → logprob: -2.18762469291687
    3. 'answer' → logprob: -2.18762469291687
    4. 'Q' → logprob: -3.06262469291687
    5. 'for' → logprob: -3.18762469291687
    6. 'if' → logprob: -4.187624931335449
    7. 'res' → logprob: -4.312624931335449
    8. 'long' → logprob: -4.687624931335449
    9. 'results' → logprob: -4.812624931335449
    10. 'K' → logprob: -4.937624931335449

Token 196: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.02660355158150196
    2. 'length' → logprob: -3.6516034603118896
    3. ' key' → logprob: -8.651603698730469
    4. ' l' → logprob: -10.901603698730469
    5. ' k' → logprob: -11.026603698730469
    6. 'l' → logprob: -11.151603698730469
    7. ' _' → logprob: -11.151603698730469
    8. '(length' → logprob: -11.276603698730469
    9. '_length' → logprob: -11.776603698730469
    10. ' ' → logprob: -11.776603698730469

Token 197: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.554486095905304
    2. ',' → logprob: -1.3044860363006592
    3. 'in' → logprob: -1.9294860363006592
    4. ' ,' → logprob: -5.679486274719238
    5. ',length' → logprob: -5.804486274719238
    6. ',count' → logprob: -6.554486274719238
    7. '_in' → logprob: -7.554486274719238
    8. ',in' → logprob: -8.179486274719238
    9. 'length' → logprob: -9.554486274719238
    10. ' ' → logprob: -9.929486274719238

Token 198: ' sorted' (ID: 20099)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.6408870816230774
    2. 'sorted' → logprob: -1.6408870220184326
    3. 'interval' → logprob: -1.6408870220184326
    4. 'range' → logprob: -2.5158870220184326
    5. ' intervals' → logprob: -5.890887260437012
    6. ' range' → logprob: -7.515887260437012
    7. ' length' → logprob: -7.515887260437012
    8. ' sorted' → logprob: -7.640887260437012
    9. 'ranges' → logprob: -8.515887260437012
    10. 're' → logprob: -9.390887260437012

Token 199: '(length' (ID: 47037)
  Prédit: '(length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -7.226628895296017e-06
    2. 'length' → logprob: -12.375007629394531
    3. '(' → logprob: -12.750007629394531
    4. '[length' → logprob: -17.50000762939453
    5. ',length' → logprob: -17.62500762939453
    6. '(list' → logprob: -18.37500762939453
    7. '(interval' → logprob: -18.75000762939453
    8. ' length' → logprob: -18.87500762939453
    9. '(
' → logprob: -19.50000762939453
    10. '(range' → logprob: -19.62500762939453

Token 200: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.302144318819046
    2. '_length' → logprob: -1.4271442890167236
    3. 'length' → logprob: -4.552144527435303
    4. '(length' → logprob: -4.802144527435303
    5. 's' → logprob: -6.552144527435303
    6. '-length' → logprob: -8.552144050598145
    7. 'count' → logprob: -9.302144050598145
    8. '_counts' → logprob: -9.427144050598145
    9. ' length' → logprob: -10.302144050598145
    10. ')' → logprob: -10.302144050598145

Token 201: '.keys' (ID: 18392)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6276168823242188
    2. '():' → logprob: -1.3776168823242188
    3. '):' → logprob: -1.7526168823242188
    4. '.keys' → logprob: -3.5026168823242188
    5. '()):
' → logprob: -4.752616882324219
    6. '):
' → logprob: -7.877616882324219
    7. ')' → logprob: -8.002616882324219
    8. '():
' → logprob: -8.377616882324219
    9. '().' → logprob: -8.752616882324219
    10. '(),' → logprob: -8.877616882324219

Token 202: '(),' (ID: 2547)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004881365690380335
    2. '()):
' → logprob: -5.629881381988525
    3. '():' → logprob: -7.379881381988525
    4. '):' → logprob: -7.754881381988525
    5. ' (' → logprob: -8.879880905151367
    6. '(),' → logprob: -10.379880905151367
    7. '())' → logprob: -10.504880905151367
    8. ' ()' → logprob: -11.004880905151367
    9. '()>' → logprob: -12.754880905151367
    10. '(' → logprob: -12.754880905151367

Token 203: ' reverse' (ID: 18199)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.019204385578632355
    2. ' reverse' → logprob: -4.019204616546631
    3. 'key' → logprob: -7.894204616546631
    4. '(reverse' → logprob: -8.269204139709473
    5. ' key' → logprob: -8.644204139709473
    6. '):
' → logprob: -9.269204139709473
    7. '):' → logprob: -9.394204139709473
    8. '   ' → logprob: -10.269204139709473
    9. ')' → logprob: -11.519204139709473
    10. '_reverse' → logprob: -12.394204139709473

Token 204: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.004553184844553471
    2. '()' → logprob: -6.004553318023682
    3. '(True' → logprob: -6.504553318023682
    4. '()):
' → logprob: -8.254552841186523
    5. '())' → logprob: -8.879552841186523
    6. '=' → logprob: -9.129552841186523
    7. '(),' → logprob: -10.504552841186523
    8. '():
' → logprob: -11.504552841186523
    9. '():' → logprob: -11.879552841186523
    10. 'True' → logprob: -12.004552841186523

Token 205: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012849001213908195
    2. ':' → logprob: -4.512848854064941
    3. '):
' → logprob: -6.387848854064941
    4. ')' → logprob: -9.387848854064941
    5. ' ):' → logprob: -11.637848854064941
    6. ',' → logprob: -11.637848854064941
    7. '():' → logprob: -12.637848854064941
    8. '}:' → logprob: -12.887848854064941
    9. '):
' → logprob: -13.137848854064941
    10. '   ' → logprob: -13.262848854064941

Token 206: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016387656796723604
    2. 'print' → logprob: -6.626638889312744
    3. ' print' → logprob: -8.501638412475586
    4. ':' → logprob: -9.251638412475586
    5. '    
' → logprob: -12.501638412475586
    6. '<|end|>' → logprob: -13.001638412475586
    7. '       ' → logprob: -13.376638412475586
    8. '	print' → logprob: -14.126638412475586
    9. ':
' → logprob: -14.376638412475586
    10. ' if' → logprob: -14.376638412475586

Token 207: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.08347488194704056
    2. ' print' → logprob: -2.83347487449646
    3. '   ' → logprob: -4.083475112915039
    4. 'if' → logprob: -5.958475112915039
    5. ' if' → logprob: -6.333475112915039
    6. 'for' → logprob: -10.333475112915039
    7. ' for' → logprob: -10.958475112915039
    8. '    
' → logprob: -12.333475112915039
    9. '	print' → logprob: -12.333475112915039
    10. '```' → logprob: -12.958475112915039

Token 208: '(length' (ID: 47037)
  Prédit: '(length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -0.006575276609510183
    2. '(f' → logprob: -5.506575107574463
    3. 'length' → logprob: -6.006575107574463
    4. '(' → logprob: -10.506575584411621
    5. '(len' → logprob: -13.381575584411621
    6. ' length' → logprob: -14.131575584411621
    7. '(l' → logprob: -14.381575584411621
    8. 'f' → logprob: -14.756575584411621
    9. '((' → logprob: -15.381575584411621
    10. ',length' → logprob: -16.381574630737305

Token 209: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03823622316122055
    2. ',length' → logprob: -3.288236141204834
    3. ' ,' → logprob: -9.288236618041992
    4. 'length' → logprob: -10.038236618041992
    5. ',len' → logprob: -10.038236618041992
    6. ',end' → logprob: -12.288236618041992
    7. ')' → logprob: -12.538236618041992
    8. ',l' → logprob: -13.538236618041992
    9. ' length' → logprob: -13.538236618041992
    10. ',f' → logprob: -13.788236618041992

Token 210: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.005930101033300161
    2. ' length' → logprob: -5.130929946899414
    3. 'leng' → logprob: -14.130929946899414
    4. 'len' → logprob: -14.880929946899414
    5. '(length' → logprob: -16.255929946899414
    6. ' ' → logprob: -16.380929946899414
    7. '[length' → logprob: -16.755929946899414
    8. ',length' → logprob: -17.005929946899414
    9. '	length' → logprob: -17.130929946899414
    10. '-length' → logprob: -17.505929946899414

Token 211: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00014251544780563563
    2. 'count' → logprob: -9.500142097473145
    3. '[length' → logprob: -10.375142097473145
    4. '_length' → logprob: -10.625142097473145
    5. '[count' → logprob: -12.125142097473145
    6. ')' → logprob: -13.000142097473145
    7. '$count' → logprob: -13.750142097473145
    8. '_counts' → logprob: -14.000142097473145
    9. 'length' → logprob: -14.250142097473145
    10. 'Count' → logprob: -14.500142097473145

Token 212: '[length' (ID: 130091)
  Prédit: '[length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[length' → logprob: -2.935296834039036e-06
    2. '[' → logprob: -13.50000286102295
    3. ')[' → logprob: -14.00000286102295
    4. '[l' → logprob: -15.12500286102295
    5. '[len' → logprob: -16.375003814697266
    6. '[key' → logprob: -16.625003814697266
    7. '[line' → logprob: -17.000003814697266
    8. '][' → logprob: -17.250003814697266
    9. ')' → logprob: -17.750003814697266
    10. '[level' → logprob: -17.875003814697266

Token 213: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. '))' → logprob: -16.0
    3. ')
' → logprob: -16.25
    4. ' )' → logprob: -16.75
    5. ')`' → logprob: -17.125
    6. '})' → logprob: -18.875
    7. ')}' → logprob: -19.25
    8. '),' → logprob: -19.375
    9. ')#' → logprob: -19.625
    10. '())' → logprob: -19.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 211
Tokens correctement prédits (1ère position, stricte): 94
Tokens correctement prédits (1ère position, avec adaptation): 99
Tokens correctement prédits (top 10): 185
Précision stricte (1ère position): 44.55%
Précision adaptée (1ère position): 46.92%
Précision (top 10): 87.68%
================================================================================
