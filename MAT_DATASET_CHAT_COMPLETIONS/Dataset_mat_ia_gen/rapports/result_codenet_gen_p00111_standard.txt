================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:17:59
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
code_map = {
    'A': '00000', 'B': '00001', 'C': '00010', 'D': '00011', 'E': '00100', 'F': '00101', 'G': '00110', 'H': '00111',
    'I': '01000', 'J': '01001', 'K': '01010', 'L': '01011', 'M': '01100', 'N': '01101', 'O': '01110', 'P': '01111',
    'Q': '10000', 'R': '10001', 'S': '10010', 'T': '10011', 'U': '10100', 'V': '10101', 'W': '10110', 'X': '10111',
    'Y': '11000', 'Z': '11001', "'": '11010', '-': '11011', '?': '11100', '.': '11101', ',': '11110', ' ': '11111'
}
rev_map = {v:k for k,v in code_map.items()}

def encode(s):
    s = s.upper()
    bits = ''.join(code_map[c] for c in s)
    return bits

def decode(bits):
    res = []
    idx = 0
    n = len(bits)
    while idx < n:
        for length in range(5,2,-1):
            if idx+length<=n:
                piece = bits[idx:idx+length]
                if piece in rev_map:
                    res.append(rev_map[piece])
                    idx += length
                    break
        else:
            idx +=1
    return ''.join(res)

import sys

for line in sys.stdin:
    line=line.strip()
    if not line:
        continue
    bits=''.join(code_map[c] for c in line)
    # decode bits greedily, trying 5,4,3 bits
    output=[]
    i=0
    while i<len(bits):
        for l in range(5,2,-1):
            if i+l<=len(bits):
                piece=bits[i:i+l]
                if piece in rev_map:
                    output.append(rev_map[piece])
                    i+=l
                    break
        else:
            i+=1
    print(''.join(output))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'code' (ID: 3056)
  → Token d'amorce (pas de prédiction)

Token 1: '_map' (ID: 11824)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' {
' (ID: 405)
  Prédit: ' {}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.24876202642917633
    2. ' {' → logprob: -1.8737620115280151
    3. '{}' → logprob: -2.8737621307373047
    4. '{' → logprob: -4.623762130737305
    5. ' ' → logprob: -8.248762130737305
    6. ' {};' → logprob: -9.498762130737305
    7. ' {'' → logprob: -11.748762130737305
    8. ' {
' → logprob: -12.123762130737305
    9. ' {"' → logprob: -12.248762130737305
    10. ' {
' → logprob: -12.248762130737305

Token 4: '   ' (ID: 271)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03252517059445381
    2. '"' → logprob: -3.532525062561035
    3. ''a' → logprob: -6.782525062561035
    4. ''\' → logprob: -7.532525062561035
    5. ''t' → logprob: -8.407525062561035
    6. ''s' → logprob: -8.657525062561035
    7. ''A' → logprob: -9.282525062561035
    8. ''b' → logprob: -9.407525062561035
    9. ''"' → logprob: -9.657525062561035
    10. '`' → logprob: -9.657525062561035

Token 5: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.005566940177232027
    2. '"' → logprob: -5.6305670738220215
    3. ''"' → logprob: -6.7555670738220215
    4. ''a' → logprob: -8.130566596984863
    5. ''\' → logprob: -8.505566596984863
    6. ''s' → logprob: -9.755566596984863
    7. ''t' → logprob: -9.755566596984863
    8. ''b' → logprob: -10.380566596984863
    9. '"'' → logprob: -11.380566596984863
    10. '   ' → logprob: -11.380566596984863

Token 6: 'A' (ID: 32)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6953865885734558
    2. ''' → logprob: -1.6953866481781006
    3. 'p' → logprob: -2.1953866481781006
    4. '"' → logprob: -2.8203866481781006
    5. '{' → logprob: -4.4453864097595215
    6. 'def' → logprob: -4.6953864097595215
    7. 'f' → logprob: -4.6953864097595215
    8. 'b' → logprob: -4.8203864097595215
    9. ''s' → logprob: -4.8203864097595215
    10. 'c' → logprob: -4.8203864097595215

Token 7: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.03844271972775459
    2. ''' → logprob: -3.288442611694336
    3. '':'' → logprob: -9.413442611694336
    4. ''}' → logprob: -9.538442611694336
    5. ' ':' → logprob: -9.663442611694336
    6. ''A' → logprob: -10.288442611694336
    7. 'I' → logprob: -10.413442611694336
    8. ''):' → logprob: -10.413442611694336
    9. ''s' → logprob: -11.163442611694336
    10. ''I' → logprob: -11.413442611694336

Token 8: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5088114738464355
    2. ' '' → logprob: -1.2588114738464355
    3. '1' → logprob: -2.6338114738464355
    4. '[' → logprob: -4.2588114738464355
    5. '"' → logprob: -4.5088114738464355
    6. ' ' → logprob: -5.0088114738464355
    7. '0' → logprob: -5.1338114738464355
    8. ' [' → logprob: -6.3838114738464355
    9. ' "' → logprob: -7.3838114738464355
    10. '32' → logprob: -7.5088114738464355

Token 9: '000' (ID: 1302)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -2.028533458709717
    2. 'apple' → logprob: -2.028533458709717
    3. ''' → logprob: -2.153533458709717
    4. '1' → logprob: -2.778533458709717
    5. '"' → logprob: -3.153533458709717
    6. '100' → logprob: -3.403533458709717
    7. '{' → logprob: -3.653533458709717
    8. '#' → logprob: -3.716033458709717
    9. 'alpha' → logprob: -3.716033458709717
    10. 'code' → logprob: -3.778533458709717

Token 10: '00' (ID: 504)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002041890751570463
    2. ''' → logprob: -6.252041816711426
    3. '1' → logprob: -9.127041816711426
    4. ''}' → logprob: -13.377041816711426
    5. ''''' → logprob: -13.627041816711426
    6. '')' → logprob: -14.377041816711426
    7. '00' → logprob: -15.252041816711426
    8. '',' → logprob: -15.502041816711426
    9. ''},' → logprob: -15.502041816711426
    10. '```' → logprob: -15.877041816711426

Token 11: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.27378109097480774
    2. ''' → logprob: -2.1487810611724854
    3. '0' → logprob: -2.1487810611724854
    4. '',
' → logprob: -5.5237812995910645
    5. ''}' → logprob: -7.0237812995910645
    6. '000' → logprob: -7.5237812995910645
    7. ''},' → logprob: -7.7737812995910645
    8. '1' → logprob: -8.398780822753906
    9. '','' → logprob: -9.898780822753906
    10. '',

' → logprob: -10.398780822753906

Token 12: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.614880383014679
    2. '   ' → logprob: -0.864880383014679
    3. ''A' → logprob: -3.364880323410034
    4. ' ' → logprob: -6.864880561828613
    5. '  ' → logprob: -7.864880561828613
    6. '    ' → logprob: -8.364880561828613
    7. ''\' → logprob: -8.614880561828613
    8. '`' → logprob: -8.614880561828613
    9. ''a' → logprob: -8.739880561828613
    10. '',' → logprob: -8.739880561828613

Token 13: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.006362078245729208
    2. ''' → logprob: -5.756361961364746
    3. 'A' → logprob: -6.006361961364746
    4. ' B' → logprob: -8.006361961364746
    5. '000' → logprob: -9.131361961364746
    6. ' ' → logprob: -9.256361961364746
    7. '0' → logprob: -9.631361961364746
    8. ''A' → logprob: -9.881361961364746
    9. ' '' → logprob: -11.131361961364746
    10. 'a' → logprob: -11.256361961364746

Token 14: '':' (ID: 2337)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5246302485466003
    2. '':' → logprob: -0.8996302485466003
    3. '':'' → logprob: -7.149630069732666
    4. ':' → logprob: -7.899630069732666
    5. '''' → logprob: -9.649630546569824
    6. '```' → logprob: -9.649630546569824
    7. ''''' → logprob: -9.774630546569824
    8. ''A' → logprob: -10.024630546569824
    9. '000' → logprob: -10.524630546569824
    10. '':''' → logprob: -10.899630546569824

Token 15: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -7.946405094116926e-05
    2. ' '' → logprob: -9.625079154968262
    3. '"' → logprob: -12.000079154968262
    4. ' ' → logprob: -12.625079154968262
    5. '`' → logprob: -13.000079154968262
    6. ' ' → logprob: -14.875079154968262
    7. '000' → logprob: -14.875079154968262
    8. '```' → logprob: -15.750079154968262
    9. '<' → logprob: -15.875079154968262
    10. '​' → logprob: -16.375080108642578

Token 16: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.00011009939044015482
    2. '001' → logprob: -9.500109672546387
    3. ''' → logprob: -11.125109672546387
    4. '111' → logprob: -11.625109672546387
    5. ' ' → logprob: -11.875109672546387
    6. '010' → logprob: -12.875109672546387
    7. '```' → logprob: -14.500109672546387
    8. '100' → logprob: -14.625109672546387
    9. '011' → logprob: -14.750109672546387
    10. '110' → logprob: -15.250109672546387

Token 17: '01' (ID: 2290)
  Prédit: '01'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: -0.3133167624473572
    2. '00' → logprob: -1.313316822052002
    3. '0' → logprob: -10.313316345214844
    4. '10' → logprob: -11.938316345214844
    5. '000' → logprob: -12.188316345214844
    6. '001' → logprob: -12.313316345214844
    7. '1' → logprob: -12.438316345214844
    8. '11' → logprob: -13.938316345214844
    9. ''' → logprob: -15.063316345214844
    10. 'A' → logprob: -15.188316345214844

Token 18: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.06347501277923584
    2. ''' → logprob: -2.8134751319885254
    3. '0' → logprob: -7.063475131988525
    4. '',
' → logprob: -8.063474655151367
    5. '','' → logprob: -8.688474655151367
    6. ''}' → logprob: -8.938474655151367
    7. '```' → logprob: -11.938474655151367
    8. '',
' → logprob: -12.188474655151367
    9. '}' → logprob: -12.438474655151367
    10. '',

' → logprob: -12.688474655151367

Token 19: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10818245261907578
    2. '   ' → logprob: -2.358182430267334
    3. ' '' → logprob: -5.858182430267334
    4. ''A' → logprob: -6.608182430267334
    5. ''C' → logprob: -6.858182430267334
    6. ' ' → logprob: -6.983182430267334
    7. '...' → logprob: -7.358182430267334
    8. '',' → logprob: -7.983182430267334
    9. '<|end|>' → logprob: -8.233182907104492
    10. '  ' → logprob: -8.733182907104492

Token 20: 'C' (ID: 34)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.2819603979587555
    2. ''' → logprob: -1.406960368156433
    3. 'C' → logprob: -8.031960487365723
    4. ''C' → logprob: -8.156960487365723
    5. ' ' → logprob: -8.781960487365723
    6. '0' → logprob: -11.531960487365723
    7. ''A' → logprob: -11.781960487365723
    8. '`' → logprob: -12.031960487365723
    9. '```' → logprob: -12.031960487365723
    10. '001' → logprob: -12.906960487365723

Token 21: '':' (ID: 2337)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.39321717619895935
    2. '':' → logprob: -1.1432172060012817
    3. '':'' → logprob: -5.393217086791992
    4. ':' → logprob: -6.768217086791992
    5. '000' → logprob: -7.893217086791992
    6. '```' → logprob: -9.393217086791992
    7. '':''' → logprob: -10.643217086791992
    8. '''' → logprob: -10.768217086791992
    9. ''}' → logprob: -10.768217086791992
    10. ''''' → logprob: -10.893217086791992

Token 22: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0017530106706544757
    2. ' '' → logprob: -6.376752853393555
    3. ' ' → logprob: -10.751752853393555
    4. '`' → logprob: -11.376752853393555
    5. '"' → logprob: -11.751752853393555
    6. '000' → logprob: -13.001752853393555
    7. '<|end|>' → logprob: -13.001752853393555
    8. ' ' → logprob: -13.126752853393555
    9. '```' → logprob: -13.876752853393555
    10. ' ' → logprob: -15.126752853393555

Token 23: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.3485581874847412
    2. ''' → logprob: -1.2235581874847412
    3. '"' → logprob: -10.22355842590332
    4. ' ' → logprob: -10.59855842590332
    5. '0' → logprob: -10.72355842590332
    6. '001' → logprob: -11.34855842590332
    7. '`' → logprob: -11.59855842590332
    8. '```' → logprob: -12.84855842590332
    9. ' '' → logprob: -13.47355842590332
    10. ''''' → logprob: -13.72355842590332

Token 24: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0006865793839097023
    2. '1' → logprob: -7.3756866455078125
    3. '00' → logprob: -10.625686645507812
    4. '01' → logprob: -10.750686645507812
    5. '0' → logprob: -12.000686645507812
    6. '010' → logprob: -12.625686645507812
    7. ''' → logprob: -13.000686645507812
    8. '"' → logprob: -13.875686645507812
    9. '```' → logprob: -14.000686645507812
    10. '02' → logprob: -15.625686645507812

Token 25: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.010221821255981922
    2. ''' → logprob: -4.6352219581604
    3. ''}' → logprob: -8.510221481323242
    4. '',
' → logprob: -8.635221481323242
    5. '','' → logprob: -10.010221481323242
    6. '}' → logprob: -10.385221481323242
    7. ',' → logprob: -12.385221481323242
    8. '0' → logprob: -13.510221481323242
    9. '',
' → logprob: -13.760221481323242
    10. '',

' → logprob: -13.885221481323242

Token 26: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0013122594682499766
    2. '   ' → logprob: -7.751312255859375
    3. ' ' → logprob: -7.876312255859375
    4. '`' → logprob: -9.001312255859375
    5. '',' → logprob: -9.001312255859375
    6. ' '' → logprob: -9.251312255859375
    7. ',' → logprob: -9.626312255859375
    8. ' ,' → logprob: -10.751312255859375
    9. '  ' → logprob: -11.001312255859375
    10. '```' → logprob: -11.501312255859375

Token 27: 'D' (ID: 35)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.6078615784645081
    2. ''' → logprob: -1.1078615188598633
    3. 'D' → logprob: -2.7328615188598633
    4. '0' → logprob: -2.9828615188598633
    5. ''D' → logprob: -4.982861518859863
    6. ' ' → logprob: -6.107861518859863
    7. '00' → logprob: -8.482861518859863
    8. ''''' → logprob: -9.607861518859863
    9. '001' → logprob: -9.857861518859863
    10. ' '' → logprob: -10.232861518859863

Token 28: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.007901167497038841
    2. ''' → logprob: -5.132901191711426
    3. ':' → logprob: -6.257901191711426
    4. '':'' → logprob: -10.507901191711426
    5. '```' → logprob: -11.882901191711426
    6. ' ':' → logprob: -12.007901191711426
    7. ' :' → logprob: -12.507901191711426
    8. '":' → logprob: -13.007901191711426
    9. '',' → logprob: -13.632901191711426
    10. '''' → logprob: -13.757901191711426

Token 29: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00018196819291915745
    2. ' '' → logprob: -9.000182151794434
    3. '`' → logprob: -9.875182151794434
    4. '"' → logprob: -13.000182151794434
    5. ' ' → logprob: -13.500182151794434
    6. '```' → logprob: -13.750182151794434
    7. ''s' → logprob: -14.875182151794434
    8. '000' → logprob: -14.875182151794434
    9. '<|end|>' → logprob: -15.375182151794434
    10. ' ' → logprob: -15.500182151794434

Token 30: '000' (ID: 1302)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6939234137535095
    2. '000' → logprob: -0.6939234137535095
    3. '001' → logprob: -7.818923473358154
    4. '"' → logprob: -7.943923473358154
    5. '`' → logprob: -11.068922996520996
    6. '```' → logprob: -13.193922996520996
    7. ''''' → logprob: -14.193922996520996
    8. '0' → logprob: -15.693922996520996
    9. '010' → logprob: -15.818922996520996
    10. ' '' → logprob: -16.068923950195312

Token 31: '11' (ID: 994)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07987672835588455
    2. '11' → logprob: -2.829876661300659
    3. '1' → logprob: -4.704876899719238
    4. '00' → logprob: -5.579876899719238
    5. ''' → logprob: -5.954876899719238
    6. '01' → logprob: -6.079876899719238
    7. '"' → logprob: -10.579876899719238
    8. '011' → logprob: -12.079876899719238
    9. '10' → logprob: -12.204876899719238
    10. '```' → logprob: -12.954876899719238

Token 32: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0014103548601269722
    2. ''' → logprob: -7.001410484313965
    3. ''}' → logprob: -7.876410484313965
    4. '}' → logprob: -9.876410484313965
    5. '',
' → logprob: -10.126410484313965
    6. '','' → logprob: -10.876410484313965
    7. ',' → logprob: -12.001410484313965
    8. '',
' → logprob: -14.626410484313965
    9. '}',' → logprob: -14.876410484313965
    10. '',

' → logprob: -15.001410484313965

Token 33: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0005007279687561095
    2. ' '' → logprob: -8.125500679016113
    3. '`' → logprob: -9.625500679016113
    4. '   ' → logprob: -9.750500679016113
    5. ' ' → logprob: -10.750500679016113
    6. ''E' → logprob: -10.750500679016113
    7. '```' → logprob: -11.375500679016113
    8. '"' → logprob: -12.000500679016113
    9. '',' → logprob: -12.125500679016113
    10. ''e' → logprob: -12.375500679016113

Token 34: 'E' (ID: 36)
  Prédit: ''E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''E' → logprob: -0.5761429667472839
    2. ''' → logprob: -0.8261429667472839
    3. 'E' → logprob: -8.826143264770508
    4. ' '' → logprob: -10.326143264770508
    5. ''''' → logprob: -12.326143264770508
    6. '`' → logprob: -12.451143264770508
    7. ''É' → logprob: -12.451143264770508
    8. '’E' → logprob: -12.951143264770508
    9. ''e' → logprob: -12.951143264770508
    10. '```' → logprob: -13.076143264770508

Token 35: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.013850008137524128
    2. ''' → logprob: -4.388850212097168
    3. ':' → logprob: -6.638850212097168
    4. '':'' → logprob: -11.013850212097168
    5. '":' → logprob: -12.388850212097168
    6. '```' → logprob: -12.888850212097168
    7. ' ':' → logprob: -13.138850212097168
    8. ' :' → logprob: -13.638850212097168
    9. ''value' → logprob: -14.138850212097168
    10. ''s' → logprob: -14.513850212097168

Token 36: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00020854694594163448
    2. ' '' → logprob: -8.500208854675293
    3. '`' → logprob: -12.875208854675293
    4. '"' → logprob: -13.625208854675293
    5. ' ' → logprob: -14.625208854675293
    6. ''s' → logprob: -15.625208854675293
    7. '<|end|>' → logprob: -15.875208854675293
    8. ' ' → logprob: -16.250207901000977
    9. '...' → logprob: -17.500207901000977
    10. ''value' → logprob: -17.625207901000977

Token 37: '001' (ID: 7659)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -2.4272752852994017e-05
    2. '001' → logprob: -10.75002384185791
    3. '`' → logprob: -14.12502384185791
    4. '"' → logprob: -14.75002384185791
    5. '010' → logprob: -14.75002384185791
    6. ' '' → logprob: -14.75002384185791
    7. '000' → logprob: -15.12502384185791
    8. '100' → logprob: -16.125024795532227
    9. ''''' → logprob: -16.250024795532227
    10. '0' → logprob: -16.375024795532227

Token 38: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.00030697984038852155
    2. '0' → logprob: -8.125307083129883
    3. ''' → logprob: -11.625307083129883
    4. '000' → logprob: -13.625307083129883
    5. '"' → logprob: -15.250307083129883
    6. '01' → logprob: -15.375307083129883
    7. '10' → logprob: -15.375307083129883
    8. '```' → logprob: -16.875307083129883
    9. '`' → logprob: -17.250307083129883
    10. '1' → logprob: -17.250307083129883

Token 39: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0027812200132757425
    2. ''' → logprob: -6.002781391143799
    3. ''}' → logprob: -8.50278091430664
    4. '',
' → logprob: -9.62778091430664
    5. '}' → logprob: -10.75278091430664
    6. '','' → logprob: -11.25278091430664
    7. ',' → logprob: -13.87778091430664
    8. '",' → logprob: -15.37778091430664
    9. ','' → logprob: -15.37778091430664
    10. '',

' → logprob: -15.50278091430664

Token 40: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0029545240104198456
    2. ' '' → logprob: -6.502954483032227
    3. '   ' → logprob: -7.002954483032227
    4. '}' → logprob: -8.127954483032227
    5. '',' → logprob: -8.877954483032227
    6. ''}' → logprob: -10.252954483032227
    7. ' ' → logprob: -11.252954483032227
    8. ',' → logprob: -11.252954483032227
    9. ''f' → logprob: -11.502954483032227
    10. ''A' → logprob: -11.627954483032227

Token 41: 'F' (ID: 37)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0001625379954930395
    2. ''E' → logprob: -9.375162124633789
    3. ' '' → logprob: -9.750162124633789
    4. 'F' → logprob: -12.250162124633789
    5. ''A' → logprob: -12.500162124633789
    6. ''D' → logprob: -13.000162124633789
    7. ''''' → logprob: -13.250162124633789
    8. '`' → logprob: -13.875162124633789
    9. ' ' → logprob: -14.000162124633789
    10. '0' → logprob: -14.125162124633789

Token 42: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.10028398036956787
    2. ''' → logprob: -2.3502840995788574
    3. ':' → logprob: -10.2252836227417
    4. '':'' → logprob: -10.4752836227417
    5. ' ':' → logprob: -12.8502836227417
    6. '''' → logprob: -13.2252836227417
    7. '```' → logprob: -13.2252836227417
    8. '')' → logprob: -13.9752836227417
    9. ''''' → logprob: -14.2252836227417
    10. ''>' → logprob: -14.6002836227417

Token 43: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0004973902832716703
    2. ' '' → logprob: -7.750497341156006
    3. '`' → logprob: -10.000497817993164
    4. '"' → logprob: -11.625497817993164
    5. ' ' → logprob: -11.875497817993164
    6. ' ' → logprob: -13.250497817993164
    7. '```' → logprob: -13.875497817993164
    8. '<|end|>' → logprob: -14.000497817993164
    9. ' `' → logprob: -15.000497817993164
    10. '<' → logprob: -15.500497817993164

Token 44: '001' (ID: 7659)
  Prédit: '001'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '001' → logprob: -5.955703818472102e-05
    2. ''' → logprob: -9.750059127807617
    3. ' ' → logprob: -14.875059127807617
    4. '"' → logprob: -15.375059127807617
    5. '000' → logprob: -15.375059127807617
    6. '```' → logprob: -15.500059127807617
    7. '`' → logprob: -16.250059127807617
    8. '0' → logprob: -17.625059127807617
    9. ''''' → logprob: -19.000059127807617
    10. '' → logprob: -19.000059127807617

Token 45: '01' (ID: 2290)
  Prédit: '01'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: -0.0016622049733996391
    2. '0' → logprob: -6.501662254333496
    3. '00' → logprob: -8.751662254333496
    4. '10' → logprob: -14.376662254333496
    5. '05' → logprob: -14.376662254333496
    6. '```' → logprob: -15.876662254333496
    7. '010' → logprob: -16.37666130065918
    8. '1' → logprob: -17.00166130065918
    9. '001' → logprob: -17.25166130065918
    10. ''' → logprob: -18.12666130065918

Token 46: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.002230309881269932
    2. ''' → logprob: -6.127230167388916
    3. '','' → logprob: -11.127230644226074
    4. ',' → logprob: -11.627230644226074
    5. '',
' → logprob: -11.627230644226074
    6. ''}' → logprob: -11.752230644226074
    7. '}' → logprob: -12.502230644226074
    8. ','' → logprob: -15.252230644226074
    9. '",' → logprob: -15.502230644226074
    10. '',
' → logprob: -15.752230644226074

Token 47: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0004098195640835911
    2. ' '' → logprob: -8.750410079956055
    3. ' ' → logprob: -9.500410079956055
    4. '   ' → logprob: -10.000410079956055
    5. '}' → logprob: -10.125410079956055
    6. '`' → logprob: -10.250410079956055
    7. ',' → logprob: -11.250410079956055
    8. '',' → logprob: -11.250410079956055
    9. ' ' → logprob: -12.250410079956055
    10. ''A' → logprob: -12.250410079956055

Token 48: 'G' (ID: 38)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0001860174525063485
    2. ' '' → logprob: -8.8751859664917
    3. 'G' → logprob: -10.7501859664917
    4. ' ' → logprob: -11.1251859664917
    5. '0' → logprob: -12.5001859664917
    6. '`' → logprob: -13.2501859664917
    7. ' G' → logprob: -14.2501859664917
    8. '```' → logprob: -14.2501859664917
    9. '"' → logprob: -14.7501859664917
    10. '000' → logprob: -14.8751859664917

Token 49: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.035717178136110306
    2. ''' → logprob: -3.535717248916626
    3. ':' → logprob: -5.160717010498047
    4. '':'' → logprob: -8.910717010498047
    5. '<|end|>' → logprob: -10.785717010498047
    6. ' ':' → logprob: -11.285717010498047
    7. '```' → logprob: -11.535717010498047
    8. '":' → logprob: -11.535717010498047
    9. '',' → logprob: -12.785717010498047
    10. '='' → logprob: -13.035717010498047

Token 50: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.001533547299914062
    2. ' '' → logprob: -6.501533508300781
    3. '`' → logprob: -11.751533508300781
    4. ' ' → logprob: -11.876533508300781
    5. '<|end|>' → logprob: -12.001533508300781
    6. '"' → logprob: -12.626533508300781
    7. '001' → logprob: -13.001533508300781
    8. '```' → logprob: -13.251533508300781
    9. ' ' → logprob: -14.626533508300781
    10. '002' → logprob: -14.751533508300781

Token 51: '001' (ID: 7659)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.313411682844162
    2. '001' → logprob: -1.3134117126464844
    3. ' ' → logprob: -9.063411712646484
    4. '"' → logprob: -11.188411712646484
    5. ' '' → logprob: -12.188411712646484
    6. '0' → logprob: -12.188411712646484
    7. '000' → logprob: -12.438411712646484
    8. '`' → logprob: -12.563411712646484
    9. '```' → logprob: -13.938411712646484
    10. '00' → logprob: -14.063411712646484

Token 52: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.3676733690081164e-05
    2. '0' → logprob: -11.50002384185791
    3. '00' → logprob: -11.75002384185791
    4. '1' → logprob: -12.50002384185791
    5. '01' → logprob: -13.50002384185791
    6. '۱۰' → logprob: -16.000022888183594
    7. '```' → logprob: -16.625022888183594
    8. '100' → logprob: -16.875022888183594
    9. ''' → logprob: -16.875022888183594
    10. '"' → logprob: -17.125022888183594

Token 53: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.011100047267973423
    2. ''' → logprob: -4.511099815368652
    3. ''}' → logprob: -10.261099815368652
    4. '',
' → logprob: -11.761099815368652
    5. '}' → logprob: -12.511099815368652
    6. '','' → logprob: -12.886099815368652
    7. ',' → logprob: -13.136099815368652
    8. '",' → logprob: -15.261099815368652
    9. ' ',' → logprob: -15.511099815368652
    10. '}',' → logprob: -16.26110076904297

Token 54: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.001677079708315432
    2. ' '' → logprob: -7.0016770362854
    3. ' ' → logprob: -8.126677513122559
    4. '```' → logprob: -8.751677513122559
    5. '`' → logprob: -8.876677513122559
    6. ''H' → logprob: -10.376677513122559
    7. '<|end|>' → logprob: -10.751677513122559
    8. '   ' → logprob: -10.876677513122559
    9. '}' → logprob: -11.251677513122559
    10. '"' → logprob: -11.251677513122559

Token 55: 'H' (ID: 39)
  Prédit: '001'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '001' → logprob: -0.44967296719551086
    2. '0' → logprob: -1.5746729373931885
    3. ''' → logprob: -2.4496729373931885
    4. ' ' → logprob: -2.6996729373931885
    5. ' '' → logprob: -7.199673175811768
    6. '00' → logprob: -7.324673175811768
    7. '000' → logprob: -9.69967269897461
    8. '```' → logprob: -11.69967269897461
    9. ''H' → logprob: -11.82467269897461
    10. '  ' → logprob: -11.94967269897461

Token 56: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.005263525992631912
    2. ''' → logprob: -5.255263328552246
    3. '':'' → logprob: -10.755263328552246
    4. ':' → logprob: -13.005263328552246
    5. '```' → logprob: -13.380263328552246
    6. '<|end|>' → logprob: -13.630263328552246
    7. ''}' → logprob: -14.130263328552246
    8. '":' → logprob: -14.130263328552246
    9. ''):' → logprob: -15.130263328552246
    10. ' ':' → logprob: -15.255263328552246

Token 57: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.048648685216903687
    2. ' '' → logprob: -3.0486485958099365
    3. '<|end|>' → logprob: -10.048648834228516
    4. ' ' → logprob: -11.673648834228516
    5. '`' → logprob: -12.923648834228516
    6. '"' → logprob: -13.173648834228516
    7. ' `'' → logprob: -13.548648834228516
    8. '<|end|>' → logprob: -14.548648834228516
    9. '```' → logprob: -15.048648834228516
    10. ''s' → logprob: -15.048648834228516

Token 58: '001' (ID: 7659)
  Prédit: '001'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '001' → logprob: -0.2521275579929352
    2. ''' → logprob: -1.5021275281906128
    3. ' ' → logprob: -8.627127647399902
    4. ' '' → logprob: -11.752127647399902
    5. '"' → logprob: -12.127127647399902
    6. '`' → logprob: -13.377127647399902
    7. '```' → logprob: -13.752127647399902
    8. '000' → logprob: -13.877127647399902
    9. '0' → logprob: -14.002127647399902
    10. '00' → logprob: -15.002127647399902

Token 59: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.141456738114357
    2. '00' → logprob: -2.3914568424224854
    3. '1' → logprob: -3.5164568424224854
    4. '01' → logprob: -5.016456604003906
    5. '10' → logprob: -5.516456604003906
    6. '0' → logprob: -10.391456604003906
    7. '```' → logprob: -11.266456604003906
    8. '000' → logprob: -12.266456604003906
    9. '``' → logprob: -12.266456604003906
    10. '07' → logprob: -13.703956604003906

Token 60: '',
' (ID: 1214)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.010036783292889595
    2. ''' → logprob: -4.635036945343018
    3. ''}' → logprob: -8.51003646850586
    4. '}' → logprob: -9.76003646850586
    5. ',' → logprob: -11.76003646850586
    6. '',
' → logprob: -11.76003646850586
    7. '','' → logprob: -12.38503646850586
    8. '",' → logprob: -15.13503646850586
    9. '}',' → logprob: -15.38503646850586
    10. ' ',' → logprob: -15.51003646850586

Token 61: '   ' (ID: 271)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.004767122678458691
    2. '   ' → logprob: -6.129766941070557
    3. ''I' → logprob: -6.254766941070557
    4. 'I' → logprob: -8.879767417907715
    5. '`' → logprob: -9.004767417907715
    6. '```' → logprob: -9.129767417907715
    7. ' ' → logprob: -9.254767417907715
    8. '',' → logprob: -9.879767417907715
    9. '  ' → logprob: -10.129767417907715
    10. ''i' → logprob: -10.754767417907715

Token 62: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.040274184197187424
    2. ''I' → logprob: -3.415274143218994
    3. ' '' → logprob: -5.290274143218994
    4. '   ' → logprob: -7.290274143218994
    5. ''i' → logprob: -8.665274620056152
    6. '`' → logprob: -8.790274620056152
    7. '```' → logprob: -9.040274620056152
    8. 'I' → logprob: -9.040274620056152
    9. '',' → logprob: -9.290274620056152
    10. ' ' → logprob: -9.665274620056152

Token 63: 'I' (ID: 40)
  Prédit: 'I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.014097217470407486
    2. ''I' → logprob: -4.389097213745117
    3. ''' → logprob: -7.014097213745117
    4. ' I' → logprob: -7.514097213745117
    5. ' ' → logprob: -9.139097213745117
    6. ' '' → logprob: -10.639097213745117
    7. '`' → logprob: -12.639097213745117
    8. ' ')' → logprob: -13.264097213745117
    9. ''i' → logprob: -13.514097213745117
    10. '’I' → logprob: -14.264097213745117

Token 64: '':' (ID: 2337)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5763497352600098
    2. '':' → logprob: -0.8263497352600098
    3. ' ':' → logprob: -8.451349258422852
    4. ':' → logprob: -8.826349258422852
    5. '':'' → logprob: -10.326349258422852
    6. ' :' → logprob: -12.576349258422852
    7. ' '' → logprob: -13.076349258422852
    8. ''>' → logprob: -13.451349258422852
    9. '<|end|>' → logprob: -13.451349258422852
    10. ''s' → logprob: -13.576349258422852

Token 65: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0005208624061197042
    2. ' '' → logprob: -7.625520706176758
    3. ' ' → logprob: -11.125520706176758
    4. '`' → logprob: -11.875520706176758
    5. '"' → logprob: -12.000520706176758
    6. ' ' → logprob: -13.750520706176758
    7. '001' → logprob: -14.000520706176758
    8. 'space' → logprob: -14.125520706176758
    9. '002' → logprob: -14.500520706176758
    10. ''''' → logprob: -15.125520706176758

Token 66: '010' (ID: 13522)
  Prédit: '010'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '010' → logprob: -0.006080718245357275
    2. ''' → logprob: -5.131080627441406
    3. '"' → logprob: -9.006080627441406
    4. '`' → logprob: -11.756080627441406
    5. '0' → logprob: -12.006080627441406
    6. ' ' → logprob: -12.631080627441406
    7. '```' → logprob: -13.006080627441406
    8. '01' → logprob: -13.131080627441406
    9. '002' → logprob: -13.506080627441406
    10. '001' → logprob: -13.506080627441406

Token 67: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -1.4498052223643754e-05
    2. '000' → logprob: -11.625014305114746
    3. '0' → logprob: -12.375014305114746
    4. ''' → logprob: -14.125014305114746
    5. '```' → logprob: -15.125014305114746
    6. '01' → logprob: -15.625014305114746
    7. ' ' → logprob: -16.750015258789062
    8. ' ' → logprob: -17.000015258789062
    9. '  ' → logprob: -18.000015258789062
    10. ''''' → logprob: -18.125015258789062

Token 68: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.313309907913208
    2. ''' → logprob: -1.313309907913208
    3. '',
' → logprob: -10.813309669494629
    4. ''}' → logprob: -10.938309669494629
    5. '','' → logprob: -12.188309669494629
    6. '}' → logprob: -13.813309669494629
    7. ',' → logprob: -13.938309669494629
    8. ' ',' → logprob: -14.188309669494629
    9. '",' → logprob: -14.688309669494629
    10. '',

' → logprob: -14.688309669494629

Token 69: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0012824952136725187
    2. '',' → logprob: -7.126282691955566
    3. ' '' → logprob: -8.126282691955566
    4. ',' → logprob: -9.501282691955566
    5. ' ' → logprob: -9.751282691955566
    6. ' ,' → logprob: -10.876282691955566
    7. '   ' → logprob: -11.376282691955566
    8. '}' → logprob: -12.126282691955566
    9. ''A' → logprob: -13.001282691955566
    10. ' }' → logprob: -13.376282691955566

Token 70: 'J' (ID: 41)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.25209659337997437
    2. '010' → logprob: -1.5020966529846191
    3. 'J' → logprob: -8.877096176147461
    4. '011' → logprob: -11.377096176147461
    5. '"' → logprob: -12.877096176147461
    6. '0' → logprob: -12.877096176147461
    7. ' ' → logprob: -12.877096176147461
    8. '```' → logprob: -13.002096176147461
    9. ' '' → logprob: -13.252096176147461
    10. '`' → logprob: -13.502096176147461

Token 71: '':' (ID: 2337)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.01465160958468914
    2. '':' → logprob: -4.389651775360107
    3. '<|end|>' → logprob: -6.514651775360107
    4. ' '' → logprob: -8.88965129852295
    5. ':' → logprob: -8.88965129852295
    6. ' ':' → logprob: -9.51465129852295
    7. '':'' → logprob: -9.63965129852295
    8. ' ' → logprob: -10.01465129852295
    9. '```' → logprob: -10.01465129852295
    10. '<|end|>' → logprob: -10.51465129852295

Token 72: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.004339918028563261
    2. ' ' → logprob: -5.504339694976807
    3. '010' → logprob: -9.004340171813965
    4. '"' → logprob: -9.379340171813965
    5. ' '' → logprob: -10.504340171813965
    6. '`' → logprob: -11.254340171813965
    7. ' ' → logprob: -12.004340171813965
    8. '```' → logprob: -13.004340171813965
    9. ' ' → logprob: -14.379340171813965
    10. '0' → logprob: -14.504340171813965

Token 73: '010' (ID: 13522)
  Prédit: '010'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '010' → logprob: -4.584861744660884e-05
    2. ''' → logprob: -10.125045776367188
    3. ' ' → logprob: -12.375045776367188
    4. '```' → logprob: -14.500045776367188
    5. '0' → logprob: -15.000045776367188
    6. '`' → logprob: -15.250045776367188
    7. '"' → logprob: -15.625045776367188
    8. '001' → logprob: -16.250045776367188
    9. '000' → logprob: -16.750045776367188
    10. '01' → logprob: -17.250045776367188

Token 74: '01' (ID: 2290)
  Prédit: '01'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: -0.018192317336797714
    2. '00' → logprob: -4.018192291259766
    3. '0' → logprob: -10.518192291259766
    4. '010' → logprob: -12.268192291259766
    5. '000' → logprob: -13.143192291259766
    6. '10' → logprob: -13.268192291259766
    7. '```' → logprob: -13.518192291259766
    8. ''' → logprob: -13.768192291259766
    9. '   ' → logprob: -14.393192291259766
    10. '001' → logprob: -14.643192291259766

Token 75: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.2520121932029724
    2. ''' → logprob: -1.5020122528076172
    3. '',
' → logprob: -10.502012252807617
    4. ''}' → logprob: -10.627012252807617
    5. '','' → logprob: -10.752012252807617
    6. ',' → logprob: -12.502012252807617
    7. '}' → logprob: -13.377012252807617
    8. ''s' → logprob: -14.252012252807617
    9. ' ',' → logprob: -14.502012252807617
    10. '',
' → logprob: -14.627012252807617

Token 76: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0005156210972927511
    2. ' ' → logprob: -8.000515937805176
    3. ' '' → logprob: -8.875515937805176
    4. '`' → logprob: -11.625515937805176
    5. ''A' → logprob: -11.625515937805176
    6. '<|end|>' → logprob: -12.500515937805176
    7. '```' → logprob: -12.625515937805176
    8. '"' → logprob: -12.750515937805176
    9. ' ' → logprob: -12.875515937805176
    10. '...' → logprob: -13.375515937805176

Token 77: 'K' (ID: 42)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.595293402671814
    2. '010' → logprob: -0.970293402671814
    3. ''' → logprob: -2.8452935218811035
    4. ' ' → logprob: -4.4702935218811035
    5. ' '' → logprob: -10.595293045043945
    6. '01' → logprob: -11.095293045043945
    7. '"' → logprob: -12.095293045043945
    8. '```' → logprob: -12.345293045043945
    9. '`' → logprob: -12.845293045043945
    10. ''A' → logprob: -12.970293045043945

Token 78: '':' (ID: 2337)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0010395983699709177
    2. '':' → logprob: -7.001039505004883
    3. ':' → logprob: -9.501039505004883
    4. ''s' → logprob: -10.876039505004883
    5. ' '' → logprob: -11.501039505004883
    6. '':'' → logprob: -11.751039505004883
    7. ' ' → logprob: -12.376039505004883
    8. ' ':' → logprob: -12.876039505004883
    9. '`' → logprob: -13.376039505004883
    10. '```' → logprob: -13.376039505004883

Token 79: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -4.4656579120783135e-05
    2. ' ' → logprob: -11.125044822692871
    3. '"' → logprob: -11.375044822692871
    4. ' '' → logprob: -11.500044822692871
    5. '`' → logprob: -12.125044822692871
    6. ' ' → logprob: -15.000044822692871
    7. '<' → logprob: -15.125044822692871
    8. ' ' → logprob: -15.125044822692871
    9. 'space' → logprob: -15.125044822692871
    10. '<|end|>' → logprob: -15.250044822692871

Token 80: '010' (ID: 13522)
  Prédit: '010'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '010' → logprob: -0.014798901975154877
    2. ''' → logprob: -4.264799118041992
    3. ' ' → logprob: -7.889799118041992
    4. '0' → logprob: -8.389799118041992
    5. '"' → logprob: -10.639799118041992
    6. '01' → logprob: -12.264799118041992
    7. '```' → logprob: -13.264799118041992
    8. '`' → logprob: -14.139799118041992
    9. ' '' → logprob: -14.139799118041992
    10. '   ' → logprob: -14.639799118041992

Token 81: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.006894154939800501
    2. '1' → logprob: -5.006894111633301
    3. '0' → logprob: -9.8818941116333
    4. '```' → logprob: -10.1318941116333
    5. ''' → logprob: -10.5068941116333
    6. '010' → logprob: -10.6318941116333
    7. '00' → logprob: -11.3818941116333
    8. ')' → logprob: -12.2568941116333
    9. '01' → logprob: -12.3818941116333
    10. ' ' → logprob: -13.1318941116333

Token 82: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.02977895736694336
    2. ''' → logprob: -3.5297789573669434
    3. '',
' → logprob: -11.404779434204102
    4. '','' → logprob: -12.154779434204102
    5. ',' → logprob: -12.279779434204102
    6. ''}' → logprob: -12.404779434204102
    7. ' ',' → logprob: -13.779779434204102
    8. '}' → logprob: -14.404779434204102
    9. '",' → logprob: -14.779779434204102
    10. ''s' → logprob: -15.404779434204102

Token 83: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -7.465036105713807e-06
    2. ' '' → logprob: -12.625007629394531
    3. '`' → logprob: -13.875007629394531
    4. '"' → logprob: -14.000007629394531
    5. '```' → logprob: -14.000007629394531
    6. ''A' → logprob: -14.375007629394531
    7. ' ' → logprob: -14.625007629394531
    8. ' ' → logprob: -16.25000762939453
    9. ''O' → logprob: -16.50000762939453
    10. ''N' → logprob: -17.25000762939453

Token 84: 'L' (ID: 43)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.09166131913661957
    2. ''L' → logprob: -2.716661214828491
    3. '010' → logprob: -4.21666145324707
    4. 'L' → logprob: -5.21666145324707
    5. '0' → logprob: -7.09166145324707
    6. ''A' → logprob: -8.09166145324707
    7. ' ' → logprob: -9.96666145324707
    8. ''l' → logprob: -10.71666145324707
    9. ' '' → logprob: -10.84166145324707
    10. ''O' → logprob: -11.09166145324707

Token 85: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.4365881085395813
    2. ''' → logprob: -1.0615880489349365
    3. ':' → logprob: -5.186588287353516
    4. '':'' → logprob: -6.436588287353516
    5. '<|end|>' → logprob: -8.436588287353516
    6. ' :' → logprob: -9.061588287353516
    7. ' ':' → logprob: -9.436588287353516
    8. ' '' → logprob: -9.561588287353516
    9. ' =' → logprob: -10.186588287353516
    10. '='' → logprob: -10.311588287353516

Token 86: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -6.265633419388905e-05
    2. ' ' → logprob: -10.625062942504883
    3. ' '' → logprob: -10.625062942504883
    4. '010' → logprob: -11.625062942504883
    5. '"' → logprob: -12.750062942504883
    6. '`' → logprob: -14.625062942504883
    7. ''A' → logprob: -14.625062942504883
    8. '```' → logprob: -15.500062942504883
    9. '<|end|>' → logprob: -15.500062942504883
    10. '012' → logprob: -15.750062942504883

Token 87: '010' (ID: 13522)
  Prédit: '010'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '010' → logprob: -3.786196975852363e-05
    2. '0' → logprob: -10.250038146972656
    3. '011' → logprob: -13.625038146972656
    4. '01' → logprob: -14.000038146972656
    5. ''' → logprob: -15.250038146972656
    6. '```' → logprob: -16.750038146972656
    7. '001' → logprob: -17.250038146972656
    8. ' ' → logprob: -17.625038146972656
    9. '"' → logprob: -18.250038146972656
    10. '000' → logprob: -18.625038146972656

Token 88: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.004716822411864996
    2. '1' → logprob: -5.379716873168945
    3. '0' → logprob: -9.504716873168945
    4. '00' → logprob: -12.004716873168945
    5. '```' → logprob: -12.504716873168945
    6. '01' → logprob: -12.629716873168945
    7. ''' → logprob: -13.629716873168945
    8. '`' → logprob: -13.754716873168945
    9. '``' → logprob: -13.879716873168945
    10. '
' → logprob: -14.129716873168945

Token 89: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.005943018011748791
    2. ''' → logprob: -5.1309428215026855
    3. '',
' → logprob: -12.130943298339844
    4. '','' → logprob: -12.255943298339844
    5. ''}' → logprob: -13.130943298339844
    6. ' ',' → logprob: -14.380943298339844
    7. ',' → logprob: -14.505943298339844
    8. '',

' → logprob: -15.130943298339844
    9. ''s' → logprob: -15.505943298339844
    10. '",' → logprob: -15.630943298339844

Token 90: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.4498052223643754e-05
    2. '`' → logprob: -12.625014305114746
    3. ''M' → logprob: -12.625014305114746
    4. ' ' → logprob: -13.000014305114746
    5. ''A' → logprob: -13.375014305114746
    6. '"' → logprob: -13.375014305114746
    7. '```' → logprob: -14.500014305114746
    8. ''S' → logprob: -15.000014305114746
    9. ' '' → logprob: -15.250014305114746
    10. ''m' → logprob: -15.625014305114746

Token 91: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.01422203704714775
    2. ''M' → logprob: -4.264222145080566
    3. ''' → logprob: -10.139222145080566
    4. ' M' → logprob: -11.014222145080566
    5. ' '' → logprob: -14.014222145080566
    6. ' ' → logprob: -14.389222145080566
    7. '	M' → logprob: -15.264222145080566
    8. '')' → logprob: -15.639222145080566
    9. '`' → logprob: -15.889222145080566
    10. '```' → logprob: -16.01422119140625

Token 92: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.08103299140930176
    2. ''' → logprob: -2.5810329914093018
    3. ':' → logprob: -6.581032752990723
    4. '':'' → logprob: -7.581032752990723
    5. '<|end|>' → logprob: -9.206032752990723
    6. ''A' → logprob: -10.081032752990723
    7. '```' → logprob: -10.081032752990723
    8. ''>' → logprob: -10.956032752990723
    9. ' ':' → logprob: -11.831032752990723
    10. '":' → logprob: -12.081032752990723

Token 93: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00040910433745011687
    2. ' '' → logprob: -8.250409126281738
    3. ' ' → logprob: -8.875409126281738
    4. '"' → logprob: -12.250409126281738
    5. '`' → logprob: -13.750409126281738
    6. '<|end|>' → logprob: -14.125409126281738
    7. '010' → logprob: -14.750409126281738
    8. '```' → logprob: -15.625409126281738
    9. '011' → logprob: -16.000408172607422
    10. '0' → logprob: -16.375408172607422

Token 94: '011' (ID: 17342)
  Prédit: '011'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '011' → logprob: -0.00018911674851551652
    2. ''' → logprob: -8.625188827514648
    3. '```' → logprob: -11.875188827514648
    4. '"' → logprob: -13.875188827514648
    5. '000' → logprob: -14.375188827514648
    6. '0' → logprob: -15.000188827514648
    7. '001' → logprob: -15.375188827514648
    8. '``' → logprob: -16.12518882751465
    9. '`' → logprob: -16.50018882751465
    10. '   ' → logprob: -16.75018882751465

Token 95: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.008616461418569088
    2. '0' → logprob: -4.7586164474487305
    3. '```' → logprob: -14.13361644744873
    4. '000' → logprob: -14.50861644744873
    5. '01' → logprob: -15.13361644744873
    6. ''' → logprob: -15.75861644744873
    7. ' ' → logprob: -15.88361644744873
    8. '1' → logprob: -16.758617401123047
    9. '  ' → logprob: -16.758617401123047
    10. '۰۰' → logprob: -17.258617401123047

Token 96: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.20157179236412048
    2. ''' → logprob: -1.7015718221664429
    3. ',' → logprob: -9.326571464538574
    4. '',
' → logprob: -10.076571464538574
    5. '','' → logprob: -11.951571464538574
    6. ''A' → logprob: -11.951571464538574
    7. ''}' → logprob: -12.326571464538574
    8. '}' → logprob: -13.201571464538574
    9. ' ',' → logprob: -13.701571464538574
    10. ''S' → logprob: -14.326571464538574

Token 97: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0002489423204679042
    2. ''N' → logprob: -9.500248908996582
    3. ' '' → logprob: -9.625248908996582
    4. ' ' → logprob: -10.125248908996582
    5. '`' → logprob: -10.375248908996582
    6. '```' → logprob: -11.500248908996582
    7. '<|end|>' → logprob: -11.500248908996582
    8. ' ' → logprob: -12.250248908996582
    9. '"' → logprob: -13.000248908996582
    10. ''A' → logprob: -13.125248908996582

Token 98: 'N' (ID: 45)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.016587916761636734
    2. ''N' → logprob: -4.141587734222412
    3. ' '' → logprob: -8.51658821105957
    4. 'N' → logprob: -8.76658821105957
    5. ''M' → logprob: -9.89158821105957
    6. ' ' → logprob: -9.89158821105957
    7. '011' → logprob: -10.76658821105957
    8. ''A' → logprob: -10.89158821105957
    9. '0' → logprob: -11.01658821105957
    10. '`' → logprob: -11.26658821105957

Token 99: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.003263153601437807
    2. ':' → logprob: -5.878262996673584
    3. ''' → logprob: -8.378263473510742
    4. '':'' → logprob: -8.878263473510742
    5. '<|end|>' → logprob: -10.003263473510742
    6. '":' → logprob: -11.253263473510742
    7. '```' → logprob: -11.628263473510742
    8. '<|end|>' → logprob: -12.253263473510742
    9. ''):' → logprob: -12.878263473510742
    10. ' ':' → logprob: -13.253263473510742

Token 100: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0003704933915287256
    2. ' '' → logprob: -8.125370025634766
    3. '"' → logprob: -10.375370025634766
    4. ' ' → logprob: -10.500370025634766
    5. '`' → logprob: -12.000370025634766
    6. '011' → logprob: -12.375370025634766
    7. ''''' → logprob: -13.375370025634766
    8. '```' → logprob: -13.500370025634766
    9. '<|end|>' → logprob: -14.375370025634766
    10. ' ' → logprob: -14.375370025634766

Token 101: '011' (ID: 17342)
  Prédit: '011'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '011' → logprob: -0.20192858576774597
    2. ''' → logprob: -1.7019286155700684
    3. '"' → logprob: -7.951928615570068
    4. ' ' → logprob: -9.95192813873291
    5. '`' → logprob: -10.20192813873291
    6. '```' → logprob: -10.57692813873291
    7. ''''' → logprob: -10.70192813873291
    8. '010' → logprob: -11.70192813873291
    9. ''''
' → logprob: -12.32692813873291
    10. '0' → logprob: -12.57692813873291

Token 102: '01' (ID: 2290)
  Prédit: '01'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: -5.319370302458992e-06
    2. '0' → logprob: -12.875005722045898
    3. '00' → logprob: -13.125005722045898
    4. '```' → logprob: -15.250005722045898
    5. '010' → logprob: -15.500005722045898
    6. '10' → logprob: -15.625005722045898
    7. '
' → logprob: -17.5000057220459
    8. '' → logprob: -18.0000057220459
    9. '001' → logprob: -18.1250057220459
    10. '05' → logprob: -19.1250057220459

Token 103: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.011403471231460571
    2. ',' → logprob: -4.886403560638428
    3. ''' → logprob: -5.636403560638428
    4. '',
' → logprob: -9.01140308380127
    5. ' ,' → logprob: -10.76140308380127
    6. '','' → logprob: -11.01140308380127
    7. ',
' → logprob: -11.13640308380127
    8. '   ' → logprob: -11.63640308380127
    9. '",' → logprob: -12.01140308380127
    10. ''s' → logprob: -12.13640308380127

Token 104: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0011235489509999752
    2. ' '' → logprob: -7.376123428344727
    3. ''O' → logprob: -7.876123428344727
    4. ' ' → logprob: -9.751123428344727
    5. '`' → logprob: -11.376123428344727
    6. '```' → logprob: -11.376123428344727
    7. ''A' → logprob: -11.626123428344727
    8. ''o' → logprob: -12.501123428344727
    9. '"' → logprob: -12.626123428344727
    10. '   ' → logprob: -13.001123428344727

Token 105: 'O' (ID: 46)
  Prédit: ''O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''O' → logprob: -0.04689669981598854
    2. ''' → logprob: -3.1718966960906982
    3. 'O' → logprob: -5.921896934509277
    4. ' '' → logprob: -6.796896934509277
    5. ' O' → logprob: -10.296896934509277
    6. ''o' → logprob: -10.546896934509277
    7. '"O' → logprob: -11.921896934509277
    8. ''A' → logprob: -12.046896934509277
    9. '’O' → logprob: -12.296896934509277
    10. ' ' → logprob: -12.421896934509277

Token 106: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.01889513060450554
    2. ':' → logprob: -4.018895149230957
    3. ''' → logprob: -8.018895149230957
    4. '<|end|>' → logprob: -8.518895149230957
    5. '':'' → logprob: -9.018895149230957
    6. '":' → logprob: -10.518895149230957
    7. '='' → logprob: -11.143895149230957
    8. '=' → logprob: -11.518895149230957
    9. ' :' → logprob: -11.643895149230957
    10. ' ':' → logprob: -12.018895149230957

Token 107: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0013520221691578627
    2. ' '' → logprob: -6.626351833343506
    3. ' ' → logprob: -11.001352310180664
    4. '"' → logprob: -12.876352310180664
    5. '011' → logprob: -12.876352310180664
    6. ' ' → logprob: -13.751352310180664
    7. '`' → logprob: -13.876352310180664
    8. '010' → logprob: -14.626352310180664
    9. ''''' → logprob: -14.876352310180664
    10. '```' → logprob: -15.126352310180664

Token 108: '011' (ID: 17342)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.28335386514663696
    2. '011' → logprob: -1.4083538055419922
    3. '"' → logprob: -6.158353805541992
    4. ''''' → logprob: -10.283353805541992
    5. '`' → logprob: -10.908353805541992
    6. ' ' → logprob: -11.408353805541992
    7. '```' → logprob: -11.533353805541992
    8. '0' → logprob: -12.658353805541992
    9. ''O' → logprob: -12.783353805541992
    10. ''"' → logprob: -13.283353805541992

Token 109: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0005695947329513729
    2. '00' → logprob: -7.500569820404053
    3. '01' → logprob: -11.125569343566895
    4. '0' → logprob: -14.500569343566895
    5. ''' → logprob: -15.000569343566895
    6. '"' → logprob: -15.125569343566895
    7. '```' → logprob: -15.125569343566895
    8. '010' → logprob: -15.250569343566895
    9. '۱۰' → logprob: -16.37557029724121
    10. '100' → logprob: -16.50057029724121

Token 110: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.029829397797584534
    2. ''' → logprob: -3.529829502105713
    3. ',' → logprob: -10.779829025268555
    4. ''}' → logprob: -10.779829025268555
    5. '',
' → logprob: -10.904829025268555
    6. '}' → logprob: -12.279829025268555
    7. ' ',' → logprob: -12.779829025268555
    8. ' '' → logprob: -12.904829025268555
    9. '','' → logprob: -13.279829025268555
    10. ''s' → logprob: -13.404829025268555

Token 111: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0003168737457599491
    2. ' '' → logprob: -8.500316619873047
    3. ' ' → logprob: -10.250316619873047
    4. '```' → logprob: -10.500316619873047
    5. '   ' → logprob: -12.000316619873047
    6. '"' → logprob: -12.125316619873047
    7. ''O' → logprob: -12.250316619873047
    8. '`' → logprob: -12.250316619873047
    9. ''A' → logprob: -12.375316619873047
    10. ' ' → logprob: -12.500316619873047

Token 112: 'P' (ID: 47)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04739956185221672
    2. '011' → logprob: -3.2973995208740234
    3. ''O' → logprob: -4.797399520874023
    4. '0' → logprob: -8.047399520874023
    5. 'O' → logprob: -8.172399520874023
    6. ''A' → logprob: -9.047399520874023
    7. ''''' → logprob: -9.547399520874023
    8. 'P' → logprob: -9.547399520874023
    9. '```' → logprob: -9.797399520874023
    10. '``' → logprob: -10.047399520874023

Token 113: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.007403361611068249
    2. ''' → logprob: -5.507403373718262
    3. ':' → logprob: -5.757403373718262
    4. '':'' → logprob: -9.257403373718262
    5. ' ':' → logprob: -10.882403373718262
    6. '":' → logprob: -11.132403373718262
    7. '='' → logprob: -12.007403373718262
    8. '```' → logprob: -12.382403373718262
    9. '=' → logprob: -12.757403373718262
    10. '<|end|>' → logprob: -12.882403373718262

Token 114: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0003850325592793524
    2. ' '' → logprob: -7.87538480758667
    3. ' ' → logprob: -13.500385284423828
    4. '`' → logprob: -13.750385284423828
    5. '"' → logprob: -14.000385284423828
    6. '011' → logprob: -14.750385284423828
    7. '```' → logprob: -14.875385284423828
    8. ''''' → logprob: -15.500385284423828
    9. ''A' → logprob: -16.250385284423828
    10. ''s' → logprob: -16.375385284423828

Token 115: '011' (ID: 17342)
  Prédit: '011'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '011' → logprob: -0.12702533602714539
    2. ''' → logprob: -2.1270253658294678
    3. '"' → logprob: -9.752025604248047
    4. ''''' → logprob: -11.252025604248047
    5. '`' → logprob: -11.377025604248047
    6. '```' → logprob: -12.252025604248047
    7. '0' → logprob: -12.502025604248047
    8. ' ' → logprob: -13.127025604248047
    9. ''''
' → logprob: -13.752025604248047
    10. '``' → logprob: -14.502025604248047

Token 116: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -4.727905979962088e-05
    2. '1' → logprob: -10.87504768371582
    3. '01' → logprob: -10.87504768371582
    4. '00' → logprob: -11.87504768371582
    5. '```' → logprob: -14.12504768371582
    6. ''' → logprob: -14.62504768371582
    7. '10' → logprob: -15.00004768371582
    8. '0' → logprob: -15.12504768371582
    9. '{'' → logprob: -16.00004768371582
    10. '{"' → logprob: -16.00004768371582

Token 117: '',
' (ID: 1214)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.023432515561580658
    2. ''' → logprob: -3.773432493209839
    3. '',
' → logprob: -8.648432731628418
    4. ''}' → logprob: -12.023432731628418
    5. '}' → logprob: -13.648432731628418
    6. '',

' → logprob: -14.023432731628418
    7. '",' → logprob: -14.148432731628418
    8. ' ',' → logprob: -14.273432731628418
    9. ',' → logprob: -14.648432731628418
    10. '','' → logprob: -15.023432731628418

Token 118: '   ' (ID: 271)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0018508200300857425
    2. '   ' → logprob: -6.501850605010986
    3. ' '' → logprob: -8.626851081848145
    4. ' ' → logprob: -9.626851081848145
    5. '```' → logprob: -10.376851081848145
    6. '`' → logprob: -10.751851081848145
    7. '}' → logprob: -11.376851081848145
    8. ''q' → logprob: -11.626851081848145
    9. ' ' → logprob: -11.876851081848145
    10. ''s' → logprob: -12.501851081848145

Token 119: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -2.3199920178740285e-05
    2. '   ' → logprob: -11.500022888183594
    3. ' '' → logprob: -12.125022888183594
    4. ''q' → logprob: -13.500022888183594
    5. '}' → logprob: -13.750022888183594
    6. '```' → logprob: -13.875022888183594
    7. '`' → logprob: -14.000022888183594
    8. ''''' → logprob: -14.250022888183594
    9. '"' → logprob: -14.500022888183594
    10. ' ' → logprob: -14.625022888183594

Token 120: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.007635732181370258
    2. ''' → logprob: -4.882635593414307
    3. ' Q' → logprob: -10.757636070251465
    4. '`' → logprob: -12.882636070251465
    5. ' '' → logprob: -14.007636070251465
    6. '```' → logprob: -14.257636070251465
    7. ''q' → logprob: -14.382636070251465
    8. ' ' → logprob: -14.507636070251465
    9. '')' → logprob: -14.507636070251465
    10. '':' → logprob: -14.632636070251465

Token 121: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.07892349362373352
    2. ''' → logprob: -2.578923463821411
    3. ':' → logprob: -11.078923225402832
    4. ' ':' → logprob: -11.328923225402832
    5. '':'' → logprob: -13.453923225402832
    6. '":' → logprob: -14.203923225402832
    7. '```' → logprob: -14.328923225402832
    8. ''A' → logprob: -14.578923225402832
    9. '"' → logprob: -14.828923225402832
    10. ''>' → logprob: -14.828923225402832

Token 122: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.020555082708597183
    2. ' '' → logprob: -3.895555019378662
    3. ' ' → logprob: -11.64555549621582
    4. '"' → logprob: -13.02055549621582
    5. ' ' → logprob: -13.39555549621582
    6. ''s' → logprob: -15.64555549621582
    7. '`' → logprob: -16.39555549621582
    8. ''''' → logprob: -16.89555549621582
    9. ''A' → logprob: -16.89555549621582
    10. ' `'' → logprob: -16.89555549621582

Token 123: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0037645704578608274
    2. ''' → logprob: -5.628764629364014
    3. '010' → logprob: -9.503764152526855
    4. '1' → logprob: -10.003764152526855
    5. '```' → logprob: -10.878764152526855
    6. '`' → logprob: -11.503764152526855
    7. '   ' → logprob: -12.503764152526855
    8. ' ' → logprob: -12.753764152526855
    9. '"' → logprob: -12.878764152526855
    10. '000' → logprob: -13.003764152526855

Token 124: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.0013658313546329737
    2. '0' → logprob: -6.626365661621094
    3. ' ' → logprob: -10.876365661621094
    4. '000' → logprob: -11.751365661621094
    5. '<|end|>' → logprob: -12.001365661621094
    6. ' ' → logprob: -13.501365661621094
    7. '01' → logprob: -13.751365661621094
    8. '  ' → logprob: -14.063865661621094
    9. '```' → logprob: -14.126365661621094
    10. '۰۰' → logprob: -14.376365661621094

Token 125: '',' (ID: 787)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5760212540626526
    2. '',' → logprob: -0.8260212540626526
    3. '',
' → logprob: -10.326021194458008
    4. '':' → logprob: -10.701021194458008
    5. ''}' → logprob: -11.576021194458008
    6. '<|end|>' → logprob: -12.201021194458008
    7. ''A' → logprob: -13.326021194458008
    8. '','' → logprob: -13.576021194458008
    9. '"' → logprob: -13.826021194458008
    10. ''s' → logprob: -13.951021194458008

Token 126: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0001951961312443018
    2. ' '' → logprob: -9.125195503234863
    3. ' ' → logprob: -10.000195503234863
    4. ' ' → logprob: -10.750195503234863
    5. '"' → logprob: -11.625195503234863
    6. ''s' → logprob: -12.750195503234863
    7. '`' → logprob: -13.000195503234863
    8. 'r' → logprob: -14.000195503234863
    9. ''r' → logprob: -14.250195503234863
    10. '```' → logprob: -14.375195503234863

Token 127: 'R' (ID: 49)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0001182052365038544
    2. ' '' → logprob: -9.375118255615234
    3. ''r' → logprob: -10.875118255615234
    4. ' ' → logprob: -12.125118255615234
    5. '100' → logprob: -12.500118255615234
    6. ''''' → logprob: -12.875118255615234
    7. '"' → logprob: -14.375118255615234
    8. 'r' → logprob: -14.625118255615234
    9. '101' → logprob: -15.375118255615234
    10. '`' → logprob: -15.625118255615234

Token 128: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0026540132239460945
    2. ''' → logprob: -6.002654075622559
    3. '':'' → logprob: -9.752654075622559
    4. ':' → logprob: -10.002654075622559
    5. ' ':' → logprob: -10.252654075622559
    6. '<|end|>' → logprob: -10.752654075622559
    7. '":' → logprob: -11.627654075622559
    8. '```' → logprob: -13.127654075622559
    9. ''):' → logprob: -13.252654075622559
    10. ''=' → logprob: -14.127654075622559

Token 129: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00020926215802319348
    2. ' '' → logprob: -8.625208854675293
    3. ' ' → logprob: -11.125208854675293
    4. '"' → logprob: -11.375208854675293
    5. '<|end|>' → logprob: -13.750208854675293
    6. '100' → logprob: -13.875208854675293
    7. '101' → logprob: -15.000208854675293
    8. '`' → logprob: -15.125208854675293
    9. ' ' → logprob: -15.750208854675293
    10. '```' → logprob: -16.62520980834961

Token 130: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0001835141738411039
    2. ''' → logprob: -8.62518310546875
    3. ' ' → logprob: -12.87518310546875
    4. '1' → logprob: -14.37518310546875
    5. '"' → logprob: -15.25018310546875
    6. '`' → logprob: -15.75018310546875
    7. '```' → logprob: -16.12518310546875
    8. '')' → logprob: -16.37518310546875
    9. '10' → logprob: -16.75018310546875
    10. '000' → logprob: -16.87518310546875

Token 131: '01' (ID: 2290)
  Prédit: '01'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: -0.0008098635007627308
    2. '00' → logprob: -7.125809669494629
    3. '0' → logprob: -12.500809669494629
    4. '```' → logprob: -14.625809669494629
    5. '<|end|>' → logprob: -15.000809669494629
    6. '1' → logprob: -15.125809669494629
    7. ' ' → logprob: -15.750809669494629
    8. '' → logprob: -16.375810623168945
    9. '10' → logprob: -16.500810623168945
    10. '000' → logprob: -17.000810623168945

Token 132: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.2520001530647278
    2. ''' → logprob: -1.502000093460083
    3. '',
' → logprob: -10.376999855041504
    4. '<|end|>' → logprob: -10.751999855041504
    5. ''}' → logprob: -12.626999855041504
    6. ',' → logprob: -12.751999855041504
    7. ' ',' → logprob: -12.751999855041504
    8. ''s' → logprob: -13.376999855041504
    9. '':' → logprob: -13.376999855041504
    10. '','' → logprob: -13.751999855041504

Token 133: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -5.955703818472102e-05
    2. ''S' → logprob: -10.750059127807617
    3. ' ' → logprob: -11.125059127807617
    4. ' '' → logprob: -11.500059127807617
    5. ''s' → logprob: -12.125059127807617
    6. '"' → logprob: -12.250059127807617
    7. '```' → logprob: -14.250059127807617
    8. '<|end|>' → logprob: -14.375059127807617
    9. ' ' → logprob: -15.000059127807617
    10. ''''' → logprob: -15.625059127807617

Token 134: 'S' (ID: 50)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.005351755302399397
    2. '100' → logprob: -5.880351543426514
    3. ' ' → logprob: -6.755351543426514
    4. ' '' → logprob: -6.755351543426514
    5. ''S' → logprob: -9.005352020263672
    6. '1' → logprob: -9.505352020263672
    7. ''s' → logprob: -12.130352020263672
    8. '`' → logprob: -12.755352020263672
    9. ''T' → logprob: -13.380352020263672
    10. ''A' → logprob: -13.630352020263672

Token 135: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.07505431771278381
    2. ''' → logprob: -2.700054407119751
    3. ' ':' → logprob: -5.700054168701172
    4. '<|end|>' → logprob: -7.200054168701172
    5. '':'' → logprob: -7.325054168701172
    6. ':' → logprob: -8.825054168701172
    7. ' '' → logprob: -9.450054168701172
    8. ' :' → logprob: -10.325054168701172
    9. ''>' → logprob: -11.200054168701172
    10. ''s' → logprob: -11.325054168701172

Token 136: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0005271765403449535
    2. ' ' → logprob: -7.625527381896973
    3. ' '' → logprob: -10.625527381896973
    4. '"' → logprob: -11.500527381896973
    5. '<|end|>' → logprob: -13.125527381896973
    6. '`' → logprob: -14.125527381896973
    7. '100' → logprob: -14.500527381896973
    8. ''s' → logprob: -15.250527381896973
    9. ' ' → logprob: -15.500527381896973
    10. '```' → logprob: -15.875527381896973

Token 137: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -7.040457421680912e-05
    2. ''' → logprob: -9.625070571899414
    3. ' ' → logprob: -13.125070571899414
    4. '1' → logprob: -14.000070571899414
    5. '```' → logprob: -14.750070571899414
    6. '000' → logprob: -15.125070571899414
    7. '0' → logprob: -15.875070571899414
    8. '')' → logprob: -15.875070571899414
    9. '001' → logprob: -16.000070571899414
    10. '101' → logprob: -16.000070571899414

Token 138: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0025037210434675217
    2. '1' → logprob: -6.002503871917725
    3. '```' → logprob: -12.002503395080566
    4. ')' → logprob: -12.627503395080566
    5. '۱۰' → logprob: -12.627503395080566
    6. '01' → logprob: -13.252503395080566
    7. '
' → logprob: -13.440003395080566
    8. ''' → logprob: -13.627503395080566
    9. '१०' → logprob: -14.252503395080566
    10. '  ' → logprob: -14.440003395080566

Token 139: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.023251067847013474
    2. ''' → logprob: -3.7732510566711426
    3. '',
' → logprob: -13.1482515335083
    4. ' ',' → logprob: -13.2732515335083
    5. '','' → logprob: -14.8982515335083
    6. ',' → logprob: -15.1482515335083
    7. ''}' → logprob: -15.2732515335083
    8. '',

' → logprob: -15.5232515335083
    9. '",' → logprob: -15.8982515335083
    10. ''s' → logprob: -15.8982515335083

Token 140: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0001537169300718233
    2. ''T' → logprob: -9.125153541564941
    3. ' '' → logprob: -10.875153541564941
    4. ''S' → logprob: -11.125153541564941
    5. ' ' → logprob: -12.875153541564941
    6. ' T' → logprob: -13.000153541564941
    7. '"' → logprob: -13.125153541564941
    8. ''t' → logprob: -13.750153541564941
    9. ''s' → logprob: -14.000153541564941
    10. '<|end|>' → logprob: -14.375153541564941

Token 141: 'T' (ID: 51)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.020756404846906662
    2. ''T' → logprob: -4.270756244659424
    3. 'T' → logprob: -5.895756244659424
    4. '100' → logprob: -6.270756244659424
    5. ' ' → logprob: -7.020756244659424
    6. ''S' → logprob: -7.395756244659424
    7. ' T' → logprob: -8.770756721496582
    8. ' '' → logprob: -8.770756721496582
    9. 'S' → logprob: -10.395756721496582
    10. '`' → logprob: -10.770756721496582

Token 142: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.04606794938445091
    2. ''' → logprob: -3.796067953109741
    3. ':' → logprob: -4.421067714691162
    4. '<|end|>' → logprob: -4.671067714691162
    5. '':'' → logprob: -7.296067714691162
    6. ' ':' → logprob: -9.17106819152832
    7. ' :' → logprob: -9.67106819152832
    8. ''):' → logprob: -9.92106819152832
    9. ' '' → logprob: -9.92106819152832
    10. '')' → logprob: -10.04606819152832

Token 143: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -4.0484450437361374e-05
    2. ' '' → logprob: -11.000040054321289
    3. ' ' → logprob: -11.250040054321289
    4. '"' → logprob: -12.000040054321289
    5. '100' → logprob: -13.375040054321289
    6. '`' → logprob: -13.500040054321289
    7. ' ' → logprob: -14.875040054321289
    8. '```' → logprob: -15.125040054321289
    9. '101' → logprob: -15.625040054321289
    10. '<|end|>' → logprob: -15.750040054321289

Token 144: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.5772167444229126
    2. ''' → logprob: -0.8272167444229126
    3. '101' → logprob: -7.077216625213623
    4. ' ' → logprob: -8.077217102050781
    5. '"' → logprob: -9.327217102050781
    6. '`' → logprob: -11.827217102050781
    7. '1' → logprob: -12.327217102050781
    8. '001' → logprob: -12.327217102050781
    9. '010' → logprob: -12.577217102050781
    10. '110' → logprob: -12.952217102050781

Token 145: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -5.438573680294212e-06
    2. '1' → logprob: -12.375005722045898
    3. '```' → logprob: -14.250005722045898
    4. '00' → logprob: -15.250005722045898
    5. '01' → logprob: -16.7500057220459
    6. '<|end|>' → logprob: -17.3750057220459
    7. '0' → logprob: -17.7500057220459
    8. ')' → logprob: -17.7500057220459
    9. '{' → logprob: -18.0000057220459
    10. '' → logprob: -18.2500057220459

Token 146: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.038112297654151917
    2. ''' → logprob: -3.2881124019622803
    3. ',' → logprob: -10.66311264038086
    4. ''}' → logprob: -11.16311264038086
    5. ' ',' → logprob: -11.53811264038086
    6. '',
' → logprob: -11.66311264038086
    7. '','' → logprob: -12.41311264038086
    8. '}' → logprob: -12.53811264038086
    9. '   ' → logprob: -13.28811264038086
    10. ''s' → logprob: -14.03811264038086

Token 147: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0005966392927803099
    2. ''U' → logprob: -7.750596523284912
    3. ' '' → logprob: -9.37559700012207
    4. '}' → logprob: -10.37559700012207
    5. ' ' → logprob: -11.37559700012207
    6. ''u' → logprob: -11.62559700012207
    7. '   ' → logprob: -11.75059700012207
    8. '"' → logprob: -12.87559700012207
    9. ' }' → logprob: -13.00059700012207
    10. '```' → logprob: -13.12559700012207

Token 148: 'U' (ID: 52)
  Prédit: ''U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''U' → logprob: -0.004762261174619198
    2. ''' → logprob: -6.004762172698975
    3. 'U' → logprob: -6.129762172698975
    4. ' '' → logprob: -10.254762649536133
    5. '’U' → logprob: -10.379762649536133
    6. ' ' → logprob: -10.879762649536133
    7. ''u' → logprob: -12.129762649536133
    8. ' U' → logprob: -12.504762649536133
    9. ''S' → logprob: -13.254762649536133
    10. '`' → logprob: -13.504762649536133

Token 149: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.02738225646317005
    2. ':' → logprob: -3.6523823738098145
    3. ''' → logprob: -7.0273823738098145
    4. ' ':' → logprob: -10.027381896972656
    5. ' :' → logprob: -10.277381896972656
    6. '":' → logprob: -10.277381896972656
    7. '':'' → logprob: -10.527381896972656
    8. '='' → logprob: -11.402381896972656
    9. ' =' → logprob: -11.527381896972656
    10. '<|end|>' → logprob: -11.527381896972656

Token 150: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -5.085517113911919e-05
    2. ' ' → logprob: -10.25005054473877
    3. ' '' → logprob: -11.37505054473877
    4. '010' → logprob: -13.50005054473877
    5. '"' → logprob: -13.75005054473877
    6. '`' → logprob: -13.87505054473877
    7. '101' → logprob: -15.62505054473877
    8. ' ' → logprob: -16.250051498413086
    9. '100' → logprob: -16.250051498413086
    10. '001' → logprob: -16.375051498413086

Token 151: '101' (ID: 7959)
  Prédit: '101'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '101' → logprob: -1.1472419600977446e-06
    2. '001' → logprob: -14.750000953674316
    3. '```' → logprob: -14.750000953674316
    4. '010' → logprob: -16.000001907348633
    5. '``' → logprob: -16.875001907348633
    6. '`' → logprob: -17.375001907348633
    7. '"' → logprob: -17.750001907348633
    8. ''' → logprob: -17.875001907348633
    9. '{
' → logprob: -18.625001907348633
    10. '100' → logprob: -18.875001907348633

Token 152: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -4.60414821645827e-06
    2. '01' → logprob: -13.125004768371582
    3. '0' → logprob: -13.250004768371582
    4. '000' → logprob: -14.750004768371582
    5. '10' → logprob: -15.625004768371582
    6. '```' → logprob: -16.250003814697266
    7. '۰۰' → logprob: -16.750003814697266
    8. ' ' → logprob: -17.375003814697266
    9. '   ' → logprob: -17.375003814697266
    10. '  ' → logprob: -17.625003814697266

Token 153: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.5760558247566223
    2. ''' → logprob: -0.8260558247566223
    3. ''}' → logprob: -10.451055526733398
    4. ',' → logprob: -10.576055526733398
    5. '}' → logprob: -10.951055526733398
    6. '   ' → logprob: -11.201055526733398
    7. ''A' → logprob: -11.951055526733398
    8. '',
' → logprob: -12.076055526733398
    9. '':' → logprob: -12.451055526733398
    10. ' ',' → logprob: -13.201055526733398

Token 154: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0002636006975080818
    2. ' '' → logprob: -8.375263214111328
    3. ''U' → logprob: -10.875263214111328
    4. ' ' → logprob: -11.875263214111328
    5. ' V' → logprob: -13.375263214111328
    6. '"' → logprob: -13.375263214111328
    7. '```' → logprob: -14.250263214111328
    8. 'v' → logprob: -14.375263214111328
    9. 'V' → logprob: -14.750263214111328
    10. ''A' → logprob: -14.750263214111328

Token 155: 'V' (ID: 53)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0001005630983854644
    2. ' '' → logprob: -9.375100135803223
    3. 'V' → logprob: -11.875100135803223
    4. ''U' → logprob: -12.875100135803223
    5. ' ' → logprob: -13.000100135803223
    6. '101' → logprob: -13.125100135803223
    7. ' V' → logprob: -13.500100135803223
    8. '  ' → logprob: -15.500100135803223
    9. ''A' → logprob: -16.37510108947754
    10. '"' → logprob: -16.87510108947754

Token 156: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.003321246011182666
    2. ':' → logprob: -6.128321170806885
    3. ''' → logprob: -7.003321170806885
    4. ' =' → logprob: -9.628321647644043
    5. '':'' → logprob: -10.003321647644043
    6. '<|end|>' → logprob: -10.503321647644043
    7. '='' → logprob: -10.628321647644043
    8. '=' → logprob: -11.003321647644043
    9. ' ':' → logprob: -11.253321647644043
    10. ''=' → logprob: -11.503321647644043

Token 157: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.001392973237670958
    2. ' '' → logprob: -6.626392841339111
    3. '101' → logprob: -10.12639331817627
    4. ' ' → logprob: -11.25139331817627
    5. '`' → logprob: -11.87639331817627
    6. '"' → logprob: -12.25139331817627
    7. '```' → logprob: -14.37639331817627
    8. '<|end|>' → logprob: -14.75139331817627
    9. ' ' → logprob: -15.37639331817627
    10. ' `' → logprob: -16.126392364501953

Token 158: '101' (ID: 7959)
  Prédit: '101'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '101' → logprob: -0.002482315758243203
    2. ''' → logprob: -6.0024824142456055
    3. ' ' → logprob: -12.002482414245605
    4. '001' → logprob: -15.377482414245605
    5. '```' → logprob: -16.62748146057129
    6. '`' → logprob: -16.87748146057129
    7. '1' → logprob: -17.12748146057129
    8. '100' → logprob: -17.50248146057129
    9. '010' → logprob: -17.62748146057129
    10. '"' → logprob: -17.75248146057129

Token 159: '01' (ID: 2290)
  Prédit: '01'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: -6.869017852295656e-06
    2. '05' → logprob: -12.500006675720215
    3. '00' → logprob: -13.625006675720215
    4. '10' → logprob: -13.625006675720215
    5. '0' → logprob: -14.500006675720215
    6. ''' → logprob: -16.75000762939453
    7. '```' → logprob: -17.25000762939453
    8. '010' → logprob: -17.50000762939453
    9. ' ' → logprob: -18.87500762939453
    10. '' → logprob: -19.00000762939453

Token 160: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.07898672670125961
    2. ''' → logprob: -2.578986644744873
    3. ',' → logprob: -10.328987121582031
    4. '',
' → logprob: -10.828987121582031
    5. '}' → logprob: -10.953987121582031
    6. ''}' → logprob: -11.078987121582031
    7. '   ' → logprob: -13.078987121582031
    8. ''A' → logprob: -13.203987121582031
    9. ' ',' → logprob: -13.578987121582031
    10. '','' → logprob: -13.828987121582031

Token 161: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00022999993234407157
    2. ' '' → logprob: -8.500229835510254
    3. ''U' → logprob: -11.625229835510254
    4. ' ' → logprob: -11.750229835510254
    5. ' ' → logprob: -12.875229835510254
    6. '"' → logprob: -12.875229835510254
    7. '`' → logprob: -13.875229835510254
    8. ' V' → logprob: -14.500229835510254
    9. '```' → logprob: -14.625229835510254
    10. ')' → logprob: -14.625229835510254

Token 162: 'W' (ID: 54)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0016589936567470431
    2. 'W' → logprob: -6.501658916473389
    3. ' '' → logprob: -9.251659393310547
    4. ' ' → logprob: -10.626659393310547
    5. '101' → logprob: -11.001659393310547
    6. ' W' → logprob: -12.126659393310547
    7. '   ' → logprob: -12.626659393310547
    8. '```' → logprob: -13.126659393310547
    9. '  ' → logprob: -13.376659393310547
    10. '`' → logprob: -13.876659393310547

Token 163: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.004183109849691391
    2. ':' → logprob: -5.754183292388916
    3. ''' → logprob: -7.129183292388916
    4. '':'' → logprob: -9.004182815551758
    5. '<|end|>' → logprob: -10.504182815551758
    6. '":' → logprob: -10.629182815551758
    7. ' :' → logprob: -11.254182815551758
    8. ' ':' → logprob: -12.879182815551758
    9. '')' → logprob: -13.254182815551758
    10. ''>' → logprob: -13.379182815551758

Token 164: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0010397175792604685
    2. ' '' → logprob: -6.876039505004883
    3. '101' → logprob: -12.376039505004883
    4. ' ' → logprob: -13.626039505004883
    5. '"' → logprob: -14.126039505004883
    6. '`' → logprob: -15.001039505004883
    7. '<|end|>' → logprob: -16.001039505004883
    8. '```' → logprob: -16.626039505004883
    9. ''''' → logprob: -17.376039505004883
    10. ')' → logprob: -17.501039505004883

Token 165: '101' (ID: 7959)
  Prédit: '101'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '101' → logprob: -0.00011152983643114567
    2. ''' → logprob: -9.12511157989502
    3. ' ' → logprob: -13.12511157989502
    4. '```' → logprob: -14.75011157989502
    5. '001' → logprob: -17.500110626220703
    6. '"' → logprob: -17.625110626220703
    7. ''''' → logprob: -17.750110626220703
    8. '1' → logprob: -18.250110626220703
    9. '`' → logprob: -18.750110626220703
    10. '100' → logprob: -18.875110626220703

Token 166: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.45848218582978e-06
    2. '11' → logprob: -14.12500286102295
    3. '۱۰' → logprob: -14.25000286102295
    4. '1' → logprob: -15.25000286102295
    5. '01' → logprob: -15.75000286102295
    6. '１０' → logprob: -16.125001907348633
    7. '110' → logprob: -16.125001907348633
    8. '```' → logprob: -16.375001907348633
    9. '00' → logprob: -17.000001907348633
    10. '१०' → logprob: -17.125001907348633

Token 167: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.16024494171142578
    2. ''' → logprob: -1.9102449417114258
    3. '',
' → logprob: -11.785244941711426
    4. ' ',' → logprob: -11.910244941711426
    5. ',' → logprob: -13.285244941711426
    6. ' '' → logprob: -14.035244941711426
    7. ''A' → logprob: -14.160244941711426
    8. ''}' → logprob: -14.285244941711426
    9. '':' → logprob: -14.410244941711426
    10. '",' → logprob: -14.910244941711426

Token 168: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0011966594029217958
    2. ' '' → logprob: -6.75119686126709
    3. ' ' → logprob: -11.87619686126709
    4. '"' → logprob: -12.12619686126709
    5. '   ' → logprob: -12.62619686126709
    6. ''U' → logprob: -13.25119686126709
    7. '`' → logprob: -13.50119686126709
    8. 'space' → logprob: -13.50119686126709
    9. ' X' → logprob: -13.62619686126709
    10. '}' → logprob: -14.25119686126709

Token 169: 'X' (ID: 55)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0002703953068703413
    2. ' '' → logprob: -8.75027084350586
    3. '101' → logprob: -9.50027084350586
    4. ' ' → logprob: -11.50027084350586
    5. ''U' → logprob: -11.50027084350586
    6. ''A' → logprob: -12.50027084350586
    7. ''H' → logprob: -13.00027084350586
    8. '`' → logprob: -13.50027084350586
    9. ''T' → logprob: -13.62527084350586
    10. ''S' → logprob: -13.75027084350586

Token 170: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.004185482859611511
    2. ''' → logprob: -5.504185676574707
    3. ':' → logprob: -10.254185676574707
    4. '':'' → logprob: -10.504185676574707
    5. '<|end|>' → logprob: -11.129185676574707
    6. ' ':' → logprob: -11.629185676574707
    7. ''>' → logprob: -12.254185676574707
    8. '":' → logprob: -12.754185676574707
    9. '='' → logprob: -12.879185676574707
    10. ''=' → logprob: -13.004185676574707

Token 171: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -3.297462171758525e-05
    2. ' '' → logprob: -10.375033378601074
    3. '101' → logprob: -14.000033378601074
    4. '"' → logprob: -14.375033378601074
    5. ' ' → logprob: -15.750033378601074
    6. '`' → logprob: -16.375032424926758
    7. ''''' → logprob: -17.375032424926758
    8. '```' → logprob: -19.000032424926758
    9. ''s' → logprob: -19.125032424926758
    10. ' ' → logprob: -19.250032424926758

Token 172: '101' (ID: 7959)
  Prédit: '101'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '101' → logprob: -0.00015097891446202993
    2. ''' → logprob: -8.875150680541992
    3. ' ' → logprob: -11.625150680541992
    4. '1' → logprob: -13.250150680541992
    5. '10' → logprob: -15.000150680541992
    6. '"' → logprob: -16.875150680541992
    7. '`' → logprob: -17.000150680541992
    8. '```' → logprob: -18.000150680541992
    9. '   ' → logprob: -18.750150680541992
    10. '100' → logprob: -19.250150680541992

Token 173: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -7.226628895296017e-06
    2. '1' → logprob: -12.250007629394531
    3. '   ' → logprob: -14.625007629394531
    4. '{' → logprob: -14.750007629394531
    5. '```' → logprob: -14.937507629394531
    6. '১১' → logprob: -15.687507629394531
    7. '{"' → logprob: -16.25000762939453
    8. '10' → logprob: -16.31250762939453
    9. '111' → logprob: -16.37500762939453
    10. '११' → logprob: -16.56250762939453

Token 174: '',
' (ID: 1214)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.1603432446718216
    2. ''' → logprob: -1.9103432893753052
    3. '',
' → logprob: -9.285343170166016
    4. ''}' → logprob: -11.160343170166016
    5. ''A' → logprob: -12.910343170166016
    6. ',' → logprob: -13.160343170166016
    7. '',

' → logprob: -13.535343170166016
    8. '}' → logprob: -13.660343170166016
    9. '','' → logprob: -13.910343170166016
    10. ' ',' → logprob: -13.910343170166016

Token 175: '   ' (ID: 271)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.12429460883140564
    2. ' '' → logprob: -2.6242945194244385
    3. '   ' → logprob: -3.1242945194244385
    4. ' ' → logprob: -8.49929428100586
    5. ' Y' → logprob: -8.99929428100586
    6. '  ' → logprob: -9.99929428100586
    7. '    ' → logprob: -10.62429428100586
    8. '}' → logprob: -12.37429428100586
    9. '`' → logprob: -12.49929428100586
    10. '"' → logprob: -12.99929428100586

Token 176: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.02797270193696022
    2. ' '' → logprob: -3.65297269821167
    3. '   ' → logprob: -6.52797269821167
    4. ' Y' → logprob: -8.902973175048828
    5. ' ' → logprob: -10.277973175048828
    6. ''y' → logprob: -11.652973175048828
    7. '  ' → logprob: -12.152973175048828
    8. '}' → logprob: -12.777973175048828
    9. '    ' → logprob: -12.902973175048828
    10. ' 
' → logprob: -12.902973175048828

Token 177: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.11299820989370346
    2. ''' → logprob: -2.2379982471466064
    3. ' Y' → logprob: -8.862998008728027
    4. '	Y' → logprob: -11.612998008728027
    5. '   ' → logprob: -11.737998008728027
    6. ' '' → logprob: -11.737998008728027
    7. ''y' → logprob: -12.362998008728027
    8. ' ' → logprob: -13.987998008728027
    9. '`' → logprob: -14.612998008728027
    10. '  ' → logprob: -14.612998008728027

Token 178: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0040818434208631516
    2. ''' → logprob: -5.504081726074219
    3. ' ':' → logprob: -12.879081726074219
    4. '":' → logprob: -15.129081726074219
    5. ':' → logprob: -15.129081726074219
    6. ''>' → logprob: -15.504081726074219
    7. '':'' → logprob: -16.25408172607422
    8. ''):' → logprob: -18.12908172607422
    9. '',' → logprob: -18.37908172607422
    10. '"' → logprob: -18.50408172607422

Token 179: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02057131566107273
    2. ' '' → logprob: -3.895571231842041
    3. '"' → logprob: -10.5205717086792
    4. ' ' → logprob: -13.8955717086792
    5. ' ' → logprob: -14.5205717086792
    6. '`' → logprob: -15.1455717086792
    7. ''s' → logprob: -15.1455717086792
    8. ''''' → logprob: -15.7705717086792
    9. ' "' → logprob: -16.395570755004883
    10. '101' → logprob: -16.770570755004883

Token 180: '110' (ID: 7920)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0004601015243679285
    2. '110' → logprob: -7.750460147857666
    3. ' ' → logprob: -11.125459671020508
    4. '101' → logprob: -11.875459671020508
    5. '106' → logprob: -13.125459671020508
    6. '10' → logprob: -13.375459671020508
    7. '`' → logprob: -13.625459671020508
    8. '1' → logprob: -14.000459671020508
    9. '102' → logprob: -14.375459671020508
    10. ' '' → logprob: -14.625459671020508

Token 181: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.004723226185888052
    2. '0' → logprob: -5.379723072052002
    3. '01' → logprob: -9.87972354888916
    4. ' ' → logprob: -10.25472354888916
    5. '000' → logprob: -12.44222354888916
    6. '```' → logprob: -13.12972354888916
    7. '	' → logprob: -13.25472354888916
    8. '  ' → logprob: -13.69222354888916
    9. ''' → logprob: -13.69222354888916
    10. ' ' → logprob: -13.75472354888916

Token 182: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.16023387014865875
    2. ''' → logprob: -1.9102338552474976
    3. '',
' → logprob: -11.785233497619629
    4. ',' → logprob: -14.910233497619629
    5. ' ',' → logprob: -14.910233497619629
    6. ''}' → logprob: -15.035233497619629
    7. '','' → logprob: -15.910233497619629
    8. '':' → logprob: -15.910233497619629
    9. '',

' → logprob: -15.910233497619629
    10. ' '' → logprob: -16.035234451293945

Token 183: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00014025058771949261
    2. ' '' → logprob: -8.875140190124512
    3. ''z' → logprob: -16.125141143798828
    4. '```' → logprob: -16.500141143798828
    5. '"' → logprob: -16.625141143798828
    6. 'space' → logprob: -17.125141143798828
    7. ' Z' → logprob: -17.625141143798828
    8. ' ' → logprob: -17.750141143798828
    9. '`' → logprob: -17.875141143798828
    10. '   ' → logprob: -18.125141143798828

Token 184: 'Z' (ID: 57)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0017150469357147813
    2. ' '' → logprob: -6.376715183258057
    3. ' Z' → logprob: -12.626714706420898
    4. '"' → logprob: -13.001714706420898
    5. ' ' → logprob: -13.126714706420898
    6. ''z' → logprob: -13.251714706420898
    7. 'Z' → logprob: -13.376714706420898
    8. ''S' → logprob: -14.251714706420898
    9. ''''' → logprob: -15.251714706420898
    10. ''A' → logprob: -15.751714706420898

Token 185: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.014168446883559227
    2. ''' → logprob: -4.2641682624816895
    3. ' ':' → logprob: -13.139168739318848
    4. ''>' → logprob: -13.889168739318848
    5. '":' → logprob: -14.389168739318848
    6. '':'' → logprob: -14.764168739318848
    7. ''):' → logprob: -15.264168739318848
    8. '```' → logprob: -15.889168739318848
    9. '<|end|>' → logprob: -16.13916778564453
    10. ':' → logprob: -16.13916778564453

Token 186: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0001564586127642542
    2. ' '' → logprob: -9.25015640258789
    3. '"' → logprob: -9.87515640258789
    4. ''''' → logprob: -12.62515640258789
    5. ' ' → logprob: -12.75015640258789
    6. '110' → logprob: -14.50015640258789
    7. '```' → logprob: -14.75015640258789
    8. '"'' → logprob: -15.25015640258789
    9. 'space' → logprob: -15.50015640258789
    10. ')' → logprob: -15.62515640258789

Token 187: '110' (ID: 7920)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5759493708610535
    2. '110' → logprob: -0.8259493708610535
    3. '111' → logprob: -12.325949668884277
    4. '"' → logprob: -13.450949668884277
    5. ' ' → logprob: -13.700949668884277
    6. ''''' → logprob: -14.450949668884277
    7. '```' → logprob: -14.700949668884277
    8. '11' → logprob: -14.825949668884277
    9. ' '' → logprob: -14.950949668884277
    10. '''' → logprob: -15.575949668884277

Token 188: '01' (ID: 2290)
  Prédit: '01'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: -0.0011911796173080802
    2. '00' → logprob: -6.751191139221191
    3. '1' → logprob: -11.501191139221191
    4. '0' → logprob: -12.001191139221191
    5. '11' → logprob: -12.751191139221191
    6. '10' → logprob: -13.626191139221191
    7. '000' → logprob: -16.063692092895508
    8. ' ' → logprob: -16.313692092895508
    9. '<|end|>' → logprob: -16.438692092895508
    10. '```' → logprob: -16.563692092895508

Token 189: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.47847267985343933
    2. ''' → logprob: -0.9784727096557617
    3. ''}' → logprob: -5.478472709655762
    4. '}' → logprob: -8.603472709655762
    5. '',
' → logprob: -10.853472709655762
    6. '']' → logprob: -13.353472709655762
    7. '','' → logprob: -13.728472709655762
    8. '}'' → logprob: -13.728472709655762
    9. '',
' → logprob: -14.728472709655762
    10. '',

' → logprob: -14.728472709655762

Token 190: ' "'' (ID: 12868)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0004240011621732265
    2. '}' → logprob: -8.1254243850708
    3. ' '' → logprob: -9.5004243850708
    4. '   ' → logprob: -10.5004243850708
    5. '"' → logprob: -11.5004243850708
    6. ''}' → logprob: -12.2504243850708
    7. ' }' → logprob: -12.7504243850708
    8. ''s' → logprob: -12.8754243850708
    9. ' ' → logprob: -13.8754243850708
    10. ''S' → logprob: -14.0004243850708

Token 191: '":' (ID: 1243)
  Prédit: ' ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ':' → logprob: -0.2865510880947113
    2. ' ":' → logprob: -1.4115511178970337
    3. ' "' → logprob: -6.036550998687744
    4. ' '' → logprob: -6.286550998687744
    5. ''' → logprob: -7.286550998687744
    6. '":' → logprob: -8.036551475524902
    7. '"' → logprob: -10.411551475524902
    8. '':' → logprob: -10.536551475524902
    9. ' ' → logprob: -10.786551475524902
    10. ' :' → logprob: -11.536551475524902

Token 192: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.005334316752851009
    2. '"' → logprob: -5.255334377288818
    3. ' '' → logprob: -9.63033390045166
    4. '111' → logprob: -11.25533390045166
    5. ' ' → logprob: -11.88033390045166
    6. '110' → logprob: -12.25533390045166
    7. '''' → logprob: -13.00533390045166
    8. '000' → logprob: -13.38033390045166
    9. ''''' → logprob: -13.63033390045166
    10. '   ' → logprob: -14.00533390045166

Token 193: '110' (ID: 7920)
  Prédit: '110'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '110' → logprob: -0.02670697681605816
    2. '111' → logprob: -3.6517069339752197
    3. '000' → logprob: -8.65170669555664
    4. '1' → logprob: -9.02670669555664
    5. ''' → logprob: -10.02670669555664
    6. '011' → logprob: -10.52670669555664
    7. '11' → logprob: -11.65170669555664
    8. '001' → logprob: -11.90170669555664
    9. '"' → logprob: -12.15170669555664
    10. '')' → logprob: -12.27670669555664

Token 194: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.004783138167113066
    2. '01' → logprob: -6.1297831535339355
    3. '11' → logprob: -6.3797831535339355
    4. '00' → logprob: -7.2547831535339355
    5. '1' → logprob: -9.254782676696777
    6. '010' → logprob: -10.129782676696777
    7. '```' → logprob: -10.754782676696777
    8. ''' → logprob: -11.004782676696777
    9. '"' → logprob: -12.504782676696777
    10. '101' → logprob: -12.629782676696777

Token 195: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.313360333442688
    2. ''' → logprob: -1.313360333442688
    3. '',
' → logprob: -10.313360214233398
    4. ' ',' → logprob: -10.688360214233398
    5. ' '' → logprob: -10.938360214233398
    6. ''}' → logprob: -11.063360214233398
    7. '','' → logprob: -12.563360214233398
    8. ',' → logprob: -13.563360214233398
    9. '}' → logprob: -13.813360214233398
    10. '",' → logprob: -13.813360214233398

Token 196: ' '-' (ID: 17489)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.001129021286033094
    2. '"' → logprob: -7.376129150390625
    3. ' '' → logprob: -8.501129150390625
    4. ''_' → logprob: -10.001129150390625
    5. ''.' → logprob: -10.251129150390625
    6. ''s' → logprob: -10.376129150390625
    7. '_' → logprob: -10.501129150390625
    8. ''-' → logprob: -10.626129150390625
    9. '',' → logprob: -10.876129150390625
    10. ''a' → logprob: -11.126129150390625

Token 197: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.38805559277534485
    2. ''' → logprob: -1.1380555629730225
    3. ' ':' → logprob: -6.763055801391602
    4. '111' → logprob: -11.513055801391602
    5. ' '' → logprob: -11.888055801391602
    6. '":' → logprob: -12.513055801391602
    7. '000' → logprob: -13.013055801391602
    8. '':'' → logprob: -13.138055801391602
    9. '110' → logprob: -14.513055801391602
    10. ''>' → logprob: -14.638055801391602

Token 198: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0012060654116794467
    2. '110' → logprob: -7.376205921173096
    3. ' '' → logprob: -7.626205921173096
    4. ' ' → logprob: -9.501206398010254
    5. '111' → logprob: -11.376206398010254
    6. '"' → logprob: -12.251206398010254
    7. ' ' → logprob: -15.001206398010254
    8. ''''' → logprob: -15.751206398010254
    9. '11' → logprob: -16.626205444335938
    10. '`' → logprob: -16.751205444335938

Token 199: '110' (ID: 7920)
  Prédit: '110'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '110' → logprob: -2.939851037808694e-05
    2. ''' → logprob: -10.625029563903809
    3. '111' → logprob: -12.750029563903809
    4. '```' → logprob: -14.125029563903809
    5. '''' → logprob: -15.375029563903809
    6. '"' → logprob: -15.500029563903809
    7. '``' → logprob: -15.750029563903809
    8. '`' → logprob: -16.375028610229492
    9. '1' → logprob: -16.500028610229492
    10. '')' → logprob: -16.625028610229492

Token 200: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -4.4849443838757e-06
    2. '1' → logprob: -13.125004768371582
    3. '110' → logprob: -14.500004768371582
    4. '111' → logprob: -14.625004768371582
    5. '10' → logprob: -14.875004768371582
    6. '

' → logprob: -16.062503814697266
    7. '00' → logprob: -16.062503814697266
    8. ''' → logprob: -16.125003814697266
    9. '01' → logprob: -16.312503814697266
    10. '```' → logprob: -16.375003814697266

Token 201: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.04321065545082092
    2. ''' → logprob: -3.168210744857788
    3. ''}' → logprob: -8.668210983276367
    4. '',
' → logprob: -11.043210983276367
    5. '}' → logprob: -11.418210983276367
    6. '','' → logprob: -12.418210983276367
    7. ' ',' → logprob: -12.543210983276367
    8. ',' → logprob: -13.293210983276367
    9. '',
' → logprob: -14.168210983276367
    10. ' '' → logprob: -14.418210983276367

Token 202: ' '?' (ID: 73818)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.004854449536651373
    2. '}' → logprob: -6.129854679107666
    3. ' '' → logprob: -6.129854679107666
    4. '"' → logprob: -8.754854202270508
    5. '',' → logprob: -9.254854202270508
    6. '   ' → logprob: -9.754854202270508
    7. ''}' → logprob: -10.254854202270508
    8. ''_' → logprob: -10.629854202270508
    9. ' }' → logprob: -11.129854202270508
    10. ' ' → logprob: -11.379854202270508

Token 203: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.006786654703319073
    2. ''' → logprob: -5.006786823272705
    3. ' ':' → logprob: -9.631786346435547
    4. '":' → logprob: -12.506786346435547
    5. ':' → logprob: -14.006786346435547
    6. '':'' → logprob: -14.006786346435547
    7. ' '' → logprob: -17.006786346435547
    8. '':
' → logprob: -17.381786346435547
    9. '```' → logprob: -17.381786346435547
    10. '='' → logprob: -17.631786346435547

Token 204: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0023958671372383833
    2. ' '' → logprob: -6.1273956298828125
    3. ' ' → logprob: -8.752395629882812
    4. '111' → logprob: -10.002395629882812
    5. '"' → logprob: -12.627395629882812
    6. ''''' → logprob: -13.752395629882812
    7. ' ' → logprob: -14.252395629882812
    8. '110' → logprob: -14.877395629882812
    9. ')' → logprob: -15.252395629882812
    10. ''
' → logprob: -15.377395629882812

Token 205: '111' (ID: 8780)
  Prédit: '111'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -1.3544423381972592e-05
    2. '000' → logprob: -12.62501335144043
    3. '1' → logprob: -12.87501335144043
    4. ''' → logprob: -13.00001335144043
    5. '```' → logprob: -13.37501335144043
    6. '0' → logprob: -13.50001335144043
    7. '001' → logprob: -13.87501335144043
    8. '')' → logprob: -15.25001335144043
    9. ''''' → logprob: -15.75001335144043
    10. '
' → logprob: -15.75001335144043

Token 206: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.00024037064576987177
    2. '01' → logprob: -9.000240325927734
    3. '11' → logprob: -9.375240325927734
    4. '0' → logprob: -11.000240325927734
    5. '10' → logprob: -12.000240325927734
    6. '000' → logprob: -12.375240325927734
    7. '1' → logprob: -12.375240325927734
    8. '001' → logprob: -15.125240325927734
    9. '```' → logprob: -16.375240325927734
    10. ''' → logprob: -16.625240325927734

Token 207: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0621374137699604
    2. ''' → logprob: -2.8121373653411865
    3. ''}' → logprob: -9.062137603759766
    4. '',
' → logprob: -10.312137603759766
    5. '}' → logprob: -11.312137603759766
    6. '','' → logprob: -12.562137603759766
    7. ',' → logprob: -13.187137603759766
    8. '}',' → logprob: -14.562137603759766
    9. ' ',' → logprob: -14.687137603759766
    10. '',

' → logprob: -14.812137603759766

Token 208: ' '.' (ID: 12662)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0025996763724833727
    2. ' '' → logprob: -7.252599716186523
    3. ''.' → logprob: -7.252599716186523
    4. '':' → logprob: -7.877599716186523
    5. '',' → logprob: -8.252599716186523
    6. '}' → logprob: -8.252599716186523
    7. ''}' → logprob: -9.877599716186523
    8. ''_' → logprob: -9.877599716186523
    9. '"' → logprob: -10.127599716186523
    10. ''\' → logprob: -11.252599716186523

Token 209: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.023270519450306892
    2. ''' → logprob: -3.773270606994629
    3. ' ':' → logprob: -11.773270606994629
    4. '":' → logprob: -12.023270606994629
    5. '':'' → logprob: -12.148270606994629
    6. ':' → logprob: -12.648270606994629
    7. ''=' → logprob: -14.273270606994629
    8. '111' → logprob: -14.898270606994629
    9. ''''' → logprob: -14.898270606994629
    10. '='' → logprob: -15.023270606994629

Token 210: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0023894449695944786
    2. '111' → logprob: -6.627389430999756
    3. ' ' → logprob: -7.002389430999756
    4. ' '' → logprob: -9.002389907836914
    5. ''''' → logprob: -11.127389907836914
    6. '"' → logprob: -12.127389907836914
    7. ' ' → logprob: -12.252389907836914
    8. '`' → logprob: -13.002389907836914
    9. '110' → logprob: -14.627389907836914
    10. ')' → logprob: -14.877389907836914

Token 211: '111' (ID: 8780)
  Prédit: '111'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -0.0008092674543149769
    2. ''' → logprob: -7.375809192657471
    3. ''''' → logprob: -8.750809669494629
    4. '''' → logprob: -11.375809669494629
    5. ''.' → logprob: -12.250809669494629
    6. ''''
' → logprob: -13.000809669494629
    7. '"' → logprob: -13.250809669494629
    8. '1' → logprob: -13.375809669494629
    9. '```' → logprob: -14.500809669494629
    10. ''''

' → logprob: -15.000809669494629

Token 212: '01' (ID: 2290)
  Prédit: '01'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: -3.464347173576243e-05
    2. '11' → logprob: -11.00003433227539
    3. '0' → logprob: -11.75003433227539
    4. '00' → logprob: -12.12503433227539
    5. '010' → logprob: -12.62503433227539
    6. '10' → logprob: -14.00003433227539
    7. '1' → logprob: -15.75003433227539
    8. '011' → logprob: -16.75003433227539
    9. '001' → logprob: -16.87503433227539
    10. '```' → logprob: -17.12503433227539

Token 213: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.10112322121858597
    2. ''' → logprob: -2.351123332977295
    3. ''}' → logprob: -7.226123332977295
    4. '}' → logprob: -9.351122856140137
    5. '',
' → logprob: -9.476122856140137
    6. '','' → logprob: -10.976122856140137
    7. ',' → logprob: -12.976122856140137
    8. '}'' → logprob: -13.226122856140137
    9. '',
' → logprob: -13.851122856140137
    10. '}',' → logprob: -13.851122856140137

Token 214: ' ',' (ID: 14089)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.003709696466103196
    2. '',' → logprob: -6.00370979309082
    3. ' '' → logprob: -7.50370979309082
    4. '}' → logprob: -8.25370979309082
    5. '','' → logprob: -8.87870979309082
    6. ''}' → logprob: -9.12870979309082
    7. '':' → logprob: -9.75370979309082
    8. '"' → logprob: -10.62870979309082
    9. ''_' → logprob: -10.62870979309082
    10. '':'' → logprob: -10.87870979309082

Token 215: '':' (ID: 2337)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0007270866190083325
    2. ' '' → logprob: -7.62572717666626
    3. '111' → logprob: -9.375726699829102
    4. ''''' → logprob: -9.750726699829102
    5. ' ' → logprob: -10.125726699829102
    6. '':' → logprob: -10.250726699829102
    7. '<|end|>' → logprob: -11.625726699829102
    8. '```' → logprob: -13.125726699829102
    9. '':'' → logprob: -13.250726699829102
    10. '"' → logprob: -13.375726699829102

Token 216: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0022856220602989197
    2. ' ' → logprob: -6.252285480499268
    3. '111' → logprob: -8.502285957336426
    4. ' '' → logprob: -9.002285957336426
    5. '`' → logprob: -11.627285957336426
    6. ' ' → logprob: -12.002285957336426
    7. ''''' → logprob: -12.002285957336426
    8. '"' → logprob: -12.377285957336426
    9. '<|end|>' → logprob: -13.252285957336426
    10. '110' → logprob: -14.252285957336426

Token 217: '111' (ID: 8780)
  Prédit: '111'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -0.0004178025701548904
    2. ''' → logprob: -7.875417709350586
    3. ''''' → logprob: -10.375417709350586
    4. '''' → logprob: -12.750417709350586
    5. ''''
' → logprob: -13.500417709350586
    6. ' ' → logprob: -14.125417709350586
    7. '1' → logprob: -14.625417709350586
    8. '```' → logprob: -14.750417709350586
    9. '"' → logprob: -15.875417709350586
    10. ''''

' → logprob: -16.625417709350586

Token 218: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -3.128163257315464e-07
    2. '01' → logprob: -17.0
    3. '11' → logprob: -17.125
    4. '00' → logprob: -17.75
    5. '۱۰' → logprob: -17.75
    6. '0' → logprob: -18.125
    7. '110' → logprob: -18.625
    8. '010' → logprob: -19.375
    9. '１０' → logprob: -19.625
    10. '1' → logprob: -19.625

Token 219: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.3926958441734314
    2. ''' → logprob: -1.1426959037780762
    3. ''}' → logprob: -5.267695903778076
    4. '}' → logprob: -7.767695903778076
    5. '',
' → logprob: -8.642695426940918
    6. '','' → logprob: -10.517695426940918
    7. '}'' → logprob: -11.392695426940918
    8. ',' → logprob: -12.517695426940918
    9. '}',' → logprob: -12.767695426940918
    10. '',
' → logprob: -13.392695426940918

Token 220: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.003200169885531068
    2. '':' → logprob: -5.878200054168701
    3. ' '' → logprob: -9.00320053100586
    4. ''}' → logprob: -9.50320053100586
    5. '':'' → logprob: -9.75320053100586
    6. '}' → logprob: -9.87820053100586
    7. '';' → logprob: -10.62820053100586
    8. '"' → logprob: -10.75320053100586
    9. ''"' → logprob: -11.00320053100586
    10. ' }' → logprob: -12.50320053100586

Token 221: ' ':' (ID: 30751)
  Prédit: '111'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -0.0027545916382223368
    2. ''' → logprob: -6.5027546882629395
    3. ' '' → logprob: -7.2527546882629395
    4. ' ':'' → logprob: -8.502754211425781
    5. '110' → logprob: -9.127754211425781
    6. 'space' → logprob: -9.252754211425781
    7. '000' → logprob: -10.377754211425781
    8. '011' → logprob: -10.502754211425781
    9. ' ':' → logprob: -10.752754211425781
    10. ''''' → logprob: -11.377754211425781

Token 222: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0380789078772068
    2. '111' → logprob: -3.288079023361206
    3. ''''' → logprob: -10.413079261779785
    4. ' ' → logprob: -12.663079261779785
    5. '"' → logprob: -13.413079261779785
    6. ' '' → logprob: -13.788079261779785
    7. '''' → logprob: -14.413079261779785
    8. ''''
' → logprob: -14.788079261779785
    9. '`' → logprob: -15.038079261779785
    10. '000' → logprob: -15.538079261779785

Token 223: '111' (ID: 8780)
  Prédit: '111'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '111' → logprob: -1.8074162653647363e-05
    2. '000' → logprob: -11.000018119812012
    3. ''' → logprob: -13.875018119812012
    4. '''' → logprob: -15.625018119812012
    5. ''''' → logprob: -16.250017166137695
    6. '0' → logprob: -17.375017166137695
    7. '')' → logprob: -17.625017166137695
    8. '```' → logprob: -18.750017166137695
    9. '""' → logprob: -18.875017166137695
    10. ''''
' → logprob: -18.875017166137695

Token 224: '11' (ID: 994)
  Prédit: '11'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -2.963691804325208e-05
    2. '1' → logprob: -10.625029563903809
    3. '00' → logprob: -12.750029563903809
    4. '111' → logprob: -13.125029563903809
    5. ' ' → logprob: -16.500030517578125
    6. '```' → logprob: -16.875030517578125
    7. '
' → logprob: -17.000030517578125
    8. ''' → logprob: -17.125030517578125
    9. '01' → logprob: -17.750030517578125
    10. '0' → logprob: -17.875030517578125

Token 225: ''
' (ID: 2207)
  Prédit: ''}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''}' → logprob: -0.11760173738002777
    2. '}' → logprob: -2.3676016330718994
    3. ''' → logprob: -4.1176018714904785
    4. '',' → logprob: -6.9926018714904785
    5. '}'' → logprob: -10.61760139465332
    6. '']' → logprob: -11.86760139465332
    7. '',
' → logprob: -12.24260139465332
    8. ''
' → logprob: -13.24260139465332
    9. '`}' → logprob: -13.49260139465332
    10. '   ' → logprob: -14.24260139465332

Token 226: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -1.3856492842023727e-06
    2. ' }' → logprob: -14.125000953674316
    3. '}
' → logprob: -14.750000953674316
    4. ',' → logprob: -16.500001907348633
    5. ''}' → logprob: -17.625001907348633
    6. '```' → logprob: -18.375001907348633
    7. '`}' → logprob: -18.625001907348633
    8. '}

' → logprob: -19.250001907348633
    9. ',
' → logprob: -19.375001907348633
    10. '   ' → logprob: -19.500001907348633

Token 227: 'rev' (ID: 25656)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03395456820726395
    2. 'encoded' → logprob: -4.533954620361328
    3. 'decoded' → logprob: -4.908954620361328
    4. 'text' → logprob: -6.158954620361328
    5. 'decode' → logprob: -6.408954620361328
    6. '#' → logprob: -6.658954620361328
    7. 'message' → logprob: -6.908954620361328
    8. 'code' → logprob: -7.033954620361328
    9. 'newline' → logprob: -7.158954620361328
    10. 'a' → logprob: -7.158954620361328

Token 228: '_map' (ID: 11824)
  Prédit: '_code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_code' → logprob: -8.494741632603109e-05
    2. '_' → logprob: -9.62508487701416
    3. 'code' → logprob: -12.00008487701416
    4. 'e' → logprob: -12.25008487701416
    5. '_e' → logprob: -12.75008487701416
    6. '_cod' → logprob: -13.00008487701416
    7. '_map' → logprob: -14.25008487701416
    8. '```' → logprob: -14.87508487701416
    9. '_Code' → logprob: -15.12508487701416
    10. 'erse' → logprob: -15.37508487701416

Token 229: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4305148720741272
    2. '=' → logprob: -1.1805148124694824
    3. '_' → logprob: -3.1805148124694824
    4. '_code' → logprob: -7.305514812469482
    5. '_map' → logprob: -8.68051528930664
    6. '_=' → logprob: -8.93051528930664
    7. 'code' → logprob: -10.93051528930664
    8. 'u' → logprob: -11.05551528930664
    9. '   ' → logprob: -11.18051528930664
    10. '=_' → logprob: -11.30551528930664

Token 230: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.030179912224411964
    2. ' {' → logprob: -3.530179977416992
    3. '{}' → logprob: -7.780179977416992
    4. ' {}' → logprob: -12.280179977416992
    5. '{k' → logprob: -13.155179977416992
    6. '{text' → logprob: -13.155179977416992
    7. '{id' → logprob: -13.905179977416992
    8. '{i' → logprob: -14.905179977416992
    9. '{name' → logprob: -14.905179977416992
    10. '{x' → logprob: -15.030179977416992

Token 231: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0002233245177194476
    2. 'value' → logprob: -9.000223159790039
    3. ' v' → logprob: -9.250223159790039
    4. ''value' → logprob: -13.250223159790039
    5. 'code' → logprob: -13.625223159790039
    6. ' value' → logprob: -14.375223159790039
    7. 'val' → logprob: -15.500223159790039
    8. ''' → logprob: -17.12522315979004
    9. ' code' → logprob: -17.87522315979004
    10. '"value' → logprob: -19.12522315979004

Token 232: ':k' (ID: 69335)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.100059156073257e-05
    2. ' :' → logprob: -10.125070571899414
    3. ':key' → logprob: -11.625070571899414
    4. ':v' → logprob: -12.625070571899414
    5. ':k' → logprob: -12.750070571899414
    6. ':i' → logprob: -12.875070571899414
    7. ':s' → logprob: -13.000070571899414
    8. ':
' → logprob: -13.375070571899414
    9. ':b' → logprob: -13.625070571899414
    10. ':user' → logprob: -13.750070571899414

Token 233: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5812727212905884
    2. 'for' → logprob: -1.2062727212905884
    3. ':' → logprob: -1.9562727212905884
    4. '}' → logprob: -9.581273078918457
    5. ' :' → logprob: -10.956273078918457
    6. ' ' → logprob: -11.581273078918457
    7. '   ' → logprob: -11.581273078918457
    8. ')' → logprob: -12.456273078918457
    9. '	for' → logprob: -13.331273078918457
    10. ''' → logprob: -13.831273078918457

Token 234: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.8368687033653259
    2. 'v' → logprob: -0.8368687033653259
    3. ' k' → logprob: -2.5868687629699707
    4. ' v' → logprob: -2.8368687629699707
    5. ',k' → logprob: -12.961868286132812
    6. 'code' → logprob: -13.336868286132812
    7. '	v' → logprob: -14.211868286132812
    8. '	k' → logprob: -14.336868286132812
    9. ',v' → logprob: -14.836868286132812
    10. ' code' → logprob: -14.961868286132812

Token 235: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03319399058818817
    2. ',v' → logprob: -3.658194065093994
    3. 'in' → logprob: -5.408194065093994
    4. ' in' → logprob: -6.658194065093994
    5. ',k' → logprob: -7.408194065093994
    6. ' ,' → logprob: -9.158193588256836
    7. ',i' → logprob: -9.283193588256836
    8. ',in' → logprob: -9.283193588256836
    9. ',c' → logprob: -9.408193588256836
    10. ',m' → logprob: -11.033193588256836

Token 236: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.11481925845146179
    2. ' in' → logprob: -2.239819288253784
    3. 'n' → logprob: -6.239819049835205
    4. 's' → logprob: -12.239819526672363
    5. ' ' → logprob: -12.239819526672363
    6. 'i' → logprob: -12.489819526672363
    7. 'import' → logprob: -12.489819526672363
    8. 'In' → logprob: -12.614819526672363
    9. '```' → logprob: -12.864819526672363
    10. '<|end|>' → logprob: -13.114819526672363

Token 237: ' code' (ID: 3490)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.008615635335445404
    2. ' code' → logprob: -4.758615493774414
    3. '_code' → logprob: -14.258615493774414
    4. 'Code' → logprob: -15.258615493774414
    5. '(code' → logprob: -16.383615493774414
    6. '```' → logprob: -16.758615493774414
    7. '	code' → logprob: -17.008615493774414
    8. 'c' → logprob: -18.008615493774414
    9. 'cod' → logprob: -18.008615493774414
    10. 'data' → logprob: -18.383615493774414

Token 238: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -2.6776029699249193e-05
    2. '_' → logprob: -11.25002670288086
    3. '_maps' → logprob: -11.87502670288086
    4. '_code' → logprob: -12.87502670288086
    5. '_in' → logprob: -13.87502670288086
    6. 'in' → logprob: -14.00002670288086
    7. '_MAP' → logprob: -14.25002670288086
    8. 'map' → logprob: -14.50002670288086
    9. '_mapping' → logprob: -14.75002670288086
    10. '```' → logprob: -15.75002670288086

Token 239: '.items' (ID: 19607)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.4345850944519043
    2. '.items' → logprob: -1.3095850944519043
    3. 'in' → logprob: -3.0595850944519043
    4. '.' → logprob: -4.184585094451904
    5. ' in' → logprob: -4.434585094451904
    6. 'items' → logprob: -5.434585094451904
    7. ')}' → logprob: -5.809585094451904
    8. '.iteritems' → logprob: -7.309585094451904
    9. ' }' → logprob: -8.559585571289062
    10. ')' → logprob: -9.309585571289062

Token 240: '()' (ID: 416)
  Prédit: '()}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()}' → logprob: -0.0022703970316797495
    2. '}' → logprob: -6.377270221710205
    3. '()' → logprob: -7.502270221710205
    4. ' ()' → logprob: -11.377270698547363
    5. '(' → logprob: -13.377270698547363
    6. '()}
' → logprob: -13.752270698547363
    7. '`}' → logprob: -14.502270698547363
    8. '():' → logprob: -15.002270698547363
    9. ' }' → logprob: -15.127270698547363
    10. '()
' → logprob: -15.377270698547363

Token 241: '}

' (ID: 943)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -1.3856492842023727e-06
    2. ' }' → logprob: -14.000000953674316
    3. ')' → logprob: -14.750000953674316
    4. '}
' → logprob: -16.125001907348633
    5. ')}' → logprob: -17.125001907348633
    6. '})' → logprob: -17.750001907348633
    7. ',' → logprob: -19.375001907348633
    8. '`}' → logprob: -20.125001907348633
    9. '}}' → logprob: -20.250001907348633
    10. '}

' → logprob: -20.500001907348633

Token 242: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.183501293184236e-05
    2. '```' → logprob: -10.12507152557373
    3. 'de' → logprob: -10.87507152557373
    4. '
' → logprob: -12.25007152557373
    5. ' def' → logprob: -13.12507152557373
    6. 'import' → logprob: -13.37507152557373
    7. 'decode' → logprob: -13.37507152557373
    8. 'code' → logprob: -14.12507152557373
    9. 'decoded' → logprob: -14.87507152557373
    10. 'd' → logprob: -15.00007152557373

Token 243: ' encode' (ID: 31288)
  Prédit: ' encode'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' encode' → logprob: -0.0003460712905507535
    2. ' decode' → logprob: -8.250346183776855
    3. 'encode' → logprob: -9.625346183776855
    4. ' encrypt' → logprob: -11.625346183776855
    5. ' code' → logprob: -12.500346183776855
    6. '_encode' → logprob: -13.750346183776855
    7. ' text' → logprob: -14.250346183776855
    8. ' en' → logprob: -14.500346183776855
    9. ' cod' → logprob: -14.500346183776855
    10. ' def' → logprob: -14.500346183776855

Token 244: '(s' (ID: 1858)
  Prédit: '(text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(text' → logprob: -0.6905350089073181
    2. '_text' → logprob: -1.065535068511963
    3. '_message' → logprob: -3.065535068511963
    4. '(' → logprob: -3.190535068511963
    5. '(message' → logprob: -3.440535068511963
    6. '_string' → logprob: -3.565535068511963
    7. '_code' → logprob: -6.190535068511963
    8. '(data' → logprob: -6.565535068511963
    9. 'text' → logprob: -7.565535068511963
    10. '(input' → logprob: -7.690535068511963

Token 245: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009299254161305726
    2. ')' → logprob: -7.250929832458496
    3. '):
' → logprob: -8.750929832458496
    4. ':' → logprob: -10.625929832458496
    5. 'tring' → logprob: -10.750929832458496
    6. ' ):' → logprob: -12.000929832458496
    7. 'u' → logprob: -13.125929832458496
    8. 'string' → logprob: -13.375929832458496
    9. '_string' → logprob: -13.375929832458496
    10. '):

' → logprob: -13.750929832458496

Token 246: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01372008491307497
    2. ' encoded' → logprob: -4.3887200355529785
    3. 'encoded' → logprob: -7.3887200355529785
    4. ' return' → logprob: -7.6387200355529785
    5. ' result' → logprob: -9.638720512390137
    6. ' code' → logprob: -11.263720512390137
    7. '(encoded' → logprob: -12.388720512390137
    8. ' s' → logprob: -12.638720512390137
    9. '   ' → logprob: -12.888720512390137
    10. '	return' → logprob: -13.013720512390137

Token 247: ' s' (ID: 265)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.16201402246952057
    2. 'return' → logprob: -1.9120140075683594
    3. ' result' → logprob: -7.162014007568359
    4. 'result' → logprob: -8.03701400756836
    5. ' ''.' → logprob: -8.16201400756836
    6. 'encoded' → logprob: -9.03701400756836
    7. '   ' → logprob: -9.28701400756836
    8. ' encoded' → logprob: -9.66201400756836
    9. '''.' → logprob: -9.91201400756836
    10. ''' → logprob: -10.41201400756836

Token 248: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0904189795255661
    2. ' =' → logprob: -2.465419054031372
    3. '.' → logprob: -7.465418815612793
    4. '_encoded' → logprob: -7.590418815612793
    5. ' ' → logprob: -9.465418815612793
    6. '.encode' → logprob: -9.715418815612793
    7. '.upper' → logprob: -9.965418815612793
    8. ')' → logprob: -10.090418815612793
    9. 's' → logprob: -10.340418815612793
    10. 'encoded' → logprob: -10.590418815612793

Token 249: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.048587825149297714
    2. ' s' → logprob: -3.0485877990722656
    3. 'str' → logprob: -15.798587799072266
    4. '{s' → logprob: -16.548587799072266
    5. '(s' → logprob: -16.673587799072266
    6. '	s' → logprob: -16.798587799072266
    7. '_s' → logprob: -17.048587799072266
    8. 'uppercase' → logprob: -17.798587799072266
    9. ' ' → logprob: -18.048587799072266
    10. 'toupper' → logprob: -18.423587799072266

Token 250: '.upper' (ID: 75082)
  Prédit: '.upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.upper' → logprob: -0.003192685777321458
    2. '.' → logprob: -5.753192901611328
    3. 'upper' → logprob: -12.253192901611328
    4. ' .' → logprob: -12.253192901611328
    5. '.strip' → logprob: -12.628192901611328
    6. '.replace' → logprob: -13.753192901611328
    7. '.lower' → logprob: -14.128192901611328
    8. ' upper' → logprob: -15.628192901611328
    9. '.encode' → logprob: -17.003192901611328
    10. '.rstrip' → logprob: -17.753192901611328

Token 251: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -8.180258191714529e-06
    2. '())' → logprob: -12.375008583068848
    3. '()
' → logprob: -13.125008583068848
    4. '(' → logprob: -14.375008583068848
    5. '().' → logprob: -14.625008583068848
    6. '()`' → logprob: -15.000008583068848
    7. '(),' → logprob: -16.12500762939453
    8. ' ()' → logprob: -16.37500762939453
    9. '()

' → logprob: -16.37500762939453
    10. '()]' → logprob: -17.00000762939453

Token 252: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030628707259893417
    2. 'encoded' → logprob: -3.6556286811828613
    3. ' encoded' → logprob: -5.780628681182861
    4. 'result' → logprob: -7.405628681182861
    5. '
' → logprob: -8.78062915802002
    6. '    
' → logprob: -9.03062915802002
    7. ' result' → logprob: -9.28062915802002
    8. ' bits' → logprob: -9.90562915802002
    9. 'code' → logprob: -10.28062915802002
    10. ' code' → logprob: -10.65562915802002

Token 253: ' bits' (ID: 18189)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.07971327751874924
    2. 'encoded' → logprob: -3.3297133445739746
    3. 'result' → logprob: -3.4547133445739746
    4. ' return' → logprob: -4.954713344573975
    5. 'res' → logprob: -7.079713344573975
    6. 'bits' (adapté à ' bits') → logprob: -7.204713344573975
    7. ' encoded' → logprob: -8.079712867736816
    8. ' result' → logprob: -9.204712867736816
    9. 'code' → logprob: -10.079712867736816
    10. 'binary' → logprob: -10.579712867736816

Token 254: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4288981854915619
    2. ' =' → logprob: -1.0538982152938843
    3. '_' → logprob: -8.928897857666016
    4. '_encoded' → logprob: -10.553897857666016
    5. 'encoded' → logprob: -11.678897857666016
    6. 's' → logprob: -12.178897857666016
    7. '=''' → logprob: -12.928897857666016
    8. '_string' → logprob: -13.053897857666016
    9. ' ' → logprob: -13.053897857666016
    10. ')' → logprob: -13.178897857666016

Token 255: ' ''.' (ID: 105941)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.09162390977144241
    2. '""' → logprob: -2.5916240215301514
    3. ' ''' → logprob: -4.841623783111572
    4. '[]' → logprob: -5.966623783111572
    5. ' ""' → logprob: -6.716623783111572
    6. ' []' → logprob: -7.966623783111572
    7. '''.' → logprob: -8.21662425994873
    8. '"' → logprob: -8.34162425994873
    9. ''' → logprob: -9.71662425994873
    10. '[' → logprob: -9.96662425994873

Token 256: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -4.320199877838604e-07
    2. ' join' → logprob: -15.375
    3. '.join' → logprob: -16.125
    4. '''.' → logprob: -16.75
    5. '```' → logprob: -17.5
    6. '.' → logprob: -17.625
    7. 'j' → logprob: -18.625
    8. '(join' → logprob: -18.75
    9. 'jo' → logprob: -18.875
    10. 'concat' → logprob: -19.375

Token 257: '(code' (ID: 31208)
  Prédit: '(code'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(code' → logprob: -0.00047094907495193183
    2. '([' → logprob: -8.125471115112305
    3. 'code' → logprob: -8.750471115112305
    4. '(' → logprob: -11.125471115112305
    5. '[' → logprob: -14.000471115112305
    6. '((' → logprob: -15.125471115112305
    7. ' code' → logprob: -15.375471115112305
    8. '(
' → logprob: -15.625471115112305
    9. '(Code' → logprob: -16.000471115112305
    10. '(c' → logprob: -17.500471115112305

Token 258: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.0001446611131541431
    2. 'map' → logprob: -9.750144958496094
    3. '[s' → logprob: -10.125144958496094
    4. '[' → logprob: -11.375144958496094
    5. '[c' → logprob: -11.500144958496094
    6. 'Map' → logprob: -11.750144958496094
    7. '_code' → logprob: -12.125144958496094
    8. 'code' → logprob: -12.875144958496094
    9. '_MAP' → logprob: -13.250144958496094
    10. 's' → logprob: -13.375144958496094

Token 259: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.5249798893928528
    2. '.get' → logprob: -1.524979829788208
    3. '[ch' → logprob: -1.774979829788208
    4. '[' → logprob: -3.899979829788208
    5. '[s' → logprob: -7.149980068206787
    6. '(c' → logprob: -8.524979591369629
    7. '[(' → logprob: -10.774979591369629
    8. '(ch' → logprob: -11.149979591369629
    9. '[word' → logprob: -11.274979591369629
    10. '(char' → logprob: -11.774979591369629

Token 260: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008172504603862762
    2. '])' → logprob: -7.12581729888916
    3. 'for' → logprob: -12.12581729888916
    4. ')]' → logprob: -12.87581729888916
    5. ' ]' → logprob: -13.87581729888916
    6. ' for' → logprob: -13.87581729888916
    7. ')' → logprob: -14.25081729888916
    8. ']+' → logprob: -14.37581729888916
    9. ']]' → logprob: -14.50081729888916
    10. '']' → logprob: -15.50081729888916

Token 261: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.052598755806684494
    2. ' for' → logprob: -3.052598714828491
    3. ']' → logprob: -5.55259895324707
    4. ')' → logprob: -9.17759895324707
    5. 'if' → logprob: -11.42759895324707
    6. ' ' → logprob: -12.17759895324707
    7. '   ' → logprob: -13.30259895324707
    8. ' if' → logprob: -13.67759895324707
    9. 'or' → logprob: -14.42759895324707
    10. '	for' → logprob: -14.67759895324707

Token 262: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.038066282868385315
    2. 'c' → logprob: -3.2880663871765137
    3. ' s' → logprob: -10.913065910339355
    4. '	c' → logprob: -13.038065910339355
    5. ' ' → logprob: -13.163065910339355
    6. 's' → logprob: -13.288065910339355
    7. ' ' → logprob: -14.538065910339355
    8. ' in' → logprob: -16.163066864013672
    9. '<|end|>' → logprob: -16.788066864013672
    10. ')c' → logprob: -16.913066864013672

Token 263: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5953123569488525
    2. ' in' → logprob: -0.8453123569488525
    3. 's' → logprob: -4.095312118530273
    4. 'i' → logprob: -7.470312118530273
    5. 'n' → logprob: -7.470312118530273
    6. ' s' → logprob: -7.595312118530273
    7. ' ' → logprob: -7.720312118530273
    8. 'c' → logprob: -8.845312118530273
    9. ' i' → logprob: -9.470312118530273
    10. '  ' → logprob: -9.720312118530273

Token 264: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11282315850257874
    2. ' s' → logprob: -2.237823247909546
    3. '	s' → logprob: -15.737823486328125
    4. '(s' → logprob: -15.862823486328125
    5. ' ' → logprob: -15.987823486328125
    6. ')' → logprob: -16.925323486328125
    7. '
' → logprob: -17.112823486328125
    8. '_s' → logprob: -17.112823486328125
    9. '{s' → logprob: -17.237823486328125
    10. '<s' → logprob: -17.425323486328125

Token 265: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016074994346126914
    2. ' if' → logprob: -9.500161170959473
    3. ' )' → logprob: -10.000161170959473
    4. 'if' → logprob: -10.125161170959473
    5. '))' → logprob: -15.875161170959473
    6. ')
' → logprob: -15.875161170959473
    7. '   ' → logprob: -17.000160217285156
    8. ')}' → logprob: -17.375160217285156
    9. '),' → logprob: -17.500160217285156
    10. ')+' → logprob: -17.875160217285156

Token 266: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0070971776731312275
    2. ' return' → logprob: -5.382097244262695
    3. 'return' → logprob: -6.382097244262695
    4. '
' → logprob: -7.507097244262695
    5. '    
' → logprob: -8.882097244262695
    6. '  ' → logprob: -10.507097244262695
    7. '    ' → logprob: -10.757097244262695
    8. ' ' → logprob: -10.882097244262695
    9. '	return' → logprob: -12.257097244262695
    10. ')' → logprob: -12.257097244262695

Token 267: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.08084344863891602
    2. 'return' (adapté à ' return') → logprob: -2.580843448638916
    3. ' length' → logprob: -6.955843448638916
    4. ' n' → logprob: -7.455843448638916
    5. ' bytes' → logprob: -9.080842971801758
    6. ' padding' → logprob: -9.830842971801758
    7. ' bit' → logprob: -9.830842971801758
    8. '   ' → logprob: -10.080842971801758
    9. 'length' → logprob: -10.205842971801758
    10. ' byte' → logprob: -10.580842971801758

Token 268: ' bits' (ID: 18189)
  Prédit: ' bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bits' → logprob: -0.22603386640548706
    2. 'bits' → logprob: -1.6010339260101318
    3. ' int' → logprob: -7.976033687591553
    4. 'int' → logprob: -8.601034164428711
    5. '(bits' → logprob: -10.851034164428711
    6. ' bytes' → logprob: -11.101034164428711
    7. ' [' → logprob: -11.351034164428711
    8. ' bit' → logprob: -11.351034164428711
    9. 'bit' → logprob: -11.476034164428711
    10. 'bytes' → logprob: -12.101034164428711

Token 269: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3237795829772949
    2. '
' → logprob: -1.573779582977295
    3. '<|end|>' → logprob: -2.698779582977295
    4. '

' → logprob: -6.948779582977295
    5. '<|end|>' → logprob: -8.073780059814453
    6. ' def' → logprob: -8.698780059814453
    7. '#' → logprob: -9.448780059814453
    8. '.decode' → logprob: -10.198780059814453
    9. ' 
' → logprob: -10.198780059814453
    10. ')' → logprob: -10.323780059814453

Token 270: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00865097250789404
    2. '
' → logprob: -4.758650779724121
    3. ' def' → logprob: -11.133650779724121
    4. '

' → logprob: -11.633650779724121
    5. '  
' → logprob: -12.008650779724121
    6. '```' → logprob: -12.883650779724121
    7. '<|end|>' → logprob: -13.133650779724121
    8. '    
' → logprob: -13.758650779724121
    9. ' 
' → logprob: -14.758650779724121
    10. '
' → logprob: -15.633650779724121

Token 271: ' decode' (ID: 32043)
  Prédit: ' decode'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' decode' → logprob: -0.02975928969681263
    2. 'decode' → logprob: -3.529759407043457
    3. '_decode' → logprob: -12.779759407043457
    4. ' def' → logprob: -12.904759407043457
    5. ' encode' → logprob: -13.154759407043457
    6. '.decode' → logprob: -15.279759407043457
    7. 'def' → logprob: -15.404759407043457
    8. 'encode' → logprob: -15.654759407043457
    9. ' decoder' → logprob: -15.779759407043457
    10. ' decoding' → logprob: -15.779759407043457

Token 272: '(bits' (ID: 170698)
  Prédit: '(bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bits' → logprob: -0.0038469864521175623
    2. '(s' → logprob: -6.003847122192383
    3. '(' → logprob: -7.003847122192383
    4. ' (' → logprob: -8.253847122192383
    5. '(b' → logprob: -8.878847122192383
    6. '(bit' → logprob: -10.128847122192383
    7. '(encoded' → logprob: -11.253847122192383
    8. '(code' → logprob: -11.753847122192383
    9. '(binary' → logprob: -13.753847122192383
    10. '(bin' → logprob: -15.753847122192383

Token 273: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00483273807913065
    2. '):
' → logprob: -5.379832744598389
    3. ' ):' → logprob: -8.50483226776123
    4. ':' → logprob: -12.62983226776123
    5. ')' → logprob: -12.75483226776123
    6. '):
' → logprob: -13.87983226776123
    7. 's' → logprob: -14.00483226776123
    8. '):

' → logprob: -14.00483226776123
    9. ' ):
' → logprob: -14.37983226776123
    10. '}:' → logprob: -15.87983226776123

Token 274: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14123152196407318
    2. ' s' → logprob: -3.1412315368652344
    3. 's' → logprob: -3.6412315368652344
    4. ' result' → logprob: -4.266231536865234
    5. 'decoded' → logprob: -4.641231536865234
    6. ' res' → logprob: -4.891231536865234
    7. 'result' → logprob: -5.016231536865234
    8. ' chars' → logprob: -5.141231536865234
    9. ' decoded' → logprob: -5.141231536865234
    10. 'chars' → logprob: -5.516231536865234

Token 275: ' res' (ID: 694)
  Prédit: 'chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chars' → logprob: -0.26583635807037354
    2. 'decoded' → logprob: -2.140836238861084
    3. 'res' (adapté à ' res') → logprob: -3.390836238861084
    4. 'result' → logprob: -3.515836238861084
    5. 's' → logprob: -3.765836238861084
    6. 'return' → logprob: -4.140836238861084
    7. ' chars' → logprob: -5.015836238861084
    8. 'n' → logprob: -5.515836238861084
    9. 'chunks' → logprob: -7.265836238861084
    10. '   ' → logprob: -7.515836238861084

Token 276: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740939140319824
    2. '=' → logprob: -0.9740939140319824
    3. 's' → logprob: -11.84909439086914
    4. '_' → logprob: -12.72409439086914
    5. '=[]' → logprob: -13.22409439086914
    6. ' ' → logprob: -14.09909439086914
    7. ',' → logprob: -14.09909439086914
    8. ' +=' → logprob: -14.59909439086914
    9. '  ' → logprob: -14.72409439086914
    10. '=""' → logprob: -14.72409439086914

Token 277: ' []
' (ID: 8911)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.0009879115968942642
    2. '""' → logprob: -7.000988006591797
    3. '''.' → logprob: -10.000988006591797
    4. '[]' → logprob: -10.750988006591797
    5. '''
' → logprob: -12.250988006591797
    6. '"' → logprob: -13.125988006591797
    7. ' ''' → logprob: -13.375988006591797
    8. ''' → logprob: -14.000988006591797
    9. '[' → logprob: -15.125988006591797
    10. ''',' → logprob: -15.750988006591797

Token 278: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22582243382930756
    2. 'for' → logprob: -1.7258224487304688
    3. ' for' → logprob: -3.7258224487304688
    4. 'i' → logprob: -11.725822448730469
    5. '
' → logprob: -11.850822448730469
    6. ' i' → logprob: -13.100822448730469
    7. '	for' → logprob: -14.100822448730469
    8. 'while' → logprob: -14.100822448730469
    9. 'n' → logprob: -14.600822448730469
    10. ',' → logprob: -15.225822448730469

Token 279: ' idx' (ID: 14016)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00011069540778407827
    2. ' for' → logprob: -9.500110626220703
    3. 'i' → logprob: -10.750110626220703
    4. '   ' → logprob: -11.250110626220703
    5. 'n' → logprob: -14.250110626220703
    6. 'while' → logprob: -14.750110626220703
    7. '
' → logprob: -15.375110626220703
    8. '	for' → logprob: -16.375110626220703
    9. ' i' → logprob: -18.875110626220703
    10. '    
' → logprob: -20.875110626220703

Token 280: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759411454200745
    2. '=' → logprob: -0.8259411454200745
    3. '0' → logprob: -14.20094108581543
    4. ' ' → logprob: -14.32594108581543
    5. '   ' → logprob: -15.70094108581543
    6. ',' → logprob: -16.57594108581543
    7. ')' → logprob: -16.70094108581543
    8. ' +=' → logprob: -16.82594108581543
    9. ' =
' → logprob: -17.20094108581543
    10. 'for' → logprob: -17.57594108581543

Token 281: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -19.750158309936523
    4. '000' → logprob: -20.125158309936523
    5. '00' → logprob: -20.500158309936523
    6. '۰' → logprob: -20.875158309936523
    7. '=' → logprob: -21.000158309936523
    8. ' ' → logprob: -21.125158309936523
    9. '```' → logprob: -21.375158309936523
    10. '[' → logprob: -21.812658309936523

Token 282: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -21.375
    4. '000' → logprob: -21.625
    5. '۰' → logprob: -21.75
    6. '=' → logprob: -22.125
    7. '[' → logprob: -22.5
    8. '00' → logprob: -22.625
    9. '   ' → logprob: -23.0
    10. '`' → logprob: -23.1875

Token 283: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5349075794219971
    2. '
' → logprob: -1.659907579421997
    3. 'while' → logprob: -2.284907579421997
    4. ' while' → logprob: -2.284907579421997
    5. '    
' → logprob: -4.784907341003418
    6. ' 
' → logprob: -5.034907341003418
    7. '	while' → logprob: -6.409907341003418
    8. ' ' → logprob: -6.784907341003418
    9. '   
' → logprob: -7.284907341003418
    10. '  
' → logprob: -7.409907341003418

Token 284: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2936713397502899
    2. 'while' → logprob: -1.6686713695526123
    3. ' while' → logprob: -2.7936713695526123
    4. '	while' → logprob: -5.793671131134033
    5. '
' → logprob: -6.418671131134033
    6. '    
' → logprob: -10.793671607971191
    7. '```' → logprob: -10.793671607971191
    8. 'n' → logprob: -11.293671607971191
    9. '    ' → logprob: -11.543671607971191
    10. ',' → logprob: -12.293671607971191

Token 285: ' n' (ID: 297)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.16220338642597198
    2. ' while' → logprob: -1.9122034311294556
    3. '   ' → logprob: -6.412203311920166
    4. 'n' (adapté à ' n') → logprob: -8.162203788757324
    5. '
' → logprob: -10.162203788757324
    6. ' n' → logprob: -12.037203788757324
    7. 'length' → logprob: -12.537203788757324
    8. '```' → logprob: -13.412203788757324
    9. '	while' → logprob: -14.912203788757324
    10. ' length' → logprob: -15.537203788757324

Token 286: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2521078288555145
    2. '=' → logprob: -1.502107858657837
    3. ' ' → logprob: -9.127107620239258
    4. '=len' → logprob: -10.502107620239258
    5. '   ' → logprob: -11.127107620239258
    6. ' =
' → logprob: -11.252107620239258
    7. ' +=' → logprob: -13.002107620239258
    8. '  ' → logprob: -13.502107620239258
    9. ' >' → logprob: -13.502107620239258
    10. '>' → logprob: -13.752107620239258

Token 287: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.3868728280067444
    2. 'len' → logprob: -1.1368727684020996
    3. '(len' → logprob: -13.511873245239258
    4. '=len' → logprob: -15.511873245239258
    5. '	len' → logprob: -15.886873245239258
    6. '[len' → logprob: -16.261873245239258
    7. ',len' → logprob: -17.761873245239258
    8. '<len' → logprob: -18.261873245239258
    9. '   ' → logprob: -19.136873245239258
    10. 'leni' → logprob: -21.636873245239258

Token 288: '(bits' (ID: 170698)
  Prédit: '(bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bits' → logprob: -6.790129555156454e-05
    2. '(' → logprob: -9.625067710876465
    3. 'bits' → logprob: -13.625067710876465
    4. '(bit' → logprob: -15.375067710876465
    5. '(b' → logprob: -15.875067710876465
    6. '(parts' → logprob: -16.37506866455078
    7. ' (' → logprob: -16.50006866455078
    8. '(bounds' → logprob: -17.00006866455078
    9. ' bits' → logprob: -17.12506866455078
    10. '(
' → logprob: -18.50006866455078

Token 289: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010854477295652032
    2. ')
' → logprob: -7.12608528137207
    3. '   ' → logprob: -9.00108528137207
    4. ' )' → logprob: -9.37608528137207
    5. '
' → logprob: -9.62608528137207
    6. '```' → logprob: -13.37608528137207
    7. '')' → logprob: -14.12608528137207
    8. 'while' → logprob: -14.25108528137207
    9. ' ' → logprob: -14.50108528137207
    10. 'def' → logprob: -14.62608528137207

Token 290: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09487591683864594
    2. ' while' → logprob: -2.8448758125305176
    3. 'while' → logprob: -3.4698758125305176
    4. '	while' → logprob: -7.094875812530518
    5. '
' → logprob: -8.344876289367676
    6. '    
' → logprob: -9.594876289367676
    7. '```' → logprob: -9.969876289367676
    8. '    ' → logprob: -10.344876289367676
    9. ' ' → logprob: -11.219876289367676
    10. ' 
' → logprob: -11.844876289367676

Token 291: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.2560787498950958
    2. 'while' (adapté à ' while') → logprob: -1.5060787200927734
    3. '   ' → logprob: -5.506078720092773
    4. '
' → logprob: -9.631078720092773
    5. '	while' → logprob: -12.256078720092773
    6. ' 
' → logprob: -12.506078720092773
    7. '```' → logprob: -12.881078720092773
    8. '    
' → logprob: -13.756078720092773
    9. '    ' → logprob: -14.881078720092773
    10. 'While' → logprob: -15.381078720092773

Token 292: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.20141403377056122
    2. 'idx' → logprob: -1.7014139890670776
    3. '	idx' → logprob: -14.701414108276367
    4. '(idx' → logprob: -15.576414108276367
    5. 'n' → logprob: -16.326414108276367
    6. ' n' → logprob: -17.201414108276367
    7. ' True' → logprob: -17.576414108276367
    8. ' index' → logprob: -18.826414108276367
    9. 'index' → logprob: -19.326414108276367
    10. '_idx' → logprob: -19.326414108276367

Token 293: ' <' (ID: 464)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7464678287506104
    2. '<' → logprob: -1.6214678287506104
    3. '<=' → logprob: -1.6214678287506104
    4. ' <=' → logprob: -2.4964678287506104
    5. ' <' → logprob: -3.2464678287506104
    6. ' +' → logprob: -4.746467590332031
    7. '<len' → logprob: -8.871467590332031
    8. ' ' → logprob: -8.996467590332031
    9. '+=' → logprob: -9.496467590332031
    10. '   ' → logprob: -9.496467590332031

Token 294: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.011047935113310814
    2. ' n' → logprob: -4.511047840118408
    3. '	n' → logprob: -17.01104736328125
    4. 'len' → logprob: -17.88604736328125
    5. '```' → logprob: -18.13604736328125
    6. '
' → logprob: -18.26104736328125
    7. 'idx' → logprob: -18.51104736328125
    8. '_n' → logprob: -19.13604736328125
    9. ')n' → logprob: -19.26104736328125
    10. '(n' → logprob: -19.26104736328125

Token 295: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23076020181179047
    2. ':
' → logprob: -1.6057602167129517
    3. ' and' → logprob: -5.730760097503662
    4. '+' → logprob: -7.105760097503662
    5. '   ' → logprob: -7.105760097503662
    6. 'and' → logprob: -7.855760097503662
    7. '=' → logprob: -11.48076057434082
    8. ' +' → logprob: -11.73076057434082
    9. ' :' → logprob: -11.73076057434082
    10. ':

' → logprob: -11.98076057434082

Token 296: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2575170695781708
    2. 'chunk' → logprob: -2.007517099380493
    3. ' chunk' → logprob: -2.757517099380493
    4. 'token' → logprob: -4.757516860961914
    5. ' token' → logprob: -5.132516860961914
    6. '   ' → logprob: -5.382516860961914
    7. ' res' → logprob: -6.132516860961914
    8. ' segment' → logprob: -6.382516860961914
    9. ' code' → logprob: -6.632516860961914
    10. 'segment' → logprob: -6.882516860961914

Token 297: ' for' (ID: 395)
  Prédit: 'chunk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chunk' → logprob: -0.028471853584051132
    2. ' chunk' → logprob: -4.153471946716309
    3. 'segment' → logprob: -4.778471946716309
    4. 'code' → logprob: -6.028471946716309
    5. 'token' → logprob: -7.778471946716309
    6. 'char' → logprob: -8.403471946716309
    7. ' segment' → logprob: -8.653471946716309
    8. 'ch' → logprob: -8.778471946716309
    9. 'seg' → logprob: -8.903471946716309
    10. '   ' → logprob: -8.903471946716309

Token 298: ' length' (ID: 5517)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6736461520195007
    2. 'length' → logprob: -0.9236461520195007
    3. ' length' → logprob: -3.0486462116241455
    4. 'i' → logprob: -3.2986462116241455
    5. 'size' → logprob: -5.548645973205566
    6. ' l' → logprob: -5.923645973205566
    7. '5' → logprob: -6.923645973205566
    8. ' size' → logprob: -7.798645973205566
    9. ' i' → logprob: -7.798645973205566
    10. 'chunk' → logprob: -9.548645973205566

Token 299: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1128569096326828
    2. 'in' → logprob: -2.237856864929199
    3. '1' → logprob: -11.3628568649292
    4. ',' → logprob: -12.1128568649292
    5. '   ' → logprob: -12.4878568649292
    6. ' ' → logprob: -12.6128568649292
    7. '=' → logprob: -12.8628568649292
    8. 'In' → logprob: -13.6128568649292
    9. '_in' → logprob: -13.6128568649292
    10. '(' → logprob: -13.8628568649292

Token 300: ' range' (ID: 3352)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12019983679056168
    2. 'range' → logprob: -2.2451999187469482
    3. '5' → logprob: -5.745199680328369
    4. ' range' → logprob: -5.870199680328369
    5. '{' → logprob: -6.870199680328369
    6. ' [' → logprob: -8.495200157165527
    7. '(' → logprob: -9.745200157165527
    8. '[
' → logprob: -11.370200157165527
    9. ' ' → logprob: -12.120200157165527
    10. '   ' → logprob: -12.620200157165527

Token 301: '(' (ID: 7)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -0.014258584938943386
    2. '1' → logprob: -4.26425838470459
    3. ' ' → logprob: -10.01425838470459
    4. '2' → logprob: -10.88925838470459
    5. '3' → logprob: -11.38925838470459
    6. '0' → logprob: -12.26425838470459
    7. '4' → logprob: -12.26425838470459
    8. '   ' → logprob: -12.63925838470459
    9. '
' → logprob: -13.26425838470459
    10. '    ' → logprob: -14.07675838470459

Token 302: '5' (ID: 20)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6945784091949463
    2. '5' → logprob: -0.6945784091949463
    3. '2' → logprob: -6.819578170776367
    4. '3' → logprob: -8.569578170776367
    5. '4' → logprob: -9.819578170776367
    6. '6' → logprob: -11.194578170776367
    7. '
' → logprob: -11.194578170776367
    8. '0' → logprob: -11.444578170776367
    9. '10' → logprob: -11.882078170776367
    10. '15' → logprob: -12.194578170776367

Token 303: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007309010834433138
    2. ' ,' → logprob: -7.250730991363525
    3. '5' → logprob: -11.625730514526367
    4. ',
' → logprob: -12.375730514526367
    5. '):' → logprob: -13.000730514526367
    6. '6' → logprob: -13.125730514526367
    7. '1' → logprob: -13.500730514526367
    8. '0' → logprob: -14.625730514526367
    9. '):
' → logprob: -14.750730514526367
    10. '   ' → logprob: -15.125730514526367

Token 304: '2' (ID: 17)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.04308677092194557
    2. '0' → logprob: -3.1680867671966553
    3. '4' → logprob: -10.168087005615234
    4. '10' → logprob: -11.043087005615234
    5. '5' → logprob: -11.543087005615234
    6. '1' → logprob: -12.793087005615234
    7. 'len' → logprob: -12.918087005615234
    8. ' ' → logprob: -12.980587005615234
    9. '```' → logprob: -13.355587005615234
    10. '
' → logprob: -13.355587005615234

Token 305: ',-' (ID: 8202)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.27500006556510925
    2. '-' → logprob: -1.5250000953674316
    3. ',' → logprob: -4.150000095367432
    4. ' -' → logprob: -5.525000095367432
    5. '0' → logprob: -6.150000095367432
    6. '8' → logprob: -8.149999618530273
    7. '6' → logprob: -8.899999618530273
    8. '2' → logprob: -9.024999618530273
    9. ',-' → logprob: -9.149999618530273
    10. ' ' → logprob: -9.524999618530273

Token 306: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.968312951968983e-06
    2. '2' → logprob: -12.250009536743164
    3. '-' → logprob: -12.625009536743164
    4. ' ' → logprob: -14.125009536743164
    5. ')' → logprob: -14.250009536743164
    6. ' -' → logprob: -15.000009536743164
    7. '4' → logprob: -15.875009536743164
    8. '0' → logprob: -17.875009536743164
    9. '```' → logprob: -18.250009536743164
    10. '>' → logprob: -18.500009536743164

Token 307: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0051786089316010475
    2. '-' → logprob: -5.630178451538086
    3. '):
' → logprob: -7.005178451538086
    4. '):-' → logprob: -7.755178451538086
    5. '1' → logprob: -9.880178451538086
    6. ' -' → logprob: -10.005178451538086
    7. ':' → logprob: -10.130178451538086
    8. ',-' → logprob: -10.130178451538086
    9. ' ):' → logprob: -10.505178451538086
    10. ')' → logprob: -11.255178451538086

Token 308: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4452812075614929
    2. '       ' → logprob: -1.6952812671661377
    3. ':' → logprob: -1.8202812671661377
    4. ' :' → logprob: -4.820281028747559
    5. ':
' → logprob: -5.820281028747559
    6. '):' → logprob: -6.945281028747559
    7. '        ' → logprob: -8.195281028747559
    8. ',' → logprob: -8.445281028747559
    9. ' :
' → logprob: -8.445281028747559
    10. '   ' → logprob: -8.695281028747559

Token 309: ' if' (ID: 538)
  Prédit: 'chunk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chunk' → logprob: -0.5268586874008179
    2. ' chunk' → logprob: -1.5268586874008179
    3. ' if' → logprob: -2.7768588066101074
    4. 'if' (adapté à ' if') → logprob: -2.9018588066101074
    5. ' segment' → logprob: -3.9018588066101074
    6. 'segment' → logprob: -3.9018588066101074
    7. 'token' → logprob: -4.776858806610107
    8. '       ' → logprob: -5.151858806610107
    9. ' token' → logprob: -5.776858806610107
    10. ' code' → logprob: -5.776858806610107

Token 310: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.42888566851615906
    2. ' idx' → logprob: -1.0538856983184814
    3. '	idx' → logprob: -9.678885459899902
    4. 'n' → logprob: -10.053885459899902
    5. '(idx' → logprob: -10.553885459899902
    6. ' n' → logprob: -11.303885459899902
    7. 'bits' → logprob: -11.678885459899902
    8. ' bits' → logprob: -11.678885459899902
    9. 'index' → logprob: -12.053885459899902
    10. ' (' → logprob: -12.303885459899902

Token 311: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03804286941885948
    2. ' +' → logprob: -3.2880427837371826
    3. '<=' → logprob: -14.663043022155762
    4. '   ' → logprob: -15.788043022155762
    5. ' <=' → logprob: -15.788043022155762
    6. ' ' → logprob: -16.038042068481445
    7. '+
' → logprob: -16.038042068481445
    8. '+n' → logprob: -16.038042068481445
    9. '+s' → logprob: -16.788042068481445
    10. '+l' → logprob: -17.163042068481445

Token 312: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -2.7014437364414334e-05
    2. '5' → logprob: -11.00002670288086
    3. ' length' → logprob: -11.50002670288086
    4. '(length' → logprob: -16.50002670288086
    5. 'len' → logprob: -17.25002670288086
    6. 'leng' → logprob: -18.75002670288086
    7. 'ength' → logprob: -19.50002670288086
    8. 'le' → logprob: -19.62502670288086
    9. 'l' → logprob: -19.87502670288086
    10. '```' → logprob: -20.00002670288086

Token 313: '<=' (ID: 16672)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.16024452447891235
    2. '<=' → logprob: -1.9102444648742676
    3. ' >' → logprob: -11.410244941711426
    4. '>' → logprob: -12.035244941711426
    5. ')<=' → logprob: -13.785244941711426
    6. ' ' → logprob: -13.910244941711426
    7. ')' → logprob: -14.285244941711426
    8. ']<=' → logprob: -14.785244941711426
    9. '[' → logprob: -15.910244941711426
    10. '```' → logprob: -16.28524398803711

Token 314: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0001246348983841017
    2. ' n' → logprob: -9.00012493133545
    3. 'idx' → logprob: -14.25012493133545
    4. 'len' → logprob: -14.62512493133545
    5. '
' → logprob: -17.750123977661133
    6. '	n' → logprob: -18.375123977661133
    7. 'length' → logprob: -19.625123977661133
    8. ')n' → logprob: -19.875123977661133
    9. '```' → logprob: -20.625123977661133
    10. 'index' → logprob: -21.000123977661133

Token 315: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.018038960173726082
    2. 'and' → logprob: -4.393038749694824
    3. ':
' → logprob: -5.768038749694824
    4. ':' → logprob: -6.143038749694824
    5. '           ' → logprob: -8.518038749694824
    6. '               ' → logprob: -10.893038749694824
    7. '       ' → logprob: -11.893038749694824
    8. ' ' → logprob: -13.018038749694824
    9. ' :' → logprob: -13.268038749694824
    10. ' :
' → logprob: -13.393038749694824

Token 316: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008869239129126072
    2. '           ' → logprob: -5.633869171142578
    3. ' token' → logprob: -6.008869171142578
    4. ' tokens' → logprob: -6.883869171142578
    5. ',' → logprob: -7.883869171142578
    6. 'token' → logprob: -8.008869171142578
    7. ' code' → logprob: -8.133869171142578
    8. '<|end|>' → logprob: -8.508869171142578
    9. 'tokens' → logprob: -8.758869171142578
    10. ' and' → logprob: -9.508869171142578

Token 317: ' piece' (ID: 9047)
  Prédit: ' chunk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chunk' → logprob: -0.6863425374031067
    2. 'chunk' → logprob: -1.561342477798462
    3. ' segment' → logprob: -1.936342477798462
    4. ' fragment' → logprob: -2.811342477798462
    5. 'segment' → logprob: -3.686342477798462
    6. ' code' → logprob: -3.811342477798462
    7. ' token' → logprob: -4.686342716217041
    8. ' snippet' → logprob: -4.811342716217041
    9. 'token' → logprob: -5.061342716217041
    10. 'code' → logprob: -6.061342716217041

Token 318: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020806640386581
    2. ' =' → logprob: -2.350208044052124
    3. '=
' → logprob: -14.225208282470703
    4. '   ' → logprob: -15.225208282470703
    5. ' ' → logprob: -15.975208282470703
    6. '=

' → logprob: -16.350208282470703
    7. ' =
' → logprob: -16.475208282470703
    8. '    ' → logprob: -16.850208282470703
    9. '           ' → logprob: -17.350208282470703
    10. '	' → logprob: -17.350208282470703

Token 319: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.10021205991506577
    2. ' bits' → logprob: -2.3502120971679688
    3. '(bits' → logprob: -12.725212097167969
    4. 'bit' → logprob: -14.350212097167969
    5. '   ' → logprob: -14.850212097167969
    6. '_bits' → logprob: -14.975212097167969
    7. '`' → logprob: -14.975212097167969
    8. '```' → logprob: -15.225212097167969
    9. '.bits' → logprob: -15.600212097167969
    10. 'Bits' → logprob: -15.975212097167969

Token 320: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -4.842555426876061e-06
    2. '[' → logprob: -12.750004768371582
    3. 'idx' → logprob: -13.250004768371582
    4. ' [' → logprob: -16.8750057220459
    5. ' idx' → logprob: -17.1250057220459
    6. '[i' → logprob: -17.8750057220459
    7. '(idx' → logprob: -18.3750057220459
    8. '[
' → logprob: -18.5000057220459
    9. '[index' → logprob: -19.6250057220459
    10. '```' → logprob: -19.8750057220459

Token 321: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.054500666621607e-06
    2. ' :' → logprob: -13.25000286102295
    3. '   ' → logprob: -14.37500286102295
    4. 'idx' → logprob: -14.50000286102295
    5. '       ' → logprob: -17.125003814697266
    6. '+' → logprob: -17.625003814697266
    7. '           ' → logprob: -18.000003814697266
    8. '	idx' → logprob: -18.000003814697266
    9. '[idx' → logprob: -18.125003814697266
    10. ' ' → logprob: -18.125003814697266

Token 322: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.1472419600977446e-06
    2. ' idx' → logprob: -13.750000953674316
    3. '(idx' → logprob: -17.375001907348633
    4. '
' → logprob: -17.625001907348633
    5. '               ' → logprob: -17.875001907348633
    6. '           ' → logprob: -18.125001907348633
    7. '	idx' → logprob: -18.250001907348633
    8. '                   ' → logprob: -18.250001907348633
    9. '   ' → logprob: -18.625001907348633
    10. 'index' → logprob: -19.375001907348633

Token 323: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0001242772996192798
    2. ' +' → logprob: -9.000123977661133
    3. '   ' → logprob: -14.375123977661133
    4. '+
' → logprob: -15.875123977661133
    5. '           ' → logprob: -17.000123977661133
    6. '       ' → logprob: -17.125123977661133
    7. 'idx' → logprob: -17.375123977661133
    8. ']+' → logprob: -17.500123977661133
    9. '＋' → logprob: -19.125123977661133
    10. '
' → logprob: -19.250123977661133

Token 324: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -1.981667537620524e-06
    2. '5' → logprob: -13.750001907348633
    3. ' length' → logprob: -14.000001907348633
    4. '(length' → logprob: -19.875001907348633
    5. 'leng' → logprob: -21.375001907348633
    6. '   ' → logprob: -21.875001907348633
    7. '[length' → logprob: -22.000001907348633
    8. 'len' → logprob: -22.500001907348633
    9. 'ength' → logprob: -23.125001907348633
    10. '	length' → logprob: -23.250001907348633

Token 325: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.47438520193099976
    2. ']' → logprob: -0.9743852019309998
    3. ']
' → logprob: -8.724385261535645
    4. '               ' → logprob: -9.224385261535645
    5. ']

' → logprob: -10.974385261535645
    6. '           ' → logprob: -11.099385261535645
    7. '       ' → logprob: -12.224385261535645
    8. '                   ' → logprob: -12.724385261535645
    9. '']' → logprob: -13.224385261535645
    10. '']
' → logprob: -14.099385261535645

Token 326: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0024079931899905205
    2. '       ' → logprob: -6.627408027648926
    3. ' if' → logprob: -7.252408027648926
    4. '           ' → logprob: -8.502408027648926
    5. '                   ' → logprob: -10.127408027648926
    6. '<|end|>' → logprob: -10.627408027648926
    7. '                
' → logprob: -10.627408027648926
    8. '   ' → logprob: -11.002408027648926
    9. '
' → logprob: -11.252408027648926
    10. ' ' → logprob: -11.377408027648926

Token 327: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5998801589012146
    2. 'if' (adapté à ' if') → logprob: -1.2248802185058594
    3. '               ' → logprob: -1.8498802185058594
    4. '                   ' → logprob: -10.47488021850586
    5. '           ' → logprob: -11.34988021850586
    6. '       ' → logprob: -11.34988021850586
    7. ' ' → logprob: -12.09988021850586
    8. '   ' → logprob: -12.34988021850586
    9. 'try' → logprob: -12.59988021850586
    10. ' try' → logprob: -13.22488021850586

Token 328: ' piece' (ID: 9047)
  Prédit: ' piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' piece' → logprob: -0.07892140746116638
    2. 'piece' → logprob: -2.578921318054199
    3. '(piece' → logprob: -10.4539213180542
    4. 'len' → logprob: -13.5789213180542
    5. ' len' → logprob: -14.5789213180542
    6. '_piece' → logprob: -15.2039213180542
    7. 'rev' → logprob: -15.3289213180542
    8. 'piec' → logprob: -15.8289213180542
    9. ' pie' → logprob: -16.078922271728516
    10. 'Piece' → logprob: -17.078922271728516

Token 329: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009823382832109928
    2. 'in' → logprob: -4.634823322296143
    3. ' ' → logprob: -9.8848237991333
    4. ')' → logprob: -11.5098237991333
    5. ']' → logprob: -13.6348237991333
    6. '<|end|>' → logprob: -14.0098237991333
    7. '	in' → logprob: -14.3848237991333
    8. 'n' → logprob: -14.5098237991333
    9. ' )' → logprob: -14.5098237991333
    10. ' i' → logprob: -14.6348237991333

Token 330: ' rev' (ID: 10808)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.020802639424800873
    2. ' rev' → logprob: -3.8958027362823486
    3. 'code' → logprob: -8.52080249786377
    4. ' code' → logprob: -10.27080249786377
    5. '
' → logprob: -10.77080249786377
    6. '.rev' → logprob: -13.02080249786377
    7. '_rev' → logprob: -13.27080249786377
    8. '   ' → logprob: -14.02080249786377
    9. 'reverse' → logprob: -14.77080249786377
    10. '```' → logprob: -16.270803451538086

Token 331: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: 0.0
    2. '_' → logprob: -18.375
    3. '_m' → logprob: -19.125
    4. '_rev' → logprob: -19.125
    5. 'rev' → logprob: -20.25
    6. '_code' → logprob: -20.25
    7. '_MAP' → logprob: -20.625
    8. 'map' → logprob: -20.75
    9. '_maps' → logprob: -20.875
    10. '
' → logprob: -21.875

Token 332: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25201472640037537
    2. ':
' → logprob: -1.5020147562026978
    3. ':return' → logprob: -10.252015113830566
    4. '):
' → logprob: -11.252015113830566
    5. '):' → logprob: -11.502015113830566
    6. ' :' → logprob: -12.002015113830566
    7. ':

' → logprob: -12.252015113830566
    8. '           ' → logprob: -12.502015113830566
    9. ' :
' → logprob: -12.752015113830566
    10. ' and' → logprob: -13.127015113830566

Token 333: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00024989593657664955
    2. 'res' → logprob: -8.875249862670898
    3. ' res' → logprob: -10.125249862670898
    4. '               ' → logprob: -10.750249862670898
    5. ' return' → logprob: -11.500249862670898
    6. 'return' → logprob: -11.625249862670898
    7. '                       ' → logprob: -11.625249862670898
    8. '                  ' → logprob: -12.000249862670898
    9. '           ' → logprob: -12.375249862670898
    10. '                    
' → logprob: -13.125249862670898

Token 334: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.21804246306419373
    2. 'res' (adapté à ' res') → logprob: -1.9680424928665161
    3. '                       ' → logprob: -3.4680423736572266
    4. '                   ' → logprob: -3.7180423736572266
    5. '
' → logprob: -7.468042373657227
    6. '               ' → logprob: -10.218042373657227
    7. '           ' → logprob: -10.593042373657227
    8. '   ' → logprob: -10.843042373657227
    9. '       ' → logprob: -11.093042373657227
    10. '                    
' → logprob: -11.343042373657227

Token 335: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.011054890230298042
    2. '.' → logprob: -4.511054992675781
    3. '.Append' → logprob: -12.386054992675781
    4. 'append' → logprob: -13.761054992675781
    5. '.app' → logprob: -14.261054992675781
    6. '.extend' → logprob: -14.761054992675781
    7. 'Append' → logprob: -15.386054992675781
    8. ').' → logprob: -15.511054992675781
    9. '_append' → logprob: -16.01105499267578
    10. ' .' → logprob: -16.26105499267578

Token 336: '(re' (ID: 8178)
  Prédit: '(re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -7.803360495017841e-05
    2. '(' → logprob: -9.500078201293945
    3. 'rev' → logprob: -13.250078201293945
    4. '(
' → logprob: -13.875078201293945
    5. '(rep' → logprob: -15.750078201293945
    6. '(reverse' → logprob: -16.000078201293945
    7. ' (' → logprob: -16.000078201293945
    8. ' rev' → logprob: -17.250078201293945
    9. '(rem' → logprob: -17.625078201293945
    10. '(res' → logprob: -17.875078201293945

Token 337: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00020783171930816025
    2. '_map' → logprob: -8.500207901000977
    3. 'map' → logprob: -13.375207901000977
    4. 'p' → logprob: -14.375207901000977
    5. 'ev' → logprob: -14.625207901000977
    6. 's' → logprob: -14.875207901000977
    7. 'f' → logprob: -15.125207901000977
    8. '[' → logprob: -15.500207901000977
    9. 'q' → logprob: -15.500207901000977
    10. 'm' → logprob: -15.750207901000977

Token 338: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -2.45848218582978e-06
    2. 'map' → logprob: -13.62500286102295
    3. 'piece' → logprob: -14.75000286102295
    4. '_piece' → logprob: -15.62500286102295
    5. '_MAP' → logprob: -16.000001907348633
    6. 'Map' → logprob: -16.000001907348633
    7. '_' → logprob: -16.500001907348633
    8. 'emap' → logprob: -17.125001907348633
    9. 'ap' → logprob: -17.250001907348633
    10. '(piece' → logprob: -17.625001907348633

Token 339: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -9.253090865968261e-06
    2. '[' → logprob: -11.750009536743164
    3. '(piece' → logprob: -14.000009536743164
    4. '[
' → logprob: -16.000009536743164
    5. ' [' → logprob: -16.125009536743164
    6. '[(' → logprob: -17.375009536743164
    7. 'p' → logprob: -17.750009536743164
    8. '(p' → logprob: -17.750009536743164
    9. ')' → logprob: -17.875009536743164
    10. '][' → logprob: -17.875009536743164

Token 340: 'iece' (ID: 12778)
  Prédit: 'iece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iece' → logprob: -3.249780638725497e-05
    2. 'piece' → logprob: -11.125032424926758
    3. 'ece' → logprob: -11.375032424926758
    4. 'ie' → logprob: -12.875032424926758
    5. 'ieces' → logprob: -14.000032424926758
    6. '```' → logprob: -14.000032424926758
    7. 'e' → logprob: -15.250032424926758
    8. ']' → logprob: -15.250032424926758
    9. '(piece' → logprob: -15.625032424926758
    10. '[' → logprob: -15.625032424926758

Token 341: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.6940712928771973
    2. '])
' → logprob: -0.6940712928771973
    3. ')
' → logprob: -7.819071292877197
    4. ']' → logprob: -8.194070816040039
    5. ')' → logprob: -8.694070816040039
    6. ']
' → logprob: -10.694070816040039
    7. '])
' → logprob: -10.944070816040039
    8. '])

' → logprob: -11.069070816040039
    9. ''])' → logprob: -11.694070816040039
    10. ''])
' → logprob: -12.069070816040039

Token 342: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00020342117932159454
    2. '                    
' → logprob: -9.500203132629395
    3. '               ' → logprob: -10.375203132629395
    4. '
' → logprob: -10.375203132629395
    5. '           ' → logprob: -10.500203132629395
    6. '                       ' → logprob: -11.500203132629395
    7. '				' → logprob: -12.375203132629395
    8. '       ' → logprob: -12.500203132629395
    9. '                    ' → logprob: -12.500203132629395
    10. '```' → logprob: -12.750203132629395

Token 343: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.40478575229644775
    2. '                   ' → logprob: -1.1547857522964478
    3. ' idx' → logprob: -4.154785633087158
    4. '           ' → logprob: -6.779785633087158
    5. '               ' → logprob: -7.404785633087158
    6. '       ' → logprob: -8.779786109924316
    7. '   ' → logprob: -9.154786109924316
    8. '	idx' → logprob: -10.904786109924316
    9. 'break' → logprob: -11.779786109924316
    10. '                       ' → logprob: -11.904786109924316

Token 344: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.008922995999455452
    2. ' +=' → logprob: -4.758923053741455
    3. '+' → logprob: -8.133922576904297
    4. '=' → logprob: -11.258922576904297
    5. '+=(' → logprob: -14.383922576904297
    6. '+='' → logprob: -14.383922576904297
    7. ']+=' → logprob: -14.758922576904297
    8. '+="' → logprob: -15.508922576904297
    9. ' +' → logprob: -15.633922576904297
    10. '+
' → logprob: -16.258922576904297

Token 345: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -3.857719275401905e-05
    2. ' length' → logprob: -10.250038146972656
    3. '5' → logprob: -12.750038146972656
    4. 'len' → logprob: -15.750038146972656
    5. 'leng' → logprob: -17.750038146972656
    6. '(length' → logprob: -19.625038146972656
    7. 'le' → logprob: -21.250038146972656
    8. '	length' → logprob: -21.375038146972656
    9. '[length' → logprob: -21.625038146972656
    10. ' ' → logprob: -21.750038146972656

Token 346: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -3.190178904333152e-05
    2. '               ' → logprob: -10.625031471252441
    3. '                       ' → logprob: -12.750031471252441
    4. '           ' → logprob: -13.625031471252441
    5. '                  ' → logprob: -14.000031471252441
    6. '                    
' → logprob: -14.125031471252441
    7. '                    ' → logprob: -14.625031471252441
    8. '				' → logprob: -15.125031471252441
    9. '		           ' → logprob: -15.250031471252441
    10. 'break' → logprob: -15.750031471252441

Token 347: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -3.5120287066092715e-05
    2. '               ' → logprob: -10.750035285949707
    3. '                    
' → logprob: -12.375035285949707
    4. '                       ' → logprob: -12.875035285949707
    5. '           ' → logprob: -13.625035285949707
    6. '				' → logprob: -13.750035285949707
    7. '                  ' → logprob: -13.750035285949707
    8. '		           ' → logprob: -13.750035285949707
    9. '       ' → logprob: -14.250035285949707
    10. '                    ' → logprob: -14.500035285949707

Token 348: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005286053754389286
    2. 'break' (adapté à ' break') → logprob: -5.25528621673584
    3. '               ' → logprob: -10.38028621673584
    4. ' break' → logprob: -11.88028621673584
    5. '                       ' → logprob: -12.25528621673584
    6. '   ' → logprob: -13.25528621673584
    7. '                  ' → logprob: -13.50528621673584
    8. '           ' → logprob: -13.50528621673584
    9. '
' → logprob: -13.75528621673584
    10. '```' → logprob: -13.75528621673584

Token 349: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02451968751847744
    2. ' else' → logprob: -4.399519920349121
    3. 'else' → logprob: -4.524519920349121
    4. '        ' → logprob: -7.649519920349121
    5. '   ' → logprob: -8.024519920349121
    6. '      ' → logprob: -9.149519920349121
    7. '    ' → logprob: -9.899519920349121
    8. '           ' → logprob: -10.524519920349121
    9. '	else' → logprob: -10.524519920349121
    10. '<|end|>' → logprob: -10.774519920349121

Token 350: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026623390149325132
    2. ' else' → logprob: -6.377662181854248
    3. 'else' → logprob: -7.252662181854248
    4. '   ' → logprob: -8.502662658691406
    5. '+' → logprob: -10.252662658691406
    6. '      ' → logprob: -12.127662658691406
    7. '        ' → logprob: -13.002662658691406
    8. '           ' → logprob: -13.752662658691406
    9. '	else' → logprob: -13.877662658691406
    10. '    ' → logprob: -14.127662658691406

Token 351: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7953588366508484
    2. 'else' (adapté à ' else') → logprob: -1.2953588962554932
    3. ' else' → logprob: -1.2953588962554932
    4. '       ' → logprob: -7.170358657836914
    5. '	else' → logprob: -9.295358657836914
    6. '    ' → logprob: -9.795358657836914
    7. 'return' → logprob: -10.545358657836914
    8. ' ' → logprob: -11.295358657836914
    9. '  ' → logprob: -11.420358657836914
    10. ' return' → logprob: -12.420358657836914

Token 352: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3142702877521515
    2. ':
' → logprob: -1.314270257949829
    3. ':return' → logprob: -7.189270496368408
    4. '           ' → logprob: -8.56427001953125
    5. '       ' → logprob: -10.06427001953125
    6. '   ' → logprob: -12.06427001953125
    7. ':

' → logprob: -12.56427001953125
    8. '          ' → logprob: -13.56427001953125
    9. 'break' → logprob: -13.68927001953125
    10. 'return' → logprob: -13.81427001953125

Token 353: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00022952310973778367
    2. 'break' → logprob: -9.125229835510254
    3. 'return' → logprob: -9.875229835510254
    4. '       ' → logprob: -10.000229835510254
    5. '               ' → logprob: -11.750229835510254
    6. 'raise' → logprob: -11.750229835510254
    7. '   ' → logprob: -12.250229835510254
    8. ' break' → logprob: -13.500229835510254
    9. '	break' → logprob: -14.625229835510254
    10. '	       ' → logprob: -15.125229835510254

Token 354: ' idx' (ID: 14016)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.253439337015152
    2. 'break' → logprob: -1.8784393072128296
    3. 'return' → logprob: -3.128439426422119
    4. '           ' → logprob: -4.253439426422119
    5. '       ' → logprob: -4.878439426422119
    6. '#' → logprob: -6.253439426422119
    7. ' raise' → logprob: -6.503439426422119
    8. 'idx' (adapté à ' idx') → logprob: -6.503439426422119
    9. '   ' → logprob: -8.003438949584961
    10. 'res' → logprob: -9.128438949584961

Token 355: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0024793429765850306
    2. ' +=' → logprob: -6.002479553222656
    3. '=' → logprob: -13.002479553222656
    4. '+' → logprob: -13.627479553222656
    5. '   ' → logprob: -15.877479553222656
    6. ']+=' → logprob: -17.502479553222656
    7. '    ' → logprob: -18.627479553222656
    8. '+='' → logprob: -19.002479553222656
    9. '       ' → logprob: -19.377479553222656
    10. '-=' → logprob: -19.877479553222656

Token 356: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.650518920039758e-06
    2. '5' → logprob: -13.250003814697266
    3. ' ' → logprob: -13.250003814697266
    4. '   ' → logprob: -18.000003814697266
    5. '3' → logprob: -18.500003814697266
    6. '```' → logprob: -19.812503814697266
    7. '１' → logprob: -19.812503814697266
    8. '2' → logprob: -19.875003814697266
    9. 'one' → logprob: -20.187503814697266
    10. '0' → logprob: -20.250003814697266

Token 357: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09217338263988495
    2. 'return' → logprob: -3.0921733379364014
    3. '
' → logprob: -3.5921733379364014
    4. ' return' → logprob: -4.2171735763549805
    5. ' ' → logprob: -8.34217357635498
    6. '  ' → logprob: -10.34217357635498
    7. '       ' → logprob: -10.46717357635498
    8. '	return' → logprob: -10.96717357635498
    9. '    
' → logprob: -11.71717357635498
    10. ':return' → logprob: -11.84217357635498

Token 358: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46579286456108093
    2. ' return' → logprob: -1.4657928943634033
    3. 'return' → logprob: -1.9657928943634033
    4. '
' → logprob: -6.715792655944824
    5. ' ' → logprob: -9.340792655944824
    6. '	return' → logprob: -9.340792655944824
    7. ':return' → logprob: -11.465792655944824
    8. '  ' → logprob: -11.840792655944824
    9. '```' → logprob: -12.715792655944824
    10. ')' → logprob: -12.715792655944824

Token 359: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3156183958053589
    2. ' return' → logprob: -1.3156183958053589
    3. '   ' → logprob: -6.065618515014648
    4. '
' → logprob: -11.190618515014648
    5. '	return' → logprob: -11.190618515014648
    6. ' ' → logprob: -12.440618515014648
    7. ':return' → logprob: -14.690618515014648
    8. 'eturn' → logprob: -16.19061851501465
    9. ')return' → logprob: -16.44061851501465
    10. 'ret' → logprob: -16.44061851501465

Token 360: ' ''.' (ID: 105941)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.0005780545179732144
    2. ' ''.' → logprob: -7.500577926635742
    3. '''' → logprob: -11.000577926635742
    4. ''' → logprob: -11.750577926635742
    5. '"' → logprob: -14.750577926635742
    6. '''
' → logprob: -17.500577926635742
    7. ''',' → logprob: -17.750577926635742
    8. ' "".' → logprob: -18.875577926635742
    9. '','.' → logprob: -20.250577926635742
    10. ' ' → logprob: -20.875577926635742

Token 361: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -2.696889623621246e-06
    2. 'strip' → logprob: -13.50000286102295
    3. 'j' → logprob: -14.50000286102295
    4. ' join' → logprob: -15.00000286102295
    5. '```' → logprob: -16.125001907348633
    6. 'jo' → logprob: -16.250001907348633
    7. 'concat' → logprob: -16.750001907348633
    8. '''.' → logprob: -17.250001907348633
    9. '.join' → logprob: -17.625001907348633
    10. 'decode' → logprob: -18.000001907348633

Token 362: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -2.7610454708337784e-05
    2. 'res' → logprob: -10.500027656555176
    3. ',res' → logprob: -18.75002670288086
    4. '	res' → logprob: -18.87502670288086
    5. '$res' → logprob: -19.25002670288086
    6. '(' → logprob: -19.62502670288086
    7. ' (' → logprob: -19.87502670288086
    8. ' res' → logprob: -20.12502670288086
    9. '=res' → logprob: -20.75002670288086
    10. '(
' → logprob: -21.50002670288086

Token 363: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.5
    3. ')
' → logprob: -16.625
    4. '')' → logprob: -16.875
    5. '<|end|>' → logprob: -18.0
    6. ')}' → logprob: -18.375
    7. ')`' → logprob: -18.375
    8. '}' → logprob: -18.75
    9. '())' → logprob: -19.125
    10. '),' → logprob: -19.375

Token 364: 'import' (ID: 561)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08900009840726852
    2. '<|end|>' → logprob: -3.3389999866485596
    3. 'print' → logprob: -3.4639999866485596
    4. 'def' → logprob: -5.714000225067139
    5. '```' → logprob: -5.714000225067139
    6. 's' → logprob: -5.714000225067139
    7. '<|end|>' → logprob: -6.089000225067139
    8. '"' → logprob: -6.589000225067139
    9. 'encoded' → logprob: -7.089000225067139
    10. ''' → logprob: -7.214000225067139

Token 365: ' sys' (ID: 12228)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.4969954192638397
    2. ' re' → logprob: -1.996995449066162
    3. ' sys' → logprob: -2.371995449066162
    4. ' base' → logprob: -2.496995449066162
    5. ' random' → logprob: -3.871995449066162
    6. ' string' → logprob: -3.871995449066162
    7. ' itertools' → logprob: -4.246995449066162
    8. ' bit' → logprob: -4.496995449066162
    9. ' heap' → logprob: -5.996995449066162
    10. 'math' → logprob: -6.121995449066162

Token 366: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6560749411582947
    2. 'def' → logprob: -1.2810750007629395
    3. 'data' → logprob: -2.2810750007629395
    4. 'input' → logprob: -2.5310750007629395
    5. 'if' → logprob: -4.6560750007629395
    6. 's' → logprob: -5.2810750007629395
    7. '
' → logprob: -5.5310750007629395
    8. 'message' → logprob: -6.6560750007629395
    9. 'text' → logprob: -7.0310750007629395
    10. ' for' → logprob: -8.656074523925781

Token 367: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5853936076164246
    2. 'data' → logprob: -1.5853936672210693
    3. 'def' → logprob: -2.3353936672210693
    4. 'input' → logprob: -2.5853936672210693
    5. 'if' → logprob: -2.8353936672210693
    6. 'line' → logprob: -5.96039342880249
    7. 'text' → logprob: -6.21039342880249
    8. 's' → logprob: -6.46039342880249
    9. 'message' → logprob: -7.08539342880249
    10. 'args' → logprob: -9.210393905639648

Token 368: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.00016384923947043717
    2. 'line' → logprob: -9.000164031982422
    3. ' ' → logprob: -10.375164031982422
    4. ' s' → logprob: -13.000164031982422
    5. ' arg' → logprob: -13.000164031982422
    6. ' l' → logprob: -13.250164031982422
    7. '	line' → logprob: -13.625164031982422
    8. ' ' → logprob: -14.375164031982422
    9. ' _' → logprob: -14.625164031982422
    10. '_line' → logprob: -15.875164031982422

Token 369: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005237075500190258
    2. 'in' → logprob: -5.255237102508545
    3. ' ' → logprob: -13.505236625671387
    4. '	in' → logprob: -13.880236625671387
    5. 'line' → logprob: -14.880236625671387
    6. 'import' → logprob: -15.130236625671387
    7. '_in' → logprob: -16.505237579345703
    8. ' i' → logprob: -16.505237579345703
    9. 's' → logprob: -16.630237579345703
    10. ' ' → logprob: -17.005237579345703

Token 370: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.10021109133958817
    2. ' sys' → logprob: -2.3502111434936523
    3. '=sys' → logprob: -12.475211143493652
    4. '(sys' → logprob: -14.850211143493652
    5. '	sys' → logprob: -15.600211143493652
    6. 'import' → logprob: -17.600210189819336
    7. 'stdin' → logprob: -17.975210189819336
    8. 's' → logprob: -18.850210189819336
    9. '_sys' → logprob: -18.850210189819336
    10. 'system' → logprob: -19.600210189819336

Token 371: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.002224602736532688
    2. 'stdin' → logprob: -6.127224445343018
    3. 'import' → logprob: -11.252224922180176
    4. '.' → logprob: -11.252224922180176
    5. '.readline' → logprob: -12.377224922180176
    6. '.argv' → logprob: -12.627224922180176
    7. '(stdin' → logprob: -12.627224922180176
    8. 'in' → logprob: -14.127224922180176
    9. '```' → logprob: -14.502224922180176
    10. '.stdout' → logprob: -15.002224922180176

Token 372: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014551399275660515
    2. '.readline' → logprob: -4.264551162719727
    3. '.readlines' → logprob: -8.764551162719727
    4. ':
' → logprob: -9.639551162719727
    5. '.strip' → logprob: -9.764551162719727
    6. '.rstrip' → logprob: -10.389551162719727
    7. ' in' → logprob: -10.639551162719727
    8. '.' → logprob: -11.264551162719727
    9. ' :' → logprob: -11.264551162719727
    10. '):' → logprob: -12.014551162719727

Token 373: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3549702763557434
    2. ' line' → logprob: -1.2299702167510986
    3. ' s' → logprob: -5.729970455169678
    4. ' text' → logprob: -6.854970455169678
    5. ' input' → logprob: -7.229970455169678
    6. ' if' → logprob: -8.10496997833252
    7. '    
' → logprob: -8.22996997833252
    8. ' decoded' → logprob: -8.72996997833252
    9. ' data' → logprob: -8.97996997833252
    10. ' for' → logprob: -9.35496997833252

Token 374: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.03468058630824089
    2. 'line' (adapté à ' line') → logprob: -3.9096806049346924
    3. ' text' → logprob: -4.784680366516113
    4. ' s' → logprob: -6.159680366516113
    5. '   ' → logprob: -6.784680366516113
    6. ' bits' → logprob: -7.284680366516113
    7. 'text' → logprob: -7.784680366516113
    8. ' data' → logprob: -8.284680366516113
    9. ' input' → logprob: -8.534680366516113
    10. 's' → logprob: -8.534680366516113

Token 375: '=line' (ID: 192488)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03248812258243561
    2. '=line' → logprob: -3.5324881076812744
    3. ' =' → logprob: -5.9074883460998535
    4. '.strip' → logprob: -12.407487869262695
    5. 'rstrip' → logprob: -12.407487869262695
    6. '=
' → logprob: -12.782487869262695
    7. '.rstrip' → logprob: -13.032487869262695
    8. '=

' → logprob: -14.907487869262695
    9. 'line' → logprob: -15.032487869262695
    10. '_strip' → logprob: -15.532487869262695

Token 376: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.04859168455004692
    2. '.rstrip' → logprob: -3.0485916137695312
    3. '.' → logprob: -13.548591613769531
    4. 'rstrip' → logprob: -13.798591613769531
    5. '.replace' → logprob: -14.298591613769531
    6. 'strip' → logprob: -14.548591613769531
    7. '.lower' → logprob: -14.548591613769531
    8. '[:-' → logprob: -15.548591613769531
    9. '.chomp' → logprob: -15.798591613769531
    10. '.upper' → logprob: -16.79859161376953

Token 377: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.3557529857498594e-05
    2. '()
' → logprob: -10.75002384185791
    3. '(' → logprob: -14.25002384185791
    4. '()\' → logprob: -14.62502384185791
    5. '()

' → logprob: -15.50002384185791
    6. '()`' → logprob: -15.50002384185791
    7. '()
' → logprob: -15.87502384185791
    8. '())' → logprob: -16.125022888183594
    9. '()>' → logprob: -16.500022888183594
    10. '().' → logprob: -16.750022888183594

Token 378: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5346997976303101
    2. ' if' → logprob: -1.28469979763031
    3. 'if' → logprob: -2.0346999168395996
    4. 'encoded' → logprob: -5.9096999168396
    5. 'bits' → logprob: -6.5346999168396
    6. ' bits' → logprob: -6.6596999168396
    7. 'tokens' → logprob: -7.6596999168396
    8. 'code' → logprob: -9.159699440002441
    9. ' encoded' → logprob: -9.159699440002441
    10. 'print' → logprob: -9.409699440002441

Token 379: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.006848457269370556
    2. 'print' → logprob: -6.131848335266113
    3. 'bits' → logprob: -6.131848335266113
    4. 'encoded' → logprob: -6.256848335266113
    5. 'decoded' → logprob: -8.256848335266113
    6. ' if' → logprob: -9.131848335266113
    7. 'code' → logprob: -9.631848335266113
    8. 'mode' → logprob: -10.506848335266113
    9. 'parts' → logprob: -10.881848335266113
    10. 'cmd' → logprob: -11.256848335266113

Token 380: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6687431335449219
    2. ' line' → logprob: -0.7937431335449219
    3. 'line' → logprob: -3.418743133544922
    4. 'not' → logprob: -5.918743133544922
    5. ' len' → logprob: -10.668743133544922
    6. ' ' → logprob: -10.793743133544922
    7. 'len' → logprob: -12.293743133544922
    8. ' lin' → logprob: -13.043743133544922
    9. '#line' → logprob: -13.918743133544922
    10. '	line' → logprob: -13.918743133544922

Token 381: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.020542122423648834
    2. ' line' → logprob: -3.8955421447753906
    3. ' ' → logprob: -16.27054214477539
    4. '#line' → logprob: -16.77054214477539
    5. 'lin' → logprob: -16.89554214477539
    6. 'len' → logprob: -17.27054214477539
    7. '
' → logprob: -17.39554214477539
    8. '	line' → logprob: -17.89554214477539
    9. '   ' → logprob: -18.27054214477539
    10. 'lines' → logprob: -18.39554214477539

Token 382: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03809049353003502
    2. ':
' → logprob: -3.288090467453003
    3. ' :' → logprob: -10.663090705871582
    4. ' or' → logprob: -11.288090705871582
    5. ' :
' → logprob: -12.413090705871582
    6. ':return' → logprob: -12.413090705871582
    7. '   ' → logprob: -13.288090705871582
    8. ':

' → logprob: -14.288090705871582
    9. '):
' → logprob: -14.913090705871582
    10. ')' → logprob: -15.038090705871582

Token 383: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17202186584472656
    2. ':' → logprob: -2.4220218658447266
    3. '       ' → logprob: -2.6720218658447266
    4. ':
' → logprob: -9.422021865844727
    5. '    ' → logprob: -10.797021865844727
    6. '<|end|>' → logprob: -11.172021865844727
    7. '.' → logprob: -11.672021865844727
    8. ',' → logprob: -11.672021865844727
    9. '	break' → logprob: -11.672021865844727
    10. '   ' → logprob: -11.797021865844727

Token 384: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.21541479229927063
    2. ' break' → logprob: -1.7154147624969482
    3. 'continue' (adapté à ' continue') → logprob: -4.465415000915527
    4. ' continue' → logprob: -6.465415000915527
    5. '   ' → logprob: -7.090415000915527
    6. '	break' → logprob: -11.465415000915527
    7. '
' → logprob: -13.215415000915527
    8. '       ' → logprob: -13.590415000915527
    9. '```' → logprob: -15.090415000915527
    10. '	continue' → logprob: -15.215415000915527

Token 385: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009829123737290502
    2. '
' → logprob: -7.500982761383057
    3. 'if' → logprob: -8.875983238220215
    4. ' if' → logprob: -9.250983238220215
    5. '    
' → logprob: -9.500983238220215
    6. 'tokens' → logprob: -10.000983238220215
    7. ',' → logprob: -11.625983238220215
    8. 'import' → logprob: -11.750983238220215
    9. '<|end|>' → logprob: -11.750983238220215
    10. 'print' → logprob: -11.875983238220215

Token 386: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009199160267598927
    2. 'if' → logprob: -7.875919818878174
    3. ' if' → logprob: -8.000920295715332
    4. 'tokens' → logprob: -9.000920295715332
    5. 'encoded' → logprob: -11.000920295715332
    6. ' tokens' → logprob: -11.375920295715332
    7. 'code' → logprob: -11.625920295715332
    8. '    
' → logprob: -11.625920295715332
    9. '
' → logprob: -12.125920295715332
    10. 'print' → logprob: -12.250920295715332

Token 387: ' bits' (ID: 18189)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.015984976664185524
    2. '   ' → logprob: -5.390985012054443
    3. 'bits' (adapté à ' bits') → logprob: -5.640985012054443
    4. ' if' → logprob: -5.765985012054443
    5. 'try' → logprob: -5.765985012054443
    6. 'encoded' → logprob: -7.265985012054443
    7. 'decoded' → logprob: -8.390984535217285
    8. 'parts' → logprob: -8.890984535217285
    9. 'print' → logprob: -9.140984535217285
    10. 'mode' → logprob: -9.515984535217285

Token 388: '='' (ID: 2053)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016039647161960602
    2. ' =' → logprob: -4.141039848327637
    3. '=line' → logprob: -12.266039848327637
    4. '=input' → logprob: -15.016039848327637
    5. '_=' → logprob: -15.891039848327637
    6. '=create' → logprob: -17.01603889465332
    7. '_encoded' → logprob: -17.14103889465332
    8. 'encoded' → logprob: -17.26603889465332
    9. '=

' → logprob: -17.26603889465332
    10. '_encode' → logprob: -17.76603889465332

Token 389: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.0715777650475502
    2. 'encode' → logprob: -3.446577787399292
    3. '''.' → logprob: -3.696577787399292
    4. ''' → logprob: -4.821577548980713
    5. '.encode' → logprob: -6.196577548980713
    6. '''' → logprob: -7.196577548980713
    7. ''''' → logprob: -7.946577548980713
    8. '000' → logprob: -7.946577548980713
    9. '111' → logprob: -8.321578025817871
    10. '".' → logprob: -8.571578025817871

Token 390: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -5.512236498361744e-07
    2. ' join' → logprob: -16.125
    3. 'concat' → logprob: -16.25
    4. 'encode' → logprob: -16.375
    5. 'jo' → logprob: -17.125
    6. '+' → logprob: -17.5
    7. 'j' → logprob: -17.625
    8. 'expand' → logprob: -18.0
    9. 'append' → logprob: -18.125
    10. '```' → logprob: -18.375

Token 391: '(code' (ID: 31208)
  Prédit: '(code'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(code' → logprob: -0.13730111718177795
    2. '(' → logprob: -2.137301206588745
    3. '(format' → logprob: -5.262300968170166
    4. 'encode' → logprob: -5.637300968170166
    5. 'code' → logprob: -6.762300968170166
    6. '([' → logprob: -8.887301445007324
    7. '(de' → logprob: -9.512301445007324
    8. '(Code' → logprob: -9.512301445007324
    9. '(bin' → logprob: -9.762301445007324
    10. '('' → logprob: -11.012301445007324

Token 392: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -1.1472419600977446e-06
    2. 'map' → logprob: -14.375000953674316
    3. 'Map' → logprob: -15.250000953674316
    4. '[' → logprob: -16.125001907348633
    5. '
' → logprob: -16.250001907348633
    6. '[c' → logprob: -18.125001907348633
    7. '_' → logprob: -18.500001907348633
    8. '_MAP' → logprob: -18.500001907348633
    9. '=' → logprob: -18.875001907348633
    10. ')' → logprob: -18.875001907348633

Token 393: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.003387314500287175
    2. '.get' → logprob: -6.003387451171875
    3. '[ch' → logprob: -7.003387451171875
    4. '[' → logprob: -13.628387451171875
    5. '[get' → logprob: -13.878387451171875
    6. 'c' → logprob: -16.378387451171875
    7. '[i' → logprob: -16.628387451171875
    8. '[word' → logprob: -17.128387451171875
    9. '[b' → logprob: -17.378387451171875
    10. 'get' → logprob: -17.503387451171875

Token 394: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08107124269008636
    2. 'for' → logprob: -2.831071138381958
    3. ' for' → logprob: -4.081071376800537
    4. 'in' → logprob: -6.456071376800537
    5. '   ' → logprob: -8.581070899963379
    6. '.upper' → logprob: -9.206070899963379
    7. 'c' → logprob: -9.581070899963379
    8. ' ]' → logprob: -10.331070899963379
    9. '```' → logprob: -11.331070899963379
    10. ' in' → logprob: -11.331070899963379

Token 395: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38690462708473206
    2. ' for' → logprob: -1.1369045972824097
    3. 'c' → logprob: -11.6369047164917
    4. '   ' → logprob: -11.6369047164917
    5. 'in' → logprob: -12.3869047164917
    6. ']' → logprob: -12.3869047164917
    7. '	for' → logprob: -13.0119047164917
    8. ' ' → logprob: -13.5119047164917
    9. 'if' → logprob: -14.2619047164917
    10. ' in' → logprob: -14.3869047164917

Token 396: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.22562991082668304
    2. 'c' → logprob: -1.6006299257278442
    3. ' in' → logprob: -8.475629806518555
    4. 'in' → logprob: -12.975629806518555
    5. '	c' → logprob: -12.975629806518555
    6. ' ' → logprob: -13.350629806518555
    7. ' ' → logprob: -13.600629806518555
    8. '<|end|>' → logprob: -15.225629806518555
    9. 's' → logprob: -15.475629806518555
    10. 'line' → logprob: -16.100629806518555

Token 397: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10039611905813217
    2. 'in' → logprob: -2.350396156311035
    3. 'c' → logprob: -8.850396156311035
    4. 'line' → logprob: -10.975396156311035
    5. ' c' → logprob: -11.475396156311035
    6. ' ' → logprob: -11.850396156311035
    7. ' line' → logprob: -12.350396156311035
    8. 'i' → logprob: -13.225396156311035
    9. ' i' → logprob: -13.475396156311035
    10. 'ine' → logprob: -13.850396156311035

Token 398: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0019294669618830085
    2. ' line' → logprob: -6.25192928314209
    3. '
' → logprob: -15.75192928314209
    4. '(line' → logprob: -15.87692928314209
    5. '[line' → logprob: -15.87692928314209
    6. ' ' → logprob: -16.126930236816406
    7. '   ' → logprob: -16.376930236816406
    8. 'list' → logprob: -16.376930236816406
    9. '	line' → logprob: -17.251930236816406
    10. '#line' → logprob: -17.376930236816406

Token 399: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012264199322089553
    2. ')
' → logprob: -7.126226425170898
    3. ' if' → logprob: -8.501226425170898
    4. '   ' → logprob: -9.001226425170898
    5. ' )' → logprob: -9.876226425170898
    6. 'if' → logprob: -10.126226425170898
    7. ')+' → logprob: -14.251226425170898
    8. ']' → logprob: -14.751226425170898
    9. ')
' → logprob: -14.876226425170898
    10. ')

' → logprob: -15.001226425170898

Token 400: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020815251395106316
    2. 'decoded' → logprob: -4.770815372467041
    3. '
' → logprob: -5.270815372467041
    4. 'print' → logprob: -5.395815372467041
    5. '    
' → logprob: -7.020815372467041
    6. ' decoded' → logprob: -7.145815372467041
    7. 'try' → logprob: -9.145814895629883
    8. ')' → logprob: -9.520814895629883
    9. '<|end|>' → logprob: -9.770814895629883
    10. 'decode' → logprob: -9.895814895629883

Token 401: ' #' (ID: 1069)
  Prédit: 'decoded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'decoded' → logprob: -0.4857082962989807
    2. 'print' → logprob: -1.110708236694336
    3. 'res' → logprob: -3.985708236694336
    4. '   ' → logprob: -4.860708236694336
    5. ' decoded' → logprob: -5.235708236694336
    6. ' print' → logprob: -5.610708236694336
    7. 'dec' → logprob: -5.985708236694336
    8. 'bits' → logprob: -6.110708236694336
    9. 'if' → logprob: -6.235708236694336
    10. 'chars' → logprob: -6.235708236694336

Token 402: ' decode' (ID: 32043)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6128678917884827
    2. 'decoded' → logprob: -0.8628678917884827
    3. 'res' → logprob: -4.487867832183838
    4. 'encoded' → logprob: -4.612867832183838
    5. 'if' → logprob: -5.487867832183838
    6. 'result' → logprob: -6.487867832183838
    7. 'for' → logprob: -6.612867832183838
    8. ' print' → logprob: -6.862867832183838
    9. 'bits' → logprob: -6.987867832183838
    10. 'try' → logprob: -7.112867832183838

Token 403: ' bits' (ID: 18189)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.26205047965049744
    2. 'decoded' → logprob: -1.5120505094528198
    3. 'result' → logprob: -4.762050628662109
    4. ' decoded' → logprob: -7.762050628662109
    5. ' print' → logprob: -7.887050628662109
    6. '   ' → logprob: -8.01205062866211
    7. 'res' → logprob: -9.01205062866211
    8. '(decoded' → logprob: -9.51205062866211
    9. 'output' → logprob: -9.76205062866211
    10. 's' → logprob: -10.51205062866211

Token 404: ' greed' (ID: 103438)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.21361787617206573
    2. 'decoded' → logprob: -1.7136179208755493
    3. 'result' → logprob: -4.96361780166626
    4. '   ' → logprob: -5.58861780166626
    5. ' decoded' → logprob: -7.96361780166626
    6. 'output' → logprob: -8.088618278503418
    7. ' print' → logprob: -8.463618278503418
    8. 'message' → logprob: -8.713618278503418
    9. 'res' → logprob: -9.088618278503418
    10. '=' → logprob: -9.713618278503418

Token 405: 'ily' (ID: 1810)
  Prédit: 'ily'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ily' → logprob: -0.000712670327629894
    2. 'y' → logprob: -7.625712871551514
    3. 'yly' → logprob: -8.750712394714355
    4. 'ively' → logprob: -10.125712394714355
    5. 'ly' → logprob: -11.875712394714355
    6. 'ully' → logprob: -12.500712394714355
    7. '   ' → logprob: -12.500712394714355
    8. 'inely' → logprob: -12.500712394714355
    9. '       ' → logprob: -13.500712394714355
    10. 'illy' → logprob: -13.875712394714355

Token 406: ',' (ID: 11)
  Prédit: 'decoded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'decoded' → logprob: -0.038475070148706436
    2. 'print' → logprob: -3.7884750366210938
    3. 'res' → logprob: -4.913475036621094
    4. 'result' → logprob: -5.038475036621094
    5. 'output' → logprob: -7.788475036621094
    6. 'i' → logprob: -8.288475036621094
    7. 'idx' → logprob: -8.413475036621094
    8. 'pos' → logprob: -9.163475036621094
    9. ' decoded' → logprob: -9.288475036621094
    10. '   ' → logprob: -9.788475036621094

Token 407: ' trying' (ID: 6700)
  Prédit: 'decoded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'decoded' → logprob: -0.1433740258216858
    2. 'print' → logprob: -2.518373966217041
    3. 'result' → logprob: -3.393373966217041
    4. 'res' → logprob: -4.018373966217041
    5. '   ' → logprob: -7.643373966217041
    6. 'output' → logprob: -7.768373966217041
    7. ' decoded' → logprob: -8.3933744430542
    8. 'dec' → logprob: -9.3933744430542
    9. 'out' → logprob: -9.3933744430542
    10. 'text' → logprob: -10.5183744430542

Token 408: ' ' (ID: 220)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.10282386094331741
    2. ' lengths' → logprob: -3.2278239727020264
    3. '   ' → logprob: -3.3528239727020264
    4. ' length' → logprob: -4.477823734283447
    5. 'to' → logprob: -6.352823734283447
    6. 'for' → logprob: -6.352823734283447
    7. 'all' → logprob: -6.602823734283447
    8. 'len' → logprob: -6.602823734283447
    9. '5' → logprob: -7.102823734283447
    10. ' to' → logprob: -7.227823734283447

Token 409: '5' (ID: 20)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.005444939713925123
    2. '5' → logprob: -6.6304450035095215
    3. 'first' → logprob: -7.0054450035095215
    4. 'all' → logprob: -7.2554450035095215
    5. 'for' → logprob: -7.2554450035095215
    6. 'from' → logprob: -7.2554450035095215
    7. ' lengths' → logprob: -8.255444526672363
    8. 'to' → logprob: -8.505444526672363
    9. ' length' → logprob: -9.005444526672363
    10. '   ' → logprob: -9.630444526672363

Token 410: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0775260925292969
    2. 'to' → logprob: -2.077526092529297
    3. 'bits' → logprob: -2.202526092529297
    4. 'for' → logprob: -2.452526092529297
    5. 'length' → logprob: -2.577526092529297
    6. '-length' → logprob: -2.827526092529297
    7. 'down' → logprob: -3.327526092529297
    8. ' bits' → logprob: -3.327526092529297
    9. ':' → logprob: -3.702526092529297
    10. ' to' → logprob: -3.827526092529297

Token 411: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.0564331205387134e-05
    2. ' ' → logprob: -11.50001049041748
    3. '```' → logprob: -15.62501049041748
    4. '#' → logprob: -16.625011444091797
    5. '...' → logprob: -18.250011444091797
    6. '' → logprob: -18.250011444091797
    7. ' four' → logprob: -18.625011444091797
    8. '
' → logprob: -18.625011444091797
    9. '４' → logprob: -19.625011444091797
    10. 'for' → logprob: -19.625011444091797

Token 412: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002381353871896863
    2. ',
' → logprob: -6.752381324768066
    3. '<|end|>' → logprob: -7.752381324768066
    4. '
' → logprob: -8.127381324768066
    5. ',None' → logprob: -9.127381324768066
    6. ',#' → logprob: -9.502381324768066
    7. ',-' → logprob: -9.752381324768066
    8. ' ,' → logprob: -9.877381324768066
    9. ',line' → logprob: -10.377381324768066
    10. 'for' → logprob: -10.502381324768066

Token 413: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '```' → logprob: -16.750009536743164
    4. '...' → logprob: -18.000009536743164
    5. '5' → logprob: -18.875009536743164
    6. '۳' → logprob: -19.625009536743164
    7. ''''' → logprob: -20.000009536743164
    8. ' and' → logprob: -20.375009536743164
    9. '<|end|>' → logprob: -20.500009536743164
    10. '３' → logprob: -20.625009536743164

Token 414: ' bits' (ID: 18189)
  Prédit: 'decoded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'decoded' → logprob: -0.2801661491394043
    2. '   ' → logprob: -3.0301661491394043
    3. 'result' → logprob: -3.0301661491394043
    4. 'print' → logprob: -3.1551661491394043
    5. 'res' → logprob: -3.5301661491394043
    6. 'idx' → logprob: -3.9051661491394043
    7. 'i' → logprob: -3.9051661491394043
    8. '
' → logprob: -4.405166149139404
    9. 'for' → logprob: -5.030166149139404
    10. 'bits' → logprob: -5.530166149139404

Token 415: '
' (ID: 198)
  Prédit: 'decoded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'decoded' → logprob: -0.09418634325265884
    2. 'print' → logprob: -2.969186305999756
    3. 'res' → logprob: -3.969186305999756
    4. '   ' → logprob: -4.469186305999756
    5. 'result' → logprob: -5.094186305999756
    6. 'dec' → logprob: -6.844186305999756
    7. 'output' → logprob: -8.469186782836914
    8. ' decoded' → logprob: -8.594186782836914
    9. 'rest' → logprob: -9.094186782836914
    10. 's' → logprob: -9.094186782836914

Token 416: '   ' (ID: 271)
  Prédit: 'decoded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decoded' → logprob: -0.10736516118049622
    2. '   ' → logprob: -3.357365131378174
    3. 'res' → logprob: -3.607365131378174
    4. 'print' → logprob: -3.732365131378174
    5. 'result' → logprob: -4.357365131378174
    6. 'i' → logprob: -7.232365131378174
    7. ' decoded' → logprob: -7.607365131378174
    8. 'idx' → logprob: -7.857365131378174
    9. 'for' → logprob: -7.982365131378174
    10. 'dec' → logprob: -8.482365608215332

Token 417: ' output' (ID: 4733)
  Prédit: 'decoded'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decoded' → logprob: -0.44141218066215515
    2. 'res' → logprob: -1.4414122104644775
    3. 'idx' → logprob: -2.4414122104644775
    4. 'result' → logprob: -3.8164122104644775
    5. 'print' → logprob: -5.066411972045898
    6. 'i' → logprob: -5.941411972045898
    7. 'output' (adapté à ' output') → logprob: -7.191411972045898
    8. '   ' → logprob: -7.941411972045898
    9. 'out' → logprob: -8.316411972045898
    10. 'dec' → logprob: -8.566411972045898

Token 418: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07891678065061569
    2. ' =' → logprob: -2.5789167881011963
    3. '=''' → logprob: -11.328916549682617
    4. ',' → logprob: -12.328916549682617
    5. '='' → logprob: -12.578916549682617
    6. '=[]' → logprob: -12.703916549682617
    7. '=line' → logprob: -13.703916549682617
    8. ' ='' → logprob: -14.453916549682617
    9. '=""' → logprob: -14.703916549682617
    10. 'decoded' → logprob: -15.453916549682617

Token 419: '   ' (ID: 271)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.5889779925346375
    2. '   ' → logprob: -0.8389779925346375
    3. 'i' → logprob: -4.463977813720703
    4. ' idx' → logprob: -6.713977813720703
    5. 'index' → logprob: -8.713977813720703
    6. ' i' → logprob: -10.338977813720703
    7. '	idx' → logprob: -10.713977813720703
    8. '```' → logprob: -13.713977813720703
    9. '	i' → logprob: -14.338977813720703
    10. '_idx' → logprob: -14.463977813720703

Token 420: ' i' (ID: 575)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0154108926653862
    2. 'i' (adapté à ' i') → logprob: -4.265410900115967
    3. '   ' → logprob: -7.140410900115967
    4. 'index' → logprob: -7.765410900115967
    5. ' idx' → logprob: -10.640410423278809
    6. 'for' → logprob: -13.140410423278809
    7. 'pos' → logprob: -13.265410423278809
    8. ' i' → logprob: -13.765410423278809
    9. 'while' → logprob: -15.015410423278809
    10. '```' → logprob: -15.515410423278809

Token 421: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0297523383051157
    2. ' =' → logprob: -3.529752254486084
    3. 'x' → logprob: -14.154752731323242
    4. 'n' → logprob: -15.154752731323242
    5. ' ' → logprob: -15.529752731323242
    6. '+=' → logprob: -15.904752731323242
    7. ' +=' → logprob: -16.029752731323242
    8. '=
' → logprob: -16.529752731323242
    9. '=int' → logprob: -17.029752731323242
    10. ',' → logprob: -17.154752731323242

Token 422: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '000' → logprob: -20.0000057220459
    4. '=' → logprob: -20.0000057220459
    5. '۰' → logprob: -20.3750057220459
    6. '<|end|>' → logprob: -20.3750057220459
    7. '00' → logprob: -20.8750057220459
    8. '[' → logprob: -20.9375057220459
    9. '```' → logprob: -21.3125057220459
    10. '   ' → logprob: -21.3750057220459

Token 423: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3921170234680176
    2. '   ' → logprob: -1.5171170234680176
    3. 'while' → logprob: -2.8921170234680176
    4. ' while' → logprob: -3.6421170234680176
    5. '<|end|>' → logprob: -4.267117023468018
    6. '	while' → logprob: -6.017117023468018
    7. '    
' → logprob: -6.267117023468018
    8. '  
' → logprob: -6.892117023468018
    9. ' 
' → logprob: -6.892117023468018
    10. '```' → logprob: -7.267117023468018

Token 424: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36649852991104126
    2. ' while' → logprob: -1.7414984703063965
    3. 'while' → logprob: -2.4914984703063965
    4. '<|end|>' → logprob: -3.9914984703063965
    5. '
' → logprob: -4.4914984703063965
    6. '	while' → logprob: -4.8664984703063965
    7. '    
' → logprob: -6.1164984703063965
    8. ' 
' → logprob: -6.1164984703063965
    9. ' ' → logprob: -6.2414984703063965
    10. '  ' → logprob: -7.1164984703063965

Token 425: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3405097424983978
    2. 'while' (adapté à ' while') → logprob: -1.3405097723007202
    3. ' while' → logprob: -3.9655096530914307
    4. ' n' → logprob: -5.21550989151001
    5. '   ' → logprob: -6.21550989151001
    6. '
' → logprob: -8.840509414672852
    7. 'len' → logprob: -9.215509414672852
    8. 'i' → logprob: -9.340509414672852
    9. '```' → logprob: -9.715509414672852
    10. 'length' → logprob: -10.090509414672852

Token 426: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20142580568790436
    2. 'i' → logprob: -1.7014257907867432
    3. 'True' → logprob: -11.951425552368164
    4. ' True' → logprob: -12.201425552368164
    5. '	i' → logprob: -15.076425552368164
    6. '   ' → logprob: -15.201425552368164
    7. '(i' → logprob: -15.826425552368164
    8. ' ' → logprob: -15.951425552368164
    9. ' ' → logprob: -16.951425552368164
    10. '
' → logprob: -17.451425552368164

Token 427: '<len' (ID: 141365)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6568289399147034
    2. '<' → logprob: -0.7818289399147034
    3. '<len' → logprob: -3.7818288803100586
    4. '<=' → logprob: -7.406828880310059
    5. '<n' → logprob: -8.031828880310059
    6. ' <=' → logprob: -8.906828880310059
    7. '+' → logprob: -10.656828880310059
    8. ' ' → logprob: -11.281828880310059
    9. '<size' → logprob: -11.531828880310059
    10. ' <
' → logprob: -12.156828880310059

Token 428: '(bits' (ID: 170698)
  Prédit: '(bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bits' → logprob: -5.991464786347933e-05
    2. 'bits' → logprob: -9.750060081481934
    3. ' bits' → logprob: -13.875060081481934
    4. '(bit' → logprob: -14.875060081481934
    5. '_bits' → logprob: -17.000059127807617
    6. '(' → logprob: -17.125059127807617
    7. '(b' → logprob: -17.250059127807617
    8. '(output' → logprob: -17.375059127807617
    9. '.bits' → logprob: -18.625059127807617
    10. 'Bits' → logprob: -19.125059127807617

Token 429: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4748503863811493
    2. '):' → logprob: -0.9748504161834717
    3. ')' → logprob: -7.724850177764893
    4. ':' → logprob: -8.47485065460205
    5. ':
' → logprob: -9.59985065460205
    6. ' and' → logprob: -10.97485065460205
    7. '   ' → logprob: -10.97485065460205
    8. 'and' → logprob: -11.97485065460205
    9. '):

' → logprob: -11.97485065460205
    10. '):
' → logprob: -12.84985065460205

Token 430: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02645936794579029
    2. '   ' → logprob: -4.151459217071533
    3. ' for' → logprob: -5.401459217071533
    4. '    ' → logprob: -5.776459217071533
    5. ',' → logprob: -7.526459217071533
    6. '<|end|>' → logprob: -7.526459217071533
    7. ' ' → logprob: -7.901459217071533
    8. '
' → logprob: -8.276459693908691
    9. '    
' → logprob: -8.651459693908691
    10. '        
' → logprob: -8.776459693908691

Token 431: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.19966000318527222
    2. '       ' → logprob: -1.824660062789917
    3. 'for' (adapté à ' for') → logprob: -4.449659824371338
    4. '   ' → logprob: -5.324659824371338
    5. ' length' → logprob: -6.449659824371338
    6. '           ' → logprob: -7.199659824371338
    7. '    ' → logprob: -8.449660301208496
    8. ' found' → logprob: -8.449660301208496
    9. 'length' → logprob: -8.449660301208496
    10. '5' → logprob: -9.574660301208496

Token 432: ' l' (ID: 305)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.09414251893758774
    2. ' length' → logprob: -2.844142436981201
    3. 'l' → logprob: -3.469142436981201
    4. ' l' → logprob: -7.844142436981201
    5. 'leng' → logprob: -9.84414291381836
    6. 'size' → logprob: -10.09414291381836
    7. 'L' → logprob: -11.59414291381836
    8. ' size' → logprob: -11.84414291381836
    9. ' leng' → logprob: -12.21914291381836
    10. '	length' → logprob: -13.21914291381836

Token 433: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07894553244113922
    2. 'in' → logprob: -2.5789456367492676
    3. '<|end|>' → logprob: -11.45394515991211
    4. ' ' → logprob: -11.70394515991211
    5. '	in' → logprob: -11.82894515991211
    6. 'n' → logprob: -12.20394515991211
    7. '=' → logprob: -12.45394515991211
    8. 's' → logprob: -12.82894515991211
    9. '```' → logprob: -12.82894515991211
    10. '3' → logprob: -12.95394515991211

Token 434: ' range' (ID: 3352)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.7889403104782104
    2. 'range' → logprob: -1.0389403104782104
    3. '[' → logprob: -1.6639403104782104
    4. '(' → logprob: -6.6639404296875
    5. ' range' → logprob: -6.7889404296875
    6. ' [' → logprob: -11.1639404296875
    7. ' ' → logprob: -11.2889404296875
    8. '(range' → logprob: -11.6639404296875
    9. 're' → logprob: -11.7889404296875
    10. '   ' → logprob: -13.4139404296875

Token 435: '(' (ID: 7)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.500000953674316
    3. '3' → logprob: -15.750000953674316
    4. '٥' → logprob: -17.375
    5. '{' → logprob: -18.1875
    6. '(' → logprob: -18.3125
    7. '۵' → logprob: -18.5625
    8. '[' → logprob: -18.625
    9. '```' → logprob: -18.625
    10. '543' → logprob: -18.6875

Token 436: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.875000953674316
    3. '3' → logprob: -15.875000953674316
    4. '```' → logprob: -17.875001907348633
    5. '   ' → logprob: -17.937501907348633
    6. '５' → logprob: -18.375001907348633
    7. '[' → logprob: -18.562501907348633
    8. '٥' → logprob: -18.625001907348633
    9. '۵' → logprob: -18.812501907348633
    10. '५' → logprob: -19.062501907348633

Token 437: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.372294698550832e-06
    2. '5' → logprob: -12.625009536743164
    3. '3' → logprob: -13.125009536743164
    4. ',-' → logprob: -13.250009536743164
    5. ' ,' → logprob: -13.250009536743164
    6. ',
' → logprob: -15.375009536743164
    7. '4' → logprob: -16.125009536743164
    8. '1' → logprob: -18.125009536743164
    9. '2' → logprob: -18.125009536743164
    10. '```' → logprob: -18.250009536743164

Token 438: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.869017852295656e-06
    2. '
' → logprob: -12.500006675720215
    3. '1' → logprob: -13.375006675720215
    4. '```' → logprob: -14.750006675720215
    5. '' → logprob: -15.562506675720215
    6. ' ' → logprob: -15.687506675720215
    7. '-' → logprob: -16.06250762939453
    8. '``' → logprob: -16.18750762939453
    9. '0' → logprob: -16.37500762939453
    10. '3' → logprob: -16.75000762939453

Token 439: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.35233527421951294
    2. '-' → logprob: -1.2273352146148682
    3. ',' → logprob: -5.727335453033447
    4. ' -' → logprob: -7.602335453033447
    5. '-,' → logprob: -9.977334976196289
    6. ' ,-' → logprob: -10.227334976196289
    7. ',-
' → logprob: -10.477334976196289
    8. ',
' → logprob: -12.477334976196289
    9. '0' → logprob: -12.602334976196289
    10. ',-

' → logprob: -13.352334976196289

Token 440: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.375000953674316
    3. '
' → logprob: -15.375000953674316
    4. '```' → logprob: -15.750000953674316
    5. ')' → logprob: -19.5
    6. '``' → logprob: -19.625
    7. '-' → logprob: -20.25
    8. '=' → logprob: -20.25
    9. '

' → logprob: -20.3125
    10. ',' → logprob: -20.3125

Token 441: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2815101742744446
    2. '):
' → logprob: -1.4065101146697998
    3. ':' → logprob: -8.906510353088379
    4. ')' → logprob: -9.406510353088379
    5. ',' → logprob: -10.281510353088379
    6. '):
' → logprob: -10.281510353088379
    7. '-' → logprob: -10.781510353088379
    8. ' ):' → logprob: -10.906510353088379
    9. '):

' → logprob: -11.406510353088379
    10. '1' → logprob: -11.781510353088379

Token 442: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18519586324691772
    2. ':' → logprob: -2.4351959228515625
    3. ':
' → logprob: -3.3101959228515625
    4. '           ' → logprob: -3.8101959228515625
    5. '<|end|>' → logprob: -4.1851959228515625
    6. '   ' → logprob: -6.0601959228515625
    7. ' if' → logprob: -6.4351959228515625
    8. ',' → logprob: -7.5601959228515625
    9. '<|end|>' → logprob: -7.6851959228515625
    10. '
' → logprob: -8.060195922851562

Token 443: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06536608189344406
    2. '           ' → logprob: -3.19036602973938
    3. 'if' (adapté à ' if') → logprob: -4.315366268157959
    4. ' ' → logprob: -5.190366268157959
    5. '       ' → logprob: -6.440366268157959
    6. '               ' → logprob: -6.940366268157959
    7. '<|end|>' → logprob: -9.0653657913208
    8. '   ' → logprob: -9.1903657913208
    9. '	       ' → logprob: -9.8153657913208
    10. '        ' → logprob: -10.1903657913208

Token 444: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2014177292585373
    2. ' i' → logprob: -1.7014176845550537
    3. '   ' → logprob: -12.951417922973633
    4. '	i' → logprob: -14.201417922973633
    5. '(i' → logprob: -14.201417922973633
    6. ' ' → logprob: -14.826417922973633
    7. '_i' → logprob: -16.701417922973633
    8. '  ' → logprob: -16.701417922973633
    9. '=i' → logprob: -16.826417922973633
    10. '
' → logprob: -17.076417922973633

Token 445: '+l' (ID: 187706)
  Prédit: '+l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+l' → logprob: -0.31676799058914185
    2. '+' → logprob: -1.316767930984497
    3. ' +' → logprob: -5.816768169403076
    4. '+i' → logprob: -7.566768169403076
    5. '+
' → logprob: -12.691767692565918
    6. '+=' → logprob: -14.941767692565918
    7. '+t' → logprob: -15.191767692565918
    8. '+k' → logprob: -15.441767692565918
    9. '＋' → logprob: -15.691767692565918
    10. '+n' → logprob: -15.816767692565918

Token 446: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.004105827305465937
    2. ' <=' → logprob: -5.504106044769287
    3. '>' → logprob: -10.629105567932129
    4. ']<=' → logprob: -13.379105567932129
    5. ')<=' → logprob: -13.754105567932129
    6. ' >' → logprob: -15.754105567932129
    7. '<len' → logprob: -15.754105567932129
    8. '<|end|>' → logprob: -16.379106521606445
    9. '```' → logprob: -16.879106521606445
    10. ')' → logprob: -17.129106521606445

Token 447: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.339278580620885e-06
    2. ' len' → logprob: -13.000001907348633
    3. '(len' → logprob: -19.625001907348633
    4. '<len' → logprob: -19.750001907348633
    5. '	len' → logprob: -20.000001907348633
    6. '[len' → logprob: -20.000001907348633
    7. '=len' → logprob: -20.125001907348633
    8. 'length' → logprob: -21.625001907348633
    9. ',len' → logprob: -21.750001907348633
    10. '   ' → logprob: -22.500001907348633

Token 448: '(bits' (ID: 170698)
  Prédit: '(bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bits' → logprob: -1.1994775377388578e-05
    2. 'bits' → logprob: -11.375012397766113
    3. ' bits' → logprob: -15.750012397766113
    4. '(bit' → logprob: -15.875012397766113
    5. '(b' → logprob: -16.000011444091797
    6. '.bits' → logprob: -18.000011444091797
    7. '(' → logprob: -18.375011444091797
    8. '<bits' → logprob: -18.750011444091797
    9. '_bits' → logprob: -18.875011444091797
    10. '(bounds' → logprob: -20.000011444091797

Token 449: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10048001259565353
    2. '):' → logprob: -2.350480079650879
    3. ')' → logprob: -9.100480079650879
    4. ':' → logprob: -10.100480079650879
    5. '           ' → logprob: -10.475480079650879
    6. '):
' → logprob: -10.475480079650879
    7. ':
' → logprob: -10.725480079650879
    8. '):

' → logprob: -10.975480079650879
    9. '       ' → logprob: -11.600480079650879
    10. ''):
' → logprob: -12.225480079650879

Token 450: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011281942715868354
    2. '           ' → logprob: -7.126128196716309
    3. ':' → logprob: -9.501128196716309
    4. ' and' → logprob: -9.626128196716309
    5. ',' → logprob: -10.001128196716309
    6. ' tokens' → logprob: -10.751128196716309
    7. ':
' → logprob: -10.751128196716309
    8. '```' → logprob: -11.001128196716309
    9. '<|end|>' → logprob: -11.251128196716309
    10. '       ' → logprob: -11.751128196716309

Token 451: ' piece' (ID: 9047)
  Prédit: ' piece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' piece' → logprob: -0.4397285282611847
    2. 'piece' (adapté à ' piece') → logprob: -1.3147284984588623
    3. 'chunk' → logprob: -3.0647284984588623
    4. ' chunk' → logprob: -4.439728736877441
    5. 'token' → logprob: -5.189728736877441
    6. 'segment' → logprob: -5.439728736877441
    7. ' fragment' → logprob: -5.814728736877441
    8. ' segment' → logprob: -5.814728736877441
    9. ' snippet' → logprob: -6.189728736877441
    10. 'code' → logprob: -6.439728736877441

Token 452: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021055489778519
    2. ' =' → logprob: -2.350210666656494
    3. '=b' → logprob: -13.350210189819336
    4. '(bits' → logprob: -13.350210189819336
    5. '=
' → logprob: -14.850210189819336
    6. ']=' → logprob: -16.850210189819336
    7. ' =
' → logprob: -16.850210189819336
    8. 'bits' → logprob: -16.850210189819336
    9. '=batch' → logprob: -16.850210189819336
    10. '<bits' → logprob: -16.975210189819336

Token 453: 'bits' (ID: 24043)
  Prédit: 'bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.0005538671393878758
    2. ' bits' → logprob: -7.500554084777832
    3. '(bits' → logprob: -14.500554084777832
    4. 'bit' → logprob: -15.125554084777832
    5. '   ' → logprob: -17.250553131103516
    6. '_bits' → logprob: -17.875553131103516
    7. '```' → logprob: -18.250553131103516
    8. 'b' → logprob: -18.375553131103516
    9. '.bits' → logprob: -18.375553131103516
    10. 'Bits' → logprob: -19.375553131103516

Token 454: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.4868770196917467e-05
    2. '[' → logprob: -11.125024795532227
    3. '[
' → logprob: -12.000024795532227
    4. 'i' → logprob: -12.875024795532227
    5. ' [' → logprob: -14.375024795532227
    6. '
' → logprob: -15.375024795532227
    7. '```' → logprob: -15.375024795532227
    8. ' ' → logprob: -16.125024795532227
    9. '[I' → logprob: -16.875024795532227
    10. '   ' → logprob: -17.250024795532227

Token 455: ':i' (ID: 34041)
  Prédit: ':i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':i' → logprob: -0.00018280261429026723
    2. 'i' → logprob: -8.75018310546875
    3. ':' → logprob: -11.00018310546875
    4. ' :' → logprob: -12.75018310546875
    5. '+i' → logprob: -13.37518310546875
    6. '[i' → logprob: -14.50018310546875
    7. ',i' → logprob: -14.62518310546875
    8. '(i' → logprob: -14.62518310546875
    9. ';i' → logprob: -14.87518310546875
    10. ' i' → logprob: -15.00018310546875

Token 456: '+l' (ID: 187706)
  Prédit: '+l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+l' → logprob: -6.945094355614856e-05
    2. ' +' → logprob: -9.750069618225098
    3. '+' → logprob: -11.500069618225098
    4. '+i' → logprob: -13.875069618225098
    5. 'l' → logprob: -17.12506866455078
    6. '	l' → logprob: -17.50006866455078
    7. '+
' → logprob: -17.50006866455078
    8. '   ' → logprob: -18.87506866455078
    9. '+n' → logprob: -19.12506866455078
    10. '＋' → logprob: -19.25006866455078

Token 457: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6934179067611694
    2. ']
' → logprob: -0.6934179067611694
    3. ']
' → logprob: -8.3184175491333
    4. '               ' → logprob: -11.4434175491333
    5. ']

' → logprob: -11.4434175491333
    6. '           ' → logprob: -12.8184175491333
    7. '       ' → logprob: -14.5684175491333
    8. '];' → logprob: -15.3184175491333
    9. ' ]' → logprob: -15.4434175491333
    10. '].' → logprob: -15.6934175491333

Token 458: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -6.349075556499884e-05
    2. 'if' → logprob: -10.0000638961792
    3. ' if' → logprob: -11.1250638961792
    4. '           ' → logprob: -13.3750638961792
    5. '<|end|>' → logprob: -14.7500638961792
    6. '                   ' → logprob: -15.1250638961792
    7. '```' → logprob: -15.1250638961792
    8. '       ' → logprob: -15.3750638961792
    9. '			' → logprob: -15.8750638961792
    10. '		       ' → logprob: -16.250062942504883

Token 459: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2751716673374176
    2. '               ' → logprob: -1.5251716375350952
    3. ' if' → logprob: -3.7751717567443848
    4. '           ' → logprob: -10.400171279907227
    5. '                   ' → logprob: -12.400171279907227
    6. '   ' → logprob: -13.150171279907227
    7. '                ' → logprob: -13.525171279907227
    8. '       ' → logprob: -13.900171279907227
    9. '              ' → logprob: -14.400171279907227
    10. ' ' → logprob: -14.900171279907227

Token 460: ' piece' (ID: 9047)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.12693870067596436
    2. ' piece' → logprob: -2.126938819885254
    3. '(piece' → logprob: -11.751938819885254
    4. 'pie' → logprob: -13.751938819885254
    5. 'piec' → logprob: -14.001938819885254
    6. '_piece' → logprob: -14.626938819885254
    7. 'p' → logprob: -16.626937866210938
    8. 'pi' → logprob: -16.876937866210938
    9. 'Piece' → logprob: -17.251937866210938
    10. 'rev' → logprob: -17.876937866210938

Token 461: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005234475247561932
    2. 'in' → logprob: -5.255234241485596
    3. ' ' → logprob: -15.380234718322754
    4. '	in' → logprob: -15.505234718322754
    5. '<|end|>' → logprob: -16.005233764648438
    6. ')' → logprob: -16.755233764648438
    7. ' not' → logprob: -17.005233764648438
    8. ']' → logprob: -17.630233764648438
    9. 'In' → logprob: -17.880233764648438
    10. '
' → logprob: -18.505233764648438

Token 462: ' rev' (ID: 10808)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.04312194138765335
    2. ' rev' → logprob: -3.1681220531463623
    3. 'code' → logprob: -9.293122291564941
    4. ' code' → logprob: -10.793122291564941
    5. '
' → logprob: -12.043122291564941
    6. '.rev' → logprob: -13.418122291564941
    7. '   ' → logprob: -13.668122291564941
    8. '_rev' → logprob: -14.543122291564941
    9. '```' → logprob: -14.918122291564941
    10. 'reverse' → logprob: -15.293122291564941

Token 463: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -1.9361264946837764e-07
    2. 'map' → logprob: -15.75
    3. 'rev' → logprob: -18.25
    4. '_MAP' → logprob: -19.0
    5. '_' → logprob: -19.25
    6. '_maps' → logprob: -19.5
    7. 'Map' → logprob: -19.75
    8. '_rev' → logprob: -19.875
    9. '   ' → logprob: -20.5
    10. '_m' → logprob: -21.25

Token 464: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.07592017948627472
    2. ':' → logprob: -2.7009201049804688
    3. '                   ' → logprob: -5.200920104980469
    4. '               ' → logprob: -8.575920104980469
    5. ']:
' → logprob: -9.075920104980469
    6. '):
' → logprob: -9.825920104980469
    7. ':

' → logprob: -10.825920104980469
    8. '                       ' → logprob: -10.950920104980469
    9. '           ' → logprob: -11.950920104980469
    10. '                  ' → logprob: -12.075920104980469

Token 465: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01233210414648056
    2. ':
' → logprob: -4.512331962585449
    3. ':' → logprob: -7.637331962585449
    4. '               ' → logprob: -8.51233196258545
    5. 'output' → logprob: -8.63733196258545
    6. '                       ' → logprob: -9.13733196258545
    7. '):
' → logprob: -9.38733196258545
    8. '                  ' → logprob: -10.13733196258545
    9. '(output' → logprob: -10.51233196258545
    10. ' output' → logprob: -10.51233196258545

Token 466: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' (adapté à ' output') → logprob: -0.02328554540872574
    2. ' output' → logprob: -3.7732856273651123
    3. '                   ' → logprob: -10.273285865783691
    4. '       ' → logprob: -13.023285865783691
    5. '                       ' → logprob: -13.648285865783691
    6. '
' → logprob: -14.273285865783691
    7. '	output' → logprob: -14.523285865783691
    8. '   ' → logprob: -14.898285865783691
    9. '               ' → logprob: -14.898285865783691
    10. '           ' → logprob: -16.023284912109375

Token 467: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007226797170005739
    2. '.' → logprob: -7.250722885131836
    3. 'append' → logprob: -11.875722885131836
    4. '.app' → logprob: -12.375722885131836
    5. '.Append' → logprob: -14.000722885131836
    6. '.ap' → logprob: -14.500722885131836
    7. 'Append' → logprob: -16.750722885131836
    8. ').' → logprob: -17.625722885131836
    9. ' .' → logprob: -17.625722885131836
    10. '.extend' → logprob: -17.875722885131836

Token 468: '(re' (ID: 8178)
  Prédit: '(re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.00671809446066618
    2. 'rev' → logprob: -5.006718158721924
    3. '(' → logprob: -13.631717681884766
    4. '(rep' → logprob: -14.381717681884766
    5. ' rev' → logprob: -14.631717681884766
    6. '(
' → logprob: -14.881717681884766
    7. '.rev' → logprob: -16.881717681884766
    8. '(rem' → logprob: -17.256717681884766
    9. '(reverse' → logprob: -17.631717681884766
    10. '_rev' → logprob: -17.756717681884766

Token 469: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0007031376590020955
    2. '_map' → logprob: -7.37570333480835
    3. 'map' → logprob: -10.000702857971191
    4. 'p' → logprob: -11.125702857971191
    5. 'rev' → logprob: -12.875702857971191
    6. 'output' → logprob: -13.000702857971191
    7. 'vp' → logprob: -13.125702857971191
    8. '[' → logprob: -13.125702857971191
    9. 'ov' → logprob: -13.500702857971191
    10. 'f' → logprob: -14.250702857971191

Token 470: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -5.512236498361744e-07
    2. '_MAP' → logprob: -15.750000953674316
    3. 'Map' → logprob: -16.125
    4. 'map' → logprob: -16.25
    5. '_piece' → logprob: -17.25
    6. '[' → logprob: -17.75
    7. '[p' → logprob: -18.25
    8. ')' → logprob: -18.375
    9. 'piece' → logprob: -18.375
    10. '(piece' → logprob: -18.5

Token 471: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -2.856408536899835e-05
    2. '[' → logprob: -10.500028610229492
    3. '(piece' → logprob: -14.500028610229492
    4. '[[' → logprob: -15.875028610229492
    5. 'p' → logprob: -16.375028610229492
    6. ')[' → logprob: -16.875028610229492
    7. ')' → logprob: -17.125028610229492
    8. '[(' → logprob: -17.125028610229492
    9. '[
' → logprob: -17.125028610229492
    10. '(p' → logprob: -17.125028610229492

Token 472: 'iece' (ID: 12778)
  Prédit: 'iece'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iece' → logprob: -0.02450701780617237
    2. 'piece' → logprob: -3.7745070457458496
    3. '(piece' → logprob: -7.27450704574585
    4. 'ece' → logprob: -7.77450704574585
    5. '_piece' → logprob: -9.899506568908691
    6. 'ie' → logprob: -10.274506568908691
    7. ' piece' → logprob: -10.899506568908691
    8. '[p' → logprob: -11.899506568908691
    9. ']' → logprob: -12.149506568908691
    10. 'ice' → logprob: -12.399506568908691

Token 473: '])
' (ID: 5169)
  Prédit: '])
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])
' → logprob: -0.4826420843601227
    2. '])' → logprob: -0.9826420545578003
    3. ')
' → logprob: -5.10764217376709
    4. ')' → logprob: -6.35764217376709
    5. ']' → logprob: -7.48264217376709
    6. ']
' → logprob: -9.48264217376709
    7. ''])
' → logprob: -10.60764217376709
    8. ''])' → logprob: -10.73264217376709
    9. '])
' → logprob: -10.73264217376709
    10. '                   ' → logprob: -11.23264217376709

Token 474: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0007628110470250249
    2. '
' → logprob: -7.625762939453125
    3. '                    
' → logprob: -9.250762939453125
    4. 'i' → logprob: -9.750762939453125
    5. '               ' → logprob: -10.500762939453125
    6. '<|end|>' → logprob: -10.500762939453125
    7. '           ' → logprob: -11.000762939453125
    8. '                       ' → logprob: -11.625762939453125
    9. '				' → logprob: -12.250762939453125
    10. '```' → logprob: -12.375762939453125

Token 475: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.002709653927013278
    2. ' i' → logprob: -6.002709865570068
    3. '                   ' → logprob: -8.37770938873291
    4. '
' → logprob: -12.62770938873291
    5. '                    
' → logprob: -15.75270938873291
    6. '               ' → logprob: -16.252710342407227
    7. '   ' → logprob: -16.377710342407227
    8. '           ' → logprob: -16.627710342407227
    9. '	i' → logprob: -16.627710342407227
    10. '```' → logprob: -16.627710342407227

Token 476: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0003361774142831564
    2. ' +=' → logprob: -8.000336647033691
    3. ']+=' → logprob: -15.000336647033691
    4. '+=(' → logprob: -15.500336647033691
    5. '=' → logprob: -16.625335693359375
    6. '+='' → logprob: -16.750335693359375
    7. '+' → logprob: -16.750335693359375
    8. '+="' → logprob: -17.250335693359375
    9. '```' → logprob: -18.375335693359375
    10. '   ' → logprob: -19.125335693359375

Token 477: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.9361264946837764e-07
    2. ' l' → logprob: -15.875
    3. '	l' → logprob: -20.875
    4. '```' → logprob: -21.125
    5. '   ' → logprob: -22.0
    6. '+l' → logprob: -22.0
    7. '$l' → logprob: -22.875
    8. '*l' → logprob: -23.125
    9. 'len' → logprob: -23.25
    10. 'length' → logprob: -23.375

Token 478: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00044616201194003224
    2. '               ' → logprob: -9.000446319580078
    3. '
' → logprob: -9.375446319580078
    4. '<|end|>' → logprob: -9.625446319580078
    5. '                       ' → logprob: -10.000446319580078
    6. '           ' → logprob: -10.125446319580078
    7. '				' → logprob: -10.250446319580078
    8. '                  ' → logprob: -11.375446319580078
    9. '		           ' → logprob: -11.375446319580078
    10. '                    ' → logprob: -12.375446319580078

Token 479: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -5.7888184528565034e-05
    2. '               ' → logprob: -10.6250581741333
    3. '                       ' → logprob: -11.7500581741333
    4. '				' → logprob: -11.8750581741333
    5. '           ' → logprob: -12.1250581741333
    6. '                  ' → logprob: -13.0000581741333
    7. '<|end|>' → logprob: -13.0000581741333
    8. '```' → logprob: -13.1250581741333
    9. '       ' → logprob: -13.2500581741333
    10. '		           ' → logprob: -13.6250581741333

Token 480: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.023355886340141296
    2. 'break' (adapté à ' break') → logprob: -3.7733559608459473
    3. ' break' → logprob: -9.648355484008789
    4. '               ' → logprob: -11.273355484008789
    5. '
' → logprob: -11.523355484008789
    6. '				' → logprob: -12.148355484008789
    7. '	break' → logprob: -12.273355484008789
    8. '           ' → logprob: -12.523355484008789
    9. '                  ' → logprob: -12.898355484008789
    10. '                       ' → logprob: -13.273355484008789

Token 481: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18461255729198456
    2. 'else' → logprob: -2.434612512588501
    3. ' else' → logprob: -2.559612512588501
    4. '   ' → logprob: -6.30961275100708
    5. '           ' → logprob: -7.30961275100708
    6. '<|end|>' → logprob: -7.30961275100708
    7. '```' → logprob: -8.809612274169922
    8. '               ' → logprob: -9.059612274169922
    9. '	else' → logprob: -9.559612274169922
    10. ')' → logprob: -11.059612274169922

Token 482: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1235441267490387
    2. 'else' → logprob: -2.748544216156006
    3. ' else' → logprob: -2.998544216156006
    4. '   ' → logprob: -6.248544216156006
    5. '           ' → logprob: -8.248543739318848
    6. '```' → logprob: -9.748543739318848
    7. '	else' → logprob: -10.623543739318848
    8. '               ' → logprob: -10.748543739318848
    9. '<|end|>' → logprob: -10.998543739318848
    10. '      ' → logprob: -12.748543739318848

Token 483: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.5045401453971863
    2. ' else' → logprob: -1.129540205001831
    3. '       ' → logprob: -2.754540205001831
    4. '   ' → logprob: -5.504539966583252
    5. '	else' → logprob: -5.754539966583252
    6. '<|end|>' → logprob: -6.879539966583252
    7. '```' → logprob: -6.879539966583252
    8. '	' → logprob: -10.50454044342041
    9. ' ' → logprob: -10.87954044342041
    10. '=' → logprob: -12.00454044342041

Token 484: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05623548850417137
    2. ':
' → logprob: -2.9312355518341064
    3. '           ' → logprob: -6.931235313415527
    4. '       ' → logprob: -7.931235313415527
    5. '   ' → logprob: -11.931235313415527
    6. '          ' → logprob: -13.681235313415527
    7. '               ' → logprob: -13.931235313415527
    8. '=' → logprob: -13.931235313415527
    9. '        ' → logprob: -14.306235313415527
    10. '>' → logprob: -14.431235313415527

Token 485: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24428462982177734
    2. '           ' → logprob: -2.4942846298217773
    3. '   ' → logprob: -2.4942846298217773
    4. 'i' → logprob: -2.9942846298217773
    5. ' i' → logprob: -6.494284629821777
    6. '	i' → logprob: -10.744284629821777
    7. '	   ' → logprob: -11.994284629821777
    8. '               ' → logprob: -12.494284629821777
    9. '	       ' → logprob: -12.744284629821777
    10. '```' → logprob: -13.619284629821777

Token 486: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -1.1517960956552997e-05
    2. 'output' → logprob: -11.750011444091797
    3. ' i' → logprob: -13.125011444091797
    4. '   ' → logprob: -13.750011444091797
    5. '           ' → logprob: -14.875011444091797
    6. '       ' → logprob: -17.250011444091797
    7. '	i' → logprob: -17.625011444091797
    8. ' output' → logprob: -18.875011444091797
    9. '
' → logprob: -19.875011444091797
    10. '            
' → logprob: -20.500011444091797

Token 487: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -6.749814019713085e-06
    2. ' +=' → logprob: -12.000006675720215
    3. '+' → logprob: -14.750006675720215
    4. '=' → logprob: -16.25000762939453
    5. ']+=' → logprob: -16.75000762939453
    6. '+='' → logprob: -17.00000762939453
    7. '1' → logprob: -18.37500762939453
    8. 'i' → logprob: -18.50000762939453
    9. '+=(' → logprob: -19.12500762939453
    10. '-=' → logprob: -19.75000762939453

Token 488: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -19.875
    4. '```' → logprob: -20.25
    5. '１' → logprob: -21.0
    6. '0' → logprob: -21.5
    7. '=' → logprob: -21.75
    8. '﻿' → logprob: -22.125
    9. '१' → logprob: -22.125
    10. '' → logprob: -22.4375

Token 489: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5794074535369873
    2. '   ' → logprob: -0.8294074535369873
    3. ' print' → logprob: -5.829407691955566
    4. '```' → logprob: -8.204407691955566
    5. '
' → logprob: -8.454407691955566
    6. '    
' → logprob: -11.579407691955566
    7. '<|end|>' → logprob: -11.579407691955566
    8. '	print' → logprob: -12.204407691955566
    9. '       ' → logprob: -12.329407691955566
    10. '``' → logprob: -13.329407691955566

Token 490: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3138485550880432
    2. '   ' → logprob: -1.3138484954833984
    3. ' print' → logprob: -7.563848495483398
    4. '```' → logprob: -9.688848495483398
    5. '
' → logprob: -13.063848495483398
    6. '	print' → logprob: -13.188848495483398
    7. '    
' → logprob: -14.563848495483398
    8. 'for' → logprob: -15.188848495483398
    9. '<|end|>' → logprob: -15.313848495483398
    10. '`' → logprob: -15.438848495483398

Token 491: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0017665742198005319
    2. '   ' → logprob: -6.501766681671143
    3. ' print' → logprob: -8.251766204833984
    4. '	print' → logprob: -13.501766204833984
    5. '```' → logprob: -13.501766204833984
    6. '
' → logprob: -14.501766204833984
    7. 'for' → logprob: -16.501766204833984
    8. '    
' → logprob: -17.001766204833984
    9. '`' → logprob: -18.251766204833984
    10. 'import' → logprob: -18.376766204833984

Token 492: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -5.3596853831550106e-05
    2. '''.' → logprob: -10.750053405761719
    3. '("' → logprob: -11.000053405761719
    4. '(' → logprob: -11.125053405761719
    5. '('').' → logprob: -14.625053405761719
    6. '''' → logprob: -17.75005340576172
    7. '()' → logprob: -18.12505340576172
    8. '('',' → logprob: -18.12505340576172
    9. '(('' → logprob: -18.25005340576172
    10. ' ''.' → logprob: -18.37505340576172

Token 493: ''.' (ID: 6120)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.00016086915275081992
    2. '''' → logprob: -9.375161170959473
    3. ' ''.' → logprob: -9.750161170959473
    4. '('' → logprob: -11.125161170959473
    5. ''' → logprob: -13.500161170959473
    6. '"' → logprob: -14.000161170959473
    7. ''.' → logprob: -15.125161170959473
    8. ''',' → logprob: -15.875161170959473
    9. '.' → logprob: -16.375160217285156
    10. '['' → logprob: -17.250160217285156

Token 494: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -2.4987974029500037e-05
    2. '''.' → logprob: -10.750024795532227
    3. '.' → logprob: -13.125024795532227
    4. '.join' → logprob: -14.250024795532227
    5. ' join' → logprob: -14.375024795532227
    6. 'print' → logprob: -16.125024795532227
    7. '('').' → logprob: -17.000024795532227
    8. '(join' → logprob: -17.625024795532227
    9. 'j' → logprob: -18.000024795532227
    10. ' ''.' → logprob: -18.125024795532227

Token 495: '(output' (ID: 22485)
  Prédit: '(output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(output' → logprob: -0.002475777640938759
    2. 'output' → logprob: -6.002475738525391
    3. ' output' → logprob: -17.12747573852539
    4. ')' → logprob: -17.25247573852539
    5. '$output' → logprob: -17.50247573852539
    6. '	output' → logprob: -17.62747573852539
    7. 'Output' → logprob: -18.25247573852539
    8. '
' → logprob: -20.00247573852539
    9. '_output' → logprob: -20.00247573852539
    10. '/output' → logprob: -20.50247573852539

Token 496: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001238004770129919
    2. '))' → logprob: -9.000123977661133
    3. '())' → logprob: -15.500123977661133
    4. ' )' → logprob: -16.625123977661133
    5. '')' → logprob: -17.125123977661133
    6. ')`' → logprob: -17.500123977661133
    7. ')))' → logprob: -17.750123977661133
    8. '})' → logprob: -17.875123977661133
    9. ')}' → logprob: -18.250123977661133
    10. '])' → logprob: -18.375123977661133


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 494
Tokens correctement prédits (1ère position, stricte): 254
Tokens correctement prédits (1ère position, avec adaptation): 267
Tokens correctement prédits (top 10): 453
Précision stricte (1ère position): 51.42%
Précision adaptée (1ère position): 54.05%
Précision (top 10): 91.70%
================================================================================
