================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:02:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

def solve():
    input = sys.stdin.readline
    while True:
        n = input()
        if not n:
            break
        n = int(n)
        if n == 0:
            break
        price = {}
        for _ in range(n):
            s, p = input().split()
            price[s] = int(p)
        m = int(input())
        recipes = {}
        for _ in range(m):
            line = input().split()
            o = line[0]
            k = int(line[1])
            ingredients = line[2:]
            recipes[o] = ingredients
        t = input().strip()
        memo = {}
        def min_cost(item):
            if item in memo:
                return memo[item]
            res = price[item]
            if item in recipes:
                cost = sum(min_cost(i) for i in recipes[item])
                if cost < res:
                    res = cost
            memo[item] = res
            return res
        print(min_cost(t))

if __name__ == "__main__":
    solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4366624355316162
    2. '.' → logprob: -1.1866624355316162
    3. 'import' → logprob: -4.061662673950195
    4. '\' → logprob: -4.436662673950195
    5. 'newline' → logprob: -5.061662673950195
    6. '<|end|>' → logprob: -5.561662673950195
    7. '
' → logprob: -5.936662673950195
    8. '```' → logprob: -6.561662673950195
    9. '' → logprob: -7.061662673950195
    10. '<|end|>' → logprob: -7.186662673950195

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -2.2127087504486553e-05
    2. ' .' → logprob: -11.875021934509277
    3. '.`' → logprob: -13.125021934509277
    4. '[' → logprob: -13.250021934509277
    5. '.readline' → logprob: -13.250021934509277
    6. '.import' → logprob: -13.875021934509277
    7. '.user' → logprob: -14.000021934509277
    8. '."""' → logprob: -14.125021934509277
    9. '.​' → logprob: -14.250021934509277
    10. '.[' → logprob: -14.625021934509277

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -1.197851538658142
    2. 't' → logprob: -1.447851538658142
    3. 'default' → logprob: -2.0728516578674316
    4. '_' → logprob: -2.5728516578674316
    5. 's' → logprob: -2.9478516578674316
    6. 'encoding' → logprob: -3.6978516578674316
    7. 'limit' → logprob: -4.072851657867432
    8. '_version' → logprob: -4.322851657867432
    9. 'rl' → logprob: -4.572851657867432
    10. 'sys' → logprob: -4.572851657867432

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0028418414294719696
    2. 'ursive' → logprob: -6.252841949462891
    3. 'urs' → logprob: -7.377841949462891
    4. 'ur' → logprob: -9.12784194946289
    5. 'urse' → logprob: -10.50284194946289
    6. '_limit' → logprob: -10.50284194946289
    7. 'ursively' → logprob: -10.87784194946289
    8. 'ursor' → logprob: -10.87784194946289
    9. 'set' → logprob: -11.25284194946289
    10. '_' → logprob: -11.50284194946289

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.15307803452014923
    2. 'limit' → logprob: -2.028078079223633
    3. '_depth' → logprob: -4.653078079223633
    4. '_' → logprob: -7.903078079223633
    5. 'depth' → logprob: -9.653078079223633
    6. ' limit' → logprob: -10.028078079223633
    7. '_rate' → logprob: -10.153078079223633
    8. '_error' → logprob: -10.403078079223633
    9. '_lim' → logprob: -10.653078079223633
    10. '_max' → logprob: -10.778078079223633

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.3557529857498594e-05
    2. '(
' → logprob: -11.37502384185791
    3. ' (' → logprob: -11.87502384185791
    4. '(

' → logprob: -12.75002384185791
    5. '((' → logprob: -14.50002384185791
    6. '```' → logprob: -14.75002384185791
    7. '("("' → logprob: -14.75002384185791
    8. '('' → logprob: -15.50002384185791
    9. '(.' → logprob: -15.62502384185791
    10. '(
' → logprob: -15.75002384185791

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.07892151176929474
    2. '100' → logprob: -2.5789215564727783
    3. '300' → logprob: -11.2039213180542
    4. ' ' → logprob: -11.8289213180542
    5. '500' → logprob: -12.3289213180542
    6. '999' → logprob: -12.5789213180542
    7. '200' → logprob: -14.3289213180542
    8. '150' → logprob: -14.3289213180542
    9. '1' → logprob: -14.7039213180542
    10. '   ' → logprob: -14.9539213180542

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026859356090426445
    2. '000' → logprob: -4.026859283447266
    3. '00' → logprob: -5.151859283447266
    4. '4' → logprob: -6.526859283447266
    5. '6' → logprob: -6.651859283447266
    6. '5' → logprob: -10.151859283447266
    7. '**' → logprob: -10.401859283447266
    8. '3' → logprob: -11.026859283447266
    9. '7' → logprob: -11.526859283447266
    10. ''' → logprob: -11.526859283447266

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0016767330234870315
    2. '6' → logprob: -7.001676559448242
    3. '9' → logprob: -7.751676559448242
    4. '8' → logprob: -8.001676559448242
    5. ' ' → logprob: -17.751676559448242
    6. '```' → logprob: -18.751676559448242
    7. '5' → logprob: -20.126676559448242
    8. ')' → logprob: -20.876676559448242
    9. '10' → logprob: -21.001676559448242
    10. '``' → logprob: -21.376676559448242

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.438573680294212e-06
    2. '))' → logprob: -12.500005722045898
    3. ' )' → logprob: -13.500005722045898
    4. ')
' → logprob: -16.1250057220459
    5. ')))' → logprob: -16.8750057220459
    6. '`)' → logprob: -17.3750057220459
    7. ')`' → logprob: -17.3750057220459
    8. '```' → logprob: -17.6250057220459
    9. '')' → logprob: -18.1250057220459
    10. ' ' → logprob: -18.2500057220459

Token 13: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005465574562549591
    2. '\' → logprob: -6.380465507507324
    3. ')' → logprob: -6.505465507507324
    4. '```' → logprob: -7.130465507507324
    5. 'n' → logprob: -8.255465507507324
    6. '\n' → logprob: -8.880465507507324
    7. 'import' → logprob: -8.880465507507324
    8. '`' → logprob: -9.005465507507324
    9. ',' → logprob: -9.130465507507324
    10. 'a' → logprob: -9.130465507507324

Token 14: ' solve' (ID: 17722)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.1688832938671112
    2. ' dfs' → logprob: -2.1688833236694336
    3. ' ' → logprob: -3.5438833236694336
    4. ' fibonacci' → logprob: -4.918883323669434
    5. ' factor' → logprob: -5.793883323669434
    6. ' f' → logprob: -7.918883323669434
    7. ' fib' → logprob: -8.043883323669434
    8. ' solve' → logprob: -8.543883323669434
    9. ' foo' → logprob: -9.043883323669434
    10. ' recursive' → logprob: -9.043883323669434

Token 15: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05109177529811859
    2. '_' → logprob: -3.4260916709899902
    3. '():' → logprob: -4.42609167098999
    4. ':' → logprob: -6.55109167098999
    5. '(:' → logprob: -6.55109167098999
    6. '(_' → logprob: -7.55109167098999
    7. '_:' → logprob: -8.051092147827148
    8. '```' → logprob: -8.551092147827148
    9. '(_:' → logprob: -8.801092147827148
    10. '):' → logprob: -9.301092147827148

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014023995026946068
    2. '    
' → logprob: -5.389023780822754
    3. '```' → logprob: -5.514023780822754
    4. 'n' → logprob: -6.764023780822754
    5. '    ' → logprob: -7.139023780822754
    6. ' 
' → logprob: -7.639023780822754
    7. ' readline' → logprob: -7.639023780822754
    8. ' indentation' → logprob: -7.764023780822754
    9. ' ' → logprob: -8.014023780822754
    10. '\n' → logprob: -8.264023780822754

Token 17: ' input' (ID: 3422)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7579182982444763
    2. '   ' → logprob: -1.382918357849121
    3. 'n' → logprob: -2.007918357849121
    4. '    ' → logprob: -2.632918357849121
    5. ' pass' → logprob: -3.132918357849121
    6. 'a' → logprob: -5.132918357849121
    7. 'pass' → logprob: -5.132918357849121
    8. ' input' → logprob: -5.382918357849121
    9. ' a' → logprob: -5.507918357849121
    10. 'input' (adapté à ' input') → logprob: -6.382918357849121

Token 18: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.46208256483078003
    2. '(' → logprob: -1.0870826244354248
    3. '().' → logprob: -4.462082386016846
    4. '_data' → logprob: -4.587082386016846
    5. 'data' → logprob: -4.962082386016846
    6. ' ()' → logprob: -6.962082386016846
    7. '.' → logprob: -7.212082386016846
    8. '('' → logprob: -7.712082386016846
    9. '_line' → logprob: -8.087082862854004
    10. '("")' → logprob: -8.337082862854004

Token 19: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.2623680830001831
    2. ' input' → logprob: -2.1373682022094727
    3. 'input' → logprob: -2.7623682022094727
    4. 'sys' → logprob: -3.0123682022094727
    5. ' lambda' → logprob: -8.262368202209473
    6. 'lambda' → logprob: -9.012368202209473
    7. ' raw' → logprob: -10.262368202209473
    8. ' ' → logprob: -10.512368202209473
    9. 'raw' → logprob: -11.137368202209473
    10. 'stdin' → logprob: -11.762368202209473

Token 20: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00014096579980105162
    2. '.readline' → logprob: -9.500141143798828
    3. '.stdout' → logprob: -10.000141143798828
    4. '.std' → logprob: -11.500141143798828
    5. '.' → logprob: -12.750141143798828
    6. ' .' → logprob: -13.000141143798828
    7. '.argv' → logprob: -13.250141143798828
    8. '.input' → logprob: -13.375141143798828
    9. 'stdin' → logprob: -13.875141143798828
    10. '.stderr' → logprob: -15.500141143798828

Token 21: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00147557957097888
    2. '.read' → logprob: -6.876475811004639
    3. 'read' → logprob: -7.751475811004639
    4. 'buffer' → logprob: -11.62647533416748
    5. '.readlines' → logprob: -13.25147533416748
    6. '.buffer' → logprob: -14.37647533416748
    7. ' readline' → logprob: -14.50147533416748
    8. '.' → logprob: -15.00147533416748
    9. '_read' → logprob: -15.50147533416748
    10. 'reader' → logprob: -16.251476287841797

Token 22: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007350104860961437
    2. '()
' → logprob: -5.007349967956543
    3. '()\' → logprob: -8.382349967956543
    4. '().' → logprob: -8.507349967956543
    5. '
' → logprob: -9.007349967956543
    6. '(' → logprob: -10.632349967956543
    7. '()

' → logprob: -11.382349967956543
    8. '   ' → logprob: -11.382349967956543
    9. ')' → logprob: -11.757349967956543
    10. ' ()' → logprob: -11.882349967956543

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037712883204221725
    2. '    
' → logprob: -3.662712812423706
    3. '(n' → logprob: -5.912713050842285
    4. 'n' → logprob: -6.037713050842285
    5. '()' → logprob: -6.162713050842285
    6. 'def' → logprob: -7.162713050842285
    7. '```' → logprob: -7.162713050842285
    8. '
' → logprob: -8.162713050842285
    9. '\' → logprob: -8.287713050842285
    10. '(' → logprob: -8.287713050842285

Token 24: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4335162043571472
    2. '   ' → logprob: -1.183516263961792
    3. 'data' → logprob: -3.433516263961792
    4. ' n' → logprob: -5.183516025543213
    5. 'a' → logprob: -5.933516025543213
    6. 'for' → logprob: -6.933516025543213
    7. 'x' → logprob: -7.433516025543213
    8. 'N' → logprob: -7.433516025543213
    9. 'd' → logprob: -7.683516025543213
    10. 'line' → logprob: -7.933516025543213

Token 25: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.0022865685168653727
    2. 'True' → logprob: -6.127286434173584
    3. '(True' → logprob: -9.252286911010742
    4. ' ' → logprob: -12.377286911010742
    5. ' not' → logprob: -14.252286911010742
    6. ' Tru' → logprob: -15.502286911010742
    7. '  ' → logprob: -15.752286911010742
    8. '=True' → logprob: -16.252286911010742
    9. ' (' → logprob: -16.377286911010742
    10. ' true' → logprob: -17.127286911010742

Token 26: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005475413985550404
    2. '():' → logprob: -5.3804755210876465
    3. ' :' → logprob: -8.130475044250488
    4. '       ' → logprob: -8.755475044250488
    5. '):' → logprob: -8.755475044250488
    6. ':
' → logprob: -9.005475044250488
    7. ',' → logprob: -10.630475044250488
    8. '   ' → logprob: -10.755475044250488
    9. ':**' → logprob: -10.755475044250488
    10. '(' → logprob: -11.005475044250488

Token 27: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0063940612599253654
    2. '    ' → logprob: -5.381393909454346
    3. '   ' → logprob: -7.256393909454346
    4. '        
' → logprob: -8.256394386291504
    5. ' ' → logprob: -8.381394386291504
    6. '      ' → logprob: -8.631394386291504
    7. '        ' → logprob: -9.756394386291504
    8. '  ' → logprob: -9.756394386291504
    9. '     ' → logprob: -10.131394386291504
    10. '```' → logprob: -10.506394386291504

Token 28: ' n' (ID: 297)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.051781825721263885
    2. 'line' → logprob: -3.6767818927764893
    3. 'data' → logprob: -4.30178165435791
    4. ' data' → logprob: -4.80178165435791
    5. 'n' (adapté à ' n') → logprob: -7.05178165435791
    6. ' s' → logprob: -7.17678165435791
    7. 's' → logprob: -7.55178165435791
    8. 'x' → logprob: -7.67678165435791
    9. ' n' → logprob: -8.55178165435791
    10. '   ' → logprob: -8.80178165435791

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00977096613496542
    2. '=' → logprob: -4.63477087020874
    3. ' ==' → logprob: -12.009771347045898
    4. ' >' → logprob: -12.759771347045898
    5. ' ' → logprob: -12.884771347045898
    6. '=int' → logprob: -12.884771347045898
    7. '>' → logprob: -15.134771347045898
    8. ' :=' → logprob: -16.1347713470459
    9. '    ' → logprob: -16.1347713470459
    10. ' ' → logprob: -16.3847713470459

Token 30: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.0776439905166626
    2. ' int' → logprob: -1.2026439905166626
    3. ' input' → logprob: -1.4526439905166626
    4. 'input' → logprob: -2.077643871307373
    5. ' ' → logprob: -11.452644348144531
    6. ' sys' → logprob: -11.952644348144531
    7. 'sys' → logprob: -13.577644348144531
    8. '(int' → logprob: -13.577644348144531
    9. '(input' → logprob: -13.827644348144531
    10. '=int' → logprob: -13.827644348144531

Token 31: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1379927396774292
    2. '().' → logprob: -2.1379928588867188
    3. '(' → logprob: -4.512992858886719
    4. ' ()' → logprob: -11.637992858886719
    5. '()
' → logprob: -12.512992858886719
    6. '（）' → logprob: -12.512992858886719
    7. '()(' → logprob: -12.637992858886719
    8. '())' → logprob: -13.012992858886719
    9. '()

' → logprob: -13.137992858886719
    10. '.' → logprob: -13.137992858886719

Token 32: '       ' (ID: 309)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.02614283561706543
    2. '.rstrip' → logprob: -3.7761428356170654
    3. '.' → logprob: -6.6511430740356445
    4. '<|end|>' → logprob: -7.2761430740356445
    5. 'rstrip' → logprob: -8.151143074035645
    6. '   ' → logprob: -8.901143074035645
    7. '       ' → logprob: -9.026143074035645
    8. '<|end|>' → logprob: -9.401143074035645
    9. '.readline' → logprob: -9.776143074035645
    10. 'strip' → logprob: -9.776143074035645

Token 33: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14126475155353546
    2. ' if' → logprob: -2.5162646770477295
    3. 'if' (adapté à ' if') → logprob: -3.6412646770477295
    4. '.strip' → logprob: -5.141264915466309
    5. '   ' → logprob: -5.266264915466309
    6. '<|end|>' → logprob: -5.266264915466309
    7. ' ' → logprob: -5.516264915466309
    8. '    ' → logprob: -7.016264915466309
    9. 'n' → logprob: -7.016264915466309
    10. '<|end|>' → logprob: -7.641264915466309

Token 34: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0005423080874606967
    2. ' n' → logprob: -8.250542640686035
    3. 'not' → logprob: -8.375542640686035
    4. ' ' → logprob: -10.000542640686035
    5. 'n' → logprob: -12.500542640686035
    6. '	not' → logprob: -14.000542640686035
    7. ' ' → logprob: -15.250542640686035
    8. ' n't' → logprob: -15.625542640686035
    9. 'n't' → logprob: -16.75054168701172
    10. ' no' → logprob: -17.62554168701172

Token 35: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0013273799559101462
    2. 'n' → logprob: -6.6263275146484375
    3. ' ' → logprob: -14.001327514648438
    4. '	n' → logprob: -14.751327514648438
    5. ' ' → logprob: -15.751327514648438
    6. ')n' → logprob: -16.751327514648438
    7. ' н' → logprob: -17.251327514648438
    8. '<|end|>' → logprob: -17.626327514648438
    9. '(n' → logprob: -18.251327514648438
    10. '<|end|>' → logprob: -19.001327514648438

Token 36: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0021368174348026514
    2. '.strip' → logprob: -6.377136707305908
    3. '.' → logprob: -8.752137184143066
    4. ' :' → logprob: -9.127137184143066
    5. ':
' → logprob: -9.127137184143066
    6. '.rstrip' → logprob: -10.502137184143066
    7. ':return' → logprob: -11.502137184143066
    8. ' or' → logprob: -12.127137184143066
    9. '.readline' → logprob: -12.252137184143066
    10. '):' → logprob: -12.252137184143066

Token 37: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.027214402332901955
    2. '       ' → logprob: -3.652214288711548
    3. '   ' → logprob: -7.902214527130127
    4. ' break' → logprob: -8.777214050292969
    5. ' ' → logprob: -9.527214050292969
    6. '<|end|>' → logprob: -10.277214050292969
    7. 'break' → logprob: -10.277214050292969
    8. ':' → logprob: -10.652214050292969
    9. '<|end|>' → logprob: -10.777214050292969
    10. '               ' → logprob: -11.027214050292969

Token 38: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1603483110666275
    2. ' break' → logprob: -2.035348415374756
    3. 'break' (adapté à ' break') → logprob: -4.160348415374756
    4. '       ' → logprob: -7.160348415374756
    5. '               ' → logprob: -7.535348415374756
    6. '   ' → logprob: -8.410347938537598
    7. ' ' → logprob: -8.910347938537598
    8. '	break' → logprob: -9.035347938537598
    9. '```' → logprob: -10.410347938537598
    10. '_break' → logprob: -10.660347938537598

Token 39: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007830788381397724
    2. '<|end|>' → logprob: -5.132830619812012
    3. 'n' → logprob: -6.882830619812012
    4. '        
' → logprob: -8.757830619812012
    5. '
' → logprob: -8.882830619812012
    6. '<|end|>' → logprob: -9.007830619812012
    7. '   ' → logprob: -9.132830619812012
    8. '\n' → logprob: -9.257830619812012
    9. '        ' → logprob: -10.257830619812012
    10. ',' → logprob: -10.632830619812012

Token 40: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002268254989758134
    2. '        
' → logprob: -6.627268314361572
    3. '<|end|>' → logprob: -7.752268314361572
    4. '
' → logprob: -8.252267837524414
    5. '        ' → logprob: -9.627267837524414
    6. 'n' → logprob: -10.002267837524414
    7. '\n' → logprob: -10.627267837524414
    8. '```' → logprob: -11.002267837524414
    9. '   ' → logprob: -11.252267837524414
    10. '<|end|>' → logprob: -11.377267837524414

Token 41: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.6058076024055481
    2. '       ' → logprob: -1.1058075428009033
    3. ' n' → logprob: -2.1058075428009033
    4. '   ' → logprob: -7.480807781219482
    5. '    ' → logprob: -7.980807781219482
    6. '        ' → logprob: -9.105807304382324
    7. ' =' → logprob: -9.355807304382324
    8. '(n' → logprob: -9.480807304382324
    9. '	n' → logprob: -9.480807304382324
    10. '        
' → logprob: -9.855807304382324

Token 42: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005262099206447601
    2. ' =' → logprob: -5.2552618980407715
    3. '=int' → logprob: -10.50526237487793
    4. '=
' → logprob: -15.25526237487793
    5. '=

' → logprob: -15.50526237487793
    6. '＝' → logprob: -15.88026237487793
    7. '.' → logprob: -16.75526237487793
    8. '=n' → logprob: -16.88026237487793
    9. ' ' → logprob: -17.25526237487793
    10. 'int' → logprob: -17.50526237487793

Token 43: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3143784999847412
    2. ' int' → logprob: -1.3143784999847412
    3. 'n' → logprob: -7.18937873840332
    4. ' n' → logprob: -7.93937873840332
    5. ' ' → logprob: -13.31437873840332
    6. '=int' → logprob: -13.56437873840332
    7. 'in' → logprob: -14.43937873840332
    8. ' in' → logprob: -14.43937873840332
    9. '(int' → logprob: -15.43937873840332
    10. '  ' → logprob: -15.56437873840332

Token 44: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.04859282076358795
    2. '(' → logprob: -3.0485928058624268
    3. ' (' → logprob: -12.298592567443848
    4. '()' → logprob: -15.298592567443848
    5. ' ' → logprob: -15.673592567443848
    6. ')' → logprob: -16.048593521118164
    7. ')(' → logprob: -16.048593521118164
    8. '(nn' → logprob: -16.798593521118164
    9. '（' → logprob: -17.173593521118164
    10. '(
' → logprob: -17.548593521118164

Token 45: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2842308680992573e-05
    2. ')
' → logprob: -11.125022888183594
    3. '`)' → logprob: -12.875022888183594
    4. '))' → logprob: -13.250022888183594
    5. ' )' → logprob: -13.750022888183594
    6. '()' → logprob: -14.375022888183594
    7. ')`' → logprob: -14.625022888183594
    8. '   ' → logprob: -15.250022888183594
    9. '())' → logprob: -15.375022888183594
    10. '")' → logprob: -15.625022888183594

Token 46: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008228613995015621
    2. '        ' → logprob: -5.258228778839111
    3. '   ' → logprob: -6.758228778839111
    4. '    ' → logprob: -6.758228778839111
    5. ' if' → logprob: -8.883228302001953
    6. '<|end|>' → logprob: -9.258228302001953
    7. '        
' → logprob: -9.258228302001953
    8. '      ' → logprob: -9.383228302001953
    9. 'if' → logprob: -9.758228302001953
    10. ' ' → logprob: -10.133228302001953

Token 47: ' if' (ID: 538)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -1.5895837545394897
    2. ' s' → logprob: -1.8395837545394897
    3. ' numbers' → logprob: -2.3395838737487793
    4. ' a' → logprob: -2.3395838737487793
    5. ' arr' → logprob: -2.5895838737487793
    6. 'dp' → logprob: -3.2145838737487793
    7. '    ' → logprob: -3.2145838737487793
    8. ' if' → logprob: -3.2145838737487793
    9. ' data' → logprob: -3.4645838737487793
    10. ' result' → logprob: -3.8395838737487793

Token 48: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.005277038086205721
    2. 'n' → logprob: -5.255277156829834
    3. ' not' → logprob: -10.130276679992676
    4. ' ' → logprob: -13.130276679992676
    5. ' ' → logprob: -14.880276679992676
    6. 'not' → logprob: -14.880276679992676
    7. '	n' → logprob: -15.692776679992676
    8. 'n't' → logprob: -15.692776679992676
    9. '(n' → logprob: -16.380277633666992
    10. ')n' → logprob: -16.630277633666992

Token 49: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.018017306923866272
    2. '==' → logprob: -4.393017292022705
    3. ' <=' → logprob: -5.893017292022705
    4. ' >' → logprob: -6.643017292022705
    5. ' <' → logprob: -6.893017292022705
    6. '>' → logprob: -9.018017768859863
    7. ' ' → logprob: -9.143017768859863
    8. ')' → logprob: -10.018017768859863
    9. '<=' → logprob: -10.268017768859863
    10. ' >=' → logprob: -10.768017768859863

Token 50: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05493340268731117
    2. ' ' → logprob: -2.9299333095550537
    3. '1' → logprob: -10.929933547973633
    4. ' -' → logprob: -11.179933547973633
    5. '-' → logprob: -11.304933547973633
    6. '=' → logprob: -14.054933547973633
    7. '2' → logprob: -14.367433547973633
    8. '  ' → logprob: -14.554933547973633
    9. '7' → logprob: -14.617433547973633
    10. ' ' → logprob: -14.617433547973633

Token 51: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005653033731505275
    2. '-' → logprob: -7.625565528869629
    3. '1' → logprob: -10.375565528869629
    4. ' ' → logprob: -10.750565528869629
    5. '```' → logprob: -12.500565528869629
    6. '42' → logprob: -12.750565528869629
    7. ' -' → logprob: -13.000565528869629
    8. '2' → logprob: -13.250565528869629
    9. '3' → logprob: -13.625565528869629
    10. '4' → logprob: -13.688065528869629

Token 52: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009898189455270767
    2. ':
' → logprob: -7.62598991394043
    3. ' :' → logprob: -7.62598991394043
    4. ':return' → logprob: -11.75098991394043
    5. ' :
' → logprob: -12.75098991394043
    6. '   ' → logprob: -13.00098991394043
    7. '       ' → logprob: -14.37598991394043
    8. ' ' → logprob: -16.12598991394043
    9. ':
' → logprob: -16.37598991394043
    10. '  ' → logprob: -17.00098991394043

Token 53: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004247692879289389
    2. '       ' → logprob: -5.504247665405273
    3. '   ' → logprob: -9.879247665405273
    4. ':' → logprob: -10.254247665405273
    5. ' break' → logprob: -10.629247665405273
    6. '          ' → logprob: -11.504247665405273
    7. '        ' → logprob: -11.629247665405273
    8. '            ' → logprob: -12.504247665405273
    9. '\t' → logprob: -12.504247665405273
    10. '     ' → logprob: -12.504247665405273

Token 54: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.1574695110321045
    2. '       ' → logprob: -2.9074695110321045
    3. ' return' → logprob: -2.9074695110321045
    4. 'break' (adapté à ' break') → logprob: -4.032469749450684
    5. 'return' → logprob: -4.532469749450684
    6. '           ' → logprob: -5.032469749450684
    7. '   ' → logprob: -7.032469749450684
    8. ' ' → logprob: -8.157469749450684
    9. '	break' → logprob: -8.782469749450684
    10. '```' → logprob: -9.782469749450684

Token 55: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.315792441368103
    2. '
' → logprob: -1.690792441368103
    3. '<|end|>' → logprob: -2.9407925605773926
    4. '        
' → logprob: -3.8157925605773926
    5. '        ' → logprob: -5.565792560577393
    6. '    ' → logprob: -6.315792560577393
    7. '<|end|>' → logprob: -6.815792560577393
    8. '\n' → logprob: -7.190792560577393
    9. '   ' → logprob: -7.315792560577393
    10. '' → logprob: -7.440792560577393

Token 56: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13248857855796814
    2. '<|end|>' → logprob: -3.007488489151001
    3. '
' → logprob: -3.132488489151001
    4. '        
' → logprob: -3.882488489151001
    5. '   ' → logprob: -6.25748872756958
    6. '```' → logprob: -6.38248872756958
    7. '<|end|>' → logprob: -6.63248872756958
    8. '    
' → logprob: -6.75748872756958
    9. '\' → logprob: -6.75748872756958
    10. '    ' → logprob: -7.38248872756958

Token 57: ' price' (ID: 3911)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0866275206208229
    2. '   ' → logprob: -3.08662748336792
    3. '    ' → logprob: -4.33662748336792
    4. '        ' → logprob: -4.96162748336792
    5. ' ' → logprob: -5.96162748336792
    6. '        
' → logprob: -5.96162748336792
    7. '\' → logprob: -6.08662748336792
    8. '<|end|>' → logprob: -6.58662748336792
    9. '    
' → logprob: -6.96162748336792
    10. '```' → logprob: -7.08662748336792

Token 58: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06585652381181717
    2. ' =' → logprob: -2.815856456756592
    3. '=' → logprob: -6.065856456756592
    4. '_' → logprob: -7.065856456756592
    5. '_s' → logprob: -8.56585693359375
    6. ',' → logprob: -8.69085693359375
    7. '_list' → logprob: -8.81585693359375
    8. '[' → logprob: -10.19085693359375
    9. '_per' → logprob: -10.31585693359375
    10. ' ' → logprob: -11.19085693359375

Token 59: ' {}
' (ID: 11421)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.262781023979187
    2. '[' → logprob: -1.387781023979187
    3. '[]' → logprob: -1.887781023979187
    4. ' list' → logprob: -2.1377811431884766
    5. 'list' → logprob: -2.7627811431884766
    6. ' []' → logprob: -2.8877811431884766
    7. '[int' → logprob: -3.2627811431884766
    8. '[list' → logprob: -3.7627811431884766
    9. '[n' → logprob: -5.262781143188477
    10. '{}' → logprob: -5.387781143188477

Token 60: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.11447347700595856
    2. ' for' → logprob: -2.239473581314087
    3. '   ' → logprob: -7.739473342895508
    4. 'items' → logprob: -8.239473342895508
    5. 'prices' → logprob: -8.739473342895508
    6. 'count' → logprob: -9.239473342895508
    7. '       ' → logprob: -9.239473342895508
    8. ' items' → logprob: -9.614473342895508
    9. '	for' → logprob: -10.114473342895508
    10. 'colors' → logprob: -10.239473342895508

Token 62: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.022010112181305885
    2. '_' → logprob: -4.522010326385498
    3. ' i' → logprob: -4.522010326385498
    4. ' ' → logprob: -10.64700984954834
    5. 'i' → logprob: -12.02200984954834
    6. ' range' → logprob: -12.89700984954834
    7. '_i' → logprob: -13.39700984954834
    8. ' ' → logprob: -14.14700984954834
    9. 'range' → logprob: -15.14700984954834
    10. '_range' → logprob: -15.77200984954834

Token 63: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009252228774130344
    2. 'in' → logprob: -4.759252071380615
    3. 'range' → logprob: -7.884252071380615
    4. ' ' → logprob: -8.884252548217773
    5. 'n' → logprob: -9.884252548217773
    6. ' _' → logprob: -10.634252548217773
    7. 'i' → logprob: -11.134252548217773
    8. '_' → logprob: -11.759252548217773
    9. ' range' → logprob: -11.884252548217773
    10. ' i' → logprob: -12.759252548217773

Token 64: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.009775093756616116
    2. ' range' → logprob: -4.634775161743164
    3. '	range' → logprob: -12.259775161743164
    4. '(range' → logprob: -13.134775161743164
    5. 'rang' → logprob: -13.259775161743164
    6. 'ran' → logprob: -13.384775161743164
    7. 'input' → logprob: -13.509775161743164
    8. '[' → logprob: -13.884775161743164
    9. '```' → logprob: -14.009775161743164
    10. ' ' → logprob: -14.134775161743164

Token 65: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00040993880247697234
    2. '(' → logprob: -8.250410079956055
    3. ' (' → logprob: -9.125410079956055
    4. ' n' → logprob: -10.625410079956055
    5. 'n' → logprob: -11.250410079956055
    6. '(range' → logprob: -13.250410079956055
    7. ' range' → logprob: -15.000410079956055
    8. 'range' → logprob: -15.250410079956055
    9. '(s' → logprob: -17.750410079956055
    10. '	n' → logprob: -17.750410079956055

Token 66: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0021732202731072903
    2. '):
' → logprob: -6.50217342376709
    3. ' ):' → logprob: -7.50217342376709
    4. ')' → logprob: -9.62717342376709
    5. '       ' → logprob: -10.75217342376709
    6. '   ' → logprob: -11.37717342376709
    7. '):
' → logprob: -11.87717342376709
    8. ':' → logprob: -12.37717342376709
    9. '           ' → logprob: -13.50217342376709
    10. ' ):
' → logprob: -14.12717342376709

Token 67: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.37544721364974976
    2. '       ' → logprob: -2.1254472732543945
    3. '   ' → logprob: -2.6254472732543945
    4. '    ' → logprob: -2.8754472732543945
    5. ' ' → logprob: -3.7504472732543945
    6. '	   ' → logprob: -4.6254472732543945
    7. '<|end|>' → logprob: -4.7504472732543945
    8. '        ' → logprob: -5.1254472732543945
    9. '            ' → logprob: -6.1254472732543945
    10. '    	   ' → logprob: -6.3754472732543945

Token 68: ' s' (ID: 265)
  Prédit: ' item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.8875729441642761
    2. ' s' → logprob: -1.012573003768921
    3. ' name' → logprob: -2.512573003768921
    4. ' a' → logprob: -3.012573003768921
    5. ' x' → logprob: -4.012572765350342
    6. ' p' → logprob: -4.137572765350342
    7. ' product' → logprob: -4.762572765350342
    8. ' line' → logprob: -4.887572765350342
    9. 'a' → logprob: -5.137572765350342
    10. 's' (adapté à ' s') → logprob: -5.262572765350342

Token 69: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8727987408638
    2. ',' → logprob: -1.1227986812591553
    3. '=' → logprob: -1.4977986812591553
    4. ' ,' → logprob: -3.8727986812591553
    5. ',p' → logprob: -5.122798919677734
    6. '=input' → logprob: -6.247798919677734
    7. 'tr' → logprob: -7.122798919677734
    8. 'p' → logprob: -7.747798919677734
    9. ',t' → logprob: -7.747798919677734
    10. '=line' → logprob: -8.247798919677734

Token 70: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.05990554392337799
    2. ' p' → logprob: -2.934905529022217
    3. 'c' → logprob: -6.059905529022217
    4. 'd' → logprob: -7.309905529022217
    5. 'k' → logprob: -7.434905529022217
    6. 'v' → logprob: -7.809905529022217
    7. 'a' → logprob: -8.309906005859375
    8. 'b' → logprob: -8.809906005859375
    9. 'q' → logprob: -9.309906005859375
    10. ' c' → logprob: -9.309906005859375

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07332450151443481
    2. '=' → logprob: -2.69832444190979
    3. 'rice' → logprob: -5.698324680328369
    4. ' ' → logprob: -11.323324203491211
    5. 'r' → logprob: -11.948324203491211
    6. 'rices' → logprob: -12.948324203491211
    7. '=input' → logprob: -12.948324203491211
    8. 'ice' → logprob: -13.198324203491211
    9. 'iece' → logprob: -13.948324203491211
    10. ',' → logprob: -14.073324203491211

Token 72: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.020597364753484726
    2. 'input' → logprob: -3.895597457885742
    3. ' map' → logprob: -10.145597457885742
    4. ' sys' → logprob: -12.020597457885742
    5. 'map' → logprob: -12.145597457885742
    6. '    ' → logprob: -13.270597457885742
    7. ' ' → logprob: -13.895597457885742
    8. ' ' → logprob: -14.395597457885742
    9. 'sys' → logprob: -14.770597457885742
    10. '=input' → logprob: -14.770597457885742

Token 73: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0019293478690087795
    2. '()' → logprob: -6.25192928314209
    3. '(' → logprob: -14.62692928314209
    4. ' ().' → logprob: -16.126930236816406
    5. '()
' → logprob: -16.626930236816406
    6. '()

' → logprob: -16.751930236816406
    7. '()).' → logprob: -17.376930236816406
    8. '())' → logprob: -18.501930236816406
    9. '.strip' → logprob: -19.126930236816406
    10. ' ()' → logprob: -19.251930236816406

Token 74: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.04053270444273949
    2. 'rstrip' → logprob: -3.5405325889587402
    3. 'strip' → logprob: -4.54053258895874
    4. 'rs' → logprob: -9.790533065795898
    5. 'spl' → logprob: -15.165533065795898
    6. ' split' → logprob: -15.165533065795898
    7. '(split' → logprob: -17.6655330657959
    8. 'sp' → logprob: -17.9155330657959
    9. '.rstrip' → logprob: -17.9155330657959
    10. '```' → logprob: -18.0405330657959

Token 75: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0034141552168875933
    2. '(' → logprob: -5.753414154052734
    3. '('' → logprob: -8.628414154052734
    4. ')' → logprob: -11.253414154052734
    5. '()
' → logprob: -11.503414154052734
    6. '(',' → logprob: -12.128414154052734
    7. '(),' → logprob: -12.128414154052734
    8. ' ()' → logprob: -12.503414154052734
    9. ',' → logprob: -12.628414154052734
    10. '())' → logprob: -13.003414154052734

Token 76: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 77: ' price' (ID: 3911)
  Prédit: ' price'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' price' → logprob: -0.22126643359661102
    2. ' p' → logprob: -1.7212663888931274
    3. 'price' (adapté à ' price') → logprob: -3.971266508102417
    4. 'p' → logprob: -7.346266269683838
    5. ' ' → logprob: -9.596266746520996
    6. '	price' → logprob: -9.721266746520996
    7. ' ' → logprob: -11.346266746520996
    8. '_price' → logprob: -11.971266746520996
    9. ' s' → logprob: -12.221266746520996
    10. '            ' → logprob: -13.221266746520996

Token 78: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.0033290917053818703
    2. '[' → logprob: -6.003329277038574
    3. '[int' → logprob: -7.128329277038574
    4. '[p' → logprob: -10.003329277038574
    5. ' [' → logprob: -12.628329277038574
    6. 's' → logprob: -14.378329277038574
    7. '[str' → logprob: -14.503329277038574
    8. '[]' → logprob: -15.503329277038574
    9. '[f' → logprob: -15.878329277038574
    10. '\[' → logprob: -15.878329277038574

Token 79: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005445729475468397
    2. ']=' → logprob: -7.875544548034668
    3. ')' → logprob: -9.375544548034668
    4. ' ]' → logprob: -10.125544548034668
    5. '=' → logprob: -10.500544548034668
    6. ' =' → logprob: -12.125544548034668
    7. '])' → logprob: -12.750544548034668
    8. ']int' → logprob: -13.500544548034668
    9. ',' → logprob: -14.875544548034668
    10. ')]' → logprob: -15.000544548034668

Token 80: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5762520432472229
    2. ' =' → logprob: -0.8262520432472229
    3. '=int' → logprob: -8.076251983642578
    4. ')' → logprob: -14.951251983642578
    5. ' ' → logprob: -15.076251983642578
    6. '=float' → logprob: -15.576251983642578
    7. '[int' → logprob: -15.701251983642578
    8. 'int' → logprob: -15.826251983642578
    9. ' =)' → logprob: -16.076251983642578
    10. ',' → logprob: -16.326251983642578

Token 81: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3132845163345337
    2. ' int' → logprob: -1.3132845163345337
    3. 'float' → logprob: -11.563284873962402
    4. ' float' → logprob: -11.938284873962402
    5. '[int' → logprob: -12.938284873962402
    6. '(int' → logprob: -13.438284873962402
    7. '=int' → logprob: -13.938284873962402
    8. '	int' → logprob: -14.563284873962402
    9. '<int' → logprob: -14.938284873962402
    10. ',int' → logprob: -15.313284873962402

Token 82: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0007100477814674377
    2. '(' → logprob: -7.2507100105285645
    3. '(
' → logprob: -18.250709533691406
    4. 'p' → logprob: -18.375709533691406
    5. ' (' → logprob: -18.500709533691406
    6. '(P' → logprob: -19.500709533691406
    7. '(price' → logprob: -19.625709533691406
    8. '()' → logprob: -20.000709533691406
    9. ')' → logprob: -20.000709533691406
    10. '(

' → logprob: -20.125709533691406

Token 83: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8074162653647363e-05
    2. ' )' → logprob: -11.125018119812012
    3. ')
' → logprob: -13.125018119812012
    4. '<|end|>' → logprob: -15.000018119812012
    5. '}' → logprob: -15.250018119812012
    6. '))' → logprob: -15.750018119812012
    7. '   ' → logprob: -15.750018119812012
    8. ' ' → logprob: -16.250017166137695
    9. ')}' → logprob: -16.875017166137695
    10. ')

' → logprob: -17.000017166137695

Token 84: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2309306412935257
    2. '   ' → logprob: -2.3559305667877197
    3. '
' → logprob: -3.2309305667877197
    4. '<|end|>' → logprob: -3.4809305667877197
    5. '    
' → logprob: -4.355930805206299
    6. '        
' → logprob: -5.105930805206299
    7. '    ' → logprob: -5.105930805206299
    8. ' ' → logprob: -6.230930805206299
    9. '  ' → logprob: -6.230930805206299
    10. '```' → logprob: -6.355930805206299

Token 85: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -0.03342990577220917
    2. 'b' → logprob: -3.9084298610687256
    3. ' m' → logprob: -5.908430099487305
    4. 'q' → logprob: -6.533430099487305
    5. 'w' → logprob: -6.783430099487305
    6. 'budget' → logprob: -6.783430099487305
    7. 'order' → logprob: -7.033430099487305
    8. 'k' → logprob: -7.158430099487305
    9. 'money' → logprob: -7.283430099487305
    10. 'ans' → logprob: -8.033430099487305

Token 86: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012519658543169498
    2. '=' → logprob: -4.387519836425781
    3. '=int' → logprob: -12.512519836425781
    4. '    ' → logprob: -13.012519836425781
    5. ' ' → logprob: -13.387519836425781
    6. '<|end|>' → logprob: -14.262519836425781
    7. '  ' → logprob: -14.887519836425781
    8. '   ' → logprob: -14.887519836425781
    9. ',' → logprob: -15.137519836425781
    10. '<|end|>' → logprob: -15.637519836425781

Token 87: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.47435495257377625
    2. ' int' → logprob: -0.9743549823760986
    3. 'input' → logprob: -8.97435474395752
    4. ' input' → logprob: -8.97435474395752
    5. '   ' → logprob: -11.47435474395752
    6. ' ' → logprob: -12.09935474395752
    7. '    ' → logprob: -12.72435474395752
    8. '  ' → logprob: -13.09935474395752
    9. '	int' → logprob: -13.97435474395752
    10. '=int' → logprob: -13.97435474395752

Token 88: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -1.0445127372804563e-05
    2. '(' → logprob: -11.50001049041748
    3. 'input' → logprob: -16.000009536743164
    4. ' (' → logprob: -16.125009536743164
    5. '(in' → logprob: -17.750009536743164
    6. '=input' → logprob: -18.375009536743164
    7. ' input' → logprob: -19.375009536743164
    8. '((' → logprob: -20.250009536743164
    9. '(sys' → logprob: -20.250009536743164
    10. ',input' → logprob: -20.250009536743164

Token 89: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6931931376457214
    2. '())' → logprob: -0.6931931376457214
    3. ' ())' → logprob: -11.068193435668945
    4. ')' → logprob: -11.443193435668945
    5. '()
' → logprob: -11.568193435668945
    6. '().' → logprob: -12.818193435668945
    7. '())
' → logprob: -12.943193435668945
    8. ' ()' → logprob: -13.443193435668945
    9. '();)' → logprob: -13.818193435668945
    10. '(' → logprob: -13.943193435668945

Token 90: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23023344576358795
    2. 'total' → logprob: -1.9802334308624268
    3. 'result' → logprob: -3.9802334308624268
    4. ' total' → logprob: -4.105233669281006
    5. 'cart' → logprob: -4.855233669281006
    6. ' result' → logprob: -5.855233669281006
    7. 'products' → logprob: -6.355233669281006
    8. 'order' → logprob: -6.605233669281006
    9. '        
' → logprob: -6.605233669281006
    10. 'sum' → logprob: -6.855233669281006

Token 91: ' recipes' (ID: 22649)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.133036732673645
    2. 'result' → logprob: -1.383036732673645
    3. 'cart' → logprob: -2.5080366134643555
    4. '       ' → logprob: -2.7580366134643555
    5. 'answer' → logprob: -3.2580366134643555
    6. ' total' → logprob: -3.5080366134643555
    7. ' result' → logprob: -3.5080366134643555
    8. 'money' → logprob: -3.6330366134643555
    9. 'count' → logprob: -4.1330366134643555
    10. 'ans' → logprob: -4.2580366134643555

Token 92: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0013400046154856682
    2. '=' → logprob: -6.626339912414551
    3. 's' → logprob: -12.87633991241455
    4. ' ' → logprob: -12.87633991241455
    5. '[]' → logprob: -12.87633991241455
    6. '={}' → logprob: -12.87633991241455
    7. '_' → logprob: -13.87633991241455
    8. '=[]' → logprob: -14.37633991241455
    9. '[' → logprob: -14.62633991241455
    10. '	' → logprob: -15.25133991241455

Token 93: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.061458081007003784
    2. '[]' → logprob: -2.936458110809326
    3. ' {}' → logprob: -5.561458110809326
    4. ' []' → logprob: -5.936458110809326
    5. '[' → logprob: -9.811457633972168
    6. '{' → logprob: -11.686457633972168
    7. '   ' → logprob: -13.686457633972168
    8. '{}
' → logprob: -13.936457633972168
    9. '={}' → logprob: -14.186457633972168
    10. ' ' → logprob: -14.186457633972168

Token 94: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010348338400945067
    2. '<|end|>' → logprob: -7.376034736633301
    3. 'for' → logprob: -8.5010347366333
    4. ' for' → logprob: -8.7510347366333
    5. '   ' → logprob: -11.2510347366333
    6. '	' → logprob: -11.5010347366333
    7. '<|end|>' → logprob: -11.8760347366333
    8. '	   ' → logprob: -12.6260347366333
    9. '	for' → logprob: -12.8760347366333
    10. '```' → logprob: -12.8760347366333

Token 95: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.026633964851498604
    2. ' for' → logprob: -4.0266337394714355
    3. '       ' → logprob: -4.7766337394714355
    4. '	for' → logprob: -10.776634216308594
    5. '   ' → logprob: -14.026634216308594
    6. 'from' → logprob: -14.151634216308594
    7. '```' → logprob: -14.526634216308594
    8. 'recipes' → logprob: -14.901634216308594
    9. 'ingredients' → logprob: -16.276634216308594
    10. 'recipe' → logprob: -16.526634216308594

Token 96: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.020555783063173294
    2. '_' → logprob: -3.8955557346343994
    3. ' i' → logprob: -11.64555549621582
    4. ' ' → logprob: -13.27055549621582
    5. ' range' → logprob: -13.52055549621582
    6. '_m' → logprob: -14.89555549621582
    7. '_i' → logprob: -14.89555549621582
    8. '_range' → logprob: -15.02055549621582
    9. 'range' → logprob: -15.27055549621582
    10. ' __' → logprob: -15.39555549621582

Token 97: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10316003113985062
    2. 'in' → logprob: -2.3531601428985596
    3. 'range' → logprob: -6.4781599044799805
    4. '_' → logprob: -6.8531599044799805
    5. ' range' → logprob: -8.85315990447998
    6. 'm' → logprob: -8.97815990447998
    7. 's' → logprob: -10.10315990447998
    8. ' ' → logprob: -10.97815990447998
    9. ' _' → logprob: -11.97815990447998
    10. '```' → logprob: -12.22815990447998

Token 98: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0003571535926312208
    2. ' range' → logprob: -8.125357627868652
    3. '(range' → logprob: -10.000357627868652
    4. 'm' → logprob: -11.125357627868652
    5. 'input' → logprob: -15.250357627868652
    6. 'int' → logprob: -15.375357627868652
    7. 'in' → logprob: -15.875357627868652
    8. ')' → logprob: -15.875357627868652
    9. '(m' → logprob: -16.500356674194336
    10. '	range' → logprob: -16.500356674194336

Token 99: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.010251910425722599
    2. ' (' → logprob: -4.635251998901367
    3. '(' → logprob: -7.885251998901367
    4. ' m' → logprob: -9.385251998901367
    5. 'm' → logprob: -10.260251998901367
    6. ' ' → logprob: -16.135251998901367
    7. '   ' → logprob: -16.135251998901367
    8. '(s' → logprob: -16.510251998901367
    9. '	m' → logprob: -16.635251998901367
    10. '(M' → logprob: -16.760251998901367

Token 100: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0629403218626976
    2. '):
' → logprob: -2.8129403591156006
    3. ':' → logprob: -7.1879401206970215
    4. ' ):' → logprob: -9.68794059753418
    5. ')' → logprob: -9.81294059753418
    6. '   ' → logprob: -10.56294059753418
    7. ',' → logprob: -11.06294059753418
    8. '():' → logprob: -11.31294059753418
    9. '):
' → logprob: -11.31294059753418
    10. '       ' → logprob: -11.56294059753418

Token 101: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023949073627591133
    2. '       ' → logprob: -4.523949146270752
    3. '   ' → logprob: -4.648949146270752
    4. '	       ' → logprob: -6.648949146270752
    5. 's' → logprob: -7.648949146270752
    6. '	   ' → logprob: -7.648949146270752
    7. '<|end|>' → logprob: -7.773949146270752
    8. '    	   ' → logprob: -9.398948669433594
    9. '		   ' → logprob: -9.523948669433594
    10. '<|end|>' → logprob: -9.648948669433594

Token 102: ' line' (ID: 2543)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.2972148656845093
    2. 's' → logprob: -1.5472148656845093
    3. ' line' → logprob: -1.5472148656845093
    4. ' name' → logprob: -2.297214984893799
    5. 'name' → logprob: -3.047214984893799
    6. ' r' → logprob: -3.422214984893799
    7. ' dish' → logprob: -3.797214984893799
    8. 'r' → logprob: -4.172214984893799
    9. 'line' (adapté à ' line') → logprob: -4.172214984893799
    10. '   ' → logprob: -5.047214984893799

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10026274621486664
    2. '=' → logprob: -2.3502626419067383
    3. '=line' → logprob: -9.850262641906738
    4. '=input' → logprob: -13.600262641906738
    5. '   ' → logprob: -13.850262641906738
    6. 's' → logprob: -14.600262641906738
    7. ' ' → logprob: -15.475262641906738
    8. 'line' → logprob: -15.600262641906738
    9. '	' → logprob: -16.225263595581055
    10. '    ' → logprob: -16.350263595581055

Token 104: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2519494891166687
    2. ' input' → logprob: -1.5019495487213135
    3. 'list' → logprob: -11.251949310302734
    4. '   ' → logprob: -13.001949310302734
    5. 'sys' → logprob: -13.501949310302734
    6. ' list' → logprob: -13.626949310302734
    7. '=input' → logprob: -14.251949310302734
    8. '	input' → logprob: -14.251949310302734
    9. ' sys' → logprob: -14.876949310302734
    10. '[input' → logprob: -15.376949310302734

Token 105: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.02324792370200157
    2. '()' → logprob: -3.7732479572296143
    3. '(' → logprob: -13.898247718811035
    4. '()
' → logprob: -14.523247718811035
    5. '()

' → logprob: -15.148247718811035
    6. '())' → logprob: -15.273247718811035
    7. ')' → logprob: -15.898247718811035
    8. '.strip' → logprob: -16.14824867248535
    9. '.rstrip' → logprob: -16.39824867248535
    10. '()).' → logprob: -17.14824867248535

Token 106: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.22580866515636444
    2. 'strip' → logprob: -1.7258086204528809
    3. 'rstrip' → logprob: -3.725808620452881
    4. 'rs' → logprob: -11.975809097290039
    5. ' split' → logprob: -15.850809097290039
    6. 'spl' → logprob: -17.35080909729004
    7. 'r' → logprob: -18.22580909729004
    8. '(split' → logprob: -18.47580909729004
    9. ' strip' → logprob: -18.97580909729004
    10. 'replace' → logprob: -18.97580909729004

Token 107: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002248984295874834
    2. '()
' → logprob: -6.127248764038086
    3. '(' → logprob: -10.002248764038086
    4. ' ()' → logprob: -12.002248764038086
    5. '()

' → logprob: -12.127248764038086
    6. '('' → logprob: -12.877248764038086
    7. '())' → logprob: -14.127248764038086
    8. '()\' → logprob: -14.252248764038086
    9. '()
' → logprob: -14.752248764038086
    10. '()[' → logprob: -14.752248764038086

Token 108: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07249120622873306
    2. '   ' → logprob: -3.07249116897583
    3. '           ' → logprob: -4.57249116897583
    4. 'name' → logprob: -5.57249116897583
    5. ' ' → logprob: -6.69749116897583
    6. ' name' → logprob: -6.82249116897583
    7. 's' → logprob: -6.94749116897583
    8. ' recipe' → logprob: -7.07249116897583
    9. ' s' → logprob: -7.19749116897583
    10. '[' → logprob: -7.44749116897583

Token 109: ' o' (ID: 293)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.1153879165649414
    2. 'dish' → logprob: -1.1153879165649414
    3. ' dish' → logprob: -1.6153879165649414
    4. 'name' → logprob: -2.8653879165649414
    5. 'item' → logprob: -3.7403879165649414
    6. 's' → logprob: -3.9903879165649414
    7. 'd' → logprob: -4.865387916564941
    8. ' r' → logprob: -4.990387916564941
    9. 'product' → logprob: -5.115387916564941
    10. '   ' → logprob: -5.740387916564941

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6604120135307312
    2. '=' → logprob: -1.035412073135376
    3. 'p' → logprob: -3.035412073135376
    4. 'ut' → logprob: -3.035412073135376
    5. 'bj' → logprob: -4.535411834716797
    6. 'wner' → logprob: -4.660411834716797
    7. 'r' → logprob: -5.785411834716797
    8. 'per' → logprob: -6.035411834716797
    9. 'b' → logprob: -6.160411834716797
    10. 'perator' → logprob: -7.285411834716797

Token 111: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.018265943974256516
    2. ' line' → logprob: -4.018265724182129
    3. '[line' → logprob: -9.518265724182129
    4. 'int' → logprob: -10.768265724182129
    5. '(line' → logprob: -11.643265724182129
    6. ' int' → logprob: -12.268265724182129
    7. '[' → logprob: -12.768265724182129
    8. ' ' → logprob: -13.018265724182129
    9. ' [' → logprob: -14.018265724182129
    10. '	line' → logprob: -14.268265724182129

Token 112: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009296870557591319
    2. '(' → logprob: -7.875929832458496
    3. '0' → logprob: -7.875929832458496
    4. '()[' → logprob: -9.000929832458496
    5. ':' → logprob: -12.000929832458496
    6. '[:' → logprob: -12.125929832458496
    7. '[:-' → logprob: -12.375929832458496
    8. '.pop' → logprob: -12.375929832458496
    9. '   ' → logprob: -12.500929832458496
    10. ' ' → logprob: -12.875929832458496

Token 113: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00030185774085111916
    2. '[' → logprob: -8.6253023147583
    3. ' ' → logprob: -9.1253023147583
    4. '1' → logprob: -11.5003023147583
    5. '(' → logprob: -14.5003023147583
    6. '   ' → logprob: -15.0003023147583
    7. ':' → logprob: -15.0003023147583
    8. '2' → logprob: -15.1253023147583
    9. '-' → logprob: -15.1253023147583
    10. ']' → logprob: -15.6253023147583

Token 114: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07099886238574982
    2. '<|end|>' → logprob: -3.6959989070892334
    3. ',' → logprob: -3.9459989070892334
    4. ')' → logprob: -3.9459989070892334
    5. ']
' → logprob: -6.320998668670654
    6. '<|end|>' → logprob: -7.070998668670654
    7. '])' → logprob: -7.820998668670654
    8. '           ' → logprob: -8.320999145507812
    9. 's' → logprob: -8.695999145507812
    10. '
' → logprob: -8.820999145507812

Token 115: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5070937871932983
    2. '           ' → logprob: -2.257093906402588
    3. ' =' → logprob: -2.382093906402588
    4. ',' → logprob: -2.507093906402588
    5. '=' → logprob: -3.007093906402588
    6. '<|end|>' → logprob: -4.382093906402588
    7. 'count' → logprob: -4.757093906402588
    8. 'num' → logprob: -4.757093906402588
    9. 'k' → logprob: -5.007093906402588
    10. ' k' → logprob: -5.007093906402588

Token 116: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.043634798377752304
    2. 'c' → logprob: -4.04363489151001
    3. ' k' → logprob: -4.41863489151001
    4. 'q' → logprob: -5.79363489151001
    5. 't' → logprob: -6.04363489151001
    6. 'r' → logprob: -6.54363489151001
    7. 'num' → logprob: -7.16863489151001
    8. 'cost' → logprob: -7.16863489151001
    9. 'cnt' → logprob: -7.29363489151001
    10. 'd' → logprob: -7.79363489151001

Token 117: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11285573989152908
    2. '=' → logprob: -2.2378556728363037
    3. '=int' → logprob: -11.237855911254883
    4. '   ' → logprob: -11.987855911254883
    5. ' ' → logprob: -11.987855911254883
    6. '  ' → logprob: -12.487855911254883
    7. ',' → logprob: -13.737855911254883
    8. '    ' → logprob: -13.862855911254883
    9. 'w' → logprob: -14.612855911254883
    10. '	' → logprob: -14.987855911254883

Token 118: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.47408074140548706
    2. 'int' → logprob: -0.9740807414054871
    3. '[int' → logprob: -13.474081039428711
    4. '=int' → logprob: -14.099081039428711
    5. '	int' → logprob: -14.474081039428711
    6. '(int' → logprob: -14.599081039428711
    7. ' ' → logprob: -15.099081039428711
    8. '<int' → logprob: -15.849081039428711
    9. ']int' → logprob: -15.849081039428711
    10. ':int' → logprob: -16.84908103942871

Token 119: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -3.5597102396423e-05
    2. '(' → logprob: -10.250035285949707
    3. ' line' → logprob: -15.875035285949707
    4. 'line' → logprob: -17.000036239624023
    5. ' (' → logprob: -17.250036239624023
    6. '=line' → logprob: -17.375036239624023
    7. '[line' → logprob: -18.500036239624023
    8. '	line' → logprob: -18.750036239624023
    9. '#line' → logprob: -18.875036239624023
    10. '(
' → logprob: -19.375036239624023

Token 120: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.26474127173423767
    2. '(' → logprob: -1.51474130153656
    3. '(line' → logprob: -4.38974142074585
    4. '[line' → logprob: -9.139740943908691
    5. ' (' → logprob: -9.639740943908691
    6. ' line' → logprob: -10.514740943908691
    7. '1' → logprob: -10.639740943908691
    8. ' [' → logprob: -10.764740943908691
    9. '()[' → logprob: -11.264740943908691
    10. '][' → logprob: -11.389740943908691

Token 121: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9385402993066236e-05
    2. ' ' → logprob: -11.500019073486328
    3. '[' → logprob: -12.250019073486328
    4. '2' → logprob: -13.000019073486328
    5. ']' → logprob: -14.625019073486328
    6. '   ' → logprob: -14.875019073486328
    7. '(' → logprob: -15.000019073486328
    8. '```' → logprob: -15.000019073486328
    9. '][' → logprob: -15.500019073486328
    10. '  ' → logprob: -16.250019073486328

Token 122: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.6448678374290466
    2. ')' → logprob: -0.7698678374290466
    3. ')
' → logprob: -5.144867897033691
    4. '])
' → logprob: -5.394867897033691
    5. ' )' → logprob: -7.144867897033691
    6. ']' → logprob: -7.144867897033691
    7. ' ])' → logprob: -9.269867897033691
    8. ' )
' → logprob: -10.519867897033691
    9. '）' → logprob: -10.769867897033691
    10. '           ' → logprob: -11.144867897033691

Token 123: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005110899452120066
    2. '       ' → logprob: -5.755110740661621
    3. '<|end|>' → logprob: -6.505110740661621
    4. ',' → logprob: -9.255110740661621
    5. '   ' → logprob: -9.630110740661621
    6. 'ingredients' → logprob: -9.755110740661621
    7. '<|end|>' → logprob: -10.130110740661621
    8. '	       ' → logprob: -10.505110740661621
    9. '		' → logprob: -10.880110740661621
    10. 'recipes' → logprob: -11.130110740661621

Token 124: ' ingredients' (ID: 15838)
  Prédit: 'recipes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'recipes' → logprob: -0.8047488331794739
    2. '           ' → logprob: -1.304748773574829
    3. 'ingredients' (adapté à ' ingredients') → logprob: -2.429748773574829
    4. 'components' → logprob: -2.429748773574829
    5. 'items' → logprob: -3.304748773574829
    6. ' recipes' → logprob: -4.054749011993408
    7. 'rec' → logprob: -4.179749011993408
    8. 'recipe' → logprob: -4.804749011993408
    9. '       ' → logprob: -4.929749011993408
    10. ' components' → logprob: -5.804749011993408

Token 125: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07891181856393814
    2. '=' → logprob: -2.578911781311035
    3. '=[]' → logprob: -11.578911781311035
    4. ',' → logprob: -11.828911781311035
    5. '<|end|>' → logprob: -13.953911781311035
    6. '[]' → logprob: -14.328911781311035
    7. '<|end|>' → logprob: -14.453911781311035
    8. ' ' → logprob: -14.453911781311035
    9. '	' → logprob: -14.703911781311035
    10. ')' → logprob: -14.828911781311035

Token 126: ' line' (ID: 2543)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7126891016960144
    2. '{}' → logprob: -0.7126891016960144
    3. 'line' → logprob: -4.21268892288208
    4. '[line' → logprob: -5.46268892288208
    5. ' []' → logprob: -8.587689399719238
    6. '[' → logprob: -10.212689399719238
    7. 'list' → logprob: -10.837689399719238
    8. ' line' → logprob: -11.087689399719238
    9. '[(' → logprob: -11.462689399719238
    10. '[]
' → logprob: -11.962689399719238

Token 127: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.452426608419046e-05
    2. '[k' → logprob: -10.37503433227539
    3. '2' → logprob: -13.00003433227539
    4. ' [' → logprob: -14.25003433227539
    5. '           ' → logprob: -16.00003433227539
    6. '[
' → logprob: -16.37503433227539
    7. '```' → logprob: -16.87503433227539
    8. '                   ' → logprob: -17.25003433227539
    9. ' ' → logprob: -17.50003433227539
    10. '\[' → logprob: -17.50003433227539

Token 128: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.289473822107539e-05
    2. ' ' → logprob: -10.125062942504883
    3. ':' → logprob: -11.250062942504883
    4. '3' → logprob: -12.875062942504883
    5. '   ' → logprob: -13.000062942504883
    6. '[' → logprob: -13.750062942504883
    7. '(' → logprob: -13.875062942504883
    8. '  ' → logprob: -14.125062942504883
    9. 'from' → logprob: -14.687562942504883
    10. '22' → logprob: -14.937562942504883

Token 129: ':]
' (ID: 61598)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08547750860452652
    2. ':]' → logprob: -2.585477590560913
    3. '*k' → logprob: -5.835477352142334
    4. '*' → logprob: -5.960477352142334
    5. ':k' → logprob: -7.335477352142334
    6. ' :' → logprob: -8.335477828979492
    7. ']' → logprob: -9.585477828979492
    8. ' *' → logprob: -10.710477828979492
    9. '::' → logprob: -10.835477828979492
    10. 'k' → logprob: -11.085477828979492

Token 130: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0343405045568943
    2. '           ' → logprob: -3.7843406200408936
    3. '<|end|>' → logprob: -4.6593403816223145
    4. '   ' → logprob: -7.5343403816223145
    5. '
' → logprob: -7.7843403816223145
    6. ')' → logprob: -9.034340858459473
    7. '        
' → logprob: -9.159340858459473
    8. '<|end|>' → logprob: -9.284340858459473
    9. ',' → logprob: -9.534340858459473
    10. '	' → logprob: -9.659340858459473

Token 131: ' recipes' (ID: 22649)
  Prédit: 'recipes'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'recipes' (adapté à ' recipes') → logprob: -0.5621974468231201
    2. '       ' → logprob: -0.9371974468231201
    3. 'if' → logprob: -4.187197685241699
    4. ' if' → logprob: -4.437197685241699
    5. ' recipes' → logprob: -4.937197685241699
    6. '           ' → logprob: -6.187197685241699
    7. '   ' → logprob: -6.937197685241699
    8. 'ingredients' → logprob: -7.937197685241699
    9. 'for' → logprob: -8.3121976852417
    10. ' for' → logprob: -9.1871976852417

Token 132: '[o' (ID: 112563)
  Prédit: '[o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[o' → logprob: -0.007617506198585033
    2. '[' → logprob: -4.882617473602295
    3. '=o' → logprob: -12.132617950439453
    4. '=' → logprob: -13.632617950439453
    5. '[...]' → logprob: -13.757617950439453
    6. '\[' → logprob: -14.132617950439453
    7. '[
' → logprob: -14.257617950439453
    8. ' [' → logprob: -14.382617950439453
    9. '```' → logprob: -15.132617950439453
    10. '[e' → logprob: -15.507617950439453

Token 133: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008780375123023987
    2. '=' → logprob: -5.133780479431152
    3. ']=' → logprob: -6.258780479431152
    4. '[' → logprob: -7.633780479431152
    5. ' =' → logprob: -7.758780479431152
    6. ']={' → logprob: -11.383780479431152
    7. ' ]' → logprob: -12.633780479431152
    8. ')' → logprob: -12.758780479431152
    9. '][' → logprob: -13.508780479431152
    10. ',' → logprob: -14.133780479431152

Token 134: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03805021569132805
    2. ' =' → logprob: -3.2880501747131348
    3. '[' → logprob: -12.663050651550293
    4. '=[]' → logprob: -12.913050651550293
    5. '=[' → logprob: -14.038050651550293
    6. '.append' → logprob: -14.413050651550293
    7. '[:]' → logprob: -14.663050651550293
    8. '.setdefault' → logprob: -16.038049697875977
    9. ']' → logprob: -16.038049697875977
    10. '=set' → logprob: -16.163049697875977

Token 135: ' ingredients' (ID: 15838)
  Prédit: 'ingredients'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ingredients' → logprob: -0.5660693049430847
    2. '[(' → logprob: -1.6910693645477295
    3. '(' → logprob: -2.0660693645477295
    4. '[]' → logprob: -2.4410693645477295
    5. '[' → logprob: -4.19106912612915
    6. '{}' → logprob: -4.31606912612915
    7. '{' → logprob: -5.94106912612915
    8. ' (' → logprob: -7.19106912612915
    9. ' []' → logprob: -7.56606912612915
    10. ' ingredients' → logprob: -7.81606912612915

Token 136: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23349952697753906
    2. '<|end|>' → logprob: -1.733499526977539
    3. '       ' → logprob: -3.733499526977539
    4. '   ' → logprob: -5.483499526977539
    5. '    
' → logprob: -6.483499526977539
    6. '        
' → logprob: -6.983499526977539
    7. '<|end|>' → logprob: -7.983499526977539
    8. 'def' → logprob: -8.358499526977539
    9. ' 
' → logprob: -9.108499526977539
    10. '```' → logprob: -9.233499526977539

Token 137: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12686993181705475
    2. '       ' → logprob: -2.2518699169158936
    3. '   ' → logprob: -5.126870155334473
    4. '<|end|>' → logprob: -5.376870155334473
    5. '        
' → logprob: -6.501870155334473
    6. '    
' → logprob: -6.876870155334473
    7. 'def' → logprob: -7.376870155334473
    8. '
' → logprob: -10.001870155334473
    9. '  
' → logprob: -10.376870155334473
    10. '<|end|>' → logprob: -10.626870155334473

Token 138: ' t' (ID: 260)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4894659221172333
    2. '
' → logprob: -1.2394659519195557
    3. '   ' → logprob: -3.1144659519195557
    4. '    
' → logprob: -3.9894659519195557
    5. '       ' → logprob: -4.114465713500977
    6. '        
' → logprob: -4.489465713500977
    7. 'cost' → logprob: -5.739465713500977
    8. ' 
' → logprob: -7.239465713500977
    9. 'cache' → logprob: -7.614465713500977
    10. 'dp' → logprob: -7.864465713500977

Token 139: ' =' (ID: 314)
  Prédit: 'arget'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arget' → logprob: -0.04697711393237114
    2. ' =' → logprob: -3.2969770431518555
    3. '=' → logprob: -5.6719770431518555
    4. 'otal' → logprob: -6.2969770431518555
    5. 'o' → logprob: -6.7969770431518555
    6. 'r' → logprob: -7.7969770431518555
    7. 'ype' → logprob: -8.171977043151855
    8. 'op' → logprob: -8.546977043151855
    9. '=[]' → logprob: -8.671977043151855
    10. 'ar' → logprob: -9.046977043151855

Token 140: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3845263421535492
    2. 'int' → logprob: -1.2595263719558716
    3. ' input' → logprob: -3.509526252746582
    4. ' int' → logprob: -5.259526252746582
    5. '[int' → logprob: -9.384526252746582
    6. '[input' → logprob: -9.634526252746582
    7. '[]' → logprob: -10.009526252746582
    8. 'sys' → logprob: -10.384526252746582
    9. '(input' → logprob: -11.009526252746582
    10. 'len' → logprob: -11.509526252746582

Token 141: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006000251974910498
    2. '().' → logprob: -5.13100004196167
    3. '(' → logprob: -10.006000518798828
    4. ' ()' → logprob: -10.756000518798828
    5. '();' → logprob: -13.631000518798828
    6. '())' → logprob: -13.881000518798828
    7. '()
' → logprob: -14.256000518798828
    8. '()(' → logprob: -14.631000518798828
    9. '()

' → logprob: -15.256000518798828
    10. '.readline' → logprob: -15.256000518798828

Token 142: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.004095143172889948
    2. 'rstrip' → logprob: -5.504095077514648
    3. 'split' → logprob: -11.004095077514648
    4. ' strip' → logprob: -15.629095077514648
    5. 'replace' → logprob: -19.87909507751465
    6. '.strip' → logprob: -20.12909507751465
    7. 'r' → logprob: -20.12909507751465
    8. 'rst' → logprob: -20.87909507751465
    9. '_strip' → logprob: -21.12909507751465
    10. 'str' → logprob: -21.37909507751465

Token 143: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00118368084076792
    2. '()
' → logprob: -6.87618350982666
    3. '(' → logprob: -8.87618350982666
    4. '(
' → logprob: -13.00118350982666
    5. '())' → logprob: -13.25118350982666
    6. ')' → logprob: -13.50118350982666
    7. '()

' → logprob: -13.62618350982666
    8. '('' → logprob: -13.87618350982666
    9. '().' → logprob: -14.00118350982666
    10. ' ()' → logprob: -14.37618350982666

Token 144: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 145: ' memo' (ID: 46393)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006714182440191507
    2. '   ' → logprob: -5.631714344024658
    3. '
' → logprob: -6.881714344024658
    4. 'if' → logprob: -7.631714344024658
    5. '    
' → logprob: -7.881714344024658
    6. '        
' → logprob: -9.0067138671875
    7. '       ' → logprob: -9.1317138671875
    8. '    ' → logprob: -9.2567138671875
    9. 'from' → logprob: -9.3817138671875
    10. 'stack' → logprob: -9.5067138671875

Token 146: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04863607883453369
    2. '=' → logprob: -3.048635959625244
    3. '={}' → logprob: -10.298636436462402
    4. 'ization' → logprob: -12.048636436462402
    5. ' ' → logprob: -12.673636436462402
    6. 'ize' → logprob: -13.048636436462402
    7. '=[]' → logprob: -14.423636436462402
    8. 'ation' → logprob: -14.923636436462402
    9. '＝' → logprob: -15.048636436462402
    10. '_' → logprob: -15.048636436462402

Token 147: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -3.128163257315464e-07
    2. '{' → logprob: -15.75
    3. ' {}' → logprob: -16.875
    4. '{}
' → logprob: -17.625
    5. 'dict' → logprob: -18.25
    6. '{})' → logprob: -18.625
    7. '{}

' → logprob: -18.75
    8. '{},' → logprob: -19.875
    9. '={}' → logprob: -20.375
    10. '{}\' → logprob: -22.0

Token 148: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.005169954616576433
    2. 'def' → logprob: -5.630169868469238
    3. '    
' → logprob: -7.505169868469238
    4. '        
' → logprob: -8.130169868469238
    5. '<|end|>' → logprob: -8.255169868469238
    6. '   ' → logprob: -8.755169868469238
    7. '       ' → logprob: -9.380169868469238
    8. ' 
' → logprob: -9.880169868469238
    9. ' def' → logprob: -10.255169868469238
    10. '
' → logprob: -10.255169868469238

Token 149: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00014597235713154078
    2. '   ' → logprob: -8.87514591217041
    3. ' def' → logprob: -12.25014591217041
    4. '       ' → logprob: -14.50014591217041
    5. '
' → logprob: -14.87514591217041
    6. ')' → logprob: -15.37514591217041
    7. '	def' → logprob: -16.250146865844727
    8. 'de' → logprob: -16.500146865844727
    9. '    
' → logprob: -16.625146865844727
    10. 'import' → logprob: -18.375146865844727

Token 150: ' min' (ID: 1349)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.9974037408828735
    2. ' calc' → logprob: -1.4974037408828735
    3. ' cost' → logprob: -1.6224037408828735
    4. ' dfs' → logprob: -2.747403621673584
    5. 'calc' → logprob: -3.122403621673584
    6. ' calculate' → logprob: -3.747403621673584
    7. ' def' → logprob: -3.997403621673584
    8. 'def' → logprob: -4.122403621673584
    9. 'cost' → logprob: -4.122403621673584
    10. 'get' → logprob: -4.872403621673584

Token 151: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.13154330849647522
    2. '_price' → logprob: -2.1315433979034424
    3. 'cost' → logprob: -5.506543159484863
    4. '_' → logprob: -7.881543159484863
    5. 'price' → logprob: -9.006543159484863
    6. 'Cost' → logprob: -11.381543159484863
    7. '_time' → logprob: -12.756543159484863
    8. '_purchase' → logprob: -13.006543159484863
    9. 'Price' → logprob: -13.131543159484863
    10. '_co' → logprob: -13.131543159484863

Token 152: '(item' (ID: 10016)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009217273443937302
    2. '(name' → logprob: -5.884217262268066
    3. '(s' → logprob: -6.259217262268066
    4. ' (' → logprob: -6.634217262268066
    5. '(node' → logprob: -6.759217262268066
    6. '(item' → logprob: -7.009217262268066
    7. '(recipe' → logprob: -8.259217262268066
    8. '(token' → logprob: -8.509217262268066
    9. '(x' → logprob: -9.384217262268066
    10. '(o' → logprob: -9.509217262268066

Token 153: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0021750046871602535
    2. ',' → logprob: -6.7521748542785645
    3. '):
' → logprob: -7.2521748542785645
    4. ' ):' → logprob: -8.377175331115723
    5. ')' → logprob: -10.002175331115723
    6. '   ' → logprob: -11.752175331115723
    7. ':' → logprob: -12.877175331115723
    8. '):
' → logprob: -12.877175331115723
    9. ' ,' → logprob: -13.752175331115723
    10. ' ' → logprob: -13.877175331115723

Token 154: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0576401948928833
    2. '   ' → logprob: -1.1826401948928833
    3. '<|end|>' → logprob: -2.0576400756835938
    4. '(' → logprob: -2.9326400756835938
    5. '    ' → logprob: -2.9326400756835938
    6. ':' → logprob: -3.4326400756835938
    7. ' ' → logprob: -3.6826400756835938
    8. ' if' → logprob: -3.9326400756835938
    9. '        ' → logprob: -4.307640075683594
    10. '\' → logprob: -5.432640075683594

Token 155: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2539667785167694
    2. 'if' (adapté à ' if') → logprob: -1.5039668083190918
    3. '   ' → logprob: -6.878966808319092
    4. '       ' → logprob: -7.628966808319092
    5. '    ' → logprob: -8.378966331481934
    6. '	if' → logprob: -9.378966331481934
    7. ' ' → logprob: -9.628966331481934
    8. '           ' → logprob: -9.753966331481934
    9. ' 
' → logprob: -10.378966331481934
    10. '        ' → logprob: -10.753966331481934

Token 156: ' item' (ID: 2169)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.6931506395339966
    2. ' item' → logprob: -0.6931506395339966
    3. '	item' → logprob: -13.693150520324707
    4. ')item' → logprob: -14.318150520324707
    5. '=item' → logprob: -14.443150520324707
    6. '(item' → logprob: -14.818150520324707
    7. ' in' → logprob: -15.818150520324707
    8. ' not' → logprob: -15.818150520324707
    9. ' isinstance' → logprob: -15.943150520324707
    10. ' ' → logprob: -15.943150520324707

Token 157: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11196477711200714
    2. 'in' → logprob: -2.486964702606201
    3. ' not' → logprob: -3.861964702606201
    4. 'not' → logprob: -6.361964702606201
    5. ')' → logprob: -12.48696517944336
    6. ' ' → logprob: -12.86196517944336
    7. '[' → logprob: -13.48696517944336
    8. ' )' → logprob: -14.86196517944336
    9. '==' → logprob: -14.86196517944336
    10. ' ==' → logprob: -15.86196517944336

Token 158: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.6168117523193359
    2. ' memo' → logprob: -0.8668117523193359
    3. 'price' → logprob: -3.741811752319336
    4. ' price' → logprob: -4.116811752319336
    5. 'mem' → logprob: -11.741811752319336
    6. ' meme' → logprob: -12.241811752319336
    7. 'memory' → logprob: -12.616811752319336
    8. ')' → logprob: -12.616811752319336
    9. 'm' → logprob: -12.616811752319336
    10. ' ' → logprob: -12.741811752319336

Token 159: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0025999147910624743
    2. ':
' → logprob: -6.002599716186523
    3. ':return' → logprob: -9.002599716186523
    4. '):' → logprob: -14.752599716186523
    5. ' :' → logprob: -14.752599716186523
    6. '   ' → logprob: -16.877599716186523
    7. 'return' → logprob: -17.002599716186523
    8. ':
' → logprob: -17.377599716186523
    9. '):
' → logprob: -17.627599716186523
    10. '           ' → logprob: -17.752599716186523

Token 160: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05725627392530441
    2. ':return' → logprob: -3.5572562217712402
    3. '               ' → logprob: -4.30725622177124
    4. ':
' → logprob: -4.80725622177124
    5. '           ' → logprob: -5.55725622177124
    6. ' return' → logprob: -7.68225622177124
    7. '       ' → logprob: -7.93225622177124
    8. 'return' → logprob: -7.93225622177124
    9. '   ' → logprob: -8.432256698608398
    10. '                   ' → logprob: -10.057256698608398

Token 161: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.034090060740709305
    2. 'return' (adapté à ' return') → logprob: -3.409090042114258
    3. ' 
' → logprob: -8.034090042114258
    4. '
' → logprob: -9.909090042114258
    5. ' ' → logprob: -10.784090042114258
    6. '           ' → logprob: -11.409090042114258
    7. ':return' → logprob: -11.409090042114258
    8. '               ' → logprob: -12.159090042114258
    9. '	return' → logprob: -12.409090042114258
    10. '_return' → logprob: -12.659090042114258

Token 162: ' memo' (ID: 46393)
  Prédit: ' memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' memo' → logprob: -0.014163863845169544
    2. 'memo' → logprob: -4.264163970947266
    3. 'm' → logprob: -15.889163970947266
    4. ' meme' → logprob: -16.389163970947266
    5. ' mem' → logprob: -17.639163970947266
    6. '.memo' → logprob: -17.764163970947266
    7. ' memoir' → logprob: -18.139163970947266
    8. 'mem' → logprob: -18.639163970947266
    9. ' ' → logprob: -18.639163970947266
    10. ' ' → logprob: -18.889163970947266

Token 163: '[item' (ID: 62534)
  Prédit: '[item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[item' → logprob: -6.8497312895488e-05
    2. '[' → logprob: -9.625068664550781
    3. 'item' → logprob: -14.500068664550781
    4. '```' → logprob: -14.500068664550781
    5. '(item' → logprob: -15.125068664550781
    6. ',item' → logprob: -15.625068664550781
    7. '=item' → logprob: -15.625068664550781
    8. '[
' → logprob: -15.875068664550781
    9. '\[' → logprob: -15.875068664550781
    10. 'getitem' → logprob: -16.12506866455078

Token 164: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05929616093635559
    2. ')' → logprob: -2.934296131134033
    3. '])' → logprob: -5.684296131134033
    4. ']
' → logprob: -7.059296131134033
    5. ')
' → logprob: -9.684296607971191
    6. '           ' → logprob: -10.559296607971191
    7. ' )' → logprob: -10.809296607971191
    8. ')]' → logprob: -11.309296607971191
    9. ' ]' → logprob: -11.309296607971191
    10. '])
' → logprob: -12.809296607971191

Token 165: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24203836917877197
    2. '<|end|>' → logprob: -2.1170382499694824
    3. '       ' → logprob: -2.8670382499694824
    4. '
' → logprob: -3.9920382499694824
    5. '               ' → logprob: -5.742038249969482
    6. '            
' → logprob: -5.867038249969482
    7. '   ' → logprob: -6.242038249969482
    8. '        ' → logprob: -6.367038249969482
    9. '          ' → logprob: -6.492038249969482
    10. ')' → logprob: -6.867038249969482

Token 166: ' res' (ID: 694)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.488025963306427
    2. ' if' → logprob: -1.1130259037017822
    3. '           ' → logprob: -2.8630259037017822
    4. '       ' → logprob: -8.113025665283203
    5. '   ' → logprob: -9.363025665283203
    6. ' cost' → logprob: -10.613025665283203
    7. 'cost' → logprob: -10.613025665283203
    8. '<|end|>' → logprob: -10.613025665283203
    9. '            
' → logprob: -11.613025665283203
    10. '
' → logprob: -11.988025665283203

Token 167: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34846681356430054
    2. '=' → logprob: -1.2234668731689453
    3. 'ult' → logprob: -11.723466873168945
    4. ' ' → logprob: -11.973466873168945
    5. '=[]' → logprob: -13.348466873168945
    6. '   ' → logprob: -13.973466873168945
    7. ',' → logprob: -13.973466873168945
    8. 'if' → logprob: -14.098466873168945
    9. '=None' → logprob: -14.598466873168945
    10. 's' → logprob: -14.723466873168945

Token 168: ' price' (ID: 3911)
  Prédit: 'price'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'price' → logprob: -0.05735725164413452
    2. 'float' → logprob: -2.9323573112487793
    3. ' price' → logprob: -6.557357311248779
    4. '10' → logprob: -7.307357311248779
    5. '0' → logprob: -8.182356834411621
    6. ' float' → logprob: -9.682356834411621
    7. '100' → logprob: -11.682356834411621
    8. 'int' → logprob: -12.182356834411621
    9. '1' → logprob: -12.182356834411621
    10. ' ' → logprob: -12.307356834411621

Token 169: '[item' (ID: 62534)
  Prédit: '.get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.0031825865153223276
    2. '[item' → logprob: -5.753182411193848
    3. '.' → logprob: -12.503182411193848
    4. ' .' → logprob: -14.378182411193848
    5. 'get' → logprob: -15.253182411193848
    6. '.setdefault' → logprob: -15.878182411193848
    7. '[' → logprob: -16.128183364868164
    8. '[get' → logprob: -16.128183364868164
    9. 'getitem' → logprob: -18.003183364868164
    10. '=item' → logprob: -19.253183364868164

Token 170: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015343817649409175
    2. ' ]' → logprob: -6.626534461975098
    3. ' if' → logprob: -9.001534461975098
    4. ']
' → logprob: -9.751534461975098
    5. 'if' → logprob: -11.501534461975098
    6. '<|end|>' → logprob: -12.376534461975098
    7. ']

' → logprob: -13.001534461975098
    8. ')' → logprob: -13.251534461975098
    9. ']+' → logprob: -14.001534461975098
    10. '']' → logprob: -14.126534461975098

Token 171: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10287000983953476
    2. '<|end|>' → logprob: -2.977869987487793
    3. '
' → logprob: -3.852869987487793
    4. 'if' → logprob: -4.102869987487793
    5. '           ' → logprob: -5.477869987487793
    6. ' or' → logprob: -5.977869987487793
    7. '<|end|>' → logprob: -7.102869987487793
    8. ' ' → logprob: -7.727869987487793
    9. '       ' → logprob: -8.727869987487793
    10. ')' → logprob: -8.977869987487793

Token 172: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3722970485687256
    2. ' if' → logprob: -1.7472970485687256
    3. 'if' (adapté à ' if') → logprob: -3.1222970485687256
    4. ' for' → logprob: -3.1222970485687256
    5. '<|end|>' → logprob: -3.6222970485687256
    6. 'for' → logprob: -4.122297286987305
    7. ' 
' → logprob: -6.122297286987305
    8. 'try' → logprob: -7.747297286987305
    9. '<|end|>' → logprob: -7.997297286987305
    10. ' or' → logprob: -7.997297286987305

Token 173: ' item' (ID: 2169)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.014165159314870834
    2. ' item' → logprob: -4.264164924621582
    3. '	item' → logprob: -13.514164924621582
    4. '(item' → logprob: -15.889164924621582
    5. '$item' → logprob: -17.2641658782959
    6. ')item' → logprob: -18.0141658782959
    7. '.item' → logprob: -18.1391658782959
    8. '[item' → logprob: -18.3891658782959
    9. 't' → logprob: -18.3891658782959
    10. 'recipes' → logprob: -18.3891658782959

Token 174: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03580126166343689
    2. 'in' → logprob: -3.4108011722564697
    3. ' not' → logprob: -6.160801410675049
    4. 'not' → logprob: -10.16080093383789
    5. ' ' → logprob: -12.91080093383789
    6. '	in' → logprob: -14.66080093383789
    7. '   ' → logprob: -14.91080093383789
    8. ')' → logprob: -15.53580093383789
    9. ' i' → logprob: -15.91080093383789
    10. 'n' → logprob: -16.53580093383789

Token 175: ' recipes' (ID: 22649)
  Prédit: 'recipes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'recipes' → logprob: -0.16022595763206482
    2. ' recipes' → logprob: -1.9102259874343872
    3. 'recipe' → logprob: -14.535225868225098
    4. ' ' → logprob: -14.535225868225098
    5. 'price' → logprob: -15.535225868225098
    6. '   ' → logprob: -15.660225868225098
    7. 'rec' → logprob: -16.660226821899414
    8. ' recipe' → logprob: -16.785226821899414
    9. ' recetas' → logprob: -17.035226821899414
    10. '  ' → logprob: -17.035226821899414

Token 176: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009775212965905666
    2. ':
' → logprob: -4.634775161743164
    3. ' :' → logprob: -11.634775161743164
    4. '):' → logprob: -11.759775161743164
    5. ' and' → logprob: -13.259775161743164
    6. '):
' → logprob: -15.509775161743164
    7. ' :
' → logprob: -15.509775161743164
    8. ':
' → logprob: -15.884775161743164
    9. ':

' → logprob: -16.259775161743164
    10. ':**' → logprob: -16.384775161743164

Token 177: '               ' (ID: 506)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8586927652359009
    2. '               ' → logprob: -1.6086927652359009
    3. ':' → logprob: -1.7336927652359009
    4. '           ' → logprob: -2.2336926460266113
    5. ' and' → logprob: -3.1086926460266113
    6. ' for' → logprob: -4.733692646026611
    7. '<|end|>' → logprob: -4.733692646026611
    8. '       ' → logprob: -4.983692646026611
    9. '):
' → logprob: -5.108692646026611
    10. ')' → logprob: -5.608692646026611

Token 178: ' cost' (ID: 3097)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.4832337498664856
    2. ' res' → logprob: -2.108233690261841
    3. 'for' → logprob: -2.483233690261841
    4. ' for' → logprob: -3.233233690261841
    5. '           ' → logprob: -3.483233690261841
    6. '
' → logprob: -3.483233690261841
    7. 'cost' (adapté à ' cost') → logprob: -3.858233690261841
    8. '               ' → logprob: -4.23323392868042
    9. 'min' → logprob: -4.23323392868042
    10. ' min' → logprob: -4.73323392868042

Token 179: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24136649072170258
    2. 's' → logprob: -1.7413665056228638
    3. '=' → logprob: -3.366366386413574
    4. '_' → logprob: -5.991366386413574
    5. '_list' → logprob: -7.116366386413574
    6. '_candidates' → logprob: -7.491366386413574
    7. '_items' → logprob: -8.366366386413574
    8. '_sum' → logprob: -8.741366386413574
    9. '_values' → logprob: -10.116366386413574
    10. '   ' → logprob: -10.366366386413574

Token 180: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11822117865085602
    2. 'sum' → logprob: -3.2432212829589844
    3. 'min' → logprob: -3.6182212829589844
    4. ' min' → logprob: -3.7432212829589844
    5. ' sum' → logprob: -3.9932212829589844
    6. ' ' → logprob: -5.993221282958984
    7. 'float' → logprob: -7.243221282958984
    8. ' float' → logprob: -8.493221282958984
    9. '   ' → logprob: -10.493221282958984
    10. '  ' → logprob: -11.368221282958984

Token 181: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.00027825910365208983
    2. '(' → logprob: -8.25027847290039
    3. 'min' → logprob: -11.75027847290039
    4. '((' → logprob: -12.50027847290039
    5. '([' → logprob: -12.75027847290039
    6. '[min' → logprob: -13.62527847290039
    7. ' min' → logprob: -14.75027847290039
    8. '(
' → logprob: -15.00027847290039
    9. '(max' → logprob: -15.37527847290039
    10. '(map' → logprob: -15.50027847290039

Token 182: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -3.054500666621607e-06
    2. 'cost' → logprob: -12.75000286102295
    3. '_COST' → logprob: -17.000003814697266
    4. ')_' → logprob: -17.625003814697266
    5. '```' → logprob: -18.000003814697266
    6. 'Cost' → logprob: -18.000003814697266
    7. '_' → logprob: -18.125003814697266
    8. '_code' → logprob: -19.000003814697266
    9. ' _' → logprob: -19.000003814697266
    10. '_co' → logprob: -19.625003814697266

Token 183: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.48916196823120117
    2. '(i' → logprob: -0.9891619682312012
    3. '(x' → logprob: -4.239161968231201
    4. '(ii' → logprob: -8.98916244506836
    5. '(item' → logprob: -9.23916244506836
    6. 'ing' → logprob: -9.98916244506836
    7. '(sub' → logprob: -10.11416244506836
    8. '(s' → logprob: -10.11416244506836
    9. '(arg' → logprob: -10.48916244506836
    10. '(in' → logprob: -10.48916244506836

Token 184: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00024168188974726945
    2. 'tem' → logprob: -9.50024127960205
    3. ' )' → logprob: -9.62524127960205
    4. 'em' → logprob: -9.62524127960205
    5. 't' → logprob: -12.00024127960205
    6. 'm' → logprob: -12.25024127960205
    7. 'item' → logprob: -12.75024127960205
    8. 'ng' → logprob: -13.00024127960205
    9. 'tems' → logprob: -13.12524127960205
    10. '   ' → logprob: -13.25024127960205

Token 185: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009444033727049828
    2. ' for' → logprob: -5.259444236755371
    3. 'for' → logprob: -5.509444236755371
    4. '```' → logprob: -10.134444236755371
    5. '()' → logprob: -10.259444236755371
    6. ' )' → logprob: -10.884444236755371
    7. ' ' → logprob: -12.009444236755371
    8. '   ' → logprob: -12.134444236755371
    9. ']' → logprob: -12.134444236755371
    10. ')*' → logprob: -12.134444236755371

Token 186: ' i' (ID: 575)
  Prédit: ' recipes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' recipes' → logprob: -0.05851473659276962
    2. ' ingredients' → logprob: -3.6835148334503174
    3. 'recipes' → logprob: -3.6835148334503174
    4. 'ingredients' → logprob: -5.058514595031738
    5. ' items' → logprob: -8.933514595031738
    6. ' ' → logprob: -10.183514595031738
    7. ' in' → logprob: -11.683514595031738
    8. ' ingredientes' → logprob: -11.808514595031738
    9. ' item' → logprob: -12.058514595031738
    10. 'ingredient' → logprob: -12.808514595031738

Token 187: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3079494535923004
    2. ' recipes' → logprob: -2.3079495429992676
    3. 'ingredients' → logprob: -2.4329495429992676
    4. ' ingredients' → logprob: -3.3079495429992676
    5. 'recipes' → logprob: -3.5579495429992676
    6. 'in' → logprob: -4.432949542999268
    7. ' items' → logprob: -8.18294906616211
    8. 'items' → logprob: -8.55794906616211
    9. ' ' → logprob: -8.93294906616211
    10. 'ingredient' → logprob: -9.80794906616211

Token 188: ' recipes' (ID: 22649)
  Prédit: 'recipes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'recipes' → logprob: -0.01472009252756834
    2. ' recipes' → logprob: -4.2647199630737305
    3. 'ingredients' → logprob: -7.5147199630737305
    4. ' ingredients' → logprob: -11.76471996307373
    5. ')' → logprob: -13.88971996307373
    6. '   ' → logprob: -14.26471996307373
    7. '(rec' → logprob: -14.63971996307373
    8. 'rec' → logprob: -15.01471996307373
    9. ' ' → logprob: -15.13971996307373
    10. 'items' → logprob: -15.38971996307373

Token 189: '[item' (ID: 62534)
  Prédit: '[item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[item' → logprob: -0.0006733550690114498
    2. '[o' → logprob: -7.375673294067383
    3. 'item' → logprob: -10.625673294067383
    4. '[' → logprob: -11.000673294067383
    5. '```' → logprob: -13.250673294067383
    6. '[obj' → logprob: -14.375673294067383
    7. ' [' → logprob: -14.500673294067383
    8. 'getitem' → logprob: -14.875673294067383
    9. '[it' → logprob: -15.125673294067383
    10. '[i' → logprob: -15.125673294067383

Token 190: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04479992762207985
    2. '])' → logprob: -3.169800043106079
    3. '))' → logprob: -7.0447998046875
    4. ' )' → logprob: -7.2947998046875
    5. ')])' → logprob: -9.5447998046875
    6. ']' → logprob: -9.6697998046875
    7. '})' → logprob: -10.5447998046875
    8. '）' → logprob: -11.0447998046875
    9. ' ])' → logprob: -11.2947998046875
    10. ')
' → logprob: -11.2947998046875

Token 191: '               ' (ID: 506)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08732657134532928
    2. '           ' → logprob: -3.2123265266418457
    3. '               ' → logprob: -3.8373265266418457
    4. ' if' → logprob: -4.462326526641846
    5. ')' → logprob: -5.212326526641846
    6. ')
' → logprob: -5.712326526641846
    7. '
' → logprob: -8.087327003479004
    8. '                   ' → logprob: -8.462327003479004
    9. ' +' → logprob: -8.587327003479004
    10. 'if' → logprob: -8.712327003479004

Token 192: ' if' (ID: 538)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.2585171163082123
    2. ' if' → logprob: -2.258517026901245
    3. 'if' (adapté à ' if') → logprob: -2.758517026901245
    4. ' res' → logprob: -3.008517026901245
    5. '           ' → logprob: -4.633517265319824
    6. '
' → logprob: -7.258517265319824
    7. '               ' → logprob: -9.383517265319824
    8. '	res' → logprob: -12.383517265319824
    9. '                   ' → logprob: -12.383517265319824
    10. 'memo' → logprob: -12.633517265319824

Token 193: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.043624185025691986
    2. 'cost' → logprob: -3.16862416267395
    3. ' res' → logprob: -8.418623924255371
    4. ' price' → logprob: -8.418623924255371
    5. ' item' → logprob: -9.418623924255371
    6. ' ' → logprob: -10.543623924255371
    7. 'res' → logprob: -10.543623924255371
    8. 'item' → logprob: -10.668623924255371
    9. 'price' → logprob: -11.293623924255371
    10. '   ' → logprob: -12.918623924255371

Token 194: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5231319665908813
    2. ' <' → logprob: -0.8981319665908813
    3. ' ' → logprob: -12.89813232421875
    4. ' ' → logprob: -13.14813232421875
    5. '[' → logprob: -14.02313232421875
    6. ')' → logprob: -14.64813232421875
    7. '<size' → logprob: -14.77313232421875
    8. '<int' → logprob: -15.14813232421875
    9. '<num' → logprob: -15.39813232421875
    10. '>' → logprob: -15.52313232421875

Token 195: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.25193241238594055
    2. 'res' → logprob: -1.5019323825836182
    3. '=' → logprob: -14.251932144165039
    4. '	res' → logprob: -14.251932144165039
    5. ' price' → logprob: -14.501932144165039
    6. '(res' → logprob: -15.126932144165039
    7. '=res' → logprob: -15.126932144165039
    8. 'price' → logprob: -15.626932144165039
    9. '$res' → logprob: -16.00193214416504
    10. '_res' → logprob: -16.12693214416504

Token 196: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5761886835098267
    2. ':
' → logprob: -0.8261886835098267
    3. '           ' → logprob: -9.326189041137695
    4. '):
' → logprob: -9.826189041137695
    5. '):' → logprob: -10.576189041137695
    6. ':
' → logprob: -10.826189041137695
    7. ' :
' → logprob: -11.576189041137695
    8. '       ' → logprob: -11.576189041137695
    9. '               ' → logprob: -11.701189041137695
    10. ')' → logprob: -11.701189041137695

Token 197: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.42963773012161255
    2. 'res' → logprob: -1.1796376705169678
    3. '               ' → logprob: -3.3046376705169678
    4. ' res' → logprob: -5.679637908935547
    5. '           ' → logprob: -7.054637908935547
    6. '                       ' → logprob: -7.804637908935547
    7. '
' → logprob: -8.179637908935547
    8. '):
' → logprob: -10.929637908935547
    9. ':
' → logprob: -10.929637908935547
    10. '   ' → logprob: -11.179637908935547

Token 198: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.0019500599009916186
    2. ' res' → logprob: -6.251950263977051
    3. '
' → logprob: -11.00195026397705
    4. '               ' → logprob: -13.00195026397705
    5. '                   ' → logprob: -13.00195026397705
    6. '	res' → logprob: -16.251949310302734
    7. '                       ' → logprob: -16.376949310302734
    8. '           ' → logprob: -16.376949310302734
    9. '
' → logprob: -17.626949310302734
    10. 'return' → logprob: -17.751949310302734

Token 199: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25192907452583313
    2. '=' → logprob: -1.5019290447235107
    3. '＝' → logprob: -18.126928329467773
    4. '=res' → logprob: -18.501928329467773
    5. '=

' → logprob: -19.001928329467773
    6. '=cut' → logprob: -19.001928329467773
    7. ' ' → logprob: -19.001928329467773
    8. '.=' → logprob: -19.501928329467773
    9. '=
' → logprob: -20.876928329467773
    10. '=int' → logprob: -21.126928329467773

Token 200: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.01814994215965271
    2. ' cost' → logprob: -4.0181498527526855
    3. '(cost' → logprob: -18.893150329589844
    4. 'price' → logprob: -20.768150329589844
    5. 'code' → logprob: -20.893150329589844
    6. 'Cost' → logprob: -21.143150329589844
    7. '_cost' → logprob: -21.268150329589844
    8. '   ' → logprob: -21.643150329589844
    9. '.cost' → logprob: -22.018150329589844
    10. 'c' → logprob: -22.268150329589844

Token 201: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017373013542965055
    2. '
' → logprob: -6.376737117767334
    3. '       ' → logprob: -10.876737594604492
    4. '               ' → logprob: -12.251737594604492
    5. 'memo' → logprob: -13.001737594604492
    6. '          ' → logprob: -13.126737594604492
    7. ' memo' → logprob: -13.626737594604492
    8. '```' → logprob: -14.001737594604492
    9. '<|end|>' → logprob: -14.126737594604492
    10. ')
' → logprob: -14.126737594604492

Token 202: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006926587666384876
    2. '
' → logprob: -8.000692367553711
    3. 'memo' → logprob: -8.250692367553711
    4. '       ' → logprob: -10.250692367553711
    5. ' memo' → logprob: -10.375692367553711
    6. '               ' → logprob: -11.125692367553711
    7. '```' → logprob: -12.500692367553711
    8. '            
' → logprob: -12.750692367553711
    9. 'm' → logprob: -13.375692367553711
    10. '          ' → logprob: -13.375692367553711

Token 203: ' memo' (ID: 46393)
  Prédit: ' memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' memo' → logprob: -0.11485336720943451
    2. 'memo' (adapté à ' memo') → logprob: -2.7398533821105957
    3. '   ' → logprob: -3.7398533821105957
    4. '           ' → logprob: -4.114853382110596
    5. '       ' → logprob: -5.614853382110596
    6. '
' → logprob: -8.864852905273438
    7. ' mem' → logprob: -11.114852905273438
    8. '    ' → logprob: -12.364852905273438
    9. '               ' → logprob: -12.489852905273438
    10. 'mem' → logprob: -12.614852905273438

Token 204: '[item' (ID: 62534)
  Prédit: '[item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[item' → logprob: -9.698698704596609e-05
    2. '[' → logprob: -9.250097274780273
    3. '[i' → logprob: -15.875097274780273
    4. '[token' → logprob: -16.250097274780273
    5. '[it' → logprob: -16.500097274780273
    6. '[event' → logprob: -16.500097274780273
    7. '```' → logprob: -17.000097274780273
    8. '[input' → logprob: -17.250097274780273
    9. '[obj' → logprob: -17.250097274780273
    10. '[element' → logprob: -17.250097274780273

Token 205: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.955703818472102e-05
    2. ']=' → logprob: -9.750059127807617
    3. ' ]' → logprob: -14.375059127807617
    4. ')' → logprob: -14.625059127807617
    5. '=' → logprob: -16.500059127807617
    6. ']
' → logprob: -17.250059127807617
    7. ')]' → logprob: -17.375059127807617
    8. '[' → logprob: -18.250059127807617
    9. '}' → logprob: -18.375059127807617
    10. '']' → logprob: -18.500059127807617

Token 206: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02324594371020794
    2. ' =' → logprob: -3.7732460498809814
    3. ']=' → logprob: -15.773245811462402
    4. '=
' → logprob: -15.898245811462402
    5. ']' → logprob: -16.39824676513672
    6. ')=' → logprob: -16.64824676513672
    7. ')' → logprob: -17.14824676513672
    8. '＝' → logprob: -18.27324676513672
    9. '=s' → logprob: -18.39824676513672
    10. ' =
' → logprob: -18.64824676513672

Token 207: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0015023599844425917
    2. ' res' → logprob: -6.501502513885498
    3. '	res' → logprob: -21.126502990722656
    4. '(res' → logprob: -21.626502990722656
    5. '$res' → logprob: -22.501502990722656
    6. '_res' → logprob: -23.001502990722656
    7. 're' → logprob: -24.126502990722656
    8. 'r' → logprob: -24.501502990722656
    9. 'resi' → logprob: -24.501502990722656
    10. '   ' → logprob: -25.251502990722656

Token 208: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010896162129938602
    2. '   ' → logprob: -7.751089572906494
    3. 'return' → logprob: -8.126090049743652
    4. ' return' → logprob: -8.501090049743652
    5. '       ' → logprob: -8.876090049743652
    6. '	return' → logprob: -12.001090049743652
    7. '		' → logprob: -12.626090049743652
    8. '	   ' → logprob: -12.751090049743652
    9. '
' → logprob: -13.126090049743652
    10. '	       ' → logprob: -13.126090049743652

Token 209: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004978882148861885
    2. '   ' → logprob: -6.004978656768799
    3. ' return' → logprob: -6.754978656768799
    4. 'return' → logprob: -7.129978656768799
    5. '       ' → logprob: -7.629978656768799
    6. '	return' → logprob: -10.879979133605957
    7. '		' → logprob: -11.379979133605957
    8. '	   ' → logprob: -11.879979133605957
    9. '	       ' → logprob: -12.879979133605957
    10. '               ' → logprob: -13.254979133605957

Token 210: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03956572711467743
    2. '           ' → logprob: -3.7895658016204834
    3. ' return' → logprob: -4.289565563201904
    4. '   ' → logprob: -6.289565563201904
    5. '       ' → logprob: -7.414565563201904
    6. '	return' → logprob: -11.039566040039062
    7. '
' → logprob: -13.914566040039062
    8. '               ' → logprob: -14.414566040039062
    9. '  ' → logprob: -15.164566040039062
    10. ' ' → logprob: -15.539566040039062

Token 211: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.38687121868133545
    2. ' res' → logprob: -1.1368712186813354
    3. ' ' → logprob: -16.386871337890625
    4. '	res' → logprob: -16.511871337890625
    5. 're' → logprob: -17.511871337890625
    6. '(res' → logprob: -17.636871337890625
    7. 'r' → logprob: -18.136871337890625
    8. ' ' → logprob: -18.386871337890625
    9. '_res' → logprob: -18.636871337890625
    10. '$res' → logprob: -18.886871337890625

Token 212: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.062112100422382355
    2. '<|end|>' → logprob: -3.3121120929718018
    3. '       ' → logprob: -3.8121120929718018
    4. '        
' → logprob: -7.562112331390381
    5. 'print' → logprob: -7.937112331390381
    6. '   ' → logprob: -8.312111854553223
    7. '    
' → logprob: -8.812111854553223
    8. '
' → logprob: -9.062111854553223
    9. '<|end|>' → logprob: -9.187111854553223
    10. '\n' → logprob: -10.687111854553223

Token 213: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4245964586734772
    2. '
' → logprob: -1.6745964288711548
    3. 'print' → logprob: -2.5495965480804443
    4. '   ' → logprob: -2.9245965480804443
    5. '    
' → logprob: -4.424596309661865
    6. '        
' → logprob: -4.924596309661865
    7. '<|end|>' → logprob: -5.674596309661865
    8. 't' → logprob: -7.299596309661865
    9. 'price' → logprob: -7.424596309661865
    10. 'result' → logprob: -7.549596309661865

Token 214: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0003119863977190107
    2. '       ' → logprob: -9.125311851501465
    3. '
' → logprob: -9.625311851501465
    4. ' print' → logprob: -9.625311851501465
    5. 'result' → logprob: -10.000311851501465
    6. '   ' → logprob: -10.750311851501465
    7. '```' → logprob: -13.750311851501465
    8. 'answer' → logprob: -14.125311851501465
    9. 'res' → logprob: -14.375311851501465
    10. '    
' → logprob: -14.500311851501465

Token 215: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.011050889268517494
    2. '(' → logprob: -4.511050701141357
    3. '(f' → logprob: -13.636051177978516
    4. '(m' → logprob: -14.636051177978516
    5. '(max' → logprob: -14.761051177978516
    6. '()' → logprob: -15.386051177978516
    7. '(round' → logprob: -15.511051177978516
    8. '('' → logprob: -16.261051177978516
    9. ' (' → logprob: -16.386051177978516
    10. '("' → logprob: -16.511051177978516

Token 216: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.9361264946837764e-07
    2. 'cost' → logprob: -16.375
    3. '_COST' → logprob: -18.75
    4. '_' → logprob: -18.875
    5. 'Cost' → logprob: -19.25
    6. ')' → logprob: -20.375
    7. ')_' → logprob: -21.125
    8. ' cost' → logprob: -21.25
    9. ' _' → logprob: -21.5
    10. '_c' → logprob: -21.875

Token 217: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.00039980647852644324
    2. '(' → logprob: -7.875399589538574
    3. ' (' → logprob: -11.125399589538574
    4. '(f' → logprob: -13.250399589538574
    5. ')(' → logprob: -13.625399589538574
    6. ')' → logprob: -13.875399589538574
    7. '('' → logprob: -14.750399589538574
    8. '((' → logprob: -15.500399589538574
    9. '("("' → logprob: -15.625399589538574
    10. '(s' → logprob: -16.12540054321289

Token 218: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07895082235336304
    2. ')' → logprob: -2.578950881958008
    3. '()))' → logprob: -10.578950881958008
    4. '())' → logprob: -10.703950881958008
    5. ' ))' → logprob: -11.953950881958008
    6. '))
' → logprob: -12.703950881958008
    7. ')))' → logprob: -12.953950881958008
    8. ' )' → logprob: -14.328950881958008
    9. '()' → logprob: -15.578950881958008
    10. '})' → logprob: -15.828950881958008

Token 219: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 220: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.10021799057722092
    2. '__' → logprob: -2.3502180576324463
    3. 'name' → logprob: -11.725217819213867
    4. '_name' → logprob: -13.725217819213867
    5. '_' → logprob: -13.850217819213867
    6. ' ' → logprob: -14.975217819213867
    7. ' ' → logprob: -14.975217819213867
    8. '/__' → logprob: -15.475217819213867
    9. '___' → logprob: -15.600217819213867
    10. 'Name' → logprob: -16.350217819213867

Token 221: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4118669033050537
    2. ' ==' → logprob: -1.1618669033050537
    3. ' __' → logprob: -4.036867141723633
    4. '==' → logprob: -5.411867141723633
    5. '__.__' → logprob: -7.536867141723633
    6. '.__' → logprob: -7.786867141723633
    7. ' .' → logprob: -8.286867141723633
    8. '=="' → logprob: -8.411867141723633
    9. '__.' → logprob: -8.661867141723633
    10. 'name' → logprob: -8.786867141723633

Token 222: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.9153885558771435e-06
    2. '==' → logprob: -12.375005722045898
    3. '__.__' → logprob: -14.375005722045898
    4. '___' → logprob: -14.875005722045898
    5. ' ==' → logprob: -15.500005722045898
    6. '____' → logprob: -15.875005722045898
    7. '=="' → logprob: -16.5000057220459
    8. '_' → logprob: -16.7500057220459
    9. '__.' → logprob: -17.3750057220459
    10. '__('' → logprob: -17.7500057220459

Token 223: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12610383331775665
    2. '__' → logprob: -2.5011038780212402
    3. '==' → logprob: -3.5011038780212402
    4. '=="' → logprob: -5.12610387802124
    5. '=='' → logprob: -8.126103401184082
    6. ' =="' → logprob: -10.751103401184082
    7. '_' → logprob: -11.001103401184082
    8. '__.__' → logprob: -11.251103401184082
    9. ' =' → logprob: -12.001103401184082
    10. '=' → logprob: -12.251103401184082

Token 224: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.048684678971767426
    2. ''' → logprob: -3.048684597015381
    3. '__' → logprob: -9.423685073852539
    4. ' "__' → logprob: -11.048685073852539
    5. ' '__' → logprob: -14.798685073852539
    6. '   ' → logprob: -16.67368507385254
    7. '"user' → logprob: -17.04868507385254
    8. '("__' → logprob: -17.67368507385254
    9. ''s' → logprob: -18.29868507385254
    10. '	' → logprob: -18.54868507385254

Token 225: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0749598816037178
    2. '__' → logprob: -2.8249599933624268
    3. '"' → logprob: -4.699959754943848
    4. ''' → logprob: -5.699959754943848
    5. 'name' → logprob: -7.824959754943848
    6. ' "__' → logprob: -10.824959754943848
    7. '_main' → logprob: -11.324959754943848
    8. ' main' → logprob: -11.574959754943848
    9. '__":
' → logprob: -12.449959754943848
    10. ' '__' → logprob: -12.574959754943848

Token 226: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.10258539021015167
    2. '__' → logprob: -2.3525853157043457
    3. '__':
' → logprob: -6.477585315704346
    4. '__:' → logprob: -7.227585315704346
    5. '__.' → logprob: -10.352585792541504
    6. ':' → logprob: -10.352585792541504
    7. '__["' → logprob: -11.227585792541504
    8. '():
' → logprob: -11.352585792541504
    9. '__.__' → logprob: -12.477585792541504
    10. '__
' → logprob: -12.477585792541504

Token 227: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.046850863844156265
    2. ' solve' → logprob: -3.2968509197235107
    3. 'solve' → logprob: -4.796850681304932
    4. '	s' → logprob: -8.92185115814209
    5. '   ' → logprob: -9.04685115814209
    6. '    
' → logprob: -9.54685115814209
    7. '<|end|>' → logprob: -10.04685115814209
    8. '.solve' → logprob: -10.17185115814209
    9. ' ' → logprob: -10.29685115814209
    10. '```' → logprob: -10.42185115814209

Token 228: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -6.988221684878226e-06
    2. ' solve' → logprob: -12.000006675720215
    3. '   ' → logprob: -14.125006675720215
    4. '.solve' → logprob: -18.25000762939453
    5. '```' → logprob: -20.50000762939453
    6. ' ' → logprob: -21.00000762939453
    7. '  ' → logprob: -21.12500762939453
    8. 'resolve' → logprob: -21.25000762939453
    9. '    
' → logprob: -21.50000762939453
    10. 'save' → logprob: -21.62500762939453

Token 229: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004543453920632601
    2. '<|end|>' → logprob: -6.254543304443359
    3. '(' → logprob: -7.004543304443359
    4. '()
' → logprob: -7.254543304443359
    5. '
' → logprob: -7.254543304443359
    6. '```' → logprob: -8.87954330444336
    7. '\n' → logprob: -9.87954330444336
    8. '()\' → logprob: -10.75454330444336
    9. ')' → logprob: -11.37954330444336
    10. '()<' → logprob: -11.75454330444336


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 227
Tokens correctement prédits (1ère position, stricte): 103
Tokens correctement prédits (1ère position, avec adaptation): 114
Tokens correctement prédits (top 10): 201
Précision stricte (1ère position): 45.37%
Précision adaptée (1ère position): 50.22%
Précision (top 10): 88.55%
================================================================================
