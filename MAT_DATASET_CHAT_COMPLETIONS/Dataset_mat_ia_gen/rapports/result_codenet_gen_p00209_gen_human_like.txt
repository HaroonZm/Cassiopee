================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:19:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def rotate_90(mat):
    m = len(mat)
    res = [[0]*m for _ in range(m)]
    for i in range(m):
        for j in range(m):
            res[j][m-1-i] = mat[i][j]
    return res

def get_pattern_positions(p):
    positions = []
    for i,row in enumerate(p):
        for j,val in enumerate(row):
            if val != -1:
                positions.append((i,j,val))
    return positions

def match_at(w, p_positions, x, y):
    for i,j,val in p_positions:
        if w[x+i][y+j] != val:
            return False
    return True

def main():
    import sys
    input = sys.stdin.readline

    while True:
        line = ''
        while line.strip() == '':
            line = input()
            if not line:
                return
        n,m = map(int,line.split())
        if n == 0 and m == 0:
            break
        w = [list(map(int,input().split())) for _ in range(n)]
        p = [list(map(int,input().split())) for _ in range(m)]

        # Precompute rotations of p
        patterns = [p]
        for _ in range(3):
            patterns.append(rotate_90(patterns[-1]))

        # For each pattern, precompute positions of cells with >=0 values
        patterns_pos = [get_pattern_positions(pt) for pt in patterns]

        candidates = []
        for k in range(4):
            ppos = patterns_pos[k]
            max_i = n - m
            max_j = n - m
            for i in range(max_i+1):
                for j in range(max_j+1):
                    if match_at(w, ppos, i, j):
                        # find top-left cell in pattern with value >=0
                        min_r = min(pos[0] for pos in ppos)
                        min_c = min(pos[1] for pos in ppos)
                        # the coordinate in scenery top-left is (i + min_r, j + min_c)
                        candidates.append((i+min_r, j+min_c))

        if not candidates:
            print('NA')
        else:
            candidates.sort()
            print(candidates[0][0], candidates[0][1])

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' rotate' (ID: 31987)
  → Token d'amorce (pas de prédiction)

Token 2: '_' (ID: 62)
  → Token d'amorce (pas de prédiction)

Token 3: '90' (ID: 2744)
  Prédit: 'image'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'image' → logprob: -1.02913498878479
    2. 'list' → logprob: -1.65413498878479
    3. 'string' → logprob: -1.77913498878479
    4. 'matrix' → logprob: -1.90413498878479
    5. 'array' → logprob: -2.15413498878479
    6. '_image' → logprob: -5.654134750366211
    7. '_matrix' → logprob: -5.904134750366211
    8. 'vector' → logprob: -6.029134750366211
    9. '_list' → logprob: -6.279134750366211
    10. 'left' → logprob: -6.904134750366211

Token 4: '(mat' (ID: 83002)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20256195962429047
    2. '_' → logprob: -1.7025619745254517
    3. '(_' → logprob: -7.827561855316162
    4. '```' → logprob: -8.07756233215332
    5. '(_)' → logprob: -9.82756233215332
    6. '_(' → logprob: -10.20256233215332
    7. '(
' → logprob: -10.57756233215332
    8. '(x' → logprob: -10.57756233215332
    9. ')' → logprob: -11.07756233215332
    10. '(_:' → logprob: -11.07756233215332

Token 5: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01233092974871397
    2. ')' → logprob: -4.637331008911133
    3. '[' → logprob: -6.012331008911133
    4. '):
' → logprob: -9.637331008911133
    5. '```' → logprob: -11.387331008911133
    6. ' ):' → logprob: -11.887331008911133
    7. ':' → logprob: -11.887331008911133
    8. ')[' → logprob: -12.137331008911133
    9. '[]):' → logprob: -12.512331008911133
    10. ')：' → logprob: -12.762331008911133

Token 6: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005786820314824581
    2. '   ' → logprob: -5.505786895751953
    3. ':
' → logprob: -7.005786895751953
    4. '```' → logprob: -8.130786895751953
    5. '():' → logprob: -8.880786895751953
    6. '(' → logprob: -9.255786895751953
    7. '\n' → logprob: -9.880786895751953
    8. '[' → logprob: -10.755786895751953
    9. '\' → logprob: -10.755786895751953
    10. '    
' → logprob: -10.880786895751953

Token 7: ' m' (ID: 284)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.292072594165802
    2. ':' → logprob: -2.0420725345611572
    3. '\n' → logprob: -3.2920725345611572
    4. '[' → logprob: -3.4170725345611572
    5. '```' → logprob: -3.5420725345611572
    6. '\' → logprob: -5.417072772979736
    7. ' ' → logprob: -6.042072772979736
    8. '\r' → logprob: -6.167072772979736
    9. ''' → logprob: -6.292072772979736
    10. '\t' → logprob: -6.417072772979736

Token 8: ' =' (ID: 314)
  Prédit: 'atrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atrix' → logprob: -0.6070181727409363
    2. 'at' → logprob: -0.9820181727409363
    3. 'a' → logprob: -3.607018232345581
    4. '=' → logprob: -3.982018232345581
    5. '[' → logprob: -4.357017993927002
    6. ',' → logprob: -4.357017993927002
    7. ' =' → logprob: -5.482017993927002
    8. '[:]' → logprob: -6.982017993927002
    9. 'atrices' → logprob: -7.482017993927002
    10. 'ats' → logprob: -7.482017993927002

Token 9: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.12695835530757904
    2. 'len' → logprob: -2.1269583702087402
    3. '[len' → logprob: -10.626957893371582
    4. '[]' → logprob: -13.126957893371582
    5. '(len' → logprob: -13.751957893371582
    6. ' []' → logprob: -13.876957893371582
    7. ' ' → logprob: -14.501957893371582
    8. '[' → logprob: -15.001957893371582
    9. '1' → logprob: -15.126957893371582
    10. '   ' → logprob: -15.376957893371582

Token 10: '(mat' (ID: 83002)
  Prédit: '(mat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mat' → logprob: -0.020582882687449455
    2. '(' → logprob: -3.895582914352417
    3. '(m' → logprob: -10.270583152770996
    4. ')' → logprob: -13.395583152770996
    5. '(
' → logprob: -13.520583152770996
    6. '(matrix' → logprob: -14.145583152770996
    7. '(Mat' → logprob: -14.395583152770996
    8. '(ma' → logprob: -14.895583152770996
    9. '(

' → logprob: -15.020583152770996
    10. '	mat' → logprob: -15.145583152770996

Token 11: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018290533917024732
    2. '[' → logprob: -6.501829147338867
    3. ')
' → logprob: -8.501829147338867
    4. '   ' → logprob: -9.501829147338867
    5. ' )' → logprob: -10.876829147338867
    6. '[m' → logprob: -11.626829147338867
    7. ')m' → logprob: -12.626829147338867
    8. ' ' → logprob: -12.751829147338867
    9. '`)' → logprob: -12.876829147338867
    10. ')`' → logprob: -13.251829147338867

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22387371957302094
    2. '```' → logprob: -2.7238736152648926
    3. '`' → logprob: -3.4738736152648926
    4. '    
' → logprob: -3.7238736152648926
    5. '[' → logprob: -3.7238736152648926
    6. ')' → logprob: -3.9738736152648926
    7. '\n' → logprob: -5.348873615264893
    8. '  
' → logprob: -5.598873615264893
    9. '``' → logprob: -5.723873615264893
    10. '\' → logprob: -5.723873615264893

Token 13: ' res' (ID: 694)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42968234419822693
    2. ')' → logprob: -1.8046823740005493
    3. 'n' → logprob: -2.4296822547912598
    4. 'for' → logprob: -3.5546822547912598
    5. ' ' → logprob: -3.6796822547912598
    6. ' for' → logprob: -4.17968225479126
    7. 'r' → logprob: -4.55468225479126
    8. '```' → logprob: -5.42968225479126
    9. '`' → logprob: -5.92968225479126
    10. '    
' → logprob: -6.05468225479126

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1740155816078186
    2. '=' → logprob: -2.049015522003174
    3. '[' → logprob: -4.049015522003174
    4. ' ' → logprob: -5.049015522003174
    5. '[:]' → logprob: -5.299015522003174
    6. '.' → logprob: -7.674015522003174
    7. '  ' → logprob: -7.799015522003174
    8. ')' → logprob: -7.924015522003174
    9. '[]' → logprob: -8.299015998840332
    10. ',' → logprob: -8.674015998840332

Token 15: ' [[' (ID: 9237)
  Prédit: ' [['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[' → logprob: -0.38685232400894165
    2. '[[' → logprob: -1.6368522644042969
    3. ' [' → logprob: -2.386852264404297
    4. '[' → logprob: -4.011852264404297
    5. '[]' → logprob: -4.886852264404297
    6. ' []' → logprob: -5.011852264404297
    7. ' [[]' → logprob: -6.886852264404297
    8. '[m' → logprob: -7.136852264404297
    9. '[list' → logprob: -9.761852264404297
    10. '[len' → logprob: -10.136852264404297

Token 16: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.75001049041748
    3. 'mat' → logprob: -13.75001049041748
    4. 'None' → logprob: -14.37501049041748
    5. 'False' → logprob: -14.50001049041748
    6. ' mat' → logprob: -15.87501049041748
    7. '   ' → logprob: -16.875009536743164
    8. '```' → logprob: -17.250009536743164
    9. '    ' → logprob: -18.625009536743164
    10. '1' → logprob: -18.625009536743164

Token 17: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5258234143257141
    2. ']' → logprob: -1.0258233547210693
    3. ']*' → logprob: -3.6508233547210693
    4. 'for' → logprob: -3.7758233547210693
    5. ' ]' → logprob: -6.900823593139648
    6. ')' → logprob: -8.650823593139648
    7. ',' → logprob: -9.025823593139648
    8. '	for' → logprob: -9.400823593139648
    9. ' ' → logprob: -9.525823593139648
    10. '   ' → logprob: -10.150823593139648

Token 18: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -4.842555426876061e-06
    2. ' m' → logprob: -12.250004768371582
    3. '   ' → logprob: -20.0000057220459
    4. ' ' → logprob: -20.0000057220459
    5. '	m' → logprob: -20.7500057220459
    6. '​' → logprob: -21.7500057220459
    7. '0' → logprob: -21.7500057220459
    8. '﻿' → logprob: -21.8750057220459
    9. '  ' → logprob: -22.3750057220459
    10. '```' → logprob: -22.5000057220459

Token 19: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.31485918164253235
    2. 'for' → logprob: -1.31485915184021
    3. '   ' → logprob: -7.314859390258789
    4. ')' → logprob: -7.439859390258789
    5. ']' → logprob: -8.564859390258789
    6. '    ' → logprob: -9.689859390258789
    7. '	for' → logprob: -10.314859390258789
    8. ' ' → logprob: -10.939859390258789
    9. ' ]' → logprob: -11.939859390258789
    10. '           ' → logprob: -12.064859390258789

Token 20: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.47434061765670776
    2. ' range' → logprob: -1.2243406772613525
    3. '_' → logprob: -2.7243406772613525
    4. ' i' → logprob: -4.849340438842773
    5. 'range' → logprob: -5.099340438842773
    6. ' ' → logprob: -5.974340438842773
    7. '_range' → logprob: -7.599340438842773
    8. ' in' → logprob: -7.724340438842773
    9. '	range' → logprob: -8.974340438842773
    10. ' j' → logprob: -9.224340438842773

Token 21: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.027317887172102928
    2. 'in' → logprob: -4.402318000793457
    3. '_' → logprob: -4.902318000793457
    4. ' range' → logprob: -5.277318000793457
    5. ' in' → logprob: -6.277318000793457
    6. 'i' → logprob: -9.777318000793457
    7. '_range' → logprob: -9.777318000793457
    8. ' ' → logprob: -10.027318000793457
    9. '(range' → logprob: -10.777318000793457
    10. '	range' → logprob: -10.902318000793457

Token 22: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -5.1928003813372925e-05
    2. ' range' → logprob: -9.875051498413086
    3. ']' → logprob: -15.875051498413086
    4. ')' → logprob: -16.250051498413086
    5. 'rang' → logprob: -16.625051498413086
    6. '(range' → logprob: -17.125051498413086
    7. 'ran' → logprob: -17.500051498413086
    8. 'r' → logprob: -17.625051498413086
    9. 'ra' → logprob: -18.375051498413086
    10. 'm' → logprob: -18.375051498413086

Token 23: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -3.416665640543215e-05
    2. '(' → logprob: -10.50003433227539
    3. 'm' → logprob: -12.00003433227539
    4. ')m' → logprob: -15.37503433227539
    5. ' (' → logprob: -16.12503433227539
    6. '(len' → logprob: -17.87503433227539
    7. ')' → logprob: -18.00003433227539
    8. ' m' → logprob: -18.12503433227539
    9. '	m' → logprob: -18.12503433227539
    10. '(mat' → logprob: -18.37503433227539

Token 24: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00011713240382960066
    2. ')' → logprob: -9.750117301940918
    3. ']' → logprob: -10.125117301940918
    4. '])]' → logprob: -11.625117301940918
    5. ')])' → logprob: -12.375117301940918
    6. '')]' → logprob: -13.125117301940918
    7. ')][' → logprob: -14.000117301940918
    8. ')],' → logprob: -14.125117301940918
    9. '   ' → logprob: -14.125117301940918
    10. ' )' → logprob: -15.125117301940918

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11210941523313522
    2. ' for' → logprob: -2.487109422683716
    3. 'for' → logprob: -3.987109422683716
    4. '
' → logprob: -5.862109184265137
    5. '    
' → logprob: -7.237109184265137
    6. ' ' → logprob: -8.737109184265137
    7. '\n' → logprob: -8.987109184265137
    8. '	for' → logprob: -9.362109184265137
    9. ')' → logprob: -9.612109184265137
    10. ' 
' → logprob: -9.612109184265137

Token 26: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4561293125152588
    2. '   ' → logprob: -1.5811293125152588
    3. ' for' → logprob: -1.8311293125152588
    4. '
' → logprob: -9.08112907409668
    5. ' ' → logprob: -9.70612907409668
    6. ')' → logprob: -10.33112907409668
    7. '```' → logprob: -10.70612907409668
    8. '	for' → logprob: -10.83112907409668
    9. ']' → logprob: -11.70612907409668
    10. '    
' → logprob: -11.95612907409668

Token 27: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0024682863149791956
    2. 'i' → logprob: -6.127468109130859
    3. ' ' → logprob: -8.25246810913086
    4. ' _' → logprob: -11.25246810913086
    5. '_' → logprob: -12.12746810913086
    6. ' row' → logprob: -13.87746810913086
    7. ' ' → logprob: -14.37746810913086
    8. '  ' → logprob: -14.62746810913086
    9. ' j' → logprob: -14.75246810913086
    10. '_i' → logprob: -15.12746810913086

Token 28: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009884171187877655
    2. 'in' → logprob: -4.634884357452393
    3. ' ' → logprob: -10.009883880615234
    4. '   ' → logprob: -10.384883880615234
    5. '+' → logprob: -11.259883880615234
    6. '    ' → logprob: -11.384883880615234
    7. '	in' → logprob: -11.384883880615234
    8. '0' → logprob: -12.259883880615234
    9. '<|end|>' → logprob: -12.509883880615234
    10. '  ' → logprob: -12.759883880615234

Token 29: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3133043944835663
    2. 'range' → logprob: -1.3133044242858887
    3. 'm' → logprob: -10.31330394744873
    4. ' m' → logprob: -11.68830394744873
    5. ' xrange' → logprob: -14.81330394744873
    6. '(range' → logprob: -14.93830394744873
    7. '	range' → logprob: -15.56330394744873
    8. ')' → logprob: -16.188304901123047
    9. ' ' → logprob: -16.813304901123047
    10. '0' → logprob: -17.938304901123047

Token 30: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.06277665495872498
    2. '(' → logprob: -2.812776565551758
    3. ' (' → logprob: -7.187776565551758
    4. ' m' → logprob: -10.312776565551758
    5. 'm' → logprob: -11.687776565551758
    6. '(len' → logprob: -11.937776565551758
    7. '(n' → logprob: -13.062776565551758
    8. '(s' → logprob: -14.562776565551758
    9. ' )' → logprob: -14.687776565551758
    10. ')' → logprob: -14.812776565551758

Token 31: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00030590701499022543
    2. ' ):' → logprob: -8.875306129455566
    3. ')' → logprob: -9.125306129455566
    4. '):
' → logprob: -10.500306129455566
    5. ':' → logprob: -11.000306129455566
    6. ']:' → logprob: -12.250306129455566
    7. '   ' → logprob: -12.375306129455566
    8. ')]' → logprob: -13.375306129455566
    9. ' ' → logprob: -14.375306129455566
    10. '**' → logprob: -15.250306129455566

Token 32: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03421206772327423
    2. ' for' → logprob: -3.784212112426758
    3. '   ' → logprob: -5.034212112426758
    4. '<|end|>' → logprob: -6.034212112426758
    5. 'for' → logprob: -6.534212112426758
    6. '    ' → logprob: -8.034212112426758
    7. ' ' → logprob: -9.659212112426758
    8. '4' → logprob: -10.034212112426758
    9. '     ' → logprob: -10.284212112426758
    10. '<|end|>' → logprob: -10.534212112426758

Token 33: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2414839267730713
    2. 'for' (adapté à ' for') → logprob: -1.7414839267730713
    3. '   ' → logprob: -3.2414839267730713
    4. '<|end|>' → logprob: -9.741483688354492
    5. '	for' → logprob: -10.241483688354492
    6. '       ' → logprob: -10.366483688354492
    7. ' ' → logprob: -10.741483688354492
    8. '  ' → logprob: -11.366483688354492
    9. '```' → logprob: -11.991483688354492
    10. '    ' → logprob: -12.366483688354492

Token 34: ' j' (ID: 441)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.1669742912054062
    2. ' m' → logprob: -1.9169743061065674
    3. 'j' → logprob: -5.291974067687988
    4. ' j' → logprob: -6.416974067687988
    5. '   ' → logprob: -10.666974067687988
    6. ' ' → logprob: -11.666974067687988
    7. 'range' → logprob: -11.791974067687988
    8. '0' → logprob: -12.041974067687988
    9. '    ' → logprob: -12.541974067687988
    10. ' range' → logprob: -12.666974067687988

Token 35: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.24954690039157867
    2. 'in' → logprob: -1.8745468854904175
    3. '+' → logprob: -3.374547004699707
    4. '(' → logprob: -4.499547004699707
    5. ')' → logprob: -4.999547004699707
    6. ' ' → logprob: -5.249547004699707
    7. '    ' → logprob: -5.874547004699707
    8. '(m' → logprob: -5.999547004699707
    9. ' (' → logprob: -6.374547004699707
    10. '   ' → logprob: -7.624547004699707

Token 36: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.25861719250679016
    2. 'range' → logprob: -1.8836171627044678
    3. 'm' → logprob: -3.0086171627044678
    4. ' m' → logprob: -3.6336171627044678
    5. '(range' → logprob: -10.633617401123047
    6. ' ' → logprob: -11.758617401123047
    7. 'Range' → logprob: -12.133617401123047
    8. ' rango' → logprob: -12.133617401123047
    9. ' xrange' → logprob: -12.258617401123047
    10. '_range' → logprob: -12.508617401123047

Token 37: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.00034058792516589165
    2. '(' → logprob: -8.000340461730957
    3. ' (' → logprob: -12.875340461730957
    4. 'm' → logprob: -13.250340461730957
    5. ')' → logprob: -14.875340461730957
    6. '(s' → logprob: -15.875340461730957
    7. ' m' → logprob: -16.250341415405273
    8. '(range' → logprob: -16.875341415405273
    9. '(len' → logprob: -17.375341415405273
    10. '(
' → logprob: -17.500341415405273

Token 38: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002236258937045932
    2. ')' → logprob: -6.127236366271973
    3. ':' → logprob: -10.752236366271973
    4. ']:' → logprob: -11.502236366271973
    5. ' ):' → logprob: -11.627236366271973
    6. '-' → logprob: -12.752236366271973
    7. ')m' → logprob: -13.252236366271973
    8. '):
' → logprob: -13.377236366271973
    9. 'm' → logprob: -13.502236366271973
    10. ']):' → logprob: -14.252236366271973

Token 39: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5964260697364807
    2. ' res' → logprob: -1.721426010131836
    3. ']' → logprob: -1.971426010131836
    4. 'res' → logprob: -2.346426010131836
    5. ' ]' → logprob: -3.971426010131836
    6. '       ' → logprob: -4.846426010131836
    7. '               ' → logprob: -6.221426010131836
    8. ' ' → logprob: -6.971426010131836
    9. '[' → logprob: -7.096426010131836
    10. '][' → logprob: -7.346426010131836

Token 40: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.007325724698603153
    2. ' res' → logprob: -5.132325649261475
    3. 'm' → logprob: -6.882325649261475
    4. ']' → logprob: -8.257326126098633
    5. 'r' → logprob: -10.507326126098633
    6. '[' → logprob: -11.007326126098633
    7. ')' → logprob: -11.132326126098633
    8. 'j' → logprob: -11.257326126098633
    9. '`' → logprob: -12.007326126098633
    10. '   ' → logprob: -12.507326126098633

Token 41: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0024028855841606855
    2. '[m' → logprob: -6.2524027824401855
    3. '[' → logprob: -7.8774027824401855
    4. '[i' → logprob: -10.377403259277344
    5. '][' → logprob: -10.502403259277344
    6. ' [' → logprob: -12.002403259277344
    7. '[
' → logprob: -12.002403259277344
    8. '[n' → logprob: -12.127403259277344
    9. ']' → logprob: -13.127403259277344
    10. '```' → logprob: -13.127403259277344

Token 42: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.12772725522518158
    2. '[m' → logprob: -2.1277272701263428
    3. '[i' → logprob: -7.752727031707764
    4. '[' → logprob: -8.877727508544922
    5. ')[' → logprob: -9.252727508544922
    6. ']' → logprob: -10.002727508544922
    7. '=' → logprob: -10.502727508544922
    8. 'm' → logprob: -10.752727508544922
    9. '=m' → logprob: -11.377727508544922
    10. '[
' → logprob: -12.252727508544922

Token 43: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.6240566083070007e-06
    2. ' m' → logprob: -13.500001907348633
    3. 'i' → logprob: -16.500001907348633
    4. '[m' → logprob: -17.500001907348633
    5. '(m' → logprob: -18.500001907348633
    6. ')m' → logprob: -19.125001907348633
    7. '(' → logprob: -20.000001907348633
    8. '<m' → logprob: -20.000001907348633
    9. ']' → logprob: -20.750001907348633
    10. '-m' → logprob: -21.000001907348633

Token 44: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10404383391141891
    2. ' -' → logprob: -2.35404372215271
    3. '-i' → logprob: -5.729043960571289
    4. '1' → logprob: -7.479043960571289
    5. ' ' → logprob: -11.604043960571289
    6. '−' → logprob: -12.604043960571289
    7. 'i' → logprob: -14.229043960571289
    8. '-I' → logprob: -15.104043960571289
    9. '[' → logprob: -15.729043960571289
    10. '–' → logprob: -15.854043960571289

Token 45: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012562633492052555
    2. 'i' → logprob: -4.3875627517700195
    3. ' ' → logprob: -10.51256275177002
    4. ' i' → logprob: -11.01256275177002
    5. '-' → logprob: -12.51256275177002
    6. '```' → logprob: -13.51256275177002
    7. '   ' → logprob: -14.13756275177002
    8. '`' → logprob: -14.51256275177002
    9. '(i' → logprob: -14.88756275177002
    10. '{i' → logprob: -15.01256275177002

Token 46: '-i' (ID: 18499)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5303769111633301
    2. '-' → logprob: -1.03037691116333
    3. '-i' → logprob: -2.90537691116333
    4. 'i' → logprob: -11.655376434326172
    5. ' ' → logprob: -12.030376434326172
    6. ' i' → logprob: -14.155376434326172
    7. '-I' → logprob: -16.030376434326172
    8. '-j' → logprob: -16.405376434326172
    9. ']' → logprob: -16.655376434326172
    10. ']-' → logprob: -16.780376434326172

Token 47: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000217006730963476
    2. ' ]' → logprob: -8.50021743774414
    3. ']=' → logprob: -11.37521743774414
    4. '=' → logprob: -13.50021743774414
    5. ')' → logprob: -14.75021743774414
    6. ')]' → logprob: -15.87521743774414
    7. ' =' → logprob: -17.12521743774414
    8. ']
' → logprob: -18.00021743774414
    9. '`]' → logprob: -18.00021743774414
    10. ']]' → logprob: -18.87521743774414

Token 48: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192946195602417
    2. ' =' → logprob: -1.501929521560669
    3. ' =
' → logprob: -16.376930236816406
    4. '=

' → logprob: -16.626930236816406
    5. ' =)' → logprob: -17.001930236816406
    6. '＝' → logprob: -17.001930236816406
    7. ']' → logprob: -17.251930236816406
    8. '<|end|>' → logprob: -17.751930236816406
    9. '=
' → logprob: -18.001930236816406
    10. '.=' → logprob: -18.001930236816406

Token 49: ' mat' (ID: 2450)
  Prédit: 'mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mat' → logprob: -0.06197552755475044
    2. ' mat' → logprob: -2.8119754791259766
    3. '	mat' → logprob: -12.186975479125977
    4. '(mat' → logprob: -13.186975479125977
    5. ' ' → logprob: -14.811975479125977
    6. 'matrix' → logprob: -15.936975479125977
    7. ' matr' → logprob: -16.061975479125977
    8. 'ma' → logprob: -16.436975479125977
    9. 'm' → logprob: -16.561975479125977
    10. ' matt' → logprob: -17.436975479125977

Token 50: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.334533878136426e-05
    2. '[' → logprob: -10.375042915344238
    3. '[j' → logprob: -11.375042915344238
    4. '[I' → logprob: -15.000042915344238
    5. '[
' → logprob: -17.125043869018555
    6. ' [' → logprob: -17.375043869018555
    7. '\[' → logprob: -17.500043869018555
    8. 'i' → logprob: -17.750043869018555
    9. '```' → logprob: -17.750043869018555
    10. '[m' → logprob: -18.125043869018555

Token 51: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0019450569525361061
    2. '[j' → logprob: -6.5019450187683105
    3. ']' → logprob: -7.7519450187683105
    4. '[' → logprob: -12.001945495605469
    5. ' ][' → logprob: -12.251945495605469
    6. ''][' → logprob: -15.001945495605469
    7. '"][' → logprob: -15.376945495605469
    8. '}[' → logprob: -15.501945495605469
    9. ')[' → logprob: -15.501945495605469
    10. '```' → logprob: -15.626945495605469

Token 52: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.180879816180095e-05
    2. ' j' → logprob: -9.875051498413086
    3. ' ' → logprob: -16.375051498413086
    4. '	j' → logprob: -16.625051498413086
    5. '   ' → logprob: -19.000051498413086
    6. ']' → logprob: -19.875051498413086
    7. ':j' → logprob: -20.375051498413086
    8. '```' → logprob: -20.625051498413086
    9. '  ' → logprob: -20.750051498413086
    10. '    ' → logprob: -21.000051498413086

Token 53: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002669384120963514
    2. ']' → logprob: -8.250267028808594
    3. ')
' → logprob: -13.000267028808594
    4. ')]' → logprob: -13.375267028808594
    5. ' )' → logprob: -14.250267028808594
    6. '])' → logprob: -14.375267028808594
    7. '）' → logprob: -15.375267028808594
    8. '}' → logprob: -15.625267028808594
    9. ')])' → logprob: -16.500267028808594
    10. '))' → logprob: -16.875267028808594

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4354661703109741
    2. '
' → logprob: -1.6854661703109741
    3. '\n' → logprob: -1.9354661703109741
    4. '    
' → logprob: -4.935466289520264
    5. ' return' → logprob: -5.810466289520264
    6. '<|end|>' → logprob: -5.935466289520264
    7. '  
' → logprob: -6.185466289520264
    8. 'return' → logprob: -6.185466289520264
    9. '\r' → logprob: -6.810466289520264
    10. '	return' → logprob: -6.935466289520264

Token 55: ' return' (ID: 622)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5733675360679626
    2. 'return' (adapté à ' return') → logprob: -1.5733675956726074
    3. '   ' → logprob: -1.9483675956726074
    4. '\n' → logprob: -3.6983675956726074
    5. ' return' → logprob: -3.6983675956726074
    6. '    
' → logprob: -4.698367595672607
    7. '<|end|>' → logprob: -4.823367595672607
    8. '  
' → logprob: -5.448367595672607
    9. '```' → logprob: -5.448367595672607
    10. ':return' → logprob: -5.448367595672607

Token 56: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.061969365924596786
    2. 'res' → logprob: -2.81196928024292
    3. '(res' → logprob: -13.311969757080078
    4. '	res' → logprob: -16.686969757080078
    5. ' ' → logprob: -17.561969757080078
    6. '$res' → logprob: -17.561969757080078
    7. ' ' → logprob: -17.936969757080078
    8. 's' → logprob: -18.686969757080078
    9. 'r' → logprob: -18.936969757080078
    10. '[' → logprob: -19.436969757080078

Token 57: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 58: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: ' get' (ID: 717)
  Prédit: ' rotate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rotate' → logprob: -0.5317342877388
    2. ' reverse' → logprob: -1.0317342281341553
    3. ' space' → logprob: -3.9067342281341553
    4. ' ' → logprob: -4.156734466552734
    5. ' add' → logprob: -5.531734466552734
    6. ' flip' → logprob: -6.281734466552734
    7. ' multiply' → logprob: -6.531734466552734
    8. ' calculate' → logprob: -6.656734466552734
    9. ' ' → logprob: -6.656734466552734
    10. ' process' → logprob: -7.406734466552734

Token 60: '_pattern' (ID: 50002)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.819312572479248
    2. '_matrix' → logprob: -1.694312572479248
    3. '_max' → logprob: -1.944312572479248
    4. '_rotation' → logprob: -2.194312572479248
    5. '_rot' → logprob: -3.569312572479248
    6. '_neighbors' → logprob: -4.319312572479248
    7. '_di' → logprob: -4.444312572479248
    8. '_indices' → logprob: -5.069312572479248
    9. '_square' → logprob: -5.444312572479248
    10. '_row' → logprob: -5.694312572479248

Token 61: '_positions' (ID: 93193)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0022825265768915415
    2. ' (' → logprob: -7.127282619476318
    3. '(_' → logprob: -7.627282619476318
    4. '_' → logprob: -8.75228214263916
    5. '("("' → logprob: -9.00228214263916
    6. '():' → logprob: -9.12728214263916
    7. '(p' → logprob: -9.75228214263916
    8. ':' → logprob: -10.37728214263916
    9. '_pattern' → logprob: -10.37728214263916
    10. '(pattern' → logprob: -10.50228214263916

Token 62: '(p' (ID: 2407)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018221816048026085
    2. ' (' → logprob: -4.018221855163574
    3. '("("' → logprob: -11.143221855163574
    4. '_' → logprob: -11.393221855163574
    5. '<|end|>' → logprob: -11.893221855163574
    6. ' ' → logprob: -12.143221855163574
    7. '('' → logprob: -12.518221855163574
    8. '(user' → logprob: -13.018221855163574
    9. '(p' → logprob: -13.143221855163574
    10. '```' → logprob: -13.393221855163574

Token 63: '):
' (ID: 1883)
  Prédit: 'attern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'attern' → logprob: -0.07370948046445847
    2. 'at' → logprob: -2.698709487915039
    3. 'att' → logprob: -5.948709487915039
    4. 'a' → logprob: -8.073709487915039
    5. 'atter' → logprob: -8.198709487915039
    6. ')' → logprob: -8.698709487915039
    7. 'attr' → logprob: -8.823709487915039
    8. '):' → logprob: -9.698709487915039
    9. 'atern' → logprob: -10.323709487915039
    10. 'atte' → logprob: -10.448709487915039

Token 64: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.039402540773153305
    2. '(p' → logprob: -4.289402484893799
    3. ':' → logprob: -4.539402484893799
    4. '   ' → logprob: -5.664402484893799
    5. '(
' → logprob: -5.789402484893799
    6. ' (' → logprob: -6.289402484893799
    7. '[' → logprob: -6.664402484893799
    8. ' :' → logprob: -7.164402484893799
    9. '(:' → logprob: -7.539402484893799
    10. ' ' → logprob: -7.914402484893799

Token 65: ' positions' (ID: 15897)
  Prédit: ' positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positions' → logprob: -0.025632988661527634
    2. 'positions' (adapté à ' positions') → logprob: -4.150632858276367
    3. ' p' → logprob: -5.525632858276367
    4. '   ' → logprob: -6.275632858276367
    5. ' m' → logprob: -6.275632858276367
    6. ' pos' → logprob: -7.400632858276367
    7. ' n' → logprob: -8.025632858276367
    8. ' return' → logprob: -8.775632858276367
    9. '_positions' → logprob: -9.150632858276367
    10. '(' → logprob: -9.400632858276367

Token 66: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007677846122533083
    2. '=' → logprob: -4.882678031921387
    3. '(' → logprob: -10.132678031921387
    4. ' ' → logprob: -11.382678031921387
    5. ')' → logprob: -12.257678031921387
    6. '=[]' → logprob: -12.882678031921387
    7. ' =
' → logprob: -12.882678031921387
    8. '  ' → logprob: -13.007678031921387
    9. '<|end|>' → logprob: -13.257678031921387
    10. 's' → logprob: -13.632678031921387

Token 67: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0639251098036766
    2. ' []' → logprob: -2.81392502784729
    3. '[' → logprob: -6.313925266265869
    4. '[(' → logprob: -9.813924789428711
    5. ' [' → logprob: -10.438924789428711
    6. '{}' → logprob: -10.563924789428711
    7. 'set' → logprob: -11.438924789428711
    8. '[]}' → logprob: -11.813924789428711
    9. '[]
' → logprob: -12.313924789428711
    10. ' set' → logprob: -12.938924789428711

Token 68: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12311334162950516
    2. ' for' → logprob: -3.1231133937835693
    3. '   ' → logprob: -3.3731133937835693
    4. '<|end|>' → logprob: -3.7481133937835693
    5. ':
' → logprob: -5.24811315536499
    6. ' ' → logprob: -5.74811315536499
    7. 'for' → logprob: -6.62311315536499
    8. '	for' → logprob: -7.12311315536499
    9. ' :' → logprob: -7.62311315536499
    10. '
' → logprob: -7.87311315536499

Token 69: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3176288306713104
    2. ' for' → logprob: -1.3176288604736328
    3. '   ' → logprob: -5.442628860473633
    4. ' ' → logprob: -11.567628860473633
    5. '	for' → logprob: -11.942628860473633
    6. 'n' → logprob: -12.067628860473633
    7. '    
' → logprob: -12.817628860473633
    8. '
' → logprob: -12.942628860473633
    9. ' 
' → logprob: -14.567628860473633
    10. 'r' → logprob: -14.567628860473633

Token 70: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.011710194870829582
    2. 'i' → logprob: -5.136710166931152
    3. ' ' → logprob: -5.261710166931152
    4. ' x' → logprob: -8.261710166931152
    5. ' r' → logprob: -9.386710166931152
    6. ' y' → logprob: -9.636710166931152
    7. ' _' → logprob: -10.136710166931152
    8. ' idx' → logprob: -10.511710166931152
    9. ' row' → logprob: -10.761710166931152
    10. 'r' → logprob: -11.386710166931152

Token 71: ',row' (ID: 136650)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.021056436002254486
    2. 'in' → logprob: -4.396056652069092
    3. ' ' → logprob: -4.771056652069092
    4. '	in' → logprob: -11.271056175231934
    5. '<|end|>' → logprob: -11.771056175231934
    6. 'n' → logprob: -12.021056175231934
    7. '  ' → logprob: -12.146056175231934
    8. ' n' → logprob: -12.896056175231934
    9. ' i' → logprob: -14.021056175231934
    10. '    ' → logprob: -14.271056175231934

Token 72: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05498744547367096
    2. 'in' → logprob: -2.9299874305725098
    3. ' ' → logprob: -9.429987907409668
    4. '<|end|>' → logprob: -11.679987907409668
    5. ',' → logprob: -11.804987907409668
    6. '	in' → logprob: -13.179987907409668
    7. '    ' → logprob: -13.679987907409668
    8. '   ' → logprob: -13.679987907409668
    9. ' ,' → logprob: -13.804987907409668
    10. 's' → logprob: -13.929987907409668

Token 73: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.5999660491943359
    2. ' p' → logprob: -1.599966049194336
    3. 'enumer' → logprob: -1.849966049194336
    4. 'p' → logprob: -2.474966049194336
    5. 'range' → logprob: -5.349966049194336
    6. ' range' → logprob: -5.849966049194336
    7. ' ' → logprob: -9.974966049194336
    8. '(p' → logprob: -10.474966049194336
    9. '```' → logprob: -10.474966049194336
    10. ')p' → logprob: -11.099966049194336

Token 74: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0005573204252868891
    2. '(' → logprob: -7.5005574226379395
    3. ' (' → logprob: -13.375556945800781
    4. 'p' → logprob: -13.625556945800781
    5. ' ' → logprob: -14.875556945800781
    6. ')' → logprob: -15.000556945800781
    7. '(s' → logprob: -15.875556945800781
    8. ' p' → logprob: -16.00055694580078
    9. '(
' → logprob: -16.75055694580078
    10. '```' → logprob: -16.87555694580078

Token 75: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003217574267182499
    2. '):
' → logprob: -8.125321388244629
    3. ':' → logprob: -11.000321388244629
    4. ')' → logprob: -12.000321388244629
    5. '():' → logprob: -14.250321388244629
    6. '):

' → logprob: -14.375321388244629
    7. ' ):' → logprob: -14.500321388244629
    8. '):
' → logprob: -15.250321388244629
    9. '[]):' → logprob: -15.250321388244629
    10. '   ' → logprob: -15.750321388244629

Token 76: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031759243458509445
    2. ':' → logprob: -3.531759262084961
    3. '   ' → logprob: -7.031759262084961
    4. '):' → logprob: -8.281759262084961
    5. ':
' → logprob: -8.531759262084961
    6. ' for' → logprob: -8.531759262084961
    7. '<|end|>' → logprob: -8.531759262084961
    8. ' :' → logprob: -9.156759262084961
    9. '):
' → logprob: -9.656759262084961
    10. ' ' → logprob: -11.031759262084961

Token 77: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04077295586466789
    2. '           ' → logprob: -3.6657729148864746
    3. ' ' → logprob: -5.415772914886475
    4. 'for' (adapté à ' for') → logprob: -5.415772914886475
    5. '   ' → logprob: -6.290772914886475
    6. '       ' → logprob: -6.665772914886475
    7. '    ' → logprob: -6.915772914886475
    8. '        ' → logprob: -7.540772914886475
    9. '<|end|>' → logprob: -7.915772914886475
    10. '            ' → logprob: -8.790773391723633

Token 78: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.026312140747904778
    2. 'j' → logprob: -3.6513121128082275
    3. ' ' → logprob: -11.776311874389648
    4. '	j' → logprob: -13.651311874389648
    5. '```' → logprob: -13.776311874389648
    6. '  ' → logprob: -14.776311874389648
    7. '   ' → logprob: -14.901311874389648
    8. '    ' → logprob: -15.276311874389648
    9. ',j' → logprob: -15.276311874389648
    10. '<|end|>' → logprob: -15.776311874389648

Token 79: ',val' (ID: 126054)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3521538972854614
    2. ',row' → logprob: -1.4771538972854614
    3. ',' → logprob: -3.352153778076172
    4. 'in' → logprob: -3.852153778076172
    5. ' ,' → logprob: -4.477153778076172
    6. ',in' → logprob: -7.227153778076172
    7. ' ' → logprob: -9.477153778076172
    8. ',column' → logprob: -11.102153778076172
    9. ',value' → logprob: -11.227153778076172
    10. ',p' → logprob: -11.227153778076172

Token 80: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026363588869571686
    2. 'in' → logprob: -3.6513636112213135
    3. ' ' → logprob: -9.901363372802734
    4. '	in' → logprob: -11.526363372802734
    5. '<|end|>' → logprob: -13.651363372802734
    6. '   ' → logprob: -14.901363372802734
    7. '  ' → logprob: -15.026363372802734
    8. ',' → logprob: -15.276363372802734
    9. '    ' → logprob: -15.401363372802734
    10. '```' → logprob: -15.401363372802734

Token 81: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.6594314575195312
    2. ' enumerate' → logprob: -0.7844314575195312
    3. 'row' → logprob: -3.9094314575195312
    4. ' row' → logprob: -5.159431457519531
    5. '(row' → logprob: -7.659431457519531
    6. '[row' → logprob: -9.909431457519531
    7. ' ' → logprob: -10.034431457519531
    8. 'range' → logprob: -10.034431457519531
    9. ' range' → logprob: -11.034431457519531
    10. '<|end|>' → logprob: -11.659431457519531

Token 82: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.0025039594620466232
    2. '(val' → logprob: -6.002503871917725
    3. '(' → logprob: -10.752504348754883
    4. ' (' → logprob: -12.502504348754883
    5. 'row' → logprob: -13.252504348754883
    6. ' row' → logprob: -13.877504348754883
    7. '(s' → logprob: -16.377504348754883
    8. '(value' → logprob: -16.502504348754883
    9. '(rows' → logprob: -16.502504348754883
    10. '(j' → logprob: -17.127504348754883

Token 83: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004637910984456539
    2. '):
' → logprob: -5.629637718200684
    3. ' ):' → logprob: -8.129637718200684
    4. '           ' → logprob: -8.379637718200684
    5. ' if' → logprob: -8.379637718200684
    6. '       ' → logprob: -8.879637718200684
    7. 'if' → logprob: -9.754637718200684
    8. ':' → logprob: -10.254637718200684
    9. '():' → logprob: -10.504637718200684
    10. ')' → logprob: -11.754637718200684

Token 84: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001298330957069993
    2. ':' → logprob: -7.001298427581787
    3. '<|end|>' → logprob: -9.126297950744629
    4. ' if' → logprob: -9.376297950744629
    5. ':
' → logprob: -10.626297950744629
    6. '               ' → logprob: -10.626297950744629
    7. ' :' → logprob: -10.751297950744629
    8. 'if' → logprob: -10.751297950744629
    9. '          ' → logprob: -10.876297950744629
    10. '<|end|>' → logprob: -11.001297950744629

Token 85: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.15943439304828644
    2. '               ' → logprob: -2.0344343185424805
    3. ' ' → logprob: -5.1594343185424805
    4. '           ' → logprob: -5.2844343185424805
    5. 'if' (adapté à ' if') → logprob: -5.4094343185424805
    6. '<|end|>' → logprob: -7.5344343185424805
    7. '            ' → logprob: -8.03443431854248
    8. ' (' → logprob: -9.53443431854248
    9. '              ' → logprob: -9.78443431854248
    10. '   ' → logprob: -9.90943431854248

Token 86: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.03804333135485649
    2. 'val' → logprob: -3.288043260574341
    3. '	val' → logprob: -14.163043022155762
    4. '[val' → logprob: -14.413043022155762
    5. '(val' → logprob: -14.538043022155762
    6. ' ' → logprob: -16.663043975830078
    7. ' ' → logprob: -16.788043975830078
    8. ' v' → logprob: -17.288043975830078
    9. ',val' → logprob: -17.413043975830078
    10. 'v' → logprob: -17.413043975830078

Token 87: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6462467312812805
    2. ' ==' → logprob: -1.2712466716766357
    3. ':' → logprob: -1.6462466716766357
    4. '!=' → logprob: -7.271246910095215
    5. ' !=' → logprob: -7.271246910095215
    6. ' :' → logprob: -7.271246910095215
    7. ' ' → logprob: -9.021246910095215
    8. '<|end|>' → logprob: -9.021246910095215
    9. '>' → logprob: -9.271246910095215
    10. '):' → logprob: -9.646246910095215

Token 88: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1869269609451294
    2. ' ' → logprob: -1.8119269609451294
    3. ''' → logprob: -5.06192684173584
    4. ' '' → logprob: -7.18692684173584
    5. '"' → logprob: -10.31192684173584
    6. ''.' → logprob: -12.31192684173584
    7. '.' → logprob: -12.43692684173584
    8. ' "' → logprob: -12.56192684173584
    9. '<|end|>' → logprob: -12.68692684173584
    10. ''s' → logprob: -12.93692684173584

Token 89: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.25000286102295
    3. '<|end|>' → logprob: -15.25000286102295
    4. '```' → logprob: -15.75000286102295
    5. '    ' → logprob: -16.250001907348633
    6. '  ' → logprob: -16.937501907348633
    7. '2' → logprob: -17.000001907348633
    8. '9' → logprob: -17.125001907348633
    9. '0' → logprob: -17.187501907348633
    10. '-' → logprob: -17.187501907348633

Token 90: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007980169728398323
    2. ' :' → logprob: -5.3829803466796875
    3. '):' → logprob: -6.5079803466796875
    4. ':
' → logprob: -7.1329803466796875
    5. '               ' → logprob: -7.3829803466796875
    6. '           ' → logprob: -8.882980346679688
    7. ' and' → logprob: -9.507980346679688
    8. '<|end|>' → logprob: -9.757980346679688
    9. '):
' → logprob: -10.257980346679688
    10. ']:' → logprob: -10.757980346679688

Token 91: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2601834833621979
    2. ' positions' → logprob: -1.5101834535598755
    3. 'positions' → logprob: -5.260183334350586
    4. '                
' → logprob: -7.010183334350586
    5. ' 
' → logprob: -7.510183334350586
    6. '                ' → logprob: -7.510183334350586
    7. '           ' → logprob: -8.635183334350586
    8. ' ' → logprob: -9.010183334350586
    9. '_positions' → logprob: -9.135183334350586
    10. '                   ' → logprob: -9.135183334350586

Token 92: ' positions' (ID: 15897)
  Prédit: ' positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positions' → logprob: -0.14238384366035461
    2. 'positions' (adapté à ' positions') → logprob: -2.1423838138580322
    3. '                   ' → logprob: -5.267384052276611
    4. ' ' → logprob: -5.642384052276611
    5. ' 
' → logprob: -5.767384052276611
    6. '_positions' → logprob: -7.017384052276611
    7. '.positions' → logprob: -7.392384052276611
    8. '                ' → logprob: -7.517384052276611
    9. '               ' → logprob: -7.767384052276611
    10. '                    
' → logprob: -7.892384052276611

Token 93: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.007795063778758049
    2. '.' → logprob: -4.8827948570251465
    3. ' .' → logprob: -8.882795333862305
    4. '               ' → logprob: -10.882795333862305
    5. '.add' → logprob: -11.632795333862305
    6. '.push' → logprob: -11.882795333862305
    7. '.Append' → logprob: -13.007795333862305
    8. '.extend' → logprob: -13.007795333862305
    9. 'append' → logprob: -13.132795333862305
    10. '.setdefault' → logprob: -13.132795333862305

Token 94: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.20169906318187714
    2. '(' → logprob: -1.7016990184783936
    3. ' (' → logprob: -8.451699256896973
    4. '(j' → logprob: -10.826699256896973
    5. '(i' → logprob: -10.826699256896973
    6. '(
' → logprob: -11.076699256896973
    7. ' ((' → logprob: -11.826699256896973
    8. ' ' → logprob: -13.326699256896973
    9. '(tuple' → logprob: -13.451699256896973
    10. '   ' → logprob: -13.826699256896973

Token 95: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.000556012790184468
    2. ' i' → logprob: -7.500555992126465
    3. '   ' → logprob: -13.625555992126465
    4. ')i' → logprob: -14.500555992126465
    5. '           ' → logprob: -15.375555992126465
    6. ' ' → logprob: -15.375555992126465
    7. '	i' → logprob: -15.875555992126465
    8. ')' → logprob: -16.00055694580078
    9. '
' → logprob: -16.50055694580078
    10. 'j' → logprob: -16.50055694580078

Token 96: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5768007636070251
    2. ',j' → logprob: -0.8268007636070251
    3. ' ,' → logprob: -7.07680082321167
    4. ',
' → logprob: -12.451800346374512
    5. '`,' → logprob: -12.701800346374512
    6. ' ' → logprob: -12.826800346374512
    7. '`,`' → logprob: -13.576800346374512
    8. '           ' → logprob: -13.951800346374512
    9. '',' → logprob: -14.201800346374512
    10. ')' → logprob: -14.951800346374512

Token 97: ',val' (ID: 126054)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00036263695801608264
    2. ')' → logprob: -8.500362396240234
    3. '))
' → logprob: -9.125362396240234
    4. ',' → logprob: -10.500362396240234
    5. ' ))' → logprob: -11.125362396240234
    6. ')))' → logprob: -12.625362396240234
    7. '           ' → logprob: -13.875362396240234
    8. '               ' → logprob: -14.125362396240234
    9. '),' → logprob: -14.250362396240234
    10. '       ' → logprob: -14.500362396240234

Token 98: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.004995128605514765
    2. ')' → logprob: -5.879995346069336
    3. '))
' → logprob: -6.129995346069336
    4. ')))' → logprob: -12.129995346069336
    5. ' ))' → logprob: -13.254995346069336
    6. '))

' → logprob: -13.629995346069336
    7. ')
' → logprob: -14.254995346069336
    8. '))
' → logprob: -14.629995346069336
    9. '               ' → logprob: -14.629995346069336
    10. ''))' → logprob: -15.004995346069336

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09756048023700714
    2. '
' → logprob: -2.472560405731201
    3. '    
' → logprob: -5.097560405731201
    4. '	return' → logprob: -6.972560405731201
    5. ' return' → logprob: -7.597560405731201
    6. '```' → logprob: -8.09756088256836
    7. 'return' → logprob: -8.34756088256836
    8. '<|end|>' → logprob: -8.97256088256836
    9. ' 
' → logprob: -9.59756088256836
    10. '       ' → logprob: -9.72256088256836

Token 100: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04548221454024315
    2. 'return' (adapté à ' return') → logprob: -3.6704821586608887
    3. ' return' → logprob: -4.045482158660889
    4. '
' → logprob: -7.295482158660889
    5. '	return' → logprob: -7.545482158660889
    6. ' ' → logprob: -9.420482635498047
    7. '    
' → logprob: -9.795482635498047
    8. ':return' → logprob: -9.920482635498047
    9. ')' → logprob: -10.170482635498047
    10. '       ' → logprob: -10.545482635498047

Token 101: ' positions' (ID: 15897)
  Prédit: ' positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' positions' → logprob: -0.07888989895582199
    2. 'positions' → logprob: -2.578889846801758
    3. 'Positions' → logprob: -17.203889846801758
    4. '_positions' → logprob: -17.828889846801758
    5. '.positions' → logprob: -17.953889846801758
    6. 'pos' → logprob: -18.078889846801758
    7. ' posiciones' → logprob: -18.828889846801758
    8. ' locations' → logprob: -19.203889846801758
    9. 'position' → logprob: -19.203889846801758
    10. ' ' → logprob: -20.703889846801758

Token 102: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09810076653957367
    2. '<|end|>' → logprob: -2.4731006622314453
    3. '
' → logprob: -5.098100662231445
    4. '

' → logprob: -6.598100662231445
    5. '```' → logprob: -6.848100662231445
    6. '<|end|>' → logprob: -7.973100662231445
    7. ' def' → logprob: -9.223100662231445
    8. '[' → logprob: -10.723100662231445
    9. '``' → logprob: -11.223100662231445
    10. '  
' → logprob: -11.473100662231445

Token 103: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0007663871510885656
    2. '
' → logprob: -7.375766277313232
    3. '<|end|>' → logprob: -9.25076675415039
    4. '```' → logprob: -11.00076675415039
    5. '

' → logprob: -11.00076675415039
    6. ' def' → logprob: -12.50076675415039
    7. '  
' → logprob: -12.75076675415039
    8. '<|end|>' → logprob: -13.75076675415039
    9. 'ndef' → logprob: -14.62576675415039
    10. '    
' → logprob: -14.75076675415039

Token 104: ' match' (ID: 3981)
  Prédit: ' apply'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' apply' → logprob: -0.647363543510437
    2. ' is' → logprob: -2.2723636627197266
    3. ' get' → logprob: -2.2723636627197266
    4. ' check' → logprob: -2.8973636627197266
    5. ' find' → logprob: -3.1473636627197266
    6. ' rotate' → logprob: -3.5223636627197266
    7. ' generate' → logprob: -3.7723636627197266
    8. ' transform' → logprob: -3.8973636627197266
    9. ' count' → logprob: -4.147363662719727
    10. ' match' → logprob: -4.397363662719727

Token 105: '_at' (ID: 8254)
  Prédit: '_pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -0.00041005798266269267
    2. '_' → logprob: -9.500410079956055
    3. '_positions' → logprob: -9.500410079956055
    4. '(' → logprob: -9.625410079956055
    5. '_matrix' → logprob: -9.875410079956055
    6. '(pattern' → logprob: -10.375410079956055
    7. '_at' → logprob: -10.500410079956055
    8. '_pat' → logprob: -10.750410079956055
    9. '_patterns' → logprob: -11.625410079956055
    10. '_(' → logprob: -11.750410079956055

Token 106: '(w' (ID: 7420)
  Prédit: '(mat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(mat' → logprob: -0.27245044708251953
    2. '(' → logprob: -1.6474504470825195
    3. '_position' → logprob: -3.6474504470825195
    4. '_positions' → logprob: -4.7724504470825195
    5. '(matrix' → logprob: -5.3974504470825195
    6. ' (' → logprob: -5.5224504470825195
    7. '<|end|>' → logprob: -7.1474504470825195
    8. '_' → logprob: -7.3974504470825195
    9. '```' → logprob: -8.14745044708252
    10. '(m' → logprob: -8.64745044708252

Token 107: ',' (ID: 11)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -1.3330057859420776
    2. ',' → logprob: -1.5830057859420776
    3. 'indow' → logprob: -1.5830057859420776
    4. 'idth' → logprob: -2.583005905151367
    5. 'hole' → logprob: -2.583005905151367
    6. '   ' → logprob: -3.583005905151367
    7. 'ith' → logprob: -3.833005905151367
    8. 'matrix' → logprob: -4.208005905151367
    9. 'orld' → logprob: -4.333005905151367
    10. 'mat' → logprob: -4.583005905151367

Token 108: ' p' (ID: 275)
  Prédit: ' pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pattern' → logprob: -1.0637798309326172
    2. ' x' → logprob: -1.6887798309326172
    3. 'pattern' → logprob: -1.9387798309326172
    4. 'x' → logprob: -2.188779830932617
    5. ' i' → logprob: -2.563779830932617
    6. 'i' → logprob: -2.688779830932617
    7. ' pos' → logprob: -4.313779830932617
    8. ' p' → logprob: -4.438779830932617
    9. 'p' → logprob: -4.813779830932617
    10. ' pat' → logprob: -5.063779830932617

Token 109: '_positions' (ID: 93193)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015231950674206018
    2. ' ,' → logprob: -7.501523017883301
    3. ',pos' → logprob: -7.876523017883301
    4. ',i' → logprob: -8.1265230178833
    5. ',w' → logprob: -9.5015230178833
    6. ',x' → logprob: -9.7515230178833
    7. ',row' → logprob: -10.1265230178833
    8. '):' → logprob: -10.7515230178833
    9. ',p' → logprob: -10.8765230178833
    10. '   ' → logprob: -11.5015230178833

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004597439547069371
    2. ' ,' → logprob: -7.750459671020508
    3. '):' → logprob: -12.125459671020508
    4. ',p' → logprob: -12.375459671020508
    5. ',i' → logprob: -12.625459671020508
    6. '),' → logprob: -12.875459671020508
    7. ',x' → logprob: -13.250459671020508
    8. ',pos' → logprob: -13.250459671020508
    9. '   ' → logprob: -13.375459671020508
    10. ',w' → logprob: -13.625459671020508

Token 111: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.8197485208511353
    2. ' i' → logprob: -1.6947485208511353
    3. 'i' → logprob: -1.9447485208511353
    4. 'x' → logprob: -2.0697484016418457
    5. ' start' → logprob: -2.6947484016418457
    6. 'start' → logprob: -3.4447484016418457
    7. '   ' → logprob: -6.194748401641846
    8. ' pos' → logprob: -7.069748401641846
    9. ' ' → logprob: -7.069748401641846
    10. ' top' → logprob: -7.694748401641846

Token 112: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00046081675100140274
    2. ' ,' → logprob: -8.000460624694824
    3. ',y' → logprob: -9.250460624694824
    4. '):' → logprob: -11.375460624694824
    5. ',x' → logprob: -12.375460624694824
    6. ',j' → logprob: -12.875460624694824
    7. ',int' → logprob: -13.125460624694824
    8. ',p' → logprob: -13.125460624694824
    9. ')' → logprob: -14.250460624694824
    10. '‌,' → logprob: -14.500460624694824

Token 113: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.20143136382102966
    2. ' y' → logprob: -1.701431393623352
    3. '   ' → logprob: -11.826431274414062
    4. ' ' → logprob: -12.576431274414062
    5. '	y' → logprob: -12.951431274414062
    6. ')' → logprob: -13.076431274414062
    7. ')y' → logprob: -13.826431274414062
    8. '  ' → logprob: -14.076431274414062
    9. '    ' → logprob: -14.326431274414062
    10. '<|end|>' → logprob: -15.826431274414062

Token 114: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -3.416665640543215e-05
    2. ')' → logprob: -11.12503433227539
    3. ' ):' → logprob: -11.50003433227539
    4. ',' → logprob: -11.87503433227539
    5. '):
' → logprob: -13.50003433227539
    6. ':' → logprob: -14.62503433227539
    7. '   ' → logprob: -15.00003433227539
    8. ' ' → logprob: -16.75003433227539
    9. ')：' → logprob: -18.00003433227539
    10. '}:' → logprob: -18.37503433227539

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012901609763503075
    2. ' for' → logprob: -4.762901782989502
    3. ':' → logprob: -5.637901782989502
    4. 'for' → logprob: -8.137901306152344
    5. '```' → logprob: -9.012901306152344
    6. '    
' → logprob: -9.137901306152344
    7. ')' → logprob: -9.762901306152344
    8. ',' → logprob: -10.637901306152344
    9. ' 
' → logprob: -10.887901306152344
    10. ':
' → logprob: -11.262901306152344

Token 116: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6965426802635193
    2. '   ' → logprob: -1.571542739868164
    3. 'n' → logprob: -2.321542739868164
    4. ' n' → logprob: -2.821542739868164
    5. ' m' → logprob: -2.946542739868164
    6. 'm' → logprob: -3.071542739868164
    7. 'for' (adapté à ' for') → logprob: -3.321542739868164
    8. '    ' → logprob: -7.821542739868164
    9. 'w' → logprob: -8.446542739868164
    10. '  ' → logprob: -8.446542739868164

Token 117: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5872690081596375
    2. ' i' → logprob: -0.9622690081596375
    3. 'pi' → logprob: -4.087268829345703
    4. ' (' → logprob: -4.712268829345703
    5. 'px' → logprob: -4.837268829345703
    6. 'pos' → logprob: -5.087268829345703
    7. ' pi' → logprob: -5.212268829345703
    8. ' px' → logprob: -5.462268829345703
    9. ' pos' → logprob: -5.837268829345703
    10. '(i' → logprob: -6.337268829345703

Token 118: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09304530918598175
    2. ' ,' → logprob: -3.343045234680176
    3. ',val' → logprob: -3.343045234680176
    4. ',pos' → logprob: -4.968045234680176
    5. ',p' → logprob: -5.718045234680176
    6. ' in' → logprob: -6.093045234680176
    7. ',v' → logprob: -6.968045234680176
    8. 'in' → logprob: -7.093045234680176
    9. ',(' → logprob: -7.093045234680176
    10. ',row' → logprob: -7.218045234680176

Token 119: ',val' (ID: 126054)
  Prédit: ',val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',val' → logprob: -0.0021491888910531998
    2. ',value' → logprob: -6.7521491050720215
    3. ',' → logprob: -7.1271491050720215
    4. ',v' → logprob: -9.00214958190918
    5. ' ,' → logprob: -9.87714958190918
    6. ',var' → logprob: -15.62714958190918
    7. ',p' → logprob: -15.75214958190918
    8. ',w' → logprob: -16.25214958190918
    9. ',_' → logprob: -16.62714958190918
    10. ',k' → logprob: -16.62714958190918

Token 120: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011059491895139217
    2. 'in' → logprob: -4.511059284210205
    3. ' ' → logprob: -12.136059761047363
    4. ',' → logprob: -12.511059761047363
    5. '    ' → logprob: -14.261059761047363
    6. ' ,' → logprob: -14.761059761047363
    7. '	in' → logprob: -14.761059761047363
    8. '   ' → logprob: -15.011059761047363
    9. 's' → logprob: -15.511059761047363
    10. '  ' → logprob: -15.511059761047363

Token 121: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.10028570890426636
    2. 'p' → logprob: -2.350285768508911
    3. ' ' → logprob: -10.600285530090332
    4. 'enumer' → logprob: -11.225285530090332
    5. '<p' → logprob: -11.725285530090332
    6. ' enumerate' → logprob: -11.725285530090332
    7. '	p' → logprob: -12.350285530090332
    8. '   ' → logprob: -12.475285530090332
    9. '<|end|>' → logprob: -12.975285530090332
    10. '(p' → logprob: -12.975285530090332

Token 122: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.0001637300301808864
    2. 'positions' → logprob: -8.875164031982422
    3. ' _' → logprob: -11.375164031982422
    4. '_' → logprob: -11.750164031982422
    5. ' positions' → logprob: -13.250164031982422
    6. '```' → logprob: -14.375164031982422
    7. ')' → logprob: -14.500164031982422
    8. 'Positions' → logprob: -15.125164031982422
    9. ')_' → logprob: -15.125164031982422
    10. ' ' → logprob: -15.750164031982422

Token 123: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009298177435994148
    2. ':
' → logprob: -5.384298324584961
    3. ' in' → logprob: -5.509298324584961
    4. '<|end|>' → logprob: -8.384298324584961
    5. ',' → logprob: -9.134298324584961
    6. '):' → logprob: -9.634298324584961
    7. '   ' → logprob: -9.759298324584961
    8. ' :' → logprob: -10.509298324584961
    9. '):
' → logprob: -10.884298324584961
    10. '       ' → logprob: -10.884298324584961

Token 124: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21303819119930267
    2. '<|end|>' → logprob: -2.463038206100464
    3. '   ' → logprob: -3.213038206100464
    4. ' if' → logprob: -3.963038206100464
    5. ':
' → logprob: -4.088037967681885
    6. ':' → logprob: -4.338037967681885
    7. ' ' → logprob: -4.588037967681885
    8. ',' → logprob: -6.838037967681885
    9. '        
' → logprob: -6.963037967681885
    10. '    ' → logprob: -6.963037967681885

Token 125: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.23262609541416168
    2. '<|end|>' → logprob: -2.60762619972229
    3. ' 
' → logprob: -2.85762619972229
    4. ' ' → logprob: -2.98262619972229
    5. 'if' (adapté à ' if') → logprob: -4.107625961303711
    6. '       ' → logprob: -5.357625961303711
    7. '
' → logprob: -6.482625961303711
    8. '        ' → logprob: -7.482625961303711
    9. ',' → logprob: -7.732625961303711
    10. '           ' → logprob: -7.857625961303711

Token 126: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.6164739727973938
    2. ' y' → logprob: -1.116473913192749
    3. ' x' → logprob: -2.741473913192749
    4. 'w' → logprob: -2.991473913192749
    5. 'y' → logprob: -4.991474151611328
    6. 'x' → logprob: -4.991474151611328
    7. ' not' → logprob: -5.866474151611328
    8. ' ' → logprob: -7.241474151611328
    9. '   ' → logprob: -7.616474151611328
    10. ' (' → logprob: -8.491474151611328

Token 127: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.03059447929263115
    2. '[y' → logprob: -3.53059458732605
    3. 'x' → logprob: -7.155594348907471
    4. '   ' → logprob: -11.155594825744629
    5. '[i' → logprob: -11.530594825744629
    6. '[' → logprob: -11.530594825744629
    7. 'y' → logprob: -11.655594825744629
    8. '(x' → logprob: -12.405594825744629
    9. ' x' → logprob: -12.530594825744629
    10. '<x' → logprob: -13.030594825744629

Token 128: '+i' (ID: 49691)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7095160484313965
    2. '+i' → logprob: -0.9595160484313965
    3. ' +' → logprob: -2.0845160484313965
    4. '+j' → logprob: -8.084516525268555
    5. '+x' → logprob: -8.459516525268555
    6. '+y' → logprob: -9.959516525268555
    7. '+
' → logprob: -10.834516525268555
    8. '[' → logprob: -11.209516525268555
    9. '][' → logprob: -11.209516525268555
    10. '+k' → logprob: -11.334516525268555

Token 129: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.038556624203920364
    2. '+y' → logprob: -3.5385565757751465
    3. ' +' → logprob: -5.2885565757751465
    4. '[y' → logprob: -6.0385565757751465
    5. ' ][' → logprob: -7.4135565757751465
    6. '+j' → logprob: -8.288557052612305
    7. '+' → logprob: -8.413557052612305
    8. '[j' → logprob: -9.788557052612305
    9. ']' → logprob: -9.913557052612305
    10. 'y' → logprob: -10.163557052612305

Token 130: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0007102862582542002
    2. ' y' → logprob: -7.250710487365723
    3. 'yj' → logprob: -16.000709533691406
    4. ''y' → logprob: -16.375709533691406
    5. '	y' → logprob: -17.000709533691406
    6. '(y' → logprob: -17.375709533691406
    7. '
' → logprob: -17.500709533691406
    8. '   ' → logprob: -17.625709533691406
    9. ',y' → logprob: -18.000709533691406
    10. 'j' → logprob: -18.000709533691406

Token 131: '+j' (ID: 71365)
  Prédit: '+j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+j' → logprob: -0.005959733389317989
    2. '+' → logprob: -5.380959510803223
    3. 'j' → logprob: -7.255959510803223
    4. ' +' → logprob: -7.380959510803223
    5. ']' → logprob: -12.380959510803223
    6. '[j' → logprob: -13.380959510803223
    7. '][' → logprob: -13.630959510803223
    8. '+]' → logprob: -14.255959510803223
    9. ']+' → logprob: -14.505959510803223
    10. ' j' → logprob: -15.255959510803223

Token 132: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11354532837867737
    2. ' ]' → logprob: -2.4885454177856445
    3. ']!=' → logprob: -3.8635454177856445
    4. ' !=' → logprob: -5.8635454177856445
    5. '!=' → logprob: -7.7385454177856445
    6. ' ' → logprob: -11.738545417785645
    7. '']' → logprob: -11.988545417785645
    8. '    ' → logprob: -12.613545417785645
    9. ')!=' → logprob: -12.988545417785645
    10. '`]' → logprob: -12.988545417785645

Token 133: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5237430334091187
    2. '!=' → logprob: -0.8987430334091187
    3. ']!=' → logprob: -7.898743152618408
    4. ')!=' → logprob: -8.77374267578125
    5. '()!=' → logprob: -9.77374267578125
    6. ' ' → logprob: -11.52374267578125
    7. ')' → logprob: -12.14874267578125
    8. ']' → logprob: -12.27374267578125
    9. '!=-' → logprob: -12.27374267578125
    10. '!==' → logprob: -12.64874267578125

Token 134: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.575939953327179
    2. 'val' → logprob: -0.825939953327179
    3. ' ' → logprob: -15.575940132141113
    4. '	val' → logprob: -15.700940132141113
    5. '(val' → logprob: -16.075939178466797
    6. '[val' → logprob: -16.450939178466797
    7. '.val' → logprob: -17.950939178466797
    8. ' ' → logprob: -18.700939178466797
    9. '_val' → logprob: -19.825939178466797
    10. ',val' → logprob: -20.075939178466797

Token 135: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08646932989358902
    2. ':
' → logprob: -2.5864694118499756
    3. ':return' → logprob: -5.2114691734313965
    4. '           ' → logprob: -6.3364691734313965
    5. '       ' → logprob: -8.211469650268555
    6. '               ' → logprob: -11.086469650268555
    7. ' :' → logprob: -11.336469650268555
    8. ' :
' → logprob: -12.086469650268555
    9. ' return' → logprob: -12.836469650268555
    10. ':

' → logprob: -12.836469650268555

Token 136: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1490527093410492
    2. '               ' → logprob: -2.024052619934082
    3. ':' → logprob: -5.899052619934082
    4. ' return' → logprob: -6.649052619934082
    5. ':return' → logprob: -7.149052619934082
    6. '       ' → logprob: -7.524052619934082
    7. ':
' → logprob: -8.149052619934082
    8. '            ' → logprob: -9.024052619934082
    9. '          ' → logprob: -9.024052619934082
    10. 'return' → logprob: -9.024052619934082

Token 137: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.02654527686536312
    2. 'return' (adapté à ' return') → logprob: -3.651545286178589
    3. '
' → logprob: -9.151545524597168
    4. ' 
' → logprob: -10.026545524597168
    5. '               ' → logprob: -10.401545524597168
    6. '       ' → logprob: -10.651545524597168
    7. '           ' → logprob: -10.776545524597168
    8. ':return' → logprob: -12.151545524597168
    9. ' ' → logprob: -12.401545524597168
    10. '	return' → logprob: -12.651545524597168

Token 138: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.02324547804892063
    2. ' False' → logprob: -3.7732455730438232
    3. '(False' → logprob: -18.273244857788086
    4. 'None' → logprob: -20.398244857788086
    5. '=False' → logprob: -20.523244857788086
    6. '_false' → logprob: -21.648244857788086
    7. '.False' → logprob: -21.898244857788086
    8. 'false' → logprob: -22.273244857788086
    9. ' ' → logprob: -22.648244857788086
    10. '
' → logprob: -22.773244857788086

Token 139: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.251605749130249
    2. '   ' → logprob: -2.251605749130249
    3. ' 
' → logprob: -2.751605749130249
    4. '    
' → logprob: -4.001605987548828
    5. ' return' → logprob: -4.251605987548828
    6. '  
' → logprob: -4.501605987548828
    7. '<|end|>' → logprob: -5.751605987548828
    8. '   
' → logprob: -6.126605987548828
    9. 'return' → logprob: -6.501605987548828
    10. '        
' → logprob: -8.001605987548828

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0910676047205925
    2. ' return' → logprob: -2.5910675525665283
    3. '
' → logprob: -4.716067790985107
    4. 'return' → logprob: -6.216067790985107
    5. '	return' → logprob: -7.841067790985107
    6. ' ' → logprob: -8.84106731414795
    7. '    
' → logprob: -8.96606731414795
    8. ' 
' → logprob: -9.09106731414795
    9. '  ' → logprob: -9.34106731414795
    10. ' None' → logprob: -10.09106731414795

Token 141: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.044998686760663986
    2. ' return' → logprob: -3.2949986457824707
    3. '   ' → logprob: -5.044998645782471
    4. '
' → logprob: -8.044999122619629
    5. ' ' → logprob: -9.294999122619629
    6. 'True' → logprob: -10.169999122619629
    7. '	return' → logprob: -11.169999122619629
    8. 'Return' → logprob: -12.169999122619629
    9. 'eturn' → logprob: -12.419999122619629
    10. '```' → logprob: -12.669999122619629

Token 142: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.3132616877555847
    2. 'True' → logprob: -1.3132617473602295
    3. '(True' → logprob: -18.938261032104492
    4. '=True' → logprob: -20.313261032104492
    5. ' ' → logprob: -20.313261032104492
    6. ' ' → logprob: -20.688261032104492
    7. '   ' → logprob: -22.063261032104492
    8. ' true' → logprob: -23.188261032104492
    9. '.True' → logprob: -23.188261032104492
    10. 'False' → logprob: -24.188261032104492

Token 143: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2657661736011505
    2. '
' → logprob: -1.8907661437988281
    3. '<|end|>' → logprob: -3.015766143798828
    4. ' 
' → logprob: -3.890766143798828
    5. ' def' → logprob: -5.515766143798828
    6. '  
' → logprob: -6.140766143798828
    7. ' 

' → logprob: -6.265766143798828
    8. '

' → logprob: -6.890766143798828
    9. '\n' → logprob: -6.890766143798828
    10. '#' → logprob: -7.015766143798828

Token 144: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.747814349073451e-05
    2. '
' → logprob: -11.000017166137695
    3. ' def' → logprob: -15.625017166137695
    4. '  
' → logprob: -15.750017166137695
    5. 'ndef' → logprob: -16.125017166137695
    6. '    
' → logprob: -16.250017166137695
    7. '#' → logprob: -16.250017166137695
    8. '<|end|>' → logprob: -17.000017166137695
    9. '```' → logprob: -17.125017166137695
    10. ' 
' → logprob: -17.500017166137695

Token 145: ' main' (ID: 2758)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.15486305952072144
    2. ' can' → logprob: -2.654863119125366
    3. ' search' → logprob: -3.654863119125366
    4. ' check' → logprob: -4.029862880706787
    5. ' count' → logprob: -4.279862880706787
    6. ' match' → logprob: -4.529862880706787
    7. ' pattern' → logprob: -6.779862880706787
    8. ' matches' → logprob: -7.279862880706787
    9. ' def' → logprob: -7.529862880706787
    10. ' is' → logprob: -7.779862880706787

Token 146: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -4.8590300139039755e-05
    2. '():
' → logprob: -10.750048637390137
    3. ' ():' → logprob: -10.750048637390137
    4. '(' → logprob: -12.625048637390137
    5. '()' → logprob: -13.875048637390137
    6. '_' → logprob: -14.000048637390137
    7. '():
' → logprob: -15.625048637390137
    8. '(:' → logprob: -15.750048637390137
    9. '(":' → logprob: -16.25004768371582
    10. '_:' → logprob: -16.37504768371582

Token 147: '   ' (ID: 271)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0855703204870224
    2. 'n' → logprob: -3.4605703353881836
    3. ' w' → logprob: -4.085570335388184
    4. '   ' → logprob: -4.085570335388184
    5. ' t' → logprob: -4.210570335388184
    6. ' s' → logprob: -7.835570335388184
    7. ' import' → logprob: -7.835570335388184
    8. ' T' → logprob: -8.210570335388184
    9. 'w' → logprob: -8.335570335388184
    10. ' W' → logprob: -8.835570335388184

Token 148: ' import' (ID: 1588)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.31880033016204834
    2. 'n' → logprob: -1.4438003301620483
    3. ' h' → logprob: -4.443800449371338
    4. ' N' → logprob: -5.068800449371338
    5. 'N' → logprob: -5.193800449371338
    6. 'h' → logprob: -5.818800449371338
    7. ' w' → logprob: -6.068800449371338
    8. ' H' → logprob: -6.193800449371338
    9. ' import' → logprob: -6.693800449371338
    10. 'w' → logprob: -6.943800449371338

Token 149: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -6.988221684878226e-06
    2. 'sys' → logprob: -12.875006675720215
    3. ' numpy' → logprob: -13.625006675720215
    4. ' math' → logprob: -13.875006675720215
    5. ' itertools' → logprob: -14.250006675720215
    6. '=sys' → logprob: -14.375006675720215
    7. ' ' → logprob: -14.625006675720215
    8. ' random' → logprob: -15.500006675720215
    9. ' copy' → logprob: -15.875006675720215
    10. '	sys' → logprob: -16.25000762939453

Token 150: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06587705761194229
    2. '   ' → logprob: -2.9408769607543945
    3. '    
' → logprob: -4.6908769607543945
    4. '<|end|>' → logprob: -8.190876960754395
    5. '.readline' → logprob: -8.440876960754395
    6. 'input' → logprob: -8.565876960754395
    7. '	
' → logprob: -8.690876960754395
    8. 'data' → logprob: -9.065876960754395
    9. 'w' → logprob: -9.440876960754395
    10. 'n' → logprob: -9.565876960754395

Token 151: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10069528967142105
    2. '   ' → logprob: -3.1006953716278076
    3. '    
' → logprob: -4.2256951332092285
    4. 'input' → logprob: -4.2256951332092285
    5. 'data' → logprob: -4.4756951332092285
    6. ' 
' → logprob: -5.8506951332092285
    7. 'n' → logprob: -5.8506951332092285
    8. ' input' → logprob: -5.9756951332092285
    9. ' data' → logprob: -8.100695610046387
    10. '     
' → logprob: -8.100695610046387

Token 152: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6949382424354553
    2. 'input' (adapté à ' input') → logprob: -1.8199381828308105
    3. '   ' → logprob: -2.1949381828308105
    4. 'n' → logprob: -2.3199381828308105
    5. 'data' → logprob: -2.5699381828308105
    6. ' data' → logprob: -3.8199381828308105
    7. ' n' → logprob: -3.9449381828308105
    8. ' lines' → logprob: -4.8199381828308105
    9. '
' → logprob: -6.9449381828308105
    10. 'w' → logprob: -7.6949381828308105

Token 153: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0725262388586998
    2. ' =' → logprob: -3.197526216506958
    3. '_data' → logprob: -3.947526216506958
    4. '=' → logprob: -5.322526454925537
    5. '().' → logprob: -6.197526454925537
    6. '_lines' → logprob: -6.947526454925537
    7. '.' → logprob: -7.572526454925537
    8. '_line' → logprob: -7.822526454925537
    9. '_' → logprob: -8.322525978088379
    10. 'data' → logprob: -8.572525978088379

Token 154: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.16022484004497528
    2. 'sys' → logprob: -1.9102247953414917
    3. '=sys' → logprob: -14.660224914550781
    4. '	sys' → logprob: -15.535224914550781
    5. '(sys' → logprob: -16.91022491455078
    6. 'input' → logprob: -17.78522491455078
    7. ' input' → logprob: -18.03522491455078
    8. ' ' → logprob: -18.03522491455078
    9. ' lambda' → logprob: -20.28522491455078
    10. 'lambda' → logprob: -21.03522491455078

Token 155: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0036923587322235107
    2. '.' → logprob: -6.003692150115967
    3. '.readline' → logprob: -7.503692150115967
    4. '.stdout' → logprob: -8.253692626953125
    5. ' .' → logprob: -8.378692626953125
    6. 'stdin' → logprob: -9.628692626953125
    7. 't' → logprob: -10.128692626953125
    8. '.input' → logprob: -11.378692626953125
    9. '.std' → logprob: -11.628692626953125
    10. 'ut' → logprob: -11.628692626953125

Token 156: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00011534435179783031
    2. '.read' → logprob: -9.250115394592285
    3. '.readlines' → logprob: -11.875115394592285
    4. '.' → logprob: -11.875115394592285
    5. '.buffer' → logprob: -12.375115394592285
    6. 'read' → logprob: -14.625115394592285
    7. '.stdin' → logprob: -15.375115394592285
    8. ' .' → logprob: -15.625115394592285
    9. '.reader' → logprob: -16.12511444091797
    10. 'buffer' → logprob: -16.37511444091797

Token 157: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2785577178001404
    2. '()
' → logprob: -1.6535577774047852
    3. '
' → logprob: -3.028557777404785
    4. '   ' → logprob: -6.028557777404785
    5. '()

' → logprob: -7.653557777404785
    6. '    
' → logprob: -8.778557777404785
    7. '().' → logprob: -9.028557777404785
    8. ' 
' → logprob: -9.903557777404785
    9. '  
' → logprob: -10.278557777404785
    10. '(' → logprob: -10.403557777404785

Token 158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.574378490447998
    2. 'n' → logprob: -0.949378490447998
    3. ' n' → logprob: -3.324378490447998
    4. 't' → logprob: -5.199378490447998
    5. '
' → logprob: -5.699378490447998
    6. ' t' → logprob: -5.699378490447998
    7. ' T' → logprob: -7.449378490447998
    8. '    
' → logprob: -7.824378490447998
    9. 'm' → logprob: -8.574378967285156
    10. 'T' → logprob: -9.199378967285156

Token 159: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5589298009872437
    2. 'N' → logprob: -1.5589298009872437
    3. 'h' → logprob: -2.433929920196533
    4. 'H' → logprob: -2.433929920196533
    5. 't' → logprob: -3.683929920196533
    6. 'T' → logprob: -5.058929920196533
    7. 'w' → logprob: -5.683929920196533
    8. 'm' → logprob: -6.058929920196533
    9. 'r' → logprob: -6.933929920196533
    10. 'M' → logprob: -7.308929920196533

Token 160: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.0031931623816490173
    2. 'True' → logprob: -5.753193378448486
    3. '(True' → logprob: -11.128192901611328
    4. ' ' → logprob: -14.253192901611328
    5. '=True' → logprob: -16.378192901611328
    6. ' Tru' → logprob: -17.128192901611328
    7. '1' → logprob: -17.378192901611328
    8. '  ' → logprob: -18.128192901611328
    9. '   ' → logprob: -18.503192901611328
    10. '_true' → logprob: -19.253192901611328

Token 161: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0034766513854265213
    2. ':
' → logprob: -5.878476619720459
    3. '       ' → logprob: -8.503477096557617
    4. '():' → logprob: -8.503477096557617
    5. ',' → logprob: -8.628477096557617
    6. '   ' → logprob: -10.378477096557617
    7. ' :' → logprob: -11.253477096557617
    8. '):' → logprob: -11.253477096557617
    9. '():
' → logprob: -11.503477096557617
    10. ':

' → logprob: -12.753477096557617

Token 162: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005327435676008463
    2. '   ' → logprob: -5.380327224731445
    3. ' line' → logprob: -7.630327224731445
    4. '    ' → logprob: -9.005327224731445
    5. '      ' → logprob: -10.505327224731445
    6. ' try' → logprob: -11.130327224731445
    7. '     ' → logprob: -11.505327224731445
    8. '           ' → logprob: -11.630327224731445
    9. ',' → logprob: -12.005327224731445
    10. '	   ' → logprob: -12.005327224731445

Token 163: ' line' (ID: 2543)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6551210284233093
    2. 'N' → logprob: -1.655121088027954
    3. 'H' → logprob: -2.780121088027954
    4. 'h' → logprob: -2.905121088027954
    5. '   ' → logprob: -3.155121088027954
    6. ' n' → logprob: -3.280121088027954
    7. ' line' → logprob: -3.780121088027954
    8. 'line' (adapté à ' line') → logprob: -4.405120849609375
    9. 'w' → logprob: -4.530120849609375
    10. 'W' → logprob: -4.655120849609375

Token 164: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38693711161613464
    2. '=' → logprob: -1.136937141418457
    3. '=line' → logprob: -9.636937141418457
    4. '=input' → logprob: -14.261937141418457
    5. ' ' → logprob: -16.38693618774414
    6. 's' → logprob: -17.13693618774414
    7. '＝' → logprob: -17.76193618774414
    8. 'line' → logprob: -18.26193618774414
    9. '.strip' → logprob: -18.26193618774414
    10. '=

' → logprob: -18.38693618774414

Token 165: ' ''
' (ID: 25366)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.47407856583595276
    2. ' input' → logprob: -0.9740785360336304
    3. 'sys' → logprob: -13.724078178405762
    4. ' sys' → logprob: -14.849078178405762
    5. ' ' → logprob: -17.224079132080078
    6. '(input' → logprob: -17.849079132080078
    7. '=input' → logprob: -18.724079132080078
    8. '_input' → logprob: -18.974079132080078
    9. '   ' → logprob: -18.974079132080078
    10. ' 
' → logprob: -19.224079132080078

Token 166: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7050876617431641
    2. ' =' → logprob: -1.080087661743164
    3. '=' → logprob: -2.080087661743164
    4. '.strip' → logprob: -4.330087661743164
    5. '=line' → logprob: -4.330087661743164
    6. '.readline' → logprob: -5.205087661743164
    7. 'line' → logprob: -5.705087661743164
    8. ' line' → logprob: -5.955087661743164
    9. 'input' → logprob: -7.455087661743164
    10. '   ' → logprob: -7.705087661743164

Token 167: ' while' (ID: 2049)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.06806077808141708
    2. ' line' → logprob: -2.818060874938965
    3. 'while' (adapté à ' while') → logprob: -5.943060874938965
    4. 'if' → logprob: -6.068060874938965
    5. '       ' → logprob: -7.693060874938965
    6. ' while' → logprob: -7.943060874938965
    7. ' if' → logprob: -8.318060874938965
    8. '
' → logprob: -9.818060874938965
    9. 'input' → logprob: -12.568060874938965
    10. 'try' → logprob: -12.693060874938965

Token 168: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.7318136096000671
    2. ' line' → logprob: -0.7318136096000671
    3. ' not' → logprob: -3.356813669204712
    4. 'not' → logprob: -6.231813430786133
    5. ' True' → logprob: -7.106813430786133
    6. 'True' → logprob: -8.481813430786133
    7. '(line' → logprob: -10.106813430786133
    8. 'len' → logprob: -10.356813430786133
    9. ' len' → logprob: -11.481813430786133
    10. '	line' → logprob: -13.231813430786133

Token 169: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.7740346789360046
    2. '==' → logprob: -1.0240347385406494
    3. ' ==' → logprob: -1.7740347385406494
    4. '.' → logprob: -5.52403450012207
    5. '=' → logprob: -6.02403450012207
    6. ' =' → logprob: -6.02403450012207
    7. ' :=' → logprob: -7.52403450012207
    8. ':=' → logprob: -7.52403450012207
    9. 'strip' → logprob: -10.14903450012207
    10. ' .' → logprob: -10.52403450012207

Token 170: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06697916239500046
    2. '()==' → logprob: -2.816979169845581
    3. '==' → logprob: -5.316978931427002
    4. ' ==' → logprob: -9.31697940826416
    5. '=' → logprob: -14.81697940826416
    6. '```' → logprob: -14.94197940826416
    7. '()<' → logprob: -15.56697940826416
    8. ' ()' → logprob: -15.69197940826416
    9. '()=="' → logprob: -15.69197940826416
    10. '()!=' → logprob: -16.191978454589844

Token 171: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.005075790919363499
    2. '()==' → logprob: -5.380075931549072
    3. ' ==' → logprob: -7.880075931549072
    4. '()' → logprob: -9.505075454711914
    5. '=' → logprob: -13.630075454711914
    6. '===' → logprob: -14.005075454711914
    7. '==
' → logprob: -15.130075454711914
    8. '=='' → logprob: -15.255075454711914
    9. ')==' → logprob: -16.380075454711914
    10. ']==' → logprob: -16.505075454711914

Token 172: ' '':
' (ID: 125614)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.12694060802459717
    2. '''' → logprob: -2.1269407272338867
    3. '"":' → logprob: -11.626940727233887
    4. ''',' → logprob: -14.126940727233887
    5. '':' → logprob: -14.251940727233887
    6. ''*' → logprob: -14.376940727233887
    7. '''
' → logprob: -14.751940727233887
    8. '""' → logprob: -15.251940727233887
    9. '''.' → logprob: -15.251940727233887
    10. ''''' → logprob: -15.501940727233887

Token 173: '           ' (ID: 352)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8699032068252563
    2. '       ' → logprob: -1.4949032068252563
    3. ' line' → logprob: -1.9949032068252563
    4. ':' → logprob: -2.244903087615967
    5. '           ' → logprob: -2.619903087615967
    6. 'line' → logprob: -4.494903087615967
    7. '():
' → logprob: -4.619903087615967
    8. ' =' → logprob: -5.244903087615967
    9. '=' → logprob: -5.369903087615967
    10. ' and' → logprob: -6.119903087615967

Token 174: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.04338691011071205
    2. ' line' → logprob: -3.168386936187744
    3. '           ' → logprob: -8.168386459350586
    4. 'l' → logprob: -9.418386459350586
    5. '       ' → logprob: -11.793386459350586
    6. ' l' → logprob: -12.418386459350586
    7. '	line' → logprob: -12.793386459350586
    8. 'n' → logprob: -13.293386459350586
    9. '   ' → logprob: -13.293386459350586
    10. '(line' → logprob: -13.293386459350586

Token 175: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326353549957275
    2. '=' → logprob: -1.3132635354995728
    3. '=line' → logprob: -13.313263893127441
    4. '=input' → logprob: -17.063262939453125
    5. '=sys' → logprob: -17.688262939453125
    6. '＝' → logprob: -17.938262939453125
    7. '+=' → logprob: -18.063262939453125
    8. ' ' → logprob: -18.313262939453125
    9. 'line' → logprob: -18.813262939453125
    10. '.=' → logprob: -19.188262939453125

Token 176: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3148178458213806
    2. ' input' → logprob: -1.3148179054260254
    3. 'sys' → logprob: -6.814817905426025
    4. ' sys' → logprob: -7.689817905426025
    5. '=input' → logprob: -17.564817428588867
    6. 'stdin' → logprob: -17.814817428588867
    7. 'import' → logprob: -17.939817428588867
    8. ' ' → logprob: -18.439817428588867
    9. '(input' → logprob: -18.564817428588867
    10. '	input' → logprob: -18.564817428588867

Token 177: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00011558275582501665
    2. '()
' → logprob: -9.250115394592285
    3. '().' → logprob: -12.125115394592285
    4. '())' → logprob: -12.250115394592285
    5. '()

' → logprob: -12.750115394592285
    6. '(' → logprob: -12.750115394592285
    7. '()`' → logprob: -14.125115394592285
    8. '()]' → logprob: -14.750115394592285
    9. '>()' → logprob: -15.000115394592285
    10. ']()' → logprob: -15.375115394592285

Token 178: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05493125692009926
    2. '           ' → logprob: -2.929931163787842
    3. '<|end|>' → logprob: -10.429931640625
    4. '
' → logprob: -11.929931640625
    5. '<|end|>' → logprob: -12.179931640625
    6. ' if' → logprob: -12.804931640625
    7. ',' → logprob: -13.054931640625
    8. '   ' → logprob: -14.304931640625
    9. '	   ' → logprob: -15.367431640625
    10. '        
' → logprob: -15.492431640625

Token 179: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6359886527061462
    2. 'if' (adapté à ' if') → logprob: -1.010988712310791
    3. '           ' → logprob: -2.260988712310791
    4. '       ' → logprob: -6.010988712310791
    5. '
' → logprob: -11.010988235473633
    6. 'If' → logprob: -12.885988235473633
    7. '            
' → logprob: -13.635988235473633
    8. '```' → logprob: -13.760988235473633
    9. '<|end|>' → logprob: -13.885988235473633
    10. ',' → logprob: -14.260988235473633

Token 180: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0880577564239502
    2. ' line' → logprob: -2.83805775642395
    3. 'line' → logprob: -4.088057518005371
    4. 'not' → logprob: -4.713057518005371
    5. '	line' → logprob: -13.838057518005371
    6. ' ' → logprob: -13.838057518005371
    7. '#line' → logprob: -14.588057518005371
    8. '(line' → logprob: -14.713057518005371
    9. '	not' → logprob: -15.213057518005371
    10. '[line' → logprob: -16.213058471679688

Token 181: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.10020667314529419
    2. ' line' → logprob: -2.3502066135406494
    3. '	line' → logprob: -17.47520637512207
    4. '(line' → logprob: -18.35020637512207
    5. '#line' → logprob: -18.60020637512207
    6. '[line' → logprob: -19.72520637512207
    7. ' ' → logprob: -19.97520637512207
    8. '=line' → logprob: -20.47520637512207
    9. '_line' → logprob: -21.22520637512207
    10. '   ' → logprob: -21.72520637512207

Token 182: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.576241672039032
    2. ':
' → logprob: -0.826241672039032
    3. ':return' → logprob: -8.826241493225098
    4. '):
' → logprob: -10.076241493225098
    5. '<|end|>' → logprob: -10.201241493225098
    6. ' :' → logprob: -10.701241493225098
    7. '.strip' → logprob: -11.576241493225098
    8. ' :
' → logprob: -12.201241493225098
    9. '.startswith' → logprob: -12.576241493225098
    10. '<|end|>' → logprob: -12.576241493225098

Token 183: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00071695790393278
    2. ' return' → logprob: -7.8757171630859375
    3. 'return' → logprob: -8.250717163085938
    4. '
' → logprob: -10.000717163085938
    5. '                   ' → logprob: -11.625717163085938
    6. '           ' → logprob: -12.125717163085938
    7. ':return' → logprob: -12.125717163085938
    8. '                       ' → logprob: -12.250717163085938
    9. ',' → logprob: -13.375717163085938
    10. '                
' → logprob: -14.000717163085938

Token 184: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06206728518009186
    2. ' return' → logprob: -2.8120672702789307
    3. '               ' → logprob: -9.562067031860352
    4. '                   ' → logprob: -10.812067031860352
    5. '
' → logprob: -11.937067031860352
    6. '           ' → logprob: -13.937067031860352
    7. '                       ' → logprob: -14.312067031860352
    8. 'break' → logprob: -14.687067031860352
    9. 'exit' → logprob: -15.437067031860352
    10. 'print' → logprob: -15.687067031860352

Token 185: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033084198366850615
    2. '<|end|>' → logprob: -5.753308296203613
    3. '        
' → logprob: -9.753308296203613
    4. '
' → logprob: -10.003308296203613
    5. '<|end|>' → logprob: -11.503308296203613
    6. ',' → logprob: -11.753308296203613
    7. '      ' → logprob: -13.503308296203613
    8. '   ' → logprob: -14.128308296203613
    9. ' ' → logprob: -14.315808296203613
    10. '        

' → logprob: -14.315808296203613

Token 186: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000518482003826648
    2. '<|end|>' → logprob: -7.625518321990967
    3. '        
' → logprob: -11.250518798828125
    4. '
' → logprob: -12.375518798828125
    5. '<|end|>' → logprob: -12.500518798828125
    6. '           ' → logprob: -13.375518798828125
    7. ',' → logprob: -13.625518798828125
    8. '      ' → logprob: -13.750518798828125
    9. '#' → logprob: -14.250518798828125
    10. '        

' → logprob: -14.375518798828125

Token 187: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.3171684145927429
    2. '       ' → logprob: -2.0671684741973877
    3. ' n' → logprob: -2.3171684741973877
    4. 'h' → logprob: -3.8171684741973877
    5. 'N' → logprob: -5.192168235778809
    6. 'm' → logprob: -5.442168235778809
    7. ' h' → logprob: -5.692168235778809
    8. 'H' → logprob: -5.817168235778809
    9. ' H' → logprob: -5.817168235778809
    10. 'w' → logprob: -6.692168235778809

Token 188: ',m' (ID: 26648)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1374043971300125
    2. ',k' → logprob: -2.887404441833496
    3. ' =' → logprob: -3.137404441833496
    4. '=' → logprob: -3.887404441833496
    5. ',s' → logprob: -5.762404441833496
    6. ',m' → logprob: -6.137404441833496
    7. ',q' → logprob: -6.637404441833496
    8. ',c' → logprob: -7.512404441833496
    9. ',p' → logprob: -7.637404441833496
    10. ',d' → logprob: -8.512404441833496

Token 189: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16026952862739563
    2. ' =' → logprob: -1.9102694988250732
    3. '=line' → logprob: -10.035269737243652
    4. ' ' → logprob: -14.910269737243652
    5. '=n' → logprob: -15.285269737243652
    6. '=input' → logprob: -15.535269737243652
    7. ',' → logprob: -15.535269737243652
    8. '=int' → logprob: -15.535269737243652
    9. '=list' → logprob: -16.160268783569336
    10. ')' → logprob: -16.910268783569336

Token 190: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.12705367803573608
    2. 'map' → logprob: -2.127053737640381
    3. ' line' → logprob: -9.127053260803223
    4. 'line' → logprob: -11.002053260803223
    5. ' ' → logprob: -16.00205421447754
    6. 'list' → logprob: -17.00205421447754
    7. '	map' → logprob: -17.25205421447754
    8. '   ' → logprob: -17.62705421447754
    9. '(map' → logprob: -17.75205421447754
    10. ' list' → logprob: -17.75205421447754

Token 191: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0010992534225806594
    2. '(str' → logprob: -7.001099109649658
    3. '(' → logprob: -8.626099586486816
    4. '(lambda' → logprob: -12.376099586486816
    5. '(input' → logprob: -13.251099586486816
    6. 'int' → logprob: -13.751099586486816
    7. '[int' → logprob: -14.376099586486816
    8. '(line' → logprob: -15.126099586486816
    9. '(list' → logprob: -15.876099586486816
    10. '(in' → logprob: -16.3760986328125

Token 192: ',line' (ID: 171132)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.6062942147254944
    2. ',line' → logprob: -1.1062941551208496
    3. ',' → logprob: -2.1062941551208496
    4. 'line' → logprob: -6.35629415512085
    5. ',input' → logprob: -8.481294631958008
    6. '(' → logprob: -9.106294631958008
    7. '[line' → logprob: -10.481294631958008
    8. 'input' → logprob: -11.106294631958008
    9. '#line' → logprob: -11.106294631958008
    10. '(input' → logprob: -11.106294631958008

Token 193: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -1.0235600471496582
    2. '.strip' → logprob: -1.0235600471496582
    3. '().' → logprob: -1.2735600471496582
    4. 'split' → logprob: -7.398560047149658
    5. '.' → logprob: -7.523560047149658
    6. ' .' → logprob: -8.7735595703125
    7. '.readline' → logprob: -9.1485595703125
    8. 'strip' → logprob: -9.1485595703125
    9. '.rstrip' → logprob: -12.2735595703125
    10. '()' → logprob: -12.5235595703125

Token 194: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.005567059852182865
    2. '()' → logprob: -5.7555670738220215
    3. ')' → logprob: -6.1305670738220215
    4. '()))' → logprob: -8.755566596984863
    5. '(' → logprob: -10.380566596984863
    6. '))' → logprob: -12.005566596984863
    7. '())
' → logprob: -12.255566596984863
    8. '(','' → logprob: -12.255566596984863
    9. '('' → logprob: -12.755566596984863
    10. '(),' → logprob: -13.380566596984863

Token 195: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04719933867454529
    2. ' if' → logprob: -3.797199249267578
    3. ' matrix' → logprob: -4.422199249267578
    4. ' grid' → logprob: -5.047199249267578
    5. ' mat' → logprob: -6.297199249267578
    6. 'matrix' → logprob: -7.172199249267578
    7. ' w' → logprob: -7.422199249267578
    8. 'if' → logprob: -7.672199249267578
    9. ' matrices' → logprob: -7.797199249267578
    10. 'grid' → logprob: -7.922199249267578

Token 196: ' if' (ID: 538)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.07552753388881683
    2. 'if' (adapté à ' if') → logprob: -2.9505274295806885
    3. 'W' → logprob: -5.075527667999268
    4. 'world' → logprob: -5.700527667999268
    5. 'wall' → logprob: -5.700527667999268
    6. 'word' → logprob: -6.075527667999268
    7. 'window' → logprob: -6.700527667999268
    8. 'words' → logprob: -7.075527667999268
    9. 'pattern' → logprob: -7.075527667999268
    10. 'grid' → logprob: -7.825527667999268

Token 197: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.474077969789505
    2. ' n' → logprob: -0.9740779399871826
    3. '(n' → logprob: -14.099078178405762
    4. '	n' → logprob: -16.224077224731445
    5. ' (' → logprob: -16.599077224731445
    6. '(' → logprob: -16.724077224731445
    7. '[n' → logprob: -18.099077224731445
    8. ' not' → logprob: -18.474077224731445
    9. ' ' → logprob: -18.474077224731445
    10. ' ' → logprob: -18.599077224731445

Token 198: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.04302910342812538
    2. ' ==' → logprob: -3.1680290699005127
    3. ' ' → logprob: -11.168028831481934
    4. '0' → logprob: -11.543028831481934
    5. '=' → logprob: -12.543028831481934
    6. '==
' → logprob: -14.418028831481934
    7. '()==' → logprob: -14.793028831481934
    8. ')==' → logprob: -14.918028831481934
    9. '===' → logprob: -14.918028831481934
    10. ']==' → logprob: -15.418028831481934

Token 199: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000494533043820411
    2. ' ' → logprob: -7.625494480133057
    3. 'm' → logprob: -12.000494956970215
    4. ' m' → logprob: -15.250494956970215
    5. '```' → logprob: -16.6254940032959
    6. '1' → logprob: -18.2504940032959
    7. '۰' → logprob: -18.3754940032959
    8. '
' → logprob: -18.7504940032959
    9. ' ' → logprob: -19.0629940032959
    10. '  ' → logprob: -19.0629940032959

Token 200: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2233183042553719e-05
    2. ' ' → logprob: -11.750012397766113
    3. 'm' → logprob: -12.500012397766113
    4. '```' → logprob: -15.875012397766113
    5. 'and' → logprob: -16.562511444091797
    6. 'n' → logprob: -16.812511444091797
    7. 's' → logprob: -16.875011444091797
    8. '۰' → logprob: -17.125011444091797
    9. '-' → logprob: -17.625011444091797
    10. '

' → logprob: -17.687511444091797

Token 201: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3132631182670593
    2. 'and' → logprob: -1.313263177871704
    3. ' ' → logprob: -13.688262939453125
    4. ':' → logprob: -15.563262939453125
    5. '	and' → logprob: -16.438262939453125
    6. '   ' → logprob: -17.313262939453125
    7. ' or' → logprob: -18.313262939453125
    8. '  ' → logprob: -18.313262939453125
    9. '```' → logprob: -18.313262939453125
    10. '<|end|>' → logprob: -19.063262939453125

Token 202: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.011048054322600365
    2. ' m' → logprob: -4.511047840118408
    3. '   ' → logprob: -15.761048316955566
    4. '	m' → logprob: -17.13604736328125
    5. ' ' → logprob: -18.88604736328125
    6. '  ' → logprob: -19.01104736328125
    7. '    ' → logprob: -19.26104736328125
    8. '       ' → logprob: -19.63604736328125
    9. '     ' → logprob: -21.26104736328125
    10. ' ' → logprob: -21.51104736328125

Token 203: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.474160760641098
    2. ' ==' → logprob: -0.9741607904434204
    3. '=' → logprob: -10.724161148071289
    4. ')==' → logprob: -10.974161148071289
    5. '0' → logprob: -11.349161148071289
    6. '<|end|>' → logprob: -11.349161148071289
    7. ' ' → logprob: -11.974161148071289
    8. ']==' → logprob: -12.474161148071289
    9. ' =' → logprob: -12.599161148071289
    10. '()==' → logprob: -13.724161148071289

Token 204: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017023178515955806
    2. ' ' → logprob: -6.376702308654785
    3. '<|end|>' → logprob: -16.5017032623291
    4. '  ' → logprob: -18.8767032623291
    5. '۰' → logprob: -19.0017032623291
    6. '   ' → logprob: -19.2517032623291
    7. ' ' → logprob: -19.7517032623291
    8. '<|end|>' → logprob: -19.8767032623291
    9. '```' → logprob: -20.1267032623291
    10. '`' → logprob: -20.8142032623291

Token 205: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '۰' → logprob: -19.125009536743164
    4. '<|end|>' → logprob: -20.312509536743164
    5. '```' → logprob: -20.562509536743164
    6. '০' → logprob: -20.625009536743164
    7. '  ' → logprob: -20.812509536743164
    8. '   ' → logprob: -20.937509536743164
    9. '०' → logprob: -21.125009536743164
    10. '０' → logprob: -21.250009536743164

Token 206: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2521573603153229
    2. ':
' → logprob: -1.5021573305130005
    3. ':return' → logprob: -8.877157211303711
    4. '           ' → logprob: -9.627157211303711
    5. '       ' → logprob: -11.127157211303711
    6. '   ' → logprob: -12.377157211303711
    7. ':
' → logprob: -12.877157211303711
    8. '):
' → logprob: -15.127157211303711
    9. ':

' → logprob: -15.127157211303711
    10. ',' → logprob: -15.377157211303711

Token 207: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.47626737493556e-05
    2. '       ' → logprob: -10.62503433227539
    3. '               ' → logprob: -12.37503433227539
    4. ' break' → logprob: -13.37503433227539
    5. '   ' → logprob: -13.62503433227539
    6. '	       ' → logprob: -14.25003433227539
    7. '          ' → logprob: -14.37503433227539
    8. ' return' → logprob: -14.87503433227539
    9. '         ' → logprob: -14.87503433227539
    10. '		' → logprob: -15.12503433227539

Token 208: ' break' (ID: 2338)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6207341551780701
    2. 'break' (adapté à ' break') → logprob: -0.8707341551780701
    3. ' break' → logprob: -3.620734214782715
    4. ' return' → logprob: -4.745734214782715
    5. '           ' → logprob: -5.245734214782715
    6. '       ' → logprob: -5.870734214782715
    7. '               ' → logprob: -8.370734214782715
    8. '	break' → logprob: -10.620734214782715
    9. '   ' → logprob: -12.745734214782715
    10. '	return' → logprob: -12.995734214782715

Token 209: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010032468708232045
    2. '        
' → logprob: -9.750100135803223
    3. '   ' → logprob: -11.375100135803223
    4. '```' → logprob: -11.875100135803223
    5. '<|end|>' → logprob: -12.125100135803223
    6. 'w' → logprob: -12.250100135803223
    7. '
' → logprob: -12.875100135803223
    8. 'p' → logprob: -13.500100135803223
    9. 'n' → logprob: -13.625100135803223
    10. 'mat' → logprob: -13.875100135803223

Token 210: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28992971777915955
    2. 'grid' → logprob: -2.0399296283721924
    3. 'w' → logprob: -2.7899296283721924
    4. '   ' → logprob: -3.6649296283721924
    5. 'p' → logprob: -4.4149298667907715
    6. 'pattern' → logprob: -4.5399298667907715
    7. ' grid' → logprob: -5.6649298667907715
    8. 'matrix' → logprob: -6.0399298667907715
    9. 'patterns' → logprob: -6.5399298667907715
    10. 'mat' → logprob: -7.2899298667907715

Token 211: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' (adapté à ' w') → logprob: -0.009528699330985546
    2. 'pattern' → logprob: -6.009528636932373
    3. 'grid' → logprob: -6.259528636932373
    4. 'wall' → logprob: -7.134528636932373
    5. 'world' → logprob: -7.259528636932373
    6. 'word' → logprob: -7.509528636932373
    7. '       ' → logprob: -7.509528636932373
    8. 'W' → logprob: -7.509528636932373
    9. 'board' → logprob: -8.134529113769531
    10. 'image' → logprob: -8.384529113769531

Token 212: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2520510256290436
    2. ' =' → logprob: -1.5020509958267212
    3. '=[]' → logprob: -9.12705135345459
    4. '=[' → logprob: -12.25205135345459
    5. '=[]
' → logprob: -12.62705135345459
    6. ',' → logprob: -13.00205135345459
    7. '[' → logprob: -13.75205135345459
    8. ' =[' → logprob: -14.87705135345459
    9. '   ' → logprob: -15.12705135345459
    10. 'w' → logprob: -15.37705135345459

Token 213: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0016497104661539197
    2. ' [' → logprob: -7.001649856567383
    3. '[w' → logprob: -8.251649856567383
    4. '[input' → logprob: -9.251649856567383
    5. '[word' → logprob: -9.626649856567383
    6. '[int' → logprob: -9.626649856567383
    7. '[n' → logprob: -9.876649856567383
    8. '[str' → logprob: -10.751649856567383
    9. '[new' → logprob: -10.876649856567383
    10. '[line' → logprob: -11.001649856567383

Token 214: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0019169762963429093
    2. '[list' → logprob: -6.501916885375977
    3. ' list' → logprob: -8.501916885375977
    4. '[input' → logprob: -9.126916885375977
    5. 'input' → logprob: -9.501916885375977
    6. '[' → logprob: -10.501916885375977
    7. ' [' → logprob: -15.626916885375977
    8. '(list' → logprob: -15.626916885375977
    9. '=list' → logprob: -16.126916885375977
    10. '	list' → logprob: -17.251916885375977

Token 215: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.005293288733810186
    2. '(input' → logprob: -5.255293369293213
    3. 'map' → logprob: -10.130292892456055
    4. 'input' → logprob: -11.255292892456055
    5. '(' → logprob: -12.130292892456055
    6. '
' → logprob: -15.380292892456055
    7. ']' → logprob: -15.380292892456055
    8. '(int' → logprob: -15.505292892456055
    9. ' map' → logprob: -15.755292892456055
    10. '()' → logprob: -16.130292892456055

Token 216: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0006428572814911604
    2. 'int' → logprob: -7.375642776489258
    3. '   ' → logprob: -12.125642776489258
    4. ' int' → logprob: -12.500642776489258
    5. ',int' → logprob: -13.000642776489258
    6. ')' → logprob: -13.125642776489258
    7. ']int' → logprob: -14.250642776489258
    8. '(' → logprob: -14.625642776489258
    9. '<int' → logprob: -14.875642776489258
    10. '[int' → logprob: -15.000642776489258

Token 217: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.012082683853805065
    2. ',' → logprob: -4.512082576751709
    3. 'input' → logprob: -7.262082576751709
    4. '(input' → logprob: -8.012083053588867
    5. ' input' → logprob: -14.762083053588867
    6. ' ,' → logprob: -15.262083053588867
    7. ',
' → logprob: -15.637083053588867
    8. '   ' → logprob: -16.137083053588867
    9. '[input' → logprob: -16.262083053588867
    10. '=input' → logprob: -16.512083053588867

Token 218: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.7835754988482222e-05
    2. '.readline' → logprob: -11.375018119812012
    3. '()' → logprob: -12.125018119812012
    4. '.' → logprob: -14.875018119812012
    5. ' ().' → logprob: -15.250018119812012
    6. '.split' → logprob: -16.000017166137695
    7. '()
' → logprob: -17.000017166137695
    8. ' .' → logprob: -17.750017166137695
    9. '()))' → logprob: -18.250017166137695
    10. '.strip' → logprob: -18.375017166137695

Token 219: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0019448186503723264
    2. 'strip' → logprob: -6.2519450187683105
    3. 'read' → logprob: -11.376944541931152
    4. 'rstrip' → logprob: -12.501944541931152
    5. ' split' → logprob: -14.376944541931152
    6. '(split' → logprob: -14.876944541931152
    7. ')' → logprob: -16.50194549560547
    8. '.split' → logprob: -18.62694549560547
    9. ' strip' → logprob: -18.75194549560547
    10. '   ' → logprob: -18.87694549560547

Token 220: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.031080229207873344
    2. '))' → logprob: -3.5310802459716797
    3. '()' → logprob: -6.65608024597168
    4. '()))
' → logprob: -10.90608024597168
    5. '()
' → logprob: -11.53108024597168
    6. '(' → logprob: -12.28108024597168
    7. '().' → logprob: -12.65608024597168
    8. '   ' → logprob: -13.15608024597168
    9. '())' → logprob: -14.28108024597168
    10. '       ' → logprob: -14.40608024597168

Token 221: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7051050662994385
    2. '()' → logprob: -0.7051050662994385
    3. '())' → logprob: -4.455104827880859
    4. '()]' → logprob: -8.83010482788086
    5. '(' → logprob: -9.95510482788086
    6. ']' → logprob: -10.83010482788086
    7. 'for' → logprob: -10.95510482788086
    8. ' for' → logprob: -11.20510482788086
    9. ')]' → logprob: -11.33010482788086
    10. '(n' → logprob: -12.20510482788086

Token 222: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.017953956499695778
    2. ' range' → logprob: -4.267953872680664
    3. ' _' → logprob: -5.892953872680664
    4. 'range' → logprob: -7.142953872680664
    5. ' in' → logprob: -8.392953872680664
    6. '_range' → logprob: -12.017953872680664
    7. 'in' → logprob: -14.017953872680664
    8. '(range' → logprob: -14.892953872680664
    9. 'i' → logprob: -15.767953872680664
    10. ' ' → logprob: -16.392953872680664

Token 223: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005885421764105558
    2. ' in' → logprob: -5.880885601043701
    3. ' range' → logprob: -6.130885601043701
    4. 'in' → logprob: -7.130885601043701
    5. '(range' → logprob: -9.255885124206543
    6. ' ' → logprob: -13.505885124206543
    7. '	range' → logprob: -13.505885124206543
    8. '   ' → logprob: -13.755885124206543
    9. '  ' → logprob: -13.880885124206543
    10. 'ange' → logprob: -15.255885124206543

Token 224: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.505351095460355e-05
    2. ' range' → logprob: -9.500075340270996
    3. '(range' → logprob: -16.25007438659668
    4. '   ' → logprob: -17.00007438659668
    5. '	range' → logprob: -18.75007438659668
    6. 'r' → logprob: -18.87507438659668
    7. 'm' → logprob: -19.50007438659668
    8. ' ' → logprob: -19.75007438659668
    9. '[' → logprob: -20.25007438659668
    10. '  ' → logprob: -20.62507438659668

Token 225: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00026169343618676066
    2. 'n' → logprob: -8.250261306762695
    3. '(' → logprob: -14.750261306762695
    4. ' n' → logprob: -18.500261306762695
    5. ')n' → logprob: -18.625261306762695
    6. '	n' → logprob: -18.750261306762695
    7. ' (' → logprob: -19.250261306762695
    8. 's' → logprob: -19.875261306762695
    9. '(m' → logprob: -20.250261306762695
    10. ')' → logprob: -20.625261306762695

Token 226: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -9.491498531133402e-06
    2. ']' → logprob: -12.125009536743164
    3. ')' → logprob: -13.000009536743164
    4. ')]
' → logprob: -13.750009536743164
    5. ' )' → logprob: -14.750009536743164
    6. '       ' → logprob: -16.500009536743164
    7. '   ' → logprob: -16.750009536743164
    8. ')]

' → logprob: -17.375009536743164
    9. ' ' → logprob: -17.625009536743164
    10. ' ]' → logprob: -17.875009536743164

Token 227: '       ' (ID: 309)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3708493709564209
    2. '       ' → logprob: -1.245849370956421
    3. ' p' → logprob: -3.870849370956421
    4. '   ' → logprob: -7.995849609375
    5. 'patterns' → logprob: -7.995849609375
    6. 'pattern' → logprob: -8.495849609375
    7. 't' → logprob: -9.370849609375
    8. ' patterns' → logprob: -9.745849609375
    9. '	p' → logprob: -9.995849609375
    10. 's' → logprob: -10.370849609375

Token 228: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.008048045448958874
    2. 'patterns' → logprob: -5.758048057556152
    3. ' p' → logprob: -5.883048057556152
    4. 'pattern' → logprob: -6.633048057556152
    5. 'pat' → logprob: -8.008048057556152
    6. '       ' → logprob: -8.883048057556152
    7. ' patterns' → logprob: -10.008048057556152
    8. 'found' → logprob: -10.508048057556152
    9. 'res' → logprob: -11.008048057556152
    10. 'results' → logprob: -11.008048057556152

Token 229: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.313263863325119
    2. '=' → logprob: -1.3132638931274414
    3. ' ' → logprob: -14.688263893127441
    4. 'p' → logprob: -14.813263893127441
    5. '[' → logprob: -15.438263893127441
    6. '   ' → logprob: -15.563263893127441
    7. '=
' → logprob: -15.813263893127441
    8. '=[]' → logprob: -15.938263893127441
    9. '=[' → logprob: -16.313262939453125
    10. 'w' → logprob: -16.563262939453125

Token 230: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.19902120530605316
    2. '[' → logprob: -2.449021100997925
    3. '[list' → logprob: -2.449021100997925
    4. '[w' → logprob: -5.074021339416504
    5. '[[' → logprob: -8.324021339416504
    6. '[get' → logprob: -8.324021339416504
    7. '[List' → logprob: -8.449021339416504
    8. '[p' → logprob: -9.074021339416504
    9. '[l' → logprob: -9.199021339416504
    10. '[line' → logprob: -9.574021339416504

Token 231: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -6.988221684878226e-06
    2. ' list' → logprob: -12.250006675720215
    3. '[list' → logprob: -13.125006675720215
    4. '[-' → logprob: -16.50000762939453
    5. '-list' → logprob: -17.37500762939453
    6. '
' → logprob: -18.62500762939453
    7. '(list' → logprob: -18.87500762939453
    8. '	list' → logprob: -19.37500762939453
    9. '=list' → logprob: -19.37500762939453
    10. ':list' → logprob: -19.62500762939453

Token 232: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -2.9875325708417222e-05
    2. 'map' → logprob: -10.500029563903809
    3. '(int' → logprob: -13.750029563903809
    4. '(' → logprob: -14.250029563903809
    5. ' map' → logprob: -16.250030517578125
    6. ',map' → logprob: -16.250030517578125
    7. '.map' → logprob: -16.375030517578125
    8. '(range' → logprob: -16.875030517578125
    9. ' (' → logprob: -16.875030517578125
    10. '(
' → logprob: -17.250030517578125

Token 233: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00095267134020105
    2. 'int' → logprob: -7.00095272064209
    3. '[int' → logprob: -11.00095272064209
    4. '=int' → logprob: -11.37595272064209
    5. '<int' → logprob: -12.00095272064209
    6. ',int' → logprob: -12.75095272064209
    7. ' int' → logprob: -13.37595272064209
    8. ']int' → logprob: -13.37595272064209
    9. ' (' → logprob: -15.00095272064209
    10. ')' → logprob: -15.12595272064209

Token 234: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.003463936736807227
    2. '(input' → logprob: -5.8784637451171875
    3. 'input' → logprob: -7.8784637451171875
    4. ',' → logprob: -8.253463745117188
    5. '=input' → logprob: -11.628463745117188
    6. ',int' → logprob: -11.878463745117188
    7. '[input' → logprob: -13.628463745117188
    8. '<input' → logprob: -14.003463745117188
    9. ' ,' → logprob: -14.878463745117188
    10. '```' → logprob: -15.253463745117188

Token 235: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00019030878320336342
    2. '.split' → logprob: -8.875190734863281
    3. '()' → logprob: -11.125190734863281
    4. '.readline' → logprob: -11.125190734863281
    5. '.' → logprob: -12.250190734863281
    6. '=input' → logprob: -13.125190734863281
    7. '.input' → logprob: -13.250190734863281
    8. '   ' → logprob: -13.375190734863281
    9. ' .' → logprob: -13.500190734863281
    10. 'input' → logprob: -13.625190734863281

Token 236: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.3856492842023727e-06
    2. 'strip' → logprob: -14.000000953674316
    3. ' split' → logprob: -15.125000953674316
    4. '.split' → logprob: -16.375001907348633
    5. '(split' → logprob: -17.000001907348633
    6. 'read' → logprob: -17.125001907348633
    7. 'spl' → logprob: -17.125001907348633
    8. 'sys' → logprob: -17.750001907348633
    9. 'rstrip' → logprob: -18.750001907348633
    10. ')' → logprob: -18.750001907348633

Token 237: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0283709317445755
    2. '))' → logprob: -3.9033708572387695
    3. '().' → logprob: -5.5283708572387695
    4. '()' → logprob: -5.7783708572387695
    5. '()[' → logprob: -7.7783708572387695
    6. '())' → logprob: -8.77837085723877
    7. '       ' → logprob: -10.27837085723877
    8. '()))
' → logprob: -10.77837085723877
    9. '())).' → logprob: -10.90337085723877
    10. '               ' → logprob: -11.15337085723877

Token 238: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17445865273475647
    2. ' for' → logprob: -1.924458622932434
    3. '()' → logprob: -4.2994585037231445
    4. ')' → logprob: -7.5494585037231445
    5. '   ' → logprob: -11.174458503723145
    6. '	for' → logprob: -12.049458503723145
    7. ' ()' → logprob: -13.049458503723145
    8. '       ' → logprob: -13.174458503723145
    9. ' ' → logprob: -13.174458503723145
    10. '           ' → logprob: -13.549458503723145

Token 239: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3877330720424652
    2. '_' → logprob: -1.7627331018447876
    3. 'range' → logprob: -2.137732982635498
    4. ' in' → logprob: -3.512732982635498
    5. ' _' → logprob: -6.637732982635498
    6. 'in' → logprob: -7.637732982635498
    7. '_range' → logprob: -8.262733459472656
    8. '(range' → logprob: -10.387733459472656
    9. 'for' → logprob: -13.012733459472656
    10. '_=' → logprob: -13.137733459472656

Token 240: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25198468565940857
    2. ' range' → logprob: -1.501984715461731
    3. '(range' → logprob: -10.126984596252441
    4. ' in' → logprob: -11.876984596252441
    5. '_range' → logprob: -12.001984596252441
    6. '	range' → logprob: -13.751984596252441
    7. 'in' → logprob: -14.001984596252441
    8. '_' → logprob: -14.626984596252441
    9. ' xrange' → logprob: -16.001985549926758
    10. '.range' → logprob: -17.126985549926758

Token 241: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20142921805381775
    2. ' range' → logprob: -1.7014292478561401
    3. '(range' → logprob: -11.07642936706543
    4. '_range' → logprob: -15.45142936706543
    5. 'm' → logprob: -15.82642936706543
    6. '_' → logprob: -17.95142936706543
    7. '	range' → logprob: -18.07642936706543
    8. 'r' → logprob: -18.45142936706543
    9. '   ' → logprob: -19.70142936706543
    10. ' ' → logprob: -19.82642936706543

Token 242: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -6.229872087715194e-05
    2. 'm' → logprob: -10.000061988830566
    3. 'range' → logprob: -11.750061988830566
    4. ' (' → logprob: -12.000061988830566
    5. '(' → logprob: -13.750061988830566
    6. ' range' → logprob: -14.375061988830566
    7. '(range' → logprob: -15.000061988830566
    8. '   ' → logprob: -15.125061988830566
    9. '[m' → logprob: -15.500061988830566
    10. ' m' → logprob: -15.875061988830566

Token 243: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.166338137816638e-05
    2. ']' → logprob: -10.500031471252441
    3. ')]
' → logprob: -13.125031471252441
    4. ')' → logprob: -13.500031471252441
    5. '       ' → logprob: -15.625031471252441
    6. '()]' → logprob: -16.750032424926758
    7. '])' → logprob: -16.750032424926758
    8. ')])' → logprob: -16.750032424926758
    9. ' )' → logprob: -16.875032424926758
    10. '])]' → logprob: -17.125032424926758

Token 244: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02736740931868553
    2. '   ' → logprob: -3.777367353439331
    3. 'p' → logprob: -5.77736759185791
    4. ' p' → logprob: -8.15236759185791
    5. '<|end|>' → logprob: -8.27736759185791
    6. '        
' → logprob: -8.65236759185791
    7. '
' → logprob: -8.65236759185791
    8. ' ' → logprob: -10.77736759185791
    9. 'positions' → logprob: -10.90236759185791
    10. '    
' → logprob: -11.02736759185791

Token 245: ' #' (ID: 1069)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.003166194772347808
    2. 'positions' → logprob: -6.503166198730469
    3. 'rot' → logprob: -7.753166198730469
    4. 'pattern' → logprob: -7.753166198730469
    5. 'pos' → logprob: -8.378166198730469
    6. 'count' → logprob: -9.128166198730469
    7. 'patterns' → logprob: -9.628166198730469
    8. 'res' → logprob: -9.628166198730469
    9. 'counts' → logprob: -9.628166198730469
    10. 'for' → logprob: -9.878166198730469

Token 246: ' Pre' (ID: 4659)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.04306519031524658
    2. ' p' → logprob: -3.793065071105957
    3. 'rot' → logprob: -5.168065071105957
    4. 'positions' → logprob: -5.918065071105957
    5. 'pos' → logprob: -6.043065071105957
    6. 'pattern' → logprob: -6.168065071105957
    7. 'count' → logprob: -6.668065071105957
    8. 'res' → logprob: -7.043065071105957
    9. 'pat' → logprob: -7.418065071105957
    10. 'for' → logprob: -7.793065071105957

Token 247: 'compute' (ID: 54521)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.437740683555603
    2. '       ' → logprob: -1.812740683555603
    3. 'd' → logprob: -2.4377408027648926
    4. 's' → logprob: -2.8127408027648926
    5. 'sent' → logprob: -4.687740802764893
    6. 'dict' → logprob: -4.687740802764893
    7. 'positions' → logprob: -5.687740802764893
    8. 'v' → logprob: -5.687740802764893
    9. 'processed' → logprob: -5.937740802764893
    10. 'pared' → logprob: -6.312740802764893

Token 248: ' rotations' (ID: 141136)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5469040870666504
    2. ' p' → logprob: -0.9219040870666504
    3. 'pattern' → logprob: -4.92190408706665
    4. 'positions' → logprob: -5.42190408706665
    5. 'patterns' → logprob: -5.42190408706665
    6. ' patterns' → logprob: -6.42190408706665
    7. ' positions' → logprob: -6.67190408706665
    8. ' pattern' → logprob: -6.79690408706665
    9. ' all' → logprob: -7.04690408706665
    10. '       ' → logprob: -7.67190408706665

Token 249: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003427458694204688
    2. 'p' → logprob: -6.378427505493164
    3. ' p' → logprob: -7.503427505493164
    4. '   ' → logprob: -8.003427505493164
    5. 'patterns' → logprob: -8.378427505493164
    6. 'rot' → logprob: -8.628427505493164
    7. ' rotations' → logprob: -9.253427505493164
    8. '        
' → logprob: -9.628427505493164
    9. 'positions' → logprob: -10.253427505493164
    10. ' patterns' → logprob: -10.378427505493164

Token 250: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.004624510649591684
    2. ' p' → logprob: -5.379624366760254
    3. 'pattern' → logprob: -13.754624366760254
    4. '       ' → logprob: -13.879624366760254
    5. '[' → logprob: -14.379624366760254
    6. 'patterns' → logprob: -14.504624366760254
    7. '   ' → logprob: -14.754624366760254
    8. '[p' → logprob: -15.254624366760254
    9. '	p' → logprob: -15.879624366760254
    10. '(p' → logprob: -16.00462532043457

Token 251: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008237993461079895
    2. 'p' → logprob: -8.500823974609375
    3. 'rot' → logprob: -8.750823974609375
    4. 's' → logprob: -9.625823974609375
    5. '        
' → logprob: -9.750823974609375
    6. ' p' → logprob: -9.875823974609375
    7. '   ' → logprob: -9.875823974609375
    8. ' rotations' → logprob: -10.250823974609375
    9. ':' → logprob: -10.375823974609375
    10. '
' → logprob: -10.625823974609375

Token 252: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.44706009957008e-05
    2. 'rot' → logprob: -10.62508487701416
    3. 'p' → logprob: -11.12508487701416
    4. '        
' → logprob: -11.25008487701416
    5. ' rotations' → logprob: -11.62508487701416
    6. ' p' → logprob: -12.37508487701416
    7. 'patterns' → logprob: -12.75008487701416
    8. '   ' → logprob: -12.87508487701416
    9. '```' → logprob: -13.12508487701416
    10. ' rot' → logprob: -13.37508487701416

Token 253: ' patterns' (ID: 18587)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'patterns' (adapté à ' patterns') → logprob: -0.7270030975341797
    2. 'p' → logprob: -0.9770030975341797
    3. 'rot' → logprob: -2.3520030975341797
    4. '       ' → logprob: -3.7270030975341797
    5. 'rots' → logprob: -4.60200309753418
    6. 'ps' → logprob: -5.22700309753418
    7. ' patterns' → logprob: -6.47700309753418
    8. 'pat' → logprob: -6.60200309753418
    9. ' p' → logprob: -6.85200309753418
    10. 'pattern' → logprob: -7.97700309753418

Token 254: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693126499652863
    2. '=' → logprob: -2.1269311904907227
    3. '=[' → logprob: -13.751931190490723
    4. 's' → logprob: -14.001931190490723
    5. '=[]' → logprob: -14.626931190490723
    6. '[' → logprob: -15.001931190490723
    7. ',' → logprob: -16.00193214416504
    8. ' =[' → logprob: -16.00193214416504
    9. 'p' → logprob: -16.37693214416504
    10. '=[]
' → logprob: -16.62693214416504

Token 255: ' [' (ID: 723)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.003301881952211261
    2. ' [' → logprob: -5.753302097320557
    3. '[' → logprob: -9.003301620483398
    4. '   ' → logprob: -14.378301620483398
    5. '[m' → logprob: -15.128301620483398
    6. '[P' → logprob: -16.5033016204834
    7. '[n' → logprob: -17.0033016204834
    8. '[a' → logprob: -18.1283016204834
    9. '[q' → logprob: -18.1283016204834
    10. '[start' → logprob: -18.2533016204834

Token 256: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -5.4192871175473556e-05
    2. ' p' → logprob: -9.875054359436035
    3. 'get' → logprob: -13.125054359436035
    4. '[p' → logprob: -15.750054359436035
    5. 'pattern' → logprob: -15.875054359436035
    6. '
' → logprob: -16.25005340576172
    7. '   ' → logprob: -16.50005340576172
    8. '(p' → logprob: -16.87505340576172
    9. 'patterns' → logprob: -17.56255340576172
    10. '	p' → logprob: -17.75005340576172

Token 257: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1270352005958557
    2. ']
' → logprob: -2.127035140991211
    3. ']

' → logprob: -9.877035140991211
    4. ',p' → logprob: -10.627035140991211
    5. ',' → logprob: -11.752035140991211
    6. ']
' → logprob: -11.877035140991211
    7. ' ]' → logprob: -11.877035140991211
    8. 'p' → logprob: -12.127035140991211
    9. ' ]
' → logprob: -13.752035140991211
    10. '   ' → logprob: -13.752035140991211

Token 258: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5233454704284668
    2. '
' → logprob: -1.7733454704284668
    3. ',' → logprob: -1.8983454704284668
    4. ',
' → logprob: -3.648345470428467
    5. '[' → logprob: -4.398345470428467
    6. '<|end|>' → logprob: -4.398345470428467
    7. '   ' → logprob: -4.648345470428467
    8. ' for' → logprob: -4.898345470428467
    9. ',p' → logprob: -5.023345470428467
    10. '        
' → logprob: -5.273345470428467

Token 259: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.27340051531791687
    2. ' for' → logprob: -1.5234005451202393
    3. '       ' → logprob: -4.02340030670166
    4. 'patterns' → logprob: -5.77340030670166
    5. 'p' → logprob: -9.02340030670166
    6. ' patterns' → logprob: -9.52340030670166
    7. '
' → logprob: -10.89840030670166
    8. '	for' → logprob: -12.14840030670166
    9. ' p' → logprob: -12.27340030670166
    10. '        
' → logprob: -12.52340030670166

Token 260: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.8889261304575484e-06
    2. ' _' → logprob: -12.625003814697266
    3. '_i' → logprob: -14.750003814697266
    4. '_=' → logprob: -17.375003814697266
    5. '_angle' → logprob: -18.250003814697266
    6. '_in' → logprob: -18.500003814697266
    7. '_

' → logprob: -19.000003814697266
    8. '_k' → logprob: -19.125003814697266
    9. '_
' → logprob: -19.750003814697266
    10. '_range' → logprob: -20.125003814697266

Token 261: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4742375910282135
    2. ' in' → logprob: -0.9742375612258911
    3. 'range' → logprob: -8.849237442016602
    4. ' ' → logprob: -11.349237442016602
    5. '(' → logprob: -13.724237442016602
    6. '  ' → logprob: -13.849237442016602
    7. '1' → logprob: -14.599237442016602
    8. 'i' → logprob: -14.724237442016602
    9. ' range' → logprob: -14.849237442016602
    10. '	in' → logprob: -14.974237442016602

Token 262: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015224798116832972
    2. ' range' → logprob: -6.501522541046143
    3. '[' → logprob: -11.251522064208984
    4. 'pattern' → logprob: -12.251522064208984
    5. '(' → logprob: -13.376522064208984
    6. '(range' → logprob: -14.751522064208984
    7. '	range' → logprob: -16.251522064208984
    8. 'p' → logprob: -16.501522064208984
    9. ' ' → logprob: -16.501522064208984
    10. '```' → logprob: -16.751522064208984

Token 263: '(' (ID: 7)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.4740787148475647
    2. '(' → logprob: -0.9740787148475647
    3. ' ' → logprob: -13.349079132080078
    4. '
' → logprob: -16.849079132080078
    5. '_' → logprob: -17.224079132080078
    6. '​' → logprob: -17.974079132080078
    7. ' (' → logprob: -18.349079132080078
    8. '   ' → logprob: -18.474079132080078
    9. '３' → logprob: -18.849079132080078
    10. '{' → logprob: -18.974079132080078

Token 264: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -16.125
    4. '```' → logprob: -18.375
    5. '
' → logprob: -18.625
    6. '_' → logprob: -19.125
    7. '2' → logprob: -19.625
    8. '  ' → logprob: -19.625
    9. '３' → logprob: -19.625
    10. '    ' → logprob: -20.125

Token 265: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.022661671042442322
    2. '):' → logprob: -3.8976616859436035
    3. ' ):
' → logprob: -6.2726616859436035
    4. ':' → logprob: -9.397661209106445
    5. ':
' → logprob: -9.522661209106445
    6. ' ):' → logprob: -10.147661209106445
    7. '):
' → logprob: -11.022661209106445
    8. '():
' → logprob: -11.772661209106445
    9. ' :
' → logprob: -12.897661209106445
    10. '   ' → logprob: -13.022661209106445

Token 266: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007729657460004091
    2. 'patterns' → logprob: -5.757729530334473
    3. ' p' → logprob: -6.132729530334473
    4. ' patterns' → logprob: -6.382729530334473
    5. 'p' → logprob: -8.007729530334473
    6. '
' → logprob: -9.132729530334473
    7. '```' → logprob: -9.882729530334473
    8. '            
' → logprob: -10.007729530334473
    9. 'pat' → logprob: -10.007729530334473
    10. '   ' → logprob: -10.882729530334473

Token 267: ' patterns' (ID: 18587)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5534510612487793
    2. ' p' → logprob: -1.1784510612487793
    3. 'patterns' (adapté à ' patterns') → logprob: -2.8034510612487793
    4. '           ' → logprob: -3.5534510612487793
    5. ' patterns' → logprob: -3.8034510612487793
    6. '       ' → logprob: -5.928451061248779
    7. 'pat' → logprob: -6.553451061248779
    8. '   ' → logprob: -7.178451061248779
    9. '               ' → logprob: -7.428451061248779
    10. '	p' → logprob: -8.803451538085938

Token 268: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.333223139634356e-05
    2. '.' → logprob: -10.375033378601074
    3. ' .' → logprob: -13.500033378601074
    4. 'append' → logprob: -15.250033378601074
    5. '=' → logprob: -15.375033378601074
    6. '.app' → logprob: -15.875033378601074
    7. '[-' → logprob: -17.000032424926758
    8. ' =' → logprob: -17.875032424926758
    9. '.ap' → logprob: -18.000032424926758
    10. ' +=' → logprob: -18.750032424926758

Token 269: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007266097818501294
    2. 'rotate' → logprob: -7.250726699829102
    3. ' rotate' → logprob: -11.250726699829102
    4. ' (' → logprob: -13.000726699829102
    5. '(rot' → logprob: -13.875726699829102
    6. '(
' → logprob: -15.125726699829102
    7. '(rotation' → logprob: -15.500726699829102
    8. '   ' → logprob: -17.6257266998291
    9. '_rotate' → logprob: -17.6257266998291
    10. '.rotate' → logprob: -17.7507266998291

Token 270: 'rotate' (ID: 31296)
  Prédit: 'rotate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rotate' → logprob: -0.0009159822366200387
    2. ' rotate' → logprob: -7.000916004180908
    3. '   ' → logprob: -12.62591552734375
    4. '       ' → logprob: -14.75091552734375
    5. '           ' → logprob: -14.87591552734375
    6. ')' → logprob: -16.75091552734375
    7. ' ' → logprob: -16.75091552734375
    8. '.rotate' → logprob: -16.87591552734375
    9. 'rot' → logprob: -17.00091552734375
    10. '         ' → logprob: -17.12591552734375

Token 271: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.320199877838604e-07
    2. '_patterns' → logprob: -15.625
    3. '```' → logprob: -16.375
    4. '90' → logprob: -16.75
    5. '`' → logprob: -17.75
    6. '}_' → logprob: -18.375
    7. ')_' → logprob: -18.625
    8. ' _' → logprob: -18.75
    9. 'p' → logprob: -19.625
    10. '\' → logprob: -20.25

Token 272: '90' (ID: 2744)
  Prédit: '90'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '90' → logprob: -0.0017086135921999812
    2. '_' → logprob: -6.376708507537842
    3. 'p' → logprob: -12.751708984375
    4. ' ' → logprob: -13.126708984375
    5. '(p' → logprob: -14.876708984375
    6. 'patterns' → logprob: -15.126708984375
    7. '```' → logprob: -15.501708984375
    8. '(' → logprob: -16.251708984375
    9. '
' → logprob: -16.501708984375
    10. 'pattern' → logprob: -16.501708984375

Token 273: '(pattern' (ID: 62660)
  Prédit: '(pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pattern' → logprob: -4.60414821645827e-06
    2. 'patterns' → logprob: -12.500004768371582
    3. '(' → logprob: -14.250004768371582
    4. '(p' → logprob: -16.000003814697266
    5. ' patterns' → logprob: -16.500003814697266
    6. ' (' → logprob: -17.500003814697266
    7. '(
' → logprob: -18.000003814697266
    8. ')' → logprob: -19.000003814697266
    9. '
' → logprob: -19.250003814697266
    10. ')(' → logprob: -19.375003814697266

Token 274: 's' (ID: 82)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -0.035038284957408905
    2. '(pattern' → logprob: -3.5350382328033447
    3. 's' → logprob: -5.910038471221924
    4. ' patterns' → logprob: -7.410038471221924
    5. '[' → logprob: -7.785038471221924
    6. ')' → logprob: -7.910038471221924
    7. '_patterns' → logprob: -8.035037994384766
    8. '(p' → logprob: -8.160037994384766
    9. 'pat' → logprob: -8.785037994384766
    10. 'attern' → logprob: -9.160037994384766

Token 275: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.3856492842023727e-06
    2. '-' → logprob: -14.000000953674316
    3. '[' → logprob: -15.375000953674316
    4. '][-' → logprob: -16.000001907348633
    5. '(-' → logprob: -16.500001907348633
    6. ')' → logprob: -16.875001907348633
    7. '   ' → logprob: -17.500001907348633
    8. '[
' → logprob: -17.875001907348633
    9. '```' → logprob: -18.375001907348633
    10. '
' → logprob: -18.375001907348633

Token 276: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.875001907348633
    3. '])' → logprob: -14.250001907348633
    4. ')' → logprob: -15.750001907348633
    5. ']' → logprob: -16.125001907348633
    6. '   ' → logprob: -17.125001907348633
    7. '```' → logprob: -18.312501907348633
    8. '
' → logprob: -18.687501907348633
    9. '<|end|>' → logprob: -18.875001907348633
    10. '  ' → logprob: -19.000001907348633

Token 277: ']))

' (ID: 92947)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -4.644463479053229e-05
    2. ' ))' → logprob: -10.750046730041504
    3. ')' → logprob: -11.250046730041504
    4. '))
' → logprob: -12.250046730041504
    5. '()))' → logprob: -13.000046730041504
    6. ']))' → logprob: -13.125046730041504
    7. ')))' → logprob: -13.250046730041504
    8. '])' → logprob: -14.000046730041504
    9. ')]' → logprob: -16.000045776367188
    10. '   ' → logprob: -17.125045776367188

Token 278: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2578223645687103
    2. 'count' → logprob: -2.632822275161743
    3. 'counts' → logprob: -2.757822275161743
    4. 'results' → logprob: -3.132822275161743
    5. ' counts' → logprob: -4.132822513580322
    6. 'matches' → logprob: -5.007822513580322
    7. 'positions' → logprob: -5.007822513580322
    8. '   ' → logprob: -5.007822513580322
    9. ' results' → logprob: -6.382822513580322
    10. 'result' → logprob: -6.382822513580322

Token 279: ' #' (ID: 1069)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.04694254323840141
    2. 'results' → logprob: -3.4219424724578857
    3. 'count' → logprob: -4.421942710876465
    4. 'result' → logprob: -7.796942710876465
    5. 'matches' → logprob: -8.421942710876465
    6. 'res' → logprob: -8.546942710876465
    7. 'answers' → logprob: -8.921942710876465
    8. 'cnt' → logprob: -9.796942710876465
    9. ' counts' → logprob: -10.046942710876465
    10. 'for' → logprob: -10.171942710876465

Token 280: ' For' (ID: 2214)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.1612837314605713
    2. 'for' → logprob: -2.6612837314605713
    3. 'results' → logprob: -3.4112837314605713
    4. 'count' → logprob: -3.5362837314605713
    5. 'positions' → logprob: -5.286283493041992
    6. 'res' → logprob: -5.661283493041992
    7. 'matches' → logprob: -6.161283493041992
    8. 'found' → logprob: -6.161283493041992
    9. 'result' → logprob: -6.286283493041992
    10. 'cnt' → logprob: -7.161283493041992

Token 281: ' each' (ID: 2454)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.067064881324768
    2. 'angle' → logprob: -1.942064881324768
    3. 'res' → logprob: -2.1920647621154785
    4. 'rot' → logprob: -2.3170647621154785
    5. 'each' → logprob: -2.5670647621154785
    6. 'pat' → logprob: -3.1920647621154785
    7. 'pattern' → logprob: -3.4420647621154785
    8. 'ans' → logprob: -3.4420647621154785
    9. 'rotation' → logprob: -3.6920647621154785
    10. '_' → logprob: -4.1920647621154785

Token 282: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.22899198532104492
    2. 'rotation' → logprob: -1.853991985321045
    3. 'angle' → logprob: -3.853991985321045
    4. 'pat' → logprob: -4.603991985321045
    5. 'rot' → logprob: -4.853991985321045
    6. 'p' → logprob: -6.228991985321045
    7. ' pattern' → logprob: -6.353991985321045
    8. 'r' → logprob: -6.478991985321045
    9. ' rotation' → logprob: -6.978991985321045
    10. 'k' → logprob: -7.353991985321045

Token 283: ',' (ID: 11)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.08625086396932602
    2. '       ' → logprob: -3.2112507820129395
    3. '   ' → logprob: -4.2112507820129395
    4. ',' → logprob: -5.0862507820129395
    5. 'result' → logprob: -5.0862507820129395
    6. ' count' → logprob: -5.9612507820129395
    7. 'rotation' → logprob: -6.0862507820129395
    8. 'angle' → logprob: -6.2112507820129395
    9. 'res' → logprob: -6.4612507820129395
    10. 'cnt' → logprob: -6.7112507820129395

Token 284: ' pre' (ID: 876)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.023236973211169243
    2. ' count' → logprob: -4.0232367515563965
    3. 'positions' → logprob: -6.3982367515563965
    4. 'counts' → logprob: -7.2732367515563965
    5. 'cnt' → logprob: -7.5232367515563965
    6. 'res' → logprob: -7.8982367515563965
    7. '       ' → logprob: -8.023237228393555
    8. 'result' → logprob: -8.023237228393555
    9. 'print' → logprob: -8.523237228393555
    10. '           ' → logprob: -8.523237228393555

Token 285: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.0017674085684120655
    2. 'positions' → logprob: -7.251767635345459
    3. '_positions' → logprob: -7.876767635345459
    4. 'p' → logprob: -8.0017671585083
    5. 'computed' → logprob: -9.5017671585083
    6. '_compute' → logprob: -9.8767671585083
    7. ' compute' → logprob: -10.0017671585083
    8. 'pare' → logprob: -10.0017671585083
    9. '       ' → logprob: -10.6267671585083
    10. 'pute' → logprob: -11.2517671585083

Token 286: ' positions' (ID: 15897)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.10758978128433228
    2. ' p' → logprob: -2.8575897216796875
    3. 'positions' → logprob: -3.6075897216796875
    4. 'pattern' → logprob: -4.8575897216796875
    5. ' positions' → logprob: -5.3575897216796875
    6. 'pos' → logprob: -6.3575897216796875
    7. '_positions' → logprob: -7.3575897216796875
    8. ' its' → logprob: -7.7325897216796875
    9. ' pattern' → logprob: -7.8575897216796875
    10. ' the' → logprob: -7.9825897216796875

Token 287: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2224900871515274
    2. '_positions' → logprob: -1.9724900722503662
    3. 'positions' → logprob: -3.722490072250366
    4. 's' → logprob: -4.347490310668945
    5. ' =' → logprob: -4.472490310668945
    6. '_' → logprob: -5.722490310668945
    7. '_patterns' → logprob: -5.972490310668945
    8. '   ' → logprob: -6.972490310668945
    9. '```' → logprob: -6.972490310668945
    10. '=' → logprob: -7.097490310668945

Token 288: ' cells' (ID: 11242)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.12199104577302933
    2. 'p' → logprob: -3.4969911575317383
    3. 'pattern' → logprob: -3.6219911575317383
    4. ' get' → logprob: -3.8719911575317383
    5. 'non' → logprob: -4.496991157531738
    6. '-' → logprob: -4.496991157531738
    7. 'val' → logprob: -4.746991157531738
    8. ' non' → logprob: -6.621991157531738
    9. '[get' → logprob: -6.621991157531738
    10. ' p' → logprob: -7.621991157531738

Token 289: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7464499473571777
    2. '       ' → logprob: -0.8714499473571777
    3. '=' → logprob: -2.4964499473571777
    4. 'in' → logprob: -4.996449947357178
    5. ' in' → logprob: -4.996449947357178
    6. '_positions' → logprob: -5.496449947357178
    7. ' that' → logprob: -6.621449947357178
    8. 'positions' → logprob: -6.746449947357178
    9. 'for' → logprob: -7.371449947357178
    10. ' for' → logprob: -7.371449947357178

Token 290: ' >=' (ID: 5064)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9904168844223022
    2. 'val' → logprob: -1.2404168844223022
    3. 'value' → logprob: -1.9904168844223022
    4. ' -' → logprob: -2.865417003631592
    5. '!=-' → logprob: -3.615417003631592
    6. 'values' → logprob: -3.740417003631592
    7. ' val' → logprob: -3.865417003631592
    8. 'non' → logprob: -3.990417003631592
    9. ' value' → logprob: -3.990417003631592
    10. 'not' → logprob: -4.865417003631592

Token 291: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004151649307459593
    2. ' ' → logprob: -5.629151821136475
    3. '-' → logprob: -7.629151821136475
    4. ' -' → logprob: -10.129151344299316
    5. 'value' → logprob: -11.004151344299316
    6. ' value' → logprob: -13.004151344299316
    7. '
' → logprob: -13.629151344299316
    8. '1' → logprob: -13.629151344299316
    9. 'values' → logprob: -14.129151344299316
    10. '```' → logprob: -14.129151344299316

Token 292: ' values' (ID: 4824)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00800062995404005
    2. '(p' → logprob: -6.50800085067749
    3. '_positions' → logprob: -6.88300085067749
    4. ' p' → logprob: -7.38300085067749
    5. '_patterns' → logprob: -7.50800085067749
    6. ',' → logprob: -7.50800085067749
    7. 'positions' → logprob: -7.88300085067749
    8. ' and' → logprob: -7.88300085067749
    9. '_' → logprob: -8.133000373840332
    10. 'p' → logprob: -8.133000373840332

Token 293: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022538607008755207
    2. '        
' → logprob: -7.627254009246826
    3. 'positions' → logprob: -7.752254009246826
    4. '<|end|>' → logprob: -7.752254009246826
    5. ',' → logprob: -8.002253532409668
    6. '```' → logprob: -9.502253532409668
    7. '   ' → logprob: -9.627253532409668
    8. ' positions' → logprob: -9.627253532409668
    9. ' in' → logprob: -10.002253532409668
    10. ' p' → logprob: -10.127253532409668

Token 294: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009211249649524689
    2. 'positions' → logprob: -5.63421106338501
    3. '   ' → logprob: -5.88421106338501
    4. '<|end|>' → logprob: -7.13421106338501
    5. ' positions' → logprob: -7.75921106338501
    6. 'p' → logprob: -7.88421106338501
    7. '```' → logprob: -7.88421106338501
    8. ' for' → logprob: -8.634211540222168
    9. '        
' → logprob: -9.384211540222168
    10. 'for' → logprob: -9.384211540222168

Token 295: ' patterns' (ID: 18587)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4997525215148926
    2. ' p' → logprob: -1.4997525215148926
    3. '       ' → logprob: -1.6247525215148926
    4. 'p' → logprob: -2.2497525215148926
    5. 'positions' → logprob: -2.2497525215148926
    6. ' positions' → logprob: -2.4997525215148926
    7. 'patterns' (adapté à ' patterns') → logprob: -3.9997525215148926
    8. 'pattern' → logprob: -4.124752521514893
    9. ' pattern' → logprob: -4.749752521514893
    10. ' patterns' → logprob: -4.749752521514893

Token 296: '_pos' (ID: 14692)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.0015530710807070136
    2. '=' → logprob: -7.251553058624268
    3. ' =' → logprob: -7.501553058624268
    4. '_p' → logprob: -9.001553535461426
    5. '=_' → logprob: -9.001553535461426
    6. '_pos' → logprob: -10.376553535461426
    7. '_' → logprob: -11.751553535461426
    8. 'positions' → logprob: -13.376553535461426
    9. '=[]' → logprob: -13.751553535461426
    10. '_patterns' → logprob: -14.126553535461426

Token 297: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21271850168704987
    2. ' =' → logprob: -1.7127184867858887
    3. 'itions' → logprob: -4.962718486785889
    4. 's' → logprob: -5.587718486785889
    5. '=[]' → logprob: -7.962718486785889
    6. '=[' → logprob: -9.462718963623047
    7. 'ITIONS' → logprob: -10.712718963623047
    8. 'is' → logprob: -11.462718963623047
    9. 'itations' → logprob: -11.587718963623047
    10. '   ' → logprob: -11.712718963623047

Token 298: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11697350442409515
    2. '[p' → logprob: -2.866973400115967
    3. ' [' → logprob: -3.616973400115967
    4. '[get' → logprob: -4.116973400115967
    5. '[list' → logprob: -4.616973400115967
    6. '[]' → logprob: -8.366973876953125
    7. '[pos' → logprob: -10.741973876953125
    8. '[List' → logprob: -10.741973876953125
    9. '[len' → logprob: -10.866973876953125
    10. '[player' → logprob: -10.991973876953125

Token 299: 'get' (ID: 522)
  Prédit: 'get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.0005608965293504298
    2. '[get' → logprob: -7.500560760498047
    3. ' get' → logprob: -11.750560760498047
    4. '(get' → logprob: -17.500560760498047
    5. '.get' → logprob: -18.500560760498047
    6. '=get' → logprob: -19.000560760498047
    7. '[' → logprob: -19.750560760498047
    8. '	get' → logprob: -19.875560760498047
    9. ' [' → logprob: -20.250560760498047
    10. 'list' → logprob: -20.375560760498047

Token 300: '_pattern' (ID: 50002)
  Prédit: '_pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -0.16059698164463043
    2. 'pattern' → logprob: -1.9105969667434692
    3. 'p' → logprob: -8.66059684753418
    4. '_positions' → logprob: -9.41059684753418
    5. '(p' → logprob: -9.66059684753418
    6. 'positions' → logprob: -10.66059684753418
    7. '_p' → logprob: -11.66059684753418
    8. '(pattern' → logprob: -11.78559684753418
    9. 'pat' → logprob: -12.66059684753418
    10. ' pattern' → logprob: -12.91059684753418

Token 301: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.0789060890674591
    2. 'positions' → logprob: -2.5789060592651367
    3. 's' → logprob: -11.953906059265137
    4. 'Positions' → logprob: -12.453906059265137
    5. ' positions' → logprob: -13.203906059265137
    6. 'p' → logprob: -13.703906059265137
    7. '(p' → logprob: -14.078906059265137
    8. 'pattern' → logprob: -14.453906059265137
    9. '```' → logprob: -14.828906059265137
    10. '_patterns' → logprob: -15.328906059265137

Token 302: '(pt' (ID: 73498)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.12754583358764648
    2. '(pattern' → logprob: -2.1275458335876465
    3. '(' → logprob: -8.252546310424805
    4. 'pattern' → logprob: -9.002546310424805
    5. '](' → logprob: -9.627546310424805
    6. '(pt' → logprob: -9.752546310424805
    7. ' (' → logprob: -10.377546310424805
    8. 'pat' → logprob: -10.502546310424805
    9. '(x' → logprob: -11.502546310424805
    10. 'p' → logprob: -11.752546310424805

Token 303: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001895935565698892
    2. '(p' → logprob: -8.750189781188965
    3. ')]' → logprob: -11.250189781188965
    4. ')
' → logprob: -12.125189781188965
    5. 'for' → logprob: -12.250189781188965
    6. ' )' → logprob: -13.250189781188965
    7. '(' → logprob: -13.375189781188965
    8. '())' → logprob: -13.500189781188965
    9. ']' → logprob: -14.000189781188965
    10. ')p' → logprob: -14.250189781188965

Token 304: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.014238494448363781
    2. 'for' → logprob: -4.264238357543945
    3. '       ' → logprob: -10.264238357543945
    4. '	for' → logprob: -10.764238357543945
    5. ')' → logprob: -11.764238357543945
    6. '   ' → logprob: -12.514238357543945
    7. '<|end|>' → logprob: -12.889238357543945
    8. '
' → logprob: -13.139238357543945
    9. ' ' → logprob: -14.264238357543945
    10. '           ' → logprob: -14.514238357543945

Token 305: ' pt' (ID: 18961)
  Prédit: 'pt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pt' → logprob: -0.02435438707470894
    2. ' pt' → logprob: -3.7743544578552246
    3. 'patterns' → logprob: -6.899354457855225
    4. ' patterns' → logprob: -9.524353981018066
    5. 'pat' → logprob: -11.399353981018066
    6. 'p' → logprob: -11.899353981018066
    7. 'pattern' → logprob: -12.399353981018066
    8. '	pt' → logprob: -13.274353981018066
    9. '_pt' → logprob: -13.774353981018066
    10. '_' → logprob: -14.774353981018066

Token 306: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.13025729358196259
    2. 'patterns' → logprob: -2.5052573680877686
    3. ' patterns' → logprob: -3.3802573680877686
    4. 'in' → logprob: -5.1302571296691895
    5. 'pt' → logprob: -8.005257606506348
    6. ' pt' → logprob: -9.505257606506348
    7. '_patterns' → logprob: -10.380257606506348
    8. 'p' → logprob: -10.630257606506348
    9. 'pat' → logprob: -10.880257606506348
    10. ' ' → logprob: -11.255257606506348

Token 307: ' patterns' (ID: 18587)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -0.029752686619758606
    2. ' patterns' → logprob: -3.529752731323242
    3. 'pattern' → logprob: -13.279752731323242
    4. '
' → logprob: -15.779752731323242
    5. 'pat' → logprob: -15.779752731323242
    6. ' ' → logprob: -17.154752731323242
    7. '   ' → logprob: -17.404752731323242
    8. '_patterns' → logprob: -17.904752731323242
    9. 'p' → logprob: -18.654752731323242
    10. '[' → logprob: -18.904752731323242

Token 308: ']

' (ID: 3144)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19936531782150269
    2. '

' → logprob: -2.4493653774261475
    3. '<|end|>' → logprob: -2.4493653774261475
    4. ']' → logprob: -5.949365139007568
    5. '   ' → logprob: -6.199365139007568
    6. ')' → logprob: -6.449365139007568
    7. '<|end|>' → logprob: -7.324365139007568
    8. '       ' → logprob: -7.449365139007568
    9. '```' → logprob: -8.449365615844727
    10. '    
' → logprob: -9.324365615844727

Token 309: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2285313904285431
    2. 'count' → logprob: -1.8535313606262207
    3. 'matches' → logprob: -4.353531360626221
    4. 'counts' → logprob: -4.353531360626221
    5. '   ' → logprob: -5.103531360626221
    6. 'results' → logprob: -5.353531360626221
    7. 'result' → logprob: -5.728531360626221
    8. '
' → logprob: -6.103531360626221
    9. 'for' → logprob: -6.228531360626221
    10. '        
' → logprob: -6.728531360626221

Token 310: ' candidates' (ID: 18116)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5749356150627136
    2. 'counts' → logprob: -0.9499356150627136
    3. 'results' → logprob: -3.4499356746673584
    4. 'for' → logprob: -5.449935436248779
    5. '       ' → logprob: -5.574935436248779
    6. 'result' → logprob: -5.699935436248779
    7. 'cnt' → logprob: -5.949935436248779
    8. 'matches' → logprob: -6.574935436248779
    9. 'res' → logprob: -6.699935436248779
    10. 'ans' → logprob: -7.074935436248779

Token 311: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00862521305680275
    2. '=' → logprob: -4.758625030517578
    3. '=[]' → logprob: -11.633625030517578
    4. ',' → logprob: -14.258625030517578
    5. ' ' → logprob: -15.508625030517578
    6. 's' → logprob: -15.633625030517578
    7. ':' → logprob: -16.008625030517578
    8. '   ' → logprob: -16.008625030517578
    9. '```' → logprob: -16.383625030517578
    10. '=[]
' → logprob: -16.633625030517578

Token 312: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.01573565974831581
    2. '[]
' → logprob: -4.265735626220703
    3. '0' → logprob: -6.640735626220703
    4. '[]

' → logprob: -8.515735626220703
    5. '[(' → logprob: -10.015735626220703
    6. 'set' → logprob: -11.765735626220703
    7. ' []' → logprob: -12.765735626220703
    8. '[' → logprob: -13.265735626220703
    9. '[])' → logprob: -13.265735626220703
    10. '{}' → logprob: -13.390735626220703

Token 313: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004466793034225702
    2. ' for' → logprob: -6.004467010498047
    3. 'for' → logprob: -6.254467010498047
    4. '   ' → logprob: -9.629467010498047
    5. '           ' → logprob: -14.504467010498047
    6. '
' → logprob: -14.629467010498047
    7. '	for' → logprob: -15.754467010498047
    8. '        
' → logprob: -16.004467010498047
    9. '```' → logprob: -16.504467010498047
    10. ' ' → logprob: -16.629467010498047

Token 314: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.12126670032739639
    2. '       ' → logprob: -2.3712666034698486
    3. ' for' → logprob: -3.8712666034698486
    4. '   ' → logprob: -12.24626636505127
    5. '	for' → logprob: -13.74626636505127
    6. ' ' → logprob: -13.87126636505127
    7. '```' → logprob: -14.49626636505127
    8. '
' → logprob: -15.62126636505127
    9. '        
' → logprob: -15.99626636505127
    10. '``' → logprob: -16.121267318725586

Token 315: ' k' (ID: 372)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.08502531051635742
    2. 'i' → logprob: -2.8350253105163574
    3. 'rot' → logprob: -5.335025310516357
    4. ' x' → logprob: -5.460025310516357
    5. 'pattern' → logprob: -5.710025310516357
    6. 'pt' → logprob: -5.835025310516357
    7. '_x' → logprob: -6.335025310516357
    8. 'pat' → logprob: -6.835025310516357
    9. 'r' → logprob: -6.960025310516357
    10. '_' → logprob: -6.960025310516357

Token 316: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5761575102806091
    2. ' in' → logprob: -0.8261575102806091
    3. ',' → logprob: -8.701157569885254
    4. 'range' → logprob: -10.076157569885254
    5. '```' → logprob: -12.826157569885254
    6. '
' → logprob: -13.201157569885254
    7. ')' → logprob: -13.701157569885254
    8. '   ' → logprob: -13.951157569885254
    9. ' ' → logprob: -13.951157569885254
    10. ' range' → logprob: -14.951157569885254

Token 317: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002445317804813385
    2. ' range' → logprob: -8.375244140625
    3. '[' → logprob: -12.250244140625
    4. 'pattern' → logprob: -12.250244140625
    5. 'patterns' → logprob: -13.625244140625
    6. '
' → logprob: -14.375244140625
    7. 'r' → logprob: -14.500244140625
    8. '   ' → logprob: -14.875244140625
    9. '(range' → logprob: -15.375244140625
    10. 'ran' → logprob: -15.625244140625

Token 318: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003657362540252507
    2. '(len' → logprob: -8.5003662109375
    3. '4' → logprob: -8.7503662109375
    4. 'len' → logprob: -13.3753662109375
    5. '(k' → logprob: -14.3753662109375
    6. ' (' → logprob: -14.3753662109375
    7. '   ' → logprob: -15.5003662109375
    8. '(
' → logprob: -15.6253662109375
    9. '
' → logprob: -15.7503662109375
    10. ' ' → logprob: -16.1253662109375

Token 319: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -9.209963900502771e-05
    2. 'len' → logprob: -9.375092506408691
    3. '
' → logprob: -13.125092506408691
    4. ' ' → logprob: -13.625092506408691
    5. '0' → logprob: -13.625092506408691
    6. '   ' → logprob: -14.500092506408691
    7. '```' → logprob: -14.937592506408691
    8. '1' → logprob: -14.937592506408691
    9. 'k' → logprob: -15.312592506408691
    10. ' len' → logprob: -15.937592506408691

Token 320: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0790850892663002
    2. '):' → logprob: -2.579085111618042
    3. '):
' → logprob: -9.204085350036621
    4. ':' → logprob: -10.204085350036621
    5. ':
' → logprob: -10.704085350036621
    6. '       ' → logprob: -10.954085350036621
    7. ' ):
' → logprob: -11.579085350036621
    8. '   ' → logprob: -12.204085350036621
    9. ')' → logprob: -13.829085350036621
    10. '):

' → logprob: -14.454085350036621

Token 321: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015300665982067585
    2. '       ' → logprob: -4.515300750732422
    3. 'for' → logprob: -6.015300750732422
    4. ' for' → logprob: -6.515300750732422
    5. '   ' → logprob: -8.640300750732422
    6. ':' → logprob: -9.640300750732422
    7. '
' → logprob: -10.515300750732422
    8. ',' → logprob: -10.765300750732422
    9. ':
' → logprob: -11.890300750732422
    10. '#' → logprob: -12.015300750732422

Token 322: ' p' (ID: 275)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08741886913776398
    2. '           ' → logprob: -2.962418794631958
    3. ' for' → logprob: -3.712418794631958
    4. '       ' → logprob: -5.587419033050537
    5. '   ' → logprob: -6.712419033050537
    6. 'count' → logprob: -7.087419033050537
    7. 'pattern' → logprob: -7.962419033050537
    8. '               ' → logprob: -8.087418556213379
    9. 'x' → logprob: -8.462418556213379
    10. 'pat' → logprob: -8.712418556213379

Token 323: 'pos' (ID: 1103)
  Prédit: '_positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.058276016265153885
    2. '_pos' → logprob: -3.5582759380340576
    3. 'positions' → logprob: -4.058276176452637
    4. 'os' → logprob: -5.058276176452637
    5. '=' → logprob: -6.183276176452637
    6. ' =' → logprob: -7.058276176452637
    7. 'pos' → logprob: -7.308276176452637
    8. '_len' → logprob: -7.683276176452637
    9. '_size' → logprob: -8.933276176452637
    10. 'p' → logprob: -9.558276176452637

Token 324: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07892272621393204
    2. ' =' → logprob: -2.578922748565674
    3. 'for' → logprob: -10.453922271728516
    4. ',' → logprob: -13.078922271728516
    5. ' for' → logprob: -13.953922271728516
    6. ')' → logprob: -14.828922271728516
    7. '=
' → logprob: -15.328922271728516
    8. ' in' → logprob: -15.578922271728516
    9. ' ' → logprob: -15.828922271728516
    10. '=k' → logprob: -16.828922271728516

Token 325: ' patterns' (ID: 18587)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -0.023251185193657875
    2. ' patterns' → logprob: -3.7732512950897217
    3. 'pattern' → logprob: -12.1482515335083
    4. '_patterns' → logprob: -15.8982515335083
    5. 'pat' → logprob: -16.023250579833984
    6. 'attern' → logprob: -16.898250579833984
    7. '(pattern' → logprob: -17.148250579833984
    8. ' ' → logprob: -17.148250579833984
    9. '       ' → logprob: -17.898250579833984
    10. '   ' → logprob: -18.023250579833984

Token 326: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.00932853389531374
    2. 'pos' → logprob: -4.759328365325928
    3. '[k' → logprob: -7.634328365325928
    4. 'positions' → logprob: -9.634328842163086
    5. '_positions' → logprob: -9.759328842163086
    6. 'k' → logprob: -10.134328842163086
    7. '[pos' → logprob: -10.509328842163086
    8. 'Pos' → logprob: -10.884328842163086
    9. 's' → logprob: -11.759328842163086
    10. '```' → logprob: -12.509328842163086

Token 327: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -2.451116051815916e-05
    2. 'k' → logprob: -11.250024795532227
    3. '
' → logprob: -11.750024795532227
    4. '(k' → logprob: -13.250024795532227
    5. '           ' → logprob: -14.125024795532227
    6. '       ' → logprob: -15.375024795532227
    7. '[' → logprob: -15.875024795532227
    8. '   ' → logprob: -16.125024795532227
    9. ',k' → logprob: -16.250024795532227
    10. '][' → logprob: -16.375024795532227

Token 328: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -1.1434615850448608
    2. ']
' → logprob: -1.6434615850448608
    3. '           ' → logprob: -1.6434615850448608
    4. ')' → logprob: -1.8934615850448608
    5. '
' → logprob: -2.3934617042541504
    6. ']' → logprob: -3.2684617042541504
    7. '       ' → logprob: -4.89346170425415
    8. 'for' → logprob: -5.76846170425415
    9. ' for' → logprob: -6.64346170425415
    10. '               ' → logprob: -6.89346170425415

Token 329: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009271129034459591
    2. 'for' → logprob: -5.134271144866943
    3. ' for' → logprob: -5.884271144866943
    4. '       ' → logprob: -7.759271144866943
    5. '   ' → logprob: -9.009270668029785
    6. '               ' → logprob: -13.509270668029785
    7. '```' → logprob: -14.634270668029785
    8. '
' → logprob: -14.759270668029785
    9. ',' → logprob: -14.759270668029785
    10. ' ' → logprob: -14.884270668029785

Token 330: ' max' (ID: 2999)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0024372583720833063
    2. 'max' (adapté à ' max') → logprob: -6.502437114715576
    3. '           ' → logprob: -7.877437114715576
    4. 'limit' → logprob: -8.127437591552734
    5. 'h' → logprob: -9.127437591552734
    6. '       ' → logprob: -10.252437591552734
    7. ' for' → logprob: -10.377437591552734
    8. 'pattern' → logprob: -11.002437591552734
    9. 'pat' → logprob: -11.377437591552734
    10. 'p' → logprob: -11.752437591552734

Token 331: '_i' (ID: 10853)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.6184659004211426
    2. '_i' → logprob: -1.4934659004211426
    3. '_count' → logprob: -2.2434659004211426
    4. 'x' → logprob: -2.7434659004211426
    5. 'count' → logprob: -3.3684659004211426
    6. 'i' → logprob: -4.493465900421143
    7. '_cnt' → logprob: -5.368465900421143
    8. '_pos' → logprob: -5.493465900421143
    9. '_match' → logprob: -5.993465900421143
    10. 'cnt' → logprob: -6.368465900421143

Token 332: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16030526161193848
    2. ' =' → logprob: -1.9103052616119385
    3. 'range' → logprob: -10.03530502319336
    4. 'for' → logprob: -11.28530502319336
    5. ' for' → logprob: -12.53530502319336
    6. '=n' → logprob: -12.78530502319336
    7. ' range' → logprob: -12.91030502319336
    8. ',' → logprob: -13.03530502319336
    9. ' in' → logprob: -13.03530502319336
    10. 'ange' → logprob: -13.16030502319336

Token 333: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0017231308156624436
    2. ' n' → logprob: -6.376723289489746
    3. 'len' → logprob: -11.126723289489746
    4. '   ' → logprob: -12.626723289489746
    5. '(n' → logprob: -14.126723289489746
    6. '
' → logprob: -14.251723289489746
    7. '       ' → logprob: -15.001723289489746
    8. '           ' → logprob: -15.251723289489746
    9. '[n' → logprob: -15.376723289489746
    10. '0' → logprob: -15.626723289489746

Token 334: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.048738718032836914
    2. '-' → logprob: -3.048738718032837
    3. '-m' → logprob: -8.798738479614258
    4. '-k' → logprob: -15.673738479614258
    5. ' ' → logprob: -16.673738479614258
    6. '   ' → logprob: -16.923738479614258
    7. '-M' → logprob: -17.798738479614258
    8. '-p' → logprob: -18.298738479614258
    9. '
' → logprob: -18.673738479614258
    10. '-s' → logprob: -18.923738479614258

Token 335: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.011529813520610332
    2. 'len' → logprob: -4.636529922485352
    3. ' m' → logprob: -6.511529922485352
    4. ' len' → logprob: -8.886529922485352
    5. '(len' → logprob: -9.511529922485352
    6. ' (' → logprob: -9.886529922485352
    7. '(m' → logprob: -11.386529922485352
    8. '   ' → logprob: -11.886529922485352
    9. ' ' → logprob: -13.761529922485352
    10. '(' → logprob: -13.886529922485352

Token 336: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20773766934871674
    2. ' +' → logprob: -1.707737684249878
    3. '           ' → logprob: -5.082737445831299
    4. '       ' → logprob: -9.832737922668457
    5. '+
' → logprob: -10.832737922668457
    6. '   ' → logprob: -11.207737922668457
    7. '
' → logprob: -11.832737922668457
    8. '+k' → logprob: -13.207737922668457
    9. '               ' → logprob: -14.332737922668457
    10. ' ' → logprob: -14.707737922668457

Token 337: '           ' (ID: 352)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.40746593475341797
    2. ' +' → logprob: -1.157465934753418
    3. '           ' → logprob: -4.032465934753418
    4. '       ' → logprob: -6.532465934753418
    5. '
' → logprob: -7.407465934753418
    6. '   ' → logprob: -8.157465934753418
    7. '+
' → logprob: -8.282465934753418
    8. ' +
' → logprob: -11.532465934753418
    9. ' 
' → logprob: -12.032465934753418
    10. ' for' → logprob: -12.157465934753418

Token 338: ' max' (ID: 2999)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5953782796859741
    2. 'for' → logprob: -1.3453782796859741
    3. '+' → logprob: -1.8453782796859741
    4. ' +' → logprob: -3.9703783988952637
    5. '           ' → logprob: -5.220378398895264
    6. '       ' → logprob: -5.345378398895264
    7. '   ' → logprob: -7.720378398895264
    8. '
' → logprob: -8.220377922058105
    9. ' ' → logprob: -8.470377922058105
    10. '1' → logprob: -9.720377922058105

Token 339: '_j' (ID: 12021)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00022916549642104656
    2. '+' → logprob: -9.375228881835938
    3. '   ' → logprob: -10.250228881835938
    4. '=' → logprob: -10.625228881835938
    5. '           ' → logprob: -11.125228881835938
    6. '_j' → logprob: -11.375228881835938
    7. ' _' → logprob: -11.500228881835938
    8. ' =' → logprob: -11.625228881835938
    9. ' +' → logprob: -12.125228881835938
    10. 'i' → logprob: -12.125228881835938

Token 340: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859680309891701
    2. '=' → logprob: -3.0485968589782715
    3. ' ' → logprob: -11.673596382141113
    4. '<|end|>' → logprob: -14.423596382141113
    5. ' =
' → logprob: -15.923596382141113
    6. ')' → logprob: -16.67359733581543
    7. ' =)' → logprob: -16.67359733581543
    8. ',' → logprob: -17.67359733581543
    9. '	' → logprob: -17.92359733581543
    10. '<|end|>' → logprob: -17.92359733581543

Token 341: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3132683336734772
    2. ' n' → logprob: -1.3132683038711548
    3. '   ' → logprob: -13.188268661499023
    4. '	n' → logprob: -13.188268661499023
    5. ' ' → logprob: -14.188268661499023
    6. '       ' → logprob: -14.313268661499023
    7. '    ' → logprob: -15.063268661499023
    8. '0' → logprob: -15.313268661499023
    9. '           ' → logprob: -15.438268661499023
    10. '=n' → logprob: -15.938268661499023

Token 342: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0007102862582542002
    2. '-' → logprob: -7.250710487365723
    3. ' ' → logprob: -15.500710487365723
    4. '-m' → logprob: -17.375709533691406
    5. '   ' → logprob: -17.375709533691406
    6. '<|end|>' → logprob: -17.625709533691406
    7. ' –' → logprob: -19.250709533691406
    8. '       ' → logprob: -19.375709533691406
    9. '<|end|>' → logprob: -19.500709533691406
    10. '  ' → logprob: -19.625709533691406

Token 343: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0008046258008107543
    2. ' m' → logprob: -7.125804424285889
    3. 'p' → logprob: -15.625804901123047
    4. ' ' → logprob: -16.750804901123047
    5. '(m' → logprob: -17.125804901123047
    6. '           ' → logprob: -18.000804901123047
    7. 'n' → logprob: -18.125804901123047
    8. '   ' → logprob: -18.250804901123047
    9. '	m' → logprob: -18.875804901123047
    10. '_m' → logprob: -19.125804901123047

Token 344: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.031734760850667953
    2. '
' → logprob: -3.5317347049713135
    3. '<|end|>' → logprob: -6.656734943389893
    4. '   ' → logprob: -8.781734466552734
    5. '  
' → logprob: -8.906734466552734
    6. '       ' → logprob: -9.281734466552734
    7. '<|end|>' → logprob: -9.531734466552734
    8. ' for' → logprob: -9.531734466552734
    9. '            
' → logprob: -9.656734466552734
    10. 'for' → logprob: -11.031734466552734

Token 345: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1296006292104721
    2. '           ' → logprob: -2.1296005249023438
    3. ' for' → logprob: -6.629600524902344
    4. '<|end|>' → logprob: -7.879600524902344
    5. '       ' → logprob: -8.504600524902344
    6. '   ' → logprob: -8.504600524902344
    7. '  
' → logprob: -8.629600524902344
    8. '
' → logprob: -9.504600524902344
    9. 'for' → logprob: -9.629600524902344
    10. '            
' → logprob: -9.879600524902344

Token 346: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05421097204089165
    2. 'for' (adapté à ' for') → logprob: -3.804210901260376
    3. '
' → logprob: -4.429211139678955
    4. '           ' → logprob: -4.804211139678955
    5. '       ' → logprob: -4.929211139678955
    6. '   ' → logprob: -6.429211139678955
    7. '	for' → logprob: -7.054211139678955
    8. ' ' → logprob: -8.304210662841797
    9. '<|end|>' → logprob: -8.429210662841797
    10. ' 
' → logprob: -9.679210662841797

Token 347: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002512047067284584
    2. ' i' → logprob: -6.377511978149414
    3. 'x' → logprob: -7.127511978149414
    4. ' x' → logprob: -12.627511978149414
    5. '   ' → logprob: -13.502511978149414
    6. '_i' → logprob: -13.502511978149414
    7. '	i' → logprob: -15.252511978149414
    8. ' ' → logprob: -15.502511978149414
    9. '```' → logprob: -16.127511978149414
    10. '  ' → logprob: -17.002511978149414

Token 348: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1602255403995514
    2. 'in' → logprob: -1.910225510597229
    3. '```' → logprob: -15.160225868225098
    4. ')' → logprob: -15.535225868225098
    5. ' ' → logprob: -15.535225868225098
    6. '	in' → logprob: -16.16022491455078
    7. 'to' → logprob: -16.53522491455078
    8. '   ' → logprob: -16.66022491455078
    9. 'In' → logprob: -16.78522491455078
    10. '0' → logprob: -16.91022491455078

Token 349: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031830633524805307
    2. ' range' → logprob: -5.753182888031006
    3. ' ' → logprob: -13.253183364868164
    4. '   ' → logprob: -13.378183364868164
    5. '(range' → logprob: -14.003183364868164
    6. 'in' → logprob: -15.253183364868164
    7. ')' → logprob: -15.253183364868164
    8. '  ' → logprob: -15.628183364868164
    9. ' in' → logprob: -15.628183364868164
    10. '
' → logprob: -15.628183364868164

Token 350: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.00023154958034865558
    2. '(' → logprob: -9.000231742858887
    3. 'max' → logprob: -9.750231742858887
    4. ' (' → logprob: -10.625231742858887
    5. '(n' → logprob: -11.125231742858887
    6. ' max' → logprob: -11.750231742858887
    7. '(
' → logprob: -14.500231742858887
    8. '   ' → logprob: -14.625231742858887
    9. '	max' → logprob: -14.875231742858887
    10. '(m' → logprob: -15.125231742858887

Token 351: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.001784418011084199
    2. '_j' → logprob: -6.376784324645996
    3. '(max' → logprob: -10.251784324645996
    4. '(' → logprob: -11.376784324645996
    5. '(i' → logprob: -11.626784324645996
    6. ')' → logprob: -12.376784324645996
    7. 'i' → logprob: -12.376784324645996
    8. '(n' → logprob: -12.501784324645996
    9. 'max' → logprob: -13.501784324645996
    10. '
' → logprob: -13.501784324645996

Token 352: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.026383548974990845
    2. ' +' → logprob: -3.651383638381958
    3. '):
' → logprob: -9.651383399963379
    4. '):' → logprob: -11.526383399963379
    5. '+
' → logprob: -12.026383399963379
    6. '   ' → logprob: -14.401383399963379
    7. '+k' → logprob: -14.526383399963379
    8. ' +
' → logprob: -15.276383399963379
    9. '
' → logprob: -15.401383399963379
    10. '+m' → logprob: -15.901383399963379

Token 353: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011734402505680919
    2. ' ' → logprob: -6.751173496246338
    3. '   ' → logprob: -12.87617301940918
    4. ')' → logprob: -15.75117301940918
    5. '  ' → logprob: -16.12617301940918
    6. '           ' → logprob: -16.12617301940918
    7. '       ' → logprob: -16.81367301940918
    8. '=' → logprob: -17.00117301940918
    9. '):
' → logprob: -17.00117301940918
    10. '    ' → logprob: -17.68867301940918

Token 354: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3871140480041504
    2. '):' → logprob: -1.1371140480041504
    3. ':' → logprob: -9.887113571166992
    4. '):
' → logprob: -9.887113571166992
    5. '       ' → logprob: -10.262113571166992
    6. '               ' → logprob: -10.512113571166992
    7. '           ' → logprob: -10.512113571166992
    8. '):

' → logprob: -10.762113571166992
    9. ')' → logprob: -11.387113571166992
    10. '   ' → logprob: -12.012113571166992

Token 355: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0013059526681900024
    2. '<|end|>' → logprob: -7.376306056976318
    3. ' for' → logprob: -8.12630558013916
    4. '       ' → logprob: -8.62630558013916
    5. '           ' → logprob: -9.00130558013916
    6. '                
' → logprob: -11.25130558013916
    7. '	       ' → logprob: -11.37630558013916
    8. '	           ' → logprob: -11.50130558013916
    9. '		       ' → logprob: -11.87630558013916
    10. '   ' → logprob: -12.25130558013916

Token 356: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.21626201272010803
    2. '               ' → logprob: -2.091262102127075
    3. '                   ' → logprob: -3.341262102127075
    4. '           ' → logprob: -3.591262102127075
    5. '       ' → logprob: -5.466261863708496
    6. 'for' (adapté à ' for') → logprob: -6.341261863708496
    7. '   ' → logprob: -7.591261863708496
    8. '                ' → logprob: -8.341261863708496
    9. ' ' → logprob: -8.466261863708496
    10. '<|end|>' → logprob: -8.591261863708496

Token 357: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2014189064502716
    2. ' j' → logprob: -1.7014188766479492
    3. '                   ' → logprob: -12.57641887664795
    4. '               ' → logprob: -14.20141887664795
    5. '           ' → logprob: -14.32641887664795
    6. '   ' → logprob: -14.70141887664795
    7. '	j' → logprob: -15.95141887664795
    8. '    ' → logprob: -16.326419830322266
    9. ' ' → logprob: -16.451419830322266
    10. '  ' → logprob: -17.326419830322266

Token 358: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007606627885252237
    2. 'in' → logprob: -4.882606506347656
    3. ' ' → logprob: -15.507606506347656
    4. '<|end|>' → logprob: -16.757606506347656
    5. '```' → logprob: -17.257606506347656
    6. 'import' → logprob: -17.507606506347656
    7. ')' → logprob: -17.632606506347656
    8. 'In' → logprob: -17.632606506347656
    9. '1' → logprob: -17.757606506347656
    10. ',' → logprob: -17.757606506347656

Token 359: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20141996443271637
    2. ' range' → logprob: -1.7014199495315552
    3. '(range' → logprob: -12.076419830322266
    4. 'max' → logprob: -13.951419830322266
    5. '(max' → logprob: -17.951419830322266
    6. ' max' → logprob: -18.076419830322266
    7. ' ' → logprob: -18.701419830322266
    8. '	range' → logprob: -18.951419830322266
    9. '_range' → logprob: -19.451419830322266
    10. '0' → logprob: -19.701419830322266

Token 360: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -4.723352049040841e-06
    2. ' (' → logprob: -13.125004768371582
    3. '(' → logprob: -13.750004768371582
    4. 'max' → logprob: -13.750004768371582
    5. '(range' → logprob: -15.375004768371582
    6. 'range' → logprob: -16.625003814697266
    7. '((' → logprob: -17.250003814697266
    8. '[max' → logprob: -17.375003814697266
    9. ' max' → logprob: -17.500003814697266
    10. '=max' → logprob: -17.625003814697266

Token 361: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.08382990956306458
    2. '_i' → logprob: -2.833829879760742
    3. '+' → logprob: -4.083829879760742
    4. 'max' → logprob: -6.333829879760742
    5. '(' → logprob: -6.958829879760742
    6. '(max' → logprob: -7.083829879760742
    7. '(m' → logprob: -7.833829879760742
    8. '1' → logprob: -8.083829879760742
    9. 'pos' → logprob: -8.708829879760742
    10. 'j' → logprob: -9.208829879760742

Token 362: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.9981420336989686e-05
    2. '()+' → logprob: -11.500020027160645
    3. ' +' → logprob: -11.875020027160645
    4. ')+' → logprob: -13.000020027160645
    5. '):
' → logprob: -15.375020027160645
    6. '):' → logprob: -16.375019073486328
    7. '+
' → logprob: -16.625019073486328
    8. '1' → logprob: -17.125019073486328
    9. ']+' → logprob: -17.250019073486328
    10. '+k' → logprob: -17.750019073486328

Token 363: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -12.500003814697266
    3. '+' → logprob: -14.750003814697266
    4. 'n' → logprob: -17.625003814697266
    5. '   ' → logprob: -17.750003814697266
    6. '(n' → logprob: -18.750003814697266
    7. '0' → logprob: -19.125003814697266
    8. ')' → logprob: -19.500003814697266
    9. '
' → logprob: -20.250003814697266
    10. 'i' → logprob: -20.500003814697266

Token 364: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.17501449584960938
    2. ':
' → logprob: -2.4250144958496094
    3. '):' → logprob: -3.6750144958496094
    4. '                   ' → logprob: -3.6750144958496094
    5. ':' → logprob: -3.9250144958496094
    6. '():
' → logprob: -6.925014495849609
    7. '               ' → logprob: -8.05001449584961
    8. '                       ' → logprob: -9.05001449584961
    9. '):
' → logprob: -9.30001449584961
    10. '           ' → logprob: -10.42501449584961

Token 365: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0009948217775672674
    2. '           ' → logprob: -7.500994682312012
    3. ' if' → logprob: -8.500994682312012
    4. '               ' → logprob: -9.875994682312012
    5. '
' → logprob: -10.000994682312012
    6. '                       ' → logprob: -10.125994682312012
    7. 'if' → logprob: -10.250994682312012
    8. '                    
' → logprob: -11.125994682312012
    9. '```' → logprob: -11.500994682312012
    10. '                  ' → logprob: -11.875994682312012

Token 366: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.011937681585550308
    2. ' if' → logprob: -4.511937618255615
    3. '                       ' → logprob: -7.136937618255615
    4. '                   ' → logprob: -9.511938095092773
    5. '               ' → logprob: -11.886938095092773
    6. '       ' → logprob: -12.261938095092773
    7. '   ' → logprob: -12.511938095092773
    8. '           ' → logprob: -13.136938095092773
    9. '	if' → logprob: -13.136938095092773
    10. '
' → logprob: -14.886938095092773

Token 367: ' match' (ID: 3981)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'match' → logprob: -0.47422972321510315
    2. ' match' → logprob: -0.9742296934127808
    3. ' all' → logprob: -9.84922981262207
    4. '(match' → logprob: -9.84922981262207
    5. 'all' → logprob: -10.72422981262207
    6. '                       ' → logprob: -11.72422981262207
    7. '                   ' → logprob: -11.72422981262207
    8. ' ' → logprob: -13.22422981262207
    9. '	match' → logprob: -13.22422981262207
    10. '                    ' → logprob: -13.72422981262207

Token 368: '_at' (ID: 8254)
  Prédit: '_at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_at' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -15.5
    3. 'at' → logprob: -16.375
    4. '           ' → logprob: -18.5
    5. 'At' → logprob: -18.75
    6. '   ' → logprob: -18.875
    7. ' _' → logprob: -19.125
    8. '	at' → logprob: -19.5
    9. '_AT' → logprob: -20.5
    10. '(_' → logprob: -20.75

Token 369: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -5.512236498361744e-07
    2. ' (' → logprob: -15.375000953674316
    3. '(' → logprob: -15.500000953674316
    4. 'w' → logprob: -16.75
    5. '(
' → logprob: -18.125
    6. '   ' → logprob: -18.375
    7. '[w' → logprob: -19.25
    8. ')' → logprob: -19.375
    9. '	w' → logprob: -20.125
    10. '(word' → logprob: -20.25

Token 370: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004363898187875748
    2. ' ,' → logprob: -5.754364013671875
    3. '(pp' → logprob: -7.254364013671875
    4. ',i' → logprob: -8.879364013671875
    5. ',c' → logprob: -9.379364013671875
    6. ',pos' → logprob: -9.629364013671875
    7. ',j' → logprob: -9.754364013671875
    8. ',p' → logprob: -9.879364013671875
    9. ',k' → logprob: -10.379364013671875
    10. ',w' → logprob: -11.129364013671875

Token 371: ' p' (ID: 275)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pp' → logprob: -1.4855663721391466e-05
    2. ' p' → logprob: -11.250015258789062
    3. 'p' → logprob: -13.750015258789062
    4. ' pp' → logprob: -15.375015258789062
    5. 'ppy' → logprob: -15.625015258789062
    6. 'patterns' → logprob: -16.000015258789062
    7. '(pp' → logprob: -16.125015258789062
    8. '	pp' → logprob: -16.625015258789062
    9. 'ppo' → logprob: -17.750015258789062
    10. 'pos' → logprob: -18.125015258789062

Token 372: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.010143466293811798
    2. 'pp' → logprob: -4.635143280029297
    3. '[pos' → logprob: -8.885143280029297
    4. 'positions' → logprob: -9.135143280029297
    5. 'os' → logprob: -9.760143280029297
    6. '_pos' → logprob: -10.135143280029297
    7. '[' → logprob: -11.260143280029297
    8. 'p' → logprob: -11.635143280029297
    9. '(pos' → logprob: -12.385143280029297
    10. '```' → logprob: -12.385143280029297

Token 373: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04872486740350723
    2. ',i' → logprob: -3.048724889755249
    3. ' ,' → logprob: -8.923725128173828
    4. 'i' → logprob: -13.173725128173828
    5. '   ' → logprob: -14.048725128173828
    6. '(i' → logprob: -14.548725128173828
    7. '[i' → logprob: -15.298725128173828
    8. ',
' → logprob: -15.923725128173828
    9. ' i' → logprob: -15.923725128173828
    10. ',k' → logprob: -15.923725128173828

Token 374: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001707540825009346
    2. ' i' → logprob: -6.376707553863525
    3. '                   ' → logprob: -12.501707077026367
    4. ')i' → logprob: -14.251707077026367
    5. '   ' → logprob: -15.126707077026367
    6. '	i' → logprob: -15.501707077026367
    7. ')' → logprob: -16.251707077026367
    8. '[i' → logprob: -16.626707077026367
    9. '(i' → logprob: -16.626707077026367
    10. '                       ' → logprob: -17.501707077026367

Token 375: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08067487925291061
    2. ',j' → logprob: -2.580674886703491
    3. ' ,' → logprob: -6.330674648284912
    4. 'j' → logprob: -14.08067512512207
    5. '   ' → logprob: -14.70567512512207
    6. ',
' → logprob: -15.33067512512207
    7. ',k' → logprob: -15.58067512512207
    8. '    ' → logprob: -15.70567512512207
    9. ' j' → logprob: -15.95567512512207
    10. '           ' → logprob: -16.08067512512207

Token 376: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00018065694894175977
    2. ' j' → logprob: -8.6251802444458
    3. ')' → logprob: -14.8751802444458
    4. '   ' → logprob: -15.3751802444458
    5. '<|end|>' → logprob: -16.000181198120117
    6. '    ' → logprob: -16.500181198120117
    7. '  ' → logprob: -16.875181198120117
    8. ' ' → logprob: -17.250181198120117
    9. '	j' → logprob: -17.500181198120117
    10. '           ' → logprob: -17.500181198120117

Token 377: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.25212791562080383
    2. '):' → logprob: -1.5021278858184814
    3. '                   ' → logprob: -9.752127647399902
    4. '):
' → logprob: -10.002127647399902
    5. '                       ' → logprob: -10.252127647399902
    6. ':' → logprob: -10.502127647399902
    7. ')' → logprob: -11.502127647399902
    8. '):

' → logprob: -11.752127647399902
    9. ' ):
' → logprob: -12.127127647399902
    10. ':
' → logprob: -12.877127647399902

Token 378: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00016766376211307943
    2. '                   ' → logprob: -9.375167846679688
    3. '                           ' → logprob: -10.375167846679688
    4. '                        
' → logprob: -10.625167846679688
    5. '                      ' → logprob: -12.000167846679688
    6. '
' → logprob: -12.125167846679688
    7. '               ' → logprob: -12.875167846679688
    8. '                        ' → logprob: -13.250167846679688
    9. '                     ' → logprob: -13.625167846679688
    10. ',' → logprob: -13.625167846679688

Token 379: ' #' (ID: 1069)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07113000005483627
    2. ' candidates' → logprob: -2.6961300373077393
    3. '                       ' → logprob: -7.07112979888916
    4. ' c' → logprob: -8.69612979888916
    5. '   ' → logprob: -9.32112979888916
    6. '       ' → logprob: -11.19612979888916
    7. '	c' → logprob: -11.32112979888916
    8. '_candidates' → logprob: -11.57112979888916
    9. '           ' → logprob: -11.69612979888916
    10. '                           ' → logprob: -12.07112979888916

Token 380: ' find' (ID: 1646)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0019793107639998198
    2. ' candidates' → logprob: -6.251979351043701
    3. '#' → logprob: -10.626978874206543
    4. '                   ' → logprob: -12.126978874206543
    5. 'candidate' → logprob: -12.376978874206543
    6. '                       ' → logprob: -12.376978874206543
    7. '   ' → logprob: -12.626978874206543
    8. ' c' → logprob: -12.751978874206543
    9. 'if' → logprob: -13.126978874206543
    10. 'for' → logprob: -14.376978874206543

Token 381: ' top' (ID: 2344)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.095963478088379
    2. 'positions' → logprob: -2.095963478088379
    3. '(k' → logprob: -2.095963478088379
    4. ' candidates' → logprob: -2.345963478088379
    5. '(j' → logprob: -3.220963478088379
    6. '_' → logprob: -3.345963478088379
    7. '_candidates' → logprob: -3.970963478088379
    8. 'k' → logprob: -4.095963478088379
    9. '(x' → logprob: -4.095963478088379
    10. 's' → logprob: -4.345963478088379

Token 382: '-left' (ID: 17007)
  Prédit: '_candidates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_candidates' → logprob: -0.8987065553665161
    2. '_left' → logprob: -1.8987065553665161
    3. '-left' → logprob: -2.3987064361572266
    4. ',' → logprob: -2.6487064361572266
    5. ',left' → logprob: -2.8987064361572266
    6. 'left' → logprob: -3.0237064361572266
    7. ' candidates' → logprob: -3.1487064361572266
    8. ',c' → logprob: -3.7737064361572266
    9. 'k' → logprob: -4.023706436157227
    10. 'x' → logprob: -4.273706436157227

Token 383: ' cell' (ID: 4206)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.008257700130343437
    2. '(c' → logprob: -5.758257865905762
    3. ' candidates' → logprob: -6.758257865905762
    4. 'x' → logprob: -7.758257865905762
    5. 'positions' → logprob: -7.883257865905762
    6. 'candidate' → logprob: -7.883257865905762
    7. '_candidates' → logprob: -8.008257865905762
    8. '(x' → logprob: -8.008257865905762
    9. 'if' → logprob: -8.133257865905762
    10. '                   ' → logprob: -8.258257865905762

Token 384: ' in' (ID: 306)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.006721298210322857
    2. ' candidates' → logprob: -6.756721496582031
    3. 'c' → logprob: -7.256721496582031
    4. 'x' → logprob: -7.881721496582031
    5. '(c' → logprob: -8.006721496582031
    6. 'candidate' → logprob: -8.006721496582031
    7. 'if' → logprob: -8.131721496582031
    8. '                           ' → logprob: -8.381721496582031
    9. 'positions' → logprob: -8.381721496582031
    10. 'cells' → logprob: -8.381721496582031

Token 385: ' pattern' (ID: 8302)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.31750476360321045
    2. 'w' → logprob: -1.5675047636032104
    3. ' candidates' → logprob: -3.5675048828125
    4. 'pp' → logprob: -4.8175048828125
    5. 'p' → logprob: -5.0675048828125
    6. 'positions' → logprob: -5.4425048828125
    7. ' w' → logprob: -5.9425048828125
    8. ' c' → logprob: -6.5675048828125
    9. 'candidate' → logprob: -6.8175048828125
    10. 'i' → logprob: -7.0675048828125

Token 386: ' with' (ID: 483)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.6528283953666687
    2. 'x' → logprob: -2.0278284549713135
    3. 'positions' → logprob: -2.1528284549713135
    4. 'top' → logprob: -3.1528284549713135
    5. 'cells' → logprob: -3.5278284549713135
    6. ',' → logprob: -3.6528284549713135
    7. 'min' → logprob: -3.7778284549713135
    8. 'pos' → logprob: -3.9028284549713135
    9. 'for' → logprob: -4.277828216552734
    10. 'found' → logprob: -4.652828216552734

Token 387: ' value' (ID: 1432)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.8253236413002014
    2. 'min' → logprob: -1.5753235816955566
    3. 'float' → logprob: -1.8253235816955566
    4. 'value' → logprob: -2.3253235816955566
    5. 'i' → logprob: -3.2003235816955566
    6. '-' → logprob: -3.7003235816955566
    7. 'p' → logprob: -4.950323581695557
    8. '0' → logprob: -5.075323581695557
    9. 'k' → logprob: -5.325323581695557
    10. 'x' → logprob: -6.700323581695557

Token 388: ' >=' (ID: 5064)
  Prédit: '=-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=-' → logprob: -1.3472315073013306
    2. '-' → logprob: -1.8472315073013306
    3. 'min' → logprob: -1.8472315073013306
    4. '=' → logprob: -2.597231388092041
    5. '!=-' → logprob: -2.972231388092041
    6. '>=' → logprob: -3.097231388092041
    7. '0' → logprob: -3.347231388092041
    8. '==-' → logprob: -3.472231388092041
    9. 'for' → logprob: -3.722231388092041
    10. ',' → logprob: -3.847231388092041

Token 389: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015268829884007573
    2. ' ' → logprob: -6.501526832580566
    3. '
' → logprob: -12.126526832580566
    4. '                   ' → logprob: -12.251526832580566
    5. '                       ' → logprob: -12.501526832580566
    6. '```' → logprob: -12.751526832580566
    7. '   ' → logprob: -13.376526832580566
    8. '               ' → logprob: -14.126526832580566
    9. '1' → logprob: -14.251526832580566
    10. '                           ' → logprob: -14.251526832580566

Token 390: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.046214111149311066
    2. ',' → logprob: -4.0462141036987305
    3. ':' → logprob: -4.6712141036987305
    4. '                        
' → logprob: -5.1712141036987305
    5. '<|end|>' → logprob: -5.2962141036987305
    6. ' =' → logprob: -6.2962141036987305
    7. ')' → logprob: -7.0462141036987305
    8. ' for' → logprob: -7.1712141036987305
    9. '                   ' → logprob: -8.04621410369873
    10. 'found' → logprob: -8.29621410369873

Token 391: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.024984871968626976
    2. 'top' → logprob: -4.774984836578369
    3. 'x' → logprob: -5.899984836578369
    4. ',' → logprob: -5.899984836578369
    5. 'found' → logprob: -6.274984836578369
    6. ' top' → logprob: -6.774984836578369
    7. '                           ' → logprob: -6.899984836578369
    8. 'for' → logprob: -7.149984836578369
    9. 'min' → logprob: -7.149984836578369
    10. '                        
' → logprob: -7.274984836578369

Token 392: ' min' (ID: 1349)
  Prédit: ' top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.38828909397125244
    2. 'top' → logprob: -2.138288974761963
    3. ' min' → logprob: -2.888288974761963
    4. ' tl' → logprob: -3.013288974761963
    5. 'tl' → logprob: -3.138288974761963
    6. 'min' (adapté à ' min') → logprob: -4.138288974761963
    7. '                       ' → logprob: -4.263288974761963
    8. ' x' → logprob: -5.138288974761963
    9. 'x' → logprob: -5.638288974761963
    10. ' for' → logprob: -5.888288974761963

Token 393: '_r' (ID: 3442)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.008848085068166256
    2. 'i' → logprob: -5.383848190307617
    3. '_x' → logprob: -5.883848190307617
    4. 'x' → logprob: -7.133848190307617
    5. '_row' → logprob: -8.633848190307617
    6. '(i' → logprob: -8.883848190307617
    7. '_pos' → logprob: -9.133848190307617
    8. '(' → logprob: -9.383848190307617
    9. 'pos' → logprob: -9.883848190307617
    10. 'I' → logprob: -11.633848190307617

Token 394: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06552642583847046
    2. ',min' → logprob: -3.6905264854431152
    3. '=' → logprob: -4.065526485443115
    4. ' =' → logprob: -4.440526485443115
    5. ',p' → logprob: -6.565526485443115
    6. ',j' → logprob: -6.565526485443115
    7. '=min' → logprob: -7.065526485443115
    8. ' ,' → logprob: -7.315526485443115
    9. ',x' → logprob: -7.315526485443115
    10. ',val' → logprob: -7.315526485443115

Token 395: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.018463045358657837
    2. ' min' → logprob: -4.768463134765625
    3. 'float' → logprob: -5.768463134765625
    4. 'pp' → logprob: -6.018463134765625
    5. '10' → logprob: -6.268463134765625
    6. 'patterns' → logprob: -6.518463134765625
    7. '100' → logprob: -8.393463134765625
    8. '999' → logprob: -8.393463134765625
    9. 'positions' → logprob: -8.893463134765625
    10. '1' → logprob: -9.393463134765625

Token 396: '(pos' (ID: 24566)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.10501396656036377
    2. '(pos' → logprob: -2.730013847351074
    3. '(x' → logprob: -4.230013847351074
    4. '([' → logprob: -4.855013847351074
    5. '(r' → logprob: -5.105013847351074
    6. '((' → logprob: -6.355013847351074
    7. '(' → logprob: -6.605013847351074
    8. '(t' → logprob: -6.855013847351074
    9. '(p' → logprob: -7.480013847351074
    10. '(row' → logprob: -8.355013847351074

Token 397: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003455741098150611
    2. 'for' → logprob: -6.378455638885498
    3. '[i' → logprob: -7.003455638885498
    4. '(i' → logprob: -7.753455638885498
    5. ' for' → logprob: -9.003456115722656
    6. 'i' → logprob: -9.253456115722656
    7. '_i' → logprob: -9.378456115722656
    8. '(' → logprob: -10.128456115722656
    9. '()[' → logprob: -11.628456115722656
    10. '_[' → logprob: -11.878456115722656

Token 398: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.584239938296378e-06
    2. '[' → logprob: -12.750007629394531
    3. ' ' → logprob: -12.875007629394531
    4. '<|end|>' → logprob: -15.125007629394531
    5. 'i' → logprob: -15.375007629394531
    6. '
' → logprob: -15.437507629394531
    7. '   ' → logprob: -15.562507629394531
    8. 'for' → logprob: -15.625007629394531
    9. '(' → logprob: -16.00000762939453
    10. '1' → logprob: -16.25000762939453

Token 399: ']' (ID: 60)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5317617058753967
    2. ' for' → logprob: -0.9067617058753967
    3. ']' → logprob: -4.781761646270752
    4. ')' → logprob: -9.40676212310791
    5. '	for' → logprob: -9.90676212310791
    6. '
' → logprob: -10.53176212310791
    7. ' ' → logprob: -10.90676212310791
    8. '   ' → logprob: -11.40676212310791
    9. '```' → logprob: -12.03176212310791
    10. '    ' → logprob: -12.40676212310791

Token 400: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5759931206703186
    2. 'for' → logprob: -0.8259931206703186
    3. '                       ' → logprob: -10.575993537902832
    4. '                   ' → logprob: -12.200993537902832
    5. '                           ' → logprob: -12.200993537902832
    6. '           ' → logprob: -12.450993537902832
    7. '	for' → logprob: -12.450993537902832
    8. '       ' → logprob: -13.200993537902832
    9. '   ' → logprob: -13.575993537902832
    10. ' ' → logprob: -13.575993537902832

Token 401: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.1009664386510849
    2. ' pos' → logprob: -2.350966453552246
    3. 'p' → logprob: -8.100966453552246
    4. ' p' → logprob: -8.100966453552246
    5. 'pp' → logprob: -9.725966453552246
    6. '	pos' → logprob: -10.350966453552246
    7. ',pos' → logprob: -11.913466453552246
    8. '(pos' → logprob: -11.975966453552246
    9. 'pt' → logprob: -12.225966453552246
    10. '[pos' → logprob: -12.475966453552246

Token 402: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10110760480165482
    2. 'in' → logprob: -2.351107597351074
    3. 'pos' → logprob: -7.351107597351074
    4. 's' → logprob: -9.476107597351074
    5. '<|end|>' → logprob: -10.226107597351074
    6. '
' → logprob: -10.476107597351074
    7. ' ' → logprob: -10.476107597351074
    8. ',pos' → logprob: -10.601107597351074
    9. ',' → logprob: -11.351107597351074
    10. ')' → logprob: -11.476107597351074

Token 403: ' p' (ID: 275)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pp' → logprob: -8.08944896562025e-05
    2. ' p' → logprob: -9.750081062316895
    3. 'patterns' → logprob: -12.000081062316895
    4. 'ppy' → logprob: -12.250081062316895
    5. '	pp' → logprob: -12.625081062316895
    6. 'p' → logprob: -12.875081062316895
    7. ' pp' → logprob: -13.375081062316895
    8. 'positions' → logprob: -14.375081062316895
    9. 'pt' → logprob: -14.500081062316895
    10. 'ppa' → logprob: -14.750081062316895

Token 404: 'pos' (ID: 1103)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.12785199284553528
    2. 'pos' → logprob: -2.877851963043213
    3. 'positions' → logprob: -3.877851963043213
    4. 'in' → logprob: -4.252851963043213
    5. '_positions' → logprob: -5.002851963043213
    6. ' in' → logprob: -5.502851963043213
    7. '_pos' → logprob: -6.002851963043213
    8. 's' → logprob: -6.127851963043213
    9. 'patterns' → logprob: -6.127851963043213
    10. 'p' → logprob: -6.252851963043213

Token 405: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3507901430130005
    2. ')
' → logprob: -1.2257901430130005
    3. ')+' → logprob: -6.600790023803711
    4. '                       ' → logprob: -7.350790023803711
    5. ')
' → logprob: -9.475790023803711
    6. '<|end|>' → logprob: -9.725790023803711
    7. '                           ' → logprob: -10.225790023803711
    8. ' if' → logprob: -10.350790023803711
    9. '                   ' → logprob: -10.850790023803711
    10. ' )' → logprob: -10.850790023803711

Token 406: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.040836356580257416
    2. '<|end|>' → logprob: -3.4158363342285156
    3. ')' → logprob: -5.915836334228516
    4. ',' → logprob: -6.290836334228516
    5. '                        
' → logprob: -7.540836334228516
    6. '
' → logprob: -7.790836334228516
    7. '```' → logprob: -8.165836334228516
    8. '           ' → logprob: -8.165836334228516
    9. '                           ' → logprob: -8.415836334228516
    10. '                        ' → logprob: -8.665836334228516

Token 407: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.051005005836486816
    2. 'min' (adapté à ' min') → logprob: -3.0510048866271973
    3. '                           ' → logprob: -6.676004886627197
    4. '                       ' → logprob: -7.801004886627197
    5. '           ' → logprob: -8.176005363464355
    6. ' max' → logprob: -8.801005363464355
    7. '       ' → logprob: -10.051005363464355
    8. ',' → logprob: -10.551005363464355
    9. 'max' → logprob: -10.551005363464355
    10. ' ' → logprob: -10.801005363464355

Token 408: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.056077707558870316
    2. '_r' → logprob: -2.931077718734741
    3. '_j' → logprob: -6.806077480316162
    4. '_s' → logprob: -10.18107795715332
    5. '_' → logprob: -11.05607795715332
    6. '_col' → logprob: -11.55607795715332
    7. '(' → logprob: -12.43107795715332
    8. '\' → logprob: -12.43107795715332
    9. ' _' → logprob: -12.68107795715332
    10. '(_' → logprob: -13.18107795715332

Token 409: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575939953327179
    2. ' =' → logprob: -0.825939953327179
    3. ' ' → logprob: -15.700940132141113
    4. ',' → logprob: -16.075939178466797
    5. '<|end|>' → logprob: -16.200939178466797
    6. 'for' → logprob: -16.575939178466797
    7. ')' → logprob: -17.325939178466797
    8. ' for' → logprob: -17.825939178466797
    9. '=

' → logprob: -18.075939178466797
    10. '=
' → logprob: -19.200939178466797

Token 410: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.001170225441455841
    2. ' min' → logprob: -6.7511701583862305
    3. 'max' → logprob: -17.376171112060547
    4. '(min' → logprob: -17.626171112060547
    5. '	min' → logprob: -19.126171112060547
    6. 'minimum' → logprob: -19.251171112060547
    7. '[min' → logprob: -19.626171112060547
    8. '_min' → logprob: -20.001171112060547
    9. '=min' → logprob: -20.501171112060547
    10. '<|end|>' → logprob: -21.001171112060547

Token 411: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -1.0280383548888494e-06
    2. 'pos' → logprob: -14.125000953674316
    3. '[pos' → logprob: -15.500000953674316
    4. '((' → logprob: -17.875001907348633
    5. '(' → logprob: -18.375001907348633
    6. ' (' → logprob: -19.125001907348633
    7. '(p' → logprob: -19.250001907348633
    8. ',pos' → logprob: -19.500001907348633
    9. ' pos' → logprob: -19.875001907348633
    10. '(
' → logprob: -20.375001907348633

Token 412: '[' (ID: 58)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.16581876575946808
    2. '[' → logprob: -2.040818691253662
    3. '[pos' → logprob: -3.790818691253662
    4. 'pos' → logprob: -8.41581916809082
    5. 'for' → logprob: -9.79081916809082
    6. '(' → logprob: -11.66581916809082
    7. '(token' → logprob: -12.41581916809082
    8. ',pos' → logprob: -12.91581916809082
    9. 'token' → logprob: -13.54081916809082
    10. ' (' → logprob: -13.66581916809082

Token 413: '1' (ID: 16)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.00047726318007335067
    2. '1' → logprob: -7.750477313995361
    3. '(pos' → logprob: -10.375476837158203
    4. '[' → logprob: -11.625476837158203
    5. ' pos' → logprob: -12.875476837158203
    6. '[pos' → logprob: -13.125476837158203
    7. '(' → logprob: -13.875476837158203
    8. 'p' → logprob: -14.375476837158203
    9. '
' → logprob: -16.500476837158203
    10. '   ' → logprob: -17.000476837158203

Token 414: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3868957459926605
    2. 'for' → logprob: -1.136895775794983
    3. ')' → logprob: -11.386896133422852
    4. '	for' → logprob: -12.261896133422852
    5. ' in' → logprob: -13.011896133422852
    6. ' ' → logprob: -13.386896133422852
    7. '[' → logprob: -13.511896133422852
    8. ']' → logprob: -13.636896133422852
    9. '<|end|>' → logprob: -14.261896133422852
    10. '
' → logprob: -14.761896133422852

Token 415: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10022026300430298
    2. 'for' → logprob: -2.350220203399658
    3. ')' → logprob: -11.600220680236816
    4. '[' → logprob: -13.725220680236816
    5. ' in' → logprob: -13.850220680236816
    6. '	for' → logprob: -14.100220680236816
    7. '<|end|>' → logprob: -15.225220680236816
    8. ' ' → logprob: -15.350220680236816
    9. '           ' → logprob: -15.725220680236816
    10. '
' → logprob: -15.975220680236816

Token 416: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0001239196863025427
    2. ' pos' → logprob: -9.000123977661133
    3. 'pp' → logprob: -16.250123977661133
    4. '[pos' → logprob: -16.375123977661133
    5. 'p' → logprob: -16.500123977661133
    6. '(pos' → logprob: -17.250123977661133
    7. '	pos' → logprob: -17.500123977661133
    8. ' ' → logprob: -18.500123977661133
    9. 'ps' → logprob: -18.500123977661133
    10. 'pt' → logprob: -18.875123977661133

Token 417: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.9435152411460876
    2. 'in' → logprob: -1.1935153007507324
    3. 'pos' → logprob: -1.1935153007507324
    4. ' pos' → logprob: -5.818515300750732
    5. '[' → logprob: -6.693515300750732
    6. '[pos' → logprob: -9.068514823913574
    7. ',pos' → logprob: -10.818514823913574
    8. '...' → logprob: -10.943514823913574
    9. '(pos' → logprob: -11.068514823913574
    10. 'p' → logprob: -11.318514823913574

Token 418: ' p' (ID: 275)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pp' → logprob: -0.00894603505730629
    2. 'pos' → logprob: -5.258945941925049
    3. ' p' → logprob: -5.633945941925049
    4. 'ppy' → logprob: -9.758946418762207
    5. 'ppo' → logprob: -11.383946418762207
    6. ' pp' → logprob: -11.508946418762207
    7. 'p' → logprob: -11.508946418762207
    8. ' pos' → logprob: -11.758946418762207
    9. 'pt' → logprob: -11.758946418762207
    10. '(pp' → logprob: -11.883946418762207

Token 419: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.011749666184186935
    2. 'os' → logprob: -4.511749744415283
    3. 'p' → logprob: -8.011749267578125
    4. 'ps' → logprob: -9.636749267578125
    5. '[pos' → logprob: -9.761749267578125
    6. 'pp' → logprob: -10.011749267578125
    7. '[' → logprob: -10.261749267578125
    8. ')' → logprob: -10.886749267578125
    9. '```' → logprob: -11.136749267578125
    10. '   ' → logprob: -11.136749267578125

Token 420: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007684823591262102
    2. ')
' → logprob: -4.882684707641602
    3. '                       ' → logprob: -10.882684707641602
    4. ')+' → logprob: -10.882684707641602
    5. '<|end|>' → logprob: -11.382684707641602
    6. ' )' → logprob: -11.632684707641602
    7. '                           ' → logprob: -11.882684707641602
    8. ')
' → logprob: -13.382684707641602
    9. ')

' → logprob: -13.757684707641602
    10. '                   ' → logprob: -13.882684707641602

Token 421: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.10457663983106613
    2. '
' → logprob: -2.479576587677002
    3. '<|end|>' → logprob: -4.854576587677002
    4. '                        
' → logprob: -5.229576587677002
    5. ')' → logprob: -6.854576587677002
    6. ' candidates' → logprob: -7.979576587677002
    7. '```' → logprob: -8.22957706451416
    8. ')
' → logprob: -8.72957706451416
    9. '       ' → logprob: -9.47957706451416
    10. 'candidate' → logprob: -9.60457706451416

Token 422: ' #' (ID: 1069)
  Prédit: ' candidates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' candidates' → logprob: -0.1492411494255066
    2. '                       ' → logprob: -2.5242412090301514
    3. 'print' → logprob: -4.149240970611572
    4. 'c' → logprob: -4.649240970611572
    5. ' print' → logprob: -5.149240970611572
    6. 'shift' → logprob: -5.149240970611572
    7. 'offset' → logprob: -5.274240970611572
    8. 'candidate' → logprob: -5.899240970611572
    9. 'x' → logprob: -6.024240970611572
    10. '
' → logprob: -6.774240970611572

Token 423: ' the' (ID: 290)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.17578823864459991
    2. ' candidates' → logprob: -2.925788164138794
    3. 'x' → logprob: -3.550788164138794
    4. 'cand' → logprob: -3.550788164138794
    5. '#' → logprob: -4.675788402557373
    6. 'offset' → logprob: -4.925788402557373
    7. 'orig' → logprob: -5.550788402557373
    8. 'r' → logprob: -5.800788402557373
    9. 'abs' → logprob: -6.050788402557373
    10. 'dx' → logprob: -6.175788402557373

Token 424: ' coordinate' (ID: 30380)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.007924818433821201
    2. ' candidates' → logprob: -5.257925033569336
    3. 'x' → logprob: -6.132925033569336
    4. ' c' → logprob: -9.132925033569336
    5. 'cand' → logprob: -9.507925033569336
    6. 'candidate' → logprob: -10.257925033569336
    7. 'top' → logprob: -10.382925033569336
    8. ' x' → logprob: -10.507925033569336
    9. 'r' → logprob: -10.632925033569336
    10. '
' → logprob: -10.632925033569336

Token 425: ' in' (ID: 306)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8905872106552124
    2. ' =' → logprob: -1.1405872106552124
    3. '=' → logprob: -2.015587329864502
    4. 'x' → logprob: -2.390587329864502
    5. ' of' → logprob: -4.640587329864502
    6. 'of' → logprob: -4.640587329864502
    7. '_candidates' → logprob: -5.640587329864502
    8. ' candidates' → logprob: -6.015587329864502
    9. '_x' → logprob: -6.265587329864502
    10. '                       ' → logprob: -6.265587329864502

Token 426: ' scenery' (ID: 61622)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0019148342544212937
    2. ' w' → logprob: -6.501914978027344
    3. 'the' → logprob: -8.126914978027344
    4. ' the' → logprob: -10.126914978027344
    5. 'candidate' → logprob: -10.751914978027344
    6. '(w' → logprob: -11.376914978027344
    7. '
' → logprob: -11.626914978027344
    8. ' candidates' → logprob: -11.626914978027344
    9. 'i' → logprob: -12.251914978027344
    10. '[w' → logprob: -12.501914978027344

Token 427: ' top' (ID: 2344)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48546379804611206
    2. '=' → logprob: -0.9854637980461121
    3. '                       ' → logprob: -4.985463619232178
    4. 'x' → logprob: -6.360463619232178
    5. 's' → logprob: -6.860463619232178
    6. ' is' → logprob: -7.485463619232178
    7. ' of' → logprob: -8.610464096069336
    8. 'of' → logprob: -8.860464096069336
    9. ' in' → logprob: -9.485464096069336
    10. ':' → logprob: -9.735464096069336

Token 428: '-left' (ID: 17007)
  Prédit: '-left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-left' → logprob: -0.13018162548542023
    2. ',' → logprob: -3.5051815509796143
    3. '=' → logprob: -3.5051815509796143
    4. '_left' → logprob: -3.6301815509796143
    5. '                       ' → logprob: -4.130181789398193
    6. ',left' → logprob: -4.505181789398193
    7. 'left' → logprob: -5.880181789398193
    8. ' left' → logprob: -6.005181789398193
    9. 'x' → logprob: -7.005181789398193
    10. ' =' → logprob: -7.755181789398193

Token 429: ' is' (ID: 382)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.169641137123108
    2. '                       ' → logprob: -1.169641137123108
    3. ' =' → logprob: -2.1696410179138184
    4. '=' → logprob: -2.6696410179138184
    5. 'corner' → logprob: -2.7946410179138184
    6. 'cell' → logprob: -3.1696410179138184
    7. ' cell' → logprob: -3.9196410179138184
    8. ' corner' → logprob: -4.669641017913818
    9. '+' → logprob: -5.044641017913818
    10. '                        
' → logprob: -5.169641017913818

Token 430: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.027708252891898155
    2. ' (' → logprob: -3.6527082920074463
    3. 'i' → logprob: -7.027708053588867
    4. '(' → logprob: -8.777708053588867
    5. '(j' → logprob: -9.027708053588867
    6. '                       ' → logprob: -9.277708053588867
    7. ' i' → logprob: -9.652708053588867
    8. '                   ' → logprob: -10.777708053588867
    9. '(x' → logprob: -10.902708053588867
    10. '
' → logprob: -11.402708053588867

Token 431: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00010628487507347018
    2. ' i' → logprob: -9.875105857849121
    3. '(i' → logprob: -10.375105857849121
    4. 'j' → logprob: -12.000105857849121
    5. 'x' → logprob: -12.250105857849121
    6. '
' → logprob: -12.625105857849121
    7. ')' → logprob: -12.625105857849121
    8. '   ' → logprob: -13.375105857849121
    9. ' (' → logprob: -13.750105857849121
    10. '                   ' → logprob: -13.875105857849121

Token 432: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6477305889129639
    2. ' +' → logprob: -0.8977305889129639
    3. ' -' → logprob: -2.897730588912964
    4. '-' → logprob: -4.397730827331543
    5. '-min' → logprob: -7.022730827331543
    6. ',' → logprob: -7.772730827331543
    7. ')' → logprob: -8.647730827331543
    8. ' ' → logprob: -9.897730827331543
    9. ')+' → logprob: -9.897730827331543
    10. ' ,' → logprob: -10.522730827331543

Token 433: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -7.827200897736475e-05
    2. ' min' → logprob: -9.500078201293945
    3. '(min' → logprob: -13.000078201293945
    4. '```' → logprob: -15.250078201293945
    5. '	min' → logprob: -15.375078201293945
    6. 'i' → logprob: -15.500078201293945
    7. '
' → logprob: -15.625078201293945
    8. '   ' → logprob: -17.000078201293945
    9. ')' → logprob: -17.375078201293945
    10. '[min' → logprob: -17.625078201293945

Token 434: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -5.931863051955588e-05
    2. '_c' → logprob: -10.000059127807617
    3. 'r' → logprob: -11.375059127807617
    4. '```' → logprob: -14.125059127807617
    5. '_' → logprob: -15.125059127807617
    6. 'c' → logprob: -15.250059127807617
    7. '_i' → logprob: -15.375059127807617
    8. ')' → logprob: -15.875059127807617
    9. '`' → logprob: -16.250059127807617
    10. '   ' → logprob: -16.375059127807617

Token 435: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02753257006406784
    2. ' ,' → logprob: -3.6525325775146484
    3. ',j' → logprob: -7.402532577514648
    4. ')' → logprob: -8.652532577514648
    5. '),' → logprob: -9.277532577514648
    6. ' -' → logprob: -9.652532577514648
    7. ',
' → logprob: -9.777532577514648
    8. '-' → logprob: -9.902532577514648
    9. '),(' → logprob: -9.902532577514648
    10. ' ' → logprob: -10.027532577514648

Token 436: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0019311357755213976
    2. ' j' → logprob: -6.251931190490723
    3. '   ' → logprob: -13.626931190490723
    4. '    ' → logprob: -14.126931190490723
    5. '  ' → logprob: -15.626931190490723
    6. '	j' → logprob: -15.626931190490723
    7. ' ' → logprob: -16.501930236816406
    8. '     ' → logprob: -17.126930236816406
    9. '           ' → logprob: -17.501930236816406
    10. '                   ' → logprob: -18.251930236816406

Token 437: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5759411454200745
    2. ' +' → logprob: -0.8259411454200745
    3. ')' → logprob: -14.20094108581543
    4. ' ' → logprob: -14.57594108581543
    5. '+
' → logprob: -15.95094108581543
    6. ')+' → logprob: -16.45094108581543
    7. ' ' → logprob: -16.70094108581543
    8. ' +
' → logprob: -17.07594108581543
    9. '[' → logprob: -17.70094108581543
    10. ' -' → logprob: -17.82594108581543

Token 438: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0001234428636962548
    2. ' min' → logprob: -9.000123023986816
    3. '   ' → logprob: -18.125123977661133
    4. '	min' → logprob: -18.375123977661133
    5. '[min' → logprob: -18.750123977661133
    6. '  ' → logprob: -18.875123977661133
    7. ' ' → logprob: -19.000123977661133
    8. '           ' → logprob: -19.250123977661133
    9. '    ' → logprob: -19.500123977661133
    10. '(min' → logprob: -19.750123977661133

Token 439: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.001330360071733594
    2. 'c' → logprob: -6.626330375671387
    3. '_' → logprob: -13.501330375671387
    4. ')' → logprob: -13.751330375671387
    5. '[' → logprob: -14.501330375671387
    6. 'C' → logprob: -15.626330375671387
    7. ' c' → logprob: -15.626330375671387
    8. '\' → logprob: -15.626330375671387
    9. ']' → logprob: -15.751330375671387
    10. '	c' → logprob: -16.25132942199707

Token 440: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.38769134879112244
    2. ')' → logprob: -1.1376913785934448
    3. '                       ' → logprob: -7.637691497802734
    4. ')
' → logprob: -8.762691497802734
    5. '                   ' → logprob: -9.387691497802734
    6. '                           ' → logprob: -10.387691497802734
    7. ')

' → logprob: -10.512691497802734
    8. '):
' → logprob: -11.387691497802734
    9. ' )
' → logprob: -11.512691497802734
    10. '               ' → logprob: -12.637691497802734

Token 441: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.050202980637550354
    2. '
' → logprob: -3.4252030849456787
    3. ')' → logprob: -5.0502028465271
    4. '<|end|>' → logprob: -5.1752028465271
    5. ')
' → logprob: -6.6752028465271
    6. '                        
' → logprob: -6.8002028465271
    7. '                           ' → logprob: -7.1752028465271
    8. '                   ' → logprob: -8.550203323364258
    9. '```' → logprob: -8.800203323364258
    10. 'newline' → logprob: -8.925203323364258

Token 442: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.04738341271877289
    2. ' candidates' → logprob: -3.1723833084106445
    3. '                       ' → logprob: -5.9223833084106445
    4. 'print' → logprob: -7.0473833084106445
    5. ' c' → logprob: -8.672383308410645
    6. 'coordinates' → logprob: -8.797383308410645
    7. ' print' → logprob: -9.047383308410645
    8. '   ' → logprob: -9.172383308410645
    9. 'candidate' → logprob: -9.922383308410645
    10. '       ' → logprob: -9.922383308410645

Token 443: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007133854669518769
    2. '.' → logprob: -7.250713348388672
    3. ' .' → logprob: -13.250713348388672
    4. 'append' → logprob: -14.500713348388672
    5. '.app' → logprob: -14.625713348388672
    6. ').' → logprob: -14.875713348388672
    7. '.add' → logprob: -16.000713348388672
    8. '.Append' → logprob: -16.250713348388672
    9. '.ap' → logprob: -16.250713348388672
    10. '.push' → logprob: -16.750713348388672

Token 444: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0017270608805119991
    2. '(' → logprob: -6.376727104187012
    3. '(((' → logprob: -11.251727104187012
    4. '(i' → logprob: -11.376727104187012
    5. '(
' → logprob: -15.376727104187012
    6. '([' → logprob: -16.126726150512695
    7. '   ' → logprob: -16.751726150512695
    8. ' ((' → logprob: -17.001726150512695
    9. '(x' → logprob: -18.501726150512695
    10. '(j' → logprob: -18.751726150512695

Token 445: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.18364933133125305
    2. 'k' → logprob: -1.8086493015289307
    3. '(i' → logprob: -6.43364953994751
    4. ' i' → logprob: -7.18364953994751
    5. '(k' → logprob: -7.43364953994751
    6. 'x' → logprob: -7.55864953994751
    7. 'w' → logprob: -9.058649063110352
    8. ' k' → logprob: -9.183649063110352
    9. ' (' → logprob: -9.808649063110352
    10. '(' → logprob: -10.183649063110352

Token 446: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12833671271800995
    2. ' +' → logprob: -2.1283366680145264
    3. ',' → logprob: -7.0033369064331055
    4. '+,' → logprob: -8.253336906433105
    5. '+j' → logprob: -9.628336906433105
    6. ' ,' → logprob: -10.003336906433105
    7. '+i' → logprob: -10.128336906433105
    8. '+
' → logprob: -10.378336906433105
    9. '+k' → logprob: -11.003336906433105
    10. '+c' → logprob: -11.503336906433105

Token 447: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00023131117632146925
    2. ' min' → logprob: -8.375231742858887
    3. '[min' → logprob: -15.500231742858887
    4. '(min' → logprob: -16.12523078918457
    5. '<|end|>' → logprob: -16.12523078918457
    6. '	min' → logprob: -16.25023078918457
    7. '_min' → logprob: -16.75023078918457
    8. ' ' → logprob: -17.25023078918457
    9. '   ' → logprob: -18.25023078918457
    10. '```' → logprob: -18.62523078918457

Token 448: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -2.696889623621246e-06
    2. '_c' → logprob: -13.00000286102295
    3. 'r' → logprob: -15.62500286102295
    4. '<|end|>' → logprob: -16.625001907348633
    5. '(min' → logprob: -17.000001907348633
    6. '_' → logprob: -18.875001907348633
    7. '[' → logprob: -18.937501907348633
    8. ')' → logprob: -19.125001907348633
    9. '[min' → logprob: -19.625001907348633
    10. '(' → logprob: -19.750001907348633

Token 449: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3870331346988678
    2. ',j' → logprob: -1.1370331048965454
    3. ' ,' → logprob: -8.887033462524414
    4. ',
' → logprob: -10.762033462524414
    5. ',c' → logprob: -14.512033462524414
    6. '   ' → logprob: -14.512033462524414
    7. ',i' → logprob: -15.137033462524414
    8. ',

' → logprob: -15.637033462524414
    9. ')' → logprob: -15.762033462524414
    10. ' ' → logprob: -15.887033462524414

Token 450: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0002613358374219388
    2. ' j' → logprob: -8.250261306762695
    3. '   ' → logprob: -16.500261306762695
    4. '	j' → logprob: -17.000261306762695
    5. '    ' → logprob: -17.875261306762695
    6. '  ' → logprob: -19.500261306762695
    7. ' ' → logprob: -19.625261306762695
    8. '```' → logprob: -19.625261306762695
    9. '$j' → logprob: -20.375261306762695
    10. '     ' → logprob: -20.375261306762695

Token 451: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.110668618930504e-05
    2. ' +' → logprob: -9.75006103515625
    3. ')+' → logprob: -13.87506103515625
    4. '+j' → logprob: -14.00006103515625
    5. '+m' → logprob: -15.25006103515625
    6. '+
' → logprob: -15.37506103515625
    7. '+c' → logprob: -15.50006103515625
    8. '+k' → logprob: -16.62506103515625
    9. '+s' → logprob: -16.62506103515625
    10. '+n' → logprob: -17.87506103515625

Token 452: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -6.511406809295295e-06
    2. ' min' → logprob: -12.375006675720215
    3. 'c' → logprob: -13.125006675720215
    4. '+' → logprob: -15.125006675720215
    5. '+c' → logprob: -17.3750057220459
    6. '_min' → logprob: -18.7500057220459
    7. '	min' → logprob: -19.7500057220459
    8. '[min' → logprob: -20.1250057220459
    9. '(min' → logprob: -20.2500057220459
    10. 'm' → logprob: -20.5000057220459

Token 453: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -7.028536492725834e-05
    2. 'c' → logprob: -9.625070571899414
    3. '+c' → logprob: -13.250070571899414
    4. 'min' → logprob: -14.375070571899414
    5. '+' → logprob: -15.125070571899414
    6. '_' → logprob: -15.437570571899414
    7. '	c' → logprob: -15.937570571899414
    8. '   ' → logprob: -16.062570571899414
    9. '
' → logprob: -16.125070571899414
    10. 'C' → logprob: -16.125070571899414

Token 454: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.644696056842804
    2. ',' → logprob: -0.894696056842804
    3. ',k' → logprob: -3.394695997238159
    4. '))
' → logprob: -3.519695997238159
    5. ',n' → logprob: -7.019696235656738
    6. ',c' → logprob: -8.019696235656738
    7. ' ,' → logprob: -8.019696235656738
    8. ',m' → logprob: -8.269696235656738
    9. ')' → logprob: -8.394696235656738
    10. ',j' → logprob: -8.644696235656738

Token 455: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14263050258159637
    2. '       ' → logprob: -2.5176305770874023
    3. '<|end|>' → logprob: -3.3926305770874023
    4. '
' → logprob: -4.642630577087402
    5. ' if' → logprob: -6.142630577087402
    6. 'for' → logprob: -6.392630577087402
    7. ' for' → logprob: -6.392630577087402
    8. 'if' → logprob: -6.517630577087402
    9. '```' → logprob: -6.892630577087402
    10. '    
' → logprob: -7.892630577087402

Token 456: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8334798812866211
    2. 'c' → logprob: -1.333479881286621
    3. '       ' → logprob: -2.208479881286621
    4. 'if' (adapté à ' if') → logprob: -2.208479881286621
    5. '
' → logprob: -2.958479881286621
    6. ' if' → logprob: -4.083479881286621
    7. ' candidates' → logprob: -5.208479881286621
    8. 'print' → logprob: -5.833479881286621
    9. '        
' → logprob: -6.708479881286621
    10. 'for' → logprob: -6.708479881286621

Token 457: ' not' (ID: 625)
  Prédit: ' candidates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' candidates' → logprob: -0.016163287684321404
    2. 'c' → logprob: -4.516163349151611
    3. ' not' → logprob: -5.391163349151611
    4. ' len' → logprob: -7.766163349151611
    5. 'len' → logprob: -9.516162872314453
    6. 'not' → logprob: -10.516162872314453
    7. ' c' → logprob: -11.391162872314453
    8. '_candidates' → logprob: -12.641162872314453
    9. 'Candidates' → logprob: -13.141162872314453
    10. ' ' → logprob: -13.766162872314453

Token 458: ' candidates' (ID: 18116)
  Prédit: ' candidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' candidates' → logprob: -0.4740777015686035
    2. 'c' → logprob: -0.9740777015686035
    3. '_candidates' → logprob: -14.849077224731445
    4. 'andidates' → logprob: -15.724077224731445
    5. ' candidats' → logprob: -16.974077224731445
    6. 'Candidates' → logprob: -17.474077224731445
    7. ' c' → logprob: -17.474077224731445
    8. ' candidatos' → logprob: -18.099077224731445
    9. ')c' → logprob: -18.974077224731445
    10. '	c' → logprob: -19.224077224731445

Token 459: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0549144372344017
    2. ':
' → logprob: -2.9299144744873047
    3. ':return' → logprob: -11.179914474487305
    4. '           ' → logprob: -12.054914474487305
    5. ':
' → logprob: -12.179914474487305
    6. 'print' → logprob: -12.554914474487305
    7. '       ' → logprob: -14.429914474487305
    8. ':

' → logprob: -14.429914474487305
    9. '=' → logprob: -14.804914474487305
    10. '   ' → logprob: -14.929914474487305

Token 460: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007481095381081104
    2. ':
' → logprob: -5.882481098175049
    3. ':' → logprob: -6.007481098175049
    4. 'print' → logprob: -6.882481098175049
    5. '       ' → logprob: -7.382481098175049
    6. '
' → logprob: -8.63248062133789
    7. ' print' → logprob: -8.88248062133789
    8. '   ' → logprob: -10.00748062133789
    9. '\' → logprob: -10.75748062133789
    10. '            
' → logprob: -11.00748062133789

Token 461: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.14887182414531708
    2. '           ' → logprob: -2.148871898651123
    3. ' print' → logprob: -4.648871898651123
    4. '       ' → logprob: -4.648871898651123
    5. '   ' → logprob: -6.023871898651123
    6. '	print' → logprob: -9.523871421813965
    7. ' ' → logprob: -10.898871421813965
    8. '               ' → logprob: -11.773871421813965
    9. '	       ' → logprob: -11.898871421813965
    10. '            
' → logprob: -12.023871421813965

Token 462: '('' (ID: 706)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.2433607578277588
    2. '("' → logprob: -2.118360757827759
    3. '(' → logprob: -2.868360757827759
    4. '-' → logprob: -3.618360757827759
    5. '('' → logprob: -4.99336051940918
    6. '0' → logprob: -5.74336051940918
    7. '("-' → logprob: -6.74336051940918
    8. '()' → logprob: -7.49336051940918
    9. '('-' → logprob: -9.49336051940918
    10. '(":' → logprob: -9.74336051940918

Token 463: 'NA' (ID: 9555)
  Prédit: 'NA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NA' → logprob: -0.015937235206365585
    2. 'none' → logprob: -4.890937328338623
    3. '0' → logprob: -5.765937328338623
    4. 'na' → logprob: -6.140937328338623
    5. '-' → logprob: -7.265937328338623
    6. 'NONE' → logprob: -7.265937328338623
    7. 'NO' → logprob: -7.765937328338623
    8. 'not' → logprob: -8.015936851501465
    9. 'no' → logprob: -8.890936851501465
    10. 'None' → logprob: -9.515936851501465

Token 464: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.014801956713199615
    2. '')
' → logprob: -4.264801979064941
    3. ')' → logprob: -7.389801979064941
    4. '')
' → logprob: -11.139801979064941
    5. ')
' → logprob: -12.764801979064941
    6. ')')
' → logprob: -13.639801979064941
    7. '")' → logprob: -13.764801979064941
    8. ''' → logprob: -14.014801979064941
    9. ')'' → logprob: -16.389801025390625
    10. '')

' → logprob: -17.014801025390625

Token 465: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00228026881814003
    2. '           ' → logprob: -6.127280235290527
    3. 'else' → logprob: -10.127280235290527
    4. '<|end|>' → logprob: -10.877280235290527
    5. '   ' → logprob: -11.002280235290527
    6. ' else' → logprob: -11.377280235290527
    7. 'continue' → logprob: -12.752280235290527
    8. ' continue' → logprob: -13.877280235290527
    9. ' ' → logprob: -14.377280235290527
    10. '```' → logprob: -14.502280235290527

Token 466: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01168945711106062
    2. 'else' (adapté à ' else') → logprob: -4.51168966293335
    3. ' else' → logprob: -7.38668966293335
    4. '   ' → logprob: -11.011689186096191
    5. '           ' → logprob: -12.386689186096191
    6. 'elif' → logprob: -14.386689186096191
    7. ' ' → logprob: -15.511689186096191
    8. 'continue' → logprob: -15.886689186096191
    9. '      ' → logprob: -16.011690139770508
    10. '     ' → logprob: -16.386690139770508

Token 467: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23287904262542725
    2. ':
' → logprob: -1.7328790426254272
    3. '           ' → logprob: -3.482879161834717
    4. '[' → logprob: -9.232878684997559
    5. '       ' → logprob: -10.232878684997559
    6. ',' → logprob: -10.232878684997559
    7. 'print' → logprob: -11.107878684997559
    8. ':

' → logprob: -11.232878684997559
    9. ' :
' → logprob: -11.732878684997559
    10. '):
' → logprob: -11.857878684997559

Token 468: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25782889127731323
    2. '       ' → logprob: -1.507828950881958
    3. 'print' → logprob: -5.632828712463379
    4. ' print' → logprob: -6.757828712463379
    5. ' candidates' → logprob: -7.382828712463379
    6. '```' → logprob: -8.007828712463379
    7. ' for' → logprob: -10.382828712463379
    8. '   ' → logprob: -10.632828712463379
    9. 'sorted' → logprob: -10.757828712463379
    10. 'c' → logprob: -11.257828712463379

Token 469: ' candidates' (ID: 18116)
  Prédit: ' candidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' candidates' → logprob: -0.9403350949287415
    2. 'c' → logprob: -1.0653350353240967
    3. '           ' → logprob: -1.9403350353240967
    4. 'print' → logprob: -2.5653350353240967
    5. 'x' → logprob: -4.190335273742676
    6. ' print' → logprob: -4.940335273742676
    7. 'for' → logprob: -5.190335273742676
    8. '   ' → logprob: -5.315335273742676
    9. ' for' → logprob: -5.565335273742676
    10. '       ' → logprob: -6.565335273742676

Token 470: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.001211783615872264
    2. '=' → logprob: -6.751211643218994
    3. '.' → logprob: -10.501212120056152
    4. ' =' → logprob: -11.251212120056152
    5. ' .' → logprob: -14.626212120056152
    6. '=.' → logprob: -15.126212120056152
    7. '=min' → logprob: -15.876212120056152
    8. 'sort' → logprob: -16.251211166381836
    9. '_sorted' → logprob: -17.001211166381836
    10. '=set' → logprob: -17.126211166381836

Token 471: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05321972444653511
    2. 'print' → logprob: -3.053219795227051
    3. '       ' → logprob: -5.678219795227051
    4. ',' → logprob: -7.678219795227051
    5. '
' → logprob: -8.42821979522705
    6. '()
' → logprob: -9.30321979522705
    7. '   ' → logprob: -9.42821979522705
    8. '(' → logprob: -9.42821979522705
    9. '[' → logprob: -9.80321979522705
    10. '()' → logprob: -10.17821979522705

Token 472: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0034426653292030096
    2. 'print' → logprob: -5.753442764282227
    3. '       ' → logprob: -8.753442764282227
    4. ' print' → logprob: -9.753442764282227
    5. '   ' → logprob: -10.628442764282227
    6. '```' → logprob: -11.003442764282227
    7. '<|end|>' → logprob: -12.253442764282227
    8. '[' → logprob: -14.378442764282227
    9. ' ' → logprob: -14.628442764282227
    10. ' for' → logprob: -14.753442764282227

Token 473: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0005961624556221068
    2. 'x' → logprob: -8.000596046447754
    3. 'for' → logprob: -9.125596046447754
    4. ' print' → logprob: -9.750596046447754
    5. '           ' → logprob: -10.000596046447754
    6. 'r' → logprob: -10.750596046447754
    7. 'count' → logprob: -12.250596046447754
    8. 'min' → logprob: -12.250596046447754
    9. 'first' → logprob: -12.250596046447754
    10. '       ' → logprob: -12.625596046447754

Token 474: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0013327404158189893
    2. '(*' → logprob: -7.251332759857178
    3. '(f' → logprob: -7.501332759857178
    4. 'c' → logprob: -10.12633228302002
    5. '(' → logprob: -10.62633228302002
    6. '('' → logprob: -13.25133228302002
    7. '(candidate' → logprob: -13.87633228302002
    8. '('{}' → logprob: -14.50133228302002
    9. '((' → logprob: -14.62633228302002
    10. ' (' → logprob: -14.75133228302002

Token 475: 'andidates' (ID: 38168)
  Prédit: 'andidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'andidates' → logprob: -0.00030066570616327226
    2. 'and' → logprob: -8.125300407409668
    3. 'andidate' → logprob: -13.000300407409668
    4. 'andi' → logprob: -14.125300407409668
    5. '{' → logprob: -14.250300407409668
    6. '[' → logprob: -15.375300407409668
    7. 'andidat' → logprob: -15.375300407409668
    8. 'andid' → logprob: -15.625300407409668
    9. 'an' → logprob: -16.625301361083984
    10. '#' → logprob: -16.875301361083984

Token 476: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00013238313840702176
    2. '[-' → logprob: -9.00013256072998
    3. ')' → logprob: -11.75013256072998
    4. '()[' → logprob: -15.12513256072998
    5. '0' → logprob: -15.37513256072998
    6. ')[' → logprob: -15.37513256072998
    7. '[len' → logprob: -16.250131607055664
    8. '   ' → logprob: -16.750131607055664
    9. ' [' → logprob: -16.750131607055664
    10. '```' → logprob: -16.875131607055664

Token 477: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012320445966906846
    2. '-' → logprob: -9.500123023986816
    3. '[' → logprob: -10.000123023986816
    4. ')' → logprob: -13.625123023986816
    5. ' ' → logprob: -13.750123023986816
    6. '])' → logprob: -16.250123977661133
    7. '][' → logprob: -16.250123977661133
    8. '(' → logprob: -16.500123977661133
    9. '[-' → logprob: -16.750123977661133
    10. ' -' → logprob: -17.750123977661133

Token 478: '][' (ID: 2696)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4745554029941559
    2. '[' → logprob: -0.9745553731918335
    3. '])' → logprob: -7.849555492401123
    4. '})' → logprob: -10.599555015563965
    5. '))' → logprob: -10.724555015563965
    6. ' )' → logprob: -11.224555015563965
    7. ')
' → logprob: -11.849555015563965
    8. ',' → logprob: -12.349555015563965
    9. ')[' → logprob: -12.474555015563965
    10. '>)' → logprob: -12.974555015563965

Token 479: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14267700910568237
    2. '1' → logprob: -2.017677068710327
    3. ' ' → logprob: -14.392677307128906
    4. '
' → logprob: -15.142677307128906
    5. ']' → logprob: -15.267677307128906
    6. ')' → logprob: -15.892677307128906
    7. '])' → logprob: -15.892677307128906
    8. '::-' → logprob: -16.267677307128906
    9. '-' → logprob: -16.517677307128906
    10. '01' → logprob: -16.580177307128906

Token 480: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3185362219810486
    2. ',c' → logprob: -1.3185362815856934
    3. ' ,' → logprob: -5.318536281585693
    4. ',end' → logprob: -8.068535804748535
    5. ')' → logprob: -11.568535804748535
    6. ',p' → logprob: -12.193535804748535
    7. ',n' → logprob: -12.318535804748535
    8. ',k' → logprob: -12.443535804748535
    9. ',b' → logprob: -12.568535804748535
    10. ',int' → logprob: -12.818535804748535

Token 481: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0001234428636962548
    2. ' candidates' → logprob: -9.000123023986816
    3. ' c' → logprob: -16.875123977661133
    4. 'candidate' → logprob: -17.750123977661133
    5. 'cand' → logprob: -19.125123977661133
    6. '_candidates' → logprob: -19.375123977661133
    7. 'Candidates' → logprob: -20.000123977661133
    8. ''' → logprob: -20.500123977661133
    9. ' candidats' → logprob: -20.750123977661133
    10. '	c' → logprob: -20.875123977661133

Token 482: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.38700994849205017
    2. '][' → logprob: -1.1370099782943726
    3. ')[' → logprob: -9.262009620666504
    4. ' ][' → logprob: -11.387009620666504
    5. '0' → logprob: -11.887009620666504
    6. '[][' → logprob: -12.387009620666504
    7. ']' → logprob: -12.637009620666504
    8. ''][' → logprob: -12.762009620666504
    9. '1' → logprob: -12.762009620666504
    10. '"][' → logprob: -12.887009620666504

Token 483: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0619698166847229
    2. '0' → logprob: -2.811969757080078
    3. ' ' → logprob: -13.186969757080078
    4. '01' → logprob: -16.561969757080078
    5. '   ' → logprob: -16.686969757080078
    6. '[' → logprob: -17.686969757080078
    7. '```' → logprob: -17.686969757080078
    8. ']' → logprob: -17.686969757080078
    9. '
' → logprob: -18.061969757080078
    10. '-' → logprob: -18.061969757080078

Token 484: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0005367091507650912
    2. '[' → logprob: -7.625536918640137
    3. ']' → logprob: -10.750536918640137
    4. ' ][' → logprob: -11.000536918640137
    5. '1' → logprob: -12.125536918640137
    6. ')[' → logprob: -13.500536918640137
    7. '])' → logprob: -13.625536918640137
    8. '0' → logprob: -14.500536918640137
    9. '"][' → logprob: -15.000536918640137
    10. ']
' → logprob: -15.125536918640137

Token 485: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.518582762917504e-05
    2. '0' → logprob: -9.37508487701416
    3. ' ' → logprob: -15.50008487701416
    4. '
' → logprob: -17.125085830688477
    5. '```' → logprob: -17.375085830688477
    6. '-' → logprob: -17.500085830688477
    7. ']' → logprob: -17.625085830688477
    8. '   ' → logprob: -19.000085830688477
    9. '[' → logprob: -19.375085830688477
    10. ')' → logprob: -19.750085830688477

Token 486: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ')
' → logprob: -13.750000953674316
    3. '')' → logprob: -16.250001907348633
    4. ' )' → logprob: -17.250001907348633
    5. '))' → logprob: -17.375001907348633
    6. '<|end|>' → logprob: -17.500001907348633
    7. '})' → logprob: -17.750001907348633
    8. ')#' → logprob: -18.375001907348633
    9. ')}' → logprob: -18.375001907348633
    10. '")' → logprob: -18.750001907348633

Token 487: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 488: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.12694048881530762
    2. '__' → logprob: -2.1269404888153076
    3. '_' → logprob: -12.251940727233887
    4. '_name' → logprob: -12.501940727233887
    5. 'name' → logprob: -12.751940727233887
    6. '___' → logprob: -15.001940727233887
    7. ' ' → logprob: -15.876940727233887
    8. ' _' → logprob: -16.50193977355957
    9. 'Name' → logprob: -16.50193977355957
    10. ' name' → logprob: -16.75193977355957

Token 489: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.02634953334927559
    2. '==' → logprob: -3.9013495445251465
    3. ' ==' → logprob: -5.5263495445251465
    4. '=="' → logprob: -7.0263495445251465
    5. '=='' → logprob: -8.026349067687988
    6. '```' → logprob: -8.526349067687988
    7. '__.__' → logprob: -8.776349067687988
    8. '[' → logprob: -10.026349067687988
    9. '()==' → logprob: -10.651349067687988
    10. '.__' → logprob: -10.651349067687988

Token 490: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.000592947646509856
    2. '__.__' → logprob: -7.625593185424805
    3. '==' → logprob: -9.375593185424805
    4. '=="' → logprob: -11.750593185424805
    5. ' ==' → logprob: -12.750593185424805
    6. '__.' → logprob: -13.000593185424805
    7. '"' → logprob: -13.250593185424805
    8. '=='' → logprob: -13.875593185424805
    9. '_' → logprob: -14.000593185424805
    10. '__('' → logprob: -14.125593185424805

Token 491: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7069759964942932
    2. '__' → logprob: -1.0819759368896484
    3. ' ==' → logprob: -1.8319759368896484
    4. '=="' → logprob: -5.331975936889648
    5. '=='' → logprob: -5.831975936889648
    6. '==
' → logprob: -10.706975936889648
    7. '__.__' → logprob: -11.706975936889648
    8. '```' → logprob: -11.706975936889648
    9. '[' → logprob: -11.956975936889648
    10. '=' → logprob: -12.456975936889648

Token 492: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6932413578033447
    2. ''' → logprob: -0.6932413578033447
    3. '__' → logprob: -10.068241119384766
    4. ' "__' → logprob: -10.193241119384766
    5. ' '__' → logprob: -11.193241119384766
    6. '"user' → logprob: -15.568241119384766
    7. '('__' → logprob: -15.943241119384766
    8. '   ' → logprob: -16.568241119384766
    9. ''user' → logprob: -16.818241119384766
    10. '("__' → logprob: -16.943241119384766

Token 493: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0004330532974563539
    2. '__' → logprob: -7.750432968139648
    3. 'name' → logprob: -13.000432968139648
    4. '_main' → logprob: -16.25043296813965
    5. ' main' → logprob: -17.37543296813965
    6. '__':
' → logprob: -18.00043296813965
    7. 'm' → logprob: -19.62543296813965
    8. '```' → logprob: -19.87543296813965
    9. 'ma' → logprob: -20.00043296813965
    10. 'MAIN' → logprob: -20.25043296813965

Token 494: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.0041662524454295635
    2. '__' → logprob: -5.754166126251221
    3. '':' → logprob: -7.504166126251221
    4. '':
' → logprob: -8.504166603088379
    5. ':' → logprob: -9.254166603088379
    6. '__":
' → logprob: -9.629166603088379
    7. '__:' → logprob: -10.129166603088379
    8. '():
' → logprob: -11.379166603088379
    9. '':
' → logprob: -12.129166603088379
    10. '```' → logprob: -12.379166603088379

Token 495: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.056967366486787796
    2. '   ' → logprob: -3.056967258453369
    3. ' main' → logprob: -4.806967258453369
    4. '	main' → logprob: -8.681967735290527
    5. '_main' → logprob: -13.931967735290527
    6. '(main' → logprob: -14.306967735290527
    7. '    
' → logprob: -15.181967735290527
    8. ' ' → logprob: -15.181967735290527
    9. '  ' → logprob: -15.431967735290527
    10. 'import' → logprob: -16.30696678161621

Token 496: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.25
    3. '	main' → logprob: -21.5
    4. 'import' → logprob: -23.25
    5. '   ' → logprob: -23.75
    6. '_main' → logprob: -25.75
    7. '.main' → logprob: -26.625
    8. '(main' → logprob: -26.875
    9. 'Main' → logprob: -27.375
    10. '主' → logprob: -28.875

Token 497: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 495
Tokens correctement prédits (1ère position, stricte): 239
Tokens correctement prédits (1ère position, avec adaptation): 255
Tokens correctement prédits (top 10): 422
Précision stricte (1ère position): 48.28%
Précision adaptée (1ère position): 51.52%
Précision (top 10): 85.25%
================================================================================
