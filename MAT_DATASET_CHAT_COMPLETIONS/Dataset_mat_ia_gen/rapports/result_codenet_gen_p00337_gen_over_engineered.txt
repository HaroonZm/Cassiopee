================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:12:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math
from typing import List, Tuple, Set, Dict, Optional


class Point:
    def __init__(self, x: int, y: int):
        self.x = x
        self.y = y

    def distance_to(self, other: 'Point') -> float:
        return math.hypot(self.x - other.x, self.y - other.y)


class Edge:
    def __init__(self, u: int, v: int, points: List[Point]):
        self.u = u
        self.v = v
        self.points = points  # [Point_u, Point_v]
        self.length = points[0].distance_to(points[1])

    def __lt__(self, other: 'Edge') -> bool:
        return self.length < other.length

    def connects(self, a: int, b: int) -> bool:
        return (self.u == a and self.v == b) or (self.u == b and self.v == a)

    def shares_endpoint_with(self, other: 'Edge') -> bool:
        return self.u == other.u or self.u == other.v or self.v == other.u or self.v == other.v


class UnionFind:
    def __init__(self, n: int):
        self.parent = list(range(n))
        self.rank = [0]*n

    def find(self, a: int) -> int:
        while self.parent[a] != a:
            self.parent[a] = self.parent[self.parent[a]]
            a = self.parent[a]
        return a

    def union(self, a: int, b: int) -> bool:
        a = self.find(a)
        b = self.find(b)
        if a == b:
            return False
        if self.rank[a] < self.rank[b]:
            a, b = b, a
        self.parent[b] = a
        if self.rank[a] == self.rank[b]:
            self.rank[a] += 1
        return True


class VillageGraph:
    def __init__(self, points: List[Point], edges_indices: List[Tuple[int, int]]):
        self.points = points
        self.N = len(points)
        self.original_edges: List[Edge] = []
        for u, v in edges_indices:
            self.original_edges.append(Edge(u, v, [points[u], points[v]]))
        self.edge_map: Dict[Tuple[int,int], Edge] = { (min(e.u,e.v), max(e.u,e.v)): e for e in self.original_edges }

    def all_edges(self) -> List[Edge]:
        edges = []
        for i in range(self.N):
            for j in range(i+1, self.N):
                edge = Edge(i, j, [self.points[i], self.points[j]])
                edges.append(edge)
        return edges


class BoundaryConditionChecker:
    @staticmethod
    def is_inside_polygon(polygon: List[Point], a: Point, b: Point) -> bool:
        # We check if segment ab is entirely inside or on polygon boundary.
        # Because polygon is convex (convex hull), check segment is inside polygon if:
        # segment does not cross outside polygon edges.
        # Actually, for convex polygon segment ab inside iff both endpoints inside polygon, and line doesn't cross outside
        # But "the line between any two villages does not pass outside"
        # We check line ab against polygon edges for intersection excluding endpoints on polygon vertices.
        # We only need to confirm segment ab does not cross polygon exterior.
        return BoundaryConditionChecker.segment_inside_convex_polygon(polygon, a, b)

    @staticmethod
    def segment_inside_convex_polygon(polygon: List[Point], a: Point, b: Point) -> bool:
        # polygon is convex polygon represented as list of its vertices in CCW order.
        # We'll check the segment ab lies inside or on polygon boundary.
        # It is true iff for every polygon edge e, points a and b are on the same side or on the edge line.
        # So for each edge, determine the signed side of a and b.

        def cross(o: Point, p: Point, q: Point) -> float:
            return (p.x - o.x)*(q.y - o.y) - (p.y - o.y)*(q.x - o.x)

        n = len(polygon)
        for i in range(n):
            p1 = polygon[i]
            p2 = polygon[(i+1) % n]
            c_a = cross(p1, p2, a)
            c_b = cross(p1, p2, b)
            # If c_a and c_b have product <0, then a and b are on opposite sides -> segment goes outside polygon
            # If c_a == 0 or c_b == 0 => point lies on edge line, allowed.
            if c_a < -1e-14 and c_b > 1e-14:
                return False
            if c_a > 1e-14 and c_b < -1e-14:
                return False
        return True

    @staticmethod
    def polygon_has_edge(edges: List[Edge], polygon_subset: Set[int]) -> bool:
        # Checks if the polygon boundary edges all exists in edges (path subset)
        # polygon_subset are indices of polygon vertices in order.
        n = len(polygon_subset)
        ps = list(polygon_subset)
        # polygon given only as indices, polygon vertices should be sorted CCW, but this function requires a polygon order.
        # So polygon_subset must be a list in order
        # So will receive ordered polygon indices

        # For the polygon edges defined by consecutive polygon vertices in polygon_subset,
        # check if each edge exists in edges.

        edge_set = {(min(e.u,e.v), max(e.u,e.v)) for e in edges}
        for i in range(len(ps)):
            a = ps[i]
            b = ps[(i+1) % len(ps)]
            if (min(a,b), max(a,b)) not in edge_set:
                return False
        return True


class ConvexHullCalculator:
    @staticmethod
    def convex_hull(points: List[Point]) -> List[int]:
        # Returns indices of points forming the convex hull in CCW order, no duplicates.
        # Using Andrew's monotone chain algorithm.

        pts = [(p.x, p.y, i) for i, p in enumerate(points)]
        pts.sort(key=lambda x: (x[0], x[1]))

        def cross(o, a, b):
            return (a[0]-o[0])*(b[1]-o[1])-(a[1]-o[1])*(b[0]-o[0])

        lower = []
        for p in pts:
            while len(lower) >= 2 and cross(lower[-2], lower[-1], p) <= 0:
                lower.pop()
            lower.append(p)
        upper = []
        for p in reversed(pts):
            while len(upper) >= 2 and cross(upper[-2], upper[-1], p) <= 0:
                upper.pop()
            upper.append(p)
        hull = lower[:-1] + upper[:-1]
        # hull points in CCW order with no duplicates

        indices = [p[2] for p in hull]
        return indices


class VillageRoadPlanner:
    def __init__(self, points: List[Point], edges_indices: List[Tuple[int, int]]):
        self.graph = VillageGraph(points, edges_indices)
        self.N = len(points)
        self.original_edges = self.graph.original_edges
        self.uf_initial = UnionFind(self.N)
        for e in self.original_edges:
            self.uf_initial.union(e.u, e.v)

    def compute(self) -> float:
        # Step 1: Compute convex hull polygon of all points
        hull_indices = ConvexHullCalculator.convex_hull(self.graph.points)  # CCW order
        hull_set = set(hull_indices)

        # Step 2: Check edges on hull exist in original edges, else they need to be constructed
        # We'll build the minimal total length that includes all needed hull edges
        # Step 3: Build graph edges which are original edges or hull polygon edges (added if missing)

        # Build hull polygon edges
        hull_edges = []
        points = self.graph.points
        for i in range(len(hull_indices)):
            u = hull_indices[i]
            v = hull_indices[(i+1) % len(hull_indices)]
            e = self.graph.edge_map.get((min(u,v), max(u,v)))
            if e is None:
                # Constructed edge
                e = Edge(u, v, [points[u], points[v]])
            hull_edges.append(e)

        # Now create a union find for hull edges to enforce boundary edges
        uf = UnionFind(self.N)
        for e in hull_edges:
            uf.union(e.u, e.v)

        # Step 4: From the original edges that are not on hull, add edges that:
        # (a) do not violate the convex hull boundary condition:
        # For every pair of points u,v: the segment must be inside or on hull polygon, so check segment inside polygon condition
        # (b) maintains graph connectivity.
        # We aim to minimize total cost of edges selected including hull edges.

        # We'll generate candidate edges:
        # - mandatory hull edges
        # - original edges inside polygon satisfying condition

        # Step 5: All points are inside or on hull polygon.
        # The polygon is convex hull.
        # So any segment between points inside polygon should also be inside polygon, but problem states condition:
        # segment between any two villages shall not go outside polygon.

        # So check for each edge in original edges if segment inside polygon.

        # And also the original edges on hull must be used.

        # Step 6: Kruskal MST over all nodes with mandatory hull edges included:
        # Start uf with hull edges, then add original edges allowed ordered by length incrementally to connect all

        # Prepare the polygon points list for polygon checks
        polygon_points = [points[i] for i in hull_indices]

        # Candidate edges: original edges that are NOT hull edges, and inside polygon
        candidates: List[Edge] = []
        hull_edge_set = {(min(e.u,e.v), max(e.u,e.v)) for e in hull_edges}
        for e in self.original_edges:
            edge_key = (min(e.u,e.v), max(e.u,e.v))
            if edge_key in hull_edge_set:
                continue
            # Check inside polygon condition:
            a = points[e.u]
            b = points[e.v]
            if BoundaryConditionChecker.is_inside_polygon(polygon_points, a, b):
                candidates.append(e)
        # Also consider constructed edges on hull that are not original edges
        # these constructed hull edges: length will be added, must be mandatory

        for e in hull_edges:
            edge_key = (min(e.u,e.v), max(e.u,e.v))
            if edge_key not in self.graph.edge_map:
                candidates.append(e)

        # Sort candidates by length ascending
        candidates.sort(key=lambda e: e.length)

        # Kruskal with forced hull edges unioned first:
        for e in hull_edges:
            uf.union(e.u, e.v)

        # Add candidates to connect all
        for e in candidates:
            uf.union(e.u, e.v)

        # Verify connectivity
        roots = {uf.find(i) for i in range(self.N)}
        if len(roots) != 1:
            # Not fully connected, need to add inside edges ignoring polygon condition, or fail
            # but problem guarantees connectivity by original edges, so skip

            # But this should not happen since initial graph is connected.
            pass

        # Step 7: Now find MST that includes hull edges and stay inside polygon boundary

        # We try method: MST forced with hull edges included plus other allowed edges

        uf2 = UnionFind(self.N)
        for e in hull_edges:
            uf2.union(e.u, e.v)

        mst_edges = list(hull_edges)
        for e in candidates:
            if uf2.find(e.u) != uf2.find(e.v):
                uf2.union(e.u, e.v)
                mst_edges.append(e)

        # Final total length
        total_length = sum(e.length for e in mst_edges)

        return total_length


def main():
    import sys
    input = sys.stdin.readline

    V, R = map(int, input().split())
    points = []
    for _ in range(V):
        x, y = map(int, input().split())
        points.append(Point(x, y))
    edges_indices = []
    for _ in range(R):
        s, t = map(int, input().split())
        edges_indices.append((s-1, t-1))

    planner = VillageRoadPlanner(points, edges_indices)
    res = planner.compute()
    print(f"{res:.10f}")


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0005792465526610613
    2. '```' → logprob: -8.750578880310059
    3. '\n' → logprob: -9.000578880310059
    4. '<|end|>' → logprob: -9.625578880310059
    5. '\' → logprob: -9.750578880310059
    6. 'import' → logprob: -10.250578880310059
    7. '.pi' → logprob: -10.625578880310059
    8. '.e' → logprob: -10.875578880310059
    9. 'def' → logprob: -11.375578880310059
    10. '.

' → logprob: -11.625578880310059

Token 4: ' typing' (ID: 34152)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.5645936727523804
    2. ' math' → logprob: -1.4395936727523804
    3. ' sys' → logprob: -3.06459379196167
    4. ' collections' → logprob: -3.18959379196167
    5. ' numpy' → logprob: -3.68959379196167
    6. ' statistics' → logprob: -3.93959379196167
    7. ' random' → logprob: -4.43959379196167
    8. 'os' → logprob: -4.43959379196167
    9. 'math' → logprob: -4.43959379196167
    10. 'cmath' → logprob: -5.31459379196167

Token 5: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5626181364059448
    2. ' import' → logprob: -0.9376181364059448
    3. '.' → logprob: -3.3126182556152344
    4. '```' → logprob: -7.062618255615234
    5. '.import' → logprob: -7.812618255615234
    6. 'as' → logprob: -8.312618255615234
    7. ' as' → logprob: -8.437618255615234
    8. '_import' → logprob: -8.437618255615234
    9. '	import' → logprob: -9.437618255615234
    10. '[' → logprob: -9.812618255615234

Token 6: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.9096447229385376
    2. 'List' → logprob: -1.2846447229385376
    3. 'Any' → logprob: -1.5346447229385376
    4. ' Any' → logprob: -2.784644603729248
    5. ' Optional' → logprob: -3.909644603729248
    6. 'Optional' → logprob: -4.534644603729248
    7. ' Union' → logprob: -5.159644603729248
    8. 'Union' → logprob: -5.409644603729248
    9. 'Iterable' → logprob: -7.534644603729248
    10. ' Callable' → logprob: -7.534644603729248

Token 7: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2371312379837036
    2. '```' → logprob: -2.487131118774414
    3. '

' → logprob: -3.112131118774414
    4. '\n' → logprob: -3.362131118774414
    5. '
' → logprob: -3.862131118774414
    6. '\' → logprob: -4.112131118774414
    7. '<|end|>' → logprob: -5.612131118774414
    8. ',' → logprob: -6.237131118774414
    9. 'import' → logprob: -6.487131118774414
    10. '``' → logprob: -6.862131118774414

Token 8: ' Tuple' (ID: 50841)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -1.0280555486679077
    2. 'Tuple' → logprob: -1.1530555486679077
    3. ' Union' → logprob: -2.2780556678771973
    4. 'Union' → logprob: -2.4030556678771973
    5. ' Tuple' → logprob: -2.7780556678771973
    6. ' Optional' → logprob: -2.9030556678771973
    7. 'Any' → logprob: -5.153055667877197
    8. ' Callable' → logprob: -5.653055667877197
    9. 'Callable' → logprob: -5.778055667877197
    10. 'Dict' → logprob: -7.153055667877197

Token 9: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6428418159484863
    2. '```' → logprob: -0.8928418159484863
    3. '
' → logprob: -3.2678418159484863
    4. ':' → logprob: -5.017841815948486
    5. '\n' → logprob: -5.142841815948486
    6. '

' → logprob: -5.642841815948486
    7. '\' → logprob: -6.017841815948486
    8. 'class' → logprob: -6.017841815948486
    9. '``' → logprob: -6.142841815948486
    10. ',' → logprob: -6.892841815948486

Token 10: ' Set' (ID: 3957)
  Prédit: ' Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Union' → logprob: -0.9998456239700317
    2. ' Callable' → logprob: -1.6248456239700317
    3. 'Union' → logprob: -1.6248456239700317
    4. 'Callable' → logprob: -2.749845504760742
    5. 'Optional' → logprob: -2.874845504760742
    6. ' Optional' → logprob: -3.249845504760742
    7. ' Dict' → logprob: -3.749845504760742
    8. 'Dict' → logprob: -3.874845504760742
    9. 'Any' → logprob: -3.999845504760742
    10. ' Any' → logprob: -5.249845504760742

Token 11: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.27990609407424927
    2. '```' → logprob: -1.6549060344696045
    3. 'class' → logprob: -3.7799060344696045
    4. '

' → logprob: -4.279906272888184
    5. '\n' → logprob: -5.529906272888184
    6. '
' → logprob: -5.904906272888184
    7. ',' → logprob: -5.904906272888184
    8. '``' → logprob: -6.279906272888184
    9. '\' → logprob: -6.279906272888184
    10. ':' → logprob: -6.779906272888184

Token 12: ' Dict' (ID: 55179)
  Prédit: 'Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dict' → logprob: -0.37705203890800476
    2. ' Dict' → logprob: -1.2520520687103271
    3. 'Optional' → logprob: -4.502051830291748
    4. ' Optional' → logprob: -5.377051830291748
    5. 'Union' → logprob: -5.877051830291748
    6. 'Iterable' → logprob: -6.002051830291748
    7. 'dict' → logprob: -6.127051830291748
    8. 'Any' → logprob: -6.502051830291748
    9. ' Union' → logprob: -6.752051830291748
    10. ' defaultdict' → logprob: -7.252051830291748

Token 13: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7142301797866821
    2. '
' → logprob: -1.8392301797866821
    3. '

' → logprob: -1.9642301797866821
    4. '```' → logprob: -2.4642300605773926
    5. '\n' → logprob: -2.8392300605773926
    6. 'class' → logprob: -3.5892300605773926
    7. ',' → logprob: -4.339230060577393
    8. '\' → logprob: -4.839230060577393
    9. '<|end|>' → logprob: -4.839230060577393
    10. 'import' → logprob: -5.714230060577393

Token 14: ' Optional' (ID: 19351)
  Prédit: ' Optional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -1.00406813621521
    2. ' Union' → logprob: -1.50406813621521
    3. 'Optional' → logprob: -1.87906813621521
    4. 'Any' → logprob: -2.50406813621521
    5. 'Union' → logprob: -2.50406813621521
    6. ' Callable' → logprob: -2.87906813621521
    7. ' Any' → logprob: -3.87906813621521
    8. 'Callable' → logprob: -4.629068374633789
    9. 'Iterable' → logprob: -5.129068374633789
    10. ' defaultdict' → logprob: -7.129068374633789

Token 15: '


' (ID: 2499)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8523909449577332
    2. '

' → logprob: -1.477391004562378
    3. '```' → logprob: -1.977391004562378
    4. 'class' → logprob: -2.227391004562378
    5. '
' → logprob: -3.352391004562378
    6. 'import' → logprob: -3.852391004562378
    7. ',' → logprob: -4.102390766143799
    8. '\n' → logprob: -4.977390766143799
    9. ':' → logprob: -5.727390766143799
    10. '\' → logprob: -5.852390766143799

Token 16: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.050370197743177414
    2. 'class' → logprob: -3.050370216369629
    3. 'd' → logprob: -6.675370216369629
    4. '```' → logprob: -7.675370216369629
    5. 'de' → logprob: -10.300370216369629
    6. '#' → logprob: -11.925370216369629
    7. ' class' → logprob: -13.300370216369629
    8. 'import' → logprob: -13.425370216369629
    9. 'clas' → logprob: -13.425370216369629
    10. ' def' → logprob: -13.550370216369629

Token 17: ' Point' (ID: 9971)
  Prédit: ' My'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' My' → logprob: -1.0975871086120605
    2. ' Geometry' → logprob: -1.2225871086120605
    3. ' Calculator' → logprob: -1.9725871086120605
    4. ' Math' → logprob: -2.9725871086120605
    5. ' Vector' → logprob: -3.0975871086120605
    6. ' Shape' → logprob: -3.5975871086120605
    7. ' Factor' → logprob: -3.7225871086120605
    8. ' ' → logprob: -4.4725871086120605
    9. ' Circle' → logprob: -4.7225871086120605
    10. ' Space' → logprob: -4.8475871086120605

Token 18: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00036906293826177716
    2. '(' → logprob: -8.12536907196045
    3. '):' → logprob: -10.75036907196045
    4. '<|end|>' → logprob: -11.00036907196045
    5. ' :' → logprob: -11.12536907196045
    6. '():' → logprob: -11.62536907196045
    7. ':**' → logprob: -12.37536907196045
    8. ':
' → logprob: -12.87536907196045
    9. ',' → logprob: -14.50036907196045
    10. '.' → logprob: -14.62536907196045

Token 19: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.333255797624588
    2. '   ' → logprob: -1.3332557678222656
    3. ' ' → logprob: -5.083255767822266
    4. '(' → logprob: -5.583255767822266
    5. '<|end|>' → logprob: -5.583255767822266
    6. ' :' → logprob: -6.583255767822266
    7. '    ' → logprob: -6.708255767822266
    8. '  ' → logprob: -7.083255767822266
    9. ':
' → logprob: -7.583255767822266
    10. '):' → logprob: -7.583255767822266

Token 20: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5552430748939514
    2. '   ' → logprob: -1.4302430152893066
    3. 'def' (adapté à ' def') → logprob: -1.6802430152893066
    4. '    ' → logprob: -8.930243492126465
    5. '```' → logprob: -9.055243492126465
    6. 'class' → logprob: -9.430243492126465
    7. ' pass' → logprob: -10.430243492126465
    8. '    
' → logprob: -10.430243492126465
    9. ' ' → logprob: -10.680243492126465
    10. '__' → logprob: -11.305243492126465

Token 21: ' __' (ID: 2516)
  Prédit: 'itialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itialize' → logprob: -0.6080816984176636
    2. ' __' → logprob: -1.1080816984176636
    3. 'it' → logprob: -2.608081817626953
    4. 'itial' → logprob: -3.608081817626953
    5. '__' → logprob: -3.983081817626953
    6. ' def' → logprob: -6.608081817626953
    7. 'ine' → logprob: -6.733081817626953
    8. 'init' → logprob: -7.233081817626953
    9. 'inition' → logprob: -7.608081817626953
    10. '```' → logprob: -8.233081817626953

Token 22: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'ini' → logprob: -18.0
    3. ' init' → logprob: -20.125
    4. '_init' → logprob: -21.625
    5. 'inite' → logprob: -21.875
    6. 'int' → logprob: -22.125
    7. 'in' → logprob: -22.875
    8. 'inti' → logprob: -23.875
    9. '	init' → logprob: -24.125
    10. 'innit' → logprob: -24.5

Token 23: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.030714476481080055
    2. '__' → logprob: -4.155714511871338
    3. '(self' → logprob: -4.655714511871338
    4. '<|end|>' → logprob: -6.405714511871338
    5. '(' → logprob: -6.530714511871338
    6. '__(
' → logprob: -6.780714511871338
    7. ' (' → logprob: -8.03071403503418
    8. '__((' → logprob: -8.28071403503418
    9. 'self' → logprob: -9.53071403503418
    10. '<|end|>' → logprob: -10.03071403503418

Token 24: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.2007883671903983e-05
    2. ' self' → logprob: -10.750021934509277
    3. '(self' → logprob: -15.750021934509277
    4. ')' → logprob: -16.125022888183594
    5. '0' → logprob: -16.500022888183594
    6. '_self' → logprob: -16.625022888183594
    7. ',' → logprob: -17.625022888183594
    8. ',self' → logprob: -17.625022888183594
    9. '	self' → logprob: -18.125022888183594
    10. 'x' → logprob: -18.125022888183594

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12714259326457977
    2. 'self' → logprob: -2.8771426677703857
    3. ' ,' → logprob: -3.2521426677703857
    4. ' self' → logprob: -3.7521426677703857
    5. ',self' → logprob: -7.377142429351807
    6. '(self' → logprob: -9.377142906188965
    7. '_self' → logprob: -9.627142906188965
    8. '_coordinates' → logprob: -9.752142906188965
    9. '<|end|>' → logprob: -10.502142906188965
    10. 'coordinates' → logprob: -11.002142906188965

Token 26: ' x' (ID: 1215)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.663010835647583
    2. 'x' → logprob: -0.913010835647583
    3. ' self' → logprob: -2.913010835647583
    4. ' x' → logprob: -3.538010835647583
    5. '   ' → logprob: -12.913010597229004
    6. ' ' → logprob: -13.038010597229004
    7. '```' → logprob: -15.663010597229004
    8. '	x' → logprob: -16.28801155090332
    9. ')x' → logprob: -16.28801155090332
    10. '	self' → logprob: -16.28801155090332

Token 27: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28491491079330444
    2. ',' → logprob: -1.4099149703979492
    3. ':int' → logprob: -5.784914970397949
    4. ')' → logprob: -7.909914970397949
    5. '):' → logprob: -8.53491497039795
    6. '<|end|>' → logprob: -10.15991497039795
    7. '<|end|>' → logprob: -10.53491497039795
    8. ' ,' → logprob: -10.53491497039795
    9. '=' → logprob: -11.90991497039795
    10. ':,' → logprob: -12.15991497039795

Token 28: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.9522848129272461
    2. 'int' → logprob: -1.077284812927246
    3. ' float' → logprob: -1.577284812927246
    4. 'float' → logprob: -2.702284812927246
    5. ':int' → logprob: -11.202284812927246
    6. '=float' → logprob: -12.702284812927246
    7. ' ' → logprob: -12.952284812927246
    8. '	float' → logprob: -13.077284812927246
    9. ')' → logprob: -13.077284812927246
    10. 'flo' → logprob: -13.202284812927246

Token 29: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019460011390037835
    2. ' ,' → logprob: -8.875194549560547
    3. '<|end|>' → logprob: -10.250194549560547
    4. ')' → logprob: -11.625194549560547
    5. ',int' → logprob: -12.625194549560547
    6. '<|end|>' → logprob: -12.875194549560547
    7. '):' → logprob: -13.125194549560547
    8. ',x' → logprob: -14.625194549560547
    9. ',
' → logprob: -14.750194549560547
    10. '‌,' → logprob: -14.875194549560547

Token 30: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.06198415905237198
    2. 'y' → logprob: -2.811984062194824
    3. '<|end|>' → logprob: -11.311984062194824
    4. '<|end|>' → logprob: -13.436984062194824
    5. ' ' → logprob: -13.561984062194824
    6. ' ' → logprob: -14.061984062194824
    7. '	y' → logprob: -14.811984062194824
    8. ')' → logprob: -16.31198501586914
    9. ')y' → logprob: -17.18698501586914
    10. ',' → logprob: -17.31198501586914

Token 31: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2109292447566986
    2. '):' → logprob: -1.710929274559021
    3. ')' → logprob: -4.7109293937683105
    4. ':int' → logprob: -7.8359293937683105
    5. '):
' → logprob: -10.210928916931152
    6. '<|end|>' → logprob: -11.335928916931152
    7. ' ):' → logprob: -11.835928916931152
    8. '<|end|>' → logprob: -11.960928916931152
    9. '}:' → logprob: -12.585928916931152
    10. '```' → logprob: -13.460928916931152

Token 32: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5759735703468323
    2. 'int' → logprob: -0.8259735703468323
    3. ':int' → logprob: -10.950973510742188
    4. '=int' → logprob: -12.075973510742188
    5. ')' → logprob: -12.575973510742188
    6. '[int' → logprob: -13.450973510742188
    7. ']int' → logprob: -13.700973510742188
    8. ' ' → logprob: -13.825973510742188
    9. '<int' → logprob: -13.825973510742188
    10. ' )' → logprob: -14.075973510742188

Token 33: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31491756439208984
    2. ')' → logprob: -1.3149175643920898
    3. ':' → logprob: -6.43991756439209
    4. '):
' → logprob: -10.31491756439209
    5. ' ):' → logprob: -11.06491756439209
    6. ',' → logprob: -12.68991756439209
    7. ' )' → logprob: -12.81491756439209
    8. '),' → logprob: -14.56491756439209
    9. '):

' → logprob: -14.68991756439209
    10. '   ' → logprob: -14.93991756439209

Token 34: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08741646260023117
    2. '):' → logprob: -3.337416410446167
    3. ')' → logprob: -3.462416410446167
    4. ' )' → logprob: -5.212416648864746
    5. ' ):' → logprob: -5.212416648864746
    6. 'x' → logprob: -6.587416648864746
    7. '        ' → logprob: -6.837416648864746
    8. ' ' → logprob: -7.212416648864746
    9. '<|end|>' → logprob: -7.587416648864746
    10. '    ' → logprob: -7.587416648864746

Token 35: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.16986048221588135
    2. ' self' → logprob: -2.169860363006592
    3. '       ' → logprob: -3.169860363006592
    4. ' ' → logprob: -12.04486083984375
    5. '   ' → logprob: -12.41986083984375
    6. '	self' → logprob: -13.54486083984375
    7. '```' → logprob: -13.54486083984375
    8. ' ' → logprob: -14.29486083984375
    9. '(self' → logprob: -14.54486083984375
    10. '_self' → logprob: -15.29486083984375

Token 36: '.x' (ID: 3700)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.05492369458079338
    2. '.x' → logprob: -2.9299237728118896
    3. ' .' → logprob: -11.054924011230469
    4. '<|end|>' → logprob: -11.679924011230469
    5. '<|end|>' → logprob: -11.804924011230469
    6. '._' → logprob: -13.304924011230469
    7. 'x' → logprob: -13.804924011230469
    8. '.xlabel' → logprob: -14.304924011230469
    9. ').' → logprob: -14.429924011230469
    10. ' ' → logprob: -14.429924011230469

Token 37: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5768734812736511
    2. ' =' → logprob: -0.8268734812736511
    3. ',' → logprob: -7.326873302459717
    4. '<|end|>' → logprob: -9.076873779296875
    5. ')' → logprob: -9.326873779296875
    6. ' ,' → logprob: -10.576873779296875
    7. '<|end|>' → logprob: -10.951873779296875
    8. ' ' → logprob: -11.826873779296875
    9. ' =)' → logprob: -12.451873779296875
    10. '.' → logprob: -12.701873779296875

Token 38: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.048587486147880554
    2. ' x' → logprob: -3.0485875606536865
    3. '	x' → logprob: -16.548587799072266
    4. ')x' → logprob: -18.048587799072266
    5. ' ' → logprob: -19.548587799072266
    6. '(x' → logprob: -19.673587799072266
    7. '$x' → logprob: -20.173587799072266
    8. '"x' → logprob: -20.423587799072266
    9. '```' → logprob: -20.798587799072266
    10. '    ' → logprob: -21.173587799072266

Token 39: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3258572518825531
    2. '<|end|>' → logprob: -1.3258572816848755
    3. '
' → logprob: -4.450857162475586
    4. '<|end|>' → logprob: -8.075857162475586
    5. '        
' → logprob: -8.950857162475586
    6. ' 
' → logprob: -9.200857162475586
    7. '  
' → logprob: -9.450857162475586
    8. '        ' → logprob: -9.825857162475586
    9. '   ' → logprob: -10.325857162475586
    10. ' ' → logprob: -10.450857162475586

Token 40: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022404544055461884
    2. '<|end|>' → logprob: -3.897404432296753
    3. '
' → logprob: -6.522404670715332
    4. ' ' → logprob: -9.272404670715332
    5. '<|end|>' → logprob: -9.522404670715332
    6. '        
' → logprob: -10.022404670715332
    7. '   ' → logprob: -10.272404670715332
    8. ',' → logprob: -10.522404670715332
    9. ' 
' → logprob: -10.647404670715332
    10. '    
' → logprob: -10.772404670715332

Token 41: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24568423628807068
    2. 'self' (adapté à ' self') → logprob: -1.620684266090393
    3. '<|end|>' → logprob: -4.2456841468811035
    4. ' self' → logprob: -6.1206841468811035
    5. ' ' → logprob: -6.7456841468811035
    6. '        
' → logprob: -7.6206841468811035
    7. '   ' → logprob: -7.6206841468811035
    8. '
' → logprob: -7.8706841468811035
    9. '        ' → logprob: -8.120684623718262
    10. '<|end|>' → logprob: -8.620684623718262

Token 42: '.y' (ID: 4486)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1428825706243515
    2. '.y' → logprob: -2.0178825855255127
    3. ' .' → logprob: -9.017882347106934
    4. '.x' → logprob: -10.017882347106934
    5. 'y' → logprob: -11.267882347106934
    6. '<|end|>' → logprob: -11.517882347106934
    7. ')' → logprob: -12.017882347106934
    8. ' ' → logprob: -13.017882347106934
    9. ',' → logprob: -13.142882347106934
    10. ' y' → logprob: -13.267882347106934

Token 43: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.719201385974884
    2. ' =' → logprob: -1.3442013263702393
    3. '<|end|>' → logprob: -1.4692013263702393
    4. '<|end|>' → logprob: -3.8442013263702393
    5. ')' → logprob: -7.719201564788818
    6. ' ' → logprob: -9.84420108795166
    7. ',' → logprob: -10.46920108795166
    8. ' )' → logprob: -11.46920108795166
    9. ' =)' → logprob: -11.84420108795166
    10. ' ' → logprob: -11.96920108795166

Token 44: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3868715465068817
    2. 'y' → logprob: -1.136871576309204
    3. '	y' → logprob: -15.136871337890625
    4. ' ' → logprob: -16.136871337890625
    5. ' ' → logprob: -16.511871337890625
    6. '<|end|>' → logprob: -17.511871337890625
    7. ')y' → logprob: -17.886871337890625
    8. '(y' → logprob: -18.011871337890625
    9. '   ' → logprob: -18.011871337890625
    10. ')' → logprob: -18.011871337890625

Token 45: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.015233403071761131
    2. '<|end|>' → logprob: -4.640233516693115
    3. '    
' → logprob: -5.765233516693115
    4. '   ' → logprob: -6.765233516693115
    5. '

' → logprob: -8.140233039855957
    6. ' 
' → logprob: -8.765233039855957
    7. '
    
' → logprob: -8.890233039855957
    8. '\n' → logprob: -8.890233039855957
    9. '        
' → logprob: -8.890233039855957
    10. '<|end|>' → logprob: -9.265233039855957

Token 46: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.017118429765105247
    2. '   ' → logprob: -4.517118453979492
    3. '    
' → logprob: -5.517118453979492
    4. '

' → logprob: -6.892118453979492
    5. 'def' → logprob: -7.517118453979492
    6. '<|end|>' → logprob: -8.767118453979492
    7. ' 
' → logprob: -9.142118453979492
    8. '
    
' → logprob: -9.892118453979492
    9. ' def' → logprob: -10.392118453979492
    10. '  
' → logprob: -10.892118453979492

Token 47: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0017390783177688718
    2. ' def' → logprob: -6.501739025115967
    3. '   ' → logprob: -8.751739501953125
    4. '
' → logprob: -9.876739501953125
    5. '    
' → logprob: -10.626739501953125
    6. '        
' → logprob: -14.126739501953125
    7. ' 
' → logprob: -14.501739501953125
    8. '

' → logprob: -14.751739501953125
    9. ' ' → logprob: -14.876739501953125
    10. '```' → logprob: -15.626739501953125

Token 48: ' distance' (ID: 9324)
  Prédit: ' distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distance' → logprob: -0.31411147117614746
    2. 'distance' → logprob: -2.1891114711761475
    3. ' ' → logprob: -2.9391114711761475
    4. '_distance' → logprob: -3.0641114711761475
    5. ' __' → logprob: -3.4391114711761475
    6. '_' → logprob: -4.564111709594727
    7. ' def' → logprob: -5.314111709594727
    8. ' distances' → logprob: -5.564111709594727
    9. ' _' → logprob: -6.814111709594727
    10. ' ' → logprob: -7.314111709594727

Token 49: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.5939129590988159
    2. '(' → logprob: -1.093912959098816
    3. '_' → logprob: -2.8439130783081055
    4. '(self' → logprob: -2.9689130783081055
    5. '_squared' → logprob: -7.2189130783081055
    6. '_from' → logprob: -7.9689130783081055
    7. 'To' → logprob: -8.093913078308105
    8. '_(' → logprob: -8.093913078308105
    9. 'to' → logprob: -8.218913078308105
    10. '_between' → logprob: -8.468913078308105

Token 50: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02490895986557007
    2. '(' → logprob: -3.774909019470215
    3. '<|end|>' → logprob: -6.774909019470215
    4. 'self' → logprob: -8.399909019470215
    5. '<|end|>' → logprob: -9.149909019470215
    6. '(other' → logprob: -9.524909019470215
    7. ' (' → logprob: -10.149909019470215
    8. 'other' → logprob: -10.649909019470215
    9. '(Point' → logprob: -11.774909019470215
    10. '_point' → logprob: -11.774909019470215

Token 51: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012924972688779235
    2. ' ,' → logprob: -7.001292705535889
    3. 'other' → logprob: -8.62629222869873
    4. '<|end|>' → logprob: -9.00129222869873
    5. 'another' → logprob: -10.62629222869873
    6. '<|end|>' → logprob: -11.00129222869873
    7. ')' → logprob: -11.37629222869873
    8. 'self' → logprob: -12.12629222869873
    9. ' ' → logprob: -12.50129222869873
    10. '(' → logprob: -12.62629222869873

Token 52: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.20735466480255127
    2. 'other' → logprob: -1.7073546648025513
    3. 'self' → logprob: -5.707354545593262
    4. ' self' → logprob: -5.957354545593262
    5. ' ' → logprob: -12.457354545593262
    6. ' point' → logprob: -12.832354545593262
    7. '_other' → logprob: -13.082354545593262
    8. ' another' → logprob: -13.332354545593262
    9. '<|end|>' → logprob: -13.582354545593262
    10. 'another' → logprob: -14.207354545593262

Token 53: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008611856959760189
    2. ')' → logprob: -5.383611679077148
    3. '):' → logprob: -5.633611679077148
    4. ' :' → logprob: -8.758611679077148
    5. '<|end|>' → logprob: -9.383611679077148
    6. ' )' → logprob: -10.133611679077148
    7. ' ):' → logprob: -10.133611679077148
    8. '_point' → logprob: -10.633611679077148
    9. '<|end|>' → logprob: -11.133611679077148
    10. '):
' → logprob: -11.258611679077148

Token 54: ' '' (ID: 461)
  Prédit: ' Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.03581759333610535
    2. 'Point' → logprob: -3.4108176231384277
    3. ')' → logprob: -6.410817623138428
    4. ' )' → logprob: -8.78581714630127
    5. '<|end|>' → logprob: -9.16081714630127
    6. '<Point' → logprob: -9.91081714630127
    7. '(Point' → logprob: -9.91081714630127
    8. '	Point' → logprob: -10.03581714630127
    9. '_Point' → logprob: -10.28581714630127
    10. ' ' → logprob: -10.53581714630127

Token 55: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0001589618914294988
    2. ' Point' → logprob: -8.75015926361084
    3. '	Point' → logprob: -15.37515926361084
    4. '<Point' → logprob: -15.87515926361084
    5. '_Point' → logprob: -16.500158309936523
    6. '.Point' → logprob: -17.625158309936523
    7. '_point' → logprob: -17.750158309936523
    8. 'Points' → logprob: -19.000158309936523
    9. '(Point' → logprob: -19.500158309936523
    10. ' ' → logprob: -19.500158309936523

Token 56: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.14060810208320618
    2. ''):' → logprob: -2.515608072280884
    3. ')' → logprob: -3.015608072280884
    4. '):' → logprob: -7.265608310699463
    5. ''):
' → logprob: -7.890608310699463
    6. ''' → logprob: -9.015607833862305
    7. ':' → logprob: -10.265607833862305
    8. ')':' → logprob: -10.890607833862305
    9. ''):
' → logprob: -11.015607833862305
    10. '`)' → logprob: -11.140607833862305

Token 57: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24777771532535553
    2. ':' → logprob: -2.4977777004241943
    3. ')->' → logprob: -2.6227777004241943
    4. '):' → logprob: -3.1227777004241943
    5. ' ->' → logprob: -4.372777938842773
    6. '->' → logprob: -4.872777938842773
    7. ',' → logprob: -9.622777938842773
    8. ' )->' → logprob: -10.122777938842773
    9. '():' → logprob: -10.372777938842773
    10. '   ' → logprob: -10.622777938842773

Token 58: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.002485169330611825
    2. 'float' → logprob: -6.002485275268555
    3. ' int' → logprob: -12.127485275268555
    4. '	float' → logprob: -13.627485275268555
    5. ' ' → logprob: -13.752485275268555
    6. ' math' → logprob: -13.877485275268555
    7. ' ' → logprob: -14.502485275268555
    8. 'int' → logprob: -15.752485275268555
    9. '   ' → logprob: -16.127485275268555
    10. '<float' → logprob: -16.627485275268555

Token 59: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007156503852456808
    2. '):' → logprob: -7.875715732574463
    3. '():' → logprob: -8.125715255737305
    4. ' :' → logprob: -10.750715255737305
    5. ':
' → logprob: -11.625715255737305
    6. ':return' → logprob: -12.625715255737305
    7. ':**' → logprob: -12.750715255737305
    8. ',' → logprob: -14.000715255737305
    9. '(' → logprob: -14.625715255737305
    10. ']:' → logprob: -14.625715255737305

Token 60: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07296627759933472
    2. ' math' → logprob: -3.4479663372039795
    3. 'return' → logprob: -3.9479663372039795
    4. ' return' → logprob: -4.8229660987854
    5. 'math' → logprob: -4.8229660987854
    6. '(math' → logprob: -6.9479660987854
    7. ')' → logprob: -7.1979660987854
    8. ':' → logprob: -7.5729660987854
    9. ',' → logprob: -8.947966575622559
    10. '   ' → logprob: -9.447966575622559

Token 61: ' return' (ID: 622)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.38190361857414246
    2. 'math' → logprob: -1.3819036483764648
    3. 'return' (adapté à ' return') → logprob: -3.131903648376465
    4. ' return' → logprob: -3.881903648376465
    5. '       ' → logprob: -6.256903648376465
    6. '(math' → logprob: -9.381903648376465
    7. 'import' → logprob: -9.631903648376465
    8. '```' → logprob: -11.881903648376465
    9. '.math' → logprob: -12.006903648376465
    10. '   ' → logprob: -12.381903648376465

Token 62: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -5.931863051955588e-05
    2. 'math' → logprob: -9.750059127807617
    3. '(math' → logprob: -14.250059127807617
    4. ' ((' → logprob: -15.375059127807617
    5. ' ' → logprob: -16.500059127807617
    6. ' ' → logprob: -18.500059127807617
    7. ' Math' → logprob: -18.750059127807617
    8. '.math' → logprob: -18.750059127807617
    9. ' (' → logprob: -18.875059127807617
    10. '_math' → logprob: -19.750059127807617

Token 63: '.h' (ID: 1508)
  Prédit: '.sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.31370189785957336
    2. '.' → logprob: -1.313701868057251
    3. '.s' → logprob: -7.93870210647583
    4. '.dist' → logprob: -10.813701629638672
    5. '.h' → logprob: -10.938701629638672
    6. '.Sqrt' → logprob: -10.938701629638672
    7. '.atan' → logprob: -11.438701629638672
    8. '.pow' → logprob: -12.438701629638672
    9. '.pi' → logprob: -12.688701629638672
    10. ' .' → logprob: -13.063701629638672

Token 64: 'yp' (ID: 1785)
  Prédit: 'yp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yp' → logprob: -0.004766411148011684
    2. 'sqrt' → logprob: -5.879766464233398
    3. '.sqrt' → logprob: -6.879766464233398
    4. 'at' → logprob: -7.379766464233398
    5. 'a' → logprob: -9.629766464233398
    6. '.atan' → logprob: -9.629766464233398
    7. 'atan' → logprob: -9.754766464233398
    8. 'e' → logprob: -10.004766464233398
    9. 'hyp' → logprob: -10.879766464233398
    10. 'ot' → logprob: -11.754766464233398

Token 65: 'ot' (ID: 346)
  Prédit: 'ot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -9.253090865968261e-06
    2. 'o' → logprob: -12.125009536743164
    3. '```' → logprob: -14.125009536743164
    4. 'at' → logprob: -14.250009536743164
    5. 'otp' → logprob: -14.500009536743164
    6. '``' → logprob: -14.875009536743164
    7. '[' → logprob: -15.000009536743164
    8. 't' → logprob: -15.500009536743164
    9. 'oton' → logprob: -15.500009536743164
    10. 'otlin' → logprob: -15.625009536743164

Token 66: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004312734119594097
    2. '(' → logprob: -5.504312515258789
    3. '(other' → logprob: -8.379312515258789
    4. ' (' → logprob: -13.504312515258789
    5. 'self' → logprob: -13.504312515258789
    6. '((' → logprob: -13.629312515258789
    7. '(
' → logprob: -15.004312515258789
    8. ' self' → logprob: -15.254312515258789
    9. 'other' → logprob: -16.75431251525879
    10. '(s' → logprob: -17.50431251525879

Token 67: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.06235282123088837
    2. '.' → logprob: -2.8123528957366943
    3. ' .' → logprob: -7.937352657318115
    4. ' ' → logprob: -11.437353134155273
    5. '   ' → logprob: -12.187353134155273
    6. ' -' → logprob: -12.187353134155273
    7. '.y' → logprob: -12.937353134155273
    8. '.other' → logprob: -13.437353134155273
    9. ').' → logprob: -13.562353134155273
    10. '-' → logprob: -15.437353134155273

Token 68: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.00030042731668800116
    2. '-' → logprob: -8.125300407409668
    3. ' ' → logprob: -12.875300407409668
    4. '-other' → logprob: -14.000300407409668
    5. 'other' → logprob: -14.500300407409668
    6. ' –' → logprob: -15.375300407409668
    7. ',' → logprob: -16.625301361083984
    8. ' ' → logprob: -16.875301361083984
    9. '<|end|>' → logprob: -16.875301361083984
    10. ' -,' → logprob: -17.125301361083984

Token 69: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.029757659882307053
    2. 'other' → logprob: -3.5297577381134033
    3. 'Other' → logprob: -12.779757499694824
    4. '<|end|>' → logprob: -13.154757499694824
    5. '(other' → logprob: -13.654757499694824
    6. '_other' → logprob: -14.029757499694824
    7. '.other' → logprob: -15.029757499694824
    8. ' ' → logprob: -16.15475845336914
    9. '_OTHER' → logprob: -18.15475845336914
    10. '<|end|>' → logprob: -18.15475845336914

Token 70: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.014188768342137337
    2. '.' → logprob: -4.264188766479492
    3. ').' → logprob: -11.514188766479492
    4. ' .' → logprob: -11.639188766479492
    5. '.y' → logprob: -12.889188766479492
    6. '<|end|>' → logprob: -14.264188766479492
    7. ')' → logprob: -14.389188766479492
    8. '`.' → logprob: -14.389188766479492
    9. 'x' → logprob: -14.514188766479492
    10. ' ' → logprob: -15.264188766479492

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003397535183466971
    2. ' ,' → logprob: -8.00033950805664
    3. ',
' → logprob: -12.62533950805664
    4. ')' → logprob: -15.00033950805664
    5. ',self' → logprob: -15.00033950805664
    6. ',

' → logprob: -15.75033950805664
    7. '),' → logprob: -16.00033950805664
    8. 'self' → logprob: -17.75033950805664
    9. '```' → logprob: -17.87533950805664
    10. ',y' → logprob: -18.00033950805664

Token 72: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.22231724858283997
    2. 'self' → logprob: -1.9723172187805176
    3. ' ' → logprob: -3.5973172187805176
    4. ' other' → logprob: -3.9723172187805176
    5. 'other' → logprob: -5.097317218780518
    6. '<|end|>' → logprob: -5.347317218780518
    7. ' ' → logprob: -6.097317218780518
    8. ')' → logprob: -8.597317695617676
    9. '    ' → logprob: -8.722317695617676
    10. '	self' → logprob: -9.222317695617676

Token 73: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0002901757834479213
    2. 'y' → logprob: -8.625289916992188
    3. '.' → logprob: -9.125289916992188
    4. ')' → logprob: -14.750289916992188
    5. ' y' → logprob: -14.875289916992188
    6. '	y' → logprob: -15.250289916992188
    7. ' .' → logprob: -15.250289916992188
    8. ').' → logprob: -15.750289916992188
    9. '<|end|>' → logprob: -15.875289916992188
    10. '<|end|>' → logprob: -16.375289916992188

Token 74: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0003208037815056741
    2. '-' → logprob: -8.375320434570312
    3. ')' → logprob: -9.375320434570312
    4. ' )' → logprob: -13.500320434570312
    5. ' ' → logprob: -14.000320434570312
    6. '.y' → logprob: -14.500320434570312
    7. '<|end|>' → logprob: -14.750320434570312
    8. '-y' → logprob: -14.875320434570312
    9. '-)' → logprob: -15.000320434570312
    10. '))' → logprob: -15.000320434570312

Token 75: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.4740900695323944
    2. 'other' → logprob: -0.9740900993347168
    3. ' ' → logprob: -12.974089622497559
    4. '(other' → logprob: -12.974089622497559
    5. ' y' → logprob: -13.099089622497559
    6. ')' → logprob: -13.474089622497559
    7. '<|end|>' → logprob: -13.724089622497559
    8. 'Other' → logprob: -13.849089622497559
    9. '.other' → logprob: -13.974089622497559
    10. 'y' → logprob: -13.974089622497559

Token 76: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.008834493346512318
    2. 'y' → logprob: -5.383834362030029
    3. ')' → logprob: -5.633834362030029
    4. '.' → logprob: -7.383834362030029
    5. ' y' → logprob: -12.508834838867188
    6. ')y' → logprob: -13.383834838867188
    7. '.)' → logprob: -14.008834838867188
    8. '	y' → logprob: -14.008834838867188
    9. '<|end|>' → logprob: -14.008834838867188
    10. '<|end|>' → logprob: -15.258834838867188

Token 77: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.008129963040119e-06
    2. ' )' → logprob: -12.625003814697266
    3. ')
' → logprob: -14.875003814697266
    4. '))' → logprob: -15.625003814697266
    5. ')return' → logprob: -17.375003814697266
    6. '       ' → logprob: -18.250003814697266
    7. '   ' → logprob: -18.250003814697266
    8. ')

' → logprob: -18.375003814697266
    9. '}' → logprob: -18.375003814697266
    10. ')`' → logprob: -18.625003814697266

Token 78: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.16483277082443237
    2. '
' → logprob: -1.9148328304290771
    3. '

' → logprob: -6.164832592010498
    4. ' class' → logprob: -6.914832592010498
    5. 'def' → logprob: -7.539832592010498
    6. '   ' → logprob: -7.914832592010498
    7. '```' → logprob: -8.789833068847656
    8. '    
' → logprob: -9.039833068847656
    9. ' 
' → logprob: -9.539833068847656
    10. ' ' → logprob: -9.539833068847656

Token 79: ' Edge' (ID: 16396)
  Prédit: ' Polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Polygon' → logprob: -0.3294405937194824
    2. ' Graph' → logprob: -1.8294405937194824
    3. ' Circle' → logprob: -3.2044405937194824
    4. ' Rectangle' → logprob: -3.3294405937194824
    5. ' Geometry' → logprob: -3.9544405937194824
    6. ' Shape' → logprob: -4.329440593719482
    7. ' Cluster' → logprob: -5.579440593719482
    8. ' Line' → logprob: -5.954440593719482
    9. ' Triangle' → logprob: -6.954440593719482
    10. ' Conv' → logprob: -7.204440593719482

Token 80: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002541872672736645
    2. ':
' → logprob: -8.87525463104248
    3. '):' → logprob: -9.87525463104248
    4. '<|end|>' → logprob: -10.12525463104248
    5. ' :' → logprob: -11.50025463104248
    6. '(' → logprob: -11.87525463104248
    7. '():' → logprob: -13.62525463104248
    8. '>:' → logprob: -13.75025463104248
    9. ':**' → logprob: -14.25025463104248
    10. ':

' → logprob: -14.25025463104248

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1503484845161438
    2. ':' → logprob: -2.025348424911499
    3. '<|end|>' → logprob: -5.900348663330078
    4. 'def' → logprob: -6.650348663330078
    5. ' ' → logprob: -6.900348663330078
    6. '    ' → logprob: -7.150348663330078
    7. ' def' → logprob: -7.525348663330078
    8. '  ' → logprob: -7.650348663330078
    9. ':
' → logprob: -7.775348663330078
    10. '):' → logprob: -9.025348663330078

Token 82: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.313366174697876
    2. ' def' → logprob: -1.438366174697876
    3. '   ' → logprob: -3.688366174697876
    4. 'class' → logprob: -5.063365936279297
    5. ' ' → logprob: -9.313365936279297
    6. '```' → logprob: -9.313365936279297
    7. ' __' → logprob: -9.813365936279297
    8. '	def' → logprob: -10.313365936279297
    9. ':' → logprob: -10.688365936279297
    10. ' class' → logprob: -10.938365936279297

Token 83: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.2960264980792999
    2. ' ' → logprob: -1.4210264682769775
    3. '  ' → logprob: -4.796026706695557
    4. ' ' → logprob: -6.046026706695557
    5. ' _' → logprob: -6.171026706695557
    6. '_' → logprob: -7.796026706695557
    7. '__' → logprob: -7.796026706695557
    8. ' ‌' → logprob: -8.046026229858398
    9. ' ```' → logprob: -8.421026229858398
    10. ' init' → logprob: -9.046026229858398

Token 84: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.00011069540778407827
    2. '```' → logprob: -10.625110626220703
    3. '__' → logprob: -10.750110626220703
    4. 'def' → logprob: -10.875110626220703
    5. ' init' → logprob: -11.000110626220703
    6. 'nit' → logprob: -11.625110626220703
    7. '_init' → logprob: -12.375110626220703
    8. 'i' → logprob: -12.375110626220703
    9. 'in' → logprob: -12.750110626220703
    10. 'int' → logprob: -13.000110626220703

Token 85: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2752664387226105
    2. '(self' → logprob: -1.525266408920288
    3. ' (' → logprob: -3.900266408920288
    4. '__(' → logprob: -6.400266647338867
    5. ',' → logprob: -7.400266647338867
    6. '_(' → logprob: -9.025266647338867
    7. '<|end|>' → logprob: -9.025266647338867
    8. 'self' → logprob: -9.775266647338867
    9. ' ' → logprob: -10.025266647338867
    10. '(
' → logprob: -10.150266647338867

Token 86: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12697367370128632
    2. ' self' → logprob: -2.1269736289978027
    3. ' ' → logprob: -11.001974105834961
    4. ')' → logprob: -11.251974105834961
    5. 'u' → logprob: -12.876974105834961
    6. ',' → logprob: -13.001974105834961
    7. 's' → logprob: -13.251974105834961
    8. '(self' → logprob: -13.376974105834961
    9. '	self' → logprob: -13.376974105834961
    10. 'source' → logprob: -14.126974105834961

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2254418283700943
    2. ' ,' → logprob: -1.600441813468933
    3. ' ' → logprob: -10.975441932678223
    4. '_,' → logprob: -12.475441932678223
    5. ' )' → logprob: -12.975441932678223
    6. ')' → logprob: -13.225441932678223
    7. ' ,
' → logprob: -13.600441932678223
    8. '‌,' → logprob: -14.225441932678223
    9. 'self' → logprob: -14.350441932678223
    10. ',
' → logprob: -14.850441932678223

Token 88: ' u' (ID: 337)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.08493244647979736
    2. 'p' → logprob: -3.084932327270508
    3. ' u' → logprob: -4.084932327270508
    4. ' start' → logprob: -4.959932327270508
    5. ' point' → logprob: -5.209932327270508
    6. 'u' → logprob: -6.209932327270508
    7. ' source' → logprob: -6.584932327270508
    8. ' ' → logprob: -7.209932327270508
    9. 'point' → logprob: -7.334932327270508
    10. ')' → logprob: -7.834932327270508

Token 89: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013321444857865572
    2. ',' → logprob: -6.6263322830200195
    3. ' :' → logprob: -12.75133228302002
    4. ':int' → logprob: -13.25133228302002
    5. ' ,' → logprob: -14.00133228302002
    6. ':,' → logprob: -14.62633228302002
    7. '1' → logprob: -16.876331329345703
    8. ')' → logprob: -17.126331329345703
    9. ',:' → logprob: -17.376331329345703
    10. '_id' → logprob: -17.376331329345703

Token 90: ' int' (ID: 677)
  Prédit: ' Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.10860207676887512
    2. 'Point' → logprob: -2.3586020469665527
    3. ' int' → logprob: -5.108602046966553
    4. 'int' → logprob: -6.608602046966553
    5. ' '' → logprob: -7.358602046966553
    6. '	Point' → logprob: -8.733602523803711
    7. ' QPoint' → logprob: -10.358602523803711
    8. ' ' → logprob: -10.358602523803711
    9. ''' → logprob: -10.483602523803711
    10. '<Point' → logprob: -10.983602523803711

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.060365608893335e-05
    2. ' ,' → logprob: -10.125041007995605
    3. ',
' → logprob: -16.00004005432129
    4. '‌,' → logprob: -16.00004005432129
    5. ',int' → logprob: -16.62504005432129
    6. ':' → logprob: -16.75004005432129
    7. '<|end|>' → logprob: -16.87504005432129
    8. ',u' → logprob: -17.25004005432129
    9. ')' → logprob: -17.37504005432129
    10. ',

' → logprob: -18.25004005432129

Token 92: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.474082350730896
    2. 'v' → logprob: -0.974082350730896
    3. ' ' → logprob: -13.099081993103027
    4. ' ' → logprob: -13.974081993103027
    5. '	v' → logprob: -14.099081993103027
    6. ')' → logprob: -14.724081993103027
    7. ' 
' → logprob: -15.099081993103027
    8. ',' → logprob: -15.599081993103027
    9. '    ' → logprob: -16.099082946777344
    10. ' )' → logprob: -16.224082946777344

Token 93: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3555198013782501
    2. ',' → logprob: -1.2305197715759277
    3. ')' → logprob: -5.105519771575928
    4. '):' → logprob: -7.105519771575928
    5. ' ,' → logprob: -9.480520248413086
    6. ':int' → logprob: -10.355520248413086
    7. '=' → logprob: -11.105520248413086
    8. ' )' → logprob: -11.355520248413086
    9. ' :' → logprob: -11.480520248413086
    10. ' ):' → logprob: -11.980520248413086

Token 94: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6335948705673218
    2. ' int' → logprob: -0.7585948705673218
    3. '<|end|>' → logprob: -8.133594512939453
    4. ')' → logprob: -8.508594512939453
    5. '[int' → logprob: -8.508594512939453
    6. ':int' → logprob: -9.383594512939453
    7. ']int' → logprob: -10.008594512939453
    8. '=int' → logprob: -10.508594512939453
    9. '	int' → logprob: -10.633594512939453
    10. '<int' → logprob: -10.633594512939453

Token 95: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.681016743183136
    2. ',' → logprob: -0.806016743183136
    3. ')' → logprob: -3.056016683578491
    4. ':' → logprob: -9.43101692199707
    5. '):
' → logprob: -9.43101692199707
    6. ' ):' → logprob: -11.43101692199707
    7. ' ,' → logprob: -12.18101692199707
    8. '),' → logprob: -12.43101692199707
    9. ',
' → logprob: -13.30601692199707
    10. ' ' → logprob: -13.43101692199707

Token 96: ' points' (ID: 5571)
  Prédit: ' weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' weight' → logprob: -0.29879483580589294
    2. ' w' → logprob: -1.4237948656082153
    3. 'weight' → logprob: -4.298794746398926
    4. 'w' → logprob: -6.173794746398926
    5. ' length' → logprob: -6.798794746398926
    6. ' ' → logprob: -8.423794746398926
    7. ' distance' → logprob: -8.673794746398926
    8. ' cost' → logprob: -8.798794746398926
    9. ')' → logprob: -9.923794746398926
    10. 'length' → logprob: -10.923794746398926

Token 97: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.9160102712921798e-05
    2. '):' → logprob: -11.375029563903809
    3. ')' → logprob: -11.625029563903809
    4. ' :' → logprob: -12.375029563903809
    5. '':' → logprob: -13.500029563903809
    6. '_:' → logprob: -14.000029563903809
    7. ',' → logprob: -14.250029563903809
    8. 's' → logprob: -15.125029563903809
    9. '=' → logprob: -16.250028610229492
    10. ' ' → logprob: -16.375028610229492

Token 98: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.1810125857591629
    2. 'List' → logprob: -1.8060126304626465
    3. ' Optional' → logprob: -7.1810126304626465
    4. ')' → logprob: -8.556012153625488
    5. 'Optional' → logprob: -9.056012153625488
    6. ' ' → logprob: -9.556012153625488
    7. '[List' → logprob: -9.806012153625488
    8. ' )' → logprob: -10.431012153625488
    9. ':' → logprob: -11.181012153625488
    10. '   ' → logprob: -11.931012153625488

Token 99: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004170873435214162
    2. '[int' → logprob: -8.37541675567627
    3. '['' → logprob: -9.25041675567627
    4. '<Point' → logprob: -9.87541675567627
    5. ')' → logprob: -11.75041675567627
    6. '[
' → logprob: -11.75041675567627
    7. 'Point' → logprob: -12.12541675567627
    8. '<|end|>' → logprob: -12.50041675567627
    9. '[List' → logprob: -12.50041675567627
    10. ' [' → logprob: -13.25041675567627

Token 100: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -5.300083648762666e-05
    2. ' Point' → logprob: -10.250053405761719
    3. '	Point' → logprob: -11.375053405761719
    4. 'int' → logprob: -13.250053405761719
    5. '[' → logprob: -13.625053405761719
    6. ')' → logprob: -14.125053405761719
    7. 'Tuple' → logprob: -14.125053405761719
    8. ''' → logprob: -14.250053405761719
    9. '<Point' → logprob: -14.750053405761719
    10. '_Point' → logprob: -15.625053405761719

Token 101: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7067438960075378
    2. ']):' → logprob: -0.9567438960075378
    3. ')' → logprob: -2.5817439556121826
    4. '])' → logprob: -3.8317439556121826
    5. ']' → logprob: -4.0817437171936035
    6. ']:' → logprob: -5.5817437171936035
    7. ']):
' → logprob: -5.8317437171936035
    8. ',' → logprob: -7.3317437171936035
    9. '):
' → logprob: -7.3317437171936035
    10. '],' → logprob: -8.831744194030762

Token 102: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5569795966148376
    2. '       ' → logprob: -1.1819796562194824
    3. '):' → logprob: -2.1819796562194824
    4. ')' → logprob: -5.431979656219482
    5. ',' → logprob: -6.556979656219482
    6. '):
' → logprob: -7.181979656219482
    7. '   ' → logprob: -7.556979656219482
    8. '<|end|>' → logprob: -8.306979179382324
    9. ' :' → logprob: -9.181979179382324
    10. ':
' → logprob: -9.556979179382324

Token 103: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7250382304191589
    2. 'self' (adapté à ' self') → logprob: -0.7250382304191589
    3. '       ' → logprob: -3.4750382900238037
    4. ' ' → logprob: -8.850038528442383
    5. '	self' → logprob: -9.100038528442383
    6. ' ' → logprob: -9.350038528442383
    7. '   ' → logprob: -9.850038528442383
    8. '        ' → logprob: -11.975038528442383
    9. 'super' → logprob: -12.600038528442383
    10. '     ' → logprob: -12.725038528442383

Token 104: '.u' (ID: 22262)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04075533151626587
    2. '.u' → logprob: -3.290755271911621
    3. ' .' → logprob: -6.040755271911621
    4. 'u' → logprob: -9.040755271911621
    5. ' ' → logprob: -9.290755271911621
    6. ' u' → logprob: -10.165755271911621
    7. ':' → logprob: -10.540755271911621
    8. ' =' → logprob: -11.415755271911621
    9. ')' → logprob: -12.040755271911621
    10. ').' → logprob: -12.665755271911621

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18101288378238678
    2. '=' → logprob: -1.8060128688812256
    3. ' ' → logprob: -7.181013107299805
    4. '<|end|>' → logprob: -7.931013107299805
    5. ',' → logprob: -9.306013107299805
    6. ' =
' → logprob: -10.806013107299805
    7. ' ,' → logprob: -11.056013107299805
    8. ')' → logprob: -11.556013107299805
    9. '<|end|>' → logprob: -12.181013107299805
    10. ' )' → logprob: -13.931013107299805

Token 106: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.10025293380022049
    2. 'u' → logprob: -2.350252866744995
    3. '<|end|>' → logprob: -10.850253105163574
    4. ' ' → logprob: -11.350253105163574
    5. '	u' → logprob: -11.600253105163574
    6. ' ' → logprob: -12.225253105163574
    7. 'v' → logprob: -15.600253105163574
    8. ' ‌' → logprob: -16.225252151489258
    9. '=u' → logprob: -16.225252151489258
    10. '<|end|>' → logprob: -16.225252151489258

Token 107: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9146034717559814
    2. 'v' → logprob: -1.5396034717559814
    3. '       ' → logprob: -1.6646034717559814
    4. '<|end|>' → logprob: -2.6646034717559814
    5. ' v' → logprob: -3.2896034717559814
    6. ' ' → logprob: -3.4146034717559814
    7. '
' → logprob: -3.7896034717559814
    8. ' 
' → logprob: -4.789603233337402
    9. ',v' → logprob: -5.664603233337402
    10. '	v' → logprob: -6.039603233337402

Token 109: ' self' (ID: 1051)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.038044363260269165
    2. ' v' → logprob: -3.2880444526672363
    3. 'self' (adapté à ' self') → logprob: -13.413043975830078
    4. ' ' → logprob: -15.038043975830078
    5. '	v' → logprob: -15.413043975830078
    6. ' self' → logprob: -15.538043975830078
    7. ' 
' → logprob: -15.663043975830078
    8. ' ' → logprob: -15.788043975830078
    9. '
' → logprob: -16.288043975830078
    10. ')v' → logprob: -16.788043975830078

Token 110: '.v' (ID: 5520)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0209960900247097
    2. '.v' → logprob: -4.14599609375
    3. ' =' → logprob: -6.14599609375
    4. '=' → logprob: -6.39599609375
    5. ' .' → logprob: -7.89599609375
    6. ' ' → logprob: -8.39599609375
    7. 'v' → logprob: -9.14599609375
    8. ',' → logprob: -9.14599609375
    9. '<|end|>' → logprob: -9.27099609375
    10. ')' → logprob: -9.77099609375

Token 111: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 112: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6931886672973633
    2. ' v' → logprob: -0.6931886672973633
    3. '<|end|>' → logprob: -10.318188667297363
    4. '	v' → logprob: -12.193188667297363
    5. 'u' → logprob: -13.943188667297363
    6. ' ' → logprob: -13.943188667297363
    7. ' ' → logprob: -14.443188667297363
    8. '<|end|>' → logprob: -15.193188667297363
    9. ' 
' → logprob: -15.943188667297363
    10. '```' → logprob: -16.318187713623047

Token 113: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030540144070982933
    2. '
' → logprob: -3.9055402278900146
    3. '<|end|>' → logprob: -4.6555399894714355
    4. '        
' → logprob: -9.030540466308594
    5. '<|end|>' → logprob: -9.780540466308594
    6. ' ' → logprob: -9.905540466308594
    7. '  
' → logprob: -10.030540466308594
    8. '   ' → logprob: -10.280540466308594
    9. 'self' → logprob: -10.405540466308594
    10. '      ' → logprob: -10.780540466308594

Token 114: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008598887361586094
    2. '
' → logprob: -7.87585973739624
    3. 'self' → logprob: -8.625860214233398
    4. ' self' → logprob: -8.875860214233398
    5. '<|end|>' → logprob: -9.250860214233398
    6. '   ' → logprob: -10.500860214233398
    7. ' ' → logprob: -11.625860214233398
    8. '        
' → logprob: -11.875860214233398
    9. ',' → logprob: -12.000860214233398
    10. '      ' → logprob: -12.500860214233398

Token 115: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3650956451892853
    2. ' self' → logprob: -1.240095615386963
    3. 'points' → logprob: -4.615095615386963
    4. ' points' → logprob: -5.115095615386963
    5. '       ' → logprob: -7.490095615386963
    6. ' ' → logprob: -11.490096092224121
    7. 's' → logprob: -11.865096092224121
    8. '.points' → logprob: -12.365096092224121
    9. '   ' → logprob: -12.615096092224121
    10. '_points' → logprob: -12.740096092224121

Token 116: '.points' (ID: 66693)
  Prédit: '.points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.points' → logprob: -0.06275874376296997
    2. '.' → logprob: -2.812758684158325
    3. 'points' → logprob: -8.312758445739746
    4. '_points' → logprob: -8.812758445739746
    5. '.edges' → logprob: -9.062758445739746
    6. ' .' → logprob: -9.812758445739746
    7. '.point' → logprob: -9.937758445739746
    8. '.Point' → logprob: -10.187758445739746
    9. ' points' → logprob: -10.437758445739746
    10. '	points' → logprob: -11.312758445739746

Token 117: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759705305099487
    2. '=' → logprob: -0.8259705305099487
    3. ' ' → logprob: -11.450970649719238
    4. '<|end|>' → logprob: -11.450970649719238
    5. ')' → logprob: -12.575970649719238
    6. '.' → logprob: -13.325970649719238
    7. ':' → logprob: -13.950970649719238
    8. ' =
' → logprob: -14.075970649719238
    9. '<|end|>' → logprob: -14.450970649719238
    10. '_' → logprob: -14.950970649719238

Token 118: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.005267668981105089
    2. 'points' → logprob: -5.25526762008667
    3. ' []' → logprob: -10.630268096923828
    4. '(points' → logprob: -12.755268096923828
    5. '	points' → logprob: -13.130268096923828
    6. ' [' → logprob: -13.380268096923828
    7. '[' → logprob: -13.630268096923828
    8. '[]' → logprob: -14.005268096923828
    9. ' Points' → logprob: -15.505268096923828
    10. '_points' → logprob: -15.755268096923828

Token 119: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6463924050331116
    2. '<|end|>' → logprob: -0.8963924050331116
    3. '   ' → logprob: -3.021392345428467
    4. '       ' → logprob: -4.146392345428467
    5. '<|end|>' → logprob: -6.271392345428467
    6. '

' → logprob: -7.771392345428467
    7. '    
' → logprob: -8.146392822265625
    8. 'def' → logprob: -8.521392822265625
    9. ' ' → logprob: -8.521392822265625
    10. ',' → logprob: -9.521392822265625

Token 120: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3721286952495575
    2. '<|end|>' → logprob: -1.2471287250518799
    3. 'def' → logprob: -4.247128486633301
    4. '       ' → logprob: -5.622128486633301
    5. '

' → logprob: -6.247128486633301
    6. '<|end|>' → logprob: -6.747128486633301
    7. '   ' → logprob: -7.372128486633301
    8. ' ' → logprob: -7.497128486633301
    9. ' def' → logprob: -7.997128486633301
    10. '
    
' → logprob: -7.997128486633301

Token 121: ' [' (ID: 723)
  Prédit: ' List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.3229084610939026
    2. 'List' → logprob: -1.5729084014892578
    3. ' list' → logprob: -3.197908401489258
    4. ' points' → logprob: -4.572908401489258
    5. ' a' → logprob: -5.447908401489258
    6. ' path' → logprob: -6.072908401489258
    7. ' A' → logprob: -6.447908401489258
    8. 'A' → logprob: -6.572908401489258
    9. ' the' → logprob: -6.947908401489258
    10. ' The' → logprob: -6.947908401489258

Token 122: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.08852767944335938
    2. ')' → logprob: -3.0885276794433594
    3. ']' → logprob: -4.088527679443359
    4. ' Point' → logprob: -4.463527679443359
    5. 'points' → logprob: -6.088527679443359
    6. 'start' → logprob: -6.463527679443359
    7. ' points' → logprob: -6.838527679443359
    8. 'point' → logprob: -7.088527679443359
    9. '<Point' → logprob: -7.338527679443359
    10. ' ]' → logprob: -7.838527679443359

Token 123: '_u' (ID: 17063)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.15721233189105988
    2. '[' → logprob: -2.532212257385254
    3. ',' → logprob: -3.282212257385254
    4. '0' → logprob: -3.907212257385254
    5. '<|end|>' → logprob: -5.407212257385254
    6. ' ' → logprob: -6.782212257385254
    7. ')' → logprob: -7.032212257385254
    8. ' ]' → logprob: -7.157212257385254
    9. '<|end|>' → logprob: -7.532212257385254
    10. ' ,' → logprob: -9.157212257385254

Token 124: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010193521156907082
    2. ']' → logprob: -7.251019477844238
    3. ' ,' → logprob: -8.626019477844238
    4. ',
' → logprob: -9.751019477844238
    5. ')' → logprob: -11.376019477844238
    6. '0' → logprob: -11.501019477844238
    7. '[' → logprob: -11.751019477844238
    8. ' ' → logprob: -11.751019477844238
    9. ',

' → logprob: -11.751019477844238
    10. '<|end|>' → logprob: -12.251019477844238

Token 125: ' Point' (ID: 9971)
  Prédit: '...'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '...' → logprob: -0.7435345649719238
    2. ' Point' → logprob: -1.4935345649719238
    3. 'Point' → logprob: -2.243534564971924
    4. '...,' → logprob: -2.368534564971924
    5. ' ...' → logprob: -3.243534564971924
    6. ' ...,' → logprob: -3.993534564971924
    7. ',' → logprob: -4.118534564971924
    8. ' ,' → logprob: -4.243534564971924
    9. ' point' → logprob: -5.993534564971924
    10. '<Point' → logprob: -6.118534564971924

Token 126: '_v' (ID: 5390)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0073771970346570015
    2. '0' → logprob: -6.1323771476745605
    3. '_,' → logprob: -6.3823771476745605
    4. '_' → logprob: -6.8823771476745605
    5. '_u' → logprob: -7.6323771476745605
    6. ' ,' → logprob: -7.6323771476745605
    7. 'u' → logprob: -7.7573771476745605
    8. ']' → logprob: -7.8823771476745605
    9. ',
' → logprob: -8.632377624511719
    10. 'v' → logprob: -9.382377624511719

Token 127: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005097838002257049
    2. ' ]' → logprob: -7.750509738922119
    3. ']
' → logprob: -9.750510215759277
    4. ',' → logprob: -11.875510215759277
    5. ']

' → logprob: -12.125510215759277
    6. ')' → logprob: -12.625510215759277
    7. '   ' → logprob: -12.875510215759277
    8. '<|end|>' → logprob: -14.500510215759277
    9. '])' → logprob: -14.875510215759277
    10. ' ' → logprob: -14.875510215759277

Token 128: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21476872265338898
    2. '<|end|>' → logprob: -1.7147687673568726
    3. '   ' → logprob: -4.714768886566162
    4. '

' → logprob: -6.339768886566162
    5. '<|end|>' → logprob: -7.089768886566162
    6. '       ' → logprob: -7.714768886566162
    7. '    
' → logprob: -7.964768886566162
    8. ' ' → logprob: -8.214768409729004
    9. 'def' → logprob: -8.714768409729004
    10. ' 
' → logprob: -9.089768409729004

Token 129: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7088103890419006
    2. '       ' → logprob: -1.0838103294372559
    3. 'def' → logprob: -2.708810329437256
    4. '<|end|>' → logprob: -2.958810329437256
    5. ' ' → logprob: -3.958810329437256
    6. '   ' → logprob: -5.083810329437256
    7. 'self' (adapté à ' self') → logprob: -5.208810329437256
    8. ' def' → logprob: -5.583810329437256
    9. ' 
' → logprob: -5.833810329437256
    10. '

' → logprob: -5.958810329437256

Token 130: '.length' (ID: 3116)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.09944382309913635
    2. '.distance' → logprob: -3.7244439125061035
    3. ' .' → logprob: -4.0994439125061035
    4. '.points' → logprob: -4.4744439125061035
    5. 'distance' → logprob: -5.0994439125061035
    6. '_distance' → logprob: -5.0994439125061035
    7. '_points' → logprob: -5.5994439125061035
    8. ':' → logprob: -5.5994439125061035
    9. '.length' → logprob: -5.9744439125061035
    10. 'def' → logprob: -6.0994439125061035

Token 131: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014208049513399601
    2. '=' → logprob: -4.26420783996582
    3. ' ' → logprob: -10.13920783996582
    4. '<|end|>' → logprob: -12.63920783996582
    5. ':' → logprob: -14.26420783996582
    6. '<|end|>' → logprob: -15.01420783996582
    7. ' =
' → logprob: -15.63920783996582
    8. ')' → logprob: -16.13920783996582
    9. ' ' → logprob: -16.38920783996582
    10. '.' → logprob: -16.63920783996582

Token 132: ' points' (ID: 5571)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.25187793374061584
    2. 'self' → logprob: -1.7518779039382935
    3. ' points' → logprob: -3.501878023147583
    4. 'points' → logprob: -5.126877784729004
    5. ' sum' → logprob: -5.251877784729004
    6. ' math' → logprob: -5.626877784729004
    7. 'sum' → logprob: -5.626877784729004
    8. 'math' → logprob: -8.126877784729004
    9. ' max' → logprob: -9.501877784729004
    10. '       ' → logprob: -9.626877784729004

Token 133: '[' (ID: 58)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.006794355809688568
    2. '[' → logprob: -5.006794452667236
    3. '<|end|>' → logprob: -10.506793975830078
    4. '-' → logprob: -10.756793975830078
    5. '][-' → logprob: -11.631793975830078
    6. '[
' → logprob: -12.631793975830078
    7. ')' → logprob: -12.756793975830078
    8. ' [-' → logprob: -13.006793975830078
    9. ' ' → logprob: -13.006793975830078
    10. '.' → logprob: -13.006793975830078

Token 134: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1391127109527588
    2. '1' → logprob: -2.639112710952759
    3. '0' → logprob: -2.889112710952759
    4. ' -' → logprob: -6.38911247253418
    5. ' ' → logprob: -6.88911247253418
    6. '
' → logprob: -9.88911247253418
    7. ']' → logprob: -10.38911247253418
    8. '-
' → logprob: -11.01411247253418
    9. ']-' → logprob: -11.76411247253418
    10. '```' → logprob: -12.51411247253418

Token 135: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.35458436608314514
    2. '.' → logprob: -1.2295843362808228
    3. '.distance' → logprob: -5.354584217071533
    4. ').' → logprob: -7.354584217071533
    5. ']' → logprob: -7.479584217071533
    6. '}.' → logprob: -10.104584693908691
    7. '.
' → logprob: -10.104584693908691
    8. ' .' → logprob: -11.229584693908691
    9. 'distance' → logprob: -11.354584693908691
    10. '.

' → logprob: -11.479584693908691

Token 136: 'distance' (ID: 40614)
  Prédit: 'distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -4.320199877838604e-07
    2. ' distance' → logprob: -15.5
    3. '.distance' → logprob: -16.5
    4. '(distance' → logprob: -21.0
    5. 'difference' → logprob: -21.25
    6. 'dist' → logprob: -21.875
    7. 'Distance' → logprob: -22.0
    8. '_distance' → logprob: -22.625
    9. '   ' → logprob: -23.125
    10. 'd' → logprob: -23.25

Token 137: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -2.8206473871250637e-05
    2. '_' → logprob: -10.750028610229492
    3. '_t' → logprob: -12.500028610229492
    4. ' _' → logprob: -13.250028610229492
    5. 'to' → logprob: -14.625028610229492
    6. 'To' → logprob: -15.375028610229492
    7. '(_' → logprob: -16.125028610229492
    8. '__' → logprob: -16.625028610229492
    9. ')_' → logprob: -17.000028610229492
    10. '_distance' → logprob: -17.250028610229492

Token 138: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.16024839878082275
    2. '(' → logprob: -1.9102483987808228
    3. ' points' → logprob: -11.660248756408691
    4. '(
' → logprob: -12.160248756408691
    5. 'points' → logprob: -12.285248756408691
    6. '(point' → logprob: -12.535248756408691
    7. ' (' → logprob: -13.910248756408691
    8. '(

' → logprob: -14.785248756408691
    9. '(p' → logprob: -16.160247802734375
    10. '()' → logprob: -16.160247802734375

Token 139: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.5954712075181305e-05
    2. ' [' → logprob: -11.625036239624023
    3. '[
' → logprob: -12.125036239624023
    4. '1' → logprob: -12.125036239624023
    5. '][' → logprob: -12.125036239624023
    6. ']' → logprob: -12.625036239624023
    7. ')[' → logprob: -12.875036239624023
    8. '[-' → logprob: -13.250036239624023
    9. ')' → logprob: -13.375036239624023
    10. '```' → logprob: -14.375036239624023

Token 140: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005792465526610613
    2. '-' → logprob: -8.125578880310059
    3. ' ' → logprob: -8.250578880310059
    4. '[' → logprob: -11.875578880310059
    5. ' -' → logprob: -12.375578880310059
    6. ']' → logprob: -12.375578880310059
    7. '[-' → logprob: -13.250578880310059
    8. '   ' → logprob: -13.500578880310059
    9. '])' → logprob: -13.750578880310059
    10. '
' → logprob: -14.750578880310059

Token 141: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002795703476294875
    2. '])' → logprob: -8.375279426574707
    3. ' )' → logprob: -10.875279426574707
    4. ']' → logprob: -11.625279426574707
    5. '())' → logprob: -11.875279426574707
    6. '()' → logprob: -12.250279426574707
    7. '))' → logprob: -12.875279426574707
    8. ')])' → logprob: -13.125279426574707
    9. ')
' → logprob: -13.250279426574707
    10. ')]' → logprob: -13.375279426574707

Token 142: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.030494235455989838
    2. '

' → logprob: -3.905494213104248
    3. '<|end|>' → logprob: -4.655494213104248
    4. '   ' → logprob: -9.030494689941406
    5. '<|end|>' → logprob: -9.030494689941406
    6. '


' → logprob: -9.655494689941406
    7. '    
' → logprob: -10.905494689941406
    8. '
    
' → logprob: -11.405494689941406
    9. 'def' → logprob: -11.405494689941406
    10. '
' → logprob: -11.655494689941406

Token 143: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.03816749155521393
    2. ' def' → logprob: -3.5381674766540527
    3. '   ' → logprob: -5.163167476654053
    4. '
' → logprob: -6.413167476654053
    5. '    
' → logprob: -7.913167476654053
    6. ' ' → logprob: -8.788167953491211
    7. ')' → logprob: -9.413167953491211
    8. 'class' → logprob: -9.913167953491211
    9. '

' → logprob: -10.413167953491211
    10. ',' → logprob: -10.413167953491211

Token 144: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.35096538066864014
    2. '_' → logprob: -1.9759653806686401
    3. ' __' → logprob: -2.4759654998779297
    4. ' ' → logprob: -4.22596549987793
    5. ' add' → logprob: -4.85096549987793
    6. ' is' → logprob: -4.85096549987793
    7. ' other' → logprob: -5.10096549987793
    8. ' reverse' → logprob: -5.10096549987793
    9. ' get' → logprob: -5.22596549987793
    10. ' update' → logprob: -5.35096549987793

Token 145: 'lt' (ID: 3199)
  Prédit: 'lt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lt' → logprob: -0.10086611658334732
    2. 'eq' → logprob: -2.3508660793304443
    3. 'repr' → logprob: -7.350866317749023
    4. 'hash' → logprob: -11.975866317749023
    5. ' lt' → logprob: -12.350866317749023
    6. 'str' → logprob: -13.350866317749023
    7. 'le' → logprob: -13.350866317749023
    8. 'len' → logprob: -13.600866317749023
    9. 'init' → logprob: -13.725866317749023
    10. ' eq' → logprob: -14.475866317749023

Token 146: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.06056930124759674
    2. '__' → logprob: -3.1855692863464355
    3. '_' → logprob: -4.1855692863464355
    4. '(' → logprob: -7.0605692863464355
    5. '_(' → logprob: -7.1855692863464355
    6. '__(
' → logprob: -8.185569763183594
    7. '__((' → logprob: -9.060569763183594
    8. '__('' → logprob: -9.185569763183594
    9. '___' → logprob: -10.435569763183594
    10. '<|end|>' → logprob: -11.060569763183594

Token 147: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004908377304673195
    2. ' self' → logprob: -7.625490665435791
    3. 'other' → logprob: -13.12549114227295
    4. '
' → logprob: -15.12549114227295
    5. ' ' → logprob: -15.12549114227295
    6. ',' → logprob: -15.62549114227295
    7. '(self' → logprob: -16.500490188598633
    8. ')' → logprob: -17.000490188598633
    9. 's' → logprob: -17.125490188598633
    10. ' other' → logprob: -17.250490188598633

Token 148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007595999049954116
    2. ' ,' → logprob: -7.375759601593018
    3. '<|end|>' → logprob: -10.00075912475586
    4. '__,' → logprob: -10.12575912475586
    5. 'self' → logprob: -10.87575912475586
    6. ')' → logprob: -10.87575912475586
    7. 'other' → logprob: -13.12575912475586
    8. ',self' → logprob: -13.37575912475586
    9. '_,' → logprob: -13.37575912475586
    10. ' ' → logprob: -14.00075912475586

Token 149: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.06203624978661537
    2. 'other' → logprob: -2.8120362758636475
    3. ' o' → logprob: -9.687036514282227
    4. 'o' → logprob: -13.437036514282227
    5. ' ' → logprob: -13.437036514282227
    6. ' self' → logprob: -13.937036514282227
    7. 'self' → logprob: -14.062036514282227
    8. 'oth' → logprob: -14.562036514282227
    9. ' oth' → logprob: -14.562036514282227
    10. 'Other' → logprob: -15.312036514282227

Token 150: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2284473329782486
    2. ')' → logprob: -1.6034473180770874
    3. ':' → logprob: -6.228447437286377
    4. '<|end|>' → logprob: -7.603447437286377
    5. '):
' → logprob: -8.478446960449219
    6. ' ):' → logprob: -8.603446960449219
    7. '<|end|>' → logprob: -10.228446960449219
    8. ',' → logprob: -10.478446960449219
    9. ' )' → logprob: -10.603446960449219
    10. ')>' → logprob: -10.728446960449219

Token 151: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6162405014038086
    2. ' '' → logprob: -1.2412405014038086
    3. ' ' → logprob: -2.4912405014038086
    4. ''s' → logprob: -3.6162405014038086
    5. 'self' → logprob: -3.7412405014038086
    6. ')' → logprob: -3.8662405014038086
    7. '<|end|>' → logprob: -4.866240501403809
    8. ' self' → logprob: -5.741240501403809
    9. 'Edge' → logprob: -7.116240501403809
    10. ' )' → logprob: -7.116240501403809

Token 152: 'Edge' (ID: 16577)
  Prédit: 'Edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -0.04859520494937897
    2. ' Edge' → logprob: -3.0485951900482178
    3. ' ' → logprob: -12.923595428466797
    4. '<Edge' → logprob: -13.548595428466797
    5. 'Ed' → logprob: -13.923595428466797
    6. ' edge' → logprob: -14.048595428466797
    7. '.Edge' → logprob: -14.048595428466797
    8. '_edge' → logprob: -14.923595428466797
    9. ')' → logprob: -15.298595428466797
    10. '  ' → logprob: -15.673595428466797

Token 153: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44909873604774475
    2. '):' → logprob: -1.6990987062454224
    3. ''):' → logprob: -1.9490987062454224
    4. '')' → logprob: -3.324098825454712
    5. ')':' → logprob: -8.824098587036133
    6. ' ):' → logprob: -9.199098587036133
    7. ':' → logprob: -9.324098587036133
    8. ''):
' → logprob: -9.699098587036133
    9. ''' → logprob: -9.824098587036133
    10. ' )' → logprob: -10.699098587036133

Token 154: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005283685750328004
    2. '):' → logprob: -8.250528335571289
    3. ':
' → logprob: -8.750528335571289
    4. ':return' → logprob: -9.750528335571289
    5. ' :' → logprob: -10.875528335571289
    6. '<|end|>' → logprob: -11.250528335571289
    7. ')' → logprob: -12.125528335571289
    8. '->' → logprob: -12.750528335571289
    9. '():' → logprob: -12.750528335571289
    10. '):
' → logprob: -13.125528335571289

Token 155: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.11285658925771713
    2. 'bool' → logprob: -2.23785662651062
    3. '	bool' → logprob: -11.3628568649292
    4. '<bool' → logprob: -11.7378568649292
    5. ' ' → logprob: -12.1128568649292
    6. ' ' → logprob: -12.1128568649292
    7. '  ' → logprob: -13.7378568649292
    8. ' 
' → logprob: -14.8628568649292
    9. '.bool' → logprob: -15.3628568649292
    10. '   ' → logprob: -15.4878568649292

Token 156: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00039135036058723927
    2. '):' → logprob: -8.375391006469727
    3. ':
' → logprob: -9.000391006469727
    4. ':return' → logprob: -10.750391006469727
    5. ' :' → logprob: -11.625391006469727
    6. '():' → logprob: -12.875391006469727
    7. '<|end|>' → logprob: -13.375391006469727
    8. ':**' → logprob: -14.000391006469727
    9. '):
' → logprob: -14.500391006469727
    10. '       ' → logprob: -15.000391006469727

Token 157: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02264546789228916
    2. ' return' → logprob: -3.8976454734802246
    3. 'return' → logprob: -6.397645473480225
    4. '
' → logprob: -8.522644996643066
    5. '        
' → logprob: -9.897644996643066
    6. ' 
' → logprob: -10.147644996643066
    7. '   ' → logprob: -10.397644996643066
    8. '<|end|>' → logprob: -10.397644996643066
    9. ' self' → logprob: -10.772644996643066
    10. '    ' → logprob: -11.522644996643066

Token 158: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.029913512989878654
    2. ' return' → logprob: -4.029913425445557
    3. '       ' → logprob: -4.654913425445557
    4. 'self' → logprob: -6.154913425445557
    5. ' self' → logprob: -10.029913902282715
    6. '	return' → logprob: -11.904913902282715
    7. '   ' → logprob: -12.654913902282715
    8. '
' → logprob: -13.779913902282715
    9. 'eturn' → logprob: -14.904913902282715
    10. '{return' → logprob: -15.279913902282715

Token 159: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3132643401622772
    2. 'self' → logprob: -1.3132643699645996
    3. '	self' → logprob: -13.063263893127441
    4. '(self' → logprob: -15.188263893127441
    5. ' ' → logprob: -16.063264846801758
    6. ' ' → logprob: -16.313264846801758
    7. '_self' → logprob: -16.813264846801758
    8. 's' → logprob: -17.563264846801758
    9. '
' → logprob: -17.938264846801758
    10. '   ' → logprob: -18.063264846801758

Token 160: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -2.8921695047756657e-05
    2. '.' → logprob: -10.500028610229492
    3. '.l' → logprob: -13.875028610229492
    4. '.len' → logprob: -15.250028610229492
    5. ' .' → logprob: -15.875028610229492
    6. '.le' → logprob: -16.875028610229492
    7. '.width' → logprob: -17.625028610229492
    8. 'length' → logprob: -18.750028610229492
    9. '.Length' → logprob: -18.750028610229492
    10. '.size' → logprob: -18.875028610229492

Token 161: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.012519069947302341
    2. '<' → logprob: -4.387518882751465
    3. ' ' → logprob: -11.762518882751465
    4. '.' → logprob: -14.512518882751465
    5. '<|end|>' → logprob: -15.012518882751465
    6. ' <
' → logprob: -15.137518882751465
    7. ' <",' → logprob: -15.887518882751465
    8. ' ' → logprob: -16.26251983642578
    9. '   ' → logprob: -16.76251983642578
    10. '  ' → logprob: -16.88751983642578

Token 162: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.004081247374415398
    2. 'other' → logprob: -5.5040812492370605
    3. ' ' → logprob: -13.004080772399902
    4. '(other' → logprob: -15.504080772399902
    5. '.other' → logprob: -15.629080772399902
    6. '_other' → logprob: -16.50408172607422
    7. ' ' → logprob: -16.62908172607422
    8. ' oth' → logprob: -16.75408172607422
    9. ' o' → logprob: -16.87908172607422
    10. 'othe' → logprob: -18.75408172607422

Token 163: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -0.0024779161904007196
    2. '.' → logprob: -6.002478122711182
    3. '.l' → logprob: -13.502477645874023
    4. ' .' → logprob: -14.377477645874023
    5. 'length' → logprob: -16.127477645874023
    6. '.len' → logprob: -16.252477645874023
    7. '.other' → logprob: -16.877477645874023
    8. '.le' → logprob: -17.502477645874023
    9. '.Length' → logprob: -17.752477645874023
    10. '.LENGTH' → logprob: -17.752477645874023

Token 164: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05970411375164986
    2. '<|end|>' → logprob: -2.934704065322876
    3. '

' → logprob: -5.434704303741455
    4. 'class' → logprob: -8.809703826904297
    5. '<|end|>' → logprob: -8.934703826904297
    6. '```' → logprob: -10.184703826904297
    7. '


' → logprob: -10.184703826904297
    8. '\n' → logprob: -10.934703826904297
    9. '
' → logprob: -11.434703826904297
    10. '
    
' → logprob: -11.434703826904297

Token 165: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03436734899878502
    2. 'class' → logprob: -4.034367561340332
    3. '

' → logprob: -4.159367561340332
    4. '


' → logprob: -8.534367561340332
    5. '<|end|>' → logprob: -8.659367561340332
    6. ' class' → logprob: -10.784367561340332
    7. '
' → logprob: -11.034367561340332
    8. '
    
' → logprob: -11.159367561340332
    9. '```' → logprob: -11.409367561340332
    10. 'def' → logprob: -11.409367561340332

Token 166: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.6824089884757996
    2. 'class' → logprob: -0.8074089884757996
    3. '
' → logprob: -3.4324090480804443
    4. ')' → logprob: -5.307408809661865
    5. '#' → logprob: -6.057408809661865
    6. '

' → logprob: -6.182408809661865
    7. '   ' → logprob: -6.182408809661865
    8. ' class' → logprob: -6.682408809661865
    9. '<|end|>' → logprob: -6.807408809661865
    10. ' def' → logprob: -7.182408809661865

Token 167: ' connects' (ID: 47599)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.05681398883461952
    2. '__' → logprob: -3.556813955307007
    3. ' def' → logprob: -4.431814193725586
    4. '_' → logprob: -5.306814193725586
    5. 'repr' → logprob: -5.806814193725586
    6. '_repr' → logprob: -5.931814193725586
    7. 'def' → logprob: -6.681814193725586
    8. ' ' → logprob: -6.681814193725586
    9. ' repr' → logprob: -7.431814193725586
    10. ' is' → logprob: -8.556814193725586

Token 168: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.16425302624702454
    2. '(' → logprob: -1.9142529964447021
    3. ' (' → logprob: -5.914253234863281
    4. '_points' → logprob: -7.914253234863281
    5. '(u' → logprob: -8.039253234863281
    6. 'self' → logprob: -8.914253234863281
    7. '_to' → logprob: -9.164253234863281
    8. '_point' → logprob: -9.539253234863281
    9. '(
' → logprob: -9.539253234863281
    10. '_nodes' → logprob: -9.789253234863281

Token 169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0750553086400032
    2. 'self' → logprob: -3.2000553607940674
    3. ' ,' → logprob: -4.325055122375488
    4. ')' → logprob: -4.575055122375488
    5. 'u' → logprob: -5.700055122375488
    6. ' ' → logprob: -6.450055122375488
    7. ' self' → logprob: -6.700055122375488
    8. ' u' → logprob: -7.200055122375488
    9. ',u' → logprob: -8.075055122375488
    10. '(self' → logprob: -8.450055122375488

Token 170: ' a' (ID: 261)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.3604141473770142
    2. 'self' → logprob: -1.3604141473770142
    3. ' u' → logprob: -1.8604141473770142
    4. ' node' → logprob: -2.2354140281677246
    5. ' self' → logprob: -2.2354140281677246
    6. 'node' → logprob: -2.6104140281677246
    7. 'point' → logprob: -4.360414028167725
    8. ' point' → logprob: -4.485414028167725
    9. 'vertex' → logprob: -4.610414028167725
    10. ' vertex' → logprob: -5.360414028167725

Token 171: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2525654733181
    2. ',' → logprob: -1.5025655031204224
    3. ' ,' → logprob: -8.127565383911133
    4. ':int' → logprob: -8.877565383911133
    5. 'int' → logprob: -9.877565383911133
    6. ' :' → logprob: -10.502565383911133
    7. ' u' → logprob: -10.502565383911133
    8. '   ' → logprob: -10.877565383911133
    9. 'self' → logprob: -10.877565383911133
    10. 'u' → logprob: -11.127565383911133

Token 172: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4037758708000183
    2. ' int' → logprob: -1.153775930404663
    3. 'u' → logprob: -4.903775691986084
    4. ' u' → logprob: -4.903775691986084
    5. 'self' → logprob: -7.028775691986084
    6. ':int' → logprob: -7.653775691986084
    7. 'a' → logprob: -8.528776168823242
    8. ' self' → logprob: -9.153776168823242
    9. ',' → logprob: -9.653776168823242
    10. ')' → logprob: -10.153776168823242

Token 173: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00045247984235174954
    2. ':' → logprob: -8.250452041625977
    3. ' ,' → logprob: -8.625452041625977
    4. ')' → logprob: -11.500452041625977
    5. '   ' → logprob: -14.500452041625977
    6. ',
' → logprob: -14.750452041625977
    7. ',int' → logprob: -15.250452041625977
    8. ':int' → logprob: -15.625452041625977
    9. ' ' → logprob: -16.375452041625977
    10. ' )' → logprob: -17.250452041625977

Token 174: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.38688117265701294
    2. 'b' → logprob: -1.1368811130523682
    3. ' ' → logprob: -12.261880874633789
    4. '   ' → logprob: -13.511880874633789
    5. ')' → logprob: -13.886880874633789
    6. ')b' → logprob: -14.636880874633789
    7. ' ' → logprob: -14.824380874633789
    8. '	b' → logprob: -15.011880874633789
    9. '    ' → logprob: -15.011880874633789
    10. '  ' → logprob: -15.511880874633789

Token 175: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005273838527500629
    2. ')' → logprob: -5.255273818969727
    3. ':int' → logprob: -11.255273818969727
    4. ' )' → logprob: -11.380273818969727
    5. '):' → logprob: -12.005273818969727
    6. ' :' → logprob: -12.130273818969727
    7. '   ' → logprob: -13.380273818969727
    8. ',' → logprob: -13.880273818969727
    9. ' ' → logprob: -14.005273818969727
    10. '):
' → logprob: -14.880273818969727

Token 176: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.25210511684417725
    2. 'int' → logprob: -1.5021051168441772
    3. ')' → logprob: -9.127104759216309
    4. ':int' → logprob: -11.002104759216309
    5. ' )' → logprob: -11.127104759216309
    6. ' ' → logprob: -11.627104759216309
    7. '	int' → logprob: -11.752104759216309
    8. '[int' → logprob: -11.877104759216309
    9. ' ' → logprob: -13.252104759216309
    10. '<int' → logprob: -13.377104759216309

Token 177: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.27099974633893e-05
    2. '')' → logprob: -11.875012397766113
    3. ' )' → logprob: -13.000012397766113
    4. '):' → logprob: -13.250012397766113
    5. ':' → logprob: -13.875012397766113
    6. '):
' → logprob: -14.875012397766113
    7. ')->' → logprob: -15.375012397766113
    8. '`)' → logprob: -16.25001335144043
    9. '")' → logprob: -16.75001335144043
    10. ')
' → logprob: -17.75001335144043

Token 178: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5944646000862122
    2. ' ->' → logprob: -1.0944645404815674
    3. '->' → logprob: -2.3444645404815674
    4. ':' → logprob: -4.0944647789001465
    5. ')->' → logprob: -7.2194647789001465
    6. ' )' → logprob: -10.344464302062988
    7. '-' → logprob: -10.469464302062988
    8. '>' → logprob: -10.719464302062988
    9. ' ' → logprob: -11.594464302062988
    10. ' )->' → logprob: -11.844464302062988

Token 179: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.3133614659309387
    2. 'bool' → logprob: -1.313361406326294
    3. '   ' → logprob: -10.563361167907715
    4. 'True' → logprob: -11.188361167907715
    5. '(bool' → logprob: -11.563361167907715
    6. '<bool' → logprob: -11.563361167907715
    7. '	bool' → logprob: -11.688361167907715
    8. ':' → logprob: -12.188361167907715
    9. 'Bool' → logprob: -12.313361167907715
    10. '_bool' → logprob: -12.688361167907715

Token 180: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00017195509281009436
    2. ':
' → logprob: -8.875171661376953
    3. ' :' → logprob: -11.250171661376953
    4. '       ' → logprob: -12.250171661376953
    5. ':return' → logprob: -12.375171661376953
    6. '):' → logprob: -12.500171661376953
    7. ')' → logprob: -13.125171661376953
    8. '   ' → logprob: -13.625171661376953
    9. ' ->' → logprob: -13.625171661376953
    10. ',' → logprob: -14.125171661376953

Token 181: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007815150311216712
    2. ' return' → logprob: -7.875781536102295
    3. 'return' → logprob: -8.000781059265137
    4. '   ' → logprob: -10.125781059265137
    5. '(' → logprob: -11.750781059265137
    6. '	' → logprob: -12.500781059265137
    7. ' ' → logprob: -13.000781059265137
    8. '	return' → logprob: -13.250781059265137
    9. '      ' → logprob: -13.375781059265137
    10. '<|end|>' → logprob: -13.750781059265137

Token 182: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.006585574708878994
    2. ' return' → logprob: -5.256585597991943
    3. '(return' → logprob: -7.631585597991943
    4. '       ' → logprob: -7.881585597991943
    5. '(self' → logprob: -7.881585597991943
    6. '(a' → logprob: -10.006585121154785
    7. '{return' → logprob: -10.506585121154785
    8. '
' → logprob: -10.631585121154785
    9. ' (' → logprob: -12.631585121154785
    10. '	return' → logprob: -12.756585121154785

Token 183: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07948396354913712
    2. '(a' → logprob: -2.579483985900879
    3. ' (' → logprob: -7.454483985900879
    4. '{' → logprob: -11.579483985900879
    5. 'self' → logprob: -13.454483985900879
    6. '   ' → logprob: -13.454483985900879
    7. '(' → logprob: -14.329483985900879
    8. ' self' → logprob: -15.079483985900879
    9. '(s' → logprob: -15.204483985900879
    10. '(sorted' → logprob: -15.204483985900879

Token 184: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04419917240738869
    2. '(self' → logprob: -3.544199228286743
    3. 'a' → logprob: -4.294198989868164
    4. ' self' → logprob: -7.544198989868164
    5. '(a' → logprob: -8.794198989868164
    6. ' (' → logprob: -11.919198989868164
    7. '   ' → logprob: -12.419198989868164
    8. '	self' → logprob: -13.419198989868164
    9. ' a' → logprob: -13.544198989868164
    10. '       ' → logprob: -14.169198989868164

Token 185: '.u' (ID: 22262)
  Prédit: '.u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.u' → logprob: -4.320199877838604e-07
    2. 'u' → logprob: -15.875
    3. '.a' → logprob: -16.125
    4. '.' → logprob: -16.625
    5. ' .' → logprob: -16.875
    6. '.v' → logprob: -19.75
    7. ').' → logprob: -20.0
    8. '.i' → logprob: -20.625
    9. '.x' → logprob: -20.625
    10. '	u' → logprob: -20.875

Token 186: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.31327879428863525
    2. ' ==' → logprob: -1.3132787942886353
    3. ',' → logprob: -11.438279151916504
    4. '==
' → logprob: -12.938279151916504
    5. ' ' → logprob: -13.438279151916504
    6. '=' → logprob: -13.438279151916504
    7. 'a' → logprob: -15.063279151916504
    8. ')==' → logprob: -15.938279151916504
    9. '```' → logprob: -16.063278198242188
    10. ']==' → logprob: -16.438278198242188

Token 187: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00861468818038702
    2. ' a' → logprob: -4.758614540100098
    3. '	a' → logprob: -16.508615493774414
    4. ' ' → logprob: -16.883615493774414
    5. ')a' → logprob: -18.633615493774414
    6. '
' → logprob: -19.383615493774414
    7. ''a' → logprob: -19.883615493774414
    8. ' ' → logprob: -20.633615493774414
    9. '#a' → logprob: -20.758615493774414
    10. 'а' → logprob: -20.758615493774414

Token 188: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1269339919090271
    2. 'and' → logprob: -2.126934051513672
    3. ' ' → logprob: -12.501934051513672
    4. '    ' → logprob: -14.251934051513672
    5. 'a' → logprob: -14.626934051513672
    6. ' a' → logprob: -14.751934051513672
    7. '   ' → logprob: -15.501934051513672
    8. '
' → logprob: -16.126934051513672
    9. '	and' → logprob: -16.376934051513672
    10. '```' → logprob: -16.751934051513672

Token 189: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06200286000967026
    2. ' self' → logprob: -2.8120028972625732
    3. '   ' → logprob: -10.937003135681152
    4. ' ' → logprob: -11.812003135681152
    5. '
' → logprob: -12.687003135681152
    6. '    ' → logprob: -13.187003135681152
    7. '	self' → logprob: -13.437003135681152
    8. '  ' → logprob: -13.562003135681152
    9. '(self' → logprob: -13.812003135681152
    10. '       ' → logprob: -14.312003135681152

Token 190: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -0.0017759765032678843
    2. '.' → logprob: -6.376775741577148
    3. 'v' → logprob: -10.001775741577148
    4. ' .' → logprob: -10.626775741577148
    5. ' v' → logprob: -12.876775741577148
    6. ' ' → logprob: -14.251775741577148
    7. '.b' → logprob: -14.501775741577148
    8. '	v' → logprob: -15.001775741577148
    9. '   ' → logprob: -16.25177574157715
    10. ',v' → logprob: -16.75177574157715

Token 191: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0789024606347084
    2. ' ==' → logprob: -2.57890248298645
    3. ')' → logprob: -11.828902244567871
    4. '=' → logprob: -12.828902244567871
    5. ')==' → logprob: -13.328902244567871
    6. '==
' → logprob: -14.203902244567871
    7. ' ' → logprob: -15.703902244567871
    8. '===' → logprob: -15.828902244567871
    9. ']==' → logprob: -16.828903198242188
    10. '()==' → logprob: -17.078903198242188

Token 192: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.16022635996341705
    2. ' b' → logprob: -1.9102263450622559
    3. ' ' → logprob: -13.910226821899414
    4. ')b' → logprob: -14.660226821899414
    5. '	b' → logprob: -14.910226821899414
    6. '   ' → logprob: -15.785226821899414
    7. ')' → logprob: -16.285226821899414
    8. '    ' → logprob: -16.785226821899414
    9. ' ' → logprob: -16.910226821899414
    10. ' б' → logprob: -17.035226821899414

Token 193: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00043138445471413434
    2. ' )' → logprob: -7.750431537628174
    3. 'or' → logprob: -14.875431060791016
    4. ' or' → logprob: -15.000431060791016
    5. '   ' → logprob: -17.375431060791016
    6. '    ' → logprob: -17.375431060791016
    7. ')
' → logprob: -17.500431060791016
    8. ' ' → logprob: -18.500431060791016
    9. '),' → logprob: -18.750431060791016
    10. ')

' → logprob: -19.125431060791016

Token 194: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0019368429202586412
    2. 'or' → logprob: -6.251936912536621
    3. ' ' → logprob: -11.751936912536621
    4. '	or' → logprob: -15.501936912536621
    5. ' ' → logprob: -16.126935958862305
    6. ')' → logprob: -17.501935958862305
    7. '    ' → logprob: -17.501935958862305
    8. 'orm' → logprob: -18.001935958862305
    9. '  ' → logprob: -18.501935958862305
    10. '   ' → logprob: -18.751935958862305

Token 195: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.1602666825056076
    2. '(self' → logprob: -1.910266637802124
    3. '(' → logprob: -10.410266876220703
    4. '       ' → logprob: -11.660266876220703
    5. ' ' → logprob: -13.910266876220703
    6. '    ' → logprob: -14.535266876220703
    7. '   ' → logprob: -14.535266876220703
    8. 'self' → logprob: -14.785266876220703
    9. '        ' → logprob: -14.785266876220703
    10. '(s' → logprob: -15.035266876220703

Token 196: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.020578792318701744
    2. ' self' → logprob: -3.8955788612365723
    3. '(self' → logprob: -11.020578384399414
    4. '	self' → logprob: -11.520578384399414
    5. ' ' → logprob: -12.645578384399414
    6. '   ' → logprob: -13.395578384399414
    7. ' ' → logprob: -13.770578384399414
    8. '
' → logprob: -14.395578384399414
    9. '[self' → logprob: -14.395578384399414
    10. '       ' → logprob: -14.520578384399414

Token 197: '.u' (ID: 22262)
  Prédit: '.u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.u' → logprob: -0.34909477829933167
    2. '.v' → logprob: -1.2240947484970093
    3. '.' → logprob: -7.474094867706299
    4. ' .' → logprob: -10.22409439086914
    5. 'u' → logprob: -10.47409439086914
    6. 'v' → logprob: -11.22409439086914
    7. ' ' → logprob: -14.22409439086914
    8. ' u' → logprob: -14.22409439086914
    9. '.b' → logprob: -14.59909439086914
    10. '	u' → logprob: -14.84909439086914

Token 198: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06196925416588783
    2. '==' → logprob: -2.81196928024292
    3. ' ' → logprob: -14.811968803405762
    4. '=' → logprob: -14.936968803405762
    5. '==
' → logprob: -15.061968803405762
    6. ')' → logprob: -15.561968803405762
    7. ' ==
' → logprob: -15.936968803405762
    8. ')==' → logprob: -15.936968803405762
    9. ' =' → logprob: -17.186969757080078
    10. '<|end|>' → logprob: -17.686969757080078

Token 199: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2811562120914459
    2. ' b' → logprob: -1.4061561822891235
    3. 'v' → logprob: -12.406156539916992
    4. 'a' → logprob: -14.406156539916992
    5. ' ' → logprob: -14.406156539916992
    6. ' v' → logprob: -14.906156539916992
    7. ')b' → logprob: -15.906156539916992
    8. '	b' → logprob: -16.281156539916992
    9. ' б' → logprob: -16.656156539916992
    10. ' a' → logprob: -16.843656539916992

Token 200: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.029751179739832878
    2. 'and' → logprob: -3.5297510623931885
    3. ' ' → logprob: -14.77975082397461
    4. ')' → logprob: -15.40475082397461
    5. ' a' → logprob: -16.90475082397461
    6. ' и' → logprob: -17.27975082397461
    7. '   ' → logprob: -17.27975082397461
    8. ' an' → logprob: -17.65475082397461
    9. ',' → logprob: -18.40475082397461
    10. '	and' → logprob: -18.52975082397461

Token 201: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20267322659492493
    2. ' self' → logprob: -1.7026731967926025
    3. 'a' → logprob: -6.827673435211182
    4. ' a' → logprob: -8.702672958374023
    5. '   ' → logprob: -12.327672958374023
    6. ' ' → logprob: -13.077672958374023
    7. '	self' → logprob: -14.327672958374023
    8. '[self' → logprob: -14.452672958374023
    9. '       ' → logprob: -14.702672958374023
    10. '(self' → logprob: -14.952672958374023

Token 202: '.v' (ID: 5520)
  Prédit: '.u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.u' → logprob: -0.0060563054867088795
    2. '.v' → logprob: -5.756056308746338
    3. 'u' → logprob: -6.756056308746338
    4. '.' → logprob: -7.131056308746338
    5. '.a' → logprob: -7.131056308746338
    6. ' .' → logprob: -10.13105583190918
    7. 'v' → logprob: -10.25605583190918
    8. ')' → logprob: -11.63105583190918
    9. ' u' → logprob: -11.75605583190918
    10. '<|end|>' → logprob: -12.13105583190918

Token 203: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.09972675889730453
    2. '==' → logprob: -2.474726676940918
    3. ')' → logprob: -4.724726676940918
    4. 'a' → logprob: -7.474726676940918
    5. ' a' → logprob: -7.474726676940918
    6. ' ' → logprob: -8.599726676940918
    7. ')==' → logprob: -8.724726676940918
    8. '  ' → logprob: -9.349726676940918
    9. '   ' → logprob: -9.599726676940918
    10. 'u' → logprob: -9.599726676940918

Token 204: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.1888679839321412e-05
    2. ' a' → logprob: -10.750021934509277
    3. 'u' → logprob: -16.25002098083496
    4. ')' → logprob: -16.50002098083496
    5. ')a' → logprob: -17.12502098083496
    6. '   ' → logprob: -17.25002098083496
    7. '	a' → logprob: -18.12502098083496
    8. 'а' → logprob: -18.62502098083496
    9. ' ' → logprob: -19.62502098083496
    10. '_a' → logprob: -19.75002098083496

Token 205: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.438573680294212e-06
    2. ')
' → logprob: -12.500005722045898
    3. ' )' → logprob: -13.875005722045898
    4. '<|end|>' → logprob: -15.000005722045898
    5. ')return' → logprob: -15.625005722045898
    6. ')

' → logprob: -16.2500057220459
    7. '))' → logprob: -16.8750057220459
    8. ')}' → logprob: -17.5000057220459
    9. ')#' → logprob: -17.8750057220459
    10. '),' → logprob: -18.2500057220459

Token 206: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43296530842781067
    2. 'class' → logprob: -1.0579652786254883
    3. '

' → logprob: -6.057965278625488
    4. '<|end|>' → logprob: -6.807965278625488
    5. '


' → logprob: -8.307965278625488
    6. '   ' → logprob: -8.932965278625488
    7. ' class' → logprob: -9.057965278625488
    8. 'def' → logprob: -9.432965278625488
    9. '    
' → logprob: -9.932965278625488
    10. '```' → logprob: -10.182965278625488

Token 207: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.5377781391143799
    2. 'class' → logprob: -0.9127781391143799
    3. '   ' → logprob: -4.287777900695801
    4. ')' → logprob: -8.4127779006958
    5. ' def' → logprob: -8.9127779006958
    6. 'from' → logprob: -9.5377779006958
    7. '```' → logprob: -9.7877779006958
    8. '#' → logprob: -9.9127779006958
    9. '

' → logprob: -10.0377779006958
    10. '
' → logprob: -10.0377779006958

Token 208: ' shares' (ID: 16800)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.2542908489704132
    2. 'def' → logprob: -2.504290819168091
    3. ' __' → logprob: -3.004290819168091
    4. ' other' → logprob: -4.37929105758667
    5. ' points' → logprob: -4.50429105758667
    6. ' has' → logprob: -4.62929105758667
    7. 'points' → logprob: -4.87929105758667
    8. 'repr' → logprob: -4.87929105758667
    9. '__' → logprob: -5.00429105758667
    10. ' add' → logprob: -5.62929105758667

Token 209: '_endpoint' (ID: 85201)
  Prédit: '_point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.1368858814239502
    2. '_vertex' → logprob: -2.13688588142395
    3. '_endpoint' → logprob: -5.636885643005371
    4. '_' → logprob: -6.136885643005371
    5. '_node' → logprob: -6.511885643005371
    6. '(self' → logprob: -7.011885643005371
    7. '_with' → logprob: -7.386885643005371
    8. '_points' → logprob: -7.511885643005371
    9. '_edge' → logprob: -8.386885643005371
    10. '_vertices' → logprob: -9.386885643005371

Token 210: '_with' (ID: 14161)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0028802379965782166
    2. '(' → logprob: -6.002880096435547
    3. ' (' → logprob: -8.127880096435547
    4. 'with' → logprob: -10.127880096435547
    5. 'self' → logprob: -10.252880096435547
    6. '(s' → logprob: -11.002880096435547
    7. 's' → logprob: -12.377880096435547
    8. ' self' → logprob: -12.627880096435547
    9. '(
' → logprob: -12.752880096435547
    10. ' with' → logprob: -13.127880096435547

Token 211: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.682846287731081e-05
    2. 'self' → logprob: -9.875066757202148
    3. '(' → logprob: -11.250066757202148
    4. '(
' → logprob: -13.500066757202148
    5. ' self' → logprob: -14.875066757202148
    6. '(s' → logprob: -15.125066757202148
    7. ' (' → logprob: -15.125066757202148
    8. '(this' → logprob: -16.75006675720215
    9. 's' → logprob: -17.00006675720215
    10. '=self' → logprob: -17.50006675720215

Token 212: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008533842861652374
    2. '(self' → logprob: -5.008533954620361
    3. 'self' → logprob: -6.508533954620361
    4. ')' → logprob: -9.008533477783203
    5. 'other' → logprob: -9.633533477783203
    6. ' ,' → logprob: -9.883533477783203
    7. ' self' → logprob: -10.633533477783203
    8. '',' → logprob: -10.883533477783203
    9. ' other' → logprob: -11.383533477783203
    10. ',self' → logprob: -11.508533477783203

Token 213: ' other' (ID: 1273)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.13655482232570648
    2. 'other' → logprob: -2.386554718017578
    3. ' self' → logprob: -3.761554718017578
    4. ' other' → logprob: -4.386554718017578
    5. '(self' → logprob: -13.386554718017578
    6. 'Other' → logprob: -14.011554718017578
    7. '_other' → logprob: -14.886554718017578
    8. '	self' → logprob: -14.886554718017578
    9. '   ' → logprob: -15.136554718017578
    10. '.other' → logprob: -15.511554718017578

Token 214: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8146671056747437
    2. ')' → logprob: -0.9396671056747437
    3. '(self' → logprob: -1.9396671056747437
    4. ',' → logprob: -4.689667224884033
    5. 'self' → logprob: -5.564667224884033
    6. '):' → logprob: -5.689667224884033
    7. ' self' → logprob: -6.189667224884033
    8. '')' → logprob: -6.439667224884033
    9. ' )' → logprob: -7.439667224884033
    10. '',' → logprob: -8.064666748046875

Token 215: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.23864783346652985
    2. ''' → logprob: -1.8636478185653687
    3. ' ' → logprob: -3.738647937774658
    4. ' other' → logprob: -4.488647937774658
    5. ' self' → logprob: -4.738647937774658
    6. ')' → logprob: -4.863647937774658
    7. 'self' → logprob: -6.113647937774658
    8. 'other' → logprob: -6.738647937774658
    9. ' edge' → logprob: -7.363647937774658
    10. ''s' → logprob: -7.488647937774658

Token 216: 'Edge' (ID: 16577)
  Prédit: 'Edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -0.08896095305681229
    2. ' Edge' → logprob: -2.463960886001587
    3. '<Edge' → logprob: -12.338960647583008
    4. ' ' → logprob: -12.463960647583008
    5. '.Edge' → logprob: -12.713960647583008
    6. 'Point' → logprob: -12.713960647583008
    7. ''' → logprob: -13.713960647583008
    8. ' edge' → logprob: -13.713960647583008
    9. '_edge' → logprob: -13.963960647583008
    10. '  ' → logprob: -14.213960647583008

Token 217: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.039045825600624084
    2. ')' → logprob: -3.289045810699463
    3. ' ')' → logprob: -7.164045810699463
    4. ':' → logprob: -8.664046287536621
    5. '   ' → logprob: -10.914046287536621
    6. ''' → logprob: -11.664046287536621
    7. '")' → logprob: -12.289046287536621
    8. ''):
' → logprob: -12.414046287536621
    9. ' )' → logprob: -12.664046287536621
    10. '',' → logprob: -12.789046287536621

Token 218: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4323771893978119
    2. ' ->' → logprob: -1.9323772192001343
    3. ')' → logprob: -2.3073770999908447
    4. '(self' → logprob: -2.4323770999908447
    5. '->' → logprob: -4.432377338409424
    6. '(' → logprob: -5.307377338409424
    7. ',' → logprob: -7.307377338409424
    8. '       ' → logprob: -7.807377338409424
    9. '   ' → logprob: -8.057376861572266
    10. '=' → logprob: -8.932376861572266

Token 219: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.31381937861442566
    2. 'bool' → logprob: -1.313819408416748
    3. '(bool' → logprob: -8.18881893157959
    4. 'int' → logprob: -9.56381893157959
    5. '   ' → logprob: -10.06381893157959
    6. ' def' → logprob: -10.56381893157959
    7. ' int' → logprob: -10.81381893157959
    8. ' ' → logprob: -11.06381893157959
    9. '<|end|>' → logprob: -11.31381893157959
    10. '<bool' → logprob: -11.31381893157959

Token 220: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.039471302181482315
    2. '       ' → logprob: -4.28947114944458
    3. ':
' → logprob: -4.41447114944458
    4. '(self' → logprob: -5.03947114944458
    5. ' ->' → logprob: -5.66447114944458
    6. ')' → logprob: -6.78947114944458
    7. '(' → logprob: -7.78947114944458
    8. '   ' → logprob: -7.91447114944458
    9. '->' → logprob: -8.164471626281738
    10. ',' → logprob: -8.414471626281738

Token 221: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00024299313372466713
    2. ' return' → logprob: -8.375243186950684
    3. '   ' → logprob: -12.000243186950684
    4. 'return' → logprob: -12.625243186950684
    5. '        
' → logprob: -14.250243186950684
    6. '
' → logprob: -14.750243186950684
    7. '	return' → logprob: -15.000243186950684
    8. '      ' → logprob: -15.125243186950684
    9. '<|end|>' → logprob: -15.125243186950684
    10. ' for' → logprob: -15.750243186950684

Token 222: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07026940584182739
    2. ' return' → logprob: -2.8202693462371826
    3. '       ' → logprob: -4.820269584655762
    4. '
' → logprob: -8.695269584655762
    5. '   ' → logprob: -10.945269584655762
    6. '```' → logprob: -11.695269584655762
    7. '        
' → logprob: -12.695269584655762
    8. '	return' → logprob: -12.695269584655762
    9. '{return' → logprob: -13.570269584655762
    10. '        ' → logprob: -14.570269584655762

Token 223: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3878794312477112
    2. ' self' → logprob: -1.1378793716430664
    3. '(self' → logprob: -7.512879371643066
    4. '       ' → logprob: -8.637879371643066
    5. '   ' → logprob: -9.012879371643066
    6. 'len' → logprob: -9.637879371643066
    7. ' len' → logprob: -9.762879371643066
    8. ' (' → logprob: -10.887879371643066
    9. ' ' → logprob: -12.137879371643066
    10. '    ' → logprob: -12.262879371643066

Token 224: '.u' (ID: 22262)
  Prédit: '.u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.u' → logprob: -4.320199877838604e-07
    2. '.' → logprob: -15.375
    3. ' .' → logprob: -16.375
    4. 'u' → logprob: -16.5
    5. '.s' → logprob: -18.125
    6. '.v' → logprob: -19.0
    7. '	u' → logprob: -19.875
    8. '<u' → logprob: -20.75
    9. '.i' → logprob: -20.75
    10. '._' → logprob: -21.125

Token 225: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.014198764227330685
    2. ' ==' → logprob: -4.2641987800598145
    3. 'in' → logprob: -10.639198303222656
    4. ' in' → logprob: -11.764198303222656
    5. '=' → logprob: -13.014198303222656
    6. '===' → logprob: -14.139198303222656
    7. '==
' → logprob: -15.139198303222656
    8. '()==' → logprob: -16.514198303222656
    9. ')==' → logprob: -16.639198303222656
    10. 's' → logprob: -17.389198303222656

Token 226: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0009114635176956654
    2. ' other' → logprob: -7.000911235809326
    3. '(other' → logprob: -17.875911712646484
    4. '.other' → logprob: -19.125911712646484
    5. 'othe' → logprob: -19.500911712646484
    6. 'Other' → logprob: -19.875911712646484
    7. 'oth' → logprob: -20.000911712646484
    8. '_other' → logprob: -20.625911712646484
    9. ' ' → logprob: -21.375911712646484
    10. 'or' → logprob: -22.500911712646484

Token 227: '.u' (ID: 22262)
  Prédit: '.u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.u' → logprob: -0.00034142236108891666
    2. 'u' → logprob: -8.375341415405273
    3. '.' → logprob: -9.125341415405273
    4. '.v' → logprob: -14.375341415405273
    5. ''.' → logprob: -14.375341415405273
    6. ' .' → logprob: -14.625341415405273
    7. ' u' → logprob: -16.000341415405273
    8. '.s' → logprob: -16.625341415405273
    9. '`.' → logprob: -16.750341415405273
    10. '	u' → logprob: -17.000341415405273

Token 228: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.005234356038272381
    2. 'or' → logprob: -5.255234241485596
    3. '	or' → logprob: -14.880234718322754
    4. ' ' → logprob: -15.880234718322754
    5. ',' → logprob: -16.755233764648438
    6. '   ' → logprob: -17.130233764648438
    7. '
' → logprob: -18.130233764648438
    8. '<|end|>' → logprob: -18.380233764648438
    9. ' ' → logprob: -18.880233764648438
    10. '    ' → logprob: -19.005233764648438

Token 229: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4287298321723938
    2. ' self' → logprob: -1.053729772567749
    3. '       ' → logprob: -10.803730010986328
    4. ' ' → logprob: -13.053730010986328
    5. '   ' → logprob: -13.553730010986328
    6. '	self' → logprob: -13.803730010986328
    7. '
' → logprob: -13.928730010986328
    8. '0' → logprob: -14.178730010986328
    9. '(self' → logprob: -14.553730010986328
    10. '1' → logprob: -14.803730010986328

Token 230: '.u' (ID: 22262)
  Prédit: '.u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.u' → logprob: -0.0017319408943876624
    2. '.v' → logprob: -6.376731872558594
    3. 'u' → logprob: -10.626731872558594
    4. '.' → logprob: -12.376731872558594
    5. ' .' → logprob: -15.001731872558594
    6. '	u' → logprob: -15.251731872558594
    7. 'v' → logprob: -15.501731872558594
    8. ' u' → logprob: -16.001731872558594
    9. '.s' → logprob: -16.001731872558594
    10. ' ' → logprob: -17.376731872558594

Token 231: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12692862749099731
    2. '==' → logprob: -2.1269285678863525
    3. '==
' → logprob: -15.251928329467773
    4. '=' → logprob: -15.626928329467773
    5. ' ' → logprob: -16.876928329467773
    6. ' ==
' → logprob: -17.126928329467773
    7. ')' → logprob: -17.501928329467773
    8. ' =' → logprob: -17.876928329467773
    9. '===' → logprob: -17.876928329467773
    10. ')==' → logprob: -18.251928329467773

Token 232: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.04858771339058876
    2. 'other' → logprob: -3.0485877990722656
    3. '(other' → logprob: -15.298587799072266
    4. '.other' → logprob: -16.048587799072266
    5. 'Other' → logprob: -16.798587799072266
    6. '_other' → logprob: -17.298587799072266
    7. ' ' → logprob: -17.423587799072266
    8. '其他' → logprob: -18.673587799072266
    9. 'self' → logprob: -19.048587799072266
    10. '
' → logprob: -19.673587799072266

Token 233: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -4.961759259458631e-06
    2. 'v' → logprob: -12.875004768371582
    3. '.' → logprob: -13.000004768371582
    4. ' .' → logprob: -17.1250057220459
    5. '	v' → logprob: -17.7500057220459
    6. ' ' → logprob: -20.1250057220459
    7. '<v' → logprob: -20.1250057220459
    8. '```' → logprob: -20.3750057220459
    9. '_v' → logprob: -20.5000057220459
    10. '   ' → logprob: -20.5000057220459

Token 234: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -7.5649528298527e-05
    2. 'or' → logprob: -9.500075340270996
    3. ' ' → logprob: -14.875075340270996
    4. '```' → logprob: -16.000076293945312
    5. '	or' → logprob: -16.000076293945312
    6. '       ' → logprob: -16.625076293945312
    7. '<|end|>' → logprob: -17.250076293945312
    8. ' ' → logprob: -17.750076293945312
    9. '    ' → logprob: -18.000076293945312
    10. '        ' → logprob: -18.125076293945312

Token 235: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2811988592147827
    2. 'self' → logprob: -1.4061988592147827
    3. '       ' → logprob: -10.156198501586914
    4. '	self' → logprob: -12.656198501586914
    5. '(self' → logprob: -12.656198501586914
    6. ' ' → logprob: -13.406198501586914
    7. '   ' → logprob: -14.156198501586914
    8. '        ' → logprob: -15.281198501586914
    9. '[self' → logprob: -15.281198501586914
    10. '    ' → logprob: -15.906198501586914

Token 236: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -4.246537173457909e-06
    2. '.' → logprob: -12.875003814697266
    3. 'v' → logprob: -13.375003814697266
    4. '	v' → logprob: -18.250003814697266
    5. ' .' → logprob: -18.875003814697266
    6. '.u' → logprob: -19.625003814697266
    7. '<v' → logprob: -20.500003814697266
    8. ' v' → logprob: -20.500003814697266
    9. '_v' → logprob: -20.750003814697266
    10. '```' → logprob: -21.500003814697266

Token 237: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.048592593520879745
    2. '==' → logprob: -3.0485925674438477
    3. '<|end|>' → logprob: -12.923592567443848
    4. ' ==
' → logprob: -14.298592567443848
    5. '==
' → logprob: -14.423592567443848
    6. ' ' → logprob: -14.423592567443848
    7. '=' → logprob: -14.548592567443848
    8. ' =' → logprob: -15.173592567443848
    9. '<|end|>' → logprob: -16.298593521118164
    10. ')' → logprob: -16.423593521118164

Token 238: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0024758970830589533
    2. ' other' → logprob: -6.002475738525391
    3. '(other' → logprob: -16.00247573852539
    4. 'othe' → logprob: -16.87747573852539
    5. '.other' → logprob: -17.25247573852539
    6. '_other' → logprob: -17.62747573852539
    7. 'Other' → logprob: -17.62747573852539
    8. 'oth' → logprob: -19.00247573852539
    9. 'self' → logprob: -19.62747573852539
    10. '<|end|>' → logprob: -19.87747573852539

Token 239: '.u' (ID: 22262)
  Prédit: '.u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.u' → logprob: -0.03088931180536747
    2. '.v' → logprob: -3.5308892726898193
    3. '.' → logprob: -6.780889511108398
    4. 'u' → logprob: -13.280889511108398
    5. ' .' → logprob: -13.780889511108398
    6. '<|end|>' → logprob: -16.7808895111084
    7. 'v' → logprob: -17.2808895111084
    8. '<u' → logprob: -17.4058895111084
    9. '[u' → logprob: -17.6558895111084
    10. '.user' → logprob: -17.9058895111084

Token 240: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -2.7848862373502925e-05
    2. 'or' → logprob: -10.500027656555176
    3. ' ' → logprob: -15.625027656555176
    4. '	or' → logprob: -16.125028610229492
    5. '<|end|>' → logprob: -18.500028610229492
    6. '```' → logprob: -18.625028610229492
    7. ' and' → logprob: -19.500028610229492
    8. '   ' → logprob: -20.125028610229492
    9. '...' → logprob: -20.250028610229492
    10. ' ' → logprob: -20.375028610229492

Token 241: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.0699549987912178
    2. 'self' → logprob: -2.6949551105499268
    3. ' other' → logprob: -11.069954872131348
    4. 'other' → logprob: -13.694954872131348
    5. '	self' → logprob: -14.444954872131348
    6. ' ' → logprob: -14.694954872131348
    7. '   ' → logprob: -15.194954872131348
    8. '(self' → logprob: -15.194954872131348
    9. ' ' → logprob: -15.819954872131348
    10. 'Self' → logprob: -16.569955825805664

Token 242: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -0.0008051026379689574
    2. '.' → logprob: -7.125804901123047
    3. ' .' → logprob: -14.500804901123047
    4. 'v' → logprob: -15.500804901123047
    5. '.
' → logprob: -18.375804901123047
    6. '```' → logprob: -18.375804901123047
    7. '.u' → logprob: -19.000804901123047
    8. '==' → logprob: -19.375804901123047
    9. '.vi' → logprob: -20.000804901123047
    10. '\.' → logprob: -20.125804901123047

Token 243: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.02975245751440525
    2. '==' → logprob: -3.529752492904663
    3. ' ==
' → logprob: -14.404752731323242
    4. ' ' → logprob: -14.529752731323242
    5. '==
' → logprob: -14.779752731323242
    6. '=' → logprob: -14.779752731323242
    7. '===' → logprob: -16.904752731323242
    8. ')' → logprob: -17.029752731323242
    9. ' =' → logprob: -17.154752731323242
    10. '<|end|>' → logprob: -17.529752731323242

Token 244: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.048589982092380524
    2. ' other' → logprob: -3.0485899448394775
    3. '(other' → logprob: -14.048589706420898
    4. 'othe' → logprob: -14.298589706420898
    5. 'self' → logprob: -14.673589706420898
    6. '.other' → logprob: -15.048589706420898
    7. 'Other' → logprob: -15.173589706420898
    8. '_other' → logprob: -16.5485897064209
    9. 'oth' → logprob: -16.6735897064209
    10. ' oth' → logprob: -17.5485897064209

Token 245: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -0.00034177995985373855
    2. '.' → logprob: -8.000341415405273
    3. 'v' → logprob: -12.000341415405273
    4. '```' → logprob: -16.875341415405273
    5. ' .' → logprob: -17.125341415405273
    6. '	v' → logprob: -17.375341415405273
    7. '.
' → logprob: -17.875341415405273
    8. '_v' → logprob: -18.125341415405273
    9. '[v' → logprob: -18.500341415405273
    10. '   ' → logprob: -18.500341415405273

Token 246: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5805312991142273
    2. '<|end|>' → logprob: -0.8305312991142273
    3. '

' → logprob: -6.455531120300293
    4. '<|end|>' → logprob: -6.580531120300293
    5. '   ' → logprob: -7.330531120300293
    6. 'class' → logprob: -7.955531120300293
    7. 'def' → logprob: -8.205531120300293
    8. ')' → logprob: -9.830531120300293
    9. '.' → logprob: -9.830531120300293
    10. '\n' → logprob: -10.205531120300293

Token 247: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.14319667220115662
    2. 'def' → logprob: -2.0181965827941895
    3. '   ' → logprob: -8.018197059631348
    4. ' class' → logprob: -9.518197059631348
    5. '
' → logprob: -9.893197059631348
    6. 'from' → logprob: -11.018197059631348
    7. ' def' → logprob: -11.393197059631348
    8. 'import' → logprob: -11.643197059631348
    9. '```' → logprob: -12.018197059631348
    10. '    
' → logprob: -12.393197059631348

Token 248: ' Union' (ID: 14746)
  Prédit: ' Graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Graph' → logprob: -0.6528605222702026
    2. 'Graph' → logprob: -0.7778605222702026
    3. ' Polygon' → logprob: -4.902860641479492
    4. 'Polygon' → logprob: -5.527860641479492
    5. 'Path' → logprob: -6.027860641479492
    6. ' Path' → logprob: -6.152860641479492
    7. ' MST' → logprob: -7.152860641479492
    8. ' Union' → logprob: -7.152860641479492
    9. 'Union' → logprob: -8.027860641479492
    10. ' Triangle' → logprob: -8.402860641479492

Token 249: 'Find' (ID: 11437)
  Prédit: 'Find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Find' → logprob: -5.9153885558771435e-06
    2. '[int' → logprob: -12.375005722045898
    3. '-F' → logprob: -13.500005722045898
    4. ' Find' → logprob: -15.250005722045898
    5. '[' → logprob: -16.7500057220459
    6. '_Find' → logprob: -17.2500057220459
    7. 'Finder' → logprob: -17.3750057220459
    8. '_find' → logprob: -18.2500057220459
    9. '[str' → logprob: -18.5000057220459
    10. '-find' → logprob: -18.8750057220459

Token 250: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006579888286069036
    2. ':
' → logprob: -7.37565803527832
    3. ' :' → logprob: -11.00065803527832
    4. '():' → logprob: -11.75065803527832
    5. '(object' → logprob: -12.87565803527832
    6. '<|end|>' → logprob: -13.37565803527832
    7. '):' → logprob: -13.75065803527832
    8. ':

' → logprob: -14.75065803527832
    9. '(' → logprob: -15.62565803527832
    10. '[' → logprob: -15.75065803527832

Token 251: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13403074443340302
    2. ':
' → logprob: -2.259030818939209
    3. '   ' → logprob: -4.384030818939209
    4. '(object' → logprob: -5.384030818939209
    5. '<|end|>' → logprob: -6.009030818939209
    6. '
' → logprob: -7.634030818939209
    7. '  ' → logprob: -9.13403034210205
    8. '    
' → logprob: -9.25903034210205
    9. '```' → logprob: -9.38403034210205
    10. 'def' → logprob: -9.50903034210205

Token 252: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7765882611274719
    2. 'def' (adapté à ' def') → logprob: -0.7765882611274719
    3. ' def' → logprob: -3.526588201522827
    4. ':' → logprob: -3.651588201522827
    5. 'class' → logprob: -4.401588439941406
    6. ':
' → logprob: -5.026588439941406
    7. '
' → logprob: -5.776588439941406
    8. 'object' → logprob: -6.526588439941406
    9. '    
' → logprob: -8.026588439941406
    10. ':def' → logprob: -8.026588439941406

Token 253: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -1.0756460428237915
    2. '   ' → logprob: -1.7006460428237915
    3. '__' → logprob: -1.7006460428237915
    4. 'init' → logprob: -2.575645923614502
    5. '  ' → logprob: -3.200645923614502
    6. 'object' → logprob: -3.200645923614502
    7. '_init' → logprob: -3.700645923614502
    8. ' def' → logprob: -3.950645923614502
    9. 'def' → logprob: -3.950645923614502
    10. '(object' → logprob: -3.950645923614502

Token 254: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.2200749754119897e-06
    2. ' init' → logprob: -13.375001907348633
    3. '```' → logprob: -15.875001907348633
    4. '   ' → logprob: -16.250001907348633
    5. 'def' → logprob: -16.500001907348633
    6. '_init' → logprob: -16.875001907348633
    7. ' ' → logprob: -17.000001907348633
    8. 'i' → logprob: -17.375001907348633
    9. 'int' → logprob: -17.375001907348633
    10. 'ini' → logprob: -17.750001907348633

Token 255: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.07012849301099777
    2. '(self' → logprob: -2.6951284408569336
    3. '(' → logprob: -9.570128440856934
    4. ' (' → logprob: -9.945128440856934
    5. '__' → logprob: -10.195128440856934
    6. '__(
' → logprob: -10.820128440856934
    7. '_(' → logprob: -11.820128440856934
    8. 'self' → logprob: -12.195128440856934
    9. ',' → logprob: -13.570128440856934
    10. ')(' → logprob: -14.195128440856934

Token 256: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001612267515156418
    2. ' self' → logprob: -8.750161170959473
    3. '
' → logprob: -13.375161170959473
    4. '   ' → logprob: -14.375161170959473
    5. '(self' → logprob: -15.250161170959473
    6. ',' → logprob: -16.50016212463379
    7. ' ' → logprob: -17.12516212463379
    8. '0' → logprob: -17.25016212463379
    9. '<|end|>' → logprob: -17.25016212463379
    10. '	self' → logprob: -17.62516212463379

Token 257: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00033951509976759553
    2. 'self' → logprob: -8.37533950805664
    3. ' ,' → logprob: -9.37533950805664
    4. '(self' → logprob: -11.12533950805664
    5. '   ' → logprob: -12.62533950805664
    6. '_,' → logprob: -13.50033950805664
    7. ' self' → logprob: -13.75033950805664
    8. ',self' → logprob: -14.12533950805664
    9. ' (' → logprob: -14.25033950805664
    10. '__,' → logprob: -14.62533950805664

Token 258: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3957134485244751
    2. 'n' → logprob: -1.145713448524475
    3. ' size' → logprob: -4.8957133293151855
    4. 'size' → logprob: -6.6457133293151855
    5. '   ' → logprob: -11.020713806152344
    6. '	n' → logprob: -11.895713806152344
    7. ' ' → logprob: -13.270713806152344
    8. '  ' → logprob: -16.145713806152344
    9. '    ' → logprob: -16.145713806152344
    10. ')n' → logprob: -16.895713806152344

Token 259: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3150193691253662
    2. '):' → logprob: -1.3150193691253662
    3. ')' → logprob: -6.940019607543945
    4. ' ):' → logprob: -7.815019607543945
    5. '):
' → logprob: -8.065019607543945
    6. ' :' → logprob: -10.190019607543945
    7. ':int' → logprob: -10.690019607543945
    8. ' )' → logprob: -12.315019607543945
    9. '=' → logprob: -14.190019607543945
    10. '}:' → logprob: -14.315019607543945

Token 260: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.13002631068229675
    2. ' int' → logprob: -2.130026340484619
    3. 'n' → logprob: -6.255026340484619
    4. ' n' → logprob: -6.755026340484619
    5. ' ' → logprob: -13.255025863647461
    6. '(int' → logprob: -13.380025863647461
    7. ')' → logprob: -13.630025863647461
    8. ':int' → logprob: -14.255025863647461
    9. '=int' → logprob: -14.630025863647461
    10. '[int' → logprob: -14.880025863647461

Token 261: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2520764172077179
    2. '):' → logprob: -1.5020763874053955
    3. '):
' → logprob: -9.127076148986816
    4. ')' → logprob: -10.377076148986816
    5. ' ):
' → logprob: -12.377076148986816
    6. ' ):' → logprob: -13.002076148986816
    7. ':' → logprob: -14.752076148986816
    8. '):

' → logprob: -15.502076148986816
    9. '   ' → logprob: -15.627076148986816
    10. ''):
' → logprob: -16.752077102661133

Token 262: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.531813702778891e-05
    2. 'self' → logprob: -9.87509536743164
    3. '   ' → logprob: -10.62509536743164
    4. ' self' → logprob: -10.87509536743164
    5. '	   ' → logprob: -14.87509536743164
    6. '	self' → logprob: -15.62509536743164
    7. '	' → logprob: -17.00009536743164
    8. '           ' → logprob: -17.25009536743164
    9. ',' → logprob: -17.37509536743164
    10. '      ' → logprob: -18.25009536743164

Token 263: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00866740196943283
    2. ' self' → logprob: -5.258667469024658
    3. '       ' → logprob: -6.258667469024658
    4. '   ' → logprob: -6.508667469024658
    5. 'parent' → logprob: -11.0086669921875
    6. '	self' → logprob: -12.0086669921875
    7. ' parent' → logprob: -15.2586669921875
    8. ' ' → logprob: -15.7586669921875
    9. '  ' → logprob: -16.1336669921875
    10. '    ' → logprob: -16.7586669921875

Token 264: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.0020473632030189037
    2. '.parents' → logprob: -6.752047538757324
    3. 'parent' → logprob: -7.377047538757324
    4. '.' → logprob: -8.877047538757324
    5. '_parent' → logprob: -9.627047538757324
    6. '._' → logprob: -11.252047538757324
    7. '.rank' → logprob: -11.377047538757324
    8. ' .' → logprob: -12.377047538757324
    9. '.par' → logprob: -12.752047538757324
    10. '.data' → logprob: -12.877047538757324

Token 265: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519353926181793
    2. '=' → logprob: -1.501935362815857
    3. ':' → logprob: -12.126935005187988
    4. ' =[' → logprob: -15.376935005187988
    5. '[' → logprob: -15.626935005187988
    6. 's' → logprob: -15.876935005187988
    7. ' ' → logprob: -16.001935958862305
    8. ' =
' → logprob: -16.626935958862305
    9. '=[' → logprob: -17.251935958862305
    10. ')' → logprob: -17.376935958862305

Token 266: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.40730592608451843
    2. ' list' → logprob: -1.1573059558868408
    3. '[list' → logprob: -3.907305955886841
    4. ' [' → logprob: -9.657305717468262
    5. '[' → logprob: -9.657305717468262
    6. '[-' → logprob: -13.532305717468262
    7. '[List' → logprob: -13.657305717468262
    8. '=list' → logprob: -13.657305717468262
    9. '[n' → logprob: -14.782305717468262
    10. '[i' → logprob: -14.907305717468262

Token 267: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -3.690834273584187e-05
    2. 'range' → logprob: -10.25003719329834
    3. '(' → logprob: -13.50003719329834
    4. '

' → logprob: -18.125036239624023
    5. '	range' → logprob: -18.125036239624023
    6. ' range' → logprob: -18.250036239624023
    7. '(
' → logprob: -18.625036239624023
    8. '
' → logprob: -19.500036239624023
    9. '[' → logprob: -19.500036239624023
    10. '   ' → logprob: -20.375036239624023

Token 268: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.3458322731312364e-06
    2. 'n' → logprob: -11.875007629394531
    3. '(' → logprob: -14.875007629394531
    4. ' n' → logprob: -18.62500762939453
    5. '	n' → logprob: -19.12500762939453
    6. ')n' → logprob: -19.25000762939453
    7. ' (' → logprob: -20.37500762939453
    8. ')' → logprob: -21.62500762939453
    9. '_n' → logprob: -21.62500762939453
    10. ')(' → logprob: -22.00000762939453

Token 269: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.002188329817727208
    2. '))
' → logprob: -6.127188205718994
    3. ' ))' → logprob: -13.502188682556152
    4. '))

' → logprob: -14.002188682556152
    5. ')' → logprob: -14.502188682556152
    6. '))
' → logprob: -15.627188682556152
    7. ')))' → logprob: -15.752188682556152
    8. '()))' → logprob: -17.377187728881836
    9. '));' → logprob: -17.752187728881836
    10. ' ))
' → logprob: -17.752187728881836

Token 270: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1774597316980362
    2. '   ' → logprob: -1.927459716796875
    3. 'self' → logprob: -4.177459716796875
    4. ' ' → logprob: -7.427459716796875
    5. ' self' → logprob: -8.052459716796875
    6. '
' → logprob: -8.302459716796875
    7. '    
' → logprob: -9.052459716796875
    8. '        
' → logprob: -9.302459716796875
    9. '<|end|>' → logprob: -9.302459716796875
    10. ' 
' → logprob: -10.052459716796875

Token 271: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0005211008246988058
    2. ' self' → logprob: -8.000520706176758
    3. '       ' → logprob: -8.625520706176758
    4. '   ' → logprob: -12.250520706176758
    5. 's' → logprob: -14.375520706176758
    6. '
' → logprob: -14.625520706176758
    7. '	self' → logprob: -16.000520706176758
    8. ' ' → logprob: -16.250520706176758
    9. '0' → logprob: -16.875520706176758
    10. '  ' → logprob: -17.500520706176758

Token 272: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -0.0001684981834841892
    2. '.size' → logprob: -8.750168800354004
    3. 'rank' → logprob: -11.625168800354004
    4. ' rank' → logprob: -15.000168800354004
    5. 'size' → logprob: -15.250168800354004
    6. '.' → logprob: -15.250168800354004
    7. '_rank' → logprob: -16.625167846679688
    8. '.r' → logprob: -17.500167846679688
    9. '.count' → logprob: -18.375167846679688
    10. ' .' → logprob: -18.375167846679688

Token 273: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00862036645412445
    2. '=' → logprob: -4.758620262145996
    3. ' ' → logprob: -12.633620262145996
    4. '[' → logprob: -13.883620262145996
    5. ' =[' → logprob: -13.883620262145996
    6. 's' → logprob: -15.633620262145996
    7. '<|end|>' → logprob: -15.758620262145996
    8. '   ' → logprob: -15.758620262145996
    9. '  ' → logprob: -16.883621215820312
    10. '[:]' → logprob: -17.008621215820312

Token 274: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0031786637846380472
    2. ' [' → logprob: -5.753178596496582
    3. '[n' → logprob: -13.878178596496582
    4. '0' → logprob: -18.6281795501709
    5. '   ' → logprob: -19.2531795501709
    6. ' ' → logprob: -19.7531795501709
    7. 'n' → logprob: -19.8781795501709
    8. '([' → logprob: -20.0031795501709
    9. '[int' → logprob: -20.7531795501709
    10. ' ' → logprob: -20.8781795501709

Token 275: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '۰' → logprob: -21.625
    4. '1' → logprob: -22.875
    5. '   ' → logprob: -23.25
    6. '０' → logprob: -24.625
    7. '  ' → logprob: -24.625
    8. '(' → logprob: -24.75
    9. '
' → logprob: -25.0
    10. '٠' → logprob: -25.0

Token 276: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005969968624413013
    2. ']*' → logprob: -7.50059700012207
    3. ' ]' → logprob: -10.25059700012207
    4. ' for' → logprob: -11.75059700012207
    5. ')' → logprob: -14.87559700012207
    6. '   ' → logprob: -16.00059700012207
    7. 'for' → logprob: -16.00059700012207
    8. ' ' → logprob: -16.50059700012207
    9. ']*(' → logprob: -16.50059700012207
    10. ',' → logprob: -17.62559700012207

Token 277: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.935296834039036e-06
    2. ' n' → logprob: -12.75000286102295
    3. '(n' → logprob: -18.375003814697266
    4. '	n' → logprob: -19.000003814697266
    5. '_n' → logprob: -21.750003814697266
    6. '   ' → logprob: -22.375003814697266
    7. ')n' → logprob: -23.000003814697266
    8. '(' → logprob: -24.250003814697266
    9. ',n' → logprob: -24.625003814697266
    10. '
' → logprob: -24.625003814697266

Token 278: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4342755973339081
    2. '

' → logprob: -1.1842756271362305
    3. '<|end|>' → logprob: -3.8092756271362305
    4. '   ' → logprob: -4.3092756271362305
    5. 'def' → logprob: -4.6842756271362305
    6. '    
' → logprob: -7.9342756271362305
    7. ' def' → logprob: -8.05927562713623
    8. '```' → logprob: -8.18427562713623
    9. '<|end|>' → logprob: -8.68427562713623
    10. ' ' → logprob: -9.68427562713623

Token 279: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0341680645942688
    2. '

' → logprob: -4.534168243408203
    3. '   ' → logprob: -4.534168243408203
    4. 'def' → logprob: -4.784168243408203
    5. '<|end|>' → logprob: -5.784168243408203
    6. ' def' → logprob: -8.159168243408203
    7. '    
' → logprob: -8.534168243408203
    8. '```' → logprob: -9.659168243408203
    9. '<|end|>' → logprob: -9.659168243408203
    10. '  
' → logprob: -10.534168243408203

Token 280: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.01105206273496151
    2. ' def' → logprob: -4.511052131652832
    3. '   ' → logprob: -12.386052131652832
    4. '
' → logprob: -15.761052131652832
    5. '    
' → logprob: -17.636051177978516
    6. '	def' → logprob: -17.761051177978516
    7. ' ' → logprob: -18.761051177978516
    8. ' 
' → logprob: -20.886051177978516
    9. '```' → logprob: -20.886051177978516
    10. '  ' → logprob: -21.136051177978516

Token 281: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.07889099419116974
    2. 'find' → logprob: -2.5788910388946533
    3. ' ' → logprob: -14.828890800476074
    4. '_find' → logprob: -15.203890800476074
    5. 'def' → logprob: -15.203890800476074
    6. '	find' → logprob: -15.703890800476074
    7. ' def' → logprob: -16.20389175415039
    8. '  ' → logprob: -16.70389175415039
    9. 'f' → logprob: -17.07889175415039
    10. 'ind' → logprob: -17.32889175415039

Token 282: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5763132572174072
    2. '(' → logprob: -0.8263132572174072
    3. ' (' → logprob: -8.076313018798828
    4. '(x' → logprob: -11.201313018798828
    5. '(
' → logprob: -11.326313018798828
    6. '<|end|>' → logprob: -11.701313018798828
    7. 'self' → logprob: -11.951313018798828
    8. '(a' → logprob: -12.826313018798828
    9. ' ' → logprob: -12.826313018798828
    10. '(i' → logprob: -12.951313018798828

Token 283: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4947311580181122
    2. '(self' → logprob: -0.9947311878204346
    3. '(x' → logprob: -4.2447309494018555
    4. '(i' → logprob: -6.4947309494018555
    5. '(u' → logprob: -6.7447309494018555
    6. '(a' → logprob: -7.1197309494018555
    7. ')' → logprob: -7.4947309494018555
    8. ' (' → logprob: -7.7447309494018555
    9. 'self' → logprob: -7.9947309494018555
    10. '(n' → logprob: -7.9947309494018555

Token 284: ' a' (ID: 261)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0002702760975807905
    2. ' x' → logprob: -8.250269889831543
    3. 'i' → logprob: -12.250269889831543
    4. 'u' → logprob: -13.125269889831543
    5. 'a' → logprob: -13.500269889831543
    6. 'self' → logprob: -14.500269889831543
    7. 'p' → logprob: -14.750269889831543
    8. ' i' → logprob: -18.25027084350586
    9. ' u' → logprob: -18.50027084350586
    10. 'node' → logprob: -18.62527084350586

Token 285: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08028925210237503
    2. ':' → logprob: -2.955289363861084
    3. ')' → logprob: -3.955289363861084
    4. ' ):' → logprob: -5.705289363861084
    5. '):
' → logprob: -6.080289363861084
    6. ' )' → logprob: -8.580288887023926
    7. ':int' → logprob: -9.580288887023926
    8. '   ' → logprob: -10.705288887023926
    9. ' :' → logprob: -10.955288887023926
    10. ' ):
' → logprob: -11.455288887023926

Token 286: ' int' (ID: 677)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.16064560413360596
    2. ' a' → logprob: -1.910645604133606
    3. 'int' → logprob: -8.410645484924316
    4. ' int' → logprob: -8.535645484924316
    5. ')' → logprob: -13.785645484924316
    6. ')a' → logprob: -14.910645484924316
    7. '   ' → logprob: -15.035645484924316
    8. ' ' → logprob: -15.160645484924316
    9. '	a' → logprob: -15.410645484924316
    10. ':int' → logprob: -16.535646438598633

Token 287: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06276960670948029
    2. '):' → logprob: -2.812769651412964
    3. ' )' → logprob: -7.687769412994385
    4. '):
' → logprob: -8.312769889831543
    5. ' ):' → logprob: -9.312769889831543
    6. ')->' → logprob: -12.312769889831543
    7. '):
' → logprob: -13.312769889831543
    8. '):

' → logprob: -14.437769889831543
    9. ' ):
' → logprob: -14.562769889831543
    10. ':' → logprob: -15.812769889831543

Token 288: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01905047334730625
    2. '):' → logprob: -4.019050598144531
    3. ')' → logprob: -7.144050598144531
    4. ')->' → logprob: -10.144050598144531
    5. '():' → logprob: -10.644050598144531
    6. '->' → logprob: -10.894050598144531
    7. ' :' → logprob: -11.519050598144531
    8. ' ->' → logprob: -11.769050598144531
    9. '):
' → logprob: -12.519050598144531
    10. ':
' → logprob: -12.769050598144531

Token 289: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023245595395565033
    2. ' int' → logprob: -3.7732455730438232
    3. '[int' → logprob: -17.898244857788086
    4. 'a' → logprob: -18.273244857788086
    5. '	int' → logprob: -18.898244857788086
    6. ':int' → logprob: -19.273244857788086
    7. ' ' → logprob: -19.523244857788086
    8. '   ' → logprob: -20.023244857788086
    9. '(int' → logprob: -20.148244857788086
    10. '<int' → logprob: -20.273244857788086

Token 290: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1608080118894577
    2. ':
' → logprob: -1.9108079671859741
    3. '):
' → logprob: -7.785808086395264
    4. '):' → logprob: -8.910807609558105
    5. '<|end|>' → logprob: -11.660807609558105
    6. '       ' → logprob: -11.910807609558105
    7. ':return' → logprob: -12.410807609558105
    8. '():
' → logprob: -12.535807609558105
    9. ':
' → logprob: -13.160807609558105
    10. ')' → logprob: -13.285807609558105

Token 291: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10221533477306366
    2. '
' → logprob: -2.35221529006958
    3. ' 
' → logprob: -6.60221529006958
    4. '        
' → logprob: -8.352215766906738
    5. '<|end|>' → logprob: -9.227215766906738
    6. ' while' → logprob: -9.352215766906738
    7. '   ' → logprob: -10.227215766906738
    8. ' if' → logprob: -10.352215766906738
    9. '```' → logprob: -10.352215766906738
    10. '  
' → logprob: -10.477215766906738

Token 292: ' while' (ID: 2049)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20410633087158203
    2. ' if' → logprob: -1.704106330871582
    3. '       ' → logprob: -5.954106330871582
    4. ' while' → logprob: -10.079106330871582
    5. 'while' (adapté à ' while') → logprob: -10.079106330871582
    6. '
' → logprob: -12.329106330871582
    7. '	if' → logprob: -12.954106330871582
    8. 'return' → logprob: -13.454106330871582
    9. '0' → logprob: -14.454106330871582
    10. '        
' → logprob: -14.829106330871582

Token 293: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.016242804005742073
    2. 'a' → logprob: -4.516242980957031
    3. ' self' → logprob: -5.266242980957031
    4. ' a' → logprob: -10.891242980957031
    5. '	self' → logprob: -17.26624298095703
    6. '(self' → logprob: -17.39124298095703
    7. ' ' → logprob: -19.14124298095703
    8. 'parent' → logprob: -20.39124298095703
    9. 'Self' → logprob: -20.76624298095703
    10. '	a' → logprob: -20.89124298095703

Token 294: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -6.12258882028982e-05
    2. 'parent' → logprob: -10.00006103515625
    3. ' !=' → logprob: -12.12506103515625
    4. 'a' → logprob: -12.37506103515625
    5. '.' → logprob: -13.00006103515625
    6. '!=' → logprob: -13.25006103515625
    7. '[parent' → logprob: -13.62506103515625
    8. ' .' → logprob: -14.75006103515625
    9. '	parent' → logprob: -15.62506103515625
    10. ' parent' → logprob: -16.12506103515625

Token 295: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.1637164789135568e-05
    2. 'a' → logprob: -11.500011444091797
    3. '[self' → logprob: -13.500011444091797
    4. '[' → logprob: -17.750011444091797
    5. '[
' → logprob: -18.375011444091797
    6. ' a' → logprob: -18.625011444091797
    7. '```' → logprob: -18.875011444091797
    8. '(a' → logprob: -19.250011444091797
    9. 'self' → logprob: -19.750011444091797
    10. '	a' → logprob: -20.375011444091797

Token 296: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.33334147930145264
    2. ']!=' → logprob: -1.4583414793014526
    3. '!=' → logprob: -3.083341598510742
    4. 'a' → logprob: -5.583341598510742
    5. ' !=' → logprob: -6.958341598510742
    6. '[a' → logprob: -8.333341598510742
    7. ')!=' → logprob: -9.708341598510742
    8. ' ]' → logprob: -11.708341598510742
    9. '()!=' → logprob: -12.208341598510742
    10. '[' → logprob: -12.208341598510742

Token 297: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.0011896300129592419
    2. ' !=' → logprob: -7.126189708709717
    3. 'a' → logprob: -8.001189231872559
    4. ']!=' → logprob: -10.126189231872559
    5. '!==' → logprob: -12.251189231872559
    6. '()!=' → logprob: -13.001189231872559
    7. '[a' → logprob: -13.501189231872559
    8. ')!=' → logprob: -14.001189231872559
    9. '```' → logprob: -15.876189231872559
    10. 'is' → logprob: -16.126190185546875

Token 298: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.547789674485102e-05
    2. ' a' → logprob: -10.250035285949707
    3. '	a' → logprob: -18.375036239624023
    4. '_a' → logprob: -20.625036239624023
    5. '#a' → logprob: -21.750036239624023
    6. '>a' → logprob: -22.250036239624023
    7. 'а' → logprob: -22.500036239624023
    8. '   ' → logprob: -23.000036239624023
    9. ')a' → logprob: -23.125036239624023
    10. 'self' → logprob: -23.750036239624023

Token 299: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2814023792743683
    2. ':' → logprob: -1.406402349472046
    3. 'a' → logprob: -8.531402587890625
    4. ' :
' → logprob: -10.906402587890625
    5. ' a' → logprob: -11.781402587890625
    6. '):
' → logprob: -12.031402587890625
    7. ':a' → logprob: -12.156402587890625
    8. ' :' → logprob: -12.156402587890625
    9. ':

' → logprob: -12.406402587890625
    10. ',' → logprob: -13.156402587890625

Token 300: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16930176317691803
    2. ':
' → logprob: -2.419301748275757
    3. 'a' → logprob: -3.794301748275757
    4. ' a' → logprob: -3.794301748275757
    5. '       ' → logprob: -4.169301986694336
    6. ':' → logprob: -6.294301986694336
    7. '
' → logprob: -6.669301986694336
    8. '):
' → logprob: -6.794301986694336
    9. '   ' → logprob: -7.044301986694336
    10. ' :
' → logprob: -7.794301986694336

Token 301: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.016263095661997795
    2. ' self' → logprob: -4.516263008117676
    3. '           ' → logprob: -5.266263008117676
    4. 'a' → logprob: -10.266263008117676
    5. ' a' → logprob: -13.641263008117676
    6. '               ' → logprob: -13.891263008117676
    7. '   ' → logprob: -14.016263008117676
    8. '	self' → logprob: -14.641263008117676
    9. '
' → logprob: -14.891263008117676
    10. '       ' → logprob: -16.016263961791992

Token 302: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.45183953642845154
    2. 'parent' → logprob: -1.076839566230774
    3. '=' → logprob: -3.9518394470214844
    4. ' =' → logprob: -5.701839447021484
    5. ' parent' → logprob: -9.326839447021484
    6. '_parent' → logprob: -9.826839447021484
    7. '[parent' → logprob: -9.826839447021484
    8. 'self' → logprob: -10.201839447021484
    9. 'a' → logprob: -10.951839447021484
    10. '	parent' → logprob: -11.451839447021484

Token 303: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -8.506661833962426e-05
    2. 'a' → logprob: -9.37508487701416
    3. '[' → logprob: -15.75008487701416
    4. '	a' → logprob: -18.125085830688477
    5. ' a' → logprob: -18.625085830688477
    6. '[self' → logprob: -18.750085830688477
    7. '(a' → logprob: -18.875085830688477
    8. '[A' → logprob: -19.500085830688477
    9. '```' → logprob: -19.750085830688477
    10. '[
' → logprob: -19.750085830688477

Token 304: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3741534352302551
    2. ']' → logprob: -1.3741533756256104
    3. ' =' → logprob: -2.8741533756256104
    4. ']=' → logprob: -5.9991536140441895
    5. '[a' → logprob: -9.374153137207031
    6. 'a' → logprob: -10.499153137207031
    7. '=a' → logprob: -11.624153137207031
    8. ' ]' → logprob: -12.249153137207031
    9. '[' → logprob: -13.124153137207031
    10. ')' → logprob: -14.499153137207031

Token 305: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06197742745280266
    2. ' =' → logprob: -2.8119773864746094
    3. '=a' → logprob: -12.06197738647461
    4. '[a' → logprob: -12.56197738647461
    5. 'a' → logprob: -14.68697738647461
    6. '=
' → logprob: -17.18697738647461
    7. ']' → logprob: -17.18697738647461
    8. ']=' → logprob: -17.43697738647461
    9. '[' → logprob: -17.56197738647461
    10. ' a' → logprob: -19.18697738647461

Token 306: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004078758880496025
    2. ' self' → logprob: -5.5040788650512695
    3. '           ' → logprob: -15.25407886505127
    4. '	self' → logprob: -17.254077911376953
    5. '       ' → logprob: -17.879077911376953
    6. '[self' → logprob: -18.004077911376953
    7. '(self' → logprob: -18.254077911376953
    8. '
' → logprob: -19.754077911376953
    9. '   ' → logprob: -20.004077911376953
    10. '=self' → logprob: -20.254077911376953

Token 307: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.0002622894535306841
    2. 'parent' → logprob: -8.250262260437012
    3. '.find' → logprob: -14.125262260437012
    4. '.' → logprob: -15.750262260437012
    5. '[parent' → logprob: -16.750263214111328
    6. ' parent' → logprob: -17.125263214111328
    7. '	parent' → logprob: -17.375263214111328
    8. '.
' → logprob: -17.625263214111328
    9. '_parent' → logprob: -18.000263214111328
    10. 'find' → logprob: -18.125263214111328

Token 308: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.0001249925117008388
    2. 'self' → logprob: -9.00012493133545
    3. '[' → logprob: -13.50012493133545
    4. ' self' → logprob: -16.375125885009766
    5. '[
' → logprob: -16.875125885009766
    6. '[a' → logprob: -17.500125885009766
    7. '(self' → logprob: -17.625125885009766
    8. 'a' → logprob: -18.750125885009766
    9. '	self' → logprob: -19.625125885009766
    10. '[s' → logprob: -20.500125885009766

Token 309: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -1.4021237802808173e-05
    2. 'parent' → logprob: -11.250014305114746
    3. '[parent' → logprob: -14.500014305114746
    4. '[a' → logprob: -15.500014305114746
    5. '.' → logprob: -15.750014305114746
    6. ' .' → logprob: -17.12501335144043
    7. ' parent' → logprob: -17.37501335144043
    8. '.Parent' → logprob: -17.62501335144043
    9. '	parent' → logprob: -18.00001335144043
    10. '.a' → logprob: -18.62501335144043

Token 310: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0002933942887466401
    2. 'a' → logprob: -8.250293731689453
    3. '[self' → logprob: -10.375293731689453
    4. '[' → logprob: -14.875293731689453
    5. '[
' → logprob: -15.250293731689453
    6. 'self' → logprob: -16.500293731689453
    7. '	a' → logprob: -16.625293731689453
    8. ' a' → logprob: -16.625293731689453
    9. '(a' → logprob: -17.250293731689453
    10. ']' → logprob: -17.750293731689453

Token 311: ']]
' (ID: 29446)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.021990982815623283
    2. ']' → logprob: -4.521990776062012
    3. 'a' → logprob: -4.521990776062012
    4. ']]' → logprob: -11.896990776062012
    5. ' a' → logprob: -12.521990776062012
    6. '(a' → logprob: -12.771990776062012
    7. '[' → logprob: -13.396990776062012
    8. '])' → logprob: -14.146990776062012
    9. '	a' → logprob: -15.646990776062012
    10. ' ]' → logprob: -15.646990776062012

Token 312: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012751431204378605
    2. 'a' → logprob: -4.387751579284668
    3. ' a' → logprob: -8.387751579284668
    4. '       ' → logprob: -12.012751579284668
    5. '   ' → logprob: -12.262751579284668
    6. ',a' → logprob: -13.262751579284668
    7. '	a' → logprob: -14.512751579284668
    8. '		' → logprob: -16.01275062561035
    9. ',' → logprob: -16.13775062561035
    10. '_a' → logprob: -16.26275062561035

Token 313: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.00033581978641450405
    2. ' a' → logprob: -8.000335693359375
    3. '           ' → logprob: -15.000335693359375
    4. '   ' → logprob: -17.875335693359375
    5. '	a' → logprob: -18.250335693359375
    6. '       ' → logprob: -20.875335693359375
    7. '_a' → logprob: -21.250335693359375
    8. '
' → logprob: -21.375335693359375
    9. ' ' → logprob: -22.000335693359375
    10. '               ' → logprob: -22.875335693359375

Token 314: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141372084617615
    2. '=' → logprob: -1.7014137506484985
    3. ' ' → logprob: -14.701414108276367
    4. ' +=' → logprob: -17.326414108276367
    5. ' =
' → logprob: -17.826414108276367
    6. '.=' → logprob: -17.951414108276367
    7. ',' → logprob: -18.701414108276367
    8. ' |=' → logprob: -19.076414108276367
    9. '+=' → logprob: -19.451414108276367
    10. ' =)' → logprob: -19.826414108276367

Token 315: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.25193002820014954
    2. ' self' → logprob: -1.5019299983978271
    3. '	self' → logprob: -14.751930236816406
    4. '[self' → logprob: -15.376930236816406
    5. '           ' → logprob: -15.751930236816406
    6. '   ' → logprob: -16.376930236816406
    7. '(self' → logprob: -16.876930236816406
    8. '       ' → logprob: -17.251930236816406
    9. ' ' → logprob: -17.376930236816406
    10. '=self' → logprob: -18.126930236816406

Token 316: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -9.65101717156358e-05
    2. 'parent' → logprob: -9.250096321105957
    3. '.' → logprob: -15.375096321105957
    4. ' parent' → logprob: -16.875097274780273
    5. '	parent' → logprob: -17.750097274780273
    6. '[parent' → logprob: -18.375097274780273
    7. '_parent' → logprob: -19.375097274780273
    8. ' .' → logprob: -19.500097274780273
    9. ',parent' → logprob: -19.875097274780273
    10. '.Parent' → logprob: -20.000097274780273

Token 317: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -7.3458322731312364e-06
    2. 'a' → logprob: -11.875007629394531
    3. '[' → logprob: -15.750007629394531
    4. '[self' → logprob: -16.37500762939453
    5. '[
' → logprob: -17.00000762939453
    6. ' a' → logprob: -18.87500762939453
    7. '(a' → logprob: -19.25000762939453
    8. ' [' → logprob: -19.50000762939453
    9. '[parent' → logprob: -20.12500762939453
    10. '	a' → logprob: -20.37500762939453

Token 318: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10060613602399826
    2. ')' → logprob: -2.3506062030792236
    3. ']
' → logprob: -8.350605964660645
    4. '}' → logprob: -9.850605964660645
    5. ' ]' → logprob: -9.975605964660645
    6. '<|end|>' → logprob: -10.600605964660645
    7. ')
' → logprob: -11.100605964660645
    8. '       ' → logprob: -11.475605964660645
    9. ')]' → logprob: -12.850605964660645
    10. ' )' → logprob: -12.850605964660645

Token 319: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011342625366523862
    2. 'return' → logprob: -7.126134395599365
    3. ' return' → logprob: -8.126133918762207
    4. '   ' → logprob: -11.126133918762207
    5. '<|end|>' → logprob: -11.751133918762207
    6. '
' → logprob: -12.876133918762207
    7. ',' → logprob: -13.501133918762207
    8. '        
' → logprob: -13.626133918762207
    9. '           ' → logprob: -13.751133918762207
    10. '	' → logprob: -13.876133918762207

Token 320: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5050428509712219
    2. '       ' → logprob: -1.0050427913665771
    3. ' return' → logprob: -3.505042791366577
    4. '   ' → logprob: -7.755043029785156
    5. '	return' → logprob: -11.255043029785156
    6. 'eturn' → logprob: -13.505043029785156
    7. '    ' → logprob: -14.630043029785156
    8. '
' → logprob: -14.755043029785156
    9. ' ' → logprob: -14.880043029785156
    10. ':return' → logprob: -14.880043029785156

Token 321: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.061967797577381134
    2. ' a' → logprob: -2.8119678497314453
    3. 'self' → logprob: -16.561967849731445
    4. '	a' → logprob: -17.186967849731445
    5. ' self' → logprob: -19.811967849731445
    6. ' ' → logprob: -19.936967849731445
    7. '_a' → logprob: -20.061967849731445
    8. ' ' → logprob: -21.061967849731445
    9. ' а' → logprob: -22.061967849731445
    10. '```' → logprob: -22.186967849731445

Token 322: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6734308004379272
    2. '<|end|>' → logprob: -0.7984308004379272
    3. '
' → logprob: -3.548430919647217
    4. '<|end|>' → logprob: -5.798430919647217
    5. '

' → logprob: -5.923430919647217
    6. '    
' → logprob: -5.923430919647217
    7. '```' → logprob: -6.423430919647217
    8. 'def' → logprob: -8.048430442810059
    9. '  
' → logprob: -8.298430442810059
    10. '  ' → logprob: -8.923430442810059

Token 323: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04911968857049942
    2. '
' → logprob: -3.424119710922241
    3. '<|end|>' → logprob: -4.799119472503662
    4. 'def' → logprob: -5.424119472503662
    5. '    
' → logprob: -6.674119472503662
    6. ' def' → logprob: -7.674119472503662
    7. '  ' → logprob: -8.54911994934082
    8. '  
' → logprob: -8.67411994934082
    9. ' ' → logprob: -8.79911994934082
    10. '```' → logprob: -8.79911994934082

Token 324: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00019984507525805384
    2. ' def' → logprob: -9.000200271606445
    3. '   ' → logprob: -9.500200271606445
    4. '
' → logprob: -14.000200271606445
    5. '    
' → logprob: -15.000200271606445
    6. '	def' → logprob: -15.750200271606445
    7. '```' → logprob: -16.375200271606445
    8. ' ' → logprob: -18.375200271606445
    9. '        
' → logprob: -19.125200271606445
    10. '  
' → logprob: -19.250200271606445

Token 325: ' union' (ID: 22208)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'union' → logprob: -0.16022615134716034
    2. ' union' → logprob: -1.9102261066436768
    3. 'un' → logprob: -13.410225868225098
    4. ' unite' → logprob: -15.535225868225098
    5. '_union' → logprob: -15.535225868225098
    6. '	union' → logprob: -17.910226821899414
    7. '.union' → logprob: -18.035226821899414
    8. 'Union' → logprob: -19.410226821899414
    9. 'def' → logprob: -20.410226821899414
    10. 'merge' → logprob: -20.910226821899414

Token 326: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02641873061656952
    2. '(' → logprob: -3.651418685913086
    3. ' (' → logprob: -9.651418685913086
    4. '(
' → logprob: -10.151418685913086
    5. '(a' → logprob: -12.026418685913086
    6. '<|end|>' → logprob: -12.026418685913086
    7. 'self' → logprob: -13.651418685913086
    8. '(this' → logprob: -14.026418685913086
    9. ',' → logprob: -15.401418685913086
    10. '(

' → logprob: -15.776418685913086

Token 327: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004928935784846544
    2. ',' → logprob: -5.629929065704346
    3. ' (' → logprob: -7.379929065704346
    4. '(' → logprob: -7.754929065704346
    5. 'self' → logprob: -9.129928588867188
    6. '(a' → logprob: -9.504928588867188
    7. ')' → logprob: -10.004928588867188
    8. '(
' → logprob: -11.254928588867188
    9. ')(' → logprob: -11.504928588867188
    10. '<|end|>' → logprob: -11.504928588867188

Token 328: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12735703587532043
    2. ' a' → logprob: -2.127357006072998
    3. 'self' → logprob: -8.502357482910156
    4. 'u' → logprob: -9.127357482910156
    5. ' self' → logprob: -9.502357482910156
    6. ' u' → logprob: -10.252357482910156
    7. 'x' → logprob: -12.877357482910156
    8. ')' → logprob: -13.377357482910156
    9. ' ' → logprob: -13.877357482910156
    10. ')a' → logprob: -14.002357482910156

Token 329: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004625699482858181
    2. ' ,' → logprob: -5.3796257972717285
    3. ',b' → logprob: -13.25462532043457
    4. '<|end|>' → logprob: -13.50462532043457
    5. ',
' → logprob: -14.25462532043457
    6. ',int' → logprob: -14.75462532043457
    7. ',a' → logprob: -15.00462532043457
    8. ' ' → logprob: -15.12962532043457
    9. '‌,' → logprob: -15.62962532043457
    10. 'a' → logprob: -15.75462532043457

Token 330: ' int' (ID: 677)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.38687223196029663
    2. 'b' → logprob: -1.1368722915649414
    3. 'int' → logprob: -14.636872291564941
    4. ' ' → logprob: -14.886872291564941
    5. ',b' → logprob: -15.386872291564941
    6. ' int' → logprob: -16.011871337890625
    7. ',' → logprob: -16.636871337890625
    8. ')b' → logprob: -16.761871337890625
    9. '<|end|>' → logprob: -17.261871337890625
    10. ')' → logprob: -17.511871337890625

Token 331: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015908108616713434
    2. ' ,' → logprob: -8.75015926361084
    3. ':' → logprob: -15.25015926361084
    4. ',int' → logprob: -15.87515926361084
    5. ',b' → logprob: -16.000158309936523
    6. ',
' → logprob: -16.375158309936523
    7. 'a' → logprob: -17.500158309936523
    8. ',a' → logprob: -18.125158309936523
    9. '   ' → logprob: -18.375158309936523
    10. ':int' → logprob: -18.625158309936523

Token 332: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2519291639328003
    2. ' b' → logprob: -1.5019291639328003
    3. '   ' → logprob: -17.126928329467773
    4. ' ' → logprob: -18.751928329467773
    5. '    ' → logprob: -18.876928329467773
    6. '	b' → logprob: -19.126928329467773
    7. ')b' → logprob: -19.626928329467773
    8. '  ' → logprob: -20.751928329467773
    9. ' б' → logprob: -21.001928329467773
    10. '>b' → logprob: -21.626928329467773

Token 333: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3231463134288788
    2. ')' → logprob: -1.3231463432312012
    3. '):
' → logprob: -4.698146343231201
    4. ':' → logprob: -7.698146343231201
    5. ' ):' → logprob: -8.698145866394043
    6. ' )' → logprob: -9.448145866394043
    7. '):

' → logprob: -11.823145866394043
    8. '):
' → logprob: -11.948145866394043
    9. '   ' → logprob: -12.448145866394043
    10. ' ):
' → logprob: -12.948145866394043

Token 334: ' int' (ID: 677)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.6470798254013062
    2. 'b' → logprob: -0.8970798254013062
    3. ')' → logprob: -2.8970799446105957
    4. ' )' → logprob: -4.397079944610596
    5. ')b' → logprob: -7.022079944610596
    6. 'int' → logprob: -9.147079467773438
    7. ' a' → logprob: -9.772079467773438
    8. 'a' → logprob: -10.147079467773438
    9. ' int' → logprob: -11.022079467773438
    10. ' )
' → logprob: -11.022079467773438

Token 335: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16092443466186523
    2. '):' → logprob: -1.9109244346618652
    3. '):
' → logprob: -7.285924434661865
    4. ' )' → logprob: -12.160924911499023
    5. ' ):' → logprob: -12.410924911499023
    6. ':' → logprob: -13.035924911499023
    7. '):
' → logprob: -13.410924911499023
    8. ')->' → logprob: -14.535924911499023
    9. '):

' → logprob: -14.535924911499023
    10. ' ' → logprob: -15.660924911499023

Token 336: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14658011496067047
    2. ')' → logprob: -2.021580219268799
    3. '):' → logprob: -6.021580219268799
    4. ' ->' → logprob: -7.271580219268799
    5. ' :' → logprob: -8.27157974243164
    6. '(self' → logprob: -8.77157974243164
    7. ')->' → logprob: -9.27157974243164
    8. '       ' → logprob: -9.39657974243164
    9. '->' → logprob: -9.77157974243164
    10. '   ' → logprob: -9.89657974243164

Token 337: ' bool' (ID: 3792)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2417316436767578
    2. ' int' → logprob: -1.7417316436767578
    3. 'bool' → logprob: -4.366731643676758
    4. 'None' → logprob: -4.741731643676758
    5. ' bool' → logprob: -5.366731643676758
    6. 'self' → logprob: -5.491731643676758
    7. 'True' → logprob: -5.741731643676758
    8. ' None' → logprob: -5.866731643676758
    9. ' self' → logprob: -6.991731643676758
    10. ' True' → logprob: -6.991731643676758

Token 338: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03821522369980812
    2. ':
' → logprob: -3.288215160369873
    3. '       ' → logprob: -9.538215637207031
    4. '<|end|>' → logprob: -10.288215637207031
    5. '):
' → logprob: -11.038215637207031
    6. '):' → logprob: -11.413215637207031
    7. ':

' → logprob: -11.538215637207031
    8. ' :' → logprob: -12.038215637207031
    9. '():
' → logprob: -12.163215637207031
    10. ' :
' → logprob: -12.413215637207031

Token 339: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02348235622048378
    2. '<|end|>' → logprob: -4.273482322692871
    3. ' ' → logprob: -5.148482322692871
    4. ' 
' → logprob: -7.023482322692871
    5. '    ' → logprob: -7.273482322692871
    6. '        ' → logprob: -7.648482322692871
    7. '   ' → logprob: -8.023482322692871
    8. ' if' → logprob: -8.273482322692871
    9. ' a' → logprob: -8.898482322692871
    10. '  
' → logprob: -9.273482322692871

Token 340: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.4718664884567261
    2. 'root' → logprob: -1.221866488456726
    3. ' root' → logprob: -2.9718666076660156
    4. ' a' → logprob: -3.7218666076660156
    5. 'ra' → logprob: -5.846866607666016
    6. '       ' → logprob: -6.096866607666016
    7. 'pa' → logprob: -7.096866607666016
    8. ' ra' → logprob: -10.096866607666016
    9. '   ' → logprob: -10.221866607666016
    10. ' pa' → logprob: -11.096866607666016

Token 341: ' =' (ID: 314)
  Prédit: '_root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_root' → logprob: -0.2917795777320862
    2. ' =' → logprob: -1.9167795181274414
    3. '_parent' → logprob: -2.7917795181274414
    4. '=' → logprob: -3.9167795181274414
    5. 'root' → logprob: -4.291779518127441
    6. '_' → logprob: -4.666779518127441
    7. '_ro' → logprob: -7.666779518127441
    8. ' ' → logprob: -8.166779518127441
    9. '_rep' → logprob: -8.791779518127441
    10. ',' → logprob: -9.041779518127441

Token 342: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01814994215965271
    2. ' self' → logprob: -4.0181498527526855
    3. '(self' → logprob: -19.893150329589844
    4. '=self' → logprob: -20.643150329589844
    5. '	self' → logprob: -21.268150329589844
    6. '[self' → logprob: -21.268150329589844
    7. '       ' → logprob: -22.643150329589844
    8. '_self' → logprob: -23.268150329589844
    9. ':self' → logprob: -23.518150329589844
    10. 'Self' → logprob: -24.268150329589844

Token 343: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.010137456469237804
    2. 'find' → logprob: -4.635137557983398
    3. '.' → logprob: -8.760137557983398
    4. '.union' → logprob: -8.760137557983398
    5. 'union' → logprob: -10.010137557983398
    6. '.parent' → logprob: -11.510137557983398
    7. '.findall' → logprob: -12.635137557983398
    8. 'parent' → logprob: -13.135137557983398
    9. '.
' → logprob: -13.260137557983398
    10. '
' → logprob: -13.885137557983398

Token 344: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -2.3080716346157715e-05
    2. 'a' → logprob: -11.750022888183594
    3. '(b' → logprob: -11.875022888183594
    4. '(' → logprob: -11.875022888183594
    5. ',' → logprob: -14.750022888183594
    6. ' (' → logprob: -15.000022888183594
    7. '(
' → logprob: -15.500022888183594
    8. 'b' → logprob: -16.125022888183594
    9. ' a' → logprob: -16.250022888183594
    10. ')' → logprob: -17.750022888183594

Token 345: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16071797907352448
    2. ')' → logprob: -1.9107179641723633
    3. ' )
' → logprob: -7.660717964172363
    4. ' )' → logprob: -11.660717964172363
    5. ')b' → logprob: -12.285717964172363
    6. ')
' → logprob: -12.535717964172363
    7. ',' → logprob: -12.535717964172363
    8. 'b' → logprob: -13.910717964172363
    9. ')

' → logprob: -14.910717964172363
    10. ')a' → logprob: -15.535717964172363

Token 346: '       ' (ID: 309)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.0141881899908185
    2. 'b' → logprob: -4.264188289642334
    3. '       ' → logprob: -10.764187812805176
    4. '	b' → logprob: -13.264187812805176
    5. ',b' → logprob: -14.014187812805176
    6. '        ' → logprob: -14.764187812805176
    7. ',' → logprob: -15.764187812805176
    8. ' if' → logprob: -16.264188766479492
    9. ' ' → logprob: -16.764188766479492
    10. ' б' → logprob: -16.764188766479492

Token 347: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.01815006136894226
    2. 'b' (adapté à ' b') → logprob: -4.0181498527526855
    3. '	b' → logprob: -16.018150329589844
    4. ' 
' → logprob: -18.018150329589844
    5. '    ' → logprob: -18.518150329589844
    6. ' ' → logprob: -18.643150329589844
    7. ' ' → logprob: -18.768150329589844
    8. ' б' → logprob: -19.018150329589844
    9. ',b' → logprob: -19.518150329589844
    10. '_b' → logprob: -19.893150329589844

Token 348: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22876358032226562
    2. '=' → logprob: -1.7287635803222656
    3. '<|end|>' → logprob: -3.7287635803222656
    4. ')' → logprob: -6.603763580322266
    5. '<|end|>' → logprob: -7.228763580322266
    6. ' ' → logprob: -8.353763580322266
    7. ' =
' → logprob: -8.853763580322266
    8. ' ==' → logprob: -8.978763580322266
    9. '        ' → logprob: -9.353763580322266
    10. 'a' → logprob: -10.103763580322266

Token 349: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.25207778811454773
    2. 'self' → logprob: -1.5020778179168701
    3. ' b' → logprob: -9.12707805633545
    4. 'b' → logprob: -10.25207805633545
    5. '<|end|>' → logprob: -12.75207805633545
    6. ' a' → logprob: -14.50207805633545
    7. 'a' → logprob: -14.62707805633545
    8. '(self' → logprob: -15.00207805633545
    9. ' ' → logprob: -15.37707805633545
    10. '	self' → logprob: -15.75207805633545

Token 350: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.004626172594726086
    2. 'find' → logprob: -5.379626274108887
    3. ' .' → logprob: -13.504626274108887
    4. '.' → logprob: -14.004626274108887
    5. 'ind' → logprob: -14.129626274108887
    6. ').' → logprob: -14.379626274108887
    7. ' find' → logprob: -14.504626274108887
    8. '.findall' → logprob: -14.504626274108887
    9. '(find' → logprob: -14.629626274108887
    10. '=find' → logprob: -14.754626274108887

Token 351: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -1.2664456789934775e-06
    2. 'b' → logprob: -14.125000953674316
    3. ' (' → logprob: -15.750000953674316
    4. ' b' → logprob: -15.750000953674316
    5. '(a' → logprob: -15.875000953674316
    6. '(' → logprob: -16.250001907348633
    7. '	b' → logprob: -20.000001907348633
    8. ' ' → logprob: -20.125001907348633
    9. '(B' → logprob: -20.375001907348633
    10. ')' → logprob: -20.500001907348633

Token 352: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07890443503856659
    2. ')
' → logprob: -2.578904390335083
    3. ' )' → logprob: -11.578904151916504
    4. ' )
' → logprob: -12.703904151916504
    5. ')

' → logprob: -14.328904151916504
    6. ')
' → logprob: -14.453904151916504
    7. ')a' → logprob: -14.578904151916504
    8. ')return' → logprob: -15.328904151916504
    9. ' ' → logprob: -15.953904151916504
    10. '
' → logprob: -16.07890510559082

Token 353: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.091544508934021
    2. '       ' → logprob: -1.341544508934021
    3. '<|end|>' → logprob: -1.466544508934021
    4. ' if' → logprob: -1.841544508934021
    5. 'if' → logprob: -5.2165446281433105
    6. ' 
' → logprob: -6.2165446281433105
    7. '        ' → logprob: -6.8415446281433105
    8. ' ' → logprob: -7.0915446281433105
    9. '        
' → logprob: -7.2165446281433105
    10. '  
' → logprob: -7.5915446281433105

Token 354: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.01052798330783844
    2. ' if' → logprob: -4.760528087615967
    3. '       ' → logprob: -6.260528087615967
    4. '   ' → logprob: -14.885527610778809
    5. '	if' → logprob: -14.885527610778809
    6. '```' → logprob: -15.135527610778809
    7. 'If' → logprob: -15.510527610778809
    8. '
' → logprob: -16.260528564453125
    9. ' ' → logprob: -17.885528564453125
    10. '        
' → logprob: -17.885528564453125

Token 355: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.04858805239200592
    2. 'a' → logprob: -3.0485880374908447
    3. '	a' → logprob: -14.423587799072266
    4. ' ' → logprob: -16.548587799072266
    5. '_a' → logprob: -18.798587799072266
    6. '(a' → logprob: -19.173587799072266
    7. ' ' → logprob: -19.298587799072266
    8. '   ' → logprob: -19.298587799072266
    9. '>a' → logprob: -20.173587799072266
    10. 'а' → logprob: -20.423587799072266

Token 356: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5762991309165955
    2. ' ==' → logprob: -0.8262991309165955
    3. '=' → logprob: -7.95129919052124
    4. '!=' → logprob: -12.826298713684082
    5. ' !=' → logprob: -13.826298713684082
    6. '==
' → logprob: -13.826298713684082
    7. ']==' → logprob: -14.451298713684082
    8. ' =' → logprob: -14.701298713684082
    9. '===' → logprob: -14.826298713684082
    10. '<|end|>' → logprob: -15.076298713684082

Token 357: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0031777136027812958
    2. ' b' → logprob: -5.753177642822266
    3. '	b' → logprob: -20.503177642822266
    4. ')b' → logprob: -21.378177642822266
    5. '=b' → logprob: -22.003177642822266
    6. '   ' → logprob: -22.128177642822266
    7. '_b' → logprob: -22.253177642822266
    8. ' б' → logprob: -22.503177642822266
    9. '>b' → logprob: -22.753177642822266
    10. ' ' → logprob: -23.503177642822266

Token 358: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09533465653657913
    2. ':return' → logprob: -2.470334768295288
    3. ':
' → logprob: -5.095334529876709
    4. 'return' → logprob: -9.720335006713867
    5. '<|end|>' → logprob: -9.720335006713867
    6. ' return' → logprob: -10.595335006713867
    7. '           ' → logprob: -10.845335006713867
    8. '   ' → logprob: -11.095335006713867
    9. '       ' → logprob: -11.345335006713867
    10. ')return' → logprob: -11.470335006713867

Token 359: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001375591498799622
    2. '       ' → logprob: -7.001375675201416
    3. ' False' → logprob: -8.251375198364258
    4. 'False' → logprob: -8.751375198364258
    5. '
' → logprob: -11.376375198364258
    6. '   ' → logprob: -11.751375198364258
    7. ' return' → logprob: -11.876375198364258
    8. ' false' → logprob: -12.001375198364258
    9. ' True' → logprob: -12.376375198364258
    10. 'return' → logprob: -13.626375198364258

Token 360: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.9727570414543152
    2. 'False' → logprob: -0.9727570414543152
    3. ' return' → logprob: -2.47275710105896
    4. '           ' → logprob: -2.72275710105896
    5. ' False' → logprob: -2.72275710105896
    6. '
' → logprob: -3.59775710105896
    7. '       ' → logprob: -7.847756862640381
    8. 'false' → logprob: -8.722757339477539
    9. '   ' → logprob: -9.347757339477539
    10. '               ' → logprob: -9.347757339477539

Token 361: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0031777136027812958
    2. ' False' → logprob: -5.753177642822266
    3. 'True' → logprob: -21.503177642822266
    4. '(False' → logprob: -22.128177642822266
    5. '=False' → logprob: -24.128177642822266
    6. 'false' → logprob: -24.878177642822266
    7. '
' → logprob: -25.253177642822266
    8. '_false' → logprob: -25.628177642822266
    9. '   ' → logprob: -26.253177642822266
    10. '.False' → logprob: -26.378177642822266

Token 362: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5818367600440979
    2. '
' → logprob: -0.8318367600440979
    3. '<|end|>' → logprob: -5.206836700439453
    4. '        
' → logprob: -8.456836700439453
    5. '```' → logprob: -10.331836700439453
    6. ',' → logprob: -10.456836700439453
    7. '
' → logprob: -11.206836700439453
    8. '   ' → logprob: -11.206836700439453
    9. '<|end|>' → logprob: -11.206836700439453
    10. '  
' → logprob: -11.456836700439453

Token 363: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0044907694682478905
    2. '
' → logprob: -6.254490852355957
    3. '        
' → logprob: -6.254490852355957
    4. ' 
' → logprob: -8.629490852355957
    5. '<|end|>' → logprob: -8.629490852355957
    6. '        ' → logprob: -8.879490852355957
    7. '  
' → logprob: -10.629490852355957
    8. '	' → logprob: -10.754490852355957
    9. '   ' → logprob: -11.004490852355957
    10. '    
' → logprob: -11.129490852355957

Token 364: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.049703337252140045
    2. 'if' (adapté à ' if') → logprob: -3.049703359603882
    3. '       ' → logprob: -6.799703121185303
    4. '	if' → logprob: -14.424703598022461
    5. '
' → logprob: -14.799703598022461
    6. 'If' → logprob: -16.04970359802246
    7. '   ' → logprob: -16.29970359802246
    8. '        
' → logprob: -17.17470359802246
    9. '        ' → logprob: -17.67470359802246
    10. ' If' → logprob: -17.79970359802246

Token 365: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4740830957889557
    2. 'self' → logprob: -0.9740830659866333
    3. '(self' → logprob: -12.974082946777344
    4. 'elf' → logprob: -13.349082946777344
    5. '	self' → logprob: -13.474082946777344
    6. '[self' → logprob: -15.724082946777344
    7. '_self' → logprob: -15.724082946777344
    8. '=self' → logprob: -15.974082946777344
    9. 's' → logprob: -16.224082946777344
    10. '
' → logprob: -16.474082946777344

Token 366: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -1.9361264946837764e-07
    2. 'rank' → logprob: -16.0
    3. '.' → logprob: -17.125
    4. '.r' → logprob: -17.875
    5. ' .' → logprob: -18.5
    6. ' rank' → logprob: -19.875
    7. '_rank' → logprob: -20.75
    8. '.parent' → logprob: -22.0
    9. '
' → logprob: -22.875
    10. '(rank' → logprob: -22.875

Token 367: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -3.128163257315464e-07
    2. 'a' → logprob: -15.375
    3. ' a' → logprob: -17.875
    4. '[' → logprob: -19.125
    5. ' [' → logprob: -19.25
    6. '[A' → logprob: -20.0
    7. '[u' → logprob: -20.125
    8. '[
' → logprob: -21.375
    9. '[b' → logprob: -21.5
    10. '	a' → logprob: -21.75

Token 368: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.05080006271600723
    2. '<' → logprob: -3.550800085067749
    3. '[' → logprob: -4.42579984664917
    4. '[a' → logprob: -4.80079984664917
    5. ']' → logprob: -7.92579984664917
    6. '<a' → logprob: -9.425800323486328
    7. ']<' → logprob: -9.800800323486328
    8. ' [' → logprob: -10.300800323486328
    9. ' ' → logprob: -10.550800323486328
    10. '>' → logprob: -10.800800323486328

Token 369: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.20141996443271637
    2. '<' → logprob: -1.7014199495315552
    3. ' ' → logprob: -12.701419830322266
    4. '<a' → logprob: -13.826419830322266
    5. '<b' → logprob: -14.451419830322266
    6. '[' → logprob: -14.576419830322266
    7. '<int' → logprob: -15.201419830322266
    8. '>' → logprob: -15.201419830322266
    9. '<class' → logprob: -15.326419830322266
    10. 'a' → logprob: -16.076419830322266

Token 370: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03805089741945267
    2. ' self' → logprob: -3.288050889968872
    3. 'b' → logprob: -11.663050651550293
    4. ' b' → logprob: -14.913050651550293
    5. '   ' → logprob: -15.413050651550293
    6. '	self' → logprob: -16.03805160522461
    7. '
' → logprob: -16.28805160522461
    8. ' ' → logprob: -17.16305160522461
    9. '=self' → logprob: -17.91305160522461
    10. '[self' → logprob: -18.28805160522461

Token 371: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -0.001627217628993094
    2. 'rank' → logprob: -6.501627445220947
    3. ' rank' → logprob: -9.001626968383789
    4. '_rank' → logprob: -14.126626968383789
    5. '   ' → logprob: -15.376626968383789
    6. '.' → logprob: -15.501626968383789
    7. ' .' → logprob: -15.501626968383789
    8. 'Rank' → logprob: -15.876626968383789
    9. 'ank' → logprob: -16.50162696838379
    10. '(rank' → logprob: -16.62662696838379

Token 372: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -4.656383680412546e-05
    2. 'b' → logprob: -10.000046730041504
    3. ' b' → logprob: -14.750046730041504
    4. '[' → logprob: -15.000046730041504
    5. '[a' → logprob: -15.000046730041504
    6. '   ' → logprob: -16.750045776367188
    7. '	b' → logprob: -18.500045776367188
    8. ' [' → logprob: -19.250045776367188
    9. '       ' → logprob: -19.500045776367188
    10. '```' → logprob: -19.625045776367188

Token 373: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12420680373907089
    2. ':
' → logprob: -2.749206781387329
    3. ']:' → logprob: -3.124206781387329
    4. ']:
' → logprob: -4.999207019805908
    5. '):' → logprob: -6.874207019805908
    6. '):
' → logprob: -7.624207019805908
    7. '>:' → logprob: -8.87420654296875
    8. '}:' → logprob: -8.99920654296875
    9. '       ' → logprob: -9.37420654296875
    10. '<|end|>' → logprob: -9.49920654296875

Token 374: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008397548459470272
    2. ':
' → logprob: -5.133397579193115
    3. ':' → logprob: -6.258397579193115
    4. '       ' → logprob: -8.758397102355957
    5. ',' → logprob: -9.008397102355957
    6. ' self' → logprob: -10.133397102355957
    7. ' a' → logprob: -10.133397102355957
    8. '.' → logprob: -10.258397102355957
    9. '):
' → logprob: -10.508397102355957
    10. '<|end|>' → logprob: -10.633397102355957

Token 375: ' a' (ID: 261)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5811615586280823
    2. 'self' → logprob: -0.8311615586280823
    3. '           ' → logprob: -5.7061614990234375
    4. ' a' → logprob: -6.3311614990234375
    5. 'a' (adapté à ' a') → logprob: -9.456161499023438
    6. '       ' → logprob: -11.831161499023438
    7. '   ' → logprob: -12.581161499023438
    8. '[self' → logprob: -12.706161499023438
    9. '	self' → logprob: -12.831161499023438
    10. 's' → logprob: -13.206161499023438

Token 376: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00043400691356509924
    2. ' ,' → logprob: -8.000433921813965
    3. ',parent' → logprob: -9.875433921813965
    4. ',
' → logprob: -11.250433921813965
    5. ',self' → logprob: -11.375433921813965
    6. '[' → logprob: -12.750433921813965
    7. 'self' → logprob: -12.875433921813965
    8. ',a' → logprob: -13.000433921813965
    9. '=' → logprob: -13.250433921813965
    10. ' ' → logprob: -13.375433921813965

Token 377: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.12692831456661224
    2. 'b' → logprob: -2.1269283294677734
    3. '=b' → logprob: -15.751928329467773
    4. ',b' → logprob: -17.126928329467773
    5. '<|end|>' → logprob: -17.126928329467773
    6. '	b' → logprob: -17.626928329467773
    7. ' =' → logprob: -17.751928329467773
    8. '        ' → logprob: -18.126928329467773
    9. ' ' → logprob: -18.376928329467773
    10. '    ' → logprob: -18.501928329467773

Token 378: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12695373594760895
    2. '=' → logprob: -2.1269538402557373
    3. ',' → logprob: -11.626954078674316
    4. ' ' → logprob: -11.626954078674316
    5. ' =
' → logprob: -12.626954078674316
    6. '<|end|>' → logprob: -13.001954078674316
    7. '=b' → logprob: -14.501954078674316
    8. '=a' → logprob: -14.876954078674316
    9. ' =)' → logprob: -15.376954078674316
    10. '    ' → logprob: -15.626954078674316

Token 379: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3868711292743683
    2. ' b' → logprob: -1.136871099472046
    3. '	b' → logprob: -16.636871337890625
    4. '    ' → logprob: -18.011871337890625
    5. ')b' → logprob: -18.261871337890625
    6. ' ' → logprob: -18.886871337890625
    7. '   ' → logprob: -19.011871337890625
    8. '
' → logprob: -19.136871337890625
    9. '>b' → logprob: -19.136871337890625
    10. '<|end|>' → logprob: -19.386871337890625

Token 380: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 381: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5759445428848267
    2. 'a' → logprob: -0.8259445428848267
    3. '	a' → logprob: -12.325944900512695
    4. ' ' → logprob: -15.325944900512695
    5. '<|end|>' → logprob: -15.575944900512695
    6. '    ' → logprob: -17.325944900512695
    7. ' ' → logprob: -17.325944900512695
    8. ' 
' → logprob: -17.325944900512695
    9. '>a' → logprob: -17.950944900512695
    10. '  ' → logprob: -18.075944900512695

Token 382: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25359469652175903
    2. '       ' → logprob: -1.5035946369171143
    3. '        
' → logprob: -7.253594875335693
    4. ' 
' → logprob: -7.878594875335693
    5. '
' → logprob: -8.753594398498535
    6. 'self' → logprob: -9.003594398498535
    7. '  
' → logprob: -9.503594398498535
    8. '<|end|>' → logprob: -9.628594398498535
    9. '    
' → logprob: -10.128594398498535
    10. '\n' → logprob: -10.378594398498535

Token 383: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18299314379692078
    2. '       ' → logprob: -1.8079931735992432
    3. '        
' → logprob: -6.432992935180664
    4. ' 
' → logprob: -7.557992935180664
    5. '<|end|>' → logprob: -7.932992935180664
    6. 'self' → logprob: -8.307992935180664
    7. '  
' → logprob: -8.807992935180664
    8. '
' → logprob: -9.182992935180664
    9. ' self' → logprob: -9.557992935180664
    10. '\n' → logprob: -10.057992935180664

Token 384: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.7295414805412292
    2. ' self' → logprob: -0.9795414805412292
    3. '       ' → logprob: -1.979541540145874
    4. '
' → logprob: -5.479541301727295
    5. '[self' → logprob: -10.479541778564453
    6. '```' → logprob: -11.354541778564453
    7. '   ' → logprob: -11.729541778564453
    8. '	self' → logprob: -11.729541778564453
    9. '(self' → logprob: -12.229541778564453
    10. ' ' → logprob: -12.604541778564453

Token 385: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -5.3596853831550106e-05
    2. 'parent' → logprob: -10.125053405761719
    3. '.rank' → logprob: -11.250053405761719
    4. '.' → logprob: -15.500053405761719
    5. '[parent' → logprob: -16.87505340576172
    6. ' .' → logprob: -17.12505340576172
    7. '	parent' → logprob: -17.87505340576172
    8. '_parent' → logprob: -18.00005340576172
    9. ').' → logprob: -18.00005340576172
    10. '.Parent' → logprob: -18.25005340576172

Token 386: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -15.000000953674316
    3. '[a' → logprob: -15.375000953674316
    4. 'b' → logprob: -16.875
    5. ' [' → logprob: -17.875
    6. '```' → logprob: -19.75
    7. '	b' → logprob: -20.375
    8. '[s' → logprob: -20.625
    9. '[self' → logprob: -20.75
    10. ' b' → logprob: -20.875

Token 387: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.15080492198467255
    2. ' =' → logprob: -2.1508049964904785
    3. '=' → logprob: -3.9008049964904785
    4. ' ]' → logprob: -5.9008049964904785
    5. ']=' → logprob: -7.4008049964904785
    6. ' ' → logprob: -11.02580451965332
    7. ')' → logprob: -12.77580451965332
    8. '[' → logprob: -14.15080451965332
    9. '=a' → logprob: -15.90080451965332
    10. ' ' → logprob: -16.27580451965332

Token 388: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759397745132446
    2. '=' → logprob: -0.8259397745132446
    3. '=a' → logprob: -14.825940132141113
    4. ' ' → logprob: -17.825939178466797
    5. '=s' → logprob: -18.825939178466797
    6. ' =
' → logprob: -19.700939178466797
    7. '＝' → logprob: -19.950939178466797
    8. '=b' → logprob: -20.200939178466797
    9. ')' → logprob: -20.325939178466797
    10. '[' → logprob: -20.950939178466797

Token 389: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.029750484973192215
    2. ' a' → logprob: -3.5297505855560303
    3. '	a' → logprob: -17.40475082397461
    4. '[a' → logprob: -21.77975082397461
    5. ''a' → logprob: -22.27975082397461
    6. '>a' → logprob: -22.40475082397461
    7. ')a' → logprob: -22.77975082397461
    8. '_a' → logprob: -23.27975082397461
    9. '#a' → logprob: -23.27975082397461
    10. ' а' → logprob: -23.77975082397461

Token 390: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.196732960641384e-05
    2. 'if' → logprob: -10.250082015991211
    3. ' if' → logprob: -10.500082015991211
    4. '<|end|>' → logprob: -11.500082015991211
    5. '
' → logprob: -12.875082015991211
    6. '        
' → logprob: -13.625082015991211
    7. ';if' → logprob: -13.750082015991211
    8. ',' → logprob: -14.125082015991211
    9. ' ' → logprob: -14.375082015991211
    10. '	' → logprob: -14.500082015991211

Token 391: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015022408915683627
    2. '<|end|>' → logprob: -7.37650203704834
    3. '
' → logprob: -7.50150203704834
    4. '        
' → logprob: -8.50150203704834
    5. '   ' → logprob: -10.75150203704834
    6. 'if' → logprob: -10.87650203704834
    7. '  
' → logprob: -11.12650203704834
    8. ' if' → logprob: -11.25150203704834
    9. ' 
' → logprob: -11.37650203704834
    10. '```' → logprob: -11.50150203704834

Token 392: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.010530341416597366
    2. ' if' → logprob: -4.760530471801758
    3. '       ' → logprob: -6.260530471801758
    4. '	if' → logprob: -13.385530471801758
    5. 'If' → logprob: -13.510530471801758
    6. ';if' → logprob: -14.635530471801758
    7. '
' → logprob: -15.260530471801758
    8. '        
' → logprob: -17.010530471801758
    9. '   ' → logprob: -17.135530471801758
    10. '```' → logprob: -17.385530471801758

Token 393: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.25192990899086
    2. ' self' → logprob: -1.5019298791885376
    3. '	self' → logprob: -15.126930236816406
    4. '(self' → logprob: -15.376930236816406
    5. '
' → logprob: -16.501930236816406
    6. '[self' → logprob: -16.751930236816406
    7. '   ' → logprob: -16.876930236816406
    8. 's' → logprob: -17.126930236816406
    9. ' ' → logprob: -17.751930236816406
    10. 'Self' → logprob: -18.126930236816406

Token 394: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -3.2855416066013277e-05
    2. 'rank' → logprob: -10.625032424926758
    3. '_rank' → logprob: -12.125032424926758
    4. '.parent' → logprob: -13.750032424926758
    5. ' .' → logprob: -14.875032424926758
    6. ' rank' → logprob: -15.000032424926758
    7. 'ank' → logprob: -15.250032424926758
    8. 's' → logprob: -15.375032424926758
    9. 'Rank' → logprob: -15.750032424926758
    10. 'self' → logprob: -16.125032424926758

Token 395: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -5.512236498361744e-07
    2. 'a' → logprob: -14.750000953674316
    3. '[' → logprob: -18.5
    4. '[u' → logprob: -18.625
    5. '[s' → logprob: -19.125
    6. '[self' → logprob: -19.375
    7. '[
' → logprob: -20.0
    8. ' a' → logprob: -20.875
    9. '```' → logprob: -21.0
    10. 's' → logprob: -21.25

Token 396: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.01016577985137701
    2. ' ==' → logprob: -4.635165691375732
    3. ']==' → logprob: -8.26016616821289
    4. '=' → logprob: -9.01016616821289
    5. '==
' → logprob: -11.38516616821289
    6. ']' → logprob: -12.01016616821289
    7. ')==' → logprob: -12.13516616821289
    8. '===' → logprob: -12.38516616821289
    9. ')' → logprob: -14.38516616821289
    10. '()==' → logprob: -14.63516616821289

Token 397: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.011485607363283634
    2. ' ==' → logprob: -4.511485576629639
    3. '=' → logprob: -7.761485576629639
    4. ']==' → logprob: -11.761486053466797
    5. '==
' → logprob: -12.886486053466797
    6. '===' → logprob: -14.511486053466797
    7. '[' → logprob: -14.511486053466797
    8. ' =' → logprob: -15.261486053466797
    9. '()==' → logprob: -16.261486053466797
    10. ')==' → logprob: -16.386486053466797

Token 398: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008616935461759567
    2. ' self' → logprob: -4.758616924285889
    3. '[self' → logprob: -13.633617401123047
    4. '
' → logprob: -14.508617401123047
    5. '(self' → logprob: -15.383617401123047
    6. '	self' → logprob: -15.508617401123047
    7. '   ' → logprob: -15.758617401123047
    8. ' ' → logprob: -16.508617401123047
    9. '=self' → logprob: -17.758617401123047
    10. '  ' → logprob: -18.383617401123047

Token 399: '.rank' (ID: 96793)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.36032265424728394
    2. '_rank' → logprob: -1.8603227138519287
    3. '[b' → logprob: -2.8603227138519287
    4. 'b' → logprob: -3.1103227138519287
    5. ' rank' → logprob: -3.6103227138519287
    6. '.rank' → logprob: -4.73532247543335
    7. 'self' → logprob: -5.73532247543335
    8. 'Rank' → logprob: -5.73532247543335
    9. '[a' → logprob: -6.86032247543335
    10. '[self' → logprob: -7.48532247543335

Token 400: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -1.688212614681106e-05
    2. 'b' → logprob: -11.000017166137695
    3. '[a' → logprob: -16.875017166137695
    4. '	b' → logprob: -17.125017166137695
    5. '[' → logprob: -17.250017166137695
    6. ' b' → logprob: -18.500017166137695
    7. '[
' → logprob: -20.000017166137695
    8. '(b' → logprob: -20.000017166137695
    9. '   ' → logprob: -21.250017166137695
    10. '_b' → logprob: -21.500017166137695

Token 401: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47416114807128906
    2. ':
' → logprob: -0.9741611480712891
    3. ' :' → logprob: -10.599161148071289
    4. '):
' → logprob: -10.599161148071289
    5. ' :
' → logprob: -10.599161148071289
    6. ']:
' → logprob: -12.474161148071289
    7. ']:' → logprob: -13.224161148071289
    8. ':

' → logprob: -13.599161148071289
    9. '):' → logprob: -13.849161148071289
    10. ':
' → logprob: -14.724161148071289

Token 402: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004064509645104408
    2. ':' → logprob: -5.879064559936523
    3. ':
' → logprob: -7.254064559936523
    4. '   ' → logprob: -8.504064559936523
    5. '       ' → logprob: -8.754064559936523
    6. '               ' → logprob: -9.754064559936523
    7. ',' → logprob: -10.129064559936523
    8. '          ' → logprob: -11.254064559936523
    9. '[' → logprob: -11.629064559936523
    10. '```' → logprob: -12.004064559936523

Token 403: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3134186267852783
    2. 'self' (adapté à ' self') → logprob: -1.3134186267852783
    3. '           ' → logprob: -8.8134183883667
    4. '               ' → logprob: -12.3134183883667
    5. '   ' → logprob: -13.8134183883667
    6. 's' → logprob: -13.9384183883667
    7. '       ' → logprob: -14.4384183883667
    8. '[self' → logprob: -14.9384183883667
    9. '	self' → logprob: -15.0634183883667
    10. '
' → logprob: -15.1884183883667

Token 404: '.rank' (ID: 96793)
  Prédit: '.rank'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rank' → logprob: -0.011019405908882618
    2. '_rank' → logprob: -4.761019229888916
    3. 'rank' → logprob: -6.386019229888916
    4. ' rank' → logprob: -7.886019229888916
    5. '[a' → logprob: -8.886019706726074
    6. 'ank' → logprob: -9.386019706726074
    7. '[self' → logprob: -10.136019706726074
    8. 'Rank' → logprob: -10.386019706726074
    9. '[' → logprob: -10.386019706726074
    10. ' Rank' → logprob: -12.136019706726074

Token 405: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.9361264946837764e-07
    2. 'a' → logprob: -17.125
    3. '[u' → logprob: -17.875
    4. '[' → logprob: -18.125
    5. '[i' → logprob: -19.5
    6. '[self' → logprob: -19.875
    7. '[
' → logprob: -19.875
    8. ' [' → logprob: -20.625
    9. '[s' → logprob: -20.75
    10. '   ' → logprob: -21.0

Token 406: ']' (ID: 60)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6969648599624634
    2. '+=' → logprob: -0.6969648599624634
    3. ']+=' → logprob: -5.571964740753174
    4. ']' → logprob: -12.071965217590332
    5. '+' → logprob: -13.821965217590332
    6. '+='' → logprob: -15.821965217590332
    7. '=' → logprob: -16.071964263916016
    8. '+="' → logprob: -16.321964263916016
    9. ')' → logprob: -16.321964263916016
    10. '<|end|>' → logprob: -16.696964263916016

Token 407: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.023310115560889244
    2. ' +=' → logprob: -3.7733101844787598
    3. ']+=' → logprob: -9.648309707641602
    4. '+' → logprob: -18.3983097076416
    5. '+='' → logprob: -18.5233097076416
    6. '[' → logprob: -18.8983097076416
    7. '+="' → logprob: -19.1483097076416
    8. '   ' → logprob: -19.5233097076416
    9. '=' → logprob: -20.0233097076416
    10. '+=(' → logprob: -20.3983097076416

Token 408: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005233763717114925
    2. ' ' → logprob: -5.2552337646484375
    3. '   ' → logprob: -19.005233764648438
    4. ' ' → logprob: -20.380233764648438
    5. '```' → logprob: -20.630233764648438
    6. '  ' → logprob: -21.005233764648438
    7. '<|end|>' → logprob: -21.255233764648438
    8. '0' → logprob: -22.505233764648438
    9. '
' → logprob: -23.192733764648438
    10. '[' → logprob: -23.692733764648438

Token 409: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -21.25
    4. '
' → logprob: -21.75
    5. '```' → logprob: -21.75
    6. '  ' → logprob: -23.0
    7. '3' → logprob: -23.875
    8. '<|end|>' → logprob: -23.875
    9. 'a' → logprob: -23.9375
    10. '１' → logprob: -24.0

Token 410: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 411: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002112074289470911
    2. 'return' → logprob: -6.377111911773682
    3. ' return' → logprob: -7.877111911773682
    4. '   ' → logprob: -10.75211238861084
    5. '
' → logprob: -12.37711238861084
    6. '	return' → logprob: -14.00211238861084
    7. '<|end|>' → logprob: -14.00211238861084
    8. '           ' → logprob: -14.25211238861084
    9. ':return' → logprob: -14.87711238861084
    10. '	' → logprob: -14.87711238861084

Token 412: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 413: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.575939416885376
    2. ' True' → logprob: -0.825939416885376
    3. '(True' → logprob: -19.575939178466797
    4. ' ' → logprob: -20.200939178466797
    5. '=True' → logprob: -20.325939178466797
    6. ' Tru' → logprob: -21.450939178466797
    7. ' ' → logprob: -21.700939178466797
    8. '_true' → logprob: -22.825939178466797
    9. '.True' → logprob: -23.450939178466797
    10. 'Tr' → logprob: -24.200939178466797

Token 414: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 415: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2519737482070923
    2. 'class' → logprob: -1.5019737482070923
    3. '
' → logprob: -10.501974105834961
    4. '```' → logprob: -11.876974105834961
    5. 'from' → logprob: -12.376974105834961
    6. ' class' → logprob: -13.251974105834961
    7. '

' → logprob: -13.251974105834961
    8. 'import' → logprob: -14.001974105834961
    9. 'ndef' → logprob: -14.501974105834961
    10. ' def' → logprob: -14.626974105834961

Token 416: ' Village' (ID: 27912)
  Prédit: 'Graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Graph' → logprob: -0.09321734309196472
    2. ' Graph' → logprob: -2.968217372894287
    3. 'Polygon' → logprob: -4.593217372894287
    4. 'Path' → logprob: -5.218217372894287
    5. 'Solution' → logprob: -5.343217372894287
    6. 'M' → logprob: -5.468217372894287
    7. 'Mesh' → logprob: -6.218217372894287
    8. ' MST' → logprob: -6.468217372894287
    9. ' Polygon' → logprob: -6.718217372894287
    10. 'Minimal' → logprob: -6.968217372894287

Token 417: 'Graph' (ID: 9922)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12009254842996597
    2. 'Graph' → logprob: -2.6200926303863525
    3. ':
' → logprob: -3.2450926303863525
    4. 'Network' → logprob: -7.245092391967773
    5. 'Planner' → logprob: -8.870092391967773
    6. 'Manager' → logprob: -8.995092391967773
    7. 'Builder' → logprob: -9.370092391967773
    8. 'Cluster' → logprob: -9.995092391967773
    9. '(Graph' → logprob: -10.245092391967773
    10. '():' → logprob: -10.245092391967773

Token 418: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001410850090906024
    2. ':
' → logprob: -9.000141143798828
    3. '<|end|>' → logprob: -12.375141143798828
    4. '():' → logprob: -13.000141143798828
    5. '(' → logprob: -13.125141143798828
    6. ':def' → logprob: -13.125141143798828
    7. ' :' → logprob: -13.500141143798828
    8. '):' → logprob: -13.500141143798828
    9. '(object' → logprob: -13.625141143798828
    10. '```' → logprob: -14.625141143798828

Token 419: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.925185440806672e-05
    2. ' def' → logprob: -9.875099182128906
    3. 'def' → logprob: -10.125099182128906
    4. ':' → logprob: -12.875099182128906
    5. '    
' → logprob: -13.125099182128906
    6. '
' → logprob: -13.375099182128906
    7. ':
' → logprob: -14.375099182128906
    8. '	def' → logprob: -14.875099182128906
    9. '   ' → logprob: -16.375099182128906
    10. '```' → logprob: -16.625099182128906

Token 420: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5762146711349487
    2. 'def' (adapté à ' def') → logprob: -0.8262146711349487
    3. '   ' → logprob: -8.201214790344238
    4. '	def' → logprob: -14.451214790344238
    5. ':def' → logprob: -15.701214790344238
    6. 'class' → logprob: -16.326213836669922
    7. ' ' → logprob: -17.451213836669922
    8. ':' → logprob: -17.576213836669922
    9. '```' → logprob: -18.451213836669922
    10. '  ' → logprob: -18.576213836669922

Token 421: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.5395220518112183
    2. '__' → logprob: -1.4145220518112183
    3. ' def' → logprob: -2.289522171020508
    4. 'List' → logprob: -3.789522171020508
    5. '```' → logprob: -4.289522171020508
    6. 'def' → logprob: -4.664522171020508
    7. 'init' → logprob: -5.164522171020508
    8. ' ' → logprob: -5.414522171020508
    9. '   ' → logprob: -5.789522171020508
    10. 'object' → logprob: -5.914522171020508

Token 422: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. '_init' → logprob: -17.25
    3. 'def' → logprob: -17.5
    4. '```' → logprob: -18.875
    5. ' init' → logprob: -19.75
    6. 'int' → logprob: -20.125
    7. 'inite' → logprob: -21.625
    8. '	init' → logprob: -22.25
    9. '(init' → logprob: -22.25
    10. '__' → logprob: -22.375

Token 423: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -7.600714161526412e-05
    2. '(self' → logprob: -10.250076293945312
    3. '__' → logprob: -10.875076293945312
    4. '__(
' → logprob: -11.000076293945312
    5. '_(' → logprob: -12.875076293945312
    6. '(' → logprob: -13.375076293945312
    7. 'self' → logprob: -14.375076293945312
    8. ' (' → logprob: -16.125076293945312
    9. '__((' → logprob: -16.750076293945312
    10. '__('' → logprob: -17.125076293945312

Token 424: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.339776832144707e-05
    2. ' self' → logprob: -9.750082969665527
    3. '
' → logprob: -11.250082969665527
    4. ',' → logprob: -12.000082969665527
    5. '   ' → logprob: -12.875082969665527
    6. '       ' → logprob: -13.250082969665527
    7. ')' → logprob: -14.375082969665527
    8. '0' → logprob: -15.000082969665527
    9. '(self' → logprob: -15.625082969665527
    10. '):
' → logprob: -16.000083923339844

Token 425: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16198179125785828
    2. 'self' → logprob: -1.9119818210601807
    3. ' self' → logprob: -6.661981582641602
    4. ' ,' → logprob: -8.286981582641602
    5. '(self' → logprob: -9.286981582641602
    6. '__,' → logprob: -9.661981582641602
    7. '   ' → logprob: -10.411981582641602
    8. '__' → logprob: -11.161981582641602
    9. '__(' → logprob: -11.911981582641602
    10. ',self' → logprob: -12.536981582641602

Token 426: ' points' (ID: 5571)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.49449265003204346
    2. 'n' → logprob: -1.1194926500320435
    3. 'num' → logprob: -3.119492530822754
    4. ' n' → logprob: -4.619492530822754
    5. ' self' → logprob: -5.369492530822754
    6. 'points' → logprob: -5.869492530822754
    7. '   ' → logprob: -6.744492530822754
    8. '       ' → logprob: -8.119492530822754
    9. ' num' → logprob: -8.119492530822754
    10. ' points' → logprob: -8.994492530822754

Token 427: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.696889623621246e-06
    2. '_:' → logprob: -13.37500286102295
    3. ' :' → logprob: -14.12500286102295
    4. '':' → logprob: -15.62500286102295
    5. '```' → logprob: -16.500001907348633
    6. '):' → logprob: -17.125001907348633
    7. '   ' → logprob: -17.375001907348633
    8. '=' → logprob: -17.500001907348633
    9. ',' → logprob: -17.625001907348633
    10. '__:' → logprob: -17.625001907348633

Token 428: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.000915039679966867
    2. ' List' → logprob: -7.000915050506592
    3. '[List' → logprob: -13.000914573669434
    4. 'Dict' → logprob: -13.625914573669434
    5. ')' → logprob: -17.00091552734375
    6. '	List' → logprob: -17.12591552734375
    7. '   ' → logprob: -17.25091552734375
    8. ' ' → logprob: -18.62591552734375
    9. ',List' → logprob: -19.62591552734375
    10. '```' → logprob: -19.62591552734375

Token 429: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.130576806142926e-05
    2. 'Point' → logprob: -10.625031471252441
    3. '[int' → logprob: -12.500031471252441
    4. '[
' → logprob: -13.875031471252441
    5. '<Point' → logprob: -14.000031471252441
    6. '[List' → logprob: -14.250031471252441
    7. '   ' → logprob: -15.750031471252441
    8. '(Point' → logprob: -16.000030517578125
    9. '	Point' → logprob: -16.125030517578125
    10. ' [' → logprob: -16.625030517578125

Token 430: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -1.2233183042553719e-05
    2. 'Tuple' → logprob: -11.750012397766113
    3. '	Point' → logprob: -13.250012397766113
    4. ' Point' → logprob: -13.500012397766113
    5. '[' → logprob: -14.875012397766113
    6. 'int' → logprob: -15.500012397766113
    7. 'List' → logprob: -15.500012397766113
    8. 'Optional' → logprob: -16.375011444091797
    9. '<Point' → logprob: -16.375011444091797
    10. 'Edge' → logprob: -16.875011444091797

Token 431: '],' (ID: 2155)
  Prédit: ']):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):
' → logprob: -0.2195816934108734
    2. ']):' → logprob: -1.9695817232131958
    3. '],' → logprob: -2.9695816040039062
    4. ']' → logprob: -5.594581604003906
    5. '])' → logprob: -6.094581604003906
    6. ',' → logprob: -8.344581604003906
    7. '']):
' → logprob: -10.594581604003906
    8. ')' → logprob: -10.844581604003906
    9. '):
' → logprob: -11.219581604003906
    10. '),' → logprob: -11.719581604003906

Token 432: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.6962182521820068
    2. 'edges' → logprob: -0.6962182521820068
    3. 'adj' → logprob: -7.071218490600586
    4. ' adjacency' → logprob: -7.196218490600586
    5. '   ' → logprob: -7.696218490600586
    6. ')' → logprob: -8.821218490600586
    7. '       ' → logprob: -9.196218490600586
    8. ' adj' → logprob: -9.196218490600586
    9. ' roads' → logprob: -9.571218490600586
    10. 'edge' → logprob: -9.946218490600586

Token 433: '_indices' (ID: 43508)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -2.3676733690081164e-05
    2. ']:' → logprob: -11.00002384185791
    3. '       ' → logprob: -13.62502384185791
    4. '   ' → logprob: -13.75002384185791
    5. '=' → logprob: -14.25002384185791
    6. ' :' → logprob: -14.25002384185791
    7. '):' → logprob: -14.37502384185791
    8. ']' → logprob: -14.50002384185791
    9. '_:' → logprob: -14.62502384185791
    10. ':]' → logprob: -14.75002384185791

Token 434: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00041863700607791543
    2. '):' → logprob: -8.000418663024902
    3. ']:' → logprob: -9.500418663024902
    4. ')' → logprob: -13.125418663024902
    5. '_:' → logprob: -13.500418663024902
    6. ']' → logprob: -13.750418663024902
    7. ' :' → logprob: -13.875418663024902
    8. ' ):' → logprob: -14.000418663024902
    9. '}:' → logprob: -15.000418663024902
    10. '):
' → logprob: -15.000418663024902

Token 435: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.03010878711938858
    2. ' List' → logprob: -3.530108690261841
    3. 'Optional' → logprob: -8.155108451843262
    4. '[List' → logprob: -10.405108451843262
    5. '   ' → logprob: -11.030108451843262
    6. ' Optional' → logprob: -11.155108451843262
    7. '	List' → logprob: -12.655108451843262
    8. ' ' → logprob: -13.155108451843262
    9. 'Tuple' → logprob: -13.405108451843262
    10. 'Set' → logprob: -13.655108451843262

Token 436: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.173704271830502e-06
    2. '[int' → logprob: -13.25000286102295
    3. '[List' → logprob: -13.62500286102295
    4. '[
' → logprob: -16.375003814697266
    5. '   ' → logprob: -17.375003814697266
    6. '[Index' → logprob: -18.875003814697266
    7. '```' → logprob: -19.250003814697266
    8. ':' → logprob: -19.625003814697266
    9. ' ' → logprob: -19.625003814697266
    10. '<Tuple' → logprob: -20.000003814697266

Token 437: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -2.7610454708337784e-05
    2. ' Tuple' → logprob: -10.875027656555176
    3. '[' → logprob: -12.250027656555176
    4. 'Edge' → logprob: -12.750027656555176
    5. 'List' → logprob: -14.500027656555176
    6. '   ' → logprob: -15.125027656555176
    7. ' ' → logprob: -16.87502670288086
    8. '
' → logprob: -17.50002670288086
    9. 'Set' → logprob: -17.50002670288086
    10. ']' → logprob: -18.00002670288086

Token 438: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.07889088988304138
    2. 'int' → logprob: -2.578890800476074
    3. ']int' → logprob: -14.828890800476074
    4. '<int' → logprob: -15.078890800476074
    5. ' int' → logprob: -15.453890800476074
    6. ',int' → logprob: -16.32889175415039
    7. '   ' → logprob: -16.82889175415039
    8. '(int' → logprob: -17.20389175415039
    9. '[
' → logprob: -18.07889175415039
    10. '	int' → logprob: -18.20389175415039

Token 439: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002268731826916337
    2. ',int' → logprob: -6.1272687911987305
    3. ' ,' → logprob: -9.62726879119873
    4. 'int' → logprob: -11.87726879119873
    5. ',
' → logprob: -12.25226879119873
    6. '[int' → logprob: -13.75226879119873
    7. '<|end|>' → logprob: -13.87726879119873
    8. ']],' → logprob: -14.12726879119873
    9. ',Integer' → logprob: -14.62726879119873
    10. ',List' → logprob: -14.62726879119873

Token 440: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.5716304410016164e-05
    2. ' int' → logprob: -10.750035285949707
    3. '[int' → logprob: -11.875035285949707
    4. '<int' → logprob: -13.000035285949707
    5. '...' → logprob: -13.375035285949707
    6. '	int' → logprob: -13.875035285949707
    7. ']int' → logprob: -14.250035285949707
    8. '   ' → logprob: -14.625035285949707
    9. '(int' → logprob: -14.875035285949707
    10. '```' → logprob: -15.625035285949707

Token 441: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.2574623227119446
    2. ']])' → logprob: -1.6324622631072998
    3. ']' → logprob: -3.7574622631073
    4. ']],' → logprob: -5.257462501525879
    5. ',' → logprob: -7.007462501525879
    6. ']):' → logprob: -7.007462501525879
    7. '])' → logprob: -8.382462501525879
    8. ' ]' → logprob: -8.507462501525879
    9. ')' → logprob: -8.882462501525879
    10. ']]:
' → logprob: -8.882462501525879

Token 442: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1150691956281662
    2. '):
' → logprob: -2.3650691509246826
    3. ',' → logprob: -4.240069389343262
    4. ')' → logprob: -8.115069389343262
    5. '):
' → logprob: -10.740069389343262
    6. ':' → logprob: -11.740069389343262
    7. ' ):' → logprob: -12.240069389343262
    8. '   ' → logprob: -12.615069389343262
    9. '):

' → logprob: -12.740069389343262
    10. '       ' → logprob: -13.865069389343262

Token 443: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007208671886473894
    2. ':' → logprob: -5.007208824157715
    3. ',' → logprob: -8.382208824157715
    4. '   ' → logprob: -9.007208824157715
    5. ':
' → logprob: -10.007208824157715
    6. '):
' → logprob: -10.632208824157715
    7. '):' → logprob: -11.132208824157715
    8. '        
' → logprob: -11.132208824157715
    9. '```' → logprob: -11.382208824157715
    10. '<|end|>' → logprob: -11.382208824157715

Token 444: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.49795520305633545
    2. ' self' → logprob: -0.9979552030563354
    3. '       ' → logprob: -3.747955322265625
    4. '   ' → logprob: -11.747955322265625
    5. 'import' → logprob: -12.497955322265625
    6. 'points' → logprob: -12.497955322265625
    7. 'n' → logprob: -12.622955322265625
    8. ' ' → logprob: -12.872955322265625
    9. ' points' → logprob: -13.247955322265625
    10. '	self' → logprob: -13.497955322265625

Token 445: '.points' (ID: 66693)
  Prédit: '.points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.points' → logprob: -0.00022606621496379375
    2. '.' → logprob: -8.875226020812988
    3. ' .' → logprob: -9.875226020812988
    4. ' points' → logprob: -11.375226020812988
    5. 'points' → logprob: -11.500226020812988
    6. '	points' → logprob: -12.750226020812988
    7. '.Point' → logprob: -13.125226020812988
    8. '.point' → logprob: -13.250226020812988
    9. '.n' → logprob: -13.250226020812988
    10. 'Points' → logprob: -14.000226020812988

Token 446: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975129522383213
    2. '=' → logprob: -3.5297513008117676
    3. '   ' → logprob: -15.02975082397461
    4. ' ' → logprob: -15.40475082397461
    5. ':' → logprob: -15.77975082397461
    6. ',' → logprob: -16.27975082397461
    7. ' =
' → logprob: -17.40475082397461
    8. '    ' → logprob: -17.77975082397461
    9. '=self' → logprob: -17.90475082397461
    10. ' =[' → logprob: -18.52975082397461

Token 447: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.06196914613246918
    2. ' points' → logprob: -2.811969041824341
    3. '	points' → logprob: -14.811968803405762
    4. 'point' → logprob: -15.061968803405762
    5. '[' → logprob: -15.186968803405762
    6. '(points' → logprob: -15.561968803405762
    7. ' [' → logprob: -16.061969757080078
    8. '       ' → logprob: -16.436969757080078
    9. 'Points' → logprob: -16.936969757080078
    10. '.points' → logprob: -17.061969757080078

Token 448: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04971274733543396
    2. '
' → logprob: -3.049712657928467
    3. 'self' → logprob: -7.424712657928467
    4. ',' → logprob: -7.799712657928467
    5. ' self' → logprob: -10.174713134765625
    6. ',
' → logprob: -10.299713134765625
    7. '<|end|>' → logprob: -11.174713134765625
    8. '   ' → logprob: -11.924713134765625
    9. '        
' → logprob: -11.924713134765625
    10. '  
' → logprob: -12.924713134765625

Token 449: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011130700586363673
    2. ',' → logprob: -7.376112937927246
    3. 'self' → logprob: -8.251112937927246
    4. '
' → logprob: -9.251112937927246
    5. '<|end|>' → logprob: -10.001112937927246
    6. ' self' → logprob: -10.251112937927246
    7. ',
' → logprob: -11.251112937927246
    8. '        
' → logprob: -11.751112937927246
    9. '[' → logprob: -12.251112937927246
    10. '   ' → logprob: -12.501112937927246

Token 450: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.02519971691071987
    2. ' self' → logprob: -3.9001996517181396
    3. '       ' → logprob: -5.400199890136719
    4. 'edges' → logprob: -9.150199890136719
    5. ' edges' → logprob: -11.025199890136719
    6. 'n' → logprob: -12.775199890136719
    7. '   ' → logprob: -13.650199890136719
    8. 'from' → logprob: -13.775199890136719
    9. '
' → logprob: -14.275199890136719
    10. 'import' → logprob: -14.775199890136719

Token 451: '.N' (ID: 4439)
  Prédit: '.edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.edges' → logprob: -0.03882017731666565
    2. '.' → logprob: -3.413820266723633
    3. 'edges' → logprob: -6.163820266723633
    4. '.points' → logprob: -6.538820266723633
    5. '_edges' → logprob: -7.788820266723633
    6. '.edge' → logprob: -8.163820266723633
    7. ' .' → logprob: -8.413820266723633
    8. '.graph' → logprob: -8.788820266723633
    9. ' edges' → logprob: -9.038820266723633
    10. '._' → logprob: -9.788820266723633

Token 452: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03366091102361679
    2. '=' → logprob: -3.408660888671875
    3. '=len' → logprob: -12.158660888671875
    4. ' =
' → logprob: -12.908660888671875
    5. ' ' → logprob: -13.033660888671875
    6. '<|end|>' → logprob: -13.033660888671875
    7. ',' → logprob: -13.783660888671875
    8. '=int' → logprob: -14.158660888671875
    9. ')' → logprob: -15.033660888671875
    10. '<|end|>' → logprob: -15.158660888671875

Token 453: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.10020937025547028
    2. 'len' → logprob: -2.3502094745635986
    3. '(len' → logprob: -12.97520923614502
    4. '[len' → logprob: -15.35020923614502
    5. '=len' → logprob: -16.100210189819336
    6. '	len' → logprob: -16.225210189819336
    7. '<len' → logprob: -18.975210189819336
    8. ' ' → logprob: -19.600210189819336
    9. ',len' → logprob: -19.975210189819336
    10. '<|end|>' → logprob: -21.475210189819336

Token 454: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.00010080150241265073
    2. '(self' → logprob: -9.500101089477539
    3. '(' → logprob: -11.000101089477539
    4. '(edges' → logprob: -11.750101089477539
    5. 'points' → logprob: -14.250101089477539
    6. ' points' → logprob: -14.875101089477539
    7. '(point' → logprob: -16.12510108947754
    8. '(p' → logprob: -16.25010108947754
    9. '(
' → logprob: -16.37510108947754
    10. ' (' → logprob: -17.50010108947754

Token 455: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012550032697618008
    2. ')
' → logprob: -4.387549877166748
    3. '       ' → logprob: -10.387550354003906
    4. ' )' → logprob: -11.887550354003906
    5. '<|end|>' → logprob: -13.887550354003906
    6. ')
' → logprob: -14.387550354003906
    7. ')

' → logprob: -15.012550354003906
    8. ' )
' → logprob: -15.012550354003906
    9. '   ' → logprob: -15.512550354003906
    10. '),' → logprob: -16.262550354003906

Token 456: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001129021286033094
    2. 'self' → logprob: -6.876129150390625
    3. '
' → logprob: -10.001129150390625
    4. ' self' → logprob: -10.626129150390625
    5. '   ' → logprob: -11.126129150390625
    6. ',' → logprob: -11.751129150390625
    7. '        
' → logprob: -13.751129150390625
    8. 'import' → logprob: -14.876129150390625
    9. ' ' → logprob: -15.126129150390625
    10. '           ' → logprob: -15.251129150390625

Token 457: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.01747659593820572
    2. '       ' → logprob: -4.267476558685303
    3. ' self' → logprob: -5.767476558685303
    4. 'edges' → logprob: -8.767477035522461
    5. 'import' → logprob: -11.892477035522461
    6. 'from' → logprob: -12.142477035522461
    7. ' edges' → logprob: -12.767477035522461
    8. '#' → logprob: -13.017477035522461
    9. '
' → logprob: -13.017477035522461
    10. '   ' → logprob: -13.767477035522461

Token 458: '.original' (ID: 65193)
  Prédit: '.edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.edges' → logprob: -0.0016077011823654175
    2. '.' → logprob: -7.251607894897461
    3. '.edge' → logprob: -7.876607894897461
    4. 'edges' → logprob: -8.501607894897461
    5. '.points' → logprob: -9.251607894897461
    6. '.graph' → logprob: -9.376607894897461
    7. '.ad' → logprob: -10.001607894897461
    8. ' .' → logprob: -10.876607894897461
    9. '.ed' → logprob: -11.501607894897461
    10. '_edges' → logprob: -11.626607894897461

Token 459: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.0017551452619954944
    2. '_points' → logprob: -6.626755237579346
    3. '_graph' → logprob: -8.626754760742188
    4. 'edges' → logprob: -8.751754760742188
    5. '_positions' → logprob: -11.251754760742188
    6. 'Edges' → logprob: -11.251754760742188
    7. '_edge' → logprob: -11.251754760742188
    8. '_dist' → logprob: -11.251754760742188
    9. '_nodes' → logprob: -12.251754760742188
    10. ' edges' → logprob: -12.251754760742188

Token 460: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06912687420845032
    2. '=' → logprob: -2.819126844406128
    3. ':' → logprob: -4.944127082824707
    4. '=[]' → logprob: -12.319127082824707
    5. ' :' → logprob: -12.819127082824707
    6. ' ' → logprob: -13.819127082824707
    7. '=[]
' → logprob: -16.44412612915039
    8. ' =[' → logprob: -17.06912612915039
    9. '=set' → logprob: -17.56912612915039
    10. '[' → logprob: -17.81912612915039

Token 461: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.47494304180145264
    2. ' List' → logprob: -0.9749430418014526
    3. '[List' → logprob: -7.099943161010742
    4. 'Set' → logprob: -10.599943161010742
    5. ' Set' → logprob: -12.349943161010742
    6. '	List' → logprob: -12.599943161010742
    7. '[' → logprob: -12.974943161010742
    8. '   ' → logprob: -13.224943161010742
    9. 'Dict' → logprob: -13.224943161010742
    10. ' ' → logprob: -14.224943161010742

Token 462: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.961759259458631e-06
    2. ' =' → logprob: -13.125004768371582
    3. '[List' → logprob: -13.625004768371582
    4. '[
' → logprob: -14.625004768371582
    5. '[int' → logprob: -14.625004768371582
    6. '<Edge' → logprob: -15.500004768371582
    7. '=' → logprob: -15.750004768371582
    8. '[Index' → logprob: -16.0000057220459
    9. ']' → logprob: -17.2500057220459
    10. 'Edge' → logprob: -17.3750057220459

Token 463: 'Edge' (ID: 16577)
  Prédit: 'Edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -2.6895233531831764e-05
    2. ' Edge' → logprob: -11.12502670288086
    3. 'Optional' → logprob: -12.00002670288086
    4. '[' → logprob: -12.25002670288086
    5. 'Point' → logprob: -14.75002670288086
    6. '<Edge' → logprob: -15.00002670288086
    7. 'int' → logprob: -16.00002670288086
    8. 'Tuple' → logprob: -16.50002670288086
    9. '[int' → logprob: -17.00002670288086
    10. 'Edges' → logprob: -17.00002670288086

Token 464: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.008129963040119e-06
    2. ']=' → logprob: -12.625003814697266
    3. ' ]' → logprob: -14.625003814697266
    4. '[' → logprob: -15.625003814697266
    5. ')' → logprob: -16.125003814697266
    6. ']
' → logprob: -17.625003814697266
    7. '']' → logprob: -18.125003814697266
    8. '`]' → logprob: -18.125003814697266
    9. '=' → logprob: -18.875003814697266
    10. ')]' → logprob: -19.250003814697266

Token 465: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3133362829685211
    2. '=' → logprob: -1.3133362531661987
    3. '=[]' → logprob: -9.938336372375488
    4. '<|end|>' → logprob: -10.938336372375488
    5. ']' → logprob: -12.438336372375488
    6. ')' → logprob: -13.313336372375488
    7. ' ' → logprob: -13.688336372375488
    8. ',' → logprob: -14.813336372375488
    9. '[]' → logprob: -15.563336372375488
    10. '<|end|>' → logprob: -15.688336372375488

Token 466: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06645570695400238
    2. '[]' → logprob: -2.816455602645874
    3. '[
' → logprob: -5.941455841064453
    4. '[]
' → logprob: -6.316455841064453
    5. ' [' → logprob: -11.191455841064453
    6. '[]

' → logprob: -11.441455841064453
    7. ' []' → logprob: -11.691455841064453
    8. '[self' → logprob: -13.191455841064453
    9. '[Index' → logprob: -13.441455841064453
    10. 'Edge' → logprob: -13.691455841064453

Token 467: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24933204054832458
    2. ' for' → logprob: -1.624332070350647
    3. 'for' → logprob: -3.7493319511413574
    4. '   ' → logprob: -9.874332427978516
    5. ',' → logprob: -11.124332427978516
    6. '<|end|>' → logprob: -11.624332427978516
    7. ' ' → logprob: -11.749332427978516
    8. '	for' → logprob: -12.124332427978516
    9. '        
' → logprob: -12.624332427978516
    10. '
' → logprob: -12.874332427978516

Token 468: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00025514091248624027
    2. ' for' → logprob: -8.750255584716797
    3. '       ' → logprob: -9.250255584716797
    4. 'self' → logprob: -14.625255584716797
    5. '	for' → logprob: -16.750255584716797
    6. 'edges' → logprob: -18.375255584716797
    7. 'edge' → logprob: -20.000255584716797
    8. '   ' → logprob: -20.250255584716797
    9. '#' → logprob: -21.000255584716797
    10. 'from' → logprob: -21.875255584716797

Token 469: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0216885507106781
    2. '(u' → logprob: -4.021688461303711
    3. '   ' → logprob: -6.021688461303711
    4. ' u' → logprob: -6.896688461303711
    5. ' (' → logprob: -10.146688461303711
    6. 'i' → logprob: -10.771688461303711
    7. '	u' → logprob: -11.896688461303711
    8. ' ' → logprob: -12.146688461303711
    9. '(i' → logprob: -12.521688461303711
    10. '[u' → logprob: -12.521688461303711

Token 470: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012780977413058281
    2. ',v' → logprob: -4.387781143188477
    3. ' ,' → logprob: -8.262781143188477
    4. ',u' → logprob: -12.262781143188477
    5. ' in' → logprob: -12.512781143188477
    6. 'v' → logprob: -14.137781143188477
    7. ',
' → logprob: -14.137781143188477
    8. '_,' → logprob: -14.262781143188477
    9. ',_' → logprob: -14.637781143188477
    10. '‌,' → logprob: -14.637781143188477

Token 471: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0005530327325686812
    2. ' v' → logprob: -7.500553131103516
    3. '	v' → logprob: -17.250553131103516
    4. ' ' → logprob: -20.625553131103516
    5. ',v' → logprob: -20.625553131103516
    6. '_v' → logprob: -20.750553131103516
    7. ')v' → logprob: -21.250553131103516
    8. '(v' → logprob: -21.750553131103516
    9. '<|end|>' → logprob: -21.750553131103516
    10. '   ' → logprob: -22.000553131103516

Token 472: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0036018555983901024
    2. 'in' → logprob: -5.628602027893066
    3. ' ' → logprob: -14.253602027893066
    4. '<|end|>' → logprob: -15.128602027893066
    5. '	in' → logprob: -15.503602027893066
    6. ',' → logprob: -16.25360107421875
    7. 'import' → logprob: -16.37860107421875
    8. '    ' → logprob: -16.37860107421875
    9. '<|end|>' → logprob: -16.50360107421875
    10. '        ' → logprob: -16.62860107421875

Token 473: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.07889308780431747
    2. ' edges' → logprob: -2.5788931846618652
    3. '(edges' → logprob: -13.578892707824707
    4. 'edge' → logprob: -13.828892707824707
    5. '_edges' → logprob: -14.578892707824707
    6. '.edges' → logprob: -14.703892707824707
    7. '   ' → logprob: -17.328893661499023
    8. 'ed' → logprob: -17.328893661499023
    9. ' ' → logprob: -17.578893661499023
    10. 'Edges' → logprob: -17.578893661499023

Token 474: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.004825611598789692
    2. 'indices' → logprob: -5.379825592041016
    3. ':' → logprob: -10.004825592041016
    4. '   ' → logprob: -10.254825592041016
    5. '       ' → logprob: -11.004825592041016
    6. '"indices' → logprob: -11.004825592041016
    7. 'Indices' → logprob: -11.129825592041016
    8. '_' → logprob: -11.254825592041016
    9. ':
' → logprob: -11.754825592041016
    10. '           ' → logprob: -11.754825592041016

Token 475: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016196008771657944
    2. ':
' → logprob: -4.141195774078369
    3. ' :' → logprob: -9.266196250915527
    4. ',' → logprob: -10.766196250915527
    5. '   ' → logprob: -11.266196250915527
    6. ' :
' → logprob: -11.641196250915527
    7. '       ' → logprob: -12.141196250915527
    8. ' in' → logprob: -12.266196250915527
    9. ':

' → logprob: -13.141196250915527
    10. '.' → logprob: -13.391196250915527

Token 476: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001295222609769553
    2. ' self' → logprob: -9.500129699707031
    3. ',' → logprob: -10.750129699707031
    4. 'self' → logprob: -11.375129699707031
    5. '       ' → logprob: -12.250129699707031
    6. '   ' → logprob: -12.750129699707031
    7. ' points' → logprob: -13.125129699707031
    8. ':
' → logprob: -13.250129699707031
    9. '            
' → logprob: -13.375129699707031
    10. '<|end|>' → logprob: -13.500129699707031

Token 477: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.48079192638397217
    2. ' self' → logprob: -1.2307919263839722
    3. '           ' → logprob: -3.2307920455932617
    4. 'points' → logprob: -3.8557920455932617
    5. '               ' → logprob: -4.105792045593262
    6. ' points' → logprob: -5.230792045593262
    7. 'point' → logprob: -6.355792045593262
    8. 'edge' → logprob: -6.480792045593262
    9. ' edge' → logprob: -6.730792045593262
    10. 'p' → logprob: -6.855792045593262

Token 478: '.original' (ID: 65193)
  Prédit: '.original'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.original' → logprob: -0.0012945238268002868
    2. 'original' → logprob: -6.7512946128845215
    3. '.' → logprob: -10.251294136047363
    4. '.points' → logprob: -10.501294136047363
    5. ' .' → logprob: -10.876294136047363
    6. '.edges' → logprob: -11.376294136047363
    7. 'points' → logprob: -11.751294136047363
    8. '.orig' → logprob: -12.001294136047363
    9. '.origin' → logprob: -12.626294136047363
    10. '.or' → logprob: -13.376294136047363

Token 479: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -9.088346359931165e-07
    2. '_points' → logprob: -14.375000953674316
    3. '_edge' → logprob: -16.125
    4. 'edges' → logprob: -16.625
    5. '_' → logprob: -17.375
    6. '
' → logprob: -17.375
    7. ' _' → logprob: -17.625
    8. ' edges' → logprob: -17.875
    9. 'self' → logprob: -18.0
    10. 'Edges' → logprob: -18.125

Token 480: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.000263481488218531
    2. '.' → logprob: -8.250263214111328
    3. ' .' → logprob: -13.750263214111328
    4. '.app' → logprob: -14.375263214111328
    5. '.ap' → logprob: -15.375263214111328
    6. '.extend' → logprob: -15.500263214111328
    7. 'append' → logprob: -17.750263214111328
    8. '.Append' → logprob: -18.250263214111328
    9. '.add' → logprob: -18.250263214111328
    10. '.push' → logprob: -18.750263214111328

Token 481: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007898802869021893
    2. ' Edge' → logprob: -5.132898807525635
    3. 'Edge' → logprob: -6.382898807525635
    4. '(
' → logprob: -8.882898330688477
    5. ' (' → logprob: -9.007898330688477
    6. '<Edge' → logprob: -11.882898330688477
    7. '(E' → logprob: -12.632898330688477
    8. '   ' → logprob: -13.632898330688477
    9. '.Edge' → logprob: -13.757898330688477
    10. '(edge' → logprob: -14.007898330688477

Token 482: 'Edge' (ID: 16577)
  Prédit: 'Edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -0.00033939589047804475
    2. ' Edge' → logprob: -8.00033950805664
    3. '   ' → logprob: -12.87533950805664
    4. '       ' → logprob: -14.25033950805664
    5. 'self' → logprob: -15.62533950805664
    6. ')' → logprob: -16.62533950805664
    7. ' ' → logprob: -16.75033950805664
    8. '     ' → logprob: -16.87533950805664
    9. 'Edges' → logprob: -17.00033950805664
    10. '  ' → logprob: -17.12533950805664

Token 483: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.013205649331212044
    2. 'u' → logprob: -4.388205528259277
    3. '(points' → logprob: -7.888205528259277
    4. '(' → logprob: -8.888205528259277
    5. 'points' → logprob: -9.138205528259277
    6. ' u' → logprob: -10.638205528259277
    7. '(
' → logprob: -11.263205528259277
    8. '(self' → logprob: -11.513205528259277
    9. ')' → logprob: -11.638205528259277
    10. '[u' → logprob: -12.013205528259277

Token 484: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011296173324808478
    2. ',v' → logprob: -6.876129627227783
    3. ' ,' → logprob: -9.376129150390625
    4. ',
' → logprob: -11.501129150390625
    5. ',u' → logprob: -13.376129150390625
    6. 'v' → logprob: -15.501129150390625
    7. '‌,' → logprob: -16.251129150390625
    8. '<|end|>' → logprob: -17.251129150390625
    9. '
' → logprob: -17.876129150390625
    10. ' v' → logprob: -18.376129150390625

Token 485: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0021853535436093807
    2. ' v' → logprob: -6.127185344696045
    3. ')v' → logprob: -15.877185821533203
    4. '	v' → logprob: -16.502185821533203
    5. 'vq' → logprob: -17.877185821533203
    6. '    ' → logprob: -18.127185821533203
    7. ')' → logprob: -18.377185821533203
    8. ' ' → logprob: -18.502185821533203
    9. 'u' → logprob: -18.502185821533203
    10. '<|end|>' → logprob: -18.752185821533203

Token 486: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001573663903400302
    2. ',[' → logprob: -6.62657356262207
    3. ' ,' → logprob: -9.37657356262207
    4. '[' → logprob: -9.50157356262207
    5. ' ,[' → logprob: -10.12657356262207
    6. ',
' → logprob: -10.37657356262207
    7. ' [' → logprob: -12.00157356262207
    8. '),' → logprob: -13.25157356262207
    9. ')' → logprob: -13.62657356262207
    10. '           ' → logprob: -13.93907356262207

Token 487: ' [' (ID: 723)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.5865248441696167
    2. '[' → logprob: -0.8365248441696167
    3. '[p' → logprob: -4.586524963378906
    4. ' [' → logprob: -9.086524963378906
    5. '[this' → logprob: -10.711524963378906
    6. '[random' → logprob: -10.711524963378906
    7. '[player' → logprob: -10.836524963378906
    8. '[u' → logprob: -11.211524963378906
    9. '[parent' → logprob: -11.211524963378906
    10. '[start' → logprob: -11.461524963378906

Token 488: 'points' (ID: 14011)
  Prédit: 'points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.007660585455596447
    2. 'self' → logprob: -4.882660388946533
    3. ' points' → logprob: -9.882660865783691
    4. ' self' → logprob: -14.382660865783691
    5. '(points' → logprob: -14.382660865783691
    6. '   ' → logprob: -14.507660865783691
    7. '	points' → logprob: -14.507660865783691
    8. '       ' → logprob: -14.632660865783691
    9. 'point' → logprob: -15.132660865783691
    10. 'Points' → logprob: -15.382660865783691

Token 489: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -4.0722858102526516e-05
    2. 'u' → logprob: -10.125041007995605
    3. '[' → logprob: -14.875041007995605
    4. '(u' → logprob: -15.875041007995605
    5. '[
' → logprob: -16.12504005432129
    6. '   ' → logprob: -17.75004005432129
    7. '	u' → logprob: -18.12504005432129
    8. ' u' → logprob: -18.37504005432129
    9. ' [' → logprob: -18.50004005432129
    10. '
' → logprob: -19.00004005432129

Token 490: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001817297888919711
    2. ' ,' → logprob: -8.625182151794434
    3. ',
' → logprob: -13.375182151794434
    4. ',v' → logprob: -15.625182151794434
    5. '],' → logprob: -16.125181198120117
    6. ',p' → logprob: -16.250181198120117
    7. '‌,' → logprob: -17.250181198120117
    8. ',u' → logprob: -17.250181198120117
    9. ' points' → logprob: -17.375181198120117
    10. '   ' → logprob: -17.500181198120117

Token 491: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.011055010370910168
    2. ' points' → logprob: -4.511054992675781
    3. '(points' → logprob: -12.761054992675781
    4. '	points' → logprob: -12.886054992675781
    5. 'point' → logprob: -14.136054992675781
    6. '.points' → logprob: -15.261054992675781
    7. 'oints' → logprob: -15.511054992675781
    8. '   ' → logprob: -16.01105499267578
    9. 'p' → logprob: -16.26105499267578
    10. ' ' → logprob: -16.26105499267578

Token 492: '[v' (ID: 36561)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.03804803267121315
    2. '[v' → logprob: -3.288048028945923
    3. ' v' → logprob: -12.913047790527344
    4. '	v' → logprob: -13.788047790527344
    5. ']' → logprob: -14.288047790527344
    6. '(v' → logprob: -14.288047790527344
    7. '_v' → logprob: -15.038047790527344
    8. '[' → logprob: -15.038047790527344
    9. '   ' → logprob: -15.163047790527344
    10. '])' → logprob: -15.163047790527344

Token 493: ']]' (ID: 8928)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.0056475442834198475
    2. ']' → logprob: -5.505647659301758
    3. '])))' → logprob: -7.755647659301758
    4. ')]' → logprob: -7.880647659301758
    5. '])' → logprob: -8.130647659301758
    6. ']]' → logprob: -8.130647659301758
    7. ']))
' → logprob: -9.255647659301758
    8. ')])' → logprob: -10.630647659301758
    9. ']))

' → logprob: -11.130647659301758
    10. ']])' → logprob: -11.630647659301758

Token 494: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.000766148732509464
    2. ')' → logprob: -7.375766277313232
    3. '))
' → logprob: -9.000765800476074
    4. '       ' → logprob: -11.375765800476074
    5. ' ))' → logprob: -13.250765800476074
    6. '           ' → logprob: -13.375765800476074
    7. ')))' → logprob: -14.250765800476074
    8. ')
' → logprob: -14.625765800476074
    9. '   ' → logprob: -16.37576675415039
    10. '))

' → logprob: -16.37576675415039

Token 495: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 496: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07504027336835861
    2. 'self' (adapté à ' self') → logprob: -2.700040340423584
    3. ' self' → logprob: -5.700040340423584
    4. 'def' → logprob: -6.950040340423584
    5. '   ' → logprob: -7.575040340423584
    6. '<|end|>' → logprob: -8.575039863586426
    7. '```' → logprob: -10.700039863586426
    8. '	self' → logprob: -11.325039863586426
    9. '
' → logprob: -11.700039863586426
    10. '<|end|>' → logprob: -12.075039863586426

Token 497: '.edge' (ID: 112308)
  Prédit: '.edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.edges' → logprob: -0.43032094836235046
    2. '.ad' → logprob: -1.3053209781646729
    3. '.original' → logprob: -2.805320978164673
    4. '.m' → logprob: -5.555320739746094
    5. '.all' → logprob: -5.930320739746094
    6. '.sorted' → logprob: -6.180320739746094
    7. '.M' → logprob: -6.680320739746094
    8. '._' → logprob: -6.805320739746094
    9. '.edge' → logprob: -6.930320739746094
    10. '.graph' → logprob: -6.930320739746094

Token 498: '_map' (ID: 11824)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.002483626827597618
    2. '_list' → logprob: -7.12748384475708
    3. '_set' → logprob: -7.12748384475708
    4. '_map' → logprob: -7.75248384475708
    5. '_sets' → logprob: -9.127483367919922
    6. '_groups' → logprob: -9.502483367919922
    7. '_candidates' → logprob: -10.252483367919922
    8. '_s' → logprob: -10.502483367919922
    9. '_used' → logprob: -10.752483367919922
    10. '_lookup' → logprob: -10.752483367919922

Token 499: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6587654948234558
    2. ':' → logprob: -0.7837654948234558
    3. '=' → logprob: -3.6587655544281006
    4. ' :' → logprob: -9.78376579284668
    5. ' ' → logprob: -13.28376579284668
    6. '[' → logprob: -13.40876579284668
    7. '{' → logprob: -13.78376579284668
    8. '[(' → logprob: -14.78376579284668
    9. '.setdefault' → logprob: -14.78376579284668
    10. '   ' → logprob: -15.15876579284668

Token 500: ' Dict' (ID: 55179)
  Prédit: 'Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dict' → logprob: -0.0017925129504874349
    2. ' Dict' → logprob: -6.3767924308776855
    3. 'List' → logprob: -10.001792907714844
    4. '[' → logprob: -10.251792907714844
    5. 'Set' → logprob: -12.501792907714844
    6. '{' → logprob: -13.501792907714844
    7. 'Default' → logprob: -13.501792907714844
    8. '=' → logprob: -14.501792907714844
    9. ' =' → logprob: -14.626792907714844
    10. 'dict' → logprob: -14.626792907714844

Token 501: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.25231826305389404
    2. '[int' → logprob: -1.502318263053894
    3. '[(' → logprob: -8.252318382263184
    4. 'int' → logprob: -9.752318382263184
    5. '[
' → logprob: -10.002318382263184
    6. '[Int' → logprob: -11.502318382263184
    7. '<|end|>' → logprob: -11.877318382263184
    8. ' =' → logprob: -13.252318382263184
    9. '[List' → logprob: -13.377318382263184
    10. '<int' → logprob: -14.002318382263184

Token 502: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.08909530937671661
    2. 'int' → logprob: -2.4640953540802
    3. ' Tuple' → logprob: -8.964095115661621
    4. '[int' → logprob: -11.089095115661621
    5. ' int' → logprob: -12.089095115661621
    6. '[' → logprob: -13.339095115661621
    7. 'tuple' → logprob: -13.339095115661621
    8. '(int' → logprob: -13.589095115661621
    9. 'fro' → logprob: -14.214095115661621
    10. 'Optional' → logprob: -15.089095115661621

Token 503: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -7.941850526549388e-06
    2. 'int' → logprob: -11.875007629394531
    3. '<int' → logprob: -14.250007629394531
    4. ',int' → logprob: -15.750007629394531
    5. '(int' → logprob: -17.12500762939453
    6. ',' → logprob: -18.12500762939453
    7. ']int' → logprob: -18.25000762939453
    8. '[
' → logprob: -18.50000762939453
    9. '[' → logprob: -18.75000762939453
    10. '[in' → logprob: -20.25000762939453

Token 504: ',int' (ID: 20909)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004639219027012587
    2. ',int' → logprob: -5.379639148712158
    3. '[int' → logprob: -11.629639625549316
    4. 'int' → logprob: -12.379639625549316
    5. ' ,' → logprob: -12.504639625549316
    6. ',
' → logprob: -13.379639625549316
    7. ']int' → logprob: -15.629639625549316
    8. '<|end|>' → logprob: -16.129638671875
    9. ',bool' → logprob: -16.129638671875
    10. '<int' → logprob: -16.254638671875

Token 505: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.001748126931488514
    2. ',' → logprob: -6.376748085021973
    3. ' ],' → logprob: -10.251748085021973
    4. '),' → logprob: -12.501748085021973
    5. ']' → logprob: -13.251748085021973
    6. ' ,' → logprob: -13.376748085021973
    7. '>,' → logprob: -13.876748085021973
    8. ']],' → logprob: -14.376748085021973
    9. '],
' → logprob: -14.751748085021973
    10. ''],' → logprob: -14.751748085021973

Token 506: ' Edge' (ID: 16396)
  Prédit: 'Edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -0.0018395140068605542
    2. 'List' → logprob: -7.001839637756348
    3. 'int' → logprob: -7.501839637756348
    4. ' Edge' → logprob: -8.001839637756348
    5. 'Set' → logprob: -10.376839637756348
    6. '   ' → logprob: -13.251839637756348
    7. ' int' → logprob: -13.626839637756348
    8. 'Optional' → logprob: -14.376839637756348
    9. ' ' → logprob: -14.501839637756348
    10. 'Index' → logprob: -14.626839637756348

Token 507: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.961759259458631e-06
    2. ']=' → logprob: -12.875004768371582
    3. ' ]' → logprob: -13.000004768371582
    4. ']]' → logprob: -17.3750057220459
    5. '   ' → logprob: -17.7500057220459
    6. '[' → logprob: -17.8750057220459
    7. '>' → logprob: -18.5000057220459
    8. ']
' → logprob: -18.6250057220459
    9. ' ' → logprob: -18.7500057220459
    10. ']>' → logprob: -19.1250057220459

Token 508: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01815134845674038
    2. ' =' → logprob: -4.01815128326416
    3. '={}' → logprob: -13.64315128326416
    4. ' ' → logprob: -16.268152236938477
    5. '={' → logprob: -16.768152236938477
    6. '   ' → logprob: -17.643152236938477
    7. '={}
' → logprob: -17.893152236938477
    8. '=[]' → logprob: -18.143152236938477
    9. '[' → logprob: -18.393152236938477
    10. '{' → logprob: -18.768152236938477

Token 509: ' {' (ID: 354)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0224151574075222
    2. '{}
' → logprob: -4.0224151611328125
    3. '{' → logprob: -5.5224151611328125
    4. '{
' → logprob: -9.022415161132812
    5. ' {}' → logprob: -9.272415161132812
    6. 'dict' → logprob: -11.022415161132812
    7. ' {}
' → logprob: -11.397415161132812
    8. '{}

' → logprob: -11.772415161132812
    9. ' {(' → logprob: -11.772415161132812
    10. '{})' → logprob: -14.147415161132812

Token 510: ' (' (ID: 350)
  Prédit: '(edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edge' → logprob: -0.5908812880516052
    2. '(e' → logprob: -1.21588134765625
    3. ' (' → logprob: -2.84088134765625
    4. '(tuple' → logprob: -3.09088134765625
    5. '(' → logprob: -3.71588134765625
    6. '(u' → logprob: -5.34088134765625
    7. '(min' → logprob: -5.46588134765625
    8. '   ' → logprob: -5.71588134765625
    9. '(self' → logprob: -5.96588134765625
    10. '(f' → logprob: -6.46588134765625

Token 511: 'min' (ID: 1493)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6873531341552734
    2. 'edge' → logprob: -0.9373531341552734
    3. '(u' → logprob: -3.3123531341552734
    4. 'min' → logprob: -3.9373531341552734
    5. '(edge' → logprob: -4.062353134155273
    6. '(e' → logprob: -4.187353134155273
    7. 'u' → logprob: -4.312353134155273
    8. '(min' → logprob: -6.937353134155273
    9. ' (' → logprob: -7.312353134155273
    10. ' edge' → logprob: -7.812353134155273

Token 512: '(e' (ID: 3454)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.006417874712496996
    2. '(edge' → logprob: -5.756417751312256
    3. '(e' → logprob: -5.881417751312256
    4. 'edge' → logprob: -8.381418228149414
    5. 'u' → logprob: -9.256418228149414
    6. '(self' → logprob: -10.006418228149414
    7. 'e' → logprob: -10.256418228149414
    8. '((' → logprob: -10.756418228149414
    9. '(' → logprob: -11.881418228149414
    10. 'self' → logprob: -13.006418228149414

Token 513: '.u' (ID: 22262)
  Prédit: '.u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.u' → logprob: -0.017119955271482468
    2. '.e' → logprob: -4.767119884490967
    3. '(u' → logprob: -4.892119884490967
    4. 'e' → logprob: -7.517119884490967
    5. '(e' → logprob: -8.767120361328125
    6. '.edge' → logprob: -9.142120361328125
    7. 'edge' → logprob: -10.392120361328125
    8. 'self' → logprob: -10.392120361328125
    9. 'u' → logprob: -11.017120361328125
    10. '(edge' → logprob: -11.267120361328125

Token 514: ',e' (ID: 43127)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -1.0420176982879639
    2. ',' → logprob: -1.4170176982879639
    3. 'e' → logprob: -1.5420176982879639
    4. ',e' → logprob: -1.6670176982879639
    5. '),' → logprob: -7.042017936706543
    6. ' ,' → logprob: -7.417017936706543
    7. ' e' → logprob: -8.417017936706543
    8. ' (' → logprob: -9.292017936706543
    9. '[e' → logprob: -9.792017936706543
    10. ')' → logprob: -9.917017936706543

Token 515: '.v' (ID: 5520)
  Prédit: '.u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.u' → logprob: -0.007069247309118509
    2. '.v' → logprob: -5.507069110870361
    3. '.e' → logprob: -6.632069110870361
    4. 'u' → logprob: -7.382069110870361
    5. ',u' → logprob: -7.757069110870361
    6. '.' → logprob: -8.25706958770752
    7. 'e' → logprob: -9.00706958770752
    8. ',e' → logprob: -9.50706958770752
    9. '(u' → logprob: -9.88206958770752
    10. 'v' → logprob: -10.38206958770752

Token 516: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.02073550596833229
    2. ' ),' → logprob: -4.270735740661621
    3. ',' → logprob: -5.520735740661621
    4. '),(' → logprob: -6.645735740661621
    5. ',e' → logprob: -7.395735740661621
    6. ' ,' → logprob: -7.645735740661621
    7. 'e' → logprob: -9.645735740661621
    8. ')' → logprob: -9.895735740661621
    9. '(e' → logprob: -11.395735740661621
    10. ')e' → logprob: -12.020735740661621

Token 517: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.01815064437687397
    2. ' max' → logprob: -4.018150806427002
    3. '   ' → logprob: -15.268150329589844
    4. '(max' → logprob: -15.518150329589844
    5. ' ' → logprob: -16.643150329589844
    6. ',max' → logprob: -16.893150329589844
    7. '    ' → logprob: -17.143150329589844
    8. 'min' → logprob: -17.268150329589844
    9. '	max' → logprob: -17.268150329589844
    10. '  ' → logprob: -17.268150329589844

Token 518: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -4.704065213445574e-05
    2. 'e' → logprob: -10.125046730041504
    3. '(' → logprob: -12.375046730041504
    4. ' (' → logprob: -13.500046730041504
    5. ')e' → logprob: -14.875046730041504
    6. '[e' → logprob: -15.250046730041504
    7. ')' → logprob: -15.375046730041504
    8. '(u' → logprob: -15.875046730041504
    9. '(
' → logprob: -16.00004768371582
    10. '((' → logprob: -16.12504768371582

Token 519: '.u' (ID: 22262)
  Prédit: '.u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.u' → logprob: -0.153609499335289
    2. '.e' → logprob: -2.27860951423645
    3. '(u' → logprob: -3.77860951423645
    4. '(e' → logprob: -4.153609275817871
    5. 'e' → logprob: -6.903609275817871
    6. '(' → logprob: -9.153609275817871
    7. 'u' → logprob: -9.153609275817871
    8. ')' → logprob: -10.028609275817871
    9. '[u' → logprob: -10.778609275817871
    10. '.' → logprob: -11.028609275817871

Token 520: ',e' (ID: 43127)
  Prédit: ',e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',e' → logprob: -0.322331964969635
    2. '(e' → logprob: -1.3223319053649902
    3. 'e' → logprob: -5.19733190536499
    4. ',' → logprob: -5.69733190536499
    5. '[e' → logprob: -10.072332382202148
    6. '),' → logprob: -10.447332382202148
    7. ' ,' → logprob: -11.197332382202148
    8. ')' → logprob: -11.322332382202148
    9. ',(' → logprob: -11.322332382202148
    10. '),(' → logprob: -12.447332382202148

Token 521: '.v' (ID: 5520)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3871350586414337
    2. '.v' → logprob: -1.1371350288391113
    3. ',v' → logprob: -8.51213550567627
    4. 'e' → logprob: -10.76213550567627
    5. '   ' → logprob: -11.63713550567627
    6. ' v' → logprob: -12.01213550567627
    7. '),' → logprob: -12.38713550567627
    8. '  ' → logprob: -12.88713550567627
    9. ' ' → logprob: -13.01213550567627
    10. ')' → logprob: -13.01213550567627

Token 522: ')):' (ID: 92037)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004482223652303219
    2. ')):' → logprob: -6.004482269287109
    3. ')' → logprob: -6.379482269287109
    4. ' ):' → logprob: -8.50448226928711
    5. '   ' → logprob: -10.37948226928711
    6. '):(' → logprob: -10.87948226928711
    7. '))' → logprob: -11.12948226928711
    8. '       ' → logprob: -11.25448226928711
    9. '    ' → logprob: -12.12948226928711
    10. '),' → logprob: -12.25448226928711

Token 523: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.018155446276068687
    2. ' e' → logprob: -4.018155574798584
    3. '   ' → logprob: -13.143155097961426
    4. 'edge' → logprob: -13.393155097961426
    5. ' ' → logprob: -14.643155097961426
    6. '	e' → logprob: -14.893155097961426
    7. '       ' → logprob: -15.018155097961426
    8. '           ' → logprob: -15.018155097961426
    9. 'self' → logprob: -16.018156051635742
    10. '    ' → logprob: -16.018156051635742

Token 524: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16028118133544922
    2. 'for' → logprob: -1.9102811813354492
    3. ':' → logprob: -9.91028118133545
    4. '   ' → logprob: -12.91028118133545
    5. ' ' → logprob: -13.28528118133545
    6. 'e' → logprob: -13.66028118133545
    7. '           ' → logprob: -14.41028118133545
    8. '	for' → logprob: -14.78528118133545
    9. '         ' → logprob: -15.53528118133545
    10. '       ' → logprob: -15.53528118133545

Token 525: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.025540729984641075
    2. 'self' → logprob: -4.025540828704834
    3. ' e' → logprob: -5.025540828704834
    4. ' self' → logprob: -7.150540828704834
    5. '	e' → logprob: -13.025540351867676
    6. '
' → logprob: -13.275540351867676
    7. '   ' → logprob: -13.275540351867676
    8. ')e' → logprob: -14.463040351867676
    9. ' ' → logprob: -14.588040351867676
    10. '(self' → logprob: -14.775540351867676

Token 526: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007932622916996479
    2. ' e' → logprob: -4.882932662963867
    3. 'e' → logprob: -8.632932662963867
    4. ' ' → logprob: -10.632932662963867
    5. '}' → logprob: -11.007932662963867
    6. ' self' → logprob: -11.382932662963867
    7. '<|end|>' → logprob: -11.382932662963867
    8. 'self' → logprob: -11.382932662963867
    9. ')' → logprob: -11.757932662963867
    10. ']' → logprob: -11.882932662963867

Token 527: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009143244242295623
    2. ' self' → logprob: -7.000914096832275
    3. '   ' → logprob: -13.500914573669434
    4. '(self' → logprob: -14.875914573669434
    5. '       ' → logprob: -15.125914573669434
    6. ' ' → logprob: -15.750914573669434
    7. '[self' → logprob: -15.875914573669434
    8. '           ' → logprob: -16.250913619995117
    9. '	self' → logprob: -16.625913619995117
    10. '  ' → logprob: -16.750913619995117

Token 528: '.original' (ID: 65193)
  Prédit: '.original'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.original' → logprob: -0.0031901898328214884
    2. 'original' → logprob: -5.753190040588379
    3. ' .' → logprob: -12.378190040588379
    4. '.' → logprob: -12.753190040588379
    5. 'class' → logprob: -13.253190040588379
    6. ' original' → logprob: -13.878190040588379
    7. '.class' → logprob: -14.253190040588379
    8. '.origin' → logprob: -14.253190040588379
    9. '.orig' → logprob: -14.878190040588379
    10. 'Original' → logprob: -15.503190040588379

Token 529: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -7.226628895296017e-06
    2. 'edges' → logprob: -12.375007629394531
    3. '_edge' → logprob: -14.125007629394531
    4. '
' → logprob: -14.375007629394531
    5. '_points' → logprob: -14.500007629394531
    6. '_' → logprob: -15.125007629394531
    7. '.edges' → logprob: -15.375007629394531
    8. '_
' → logprob: -16.37500762939453
    9. ' edges' → logprob: -16.50000762939453
    10. '_ed' → logprob: -16.50000762939453

Token 530: ' }

' (ID: 758)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0002538296685088426
    2. '       ' → logprob: -8.750253677368164
    3. ' }' → logprob: -9.500253677368164
    4. '   ' → logprob: -11.000253677368164
    5. '}
' → logprob: -12.500253677368164
    6. ')' → logprob: -17.000253677368164
    7. ',' → logprob: -17.000253677368164
    8. '}

' → logprob: -17.625253677368164
    9. '           ' → logprob: -18.125253677368164
    10. '	' → logprob: -18.250253677368164

Token 531: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07577521353960037
    2. '
' → logprob: -3.075775146484375
    3. '<|end|>' → logprob: -4.075775146484375
    4. '       ' → logprob: -4.825775146484375
    5. 'def' → logprob: -6.575775146484375
    6. '    
' → logprob: -8.700775146484375
    7. '<|end|>' → logprob: -8.825775146484375
    8. '        
' → logprob: -10.700775146484375
    9. ' def' → logprob: -11.075775146484375
    10. 'self' → logprob: -11.200775146484375

Token 532: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0017787108663469553
    2. ' def' → logprob: -6.501778602600098
    3. '   ' → logprob: -8.251778602600098
    4. '
' → logprob: -11.501778602600098
    5. 'class' → logprob: -13.876778602600098
    6. ')' → logprob: -14.001778602600098
    7. '    
' → logprob: -14.126778602600098
    8. 'self' → logprob: -14.626778602600098
    9. ' ' → logprob: -14.751778602600098
    10. '

' → logprob: -14.876778602600098

Token 533: ' all' (ID: 722)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -1.0867152214050293
    2. ' add' → logprob: -1.8367152214050293
    3. ' kr' → logprob: -2.5867152214050293
    4. 'kr' → logprob: -2.8367152214050293
    5. ' build' → logprob: -3.0867152214050293
    6. ' all' → logprob: -3.0867152214050293
    7. ' mst' → logprob: -3.2117152214050293
    8. ' minimal' → logprob: -3.3367152214050293
    9. ' compute' → logprob: -3.3367152214050293
    10. ' find' → logprob: -3.4617152214050293

Token 534: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.0016469687689095736
    2. '_possible' → logprob: -6.751646995544434
    3. '_pairs' → logprob: -8.626646995544434
    4. '_' → logprob: -8.876646995544434
    5. '_edge' → logprob: -9.876646995544434
    6. '_points' → logprob: -10.126646995544434
    7. '_paths' → logprob: -10.501646995544434
    8. '_connections' → logprob: -12.126646995544434
    9. '_dist' → logprob: -12.251646995544434
    10. '_nodes' → logprob: -12.376646995544434

Token 535: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.755678961984813e-05
    2. '(' → logprob: -9.500077247619629
    3. 'self' → logprob: -13.750077247619629
    4. ' (' → logprob: -13.875077247619629
    5. '   ' → logprob: -15.875077247619629
    6. '(
' → logprob: -16.125078201293945
    7. '(s' → logprob: -16.125078201293945
    8. 's' → logprob: -16.125078201293945
    9. '()' → logprob: -16.500078201293945
    10. ' self' → logprob: -17.125078201293945

Token 536: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14544226229190826
    2. '(self' → logprob: -2.145442247390747
    3. '):' → logprob: -4.520442485809326
    4. 'self' → logprob: -5.145442485809326
    5. '):
' → logprob: -6.645442485809326
    6. '   ' → logprob: -9.395442008972168
    7. ' )' → logprob: -9.395442008972168
    8. ' self' → logprob: -10.270442008972168
    9. ' ' → logprob: -10.645442008972168
    10. ',' → logprob: -10.645442008972168

Token 537: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004303116293158382
    2. 'self' → logprob: -8.6254301071167
    3. ':' → logprob: -9.2504301071167
    4. '(' → logprob: -9.6254301071167
    5. '   ' → logprob: -10.5004301071167
    6. '       ' → logprob: -11.0004301071167
    7. ' ->' → logprob: -11.5004301071167
    8. 'def' → logprob: -11.6254301071167
    9. '->' → logprob: -12.2504301071167
    10. '(
' → logprob: -12.2504301071167

Token 538: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.2815748453140259
    2. ' List' → logprob: -1.4065748453140259
    3. 'Iterator' → logprob: -8.531575202941895
    4. 'self' → logprob: -9.281575202941895
    5. '   ' → logprob: -9.906575202941895
    6. ' Iterator' → logprob: -10.781575202941895
    7. 'list' → logprob: -11.406575202941895
    8. '[List' → logprob: -11.406575202941895
    9. ' list' → logprob: -11.906575202941895
    10. '       ' → logprob: -12.281575202941895

Token 539: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.774276774493046e-05
    2. '[self' → logprob: -10.500038146972656
    3. '<Edge' → logprob: -12.000038146972656
    4. '[
' → logprob: -13.875038146972656
    5. '   ' → logprob: -14.125038146972656
    6. '       ' → logprob: -14.250038146972656
    7. '[int' → logprob: -14.875038146972656
    8. '['' → logprob: -15.000038146972656
    9. ' [' → logprob: -15.375038146972656
    10. '[List' → logprob: -15.375038146972656

Token 540: 'Edge' (ID: 16577)
  Prédit: 'Edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -1.282920129597187e-05
    2. ' Edge' → logprob: -11.375012397766113
    3. '[' → logprob: -14.125012397766113
    4. 'Point' → logprob: -14.750012397766113
    5. '   ' → logprob: -15.500012397766113
    6. '<Edge' → logprob: -17.25001335144043
    7. 'Edges' → logprob: -18.00001335144043
    8. 'edge' → logprob: -18.12501335144043
    9. '       ' → logprob: -18.25001335144043
    10. 'int' → logprob: -18.50001335144043

Token 541: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.6295274496078491
    2. ']:
' → logprob: -1.0045274496078491
    3. '():
' → logprob: -3.2545275688171387
    4. '):
' → logprob: -4.004527568817139
    5. ']' → logprob: -4.754527568817139
    6. '):' → logprob: -4.754527568817139
    7. ':' → logprob: -4.879527568817139
    8. '():' → logprob: -4.879527568817139
    9. ':
' → logprob: -5.004527568817139
    10. '       ' → logprob: -6.129527568817139

Token 542: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.392202976712724e-06
    2. 'return' → logprob: -13.375006675720215
    3. ' return' → logprob: -13.500006675720215
    4. '   ' → logprob: -13.750006675720215
    5. '	' → logprob: -14.125006675720215
    6. '
' → logprob: -14.500006675720215
    7. '        
' → logprob: -15.000006675720215
    8. ',' → logprob: -16.0000057220459
    9. '	   ' → logprob: -16.0000057220459
    10. ':' → logprob: -16.1250057220459

Token 543: ' edges' (ID: 22569)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4905485212802887
    2. 'return' → logprob: -0.9905484914779663
    3. ' return' → logprob: -4.115548610687256
    4. '   ' → logprob: -11.240548133850098
    5. 'edges' (adapté à ' edges') → logprob: -12.615548133850098
    6. ' edges' → logprob: -13.490548133850098
    7. 'result' → logprob: -14.615548133850098
    8. ' ' → logprob: -15.115548133850098
    9. '	return' → logprob: -15.240548133850098
    10. '      ' → logprob: -15.490548133850098

Token 544: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1983603686094284
    2. '():
' → logprob: -2.4483604431152344
    3. '=' → logprob: -3.1983604431152344
    4. '()' → logprob: -3.8233604431152344
    5. '       ' → logprob: -4.448360443115234
    6. '():' → logprob: -4.698360443115234
    7. 'return' → logprob: -5.198360443115234
    8. '   ' → logprob: -5.823360443115234
    9. ' return' → logprob: -7.198360443115234
    10. ':return' → logprob: -8.323360443115234

Token 545: ' []
' (ID: 8911)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014599449001252651
    2. 'list' → logprob: -5.014599323272705
    3. '[]
' → logprob: -5.139599323272705
    4. '[]' → logprob: -7.014599323272705
    5. ' self' → logprob: -7.264599323272705
    6. '[self' → logprob: -8.389599800109863
    7. ' list' → logprob: -9.514599800109863
    8. '   ' → logprob: -10.139599800109863
    9. ' []
' → logprob: -10.889599800109863
    10. '[]

' → logprob: -11.389599800109863

Token 546: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008006895892322063
    2. ' for' → logprob: -4.883007049560547
    3. 'for' → logprob: -7.883007049560547
    4. ',' → logprob: -12.008007049560547
    5. '        
' → logprob: -12.133007049560547
    6. '   ' → logprob: -12.883007049560547
    7. '
' → logprob: -13.508007049560547
    8. '           ' → logprob: -13.633007049560547
    9. '[' → logprob: -14.008007049560547
    10. ' edges' → logprob: -14.008007049560547

Token 547: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.032347794622182846
    2. '       ' → logprob: -3.5323476791381836
    3. 'edges' → logprob: -6.032347679138184
    4. 'visited' → logprob: -9.157347679138184
    5. ' for' → logprob: -9.907347679138184
    6. 'seen' → logprob: -11.282347679138184
    7. '   ' → logprob: -11.407347679138184
    8. 'points' → logprob: -12.657347679138184
    9. '#' → logprob: -13.032347679138184
    10. 'indices' → logprob: -13.157347679138184

Token 548: ' i' (ID: 575)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5232781767845154
    2. 'e' → logprob: -1.5232782363891602
    3. 'edge' → logprob: -2.27327823638916
    4. 'i' → logprob: -2.89827823638916
    5. '   ' → logprob: -4.77327823638916
    6. ' u' → logprob: -5.02327823638916
    7. ' edge' → logprob: -5.27327823638916
    8. ' e' → logprob: -5.52327823638916
    9. '(u' → logprob: -6.52327823638916
    10. '       ' → logprob: -6.64827823638916

Token 549: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3190479576587677
    2. 'in' → logprob: -1.3190479278564453
    3. ',' → logprob: -5.194047927856445
    4. '   ' → logprob: -9.569047927856445
    5. ' i' → logprob: -10.444047927856445
    6. 'n' → logprob: -10.569047927856445
    7. 'i' → logprob: -10.944047927856445
    8. ' ' → logprob: -10.944047927856445
    9. ' ,' → logprob: -11.444047927856445
    10. '_in' → logprob: -11.694047927856445

Token 550: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00043949027894996107
    2. ' range' → logprob: -7.750439643859863
    3. '   ' → logprob: -12.125439643859863
    4. 'self' → logprob: -13.250439643859863
    5. ' ' → logprob: -13.875439643859863
    6. '  ' → logprob: -14.750439643859863
    7. '    ' → logprob: -16.750438690185547
    8. '
' → logprob: -17.125438690185547
    9. '       ' → logprob: -17.500438690185547
    10. '     ' → logprob: -17.625438690185547

Token 551: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0012589222751557827
    2. '(self' → logprob: -7.001258850097656
    3. 'len' → logprob: -8.376258850097656
    4. '       ' → logprob: -10.626258850097656
    5. '           ' → logprob: -10.626258850097656
    6. '(len' → logprob: -10.751258850097656
    7. '   ' → logprob: -10.876258850097656
    8. ' self' → logprob: -10.876258850097656
    9. '0' → logprob: -12.126258850097656
    10. '	self' → logprob: -12.751258850097656

Token 552: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -3.786196975852363e-05
    2. 'N' → logprob: -10.375038146972656
    3. 'self' → logprob: -12.375038146972656
    4. '.' → logprob: -13.625038146972656
    5. '.points' → logprob: -14.750038146972656
    6. 'points' → logprob: -15.375038146972656
    7. '.n' → logprob: -15.875038146972656
    8. 'len' → logprob: -16.875038146972656
    9. '_N' → logprob: -17.000038146972656
    10. '	N' → logprob: -17.000038146972656

Token 553: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.003320426447317004
    2. '):' → logprob: -6.253320217132568
    3. '-' → logprob: -7.128320217132568
    4. ' -' → logprob: -8.003320693969727
    5. '   ' → logprob: -9.253320693969727
    6. ' ):
' → logprob: -9.253320693969727
    7. '       ' → logprob: -10.378320693969727
    8. '
' → logprob: -11.878320693969727
    9. ')' → logprob: -12.003320693969727
    10. '           ' → logprob: -12.503320693969727

Token 554: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.14741235971450806
    2. '   ' → logprob: -2.1474123001098633
    3. 'for' → logprob: -4.522412300109863
    4. '           ' → logprob: -5.022412300109863
    5. '       ' → logprob: -6.022412300109863
    6. ',' → logprob: -8.522412300109863
    7. ' ' → logprob: -9.147412300109863
    8. '	for' → logprob: -9.897412300109863
    9. '    ' → logprob: -11.272412300109863
    10. '  ' → logprob: -11.647412300109863

Token 555: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004559480585157871
    2. ' for' → logprob: -6.004559516906738
    3. '   ' → logprob: -6.254559516906738
    4. '       ' → logprob: -8.879559516906738
    5. '           ' → logprob: -11.004559516906738
    6. '	for' → logprob: -13.004559516906738
    7. ' ' → logprob: -13.254559516906738
    8. '  ' → logprob: -16.379558563232422
    9. '	   ' → logprob: -18.004558563232422
    10. '    ' → logprob: -18.004558563232422

Token 556: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0019299437990412116
    2. ' j' → logprob: -6.251929759979248
    3. '   ' → logprob: -13.751930236816406
    4. '	j' → logprob: -15.126930236816406
    5. '           ' → logprob: -16.876930236816406
    6. 'v' → logprob: -17.001930236816406
    7. '_j' → logprob: -18.626930236816406
    8. '    ' → logprob: -18.751930236816406
    9. '                   ' → logprob: -18.751930236816406
    10. '       ' → logprob: -19.501930236816406

Token 557: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014185951091349125
    2. 'in' → logprob: -4.264185905456543
    3. 'range' → logprob: -11.764185905456543
    4. '	in' → logprob: -11.889185905456543
    5. ' ' → logprob: -13.139185905456543
    6. 'i' → logprob: -13.389185905456543
    7. ' i' → logprob: -13.514185905456543
    8. ' range' → logprob: -13.889185905456543
    9. '   ' → logprob: -14.889185905456543
    10. '_in' → logprob: -15.264185905456543

Token 558: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12693041563034058
    2. ' range' → logprob: -2.1269304752349854
    3. '   ' → logprob: -14.001930236816406
    4. ' ' → logprob: -14.376930236816406
    5. '	range' → logprob: -14.751930236816406
    6. '(range' → logprob: -15.251930236816406
    7. '  ' → logprob: -16.126930236816406
    8. 'i' → logprob: -16.251930236816406
    9. 'in' → logprob: -17.251930236816406
    10. '    ' → logprob: -17.501930236816406

Token 559: '(i' (ID: 3649)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1342533975839615
    2. '(i' → logprob: -2.13425350189209
    3. ' range' → logprob: -5.63425350189209
    4. 'i' → logprob: -5.63425350189209
    5. '(range' → logprob: -8.88425350189209
    6. '   ' → logprob: -12.50925350189209
    7. ' i' → logprob: -12.63425350189209
    8. '[i' → logprob: -13.25925350189209
    9. 'in' → logprob: -13.50925350189209
    10. '{i' → logprob: -14.25925350189209

Token 560: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14270563423633575
    2. ' +' → logprob: -2.0177056789398193
    3. '+i' → logprob: -11.392705917358398
    4. '1' → logprob: -11.517705917358398
    5. '   ' → logprob: -12.142705917358398
    6. ' ' → logprob: -13.392705917358398
    7. '+
' → logprob: -14.642705917358398
    8. '+,' → logprob: -15.017705917358398
    9. ',' → logprob: -15.142705917358398
    10. ')' → logprob: -15.267705917358398

Token 561: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5451681974809617e-05
    2. 'self' → logprob: -11.500015258789062
    3. ' ' → logprob: -12.250015258789062
    4. 'i' → logprob: -15.500015258789062
    5. '   ' → logprob: -16.500015258789062
    6. '           ' → logprob: -16.500015258789062
    7. ' self' → logprob: -17.125015258789062
    8. '2' → logprob: -17.125015258789062
    9. '0' → logprob: -17.375015258789062
    10. '(self' → logprob: -18.125015258789062

Token 562: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002330574905499816
    2. ' ,' → logprob: -6.127330780029297
    3. ',self' → logprob: -9.252330780029297
    4. 'self' → logprob: -10.002330780029297
    5. ',
' → logprob: -13.377330780029297
    6. ' self' → logprob: -14.127330780029297
    7. ',N' → logprob: -14.377330780029297
    8. '1' → logprob: -14.627330780029297
    9. ',n' → logprob: -16.002330780029297
    10. 'N' → logprob: -16.127330780029297

Token 563: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004627002868801355
    2. ' self' → logprob: -5.379627227783203
    3. '       ' → logprob: -12.879627227783203
    4. '           ' → logprob: -12.879627227783203
    5. '   ' → logprob: -14.129627227783203
    6. '(self' → logprob: -15.754627227783203
    7. '               ' → logprob: -16.254627227783203
    8. 'N' → logprob: -16.379627227783203
    9. '
' → logprob: -16.504627227783203
    10. '                   ' → logprob: -16.504627227783203

Token 564: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.0001462107611587271
    2. 'N' → logprob: -9.00014591217041
    3. '.' → logprob: -11.00014591217041
    4. ' .' → logprob: -12.87514591217041
    5. 'self' → logprob: -14.37514591217041
    6. '.n' → logprob: -14.50014591217041
    7. '	N' → logprob: -14.62514591217041
    8. '   ' → logprob: -14.87514591217041
    9. ' N' → logprob: -15.37514591217041
    10. ')' → logprob: -15.50014591217041

Token 565: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.05491534620523453
    2. '):' → logprob: -2.929915428161621
    3. ' ):
' → logprob: -11.429915428161621
    4. '           ' → logprob: -12.054915428161621
    5. '       ' → logprob: -12.179915428161621
    6. '):
' → logprob: -12.179915428161621
    7. ' ):' → logprob: -13.054915428161621
    8. '   ' → logprob: -13.554915428161621
    9. '():
' → logprob: -14.179915428161621
    10. '):

' → logprob: -14.429915428161621

Token 566: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008724717423319817
    2. '           ' → logprob: -4.883724689483643
    3. ',' → logprob: -7.383724689483643
    4. ' edges' → logprob: -8.5087251663208
    5. ':
' → logprob: -9.5087251663208
    6. '):
' → logprob: -9.5087251663208
    7. 'edges' → logprob: -10.7587251663208
    8. ':' → logprob: -10.8837251663208
    9. ' if' → logprob: -11.2587251663208
    10. '(edges' → logprob: -11.3837251663208

Token 567: ' edge' (ID: 11165)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.19434182345867157
    2. '           ' → logprob: -2.6943418979644775
    3. 'edges' → logprob: -3.3193418979644775
    4. ' if' → logprob: -3.4443418979644775
    5. '               ' → logprob: -4.569341659545898
    6. ' points' → logprob: -4.569341659545898
    7. '                   ' → logprob: -5.069341659545898
    8. 'points' → logprob: -5.069341659545898
    9. 'if' → logprob: -5.819341659545898
    10. '   ' → logprob: -6.194341659545898

Token 568: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2598007023334503
    2. 's' → logprob: -1.634800672531128
    3. '=' → logprob: -4.134800910949707
    4. '_points' → logprob: -4.759800910949707
    5. 'points' → logprob: -5.259800910949707
    6. '_point' → logprob: -6.759800910949707
    7. '.append' → logprob: -7.134800910949707
    8. '_length' → logprob: -7.634800910949707
    9. '   ' → logprob: -8.009800910949707
    10. ' points' → logprob: -8.259800910949707

Token 569: ' Edge' (ID: 16396)
  Prédit: 'Edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -0.003109384560957551
    2. ' Edge' → logprob: -6.253109455108643
    3. 'self' → logprob: -6.753109455108643
    4. ' self' → logprob: -12.003108978271484
    5. '   ' → logprob: -12.628108978271484
    6. '       ' → logprob: -13.003108978271484
    7. '           ' → logprob: -14.628108978271484
    8. 'None' → logprob: -15.753108978271484
    9. ' ' → logprob: -16.003108978271484
    10. '<Edge' → logprob: -16.753108978271484

Token 570: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.002269085729494691
    2. 'i' → logprob: -6.127269268035889
    3. ' i' → logprob: -10.00226879119873
    4. '(' → logprob: -10.25226879119873
    5. ' (' → logprob: -13.75226879119873
    6. '(
' → logprob: -14.62726879119873
    7. '               ' → logprob: -14.87726879119873
    8. ',i' → logprob: -15.00226879119873
    9. '	i' → logprob: -15.25226879119873
    10. ')' → logprob: -15.62726879119873

Token 571: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007089786231517792
    2. ',j' → logprob: -7.375709056854248
    3. ' ,' → logprob: -9.62570858001709
    4. ',
' → logprob: -11.75070858001709
    5. 'j' → logprob: -12.37570858001709
    6. '<|end|>' → logprob: -12.87570858001709
    7. '‌,' → logprob: -15.37570858001709
    8. ' ' → logprob: -15.62570858001709
    9. ' j' → logprob: -15.87570858001709
    10. '   ' → logprob: -16.125709533691406

Token 572: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.033655840903520584
    2. ' j' → logprob: -3.408655881881714
    3. '   ' → logprob: -12.533656120300293
    4. ' ' → logprob: -13.658656120300293
    5. '    ' → logprob: -13.658656120300293
    6. '	j' → logprob: -13.658656120300293
    7. '           ' → logprob: -14.158656120300293
    8. '                   ' → logprob: -15.158656120300293
    9. '  ' → logprob: -15.408656120300293
    10. '       ' → logprob: -15.408656120300293

Token 573: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015001024585217237
    2. ',[' → logprob: -6.876500129699707
    3. ' ,' → logprob: -7.876500129699707
    4. ' ,[' → logprob: -10.876500129699707
    5. '           ' → logprob: -11.001500129699707
    6. '[' → logprob: -11.001500129699707
    7. '               ' → logprob: -11.126500129699707
    8. ',
' → logprob: -11.876500129699707
    9. '                   ' → logprob: -12.126500129699707
    10. ' [' → logprob: -13.126500129699707

Token 574: ' [' (ID: 723)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.045780155807733536
    2. ' [' → logprob: -3.4207801818847656
    3. '[' → logprob: -4.420780181884766
    4. '[p' → logprob: -11.545780181884766
    5. '       ' → logprob: -11.920780181884766
    6. ')' → logprob: -12.795780181884766
    7. 'self' → logprob: -12.920780181884766
    8. '[this' → logprob: -13.170780181884766
    9. '[i' → logprob: -13.295780181884766
    10. '   ' → logprob: -13.545780181884766

Token 575: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00012237003829795867
    2. ' self' → logprob: -9.1251220703125
    3. '           ' → logprob: -12.7501220703125
    4. 'points' → logprob: -12.8751220703125
    5. '(self' → logprob: -12.8751220703125
    6. '[self' → logprob: -13.7501220703125
    7. '       ' → logprob: -14.0001220703125
    8. '
' → logprob: -14.1251220703125
    9. '   ' → logprob: -14.5001220703125
    10. '	self' → logprob: -14.7501220703125

Token 576: '.points' (ID: 66693)
  Prédit: '.points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.points' → logprob: -0.007632300723344088
    2. 'points' → logprob: -4.882632255554199
    3. ' points' → logprob: -10.8826322555542
    4. '	points' → logprob: -12.6326322555542
    5. '.' → logprob: -13.0076322555542
    6. ' .' → logprob: -14.7576322555542
    7. '.point' → logprob: -14.7576322555542
    8. '(points' → logprob: -15.0076322555542
    9. '.p' → logprob: -15.3826322555542
    10. '.Point' → logprob: -15.5076322555542

Token 577: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.292907877039397e-06
    2. 'i' → logprob: -13.25000286102295
    3. '[j' → logprob: -14.00000286102295
    4. '[' → logprob: -15.12500286102295
    5. '[
' → logprob: -15.87500286102295
    6. ' [' → logprob: -16.000003814697266
    7. '   ' → logprob: -17.250003814697266
    8. '[I' → logprob: -17.750003814697266
    9. '[u' → logprob: -18.000003814697266
    10. '```' → logprob: -18.125003814697266

Token 578: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024822709383443
    2. ' ,' → logprob: -8.875247955322266
    3. '],' → logprob: -9.250247955322266
    4. ',j' → logprob: -12.250247955322266
    5. ',
' → logprob: -13.000247955322266
    6. '       ' → logprob: -13.625247955322266
    7. '           ' → logprob: -13.875247955322266
    8. '),' → logprob: -14.250247955322266
    9. '   ' → logprob: -14.500247955322266
    10. '‌,' → logprob: -15.000247955322266

Token 579: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08895506709814072
    2. ' self' → logprob: -2.4639551639556885
    3. '               ' → logprob: -12.46395492553711
    4. '           ' → logprob: -12.58895492553711
    5. '                   ' → logprob: -12.83895492553711
    6. ' ' → logprob: -14.33895492553711
    7. '                       ' → logprob: -14.58895492553711
    8. '(self' → logprob: -14.71395492553711
    9. '                               ' → logprob: -14.83895492553711
    10. '[self' → logprob: -14.83895492553711

Token 580: '.points' (ID: 66693)
  Prédit: '.points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.points' → logprob: -0.00014883324911352247
    2. 'points' → logprob: -8.87514877319336
    3. '	points' → logprob: -12.75014877319336
    4. ' points' → logprob: -12.87514877319336
    5. '.' → logprob: -13.00014877319336
    6. ' .' → logprob: -15.00014877319336
    7. '.point' → logprob: -15.37514877319336
    8. '.p' → logprob: -15.50014877319336
    9. '(points' → logprob: -16.50014877319336
    10. '.Point' → logprob: -17.00014877319336

Token 581: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.20147395133972168
    2. 'j' → logprob: -1.7014739513397217
    3. '])' → logprob: -10.2014741897583
    4. '.j' → logprob: -12.0764741897583
    5. '	j' → logprob: -12.0764741897583
    6. '_j' → logprob: -12.2014741897583
    7. ' j' → logprob: -13.3264741897583
    8. '   ' → logprob: -13.5764741897583
    9. '
' → logprob: -14.0764741897583
    10. '[' → logprob: -14.5764741897583

Token 582: ']])
' (ID: 62818)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.2524264454841614
    2. '])
' → logprob: -1.5024263858795166
    3. ')])' → logprob: -7.877426624298096
    4. ')])
' → logprob: -10.627426147460938
    5. ')' → logprob: -11.002426147460938
    6. ']])' → logprob: -11.127426147460938
    7. '])
' → logprob: -11.627426147460938
    8. '       ' → logprob: -11.752426147460938
    9. ']])
' → logprob: -11.752426147460938
    10. '           ' → logprob: -11.877426147460938

Token 583: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00016551809676457196
    2. '                   ' → logprob: -8.875165939331055
    3. '           ' → logprob: -11.250165939331055
    4. '
' → logprob: -12.500165939331055
    5. '                
' → logprob: -12.750165939331055
    6. '	           ' → logprob: -14.000165939331055
    7. '                       ' → logprob: -14.000165939331055
    8. ',' → logprob: -14.125165939331055
    9. ')' → logprob: -14.250165939331055
    10. '		       ' → logprob: -14.500165939331055

Token 584: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.7351856231689453
    2. 'edges' (adapté à ' edges') → logprob: -0.8601856231689453
    3. '               ' → logprob: -2.8601856231689453
    4. '           ' → logprob: -3.2351856231689453
    5. '   ' → logprob: -7.860185623168945
    6. '       ' → logprob: -7.985185623168945
    7. '.edges' → logprob: -9.360185623168945
    8. '                   ' → logprob: -10.235185623168945
    9. '
' → logprob: -11.110185623168945
    10. '(edges' → logprob: -11.235185623168945

Token 585: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0031953046564012766
    2. '.' → logprob: -5.753195285797119
    3. '.app' → logprob: -11.128195762634277
    4. '.ap' → logprob: -13.253195762634277
    5. '.add' → logprob: -14.503195762634277
    6. ' .' → logprob: -15.253195762634277
    7. ').' → logprob: -16.12819480895996
    8. '.Append' → logprob: -16.25319480895996
    9. '.push' → logprob: -16.25319480895996
    10. '.extend' → logprob: -16.50319480895996

Token 586: '(edge' (ID: 84023)
  Prédit: '(edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edge' → logprob: -1.9623810658231378e-05
    2. '(' → logprob: -11.250020027160645
    3. '(
' → logprob: -12.250020027160645
    4. 'edge' → logprob: -13.250020027160645
    5. '=edge' → logprob: -17.375019073486328
    6. ' edge' → logprob: -18.750019073486328
    7. '(

' → logprob: -18.875019073486328
    8. '(edges' → logprob: -19.375019073486328
    9. ' (' → logprob: -19.625019073486328
    10. '(e' → logprob: -19.625019073486328

Token 587: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03444797545671463
    2. '       ' → logprob: -3.9094479084014893
    3. ')
' → logprob: -4.284448146820068
    4. ' )' → logprob: -11.65944766998291
    5. '               ' → logprob: -12.15944766998291
    6. '
' → logprob: -12.53444766998291
    7. '   ' → logprob: -12.65944766998291
    8. ')return' → logprob: -13.15944766998291
    9. ')
' → logprob: -13.53444766998291
    10. '           ' → logprob: -13.90944766998291

Token 588: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022819340229034424
    2. '
' → logprob: -6.25228214263916
    3. 'return' → logprob: -8.50228214263916
    4. ' return' → logprob: -9.12728214263916
    5. '        
' → logprob: -11.00228214263916
    6. '	' → logprob: -11.62728214263916
    7. '
' → logprob: -12.50228214263916
    8. '<|end|>' → logprob: -12.50228214263916
    9. '	return' → logprob: -13.75228214263916
    10. '      ' → logprob: -13.75228214263916

Token 589: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008549564518034458
    2. 'return' (adapté à ' return') → logprob: -5.133549690246582
    3. '
' → logprob: -6.133549690246582
    4. ' return' → logprob: -7.758549690246582
    5. '   ' → logprob: -11.508549690246582
    6. '        
' → logprob: -12.383549690246582
    7. '
' → logprob: -13.383549690246582
    8. '	return' → logprob: -14.008549690246582
    9. '```' → logprob: -14.133549690246582
    10. '           ' → logprob: -14.258549690246582

Token 590: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.009760456159710884
    2. ' edges' → logprob: -4.63476037979126
    3. '   ' → logprob: -12.884760856628418
    4. 'edge' → logprob: -15.009760856628418
    5. '
' → logprob: -15.134760856628418
    6. ' ' → logprob: -15.259760856628418
    7. '	' → logprob: -15.509760856628418
    8. ' ' → logprob: -15.634760856628418
    9. '.edges' → logprob: -15.759760856628418
    10. '```' → logprob: -15.884760856628418

Token 591: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7323365807533264
    2. '<|end|>' → logprob: -0.7323365807533264
    3. '   ' → logprob: -3.6073365211486816
    4. '

' → logprob: -4.857336521148682
    5. '<|end|>' → logprob: -6.357336521148682
    6. '    
' → logprob: -6.482336521148682
    7. '```' → logprob: -9.73233699798584
    8. ')' → logprob: -10.35733699798584
    9. '
    
' → logprob: -10.48233699798584
    10. ',' → logprob: -10.73233699798584

Token 592: 'class' (ID: 1444)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017795290797948837
    2. 'def' → logprob: -4.392795085906982
    3. '
' → logprob: -5.517795085906982
    4. 'class' → logprob: -6.892795085906982
    5. ' def' → logprob: -9.26779556274414
    6. '    
' → logprob: -9.76779556274414
    7. '

' → logprob: -10.26779556274414
    8. ' ' → logprob: -11.51779556274414
    9. '	def' → logprob: -12.01779556274414
    10. 'from' → logprob: -12.01779556274414

Token 593: ' Boundary' (ID: 148449)
  Prédit: 'Village'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Village' → logprob: -0.99070805311203
    2. ' Village' → logprob: -1.3657081127166748
    3. 'M' → logprob: -2.240708112716675
    4. 'Road' → logprob: -2.865708112716675
    5. ' MST' → logprob: -2.865708112716675
    6. ' Kr' → logprob: -3.365708112716675
    7. ' Road' → logprob: -3.740708112716675
    8. ' Minimum' → logprob: -4.240707874298096
    9. 'Minimum' → logprob: -4.365707874298096
    10. 'Graph' → logprob: -4.490707874298096

Token 594: 'Condition' (ID: 14232)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.044743165373802185
    2. ':
' → logprob: -4.294743061065674
    3. 'Builder' → logprob: -4.794743061065674
    4. 'Graph' → logprob: -5.044743061065674
    5. 'Optimizer' → logprob: -5.919743061065674
    6. 'Path' → logprob: -6.044743061065674
    7. 'Point' → logprob: -6.919743061065674
    8. 'Traversal' → logprob: -7.294743061065674
    9. 'Finder' → logprob: -7.669743061065674
    10. 'Curve' → logprob: -7.669743061065674

Token 595: 'Checker' (ID: 39016)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005648265941999853
    2. ':
' → logprob: -7.500565052032471
    3. '(' → logprob: -12.000564575195312
    4. '):' → logprob: -14.000564575195312
    5. '<|end|>' → logprob: -14.000564575195312
    6. '(object' → logprob: -14.125564575195312
    7. ':

' → logprob: -14.250564575195312
    8. '():' → logprob: -14.375564575195312
    9. ' :' → logprob: -14.500564575195312
    10. ':**' → logprob: -14.875564575195312

Token 596: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003659746435005218
    2. ':
' → logprob: -8.0003662109375
    3. ' :' → logprob: -10.8753662109375
    4. '(' → logprob: -12.0003662109375
    5. ':def' → logprob: -13.5003662109375
    6. '<|end|>' → logprob: -13.7503662109375
    7. '(object' → logprob: -14.2503662109375
    8. '():' → logprob: -14.3753662109375
    9. ':

' → logprob: -14.6253662109375
    10. '):' → logprob: -15.2503662109375

Token 597: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022544567473232746
    2. ' def' → logprob: -6.127254486083984
    3. 'def' → logprob: -10.002254486083984
    4. ':' → logprob: -11.002254486083984
    5. 'class' → logprob: -13.377254486083984
    6. '	def' → logprob: -13.502254486083984
    7. '```' → logprob: -14.252254486083984
    8. ' class' → logprob: -14.252254486083984
    9. ':
' → logprob: -14.377254486083984
    10. '    
' → logprob: -14.502254486083984

Token 598: ' @' (ID: 759)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.16212493181228638
    2. 'def' → logprob: -1.9121248722076416
    3. '   ' → logprob: -6.287125110626221
    4. 'class' → logprob: -11.037124633789062
    5. '	def' → logprob: -11.162124633789062
    6. ' ' → logprob: -12.162124633789062
    7. '```' → logprob: -14.037124633789062
    8. '
' → logprob: -14.162124633789062
    9. ':' → logprob: -14.287124633789062
    10. ':def' → logprob: -14.662124633789062

Token 599: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.12810823321342468
    2. 'dat' → logprob: -2.128108263015747
    3. 'classmethod' → logprob: -6.753108024597168
    4. 'property' → logprob: -11.753108024597168
    5. 'static' → logprob: -12.878108024597168
    6. 'class' → logprob: -14.253108024597168
    7. '__' → logprob: -14.378108024597168
    8. '@dat' → logprob: -16.003108978271484
    9. 'final' → logprob: -16.378108978271484
    10. ' dat' → logprob: -16.378108978271484

Token 600: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.24923059344291687
    2. '(' → logprob: -2.1242306232452393
    3. ' def' → logprob: -2.4992306232452393
    4. '   ' → logprob: -4.12423038482666
    5. '(
' → logprob: -6.99923038482666
    6. '(def' → logprob: -7.74923038482666
    7. '.' → logprob: -8.12423038482666
    8. ' (' → logprob: -8.24923038482666
    9. ':' → logprob: -8.62423038482666
    10. ' ' → logprob: -8.74923038482666

Token 601: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03092825599014759
    2. ' def' → logprob: -3.655928373336792
    3. '(' → logprob: -5.780928134918213
    4. '   ' → logprob: -6.655928134918213
    5. ' ' → logprob: -9.030928611755371
    6. '(
' → logprob: -10.030928611755371
    7. '
' → logprob: -10.655928611755371
    8. '(def' → logprob: -11.405928611755371
    9. ' (' → logprob: -11.530928611755371
    10. ':' → logprob: -12.030928611755371

Token 602: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.004929531365633011
    2. ' def' → logprob: -5.379929542541504
    3. '
' → logprob: -8.129929542541504
    4. '   ' → logprob: -12.754929542541504
    5. '    
' → logprob: -13.379929542541504
    6. 'property' → logprob: -13.504929542541504
    7. ' ' → logprob: -13.504929542541504
    8. 'classmethod' → logprob: -13.504929542541504
    9. 'bool' → logprob: -13.754929542541504
    10. '  
' → logprob: -14.129929542541504

Token 603: ' is' (ID: 382)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -1.3160090446472168
    2. 'is' → logprob: -1.9410090446472168
    3. ' check' → logprob: -2.066009044647217
    4. ' is' → logprob: -2.566009044647217
    5. 'can' → logprob: -2.566009044647217
    6. 'all' → logprob: -3.191009044647217
    7. ' can' → logprob: -3.191009044647217
    8. ' all' → logprob: -3.441009044647217
    9. 'has' → logprob: -3.691009044647217
    10. 'are' → logprob: -3.816009044647217

Token 604: '_inside' (ID: 191028)
  Prédit: '_boundary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_boundary' → logprob: -0.7401471138000488
    2. '_valid' → logprob: -1.6151471138000488
    3. '_inside' → logprob: -2.990147113800049
    4. '_point' → logprob: -3.240147113800049
    5. '_connected' → logprob: -3.240147113800049
    6. '_with' → logprob: -3.490147113800049
    7. '_on' → logprob: -3.615147113800049
    8. '_edge' → logprob: -3.740147113800049
    9. '_fe' → logprob: -4.240147113800049
    10. '_simple' → logprob: -4.615147113800049

Token 605: '_polygon' (ID: 195427)
  Prédit: '(point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(point' → logprob: -0.018476033583283424
    2. '(p' → logprob: -4.5184760093688965
    3. '(' → logprob: -5.7684760093688965
    4. '_boundary' → logprob: -6.2684760093688965
    5. '(bound' → logprob: -6.8934760093688965
    6. '(points' → logprob: -8.393476486206055
    7. '(v' → logprob: -8.893476486206055
    8. '(b' → logprob: -9.143476486206055
    9. '_polygon' → logprob: -9.393476486206055
    10. '(poly' → logprob: -9.768476486206055

Token 606: '(p' (ID: 2407)
  Prédit: '(point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(point' → logprob: -0.7299641966819763
    2. '(p' → logprob: -0.9799641966819763
    3. '(points' → logprob: -2.854964256286621
    4. '(poly' → logprob: -2.979964256286621
    5. '(' → logprob: -3.479964256286621
    6. '(pol' → logprob: -6.229964256286621
    7. '(
' → logprob: -7.854964256286621
    8. '(Point' → logprob: -8.604964256286621
    9. '(bound' → logprob: -8.854964256286621
    10. '<|end|>' → logprob: -9.104964256286621

Token 607: 'olygon' (ID: 80431)
  Prédit: 'oint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oint' → logprob: -0.002550100442022085
    2. ')' → logprob: -6.25255012512207
    3. '(point' → logprob: -8.25255012512207
    4. '(Point' → logprob: -8.62755012512207
    5. ',' → logprob: -9.87755012512207
    6. '(' → logprob: -10.75255012512207
    7. 'olygon' → logprob: -10.75255012512207
    8. ':' → logprob: -11.25255012512207
    9. '):' → logprob: -11.25255012512207
    10. '   ' → logprob: -11.62755012512207

Token 608: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005239564459770918
    2. ',' → logprob: -5.255239486694336
    3. ' :' → logprob: -13.380239486694336
    4. ' ,' → logprob: -13.630239486694336
    5. '_points' → logprob: -14.255239486694336
    6. '   ' → logprob: -14.380239486694336
    7. 'points' → logprob: -14.880239486694336
    8. '```' → logprob: -15.005239486694336
    9. '[' → logprob: -15.505239486694336
    10. ' points' → logprob: -15.755239486694336

Token 609: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.017279431223869324
    2. ' List' → logprob: -4.892279624938965
    3. 'Point' → logprob: -4.892279624938965
    4. ')' → logprob: -6.517279624938965
    5. '[List' → logprob: -7.767279624938965
    6. '[' → logprob: -9.642279624938965
    7. ''' → logprob: -10.267279624938965
    8. ' Point' → logprob: -11.017279624938965
    9. 'Polygon' → logprob: -11.017279624938965
    10. 'Optional' → logprob: -11.392279624938965

Token 610: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.771655115589965e-05
    2. '<Point' → logprob: -11.125018119812012
    3. ',' → logprob: -13.750018119812012
    4. 'Point' → logprob: -14.375018119812012
    5. '[
' → logprob: -14.375018119812012
    6. '<|end|>' → logprob: -15.625018119812012
    7. '(Point' → logprob: -15.750018119812012
    8. '```' → logprob: -16.500017166137695
    9. '   ' → logprob: -16.750017166137695
    10. ' [' → logprob: -17.125017166137695

Token 611: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -4.320199877838604e-07
    2. ' Point' → logprob: -14.875
    3. '	Point' → logprob: -17.125
    4. '<Point' → logprob: -18.875
    5. 'Tuple' → logprob: -19.625
    6. '(Point' → logprob: -20.125
    7. '_Point' → logprob: -20.75
    8. '[' → logprob: -21.125
    9. '.Point' → logprob: -21.25
    10. '_point' → logprob: -21.5

Token 612: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023342261090874672
    2. '],' → logprob: -3.7733423709869385
    3. '>,' → logprob: -9.77334213256836
    4. '),' → logprob: -10.77334213256836
    5. ' ,' → logprob: -11.52334213256836
    6. ''],' → logprob: -12.89834213256836
    7. '},' → logprob: -13.14834213256836
    8. ',p' → logprob: -14.02334213256836
    9. '‌,' → logprob: -14.52334213256836
    10. '`,' → logprob: -14.64834213256836

Token 613: ' a' (ID: 261)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.06261385977268219
    2. ' point' → logprob: -2.8126139640808105
    3. 'pt' → logprob: -8.062613487243652
    4. 'p' → logprob: -8.187613487243652
    5. ' pt' → logprob: -11.062613487243652
    6. '   ' → logprob: -11.187613487243652
    7. 'test' → logprob: -11.687613487243652
    8. ' test' → logprob: -12.437613487243652
    9. '       ' → logprob: -12.687613487243652
    10. ' p' → logprob: -12.687613487243652

Token 614: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007943779928609729
    2. 'nd' → logprob: -8.000794410705566
    3. ',' → logprob: -9.375794410705566
    4. 'Point' → logprob: -9.625794410705566
    5. 'pp' → logprob: -9.625794410705566
    6. 'point' → logprob: -10.000794410705566
    7. '_point' → logprob: -10.125794410705566
    8. ')' → logprob: -10.625794410705566
    9. 'p' → logprob: -10.875794410705566
    10. ' point' → logprob: -11.125794410705566

Token 615: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.008688441477715969
    2. ' Point' → logprob: -4.758688449859619
    3. 'int' → logprob: -9.633687973022461
    4. '	Point' → logprob: -13.258687973022461
    5. ')' → logprob: -13.633687973022461
    6. 'p' → logprob: -13.758687973022461
    7. ' int' → logprob: -13.883687973022461
    8. '_point' → logprob: -14.008687973022461
    9. 'point' → logprob: -14.383687973022461
    10. '_Point' → logprob: -14.383687973022461

Token 616: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007648630067706108
    2. ')' → logprob: -4.882648468017578
    3. ' ,' → logprob: -10.382648468017578
    4. '   ' → logprob: -11.882648468017578
    5. '):' → logprob: -13.757648468017578
    6. 'p' → logprob: -14.632648468017578
    7. '):
' → logprob: -14.882648468017578
    8. ' )' → logprob: -14.882648468017578
    9. ',
' → logprob: -14.882648468017578
    10. '),' → logprob: -15.132648468017578

Token 617: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.13546082377433777
    2. ' b' → logprob: -2.26046085357666
    3. ')' → logprob: -5.88546085357666
    4. '   ' → logprob: -6.26046085357666
    5. 'p' → logprob: -6.63546085357666
    6. ' eps' → logprob: -6.76046085357666
    7. ' tolerance' → logprob: -6.88546085357666
    8. 'epsilon' → logprob: -6.88546085357666
    9. ' edges' → logprob: -7.01046085357666
    10. 'eps' → logprob: -7.13546085357666

Token 618: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015248565468937159
    2. ',' → logprob: -6.876524925231934
    3. ':' → logprob: -7.876524925231934
    4. '')' → logprob: -9.376524925231934
    5. ' )' → logprob: -11.126524925231934
    6. '):' → logprob: -12.376524925231934
    7. ',)' → logprob: -13.626524925231934
    8. ' ' → logprob: -14.001524925231934
    9. '   ' → logprob: -14.126524925231934
    10. '):
' → logprob: -14.126524925231934

Token 619: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0017715697176754475
    2. ' Point' → logprob: -6.376771450042725
    3. ')' → logprob: -9.626771926879883
    4. '	Point' → logprob: -13.876771926879883
    5. 'Optional' → logprob: -14.001771926879883
    6. 'List' → logprob: -14.751771926879883
    7. '_point' → logprob: -15.376771926879883
    8. '_Point' → logprob: -15.501771926879883
    9. 'point' → logprob: -15.626771926879883
    10. 'int' → logprob: -16.126771926879883

Token 620: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036612374242395163
    2. ',' → logprob: -5.628661155700684
    3. ' )' → logprob: -9.878661155700684
    4. '')' → logprob: -12.378661155700684
    5. ')->' → logprob: -13.128661155700684
    6. ',)' → logprob: -13.753661155700684
    7. '   ' → logprob: -14.128661155700684
    8. ' ,' → logprob: -14.503661155700684
    9. '`)' → logprob: -15.628661155700684
    10. ' ' → logprob: -15.753661155700684

Token 621: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.040273040533065796
    2. '->' → logprob: -3.9152729511260986
    3. ' ->' → logprob: -4.665273189544678
    4. ':' → logprob: -5.290273189544678
    5. ')->' → logprob: -5.915273189544678
    6. ',' → logprob: -6.290273189544678
    7. '   ' → logprob: -7.665273189544678
    8. ' )' → logprob: -11.04027271270752
    9. ' )->' → logprob: -12.04027271270752
    10. ']' → logprob: -12.16527271270752

Token 622: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.00622881343588233
    2. ' bool' → logprob: -5.131228923797607
    3. 'Optional' → logprob: -8.63122844696045
    4. 'float' → logprob: -10.75622844696045
    5. 'List' → logprob: -11.00622844696045
    6. 'int' → logprob: -11.13122844696045
    7. 'False' → logprob: -11.25622844696045
    8. 'None' → logprob: -11.75622844696045
    9. 'Point' → logprob: -11.88122844696045
    10. 'True' → logprob: -12.13122844696045

Token 623: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017001720843836665
    2. ':
' → logprob: -6.876700401306152
    3. '):' → logprob: -8.001700401306152
    4. '       ' → logprob: -8.876700401306152
    5. '   ' → logprob: -10.001700401306152
    6. '<|end|>' → logprob: -10.001700401306152
    7. ',' → logprob: -10.376700401306152
    8. '():' → logprob: -10.376700401306152
    9. ')' → logprob: -11.376700401306152
    10. ':return' → logprob: -11.751700401306152

Token 624: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007240279112011194
    2. '   ' → logprob: -6.132240295410156
    3. ' ' → logprob: -7.007240295410156
    4. ' x' → logprob: -7.007240295410156
    5. '    ' → logprob: -7.257240295410156
    6. ' #' → logprob: -7.257240295410156
    7. ' (' → logprob: -7.382240295410156
    8. ',' → logprob: -8.507240295410156
    9. ' return' → logprob: -9.007240295410156
    10. ' 
' → logprob: -9.007240295410156

Token 625: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.25980544090271
    2. 'count' → logprob: -1.50980544090271
    3. '#' (adapté à ' #') → logprob: -1.88480544090271
    4. 'if' → logprob: -2.00980544090271
    5. 'n' → logprob: -2.50980544090271
    6. 'cross' → logprob: -2.88480544090271
    7. 'cnt' → logprob: -3.00980544090271
    8. '       ' → logprob: -4.634805679321289
    9. 'x' → logprob: -5.634805679321289
    10. '   ' → logprob: -5.634805679321289

Token 626: ' We' (ID: 1416)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.600945234298706
    2. 'if' → logprob: -1.100945234298706
    3. '#' → logprob: -2.850945234298706
    4. 'n' → logprob: -3.725945234298706
    5. 'cross' → logprob: -3.850945234298706
    6. '       ' → logprob: -5.475945472717285
    7. '   ' → logprob: -6.100945472717285
    8. 'count' → logprob: -6.350945472717285
    9. 'x' → logprob: -6.350945472717285
    10. 'return' → logprob: -7.225945472717285

Token 627: ' check' (ID: 2371)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16971130669116974
    2. '       ' → logprob: -2.6697113513946533
    3. 'def' → logprob: -2.7947113513946533
    4. '    ' → logprob: -5.044711112976074
    5. ' def' → logprob: -5.919711112976074
    6. ' need' → logprob: -5.919711112976074
    7. ' will' → logprob: -6.794711112976074
    8. 'continue' → logprob: -6.794711112976074
    9. ' continue' → logprob: -7.419711112976074
    10. 'are' → logprob: -7.544711112976074

Token 628: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2266179323196411
    2. 'inter' → logprob: -1.9766179323196411
    3. 'count' → logprob: -4.226617813110352
    4. ' if' → logprob: -4.226617813110352
    5. 'for' → logprob: -4.351617813110352
    6. 'inside' → logprob: -4.851617813110352
    7. '   ' → logprob: -5.851617813110352
    8. 'n' → logprob: -5.851617813110352
    9. 'cross' → logprob: -6.351617813110352
    10. '       ' → logprob: -6.726617813110352

Token 629: ' segment' (ID: 14806)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5826007127761841
    2. 'all' → logprob: -1.832600712776184
    3. 'the' → logprob: -2.2076005935668945
    4. ' all' → logprob: -3.0826005935668945
    5. ' the' → logprob: -3.3326005935668945
    6. 'any' → logprob: -3.8326005935668945
    7. 'both' → logprob: -3.8326005935668945
    8. ' any' → logprob: -4.0826005935668945
    9. ' both' → logprob: -4.4576005935668945
    10. ' a' → logprob: -5.3326005935668945

Token 630: ' ab' (ID: 692)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08267412334680557
    2. ' a' → logprob: -3.207674026489258
    3. 'ab' → logprob: -3.957674026489258
    4. 'inter' → logprob: -5.207674026489258
    5. 'from' → logprob: -5.332674026489258
    6. ' ab' → logprob: -5.707674026489258
    7. ' intersects' → logprob: -6.082674026489258
    8. ' from' → logprob: -6.957674026489258
    9. ' intersect' → logprob: -7.207674026489258
    10. '(a' → logprob: -7.707674026489258

Token 631: ' is' (ID: 382)
  Prédit: ' intersects'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intersects' → logprob: -0.17225117981433868
    2. ' is' → logprob: -2.9222512245178223
    3. ' crosses' → logprob: -3.1722512245178223
    4. 'inter' → logprob: -3.1722512245178223
    5. ' lies' → logprob: -4.422251224517822
    6. 'is' → logprob: -5.297251224517822
    7. '   ' → logprob: -7.547251224517822
    8. ' intersect' → logprob: -7.672251224517822
    9. ' has' → logprob: -8.047250747680664
    10. ' ' → logprob: -8.047250747680664

Token 632: ' entirely' (ID: 19449)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.88276606798172
    2. 'com' → logprob: -1.1327660083770752
    3. 'inside' → logprob: -1.6327660083770752
    4. 'fully' → logprob: -2.757766008377075
    5. 'strict' → logprob: -5.382766246795654
    6. 'all' → logprob: -8.507765769958496
    7. 'any' → logprob: -9.007765769958496
    8. 'on' → logprob: -9.007765769958496
    9. ' entirely' → logprob: -9.257765769958496
    10. 'contained' → logprob: -9.257765769958496

Token 633: ' inside' (ID: 6772)
  Prédit: 'inside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inside' → logprob: -0.007449256256222725
    2. 'within' → logprob: -5.507449150085449
    3. ' inside' → logprob: -6.132449150085449
    4. 'contained' → logprob: -6.757449150085449
    5. 'outside' → logprob: -11.25744915008545
    6. ' within' → logprob: -11.38244915008545
    7. 'Inside' → logprob: -13.00744915008545
    8. '_inside' → logprob: -13.13244915008545
    9. 'strict' → logprob: -13.75744915008545
    10. ' داخل' → logprob: -14.50744915008545

Token 634: ' or' (ID: 503)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.13173508644104
    2. ' polygon' → logprob: -1.38173508644104
    3. 'the' → logprob: -1.38173508644104
    4. 'polygon' → logprob: -1.75673508644104
    5. '       ' → logprob: -6.756734848022461
    6. '(p' → logprob: -7.506734848022461
    7. ' a' → logprob: -7.756734848022461
    8. 'a' → logprob: -8.756734848022461
    9. '_polygon' → logprob: -9.006734848022461
    10. ')' → logprob: -10.131734848022461

Token 635: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.0726822167634964
    2. ' on' → logprob: -2.9476821422576904
    3. 'outside' → logprob: -4.3226823806762695
    4. 'equal' → logprob: -6.8226823806762695
    5. 'not' → logprob: -7.0726823806762695
    6. ' outside' → logprob: -7.3226823806762695
    7. 'def' → logprob: -8.69768238067627
    8. 'polygon' → logprob: -8.94768238067627
    9. ' equal' → logprob: -9.07268238067627
    10. '   ' → logprob: -9.19768238067627

Token 636: ' polygon' (ID: 65081)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.2068222165107727
    2. ' the' → logprob: -1.706822156906128
    3. 'polygon' → logprob: -5.581822395324707
    4. ' polygon' → logprob: -6.456822395324707
    5. '   ' → logprob: -10.956822395324707
    6. 'boundary' → logprob: -11.456822395324707
    7. 'a' → logprob: -11.831822395324707
    8. '_polygon' → logprob: -11.956822395324707
    9. '
' → logprob: -12.331822395324707
    10. ' a' → logprob: -12.581822395324707

Token 637: ' boundary' (ID: 35021)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27589112520217896
    2. '       ' → logprob: -2.025891065597534
    3. '.' → logprob: -2.900891065597534
    4. '
' → logprob: -4.525891304016113
    5. ':' → logprob: -4.775891304016113
    6. ' (' → logprob: -5.150891304016113
    7. ' polygon' → logprob: -5.400891304016113
    8. ',' → logprob: -5.525891304016113
    9. 'polygon' → logprob: -5.900891304016113
    10. ' edges' → logprob: -5.900891304016113

Token 638: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0601656399667263
    2. '.' → logprob: -3.1851656436920166
    3. ':' → logprob: -4.9351654052734375
    4. ',' → logprob: -5.5601654052734375
    5. '   ' → logprob: -6.8101654052734375
    6. ':
' → logprob: -7.0601654052734375
    7. ' by' → logprob: -7.0601654052734375
    8. ' (' → logprob: -7.3101654052734375
    9. ' or' → logprob: -7.5601654052734375
    10. '.
' → logprob: -7.6851654052734375

Token 639: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01606428250670433
    2. ' 
' → logprob: -5.516064167022705
    3. '   ' → logprob: -5.766064167022705
    4. '        
' → logprob: -5.891064167022705
    5. ' ' → logprob: -6.516064167022705
    6. '
' → logprob: -6.766064167022705
    7. '\' → logprob: -7.516064167022705
    8. ',' → logprob: -7.891064167022705
    9. '    ' → logprob: -8.141064643859863
    10. '\n' → logprob: -8.391064643859863

Token 640: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026815030723810196
    2. 'def' → logprob: -4.401814937591553
    3. 'n' → logprob: -4.526814937591553
    4. '#' (adapté à ' #') → logprob: -7.276814937591553
    5. '   ' → logprob: -7.401814937591553
    6. 'x' → logprob: -7.401814937591553
    7. 'if' → logprob: -8.151815414428711
    8. 'import' → logprob: -8.526815414428711
    9. 'count' → logprob: -8.901815414428711
    10. 'from' → logprob: -9.026815414428711

Token 641: ' Because' (ID: 13602)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.3110969066619873
    2. 'def' → logprob: -1.3110969066619873
    3. '       ' → logprob: -1.8110969066619873
    4. 'if' → logprob: -1.8110969066619873
    5. '   ' → logprob: -2.9360969066619873
    6. '#' → logprob: -3.3110969066619873
    7. 'cross' → logprob: -3.6860969066619873
    8. 'inside' → logprob: -5.186097145080566
    9. 'x' → logprob: -5.936097145080566
    10. 'cnt' → logprob: -6.061097145080566

Token 642: ' polygon' (ID: 65081)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.8607309460639954
    2. 'polygon' → logprob: -0.9857309460639954
    3. ' the' → logprob: -2.6107308864593506
    4. '#' → logprob: -2.9857308864593506
    5. ' polygon' → logprob: -4.23573112487793
    6. 'import' → logprob: -4.36073112487793
    7. '       ' → logprob: -4.61073112487793
    8. 'def' → logprob: -4.86073112487793
    9. 'this' → logprob: -4.98573112487793
    10. '...' → logprob: -5.48573112487793

Token 643: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.17567063868045807
    2. 'is' → logprob: -2.175670623779297
    3. 's' → logprob: -3.675670623779297
    4. ' may' → logprob: -4.925670623779297
    5. 'vertices' → logprob: -6.300670623779297
    6. ' edges' → logprob: -6.425670623779297
    7. ' can' → logprob: -6.550670623779297
    8. '#' → logprob: -6.675670623779297
    9. 'may' → logprob: -6.925670623779297
    10. ' points' → logprob: -7.050670623779297

Token 644: ' convex' (ID: 142423)
  Prédit: 'conv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conv' → logprob: -0.20006968080997467
    2. ' convex' → logprob: -1.8250696659088135
    3. 'ass' → logprob: -4.575069904327393
    4. ' assumed' → logprob: -5.450069904327393
    5. 'simple' → logprob: -6.075069904327393
    6. 'given' → logprob: -7.575069904327393
    7. 'not' → logprob: -7.575069904327393
    8. 'a' → logprob: -7.575069904327393
    9. ' simple' → logprob: -7.825069904327393
    10. 'Conv' → logprob: -7.950069904327393

Token 645: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008699782192707062
    2. ',
' → logprob: -4.883699893951416
    3. '       ' → logprob: -7.133699893951416
    4. '.' → logprob: -8.883699417114258
    5. '<|end|>' → logprob: -9.633699417114258
    6. ' and' → logprob: -10.383699417114258
    7. ' ,' → logprob: -11.133699417114258
    8. ':' → logprob: -11.133699417114258
    9. '   ' → logprob: -12.383699417114258
    10. '        
' → logprob: -12.633699417114258

Token 646: 'conv' (ID: 26093)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.19900645315647125
    2. ')' → logprob: -2.1990065574645996
    3. ',' → logprob: -3.4490065574645996
    4. '       ' → logprob: -4.6990065574646
    5. ' ),' → logprob: -4.8240065574646
    6. ' and' → logprob: -4.9490065574646
    7. 'and' → logprob: -6.1990065574646
    8. '           ' → logprob: -6.8240065574646
    9. ' )' → logprob: -7.1990065574646
    10. 'the' → logprob: -7.1990065574646

Token 647: 'ex' (ID: 490)
  Prédit: 'ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -1.5213274309644476e-05
    2. 'exp' → logprob: -11.500015258789062
    3. '
' → logprob: -13.500015258789062
    4. 'exc' → logprob: -13.625015258789062
    5. '```' → logprob: -14.125015258789062
    6. ')' → logprob: -15.125015258789062
    7. 'exit' → logprob: -15.125015258789062
    8. 'ext' → logprob: -15.375015258789062
    9. '**' → logprob: -15.375015258789062
    10. '   ' → logprob: -15.875015258789062

Token 648: ' hull' (ID: 74912)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.5754511952400208
    2. ')' → logprob: -1.200451135635376
    3. ' polygon' → logprob: -2.450451135635376
    4. ' hull' → logprob: -4.325451374053955
    5. ',' → logprob: -4.575451374053955
    6. '   ' → logprob: -4.950451374053955
    7. ' and' → logprob: -5.200451374053955
    8. 'def' → logprob: -5.575451374053955
    9. 'polygon' → logprob: -6.450451374053955
    10. '       ' → logprob: -6.700451374053955

Token 649: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.008960926905274391
    2. ')' → logprob: -5.133960723876953
    3. '       ' → logprob: -6.008960723876953
    4. '),
' → logprob: -8.883960723876953
    5. ' or' → logprob: -8.883960723876953
    6. ' is' → logprob: -10.008960723876953
    7. ',' → logprob: -10.008960723876953
    8. ' ),' → logprob: -10.008960723876953
    9. ' and' → logprob: -10.633960723876953
    10. ')
' → logprob: -11.008960723876953

Token 650: ' check' (ID: 2371)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2784901559352875
    2. 'n' → logprob: -1.5284901857376099
    3. '#' → logprob: -4.77849006652832
    4. ' n' → logprob: -5.40349006652832
    5. 'return' → logprob: -5.52849006652832
    6. 'for' → logprob: -5.90349006652832
    7. 'def' → logprob: -6.02849006652832
    8. ' for' → logprob: -6.52849006652832
    9. '   ' → logprob: -7.02849006652832
    10. 'polygon' → logprob: -7.90349006652832

Token 651: ' segment' (ID: 14806)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.4240341186523438
    2. 'n' → logprob: -1.5490341186523438
    3. '   ' → logprob: -1.9240341186523438
    4. ' n' → logprob: -2.6740341186523438
    5. 'for' → logprob: -2.6740341186523438
    6. 'polygon' → logprob: -2.7990341186523438
    7. ' for' → logprob: -3.0490341186523438
    8. 'def' → logprob: -3.2990341186523438
    9. 'if' → logprob: -3.4240341186523438
    10. ' polygon' → logprob: -3.7990341186523438

Token 652: ' is' (ID: 382)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.47038814425468445
    2. 'for' → logprob: -1.7203881740570068
    3. ' for' → logprob: -2.220388174057007
    4. ' intersections' → logprob: -3.595388174057007
    5. '   ' → logprob: -4.595387935638428
    6. 'inside' → logprob: -4.845387935638428
    7. 'def' → logprob: -4.845387935638428
    8. 'intersection' → logprob: -5.095387935638428
    9. ' endpoints' → logprob: -5.720387935638428
    10. 'orientation' → logprob: -6.220387935638428

Token 653: ' inside' (ID: 6772)
  Prédit: 'inside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inside' → logprob: -0.48970869183540344
    2. 'all' → logprob: -1.239708662033081
    3. 'com' → logprob: -3.739708662033081
    4. 'ent' → logprob: -3.864708662033081
    5. 'not' → logprob: -4.36470890045166
    6. 'on' → logprob: -4.86470890045166
    7. ' all' → logprob: -4.86470890045166
    8. '   ' → logprob: -5.36470890045166
    9. 'fully' → logprob: -5.48970890045166
    10. 'either' → logprob: -5.48970890045166

Token 654: ' polygon' (ID: 65081)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7780590057373047
    2. 'n' → logprob: -1.4030590057373047
    3. '       ' → logprob: -2.0280590057373047
    4. '   ' → logprob: -2.1530590057373047
    5. ' for' → logprob: -3.4030590057373047
    6. 'polygon' → logprob: -5.278059005737305
    7. 'def' → logprob: -5.653059005737305
    8. 'or' → logprob: -6.903059005737305
    9. ',' → logprob: -7.153059005737305
    10. ' n' → logprob: -7.403059005737305

Token 655: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029974710196256638
    2. '.' → logprob: -4.904974937438965
    3. ',' → logprob: -5.029974937438965
    4. ' or' → logprob: -5.029974937438965
    5. ' if' → logprob: -5.779974937438965
    6. ':' → logprob: -6.779974937438965
    7. 'or' → logprob: -6.904974937438965
    8. 'def' → logprob: -7.279974937438965
    9. 'if' → logprob: -7.404974937438965
    10. '<|end|>' → logprob: -8.029974937438965

Token 656: ':
' (ID: 734)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.0334482304751873
    2. ' all' → logprob: -3.5334482192993164
    3. 'for' → logprob: -5.783448219299316
    4. 'not' → logprob: -7.783448219299316
    5. ' for' → logprob: -9.408448219299316
    6. ' not' → logprob: -10.158448219299316
    7. 'Boundary' → logprob: -10.908448219299316
    8. '   ' → logprob: -11.033448219299316
    9. 'the' → logprob: -11.158448219299316
    10. 'every' → logprob: -12.408448219299316

Token 657: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015675919130444527
    2. ' for' → logprob: -7.751567363739014
    3. '   ' → logprob: -8.626567840576172
    4. ' all' → logprob: -8.876567840576172
    5. ' return' → logprob: -9.001567840576172
    6. 'import' → logprob: -9.126567840576172
    7. 'return' → logprob: -9.501567840576172
    8. ')' → logprob: -9.751567840576172
    9. '0' → logprob: -9.751567840576172
    10. '...' → logprob: -9.751567840576172

Token 658: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6061564683914185
    2. 'for' → logprob: -1.3561564683914185
    3. '       ' → logprob: -2.106156349182129
    4. ' all' → logprob: -2.981156349182129
    5. 'all' → logprob: -4.481156349182129
    6. 'n' → logprob: -4.606156349182129
    7. 'def' → logprob: -6.731156349182129
    8. ' n' → logprob: -7.231156349182129
    9. ' polygon' → logprob: -7.856156349182129
    10. 'polygon' → logprob: -8.231156349182129

Token 659: ' segment' (ID: 14806)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8293147683143616
    2. 'all' → logprob: -1.2043147087097168
    3. ' all' → logprob: -1.5793147087097168
    4. ' for' → logprob: -2.954314708709717
    5. '       ' → logprob: -5.829314708709717
    6. 'n' → logprob: -6.704314708709717
    7. 'def' → logprob: -7.079314708709717
    8. 'len' → logprob: -8.329315185546875
    9. '   ' → logprob: -8.954315185546875
    10. 'forall' → logprob: -10.204315185546875

Token 660: ' does' (ID: 2226)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.49904972314834595
    2. ' is' → logprob: -1.7490496635437012
    3. ' ab' → logprob: -2.124049663543701
    4. 'a' → logprob: -3.124049663543701
    5. ' endpoints' → logprob: -3.749049663543701
    6. ' ' → logprob: -5.374049663543701
    7. 'ab' → logprob: -5.499049663543701
    8. ' does' → logprob: -5.624049663543701
    9. 's' → logprob: -5.749049663543701
    10. ' can' → logprob: -5.999049663543701

Token 661: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.07889111340045929
    2. ' not' → logprob: -2.5788910388946533
    3. '_not' → logprob: -14.328890800476074
    4. 'n't' → logprob: -15.328890800476074
    5. '	not' → logprob: -15.328890800476074
    6. '   ' → logprob: -16.32889175415039
    7. '#' → logprob: -17.32889175415039
    8. '
' → logprob: -17.32889175415039
    9. ' ' → logprob: -17.32889175415039
    10. 'n' → logprob: -17.70389175415039

Token 662: ' cross' (ID: 8088)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.11685197055339813
    2. 'cross' → logprob: -2.241852045059204
    3. ' intersect' → logprob: -6.116851806640625
    4. ' cross' → logprob: -6.866851806640625
    5. 'proper' → logprob: -8.366851806640625
    6. 'go' → logprob: -8.491851806640625
    7. 'strict' → logprob: -8.991851806640625
    8. 'exit' → logprob: -9.866851806640625
    9. 'pass' → logprob: -9.991851806640625
    10. ' ' → logprob: -10.616851806640625

Token 663: ' outside' (ID: 7539)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.12148948013782501
    2. 'any' → logprob: -2.2464895248413086
    3. ' polygon' → logprob: -4.996489524841309
    4. 'polygon' → logprob: -6.996489524841309
    5. ' the' → logprob: -7.246489524841309
    6. 'the' → logprob: -9.496489524841309
    7. ' edges' → logprob: -9.621489524841309
    8. ' ' → logprob: -10.746489524841309
    9. 'boundary' → logprob: -11.246489524841309
    10. '   ' → logprob: -11.621489524841309

Token 664: ' polygon' (ID: 65081)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.2975198030471802
    2. ' of' → logprob: -1.7975198030471802
    3. ' polygon' → logprob: -3.1725196838378906
    4. 'the' → logprob: -3.2975196838378906
    5. ' any' → logprob: -5.172519683837891
    6. 'polygon' → logprob: -5.547519683837891
    7. 'of' → logprob: -6.422519683837891
    8. ' or' → logprob: -7.547519683837891
    9. '_polygon' → logprob: -7.672519683837891
    10. ' a' → logprob: -9.04751968383789

Token 665: ' edges' (ID: 22569)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06758692115545273
    2. '.' → logprob: -3.067586898803711
    3. ':' → logprob: -5.067586898803711
    4. ',' → logprob: -5.442586898803711
    5. '   ' → logprob: -5.817586898803711
    6. ' and' → logprob: -6.192586898803711
    7. ' or' → logprob: -6.442586898803711
    8. '<|end|>' → logprob: -7.942586898803711
    9. ' (' → logprob: -8.442586898803711
    10. ')' → logprob: -8.567586898803711

Token 666: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015416049398481846
    2. '<|end|>' → logprob: -5.265416145324707
    3. '.' → logprob: -5.640416145324707
    4. ',' → logprob: -5.640416145324707
    5. ' or' → logprob: -7.515416145324707
    6. ' and' → logprob: -7.515416145324707
    7. ':' → logprob: -7.515416145324707
    8. '<|end|>' → logprob: -7.640416145324707
    9. '   ' → logprob: -8.140416145324707
    10. '        
' → logprob: -8.890416145324707

Token 667: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.490809417096898e-05
    2. '   ' → logprob: -10.375055313110352
    3. 'n' → logprob: -12.125055313110352
    4. ',' → logprob: -12.250055313110352
    5. '        
' → logprob: -12.625055313110352
    6. 'import' → logprob: -13.625055313110352
    7. '           ' → logprob: -13.625055313110352
    8. ' ' → logprob: -14.375055313110352
    9. ' for' → logprob: -14.375055313110352
    10. '<|end|>' → logprob: -14.500055313110352

Token 668: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0045879608951509
    2. 'n' → logprob: -5.7545881271362305
    3. '   ' → logprob: -7.8795881271362305
    4. '#' (adapté à ' #') → logprob: -8.37958812713623
    5. 'polygon' → logprob: -8.75458812713623
    6. 'x' → logprob: -9.12958812713623
    7. ' n' → logprob: -9.62958812713623
    8. 'def' → logprob: -10.12958812713623
    9. ' if' → logprob: -10.12958812713623
    10. 'for' → logprob: -10.12958812713623

Token 669: ' Actually' (ID: 50557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3731273114681244
    2. 'for' → logprob: -2.2481272220611572
    3. 'def' → logprob: -2.6231272220611572
    4. '   ' → logprob: -2.9981272220611572
    5. '       ' → logprob: -3.4981272220611572
    6. 'cross' → logprob: -3.7481272220611572
    7. '#' → logprob: -3.8731272220611572
    8. 'if' → logprob: -5.998127460479736
    9. 'num' → logprob: -6.498127460479736
    10. 'count' → logprob: -7.123127460479736

Token 670: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26269546151161194
    2. 'n' → logprob: -2.262695550918579
    3. 'def' → logprob: -3.262695550918579
    4. ' for' → logprob: -4.1376953125
    5. ',' → logprob: -4.2626953125
    6. ' if' → logprob: -4.3876953125
    7. 'for' → logprob: -5.1376953125
    8. 'polygon' → logprob: -5.1376953125
    9. 'import' → logprob: -5.3876953125
    10. ' polygon' → logprob: -5.3876953125

Token 671: ' for' (ID: 395)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6994649767875671
    2. 'n' → logprob: -1.949465036392212
    3. ' for' → logprob: -2.199465036392212
    4. ' if' → logprob: -3.324465036392212
    5. '       ' → logprob: -3.449465036392212
    6. '   ' → logprob: -3.574465036392212
    7. ' return' → logprob: -3.574465036392212
    8. ' def' → logprob: -3.824465036392212
    9. 'def' → logprob: -3.949465036392212
    10. 'for' → logprob: -3.949465036392212

Token 672: ' convex' (ID: 142423)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.9932113289833069
    2. 'conv' → logprob: -1.368211269378662
    3. 'i' → logprob: -2.243211269378662
    4. ' p' → logprob: -2.868211269378662
    5. ' convex' → logprob: -2.868211269378662
    6. 'all' → logprob: -3.868211269378662
    7. ' all' → logprob: -3.868211269378662
    8. 'point' → logprob: -3.993211269378662
    9. 'a' → logprob: -4.243211269378662
    10. 'polygon' → logprob: -4.368211269378662

Token 673: ' polygon' (ID: 65081)
  Prédit: ' polygons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' polygons' → logprob: -0.30149567127227783
    2. ' polygon' → logprob: -1.4264956712722778
    3. 'polygon' → logprob: -4.176495552062988
    4. 'pol' → logprob: -5.426495552062988
    5. ' pol' → logprob: -9.051495552062988
    6. '_polygon' → logprob: -9.176495552062988
    7. ' hull' → logprob: -9.676495552062988
    8. '
' → logprob: -10.926495552062988
    9. ',' → logprob: -11.176495552062988
    10. 'poly' → logprob: -11.301495552062988

Token 674: ' segment' (ID: 14806)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019874578341841698
    2. ' the' → logprob: -4.269874572753906
    3. ' we' → logprob: -6.394874572753906
    4. ',
' → logprob: -6.519874572753906
    5. 'the' → logprob: -7.394874572753906
    6. ':' → logprob: -7.894874572753906
    7. '.' → logprob: -8.394874572753906
    8. ' it' → logprob: -8.769874572753906
    9. ' it's' → logprob: -8.894874572753906
    10. ' ,' → logprob: -9.019874572753906

Token 675: ' ab' (ID: 692)
  Prédit: ' lies'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lies' → logprob: -0.7710158228874207
    2. ' is' → logprob: -1.5210158824920654
    3. 'lies' → logprob: -2.7710158824920654
    4. 'is' → logprob: -3.2710158824920654
    5. ' stays' → logprob: -3.5210158824920654
    6. 's' → logprob: -3.5210158824920654
    7. 'def' → logprob: -3.5210158824920654
    8. '   ' → logprob: -3.8960158824920654
    9. ' can' → logprob: -3.8960158824920654
    10. ' does' → logprob: -4.146015644073486

Token 676: ' inside' (ID: 6772)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.20758414268493652
    2. ' lies' → logprob: -2.2075841426849365
    3. 'is' → logprob: -3.9575841426849365
    4. ',' → logprob: -3.9575841426849365
    5. ' must' → logprob: -4.957584381103516
    6. ' should' → logprob: -5.332584381103516
    7. ' can' → logprob: -5.457584381103516
    8. '   ' → logprob: -5.707584381103516
    9. ' does' → logprob: -5.832584381103516
    10. 's' → logprob: -5.957584381103516

Token 677: ' iff' (ID: 165577)
  Prédit: ' polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' polygon' → logprob: -0.5054610371589661
    2. 'polygon' → logprob: -1.3804609775543213
    3. ' the' → logprob: -2.2554609775543213
    4. 'the' → logprob: -4.0054612159729
    5. ' or' → logprob: -4.7554612159729
    6. ' all' → logprob: -5.3804612159729
    7. '_polygon' → logprob: -6.2554612159729
    8. ' any' → logprob: -6.5054612159729
    9. ' is' → logprob: -6.7554612159729
    10. ' a' → logprob: -7.0054612159729

Token 678: ' both' (ID: 2973)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.40040916204452515
    2. ' all' → logprob: -1.40040922164917
    3. 'for' → logprob: -2.65040922164917
    4. ' for' → logprob: -4.40040922164917
    5. 'every' → logprob: -8.900408744812012
    6. 'forall' → logprob: -9.525408744812012
    7. 'the' → logprob: -9.900408744812012
    8. 'not' → logprob: -10.150408744812012
    9. 'a' → logprob: -10.150408744812012
    10. '
' → logprob: -10.150408744812012

Token 679: ' endpoints' (ID: 76454)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005813606549054384
    2. ' a' → logprob: -5.3808135986328125
    3. 'points' → logprob: -7.1308135986328125
    4. ' points' → logprob: -7.8808135986328125
    5. 'point' → logprob: -12.255813598632812
    6. 'p' → logprob: -13.255813598632812
    7. ' endpoints' → logprob: -13.255813598632812
    8. ' is' → logprob: -14.130813598632812
    9. 'inside' → logprob: -14.130813598632812
    10. ' in' → logprob: -14.630813598632812

Token 680: ' inside' (ID: 6772)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.0849972739815712
    2. 'are' → logprob: -2.7099971771240234
    3. ' in' → logprob: -4.709997177124023
    4. ' lie' → logprob: -5.834997177124023
    5. 'in' → logprob: -5.959997177124023
    6. ' a' → logprob: -9.334997177124023
    7. ' inside' → logprob: -9.584997177124023
    8. ' and' → logprob: -9.834997177124023
    9. 'inside' → logprob: -10.084997177124023
    10. ' belong' → logprob: -10.334997177124023

Token 681: ' polygon' (ID: 65081)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.29962271451950073
    2. ' and' → logprob: -1.6746227741241455
    3. 'and' → logprob: -3.5496227741241455
    4. ' polygon' → logprob: -3.7996227741241455
    5. 'or' → logprob: -4.549622535705566
    6. 'polygon' → logprob: -5.424622535705566
    7. ' (' → logprob: -6.299622535705566
    8. ')' → logprob: -6.799622535705566
    9. '.' → logprob: -7.049622535705566
    10. ',' → logprob: -7.299622535705566

Token 682: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2720605731010437
    2. 'and' → logprob: -1.6470606327056885
    3. ' or' → logprob: -3.2720606327056885
    4. '       ' → logprob: -5.522060394287109
    5. 'or' → logprob: -6.147060394287109
    6. ',' → logprob: -6.772060394287109
    7. ' (' → logprob: -8.52206039428711
    8. '.' → logprob: -10.14706039428711
    9. '
' → logprob: -10.64706039428711
    10. ')' → logprob: -11.14706039428711

Token 683: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.44612282514572144
    2. 'and' → logprob: -1.1961228847503662
    3. ' or' → logprob: -3.571122884750366
    4. '       ' → logprob: -3.821122884750366
    5. 'or' → logprob: -5.946122646331787
    6. '#' → logprob: -6.321122646331787
    7. '<|end|>' → logprob: -6.696122646331787
    8. '.' → logprob: -7.571122646331787
    9. 'return' → logprob: -8.321123123168945
    10. ',' → logprob: -8.571123123168945

Token 684: ' line' (ID: 2543)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.22981956601142883
    2. ' all' → logprob: -1.9798195362091064
    3. 'not' → logprob: -3.1048195362091064
    4. ' not' → logprob: -4.6048197746276855
    5. 'for' → logprob: -5.6048197746276855
    6. '       ' → logprob: -5.8548197746276855
    7. 'the' → logprob: -6.2298197746276855
    8. 'Boundary' → logprob: -6.4798197746276855
    9. 'no' → logprob: -7.3548197746276855
    10. '#' → logprob: -7.4798197746276855

Token 685: ' doesn't' (ID: 8740)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1985793113708496
    2. 'segment' → logprob: -1.8235793113708496
    3. '<|end|>' → logprob: -1.8235793113708496
    4. '_segment' → logprob: -2.4485793113708496
    5. '   ' → logprob: -2.8235793113708496
    6. ' ' → logprob: -2.8235793113708496
    7. 's' → logprob: -2.9485793113708496
    8. 'segments' → logprob: -3.4485793113708496
    9. '_segments' → logprob: -3.5735793113708496
    10. ' segments' → logprob: -5.07357931137085

Token 686: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.14084991812705994
    2. ' cross' → logprob: -2.6408498287200928
    3. 'inter' → logprob: -2.8908498287200928
    4. ' intersect' → logprob: -5.515850067138672
    5. 'pass' → logprob: -9.390850067138672
    6. 'exit' → logprob: -9.390850067138672
    7. ' pass' → logprob: -9.765850067138672
    8. 'go' → logprob: -9.765850067138672
    9. 'strict' → logprob: -9.765850067138672
    10. ' go' → logprob: -10.140850067138672

Token 687: ' outside' (ID: 7539)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.566339910030365
    2. ' polygon' → logprob: -1.4413399696350098
    3. 'any' → logprob: -2.1913399696350098
    4. 'polygon' → logprob: -3.0663399696350098
    5. ' the' → logprob: -4.06633996963501
    6. ' edges' → logprob: -4.31633996963501
    7. 'the' → logprob: -5.31633996963501
    8. 'edges' → logprob: -7.19133996963501
    9. 'poly' → logprob: -8.316339492797852
    10. 'boundary' → logprob: -8.316339492797852

Token 688: '
' (ID: 198)
  Prédit: ' polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' polygon' → logprob: -0.6459071636199951
    2. 'polygon' → logprob: -1.0209071636199951
    3. ' edges' → logprob: -2.770907163619995
    4. '_polygon' → logprob: -4.145907402038574
    5. ' the' → logprob: -4.520907402038574
    6. 'edges' → logprob: -4.520907402038574
    7. 'the' → logprob: -5.645907402038574
    8. ' of' → logprob: -5.895907402038574
    9. 'boundary' → logprob: -6.395907402038574
    10. '.' → logprob: -6.520907402038574

Token 689: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1203962191939354
    2. '.' → logprob: -2.745396137237549
    3. ' or' → logprob: -4.245396137237549
    4. ' edges' → logprob: -5.495396137237549
    5. 'points' → logprob: -5.495396137237549
    6. ' points' → logprob: -5.620396137237549
    7. ' (' → logprob: -5.745396137237549
    8. ' polygon' → logprob: -5.870396137237549
    9. '   ' → logprob: -6.245396137237549
    10. '#' → logprob: -6.370396137237549

Token 690: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.695154070854187
    2. 'n' → logprob: -1.570154070854187
    3. '#' (adapté à ' #') → logprob: -2.0701541900634766
    4. 'def' → logprob: -2.5701541900634766
    5. '   ' → logprob: -3.9451541900634766
    6. 'return' → logprob: -3.9451541900634766
    7. 'from' → logprob: -4.070154190063477
    8. 'if' → logprob: -4.570154190063477
    9. 'for' → logprob: -4.820154190063477
    10. ' if' → logprob: -5.945154190063477

Token 691: ' But' (ID: 3072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024569010362029076
    2. ' if' → logprob: -5.149569034576416
    3. 'def' → logprob: -5.274569034576416
    4. 'import' → logprob: -5.774569034576416
    5. '   ' → logprob: -6.024569034576416
    6. '#' → logprob: -6.024569034576416
    7. 'n' → logprob: -6.774569034576416
    8. 'if' → logprob: -6.899569034576416
    9. 'from' → logprob: -7.399569034576416
    10. '
' → logprob: -7.649569034576416

Token 692: ' "' (ID: 392)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.9483925104141235
    2. '       ' → logprob: -2.073392391204834
    3. ' for' → logprob: -2.573392391204834
    4. 'not' → logprob: -2.698392391204834
    5. ' both' → logprob: -3.573392391204834
    6. '   ' → logprob: -3.698392391204834
    7. ' the' → logprob: -3.698392391204834
    8. ' polygon' → logprob: -3.823392391204834
    9. ' since' → logprob: -3.948392391204834
    10. 'import' → logprob: -4.073392391204834

Token 693: 'the' (ID: 3086)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9306695461273193
    2. '       ' → logprob: -1.5556695461273193
    3. 'import' → logprob: -2.4306695461273193
    4. '#' → logprob: -2.6806695461273193
    5. 'return' → logprob: -3.1806695461273193
    6. 'from' → logprob: -3.3056695461273193
    7. '"' → logprob: -3.4306695461273193
    8. 'a' → logprob: -3.9306695461273193
    9. ' def' → logprob: -4.180669784545898
    10. ' a' → logprob: -4.430669784545898

Token 694: ' line' (ID: 2543)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -1.3988497257232666
    2. ' rest' → logprob: -1.8988497257232666
    3. ' polygon' → logprob: -1.8988497257232666
    4. 'polygon' → logprob: -2.2738497257232666
    5. ' segment' → logprob: -2.6488497257232666
    6. '"' → logprob: -3.1488497257232666
    7. 'segment' → logprob: -3.2738497257232666
    8. 'def' → logprob: -3.5238497257232666
    9. 'rest' → logprob: -4.1488494873046875
    10. 'code' → logprob: -4.3988494873046875

Token 695: ' between' (ID: 2870)
  Prédit: ' segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.3723660409450531
    2. ' is' → logprob: -2.497365951538086
    3. 'segment' → logprob: -2.622365951538086
    4. ' does' → logprob: -3.497365951538086
    5. '"' → logprob: -3.497365951538086
    6. ' continues' → logprob: -4.122365951538086
    7. ' passes' → logprob: -4.622365951538086
    8. ' segments' → logprob: -4.747365951538086
    9. ' intersects' → logprob: -4.747365951538086
    10. ' ab' → logprob: -4.872365951538086

Token 696: ' any' (ID: 1062)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07088582217693329
    2. ' a' → logprob: -2.6958858966827393
    3. ' the' → logprob: -8.07088565826416
    4. 'the' → logprob: -8.57088565826416
    5. 'points' → logprob: -8.69588565826416
    6. ' points' → logprob: -9.19588565826416
    7. ' both' → logprob: -9.44588565826416
    8. 'both' → logprob: -9.82088565826416
    9. 'p' → logprob: -11.19588565826416
    10. ' p' → logprob: -12.57088565826416

Token 697: ' two' (ID: 1920)
  Prédit: ' two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' two' → logprob: -0.3514232337474823
    2. 'two' → logprob: -1.3514232635498047
    3. 'points' → logprob: -4.351423263549805
    4. ' points' → logprob: -4.726423263549805
    5. ' ' → logprob: -5.101423263549805
    6. 'point' → logprob: -6.226423263549805
    7. ' point' → logprob: -6.226423263549805
    8. 'a' → logprob: -6.726423263549805
    9. 'segment' → logprob: -7.351423263549805
    10. ' segment' → logprob: -7.601423263549805

Token 698: ' villages' (ID: 49877)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.2543332576751709
    2. ' points' → logprob: -1.504333257675171
    3. 'vertices' → logprob: -6.37933349609375
    4. ' vertices' → logprob: -8.25433349609375
    5. ' polygon' → logprob: -9.87933349609375
    6. 'polygon' → logprob: -9.87933349609375
    7. '	points' → logprob: -10.00433349609375
    8. ' ' → logprob: -10.12933349609375
    9. '_points' → logprob: -10.37933349609375
    10. 'p' → logprob: -10.50433349609375

Token 699: ' does' (ID: 2226)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6185055375099182
    2. ' is' → logprob: -1.2435054779052734
    3. ' "' → logprob: -2.8685054779052734
    4. ' of' → logprob: -3.7435054779052734
    5. 'is' → logprob: -3.7435054779052734
    6. ' in' → logprob: -4.368505477905273
    7. 'a' → logprob: -4.493505477905273
    8. ' on' → logprob: -5.368505477905273
    9. ' that' → logprob: -5.493505477905273
    10. ' inside' → logprob: -5.493505477905273

Token 700: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.20143896341323853
    2. ' not' → logprob: -1.7014389038085938
    3. 'n't' → logprob: -11.451438903808594
    4. '   ' → logprob: -11.576438903808594
    5. ' ' → logprob: -14.326438903808594
    6. '       ' → logprob: -14.451438903808594
    7. 'in' → logprob: -14.576438903808594
    8. '```' → logprob: -14.576438903808594
    9. '"' → logprob: -14.701438903808594
    10. '	not' → logprob: -14.951438903808594

Token 701: ' pass' (ID: 1853)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.7540667653083801
    2. 'go' → logprob: -1.7540667057037354
    3. ' go' → logprob: -2.5040667057037354
    4. ' lie' → logprob: -2.6290667057037354
    5. 'lie' → logprob: -2.7540667057037354
    6. 'exit' → logprob: -3.5040667057037354
    7. ' cross' → logprob: -3.6290667057037354
    8. 'inter' → logprob: -3.7540667057037354
    9. 'leave' → logprob: -4.1290669441223145
    10. 'extend' → logprob: -4.3790669441223145

Token 702: ' outside' (ID: 7539)
  Prédit: 'through'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'through' → logprob: -0.43764787912368774
    2. ' through' → logprob: -1.312647819519043
    3. 'outside' → logprob: -2.562647819519043
    4. ' outside' → logprob: -4.937647819519043
    5. '   ' → logprob: -7.562647819519043
    6. ' ' → logprob: -8.812647819519043
    7. '       ' → logprob: -9.187647819519043
    8. ')' → logprob: -10.437647819519043
    9. 'out' → logprob: -10.437647819519043
    10. '    ' → logprob: -10.562647819519043

Token 703: '"
' (ID: 1092)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.11295498162508011
    2. 'the' → logprob: -2.362955093383789
    3. ' polygon' → logprob: -4.612955093383789
    4. ' of' → logprob: -6.612955093383789
    5. '"' → logprob: -7.112955093383789
    6. 'polygon' → logprob: -7.737955093383789
    7. ' a' → logprob: -9.612955093383789
    8. 'a' → logprob: -10.487955093383789
    9. 'of' → logprob: -11.237955093383789
    10. ' "' → logprob: -11.987955093383789

Token 704: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02588266134262085
    2. '.' → logprob: -4.275882720947266
    3. ':' → logprob: -6.150882720947266
    4. '<|end|>' → logprob: -6.150882720947266
    5. ' or' → logprob: -6.400882720947266
    6. ',' → logprob: -6.525882720947266
    7. ')' → logprob: -7.275882720947266
    8. '   ' → logprob: -7.275882720947266
    9. '"' → logprob: -7.275882720947266
    10. '#' → logprob: -7.775882720947266

Token 705: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9913312196731567
    2. ')' → logprob: -1.4913312196731567
    3. '.' → logprob: -2.116331100463867
    4. '   ' → logprob: -2.366331100463867
    5. ':' → logprob: -2.491331100463867
    6. '"' → logprob: -3.116331100463867
    7. ',' → logprob: -4.116331100463867
    8. '):' → logprob: -4.116331100463867
    9. ' and' → logprob: -5.491331100463867
    10. ' ' → logprob: -5.616331100463867

Token 706: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17178012430667877
    2. ' if' → logprob: -2.6717801094055176
    3. '   ' → logprob: -2.7967801094055176
    4. '#' → logprob: -5.046780109405518
    5. 'if' → logprob: -5.296780109405518
    6. '
' → logprob: -5.421780109405518
    7. 'return' → logprob: -6.421780109405518
    8. ' return' → logprob: -6.796780109405518
    9. ',' → logprob: -6.921780109405518
    10. ')' → logprob: -6.921780109405518

Token 707: ' check' (ID: 2371)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49983838200569153
    2. 'def' → logprob: -2.874838352203369
    3. ' def' → logprob: -2.874838352203369
    4. ' ' → logprob: -3.124838352203369
    5. ' continue' → logprob: -3.124838352203369
    6. ' assume' → logprob: -3.124838352203369
    7. ' can' → logprob: -3.249838352203369
    8. ')' → logprob: -3.749838352203369
    9. ' need' → logprob: -4.374838352203369
    10. ' check' → logprob: -4.749838352203369

Token 708: ' line' (ID: 2543)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0381810665130615
    2. ' if' → logprob: -1.5381810665130615
    3. '       ' → logprob: -1.5381810665130615
    4. 'for' → logprob: -2.5381810665130615
    5. '   ' → logprob: -3.0381810665130615
    6. 'inside' → logprob: -3.9131810665130615
    7. 'n' → logprob: -4.788181304931641
    8. ' for' → logprob: -4.788181304931641
    9. 'def' → logprob: -4.913181304931641
    10. 'len' → logprob: -4.913181304931641

Token 709: ' ab' (ID: 692)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2082009315490723
    2. 'segment' → logprob: -1.3332009315490723
    3. 'def' → logprob: -2.3332009315490723
    4. 'a' → logprob: -2.9582009315490723
    5. 'segments' → logprob: -3.0832009315490723
    6. 'ab' → logprob: -3.4582009315490723
    7. '   ' → logprob: -3.5832009315490723
    8. 's' → logprob: -3.7082009315490723
    9. '_segment' → logprob: -3.9582009315490723
    10. 'inter' → logprob: -4.083200931549072

Token 710: ' against' (ID: 4372)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1995304524898529
    2. 'in' → logprob: -3.1995303630828857
    3. ',' → logprob: -3.6995303630828857
    4. 'def' → logprob: -3.9495303630828857
    5. ' in' → logprob: -3.9495303630828857
    6. '   ' → logprob: -4.199530601501465
    7. 'for' → logprob: -4.199530601501465
    8. '.' → logprob: -5.074530601501465
    9. ')' → logprob: -5.199530601501465
    10. ':' → logprob: -5.449530601501465

Token 711: ' polygon' (ID: 65081)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.6753606200218201
    2. 'polygon' → logprob: -0.8003606200218201
    3. 'len' → logprob: -4.550360679626465
    4. 'the' → logprob: -4.925360679626465
    5. 'edges' → logprob: -5.300360679626465
    6. ' all' → logprob: -5.300360679626465
    7. 'each' → logprob: -5.425360679626465
    8. 'for' → logprob: -5.800360679626465
    9. '
' → logprob: -6.550360679626465
    10. 'Boundary' → logprob: -7.050360679626465

Token 712: ' edges' (ID: 22569)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0487221479415894
    2. ' edges' → logprob: -1.1737221479415894
    3. 'edges' → logprob: -1.2987221479415894
    4. '       ' → logprob: -3.548722267150879
    5. ':' → logprob: -4.548722267150879
    6. 'for' → logprob: -5.173722267150879
    7. ' for' → logprob: -5.673722267150879
    8. '.' → logprob: -5.673722267150879
    9. ',' → logprob: -5.923722267150879
    10. '_edges' → logprob: -6.173722267150879

Token 713: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006415978539735079
    2. ',' → logprob: -6.256415843963623
    3. '.' → logprob: -6.756415843963623
    4. ':' → logprob: -6.881415843963623
    5. ' for' → logprob: -7.131415843963623
    6. '<|end|>' → logprob: -7.631415843963623
    7. '<|end|>' → logprob: -7.631415843963623
    8. 'for' → logprob: -9.506416320800781
    9. ' and' → logprob: -9.756416320800781
    10. ':
' → logprob: -9.881416320800781

Token 714: ' intersection' (ID: 42002)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.9466527700424194
    2. 'edge' → logprob: -0.9466527700424194
    3. 'intersection' → logprob: -1.9466527700424194
    4. 'each' → logprob: -3.571652889251709
    5. ' intersection' → logprob: -4.571652889251709
    6. ' edge' → logprob: -4.821652889251709
    7. 'segment' → logprob: -4.821652889251709
    8. 'e' → logprob: -4.821652889251709
    9. 'any' → logprob: -6.071652889251709
    10. 'seg' → logprob: -6.071652889251709

Token 715: ' excluding' (ID: 76651)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21173876523971558
    2. '.' → logprob: -1.9617388248443604
    3. ',' → logprob: -3.4617388248443604
    4. '<|end|>' → logprob: -4.586738586425781
    5. ':' → logprob: -5.336738586425781
    6. '<|end|>' → logprob: -6.711738586425781
    7. ' or' → logprob: -7.086738586425781
    8. '   ' → logprob: -7.961738586425781
    9. '...' → logprob: -8.461738586425781
    10. ' and' → logprob: -8.586738586425781

Token 716: ' endpoints' (ID: 76454)
  Prédit: ' endpoints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' endpoints' → logprob: -0.15686459839344025
    2. 'the' → logprob: -2.781864643096924
    3. 'end' → logprob: -2.906864643096924
    4. 'a' → logprob: -4.906864643096924
    5. 'common' → logprob: -5.656864643096924
    6. ' the' → logprob: -5.781864643096924
    7. 'adj' → logprob: -5.906864643096924
    8. 'segment' → logprob: -6.031864643096924
    9. 'shared' → logprob: -6.281864643096924
    10. 'vertices' → logprob: -6.656864643096924

Token 717: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34544211626052856
    2. '.' → logprob: -1.5954420566558838
    3. '.
' → logprob: -3.720442056655884
    4. ':' → logprob: -3.845442056655884
    5. ',' → logprob: -4.220442295074463
    6. '   ' → logprob: -4.345442295074463
    7. '
' → logprob: -4.720442295074463
    8. '        
' → logprob: -6.220442295074463
    9. '    
' → logprob: -6.970442295074463
    10. ':
' → logprob: -6.970442295074463

Token 718: ' polygon' (ID: 65081)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.4082913100719452
    2. 'a' → logprob: -1.6582913398742676
    3. 'edges' → logprob: -2.2832913398742676
    4. ' polygon' → logprob: -4.283291339874268
    5. ' edges' → logprob: -4.783291339874268
    6. 'segment' → logprob: -5.658291339874268
    7. 'vertices' → logprob: -5.908291339874268
    8. 'the' → logprob: -6.033291339874268
    9. 'segments' → logprob: -6.283291339874268
    10. 'points' → logprob: -6.533291339874268

Token 719: ' vertices' (ID: 38360)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4758598506450653
    2. '       ' → logprob: -2.1008598804473877
    3. '.' → logprob: -2.6008598804473877
    4. ' edges' → logprob: -2.7258598804473877
    5. 'edges' → logprob: -3.1008598804473877
    6. 'segments' → logprob: -4.225859642028809
    7. 'def' → logprob: -4.350859642028809
    8. ')' → logprob: -4.975859642028809
    9. '_edges' → logprob: -5.100859642028809
    10. ' segments' → logprob: -5.100859642028809

Token 720: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18528512120246887
    2. '.' → logprob: -1.9352850914001465
    3. '   ' → logprob: -4.8102850914001465
    4. ',' → logprob: -4.9352850914001465
    5. '.
' → logprob: -5.4352850914001465
    6. 'import' → logprob: -6.9352850914001465
    7. '<|end|>' → logprob: -7.0602850914001465
    8. ':' → logprob: -7.3102850914001465
    9. '
' → logprob: -7.4352850914001465
    10. 'def' → logprob: -8.060285568237305

Token 721: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00042567000491544604
    2. '<|end|>' → logprob: -8.375425338745117
    3. '        
' → logprob: -9.625425338745117
    4. ')' → logprob: -10.375425338745117
    5. ',' → logprob: -10.500425338745117
    6. '
' → logprob: -10.750425338745117
    7. '   ' → logprob: -11.500425338745117
    8. '<|end|>' → logprob: -11.875425338745117
    9. '           ' → logprob: -12.625425338745117
    10. ' for' → logprob: -12.750425338745117

Token 722: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28476908802986145
    2. '
' → logprob: -1.659769058227539
    3. '   ' → logprob: -4.409769058227539
    4. ' for' → logprob: -4.409769058227539
    5. 'for' → logprob: -4.784769058227539
    6. 'n' → logprob: -5.034769058227539
    7. '        
' → logprob: -5.534769058227539
    8. ' 
' → logprob: -5.784769058227539
    9. '    
' → logprob: -5.909769058227539
    10. '\' → logprob: -6.534769058227539

Token 723: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08128327876329422
    2. 'n' → logprob: -3.2062833309173584
    3. 'def' → logprob: -3.9562833309173584
    4. 'for' → logprob: -4.831283092498779
    5. ' for' → logprob: -5.706283092498779
    6. '   ' → logprob: -6.331283092498779
    7. 'import' → logprob: -6.706283092498779
    8. ' n' → logprob: -6.956283092498779
    9. 'from' → logprob: -6.956283092498779
    10. ' def' → logprob: -7.456283092498779

Token 724: ' only' (ID: 1606)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7755674719810486
    2. '       ' → logprob: -1.4005675315856934
    3. '   ' → logprob: -1.9005675315856934
    4. 'return' → logprob: -3.2755675315856934
    5. 'continue' → logprob: -3.4005675315856934
    6. 'import' → logprob: -4.150567531585693
    7. ' def' → logprob: -4.775567531585693
    8. 'for' → logprob: -5.150567531585693
    9. '
' → logprob: -5.275567531585693
    10. '    ' → logprob: -5.400567531585693

Token 725: ' need' (ID: 1309)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.43887796998023987
    2. ' check' → logprob: -2.313878059387207
    3. 'return' → logprob: -2.813878059387207
    4. 'def' → logprob: -2.813878059387207
    5. '       ' → logprob: -3.438878059387207
    6. 'need' → logprob: -3.438878059387207
    7. '   ' → logprob: -3.938878059387207
    8. ' need' → logprob: -4.438878059387207
    9. ' return' → logprob: -4.438878059387207
    10. 'consider' → logprob: -4.563878059387207

Token 726: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.48484155535697937
    2. 'to' → logprob: -0.9848415851593018
    3. '       ' → logprob: -4.859841346740723
    4. '   ' → logprob: -6.359841346740723
    5. 'for' → logprob: -7.859841346740723
    6. 'def' → logprob: -8.109841346740723
    7. ' for' → logprob: -8.484841346740723
    8. '           ' → logprob: -9.609841346740723
    9. ' the' → logprob: -9.984841346740723
    10. 'the' → logprob: -10.234841346740723

Token 727: ' confirm' (ID: 7620)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.03748049587011337
    2. ' check' → logprob: -3.787480592727661
    3. 'return' → logprob: -4.787480354309082
    4. 'consider' → logprob: -6.537480354309082
    5. 'def' → logprob: -6.787480354309082
    6. 'for' → logprob: -7.037480354309082
    7. 'implement' → logprob: -7.287480354309082
    8. 'import' → logprob: -7.537480354309082
    9. ' for' → logprob: -8.412480354309082
    10. '   ' → logprob: -8.537480354309082

Token 728: ' segment' (ID: 14806)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25904381275177
    2. 'that' → logprob: -2.1340436935424805
    3. ' that' → logprob: -3.7590436935424805
    4. 'if' → logprob: -3.8840436935424805
    5. 'len' → logprob: -3.8840436935424805
    6. ' for' → logprob: -4.0090436935424805
    7. 'n' → logprob: -4.3840436935424805
    8. '   ' → logprob: -4.5090436935424805
    9. 'return' → logprob: -6.7590436935424805
    10. 'def' → logprob: -6.8840436935424805

Token 729: ' ab' (ID: 692)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1256716251373291
    2. ' for' → logprob: -2.250671625137329
    3. '       ' → logprob: -6.00067138671875
    4. '   ' → logprob: -6.12567138671875
    5. 'that' → logprob: -6.25067138671875
    6. 'a' → logprob: -6.50067138671875
    7. 'def' → logprob: -6.87567138671875
    8. 'inter' → logprob: -7.00067138671875
    9. 'ab' → logprob: -7.25067138671875
    10. ' that' → logprob: -7.37567138671875

Token 730: ' does' (ID: 2226)
  Prédit: ' does'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' does' → logprob: -0.6557706594467163
    2. 'does' → logprob: -0.9057706594467163
    3. ' is' → logprob: -3.780770778656006
    4. ' doesn't' → logprob: -3.905770778656006
    5. ' intersects' → logprob: -5.030770778656006
    6. '   ' → logprob: -5.030770778656006
    7. '       ' → logprob: -5.280770778656006
    8. 'is' → logprob: -5.780770778656006
    9. 'inter' → logprob: -6.030770778656006
    10. 'for' → logprob: -6.405770778656006

Token 731: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.004079708829522133
    2. ' not' → logprob: -5.504079818725586
    3. '_not' → logprob: -14.504079818725586
    4. '	not' → logprob: -14.629079818725586
    5. 'n't' → logprob: -16.504079818725586
    6. '   ' → logprob: -16.879079818725586
    7. 'return' → logprob: -17.504079818725586
    8. 'continue' → logprob: -17.629079818725586
    9. '```' → logprob: -17.879079818725586
    10. '#' → logprob: -18.254079818725586

Token 732: ' cross' (ID: 8088)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.12446314096450806
    2. 'cross' → logprob: -2.6244630813598633
    3. ' intersect' → logprob: -3.6244630813598633
    4. ' cross' → logprob: -5.124463081359863
    5. 'proper' → logprob: -5.124463081359863
    6. 'strict' → logprob: -5.249463081359863
    7. ' strictly' → logprob: -7.874463081359863
    8. ' properly' → logprob: -8.624463081359863
    9. 'pass' → logprob: -9.999463081359863
    10. '   ' → logprob: -10.749463081359863

Token 733: ' polygon' (ID: 65081)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.5873635411262512
    2. ' any' → logprob: -0.8373635411262512
    3. ' polygon' → logprob: -5.4623637199401855
    4. 'polygon' → logprob: -6.0873637199401855
    5. 'the' → logprob: -6.4623637199401855
    6. ' the' → logprob: -6.7123637199401855
    7. 'outside' → logprob: -7.2123637199401855
    8. ' edges' → logprob: -7.3373637199401855
    9. 'edges' → logprob: -8.587363243103027
    10. ' outside' → logprob: -8.962363243103027

Token 734: ' exterior' (ID: 24214)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.3997102379798889
    2. 'edges' → logprob: -1.1497101783752441
    3. '_edges' → logprob: -4.399710178375244
    4. '.edges' → logprob: -9.024710655212402
    5. '   ' → logprob: -9.149710655212402
    6. 'edge' → logprob: -10.524710655212402
    7. '
' → logprob: -10.524710655212402
    8. 's' → logprob: -10.774710655212402
    9. 'segments' → logprob: -10.899710655212402
    10. 'boundary' → logprob: -11.274710655212402

Token 735: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5095967054367065
    2. '.' → logprob: -1.0095967054367065
    3. '   ' → logprob: -4.009596824645996
    4. ',' → logprob: -5.384596824645996
    5. ' (' → logprob: -5.884596824645996
    6. ' or' → logprob: -5.884596824645996
    7. ' edges' → logprob: -6.134596824645996
    8. 'edges' → logprob: -7.134596824645996
    9. 'def' → logprob: -7.884596824645996
    10. ':' → logprob: -8.134596824645996

Token 736: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007791309617459774
    2. '<|end|>' → logprob: -7.500779151916504
    3. '        
' → logprob: -9.500779151916504
    4. ',' → logprob: -10.500779151916504
    5. 'import' → logprob: -10.625779151916504
    6. '   ' → logprob: -10.875779151916504
    7. '<|end|>' → logprob: -11.000779151916504
    8. '#' → logprob: -11.625779151916504
    9. ')' → logprob: -11.750779151916504
    10. '.' → logprob: -12.125779151916504

Token 737: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2613014280796051
    2. 'n' → logprob: -2.0113015174865723
    3. 'for' → logprob: -3.5113015174865723
    4. ' for' → logprob: -3.7613015174865723
    5. ' n' → logprob: -4.386301517486572
    6. 'polygon' → logprob: -4.636301517486572
    7. ' polygon' → logprob: -5.636301517486572
    8. 'from' → logprob: -5.761301517486572
    9. '#' → logprob: -6.011301517486572
    10. 'import' → logprob: -6.136301517486572

Token 738: ' Boundary' (ID: 148449)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.20904532074928284
    2. 'False' → logprob: -2.20904541015625
    3. 'all' → logprob: -2.70904541015625
    4. 'Boundary' → logprob: -5.20904541015625
    5. ' True' → logprob: -5.45904541015625
    6. ' all' → logprob: -7.33404541015625
    7. 'not' → logprob: -7.70904541015625
    8. ' False' → logprob: -7.83404541015625
    9. 'a' → logprob: -7.95904541015625
    10. 'Polygon' → logprob: -8.95904541015625

Token 739: 'Condition' (ID: 14232)
  Prédit: 'Condition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Condition' → logprob: -3.173704271830502e-06
    2. 'Con' → logprob: -14.12500286102295
    3. ' Condition' → logprob: -14.37500286102295
    4. '.' → logprob: -14.62500286102295
    5. '_condition' → logprob: -14.87500286102295
    6. 'C' → logprob: -15.12500286102295
    7. '.Condition' → logprob: -15.50000286102295
    8. 'condition' → logprob: -16.125003814697266
    9. 'Cond' → logprob: -16.250003814697266
    10. 'Conditions' → logprob: -16.625003814697266

Token 740: 'Checker' (ID: 39016)
  Prédit: 'Checker'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Checker' → logprob: -0.0007597190560773015
    2. '.check' → logprob: -7.750759601593018
    3. 'Condition' → logprob: -8.625760078430176
    4. 'Check' → logprob: -9.750760078430176
    5. '.Check' → logprob: -10.000760078430176
    6. '.' → logprob: -11.000760078430176
    7. '._' → logprob: -12.375760078430176
    8. '_checker' → logprob: -12.500760078430176
    9. ' Checker' → logprob: -12.750760078430176
    10. '   ' → logprob: -12.750760078430176

Token 741: '.segment' (ID: 137597)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.29999369382858276
    2. '.check' → logprob: -1.7999937534332275
    3. '.segment' → logprob: -3.5499937534332275
    4. '.is' → logprob: -4.049993515014648
    5. '.point' → logprob: -4.174993515014648
    6. '.inter' → logprob: -4.174993515014648
    7. '.line' → logprob: -5.174993515014648
    8. '.p' → logprob: -5.174993515014648
    9. '.has' → logprob: -5.799993515014648
    10. '.cross' → logprob: -7.799993515014648

Token 742: '_inside' (ID: 191028)
  Prédit: '_inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.01721358112990856
    2. '_inside' → logprob: -4.267213344573975
    3. '_segment' → logprob: -7.142213344573975
    4. '_in' → logprob: -7.142213344573975
    5. '_cross' → logprob: -7.267213344573975
    6. '_with' → logprob: -8.642213821411133
    7. '_on' → logprob: -8.892213821411133
    8. '_line' → logprob: -9.392213821411133
    9. 's' → logprob: -9.392213821411133
    10. '_point' → logprob: -9.767213821411133

Token 743: '_conv' (ID: 58653)
  Prédit: '_polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_polygon' → logprob: -0.0278360266238451
    2. '(p' → logprob: -3.7778360843658447
    3. 'polygon' → logprob: -5.777835845947266
    4. '_segment' → logprob: -6.902835845947266
    5. '_conv' → logprob: -8.527835845947266
    6. '_line' → logprob: -9.027835845947266
    7. '_poly' → logprob: -10.277835845947266
    8. ' polygon' → logprob: -10.527835845947266
    9. 'Polygon' → logprob: -11.152835845947266
    10. '_(' → logprob: -11.277835845947266

Token 744: 'ex' (ID: 490)
  Prédit: 'ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -8.065608562901616e-05
    2. 'exp' → logprob: -9.500081062316895
    3. '
' → logprob: -13.375081062316895
    4. 'exit' → logprob: -13.625081062316895
    5. '(ex' → logprob: -14.625081062316895
    6. 'expr' → logprob: -14.875081062316895
    7. 'exc' → logprob: -15.125081062316895
    8. 'exe' → logprob: -15.375081062316895
    9. 'e' → logprob: -15.500081062316895
    10. '```' → logprob: -15.875081062316895

Token 745: '_polygon' (ID: 195427)
  Prédit: '_polygon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_polygon' → logprob: -0.0030786022543907166
    2. 'polygon' → logprob: -6.128078460693359
    3. '(p' → logprob: -7.878078460693359
    4. '_h' → logprob: -7.878078460693359
    5. ' polygon' → logprob: -10.12807846069336
    6. 'Polygon' → logprob: -10.75307846069336
    7. 'h' → logprob: -11.12807846069336
    8. '_' → logprob: -11.12807846069336
    9. '_poly' → logprob: -11.75307846069336
    10. 'olygon' → logprob: -11.87807846069336

Token 746: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0002108118060277775
    2. '(poly' → logprob: -9.500210762023926
    3. '(' → logprob: -9.750210762023926
    4. '(pol' → logprob: -9.875210762023926
    5. ' (' → logprob: -11.375210762023926
    6. '((' → logprob: -12.125210762023926
    7. 'polygon' → logprob: -12.500210762023926
    8. '(
' → logprob: -13.250210762023926
    9. '(ab' → logprob: -14.750210762023926
    10. '_polygon' → logprob: -15.125210762023926

Token 747: 'olygon' (ID: 80431)
  Prédit: 'olygon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olygon' → logprob: -0.0006759775569662452
    2. 'ol' → logprob: -7.750676155090332
    3. 'polygon' → logprob: -8.625676155090332
    4. 'oly' → logprob: -9.750676155090332
    5. '
' → logprob: -13.375676155090332
    6. '(p' → logprob: -14.000676155090332
    7. '(' → logprob: -14.250676155090332
    8. '[' → logprob: -14.375676155090332
    9. '_polygon' → logprob: -14.375676155090332
    10. ' polygon' → logprob: -14.625676155090332

Token 748: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013595925702247769
    2. ',a' → logprob: -9.750136375427246
    3. ',p' → logprob: -10.250136375427246
    4. ' ,' → logprob: -10.250136375427246
    5. '   ' → logprob: -13.500136375427246
    6. 'a' → logprob: -13.500136375427246
    7. ',
' → logprob: -13.875136375427246
    8. '       ' → logprob: -14.000136375427246
    9. ')' → logprob: -14.250136375427246
    10. 'p' → logprob: -14.500136375427246

Token 749: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.248469718324486e-05
    2. '[a' → logprob: -11.125022888183594
    3. ' a' → logprob: -12.500022888183594
    4. 'p' → logprob: -13.125022888183594
    5. '[' → logprob: -13.500022888183594
    6. ')' → logprob: -15.750022888183594
    7. '   ' → logprob: -15.750022888183594
    8. '	a' → logprob: -16.750022888183594
    9. '
' → logprob: -17.250022888183594
    10. '[
' → logprob: -17.375022888183594

Token 750: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022070204431656748
    2. ',b' → logprob: -8.75022029876709
    3. ' ,' → logprob: -9.75022029876709
    4. 'b' → logprob: -13.25022029876709
    5. ')' → logprob: -13.75022029876709
    6. ',
' → logprob: -13.87522029876709
    7. '   ' → logprob: -16.875221252441406
    8. ' b' → logprob: -17.375221252441406
    9. '),' → logprob: -17.750221252441406
    10. ',p' → logprob: -18.625221252441406

Token 751: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0010328111238777637
    2. ' b' → logprob: -6.876032829284668
    3. '	b' → logprob: -17.62603187561035
    4. ')b' → logprob: -18.25103187561035
    5. '_b' → logprob: -18.75103187561035
    6. ')' → logprob: -19.50103187561035
    7. '   ' → logprob: -20.00103187561035
    8. ' ' → logprob: -20.12603187561035
    9. ' ' → logprob: -21.00103187561035
    10. '
' → logprob: -21.12603187561035

Token 752: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.302704761968926e-05
    2. ' )' → logprob: -10.125073432922363
    3. '       ' → logprob: -10.750073432922363
    4. '   ' → logprob: -11.750073432922363
    5. ')
' → logprob: -12.750073432922363
    6. ')

' → logprob: -14.625073432922363
    7. '))' → logprob: -17.125072479248047
    8. ' ' → logprob: -17.250072479248047
    9. ')`' → logprob: -17.250072479248047
    10. '    ' → logprob: -18.125072479248047

Token 753: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014673104509711266
    2. ':' → logprob: -4.264673233032227
    3. '    
' → logprob: -9.639673233032227
    4. '       ' → logprob: -9.639673233032227
    5. ':
' → logprob: -9.639673233032227
    6. '
' → logprob: -9.764673233032227
    7. '):' → logprob: -9.764673233032227
    8. ')' → logprob: -9.889673233032227
    9. '```' → logprob: -10.764673233032227
    10. '<|end|>' → logprob: -10.764673233032227

Token 754: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017282944172620773
    2. ':' → logprob: -4.392282962799072
    3. '@' (adapté à ' @') → logprob: -5.767282962799072
    4. '
' → logprob: -7.642282962799072
    5. ' ' → logprob: -8.517282485961914
    6. '.' → logprob: -8.892282485961914
    7. ')' → logprob: -9.017282485961914
    8. 'static' → logprob: -9.142282485961914
    9. '```' → logprob: -9.267282485961914
    10. ',' → logprob: -9.392282485961914

Token 755: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -2.1008713702030946e-06
    2. 'static' → logprob: -13.500001907348633
    3. 'classmethod' → logprob: -14.250001907348633
    4. ' static' → logprob: -19.250001907348633
    5. 'st' → logprob: -20.375001907348633
    6. 'stat' → logprob: -21.000001907348633
    7. '@' → logprob: -21.875001907348633
    8. '
' → logprob: -22.375001907348633
    9. '_static' → logprob: -22.375001907348633
    10. 'property' → logprob: -22.500001907348633

Token 756: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5664328336715698
    2. ' def' → logprob: -1.0664328336715698
    3. '   ' → logprob: -2.4414329528808594
    4. '	def' → logprob: -7.816432952880859
    5. '(' → logprob: -8.19143295288086
    6. '.' → logprob: -8.19143295288086
    7. ',' → logprob: -9.81643295288086
    8. '_def' → logprob: -10.06643295288086
    9. '(def' → logprob: -10.31643295288086
    10. ':def' → logprob: -10.94143295288086

Token 757: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03403107449412346
    2. ' def' → logprob: -3.4090311527252197
    3. '   ' → logprob: -8.28403091430664
    4. '(' → logprob: -9.90903091430664
    5. '.' → logprob: -10.40903091430664
    6. ':def' → logprob: -10.78403091430664
    7. '_def' → logprob: -11.65903091430664
    8. '(def' → logprob: -12.03403091430664
    9. '	def' → logprob: -12.28403091430664
    10. ' ' → logprob: -12.53403091430664

Token 758: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0001446611131541431
    2. '
' → logprob: -9.125144958496094
    3. ' def' → logprob: -10.250144958496094
    4. '   ' → logprob: -15.625144958496094
    5. 'bool' → logprob: -15.875144958496094
    6. '    
' → logprob: -16.000144958496094
    7. '  
' → logprob: -17.500144958496094
    8. '	def' → logprob: -17.625144958496094
    9. '   
' → logprob: -19.000144958496094
    10. '_def' → logprob: -19.125144958496094

Token 759: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.0019370813388377428
    2. ' segment' → logprob: -6.251936912536621
    3. '_segment' → logprob: -13.376936912536621
    4. 'line' → logprob: -13.501936912536621
    5. 'def' → logprob: -13.501936912536621
    6. 'orientation' → logprob: -13.751936912536621
    7. '.segment' → logprob: -14.126936912536621
    8. 'point' → logprob: -14.251936912536621
    9. '(segment' → logprob: -15.251936912536621
    10. 'segments' → logprob: -15.251936912536621

Token 760: '_inside' (ID: 191028)
  Prédit: '_inside'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inside' → logprob: -2.522638169466518e-05
    2. '_' → logprob: -12.000024795532227
    3. '_out' → logprob: -12.250024795532227
    4. '_inter' → logprob: -12.500024795532227
    5. '_ins' → logprob: -12.750024795532227
    6. '_in' → logprob: -13.125024795532227
    7. '_is' → logprob: -14.250024795532227
    8. 's' → logprob: -14.875024795532227
    9. '_possible' → logprob: -15.125024795532227
    10. '_to' → logprob: -15.125024795532227

Token 761: '_conv' (ID: 58653)
  Prédit: '_conv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_conv' → logprob: -0.00039492646465077996
    2. 'conv' → logprob: -8.000394821166992
    3. 'Conv' → logprob: -10.000394821166992
    4. '_polygon' → logprob: -11.500394821166992
    5. '_cov' → logprob: -13.625394821166992
    6. '_con' → logprob: -13.875394821166992
    7. ' convex' → logprob: -14.125394821166992
    8. '_poly' → logprob: -14.750394821166992
    9. '_const' → logprob: -15.500394821166992
    10. '(conv' → logprob: -16.125394821166992

Token 762: 'ex' (ID: 490)
  Prédit: 'ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.0009061029995791614
    2. 'exp' → logprob: -7.250905990600586
    3. '_polygon' → logprob: -9.625905990600586
    4. 'polygon' → logprob: -10.625905990600586
    5. '
' → logprob: -10.875905990600586
    6. 'Polygon' → logprob: -11.125905990600586
    7. 'exit' → logprob: -11.250905990600586
    8. '```' → logprob: -12.000905990600586
    9. 'e' → logprob: -12.250905990600586
    10. 'exe' → logprob: -12.375905990600586

Token 763: '_polygon' (ID: 195427)
  Prédit: '_polygon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_polygon' → logprob: -0.0015077205607667565
    2. 'Polygon' → logprob: -6.501507759094238
    3. 'polygon' → logprob: -12.501507759094238
    4. '_pol' → logprob: -14.251507759094238
    5. '_poly' → logprob: -14.376507759094238
    6. ' polygon' → logprob: -15.251507759094238
    7. 'olygon' → logprob: -15.251507759094238
    8. ' Polygon' → logprob: -17.126506805419922
    9. '```' → logprob: -18.876506805419922
    10. 'Polynomial' → logprob: -19.251506805419922

Token 764: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0009438612614758313
    2. '(' → logprob: -7.000943660736084
    3. '(poly' → logprob: -11.125944137573242
    4. '(pol' → logprob: -11.375944137573242
    5. '(
' → logprob: -12.500944137573242
    6. ' (' → logprob: -13.375944137573242
    7. '(parent' → logprob: -15.375944137573242
    8. '(point' → logprob: -15.875944137573242
    9. '   ' → logprob: -16.375944137573242
    10. '((' → logprob: -16.625944137573242

Token 765: 'olygon' (ID: 80431)
  Prédit: 'olygon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olygon' → logprob: -0.0081113176420331
    2. 'polygon' → logprob: -5.508111476898193
    3. 'ol' → logprob: -6.258111476898193
    4. 'oly' → logprob: -7.008111476898193
    5. '   ' → logprob: -7.758111476898193
    6. ')' → logprob: -9.133111000061035
    7. ':' → logprob: -9.133111000061035
    8. 'ygon' → logprob: -9.383111000061035
    9. '(p' → logprob: -9.383111000061035
    10. '       ' → logprob: -10.133111000061035

Token 766: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001158211671281606
    2. ',p' → logprob: -9.750115394592285
    3. ' ,' → logprob: -10.250115394592285
    4. ':' → logprob: -11.250115394592285
    5. ')' → logprob: -12.875115394592285
    6. '   ' → logprob: -12.875115394592285
    7. '[p' → logprob: -13.625115394592285
    8. ',
' → logprob: -13.875115394592285
    9. '(p' → logprob: -14.625115394592285
    10. '[' → logprob: -14.875115394592285

Token 767: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.00010247035970678553
    2. ' List' → logprob: -9.375102043151855
    3. '[List' → logprob: -11.750102043151855
    4. ')' → logprob: -11.875102043151855
    5. 'Point' → logprob: -13.750102043151855
    6. '
' → logprob: -14.375102043151855
    7. '[' → logprob: -15.125102043151855
    8. '   ' → logprob: -15.375102043151855
    9. ' ' → logprob: -15.750102043151855
    10. 'list' → logprob: -15.875102043151855

Token 768: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.2723104848410003e-05
    2. ',' → logprob: -11.125022888183594
    3. '[
' → logprob: -13.000022888183594
    4. '<Point' → logprob: -13.125022888183594
    5. '   ' → logprob: -13.875022888183594
    6. ')' → logprob: -14.250022888183594
    7. ']' → logprob: -14.625022888183594
    8. '
' → logprob: -15.000022888183594
    9. 'Point' → logprob: -15.250022888183594
    10. '```' → logprob: -16.000022888183594

Token 769: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: 0.0
    2. ' Point' → logprob: -17.875
    3. '	Point' → logprob: -20.75
    4. '<Point' → logprob: -22.0
    5. '_Point' → logprob: -23.0
    6. '.Point' → logprob: -23.125
    7. '(Point' → logprob: -23.375
    8. '_point' → logprob: -23.625
    9. '[' → logprob: -24.625
    10. '   ' → logprob: -24.75

Token 770: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00046320082037709653
    2. '],' → logprob: -7.750463008880615
    3. ' ,' → logprob: -10.500463485717773
    4. '   ' → logprob: -12.625463485717773
    5. '       ' → logprob: -14.500463485717773
    6. '>,' → logprob: -15.125463485717773
    7. ',p' → logprob: -15.500463485717773
    8. ']' → logprob: -15.875463485717773
    9. '),' → logprob: -16.000463485717773
    10. '‌,' → logprob: -16.500463485717773

Token 771: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.033876895904541016
    2. ' a' → logprob: -3.408876895904541
    3. '   ' → logprob: -9.283876419067383
    4. 'p' → logprob: -9.283876419067383
    5. ' ' → logprob: -11.408876419067383
    6. ' p' → logprob: -11.408876419067383
    7. '	a' → logprob: -11.908876419067383
    8. '
' → logprob: -13.033876419067383
    9. '    ' → logprob: -13.033876419067383
    10. '  ' → logprob: -13.158876419067383

Token 772: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002390594017924741
    2. ':' → logprob: -8.375239372253418
    3. ' ,' → logprob: -11.750239372253418
    4. ',b' → logprob: -16.0002384185791
    5. ',
' → logprob: -16.5002384185791
    6. '   ' → logprob: -16.6252384185791
    7. ':,' → logprob: -16.6252384185791
    8. ' ' → logprob: -17.1252384185791
    9. 'a' → logprob: -17.1252384185791
    10. ')' → logprob: -17.3752384185791

Token 773: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0031791406217962503
    2. ' Point' → logprob: -5.75317907333374
    3. 'b' → logprob: -14.003179550170898
    4. '	Point' → logprob: -15.128179550170898
    5. '_Point' → logprob: -15.628179550170898
    6. '_point' → logprob: -16.6281795501709
    7. '(Point' → logprob: -17.0031795501709
    8. ' ' → logprob: -17.1281795501709
    9. ' b' → logprob: -17.6281795501709
    10. '<Point' → logprob: -18.1281795501709

Token 774: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.739826181321405e-05
    2. ' ,' → logprob: -10.00004768371582
    3. ',b' → logprob: -13.62504768371582
    4. ',
' → logprob: -14.75004768371582
    5. '   ' → logprob: -16.12504768371582
    6. 'b' → logprob: -16.37504768371582
    7. ')' → logprob: -16.62504768371582
    8. '‌,' → logprob: -17.37504768371582
    9. '_,' → logprob: -18.12504768371582
    10. 'def' → logprob: -18.25004768371582

Token 775: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5759477615356445
    2. ' b' → logprob: -0.8259477615356445
    3. '   ' → logprob: -12.200947761535645
    4. '       ' → logprob: -13.575947761535645
    5. '    ' → logprob: -14.200947761535645
    6. ' ' → logprob: -14.325947761535645
    7. '	b' → logprob: -15.200947761535645
    8. '        ' → logprob: -16.075946807861328
    9. ' ' → logprob: -16.450946807861328
    10. '  ' → logprob: -16.450946807861328

Token 776: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3782830137643032e-05
    2. ',' → logprob: -11.75001335144043
    3. ':' → logprob: -12.87501335144043
    4. '')' → logprob: -13.37501335144043
    5. ' )' → logprob: -14.25001335144043
    6. '   ' → logprob: -14.50001335144043
    7. ']' → logprob: -15.37501335144043
    8. '])' → logprob: -16.25001335144043
    9. ',)' → logprob: -16.62501335144043
    10. ' ' → logprob: -16.75001335144043

Token 777: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -9.615255839889869e-05
    2. ' Point' → logprob: -9.250096321105957
    3. '	Point' → logprob: -18.12509536743164
    4. ' ' → logprob: -18.87509536743164
    5. ')' → logprob: -19.62509536743164
    6. '   ' → logprob: -19.75009536743164
    7. '_Point' → logprob: -20.25009536743164
    8. '_point' → logprob: -20.50009536743164
    9. ''' → logprob: -20.62509536743164
    10. '(Point' → logprob: -21.12509536743164

Token 778: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.319370302458992e-06
    2. '')' → logprob: -12.500005722045898
    3. ' )' → logprob: -14.250005722045898
    4. '])' → logprob: -16.0000057220459
    5. '`)' → logprob: -16.0000057220459
    6. '   ' → logprob: -16.1250057220459
    7. ',)' → logprob: -16.1250057220459
    8. ')->' → logprob: -16.2500057220459
    9. ']' → logprob: -16.6250057220459
    10. ')
' → logprob: -17.1250057220459

Token 779: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.6666626930236816
    2. ' ->' → logprob: -0.7916626930236816
    3. ':' → logprob: -3.7916626930236816
    4. ')' → logprob: -4.666662693023682
    5. '   ' → logprob: -6.791662693023682
    6. ')->' → logprob: -8.791662216186523
    7. ' ' → logprob: -8.916662216186523
    8. '       ' → logprob: -9.916662216186523
    9. ':
' → logprob: -10.416662216186523
    10. '  ' → logprob: -11.291662216186523

Token 780: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -5.347765181795694e-05
    2. ' bool' → logprob: -9.875053405761719
    3. '   ' → logprob: -14.250053405761719
    4. 'True' → logprob: -14.750053405761719
    5. '	bool' → logprob: -15.375053405761719
    6. ' ' → logprob: -15.625053405761719
    7. 'float' → logprob: -15.875053405761719
    8. '<bool' → logprob: -16.37505340576172
    9. 'Optional' → logprob: -16.50005340576172
    10. 'int' → logprob: -16.50005340576172

Token 781: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00371979596093297
    2. ':
' → logprob: -5.628719806671143
    3. '):' → logprob: -9.378719329833984
    4. '       ' → logprob: -11.128719329833984
    5. '   ' → logprob: -12.128719329833984
    6. ')' → logprob: -12.503719329833984
    7. '):
' → logprob: -13.253719329833984
    8. ':return' → logprob: -13.253719329833984
    9. ',' → logprob: -13.378719329833984
    10. '():' → logprob: -13.503719329833984

Token 782: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.231182826217264e-05
    2. '
' → logprob: -10.750072479248047
    3. '   ' → logprob: -11.000072479248047
    4. '        
' → logprob: -11.375072479248047
    5. ',' → logprob: -12.250072479248047
    6. '        ' → logprob: -12.750072479248047
    7. '           ' → logprob: -12.875072479248047
    8. '    ' → logprob: -13.000072479248047
    9. '      ' → logprob: -13.375072479248047
    10. '    
' → logprob: -13.375072479248047

Token 783: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2079915702342987
    2. '       ' → logprob: -1.957991600036621
    3. 'if' → logprob: -3.707991600036621
    4. 'n' → logprob: -4.082991600036621
    5. '#' (adapté à ' #') → logprob: -5.957991600036621
    6. '   ' → logprob: -6.832991600036621
    7. 'for' → logprob: -7.457991600036621
    8. 'polygon' → logprob: -8.207991600036621
    9. 'dx' → logprob: -8.707991600036621
    10. 'd' → logprob: -8.957991600036621

Token 784: ' polygon' (ID: 65081)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13873319327831268
    2. 'n' → logprob: -2.513733148574829
    3. 'if' → logprob: -3.888733148574829
    4. 'for' → logprob: -4.013733386993408
    5. '#' → logprob: -5.513733386993408
    6. '       ' → logprob: -6.263733386993408
    7. '   ' → logprob: -6.513733386993408
    8. 'cross' → logprob: -6.513733386993408
    9. 'EPS' → logprob: -7.888733386993408
    10. 'eps' → logprob: -8.13873291015625

Token 785: ' is' (ID: 382)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.41914471983909607
    2. ' is' → logprob: -2.044144630432129
    3. 'n' → logprob: -2.294144630432129
    4. 'is' → logprob: -3.669144630432129
    5. ' =' → logprob: -3.794144630432129
    6. ':' → logprob: -4.169144630432129
    7. '=' → logprob: -4.169144630432129
    8. '_points' → logprob: -4.919144630432129
    9. 'points' → logprob: -4.919144630432129
    10. ' def' → logprob: -5.919144630432129

Token 786: ' convex' (ID: 142423)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.5342521667480469
    2. 'len' → logprob: -1.9092521667480469
    3. 'conv' → logprob: -2.159252166748047
    4. '[' → logprob: -3.284252166748047
    5. '[
' → logprob: -3.534252166748047
    6. 'a' → logprob: -4.159252166748047
    7. ' polygon' → logprob: -4.159252166748047
    8. '[len' → logprob: -4.784252166748047
    9. '[p' → logprob: -4.909252166748047
    10. ' convex' → logprob: -5.034252166748047

Token 787: ' polygon' (ID: 65081)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022866178303956985
    2. '
' → logprob: -3.8978662490844727
    3. ',' → logprob: -6.897866249084473
    4. ':' → logprob: -7.522866249084473
    5. 'n' → logprob: -8.022866249084473
    6. '   ' → logprob: -8.772866249084473
    7. '        
' → logprob: -9.522866249084473
    8. 'def' → logprob: -9.772866249084473
    9. ':
' → logprob: -9.897866249084473
    10. ',
' → logprob: -10.647866249084473

Token 788: ' represented' (ID: 27328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017908512381836772
    2. ',' → logprob: -7.001791000366211
    3. '
' → logprob: -7.626791000366211
    4. '<|end|>' → logprob: -8.626791000366211
    5. '        
' → logprob: -9.751791000366211
    6. '   ' → logprob: -10.501791000366211
    7. '<|end|>' → logprob: -10.626791000366211
    8. ':' → logprob: -11.126791000366211
    9. 'n' → logprob: -11.376791000366211
    10. ',
' → logprob: -11.751791000366211

Token 789: ' as' (ID: 472)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.0659254938364029
    2. 'by' → logprob: -3.3159255981445312
    3. ' as' → logprob: -3.6909255981445312
    4. ' by' → logprob: -6.190925598144531
    5. '       ' → logprob: -8.565925598144531
    6. 'in' → logprob: -9.440925598144531
    7. 'with' → logprob: -9.815925598144531
    8. ',' → logprob: -10.315925598144531
    9. ':' → logprob: -10.565925598144531
    10. '#' → logprob: -10.815925598144531

Token 790: ' list' (ID: 1562)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6727493405342102
    2. 'List' → logprob: -0.7977493405342102
    3. 'polygon' → logprob: -3.7977492809295654
    4. '[' → logprob: -5.5477495193481445
    5. ' a' → logprob: -5.7977495193481445
    6. '[List' → logprob: -6.1727495193481445
    7. 'list' → logprob: -6.2977495193481445
    8. ' List' → logprob: -6.4227495193481445
    9. '[p' → logprob: -6.5477495193481445
    10. 'points' → logprob: -7.1727495193481445

Token 791: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06573183834552765
    2. ' of' → logprob: -3.3157317638397217
    3. '       ' → logprob: -3.6907317638397217
    4. '<Point' → logprob: -6.815732002258301
    5. 'of' → logprob: -7.440732002258301
    6. '[
' → logprob: -7.940732002258301
    7. '#' → logprob: -9.1907320022583
    8. '   ' → logprob: -9.6907320022583
    9. '        
' → logprob: -9.8157320022583
    10. '(Point' → logprob: -10.5657320022583

Token 792: ' its' (ID: 1617)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.08171883970499039
    2. 'Points' → logprob: -2.581718921661377
    3. 'points' → logprob: -5.956718921661377
    4. 'vertices' → logprob: -9.081718444824219
    5. ' Point' → logprob: -9.581718444824219
    6. ' points' → logprob: -10.706718444824219
    7. ' Points' → logprob: -10.831718444824219
    8. 'its' → logprob: -12.206718444824219
    9. 'polygon' → logprob: -13.456718444824219
    10. '<Point' → logprob: -13.581718444824219

Token 793: ' vertices' (ID: 38360)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.7650023102760315
    2. 'vertices' → logprob: -0.7650023102760315
    3. ' points' → logprob: -3.6400022506713867
    4. 'Points' → logprob: -3.6400022506713867
    5. 'Point' → logprob: -4.765002250671387
    6. ' vertices' → logprob: -5.015002250671387
    7. ' Points' → logprob: -6.765002250671387
    8. ' Point' → logprob: -8.515002250671387
    9. 'corn' → logprob: -9.265002250671387
    10. '_points' → logprob: -9.390002250671387

Token 794: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.022268295288086
    2. '       ' → logprob: -1.022268295288086
    3. ' in' → logprob: -2.022268295288086
    4. '
' → logprob: -3.022268295288086
    5. ' (' → logprob: -3.397268295288086
    6. '.' → logprob: -4.147268295288086
    7. ' with' → logprob: -4.522268295288086
    8. ',
' → logprob: -5.022268295288086
    9. '<|end|>' → logprob: -5.147268295288086
    10. 'in' → logprob: -5.272268295288086

Token 795: ' CC' (ID: 21547)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.0002533528604544699
    2. 'counter' → logprob: -9.000253677368164
    3. ' order' → logprob: -9.250253677368164
    4. 'clock' → logprob: -10.375253677368164
    5. 'polygon' → logprob: -14.000253677368164
    6. 'sequence' → logprob: -14.500253677368164
    7. 'cc' → logprob: -15.125253677368164
    8. '
' → logprob: -15.250253677368164
    9. 'conv' → logprob: -15.375253677368164
    10. ' clockwise' → logprob: -15.500253677368164

Token 796: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -2.45848218582978e-06
    2. 'w' → logprob: -13.25000286102295
    3. 'wise' → logprob: -15.00000286102295
    4. '   ' → logprob: -16.000001907348633
    5. ' W' → logprob: -16.625001907348633
    6. 'clock' → logprob: -16.750001907348633
    7. '
' → logprob: -17.625001907348633
    8. 'order' → logprob: -18.125001907348633
    9. '#' → logprob: -18.375001907348633
    10. '```' → logprob: -18.375001907348633

Token 797: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.0021905910689383745
    2. ' order' → logprob: -6.127190589904785
    3. '_order' → logprob: -13.002190589904785
    4. 'direction' → logprob: -14.252190589904785
    5. '(order' → logprob: -14.252190589904785
    6. 'or' → logprob: -14.752190589904785
    7. 'orde' → logprob: -14.752190589904785
    8. '	order' → logprob: -15.377190589904785
    9. 'ordering' → logprob: -15.877190589904785
    10. 'orientation' → logprob: -16.0021915435791

Token 798: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022324516903609037
    2. '   ' → logprob: -6.752232551574707
    3. ',' → logprob: -7.502232551574707
    4. '
' → logprob: -8.002232551574707
    5. 'n' → logprob: -9.752232551574707
    6. 'def' → logprob: -10.377232551574707
    7. '        
' → logprob: -10.752232551574707
    8. ':' → logprob: -11.002232551574707
    9. ' for' → logprob: -11.877232551574707
    10. '    
' → logprob: -12.252232551574707

Token 799: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001198086072690785
    2. 'def' → logprob: -7.5011982917785645
    3. 'n' → logprob: -8.001197814941406
    4. '   ' → logprob: -9.251197814941406
    5. 'for' → logprob: -9.876197814941406
    6. ' for' → logprob: -10.501197814941406
    7. 'd' → logprob: -10.751197814941406
    8. '
' → logprob: -10.876197814941406
    9. ' n' → logprob: -11.251197814941406
    10. ' def' → logprob: -11.251197814941406

Token 800: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6085431575775146
    2. '       ' → logprob: -0.9835431575775146
    3. 'n' → logprob: -3.1085431575775146
    4. 'for' → logprob: -4.358543395996094
    5. '   ' → logprob: -4.983543395996094
    6. 'cross' → logprob: -5.358543395996094
    7. 'if' → logprob: -5.608543395996094
    8. 'd' → logprob: -6.108543395996094
    9. '#' (adapté à ' #') → logprob: -6.233543395996094
    10. 'dx' → logprob: -6.608543395996094

Token 801: ' We'll' (ID: 46830)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03205587714910507
    2. 'n' → logprob: -3.6570558547973633
    3. 'cross' → logprob: -5.907055854797363
    4. '   ' → logprob: -6.907055854797363
    5. 'for' → logprob: -7.032055854797363
    6. 'if' → logprob: -7.657055854797363
    7. '#' → logprob: -7.782055854797363
    8. '       ' → logprob: -9.782055854797363
    9. 'EPS' → logprob: -10.157055854797363
    10. 'from' → logprob: -10.782055854797363

Token 802: ' check' (ID: 2371)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7986589670181274
    2. '   ' → logprob: -1.7986589670181274
    3. 'def' → logprob: -1.9236589670181274
    4. 'for' → logprob: -2.048658847808838
    5. 'check' → logprob: -3.423658847808838
    6. ' n' → logprob: -3.548658847808838
    7. '       ' → logprob: -3.923658847808838
    8. ' for' → logprob: -4.173658847808838
    9. 'import' → logprob: -5.548658847808838
    10. 'from' → logprob: -6.173658847808838

Token 803: ' the' (ID: 290)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4236111640930176
    2. 'def' → logprob: -1.6736111640930176
    3. 'for' → logprob: -2.1736111640930176
    4. '   ' → logprob: -3.6736111640930176
    5. ' n' → logprob: -5.173611164093018
    6. ' for' → logprob: -5.548611164093018
    7. '       ' → logprob: -5.798611164093018
    8. 'num' → logprob: -5.798611164093018
    9. ' def' → logprob: -6.548611164093018
    10. 'from' → logprob: -7.548611164093018

Token 804: ' segment' (ID: 14806)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4563499987125397
    2. 'for' → logprob: -1.7063499689102173
    3. 'n' → logprob: -1.8313499689102173
    4. 'from' → logprob: -4.581349849700928
    5. 'cross' → logprob: -5.706349849700928
    6. 'import' → logprob: -6.331349849700928
    7. 'polygon' → logprob: -6.581349849700928
    8. 'p' → logprob: -6.706349849700928
    9. 'prev' → logprob: -6.706349849700928
    10. 'direction' → logprob: -6.831349849700928

Token 805: ' ab' (ID: 692)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6473045945167542
    2. 'for' → logprob: -1.1473045349121094
    3. 'n' → logprob: -2.7723045349121094
    4. '   ' → logprob: -2.7723045349121094
    5. 'ab' → logprob: -4.272304534912109
    6. '       ' → logprob: -5.272304534912109
    7. 'def' → logprob: -5.522304534912109
    8. ' ab' → logprob: -5.647304534912109
    9. 'p' → logprob: -5.897304534912109
    10. ' n' → logprob: -6.522304534912109

Token 806: ' lies' (ID: 24384)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12770679593086243
    2. ' for' → logprob: -2.50270676612854
    3. '   ' → logprob: -4.252707004547119
    4. 'for' → logprob: -4.627707004547119
    5. ',' → logprob: -6.127707004547119
    6. ' if' → logprob: -6.377707004547119
    7. ''s' → logprob: -6.627707004547119
    8. ' is' → logprob: -6.877707004547119
    9. ' with' → logprob: -7.002707004547119
    10. ' that' → logprob: -7.002707004547119

Token 807: ' inside' (ID: 6772)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.12220257520675659
    2. 'com' → logprob: -2.6222026348114014
    3. ' entirely' → logprob: -3.8722026348114014
    4. 'strict' → logprob: -4.497202396392822
    5. 'fully' → logprob: -5.497202396392822
    6. ' completely' → logprob: -5.747202396392822
    7. 'inside' → logprob: -6.247202396392822
    8. ' strictly' → logprob: -7.497202396392822
    9. ' fully' → logprob: -8.37220287322998
    10. '_ent' → logprob: -8.74720287322998

Token 808: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.8468242287635803
    2. 'or' → logprob: -1.3468241691589355
    3. ' the' → logprob: -1.7218241691589355
    4. 'the' → logprob: -2.7218241691589355
    5. ' polygon' → logprob: -3.5968241691589355
    6. 'polygon' → logprob: -3.7218241691589355
    7. '       ' → logprob: -4.4718241691589355
    8. 'for' → logprob: -6.8468241691589355
    9. ' for' → logprob: -7.3468241691589355
    10. ' (' → logprob: -7.8468241691589355

Token 809: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.007273775525391102
    2. ' on' → logprob: -5.0072736740112305
    3. '   ' → logprob: -8.63227367401123
    4. '
' → logprob: -9.75727367401123
    5. 'outside' → logprob: -10.25727367401123
    6. 'exact' → logprob: -10.50727367401123
    7. 'strict' → logprob: -10.75727367401123
    8. '       ' → logprob: -10.75727367401123
    9. 'polygon' → logprob: -10.88227367401123
    10. '```' → logprob: -11.25727367401123

Token 810: ' polygon' (ID: 65081)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.133707046508789
    2. ' polygon' → logprob: -1.258707046508789
    3. ' the' → logprob: -1.508707046508789
    4. 'polygon' → logprob: -1.758707046508789
    5. '       ' → logprob: -7.758707046508789
    6. '   ' → logprob: -8.883707046508789
    7. 'poly' → logprob: -10.633707046508789
    8. '_polygon' → logprob: -10.758707046508789
    9. 'pol' → logprob: -11.383707046508789
    10. '
' → logprob: -11.383707046508789

Token 811: ' boundary' (ID: 35021)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6888096928596497
    2. '       ' → logprob: -1.0638096332550049
    3. ':' → logprob: -2.438809633255005
    4. '.' → logprob: -3.563809633255005
    5. ',' → logprob: -5.063809871673584
    6. ':
' → logprob: -5.063809871673584
    7. '
' → logprob: -5.313809871673584
    8. '.
' → logprob: -5.438809871673584
    9. 'def' → logprob: -5.813809871673584
    10. ' for' → logprob: -5.938809871673584

Token 812: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00321205728687346
    2. ',' → logprob: -6.253211975097656
    3. '.' → logprob: -7.378211975097656
    4. ':' → logprob: -8.128211975097656
    5. '
' → logprob: -9.378211975097656
    6. '   ' → logprob: -9.628211975097656
    7. ' (' → logprob: -10.003211975097656
    8. '        
' → logprob: -10.628211975097656
    9. ' for' → logprob: -10.878211975097656
    10. ' or' → logprob: -11.253211975097656

Token 813: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013089290587231517
    2. '
' → logprob: -6.751308917999268
    3. '        
' → logprob: -10.126309394836426
    4. '   ' → logprob: -10.376309394836426
    5. ',' → logprob: -10.501309394836426
    6. ' if' → logprob: -12.501309394836426
    7. '           ' → logprob: -12.626309394836426
    8. ' for' → logprob: -12.751309394836426
    9. ' line' → logprob: -12.876309394836426
    10. '    
' → logprob: -12.876309394836426

Token 814: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02202795259654522
    2. 'def' → logprob: -4.772027969360352
    3. 'n' → logprob: -5.147027969360352
    4. 'if' → logprob: -5.897027969360352
    5. 'for' → logprob: -6.772027969360352
    6. '#' (adapté à ' #') → logprob: -7.272027969360352
    7. ' if' → logprob: -7.397027969360352
    8. ' EPS' → logprob: -8.022027969360352
    9. '   ' → logprob: -8.147027969360352
    10. 'eps' → logprob: -8.397027969360352

Token 815: ' It' (ID: 1225)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7115731835365295
    2. 'n' → logprob: -1.4615731239318848
    3. '       ' → logprob: -2.3365731239318848
    4. '   ' → logprob: -2.4615731239318848
    5. 'if' → logprob: -2.9615731239318848
    6. 'for' → logprob: -4.211573123931885
    7. '#' → logprob: -4.961573123931885
    8. ' n' → logprob: -5.086573123931885
    9. ' if' → logprob: -5.461573123931885
    10. ' def' → logprob: -5.461573123931885

Token 816: ' is' (ID: 382)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3841577768325806
    2. 'def' → logprob: -1.3841577768325806
    3. ' is' → logprob: -1.6341577768325806
    4. ' def' → logprob: -2.634157657623291
    5. ' =' → logprob: -2.759157657623291
    6. 's' → logprob: -2.884157657623291
    7. '       ' → logprob: -3.259157657623291
    8. '=' → logprob: -3.884157657623291
    9. ':' → logprob: -4.634157657623291
    10. '.' → logprob: -5.384157657623291

Token 817: ' true' (ID: 1343)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.3326164484024048
    2. ' True' → logprob: -1.4576164484024048
    3. 's' → logprob: -4.457616329193115
    4. 'not' → logprob: -4.707616329193115
    5. ' not' → logprob: -5.082616329193115
    6. 'def' → logprob: -5.582616329193115
    7. 'all' → logprob: -5.707616329193115
    8. 'true' → logprob: -5.707616329193115
    9. '   ' → logprob: -5.832616329193115
    10. '       ' → logprob: -5.957616329193115

Token 818: ' iff' (ID: 165577)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.018223106861114502
    2. 'if' → logprob: -4.143223285675049
    3. ' only' → logprob: -6.768223285675049
    4. '   ' → logprob: -8.01822280883789
    5. ' that' → logprob: -8.01822280883789
    6. '       ' → logprob: -9.64322280883789
    7. ' iff' → logprob: -9.76822280883789
    8. 'that' → logprob: -9.89322280883789
    9. 'def' → logprob: -10.01822280883789
    10. ' for' → logprob: -10.01822280883789

Token 819: ' for' (ID: 395)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.027346421033143997
    2. ' all' → logprob: -4.527346611022949
    3. 'Boundary' → logprob: -4.777346611022949
    4. 'for' → logprob: -5.402346611022949
    5. 'not' → logprob: -5.902346611022949
    6. '   ' → logprob: -8.77734661102295
    7. '       ' → logprob: -9.27734661102295
    8. '(all' → logprob: -9.77734661102295
    9. ' Boundary' → logprob: -9.90234661102295
    10. 'len' → logprob: -10.02734661102295

Token 820: ' every' (ID: 1753)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.6806463599205017
    2. ' all' → logprob: -1.3056464195251465
    3. 'p' → logprob: -2.0556464195251465
    4. 'point' → logprob: -2.8056464195251465
    5. 'pt' → logprob: -4.0556464195251465
    6. 'i' → logprob: -5.3056464195251465
    7. ' p' → logprob: -5.8056464195251465
    8. 'vertex' → logprob: -6.3056464195251465
    9. 'each' → logprob: -6.6806464195251465
    10. '   ' → logprob: -6.6806464195251465

Token 821: ' polygon' (ID: 65081)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.18045301735401154
    2. 'p' → logprob: -2.430453062057495
    3. ' i' → logprob: -3.555453062057495
    4. 'edge' → logprob: -3.805453062057495
    5. ' p' → logprob: -4.680452823638916
    6. 'point' → logprob: -4.930452823638916
    7. 'vertex' → logprob: -5.305452823638916
    8. ' edge' → logprob: -6.055452823638916
    9. ' vertex' → logprob: -7.805452823638916
    10. 'v' → logprob: -7.805452823638916

Token 822: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.6332536935806274
    2. 'edge' → logprob: -0.7582536935806274
    3. 'vertex' → logprob: -8.383254051208496
    4. '_edge' → logprob: -8.883254051208496
    5. 'point' → logprob: -9.383254051208496
    6. ' vertex' → logprob: -9.508254051208496
    7. '   ' → logprob: -10.383254051208496
    8. '-edge' → logprob: -10.508254051208496
    9. ' ' → logprob: -10.633254051208496
    10. ' point' → logprob: -11.633254051208496

Token 823: ' e' (ID: 319)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.8120880126953125
    2. ',' → logprob: -1.4370880126953125
    3. 'p' → logprob: -2.1870880126953125
    4. ' (' → logprob: -2.8120880126953125
    5. '(p' → logprob: -2.9370880126953125
    6. 'i' → logprob: -3.5620880126953125
    7. 'e' → logprob: -4.5620880126953125
    8. ' i' → logprob: -4.6870880126953125
    9. '   ' → logprob: -4.8120880126953125
    10. '       ' → logprob: -5.0620880126953125

Token 824: ',' (ID: 11)
  Prédit: 'dge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dge' → logprob: -0.7258535623550415
    2. 'd' → logprob: -1.2258535623550415
    3. ' in' → logprob: -1.8508535623550415
    4. ',' → logprob: -3.100853443145752
    5. 't' → logprob: -5.100853443145752
    6. ' (' → logprob: -5.475853443145752
    7. 'ct' → logprob: -6.100853443145752
    8. 'def' → logprob: -6.600853443145752
    9. 'nt' → logprob: -6.600853443145752
    10. ' =' → logprob: -7.600853443145752

Token 825: ' points' (ID: 5571)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23785294592380524
    2. 'polygon' → logprob: -2.7378530502319336
    3. 'Boundary' → logprob: -3.3628530502319336
    4. ' polygon' → logprob: -3.3628530502319336
    5. ' Boundary' → logprob: -3.8628530502319336
    6. '   ' → logprob: -4.987853050231934
    7. 'def' → logprob: -4.987853050231934
    8. '(p' → logprob: -4.987853050231934
    9. 'p' → logprob: -5.112853050231934
    10. ' (' → logprob: -5.487853050231934

Token 826: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07814744114875793
    2. ' a' → logprob: -3.8281474113464355
    3. '=' → logprob: -4.0781474113464355
    4. ' =' → logprob: -4.2031474113464355
    5. '       ' → logprob: -5.3281474113464355
    6. 'e' → logprob: -5.4531474113464355
    7. '[' → logprob: -6.0781474113464355
    8. 'p' → logprob: -6.0781474113464355
    9. '=a' → logprob: -6.7031474113464355
    10. 'def' → logprob: -7.4531474113464355

Token 827: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.18401940166950226
    2. ' and' → logprob: -1.8090194463729858
    3. ',' → logprob: -5.684019565582275
    4. ')' → logprob: -8.184019088745117
    5. ' ' → logprob: -8.809019088745117
    6. '.' → logprob: -9.434019088745117
    7. '   ' → logprob: -9.934019088745117
    8. '       ' → logprob: -10.059019088745117
    9. 'a' → logprob: -10.309019088745117
    10. '<|end|>' → logprob: -10.684019088745117

Token 828: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5231279134750366
    2. ' b' → logprob: -0.8981279134750366
    3. '       ' → logprob: -13.648127555847168
    4. 'e' → logprob: -13.773127555847168
    5. ' e' → logprob: -14.023127555847168
    6. '   ' → logprob: -14.648127555847168
    7. ' polygon' → logprob: -15.273127555847168
    8. ' ' → logprob: -15.523127555847168
    9. ' and' → logprob: -16.273128509521484
    10. '	b' → logprob: -16.398128509521484

Token 829: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.7529803514480591
    2. ' lie' → logprob: -1.002980351448059
    3. ' and' → logprob: -2.7529802322387695
    4. 'are' → logprob: -2.7529802322387695
    5. 'and' → logprob: -4.2529802322387695
    6. ',' → logprob: -4.5029802322387695
    7. '   ' → logprob: -5.8779802322387695
    8. '       ' → logprob: -6.5029802322387695
    9. ' do' → logprob: -6.7529802322387695
    10. 'lie' → logprob: -6.8779802322387695

Token 830: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.024990811944007874
    2. 'not' → logprob: -4.149991035461426
    3. ' on' → logprob: -4.774991035461426
    4. ' not' → logprob: -8.274991035461426
    5. 'both' → logprob: -9.399991035461426
    6. ' ' → logprob: -10.899991035461426
    7. 'in' → logprob: -11.024991035461426
    8. 'to' → logprob: -11.149991035461426
    9. '   ' → logprob: -11.274991035461426
    10. 'ont' → logprob: -11.649991035461426

Token 831: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.07822097092866898
    2. ' the' → logprob: -2.703221082687378
    3. 'same' → logprob: -5.328220844268799
    4. 'or' → logprob: -6.328220844268799
    5. ' or' → logprob: -6.578220844268799
    6. ' same' → logprob: -9.328221321105957
    7. ')' → logprob: -10.953221321105957
    8. '   ' → logprob: -11.328221321105957
    9. ' ' → logprob: -11.578221321105957
    10. '<|end|>' → logprob: -11.578221321105957

Token 832: ' same' (ID: 2684)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.014901205897331238
    2. ' same' → logprob: -4.264901161193848
    3. '<=' → logprob: -8.514901161193848
    4. 'not' → logprob: -9.139901161193848
    5. 'right' → logprob: -9.639901161193848
    6. 'or' → logprob: -10.264901161193848
    7. ' ' → logprob: -10.514901161193848
    8. 'correct' → logprob: -10.639901161193848
    9. 'side' → logprob: -10.764901161193848
    10. ''s' → logprob: -10.764901161193848

Token 833: ' side' (ID: 4307)
  Prédit: ' side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' side' → logprob: -0.3212025761604309
    2. ' or' → logprob: -2.071202516555786
    3. ' ' → logprob: -3.196202516555786
    4. ' line' → logprob: -3.321202516555786
    5. 'side' → logprob: -3.446202516555786
    6. '_side' → logprob: -4.946202754974365
    7. ')' → logprob: -5.071202754974365
    8. '   ' → logprob: -5.196202754974365
    9. 'or' → logprob: -5.446202754974365
    10. 'line' → logprob: -5.446202754974365

Token 834: ' or' (ID: 503)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.7087469100952148
    2. ' or' → logprob: -0.7087469100952148
    3. '       ' → logprob: -4.708746910095215
    4. 'or' → logprob: -6.208746910095215
    5. 'of' → logprob: -6.333746910095215
    6. ' (' → logprob: -7.083746910095215
    7. ',' → logprob: -7.708746910095215
    8. '    ' → logprob: -8.458746910095215
    9. '        ' → logprob: -8.583746910095215
    10. '   ' → logprob: -8.583746910095215

Token 835: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.02551109716296196
    2. ' on' → logprob: -3.7755110263824463
    3. ' ' → logprob: -6.900511264801025
    4. ' exactly' → logprob: -7.650511264801025
    5. 'exact' → logprob: -8.150510787963867
    6. '   ' → logprob: -8.400510787963867
    7. 'col' → logprob: -9.650510787963867
    8. 'e' → logprob: -10.150510787963867
    9. '	on' → logprob: -10.900510787963867
    10. ' col' → logprob: -11.025510787963867

Token 836: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.32509323954582214
    2. ' the' → logprob: -1.4500932693481445
    3. 'e' → logprob: -3.3250932693481445
    4. 'Boundary' → logprob: -6.0750932693481445
    5. '   ' → logprob: -7.3250932693481445
    6. '       ' → logprob: -7.7000932693481445
    7. ' e' → logprob: -7.7000932693481445
    8. 'line' → logprob: -7.9500932693481445
    9. '_boundary' → logprob: -8.200093269348145
    10. 'boundary' → logprob: -8.450093269348145

Token 837: ' edge' (ID: 11165)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.9970770478248596
    2. 'boundary' → logprob: -1.6220769882202148
    3. 'line' → logprob: -2.122076988220215
    4. '0' → logprob: -2.872076988220215
    5. 'edge' → logprob: -2.997076988220215
    6. ' boundary' → logprob: -2.997076988220215
    7. ' line' → logprob: -3.247076988220215
    8. 'Boundary' → logprob: -3.872076988220215
    9. 'polygon' → logprob: -3.997076988220215
    10. '=' → logprob: -3.997076988220215

Token 838: ' line' (ID: 2543)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8350772857666016
    2. '.' → logprob: -1.5850772857666016
    3. ',' → logprob: -1.8350772857666016
    4. ':' → logprob: -2.0850772857666016
    5. ' or' → logprob: -2.9600772857666016
    6. ' of' → logprob: -4.085077285766602
    7. ' (' → logprob: -5.710077285766602
    8. '   ' → logprob: -6.460077285766602
    9. 'or' → logprob: -6.960077285766602
    10. '(' → logprob: -6.960077285766602

Token 839: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7293760180473328
    2. '.' → logprob: -1.2293760776519775
    3. ',' → logprob: -2.3543760776519775
    4. ' or' → logprob: -2.3543760776519775
    5. ' (' → logprob: -4.104375839233398
    6. ' of' → logprob: -4.854375839233398
    7. ':' → logprob: -4.854375839233398
    8. '(' → logprob: -6.854375839233398
    9. 'or' → logprob: -7.604375839233398
    10. '   ' → logprob: -7.729375839233398

Token 840: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002267539966851473
    2. '   ' → logprob: -7.127267360687256
    3. ',' → logprob: -7.377267360687256
    4. '           ' → logprob: -8.752267837524414
    5. ' or' → logprob: -9.127267837524414
    6. ':' → logprob: -9.252267837524414
    7. ')' → logprob: -9.377267837524414
    8. '(' → logprob: -9.377267837524414
    9. ' and' → logprob: -9.877267837524414
    10. '        
' → logprob: -10.252267837524414

Token 841: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008071291376836598
    2. ':' → logprob: -8.50080680847168
    3. ' for' → logprob: -8.87580680847168
    4. ',' → logprob: -9.50080680847168
    5. ' polygon' → logprob: -9.62580680847168
    6. '        
' → logprob: -9.87580680847168
    7. '   ' → logprob: -10.00080680847168
    8. 'n' → logprob: -10.37580680847168
    9. 'for' → logprob: -10.75080680847168
    10. '
' → logprob: -11.00080680847168

Token 842: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23518872261047363
    2. ' for' → logprob: -2.3601887226104736
    3. 'for' → logprob: -2.6101887226104736
    4. 'n' → logprob: -3.4851887226104736
    5. ' n' → logprob: -5.1101884841918945
    6. '   ' → logprob: -5.7351884841918945
    7. 'def' → logprob: -7.1101884841918945
    8. 'polygon' → logprob: -8.860188484191895
    9. ' polygon' → logprob: -9.360188484191895
    10. ' ' → logprob: -10.235188484191895

Token 843: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4393848776817322
    2. ' n' → logprob: -2.189384937286377
    3. 'for' → logprob: -2.439384937286377
    4. 'n' → logprob: -2.439384937286377
    5. '       ' → logprob: -2.814384937286377
    6. '   ' → logprob: -5.564384937286377
    7. ' polygon' → logprob: -5.814384937286377
    8. 'polygon' → logprob: -7.064384937286377
    9. 'def' → logprob: -7.939384937286377
    10. ' prev' → logprob: -8.314384460449219

Token 844: ' each' (ID: 2454)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.9632700085639954
    2. 'p' → logprob: -1.5882699489593506
    3. 'i' → logprob: -1.7132699489593506
    4. 'e' → logprob: -2.2132699489593506
    5. ' edge' → logprob: -2.5882699489593506
    6. ' p' → logprob: -4.33827018737793
    7. 'point' → logprob: -4.71327018737793
    8. 'polygon' → logprob: -4.71327018737793
    9. ' i' → logprob: -4.83827018737793
    10. 'poly' → logprob: -5.71327018737793

Token 845: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.29868340492248535
    2. ' edge' → logprob: -1.9236834049224854
    3. 'e' → logprob: -2.2986834049224854
    4. 'i' → logprob: -4.798683166503906
    5. ' e' → logprob: -6.298683166503906
    6. ' i' → logprob: -6.923683166503906
    7. 'point' → logprob: -8.048683166503906
    8. '_edge' → logprob: -9.673683166503906
    9. 'Edge' → logprob: -9.673683166503906
    10. 'p' → logprob: -9.798683166503906

Token 846: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16111034154891968
    2. '       ' → logprob: -3.0361104011535645
    3. ' e' → logprob: -3.6611104011535645
    4. ',' → logprob: -4.2861104011535645
    5. 'e' → logprob: -4.2861104011535645
    6. ' polygon' → logprob: -4.4111104011535645
    7. ' of' → logprob: -4.7861104011535645
    8. ' p' → logprob: -4.9111104011535645
    9. ' edge' → logprob: -5.1611104011535645
    10. '   ' → logprob: -5.1611104011535645

Token 847: ' determine' (ID: 11433)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6267611980438232
    2. 'for' → logprob: -1.0017611980438232
    3. '   ' → logprob: -3.0017611980438232
    4. ' for' → logprob: -3.7517611980438232
    5. ' p' → logprob: -4.251761436462402
    6. 'def' → logprob: -6.126761436462402
    7. 'px' → logprob: -6.126761436462402
    8. 'n' → logprob: -6.376761436462402
    9. 'prev' → logprob: -6.751761436462402
    10. '       ' → logprob: -6.876761436462402

Token 848: ' the' (ID: 290)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.7564041614532471
    2. 'px' → logprob: -1.131404161453247
    3. '       ' → logprob: -2.756404161453247
    4. '   ' → logprob: -3.506404161453247
    5. '(px' → logprob: -3.881404161453247
    6. 'def' → logprob: -4.256403923034668
    7. 'v' → logprob: -4.506403923034668
    8. 'ax' → logprob: -4.506403923034668
    9. ' px' → logprob: -4.756403923034668
    10. 'x' → logprob: -5.131403923034668

Token 849: ' signed' (ID: 14759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9004139304161072
    2. 'px' → logprob: -1.400413990020752
    3. 'p' → logprob: -2.150413990020752
    4. 'polygon' → logprob: -2.150413990020752
    5. 'poly' → logprob: -3.775413990020752
    6. 'x' → logprob: -3.900413990020752
    7. 'dx' → logprob: -4.275413990020752
    8. 'ax' → logprob: -4.650413990020752
    9. 'orientation' → logprob: -4.900413990020752
    10. 'side' → logprob: -5.025413990020752

Token 850: ' side' (ID: 4307)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.2772321403026581
    2. 'area' → logprob: -1.5272321701049805
    3. ' distance' → logprob: -4.0272321701049805
    4. ' area' → logprob: -5.1522321701049805
    5. 'dist' → logprob: -7.1522321701049805
    6. 'def' → logprob: -8.77723217010498
    7. '_area' → logprob: -8.77723217010498
    8. ' ' → logprob: -9.27723217010498
    9. '_distance' → logprob: -9.52723217010498
    10. ' distances' → logprob: -9.90223217010498

Token 851: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5932356119155884
    2. ' of' → logprob: -1.4682356119155884
    3. 'def' → logprob: -2.218235492706299
    4. ':' → logprob: -2.968235492706299
    5. ',' → logprob: -4.468235492706299
    6. 'of' → logprob: -4.593235492706299
    7. ' (' → logprob: -4.968235492706299
    8. '   ' → logprob: -5.218235492706299
    9. ' for' → logprob: -5.843235492706299
    10. 'import' → logprob: -5.843235492706299

Token 852: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.031847815960645676
    2. 'polygon' → logprob: -3.7818477153778076
    3. 'the' → logprob: -6.031847953796387
    4. 'p' → logprob: -6.406847953796387
    5. 'point' → logprob: -6.656847953796387
    6. 'e' → logprob: -6.656847953796387
    7. ' a' → logprob: -7.531847953796387
    8. ' polygon' → logprob: -8.031847953796387
    9. 'poly' → logprob: -8.156847953796387
    10. 'edge' → logprob: -9.281847953796387

Token 853: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0365382581949234
    2. 'and' → logprob: -4.286538124084473
    3. ',' → logprob: -4.661538124084473
    4. ' ' → logprob: -5.911538124084473
    5. ' (' → logprob: -5.911538124084473
    6. ' ,' → logprob: -6.661538124084473
    7. '  ' → logprob: -6.661538124084473
    8. '   ' → logprob: -7.661538124084473
    9. 'def' → logprob: -7.661538124084473
    10. ':' → logprob: -7.911538124084473

Token 854: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.18078109622001648
    2. ' b' → logprob: -1.8057811260223389
    3. ' the' → logprob: -7.18078088760376
    4. 'the' → logprob: -8.680781364440918
    5. ' ' → logprob: -10.930781364440918
    6. '   ' → logprob: -11.180781364440918
    7. 'e' → logprob: -11.305781364440918
    8. ' e' → logprob: -11.805781364440918
    9. 'Point' → logprob: -11.805781364440918
    10. ' of' → logprob: -12.180781364440918

Token 855: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6180703043937683
    2. ',' → logprob: -1.743070363998413
    3. ':' → logprob: -1.743070363998413
    4. '(' → logprob: -3.243070363998413
    5. '   ' → logprob: -4.118070125579834
    6. '.' → logprob: -4.243070125579834
    7. ' =' → logprob: -4.743070125579834
    8. ' (' → logprob: -4.743070125579834
    9. ' of' → logprob: -5.868070125579834
    10. ' ' → logprob: -6.243070125579834

Token 856: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000802480208221823
    2. '   ' → logprob: -7.875802516937256
    3. '        
' → logprob: -9.000802040100098
    4. ',' → logprob: -9.375802040100098
    5. '           ' → logprob: -9.750802040100098
    6. ' for' → logprob: -10.000802040100098
    7. ':' → logprob: -10.875802040100098
    8. '    
' → logprob: -11.625802040100098
    9. '\' → logprob: -11.750802040100098
    10. '(' → logprob: -11.750802040100098

Token 857: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.018945574760437
    2. 'def' (adapté à ' def') → logprob: -1.018945574760437
    3. 'n' → logprob: -2.5189456939697266
    4. ' for' → logprob: -2.7689456939697266
    5. ' def' → logprob: -2.7689456939697266
    6. ' n' → logprob: -3.2689456939697266
    7. 'for' → logprob: -3.6439456939697266
    8. '   ' → logprob: -5.643945693969727
    9. ' polygon' → logprob: -7.018945693969727
    10. 'polygon' → logprob: -7.143945693969727

Token 858: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.030234400182962418
    2. 'sign' → logprob: -4.405234336853027
    3. 'orientation' → logprob: -4.530234336853027
    4. 'side' → logprob: -6.155234336853027
    5. ' cross' → logprob: -6.405234336853027
    6. 'orient' → logprob: -6.655234336853027
    7. 'signed' → logprob: -7.655234336853027
    8. 'vector' → logprob: -7.905234336853027
    9. 'point' → logprob: -7.905234336853027
    10. 'edge' → logprob: -8.530234336853027

Token 859: '(o' (ID: 18928)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.45997336506843567
    2. '(o' → logprob: -1.8349733352661133
    3. '_product' → logprob: -2.9599733352661133
    4. '(' → logprob: -3.2099733352661133
    5. '(v' → logprob: -3.2099733352661133
    6. '(p' → logprob: -3.4599733352661133
    7. '(
' → logprob: -4.084973335266113
    8. '(z' → logprob: -4.834973335266113
    9. '(u' → logprob: -5.334973335266113
    10. '(A' → logprob: -5.709973335266113

Token 860: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0034193892497569323
    2. ' ,' → logprob: -6.503419399261475
    3. '<|end|>' → logprob: -8.003418922424316
    4. ',p' → logprob: -8.253418922424316
    5. '(Point' → logprob: -8.253418922424316
    6. '(p' → logprob: -8.503418922424316
    7. '-product' → logprob: -9.003418922424316
    8. '_product' → logprob: -9.253418922424316
    9. ':' → logprob: -9.253418922424316
    10. 'Product' → logprob: -9.378418922424316

Token 861: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0025489083491265774
    2. 'lambda' → logprob: -6.002548694610596
    3. '(Point' → logprob: -10.502549171447754
    4. ' Point' → logprob: -11.377549171447754
    5. '(lambda' → logprob: -11.502549171447754
    6. ''' → logprob: -11.502549171447754
    7. '       ' → logprob: -13.002549171447754
    8. '   ' → logprob: -13.127549171447754
    9. '<Point' → logprob: -13.252549171447754
    10. '	Point' → logprob: -13.377549171447754

Token 862: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.3120038501219824e-05
    2. ' ,' → logprob: -10.750053405761719
    3. 'a' → logprob: -11.000053405761719
    4. ',p' → logprob: -12.375053405761719
    5. ',a' → logprob: -12.625053405761719
    6. 'b' → logprob: -13.125053405761719
    7. '<|end|>' → logprob: -13.500053405761719
    8. 'p' → logprob: -14.000053405761719
    9. ',b' → logprob: -14.125053405761719
    10. ',
' → logprob: -14.250053405761719

Token 863: ' p' (ID: 275)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -6.277553620748222e-05
    2. 'p' → logprob: -9.750062942504883
    3. ' a' → logprob: -13.125062942504883
    4. 'x' → logprob: -13.875062942504883
    5. 'b' → logprob: -14.625062942504883
    6. 'r' → logprob: -14.875062942504883
    7. 'ax' → logprob: -15.875062942504883
    8. '
' → logprob: -16.250062942504883
    9. 'aa' → logprob: -16.250062942504883
    10. 'A' → logprob: -16.500062942504883

Token 864: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005294414004310966
    2. ':' → logprob: -7.7505292892456055
    3. 'oints' → logprob: -10.375529289245605
    4. 'oint' → logprob: -10.625529289245605
    5. '<|end|>' → logprob: -11.250529289245605
    6. ' ,' → logprob: -11.375529289245605
    7. 't' → logprob: -12.375529289245605
    8. 'o' → logprob: -13.000529289245605
    9. '<|end|>' → logprob: -13.375529289245605
    10. 'ython' → logprob: -13.750529289245605

Token 865: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -2.546478935983032e-05
    2. ' Point' → logprob: -10.625025749206543
    3. '	Point' → logprob: -14.250025749206543
    4. '(Point' → logprob: -16.000024795532227
    5. '_point' → logprob: -16.375024795532227
    6. '<Point' → logprob: -16.750024795532227
    7. '.Point' → logprob: -17.000024795532227
    8. 'oint' → logprob: -17.125024795532227
    9. '_Point' → logprob: -17.750024795532227
    10. ' ' → logprob: -17.875024795532227

Token 866: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.610702363715973e-06
    2. ' ,' → logprob: -11.625009536743164
    3. ',p' → logprob: -14.500009536743164
    4. '   ' → logprob: -16.625009536743164
    5. 'p' → logprob: -16.875009536743164
    6. '       ' → logprob: -17.750009536743164
    7. ')' → logprob: -17.750009536743164
    8. ',
' → logprob: -18.500009536743164
    9. ',b' → logprob: -18.750009536743164
    10. ',o' → logprob: -18.875009536743164

Token 867: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00027134892297908664
    2. 'r' → logprob: -8.625271797180176
    3. 'c' → logprob: -9.375271797180176
    4. 'a' → logprob: -12.375271797180176
    5. ' q' → logprob: -13.000271797180176
    6. 'x' → logprob: -16.12527084350586
    7. '	q' → logprob: -16.12527084350586
    8. '   ' → logprob: -16.87527084350586
    9. '  ' → logprob: -17.00027084350586
    10. ' ' → logprob: -17.25027084350586

Token 868: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003233070601709187
    2. '):' → logprob: -8.125323295593262
    3. ')' → logprob: -10.625323295593262
    4. '):
' → logprob: -12.875323295593262
    5. ' :' → logprob: -15.500323295593262
    6. ',' → logprob: -17.125324249267578
    7. '_:' → logprob: -17.250324249267578
    8. '):

' → logprob: -17.875324249267578
    9. ' ):' → logprob: -18.000324249267578
    10. '':' → logprob: -18.125324249267578

Token 869: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -1.5048530030981055e-06
    2. ' Point' → logprob: -13.500001907348633
    3. '	Point' → logprob: -18.125001907348633
    4. '(Point' → logprob: -19.250001907348633
    5. '_point' → logprob: -20.500001907348633
    6. '   ' → logprob: -21.250001907348633
    7. '_Point' → logprob: -21.250001907348633
    8. 'point' → logprob: -21.375001907348633
    9. '<Point' → logprob: -21.625001907348633
    10. '.Point' → logprob: -22.000001907348633

Token 870: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017743845819495618
    2. '):
' → logprob: -8.875177383422852
    3. '):' → logprob: -10.375177383422852
    4. ' )' → logprob: -12.500177383422852
    5. '   ' → logprob: -14.000177383422852
    6. ':' → logprob: -14.750177383422852
    7. '')' → logprob: -15.000177383422852
    8. '):
' → logprob: -15.125177383422852
    9. ')->' → logprob: -15.625177383422852
    10. ' ' → logprob: -15.750177383422852

Token 871: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013926156098023057
    2. ':
' → logprob: -7.251392841339111
    3. ' ->' → logprob: -8.376392364501953
    4. '->' → logprob: -8.376392364501953
    5. ')' → logprob: -9.626392364501953
    6. '       ' → logprob: -9.751392364501953
    7. ':return' → logprob: -10.501392364501953
    8. '           ' → logprob: -10.751392364501953
    9. '=' → logprob: -11.126392364501953
    10. '   ' → logprob: -11.501392364501953

Token 872: ' float' (ID: 4428)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.30621492862701416
    2. ' int' → logprob: -1.6812149286270142
    3. 'float' → logprob: -2.8062148094177246
    4. ' float' → logprob: -4.931214809417725
    5. '(int' → logprob: -5.306214809417725
    6. ' (' → logprob: -5.681214809417725
    7. '(float' → logprob: -6.556214809417725
    8. ' ' → logprob: -10.181215286254883
    9. '[int' → logprob: -10.431215286254883
    10. '(' → logprob: -10.806215286254883

Token 873: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006183672230690718
    2. ':
' → logprob: -5.881183624267578
    3. '):' → logprob: -6.131183624267578
    4. '       ' → logprob: -7.881183624267578
    5. ')' → logprob: -8.381183624267578
    6. ',' → logprob: -8.631183624267578
    7. '):
' → logprob: -8.881183624267578
    8. '   ' → logprob: -9.881183624267578
    9. '<|end|>' → logprob: -9.881183624267578
    10. ':return' → logprob: -10.006183624267578

Token 874: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03611636161804199
    2. ' return' → logprob: -4.036116600036621
    3. 'return' → logprob: -4.161116600036621
    4. '               ' → logprob: -6.786116600036621
    5. '   ' → logprob: -7.786116600036621
    6. '       ' → logprob: -8.536116600036621
    7. ' 
' → logprob: -8.911116600036621
    8. '
' → logprob: -9.786116600036621
    9. '                   ' → logprob: -10.161116600036621
    10. '    
' → logprob: -10.286116600036621

Token 875: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.018867412582039833
    2. ' return' → logprob: -4.268867492675781
    3. '           ' → logprob: -5.518867492675781
    4. '   ' → logprob: -8.018867492675781
    5. '(p' → logprob: -8.143867492675781
    6. '	return' → logprob: -10.893867492675781
    7. '       ' → logprob: -11.143867492675781
    8. ' ' → logprob: -11.268867492675781
    9. ' (' → logprob: -11.893867492675781
    10. '(' → logprob: -12.768867492675781

Token 876: ' (' (ID: 350)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0031963700894266367
    2. ' (' → logprob: -5.7531962394714355
    3. '(q' → logprob: -11.253196716308594
    4. ' ' → logprob: -13.503196716308594
    5. '(o' → logprob: -13.503196716308594
    6. '   ' → logprob: -13.753196716308594
    7. '(P' → logprob: -14.128196716308594
    8. '(px' → logprob: -14.253196716308594
    9. '(x' → logprob: -15.628196716308594
    10. '((' → logprob: -16.003196716308594

Token 877: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.735893965815194e-05
    2. '(p' → logprob: -11.250017166137695
    3. 'q' → logprob: -12.500017166137695
    4. ' p' → logprob: -15.000017166137695
    5. '   ' → logprob: -15.625017166137695
    6. '	p' → logprob: -17.375017166137695
    7. ' (' → logprob: -17.375017166137695
    8. '_p' → logprob: -18.125017166137695
    9. '<p' → logprob: -18.125017166137695
    10. 'pq' → logprob: -18.125017166137695

Token 878: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -9.877503907773644e-05
    2. '.' → logprob: -9.250099182128906
    3. 'x' → logprob: -13.500099182128906
    4. ' .' → logprob: -14.125099182128906
    5. '.y' → logprob: -14.625099182128906
    6. ' ' → logprob: -17.750099182128906
    7. ' -' → logprob: -18.125099182128906
    8. '```' → logprob: -18.500099182128906
    9. '   ' → logprob: -18.750099182128906
    10. ').' → logprob: -19.875099182128906

Token 879: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.02324722334742546
    2. '-' → logprob: -3.773247241973877
    3. '-o' → logprob: -13.398246765136719
    4. '   ' → logprob: -16.39824676513672
    5. ' ' → logprob: -16.64824676513672
    6. '```' → logprob: -17.52324676513672
    7. '           ' → logprob: -18.27324676513672
    8. ' -
' → logprob: -18.64824676513672
    9. '-p' → logprob: -18.77324676513672
    10. '
' → logprob: -19.14824676513672

Token 880: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -8.625866030342877e-05
    2. ' o' → logprob: -9.375085830688477
    3. '	o' → logprob: -13.625085830688477
    4. '{o' → logprob: -16.500085830688477
    5. '(o' → logprob: -16.875085830688477
    6. ''o' → logprob: -17.125085830688477
    7. ')o' → logprob: -17.250085830688477
    8. '[o' → logprob: -17.750085830688477
    9. '.o' → logprob: -18.000085830688477
    10. '   ' → logprob: -18.250085830688477

Token 881: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.00032831361750140786
    2. 'x' → logprob: -8.250328063964844
    3. '.' → logprob: -9.625328063964844
    4. ' .' → logprob: -14.250328063964844
    5. 'p' → logprob: -15.875328063964844
    6. '.p' → logprob: -16.625328063964844
    7. '.o' → logprob: -16.625328063964844
    8. '[' → logprob: -17.250328063964844
    9. '.X' → logprob: -18.125328063964844
    10. '.q' → logprob: -18.250328063964844

Token 882: ')*(' (ID: 44406)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25716039538383484
    2. ')*(' → logprob: -1.5071604251861572
    3. ')*' → logprob: -5.257160186767578
    4. '*(' → logprob: -13.382160186767578
    5. ' )' → logprob: -13.382160186767578
    6. '   ' → logprob: -14.132160186767578
    7. '       ' → logprob: -14.257160186767578
    8. ')
' → logprob: -14.507160186767578
    9. '*' → logprob: -14.507160186767578
    10. ')(' → logprob: -14.757160186767578

Token 883: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.014178205281496048
    2. '(q' → logprob: -4.264178276062012
    3. ' q' → logprob: -11.889178276062012
    4. ' (' → logprob: -12.889178276062012
    5. '	q' → logprob: -13.514178276062012
    6. '   ' → logprob: -13.639178276062012
    7. '[q' → logprob: -14.139178276062012
    8. '
' → logprob: -14.639178276062012
    9. '{' → logprob: -14.889178276062012
    10. ' ' → logprob: -15.014178276062012

Token 884: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -1.7954958821064793e-05
    2. '.' → logprob: -11.625018119812012
    3. 'y' → logprob: -11.750018119812012
    4. '.x' → logprob: -14.000018119812012
    5. ' .' → logprob: -16.625017166137695
    6. '[' → logprob: -17.375017166137695
    7. '.q' → logprob: -17.750017166137695
    8. ' ' → logprob: -17.750017166137695
    9. ' y' → logprob: -18.250017166137695
    10. '.py' → logprob: -19.375017166137695

Token 885: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03804149478673935
    2. '-' → logprob: -3.288041591644287
    3. ' ' → logprob: -16.788042068481445
    4. '   ' → logprob: -19.288042068481445
    5. '  ' → logprob: -20.038042068481445
    6. '–' → logprob: -20.038042068481445
    7. ' -
' → logprob: -20.413042068481445
    8. '<|end|>' → logprob: -20.663042068481445
    9. '−' → logprob: -20.913042068481445
    10. '-o' → logprob: -20.913042068481445

Token 886: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.002835899591445923
    2. ' o' → logprob: -5.877835750579834
    3. '(o' → logprob: -10.627836227416992
    4. '	o' → logprob: -12.502836227416992
    5. '{o' → logprob: -13.877836227416992
    6. ''o' → logprob: -14.377836227416992
    7. '[o' → logprob: -15.002836227416992
    8. '   ' → logprob: -15.127836227416992
    9. '_o' → logprob: -15.252836227416992
    10. ')o' → logprob: -15.502836227416992

Token 887: '.y' (ID: 4486)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -8.470901229884475e-05
    2. 'x' → logprob: -10.12508487701416
    3. ' o' → logprob: -10.62508487701416
    4. ' -' → logprob: -12.00008487701416
    5. 'q' → logprob: -12.12508487701416
    6. '-' → logprob: -12.25008487701416
    7. '.o' → logprob: -13.37508487701416
    8. '	o' → logprob: -13.62508487701416
    9. '-o' → logprob: -14.37508487701416
    10. ' ' → logprob: -15.50008487701416

Token 888: ')' (ID: 8)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04761168360710144
    2. ')' → logprob: -3.422611713409424
    3. '-' → logprob: -4.297611713409424
    4. ' )' → logprob: -9.172611236572266
    5. ')-(' → logprob: -9.172611236572266
    6. ' -
' → logprob: -10.797611236572266
    7. ')-' → logprob: -11.297611236572266
    8. ' ' → logprob: -11.672611236572266
    9. '-
' → logprob: -12.422611236572266
    10. '           ' → logprob: -12.672611236572266

Token 889: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.016087042167782784
    2. '-' → logprob: -4.141087055206299
    3. ' -
' → logprob: -10.39108657836914
    4. ' ' → logprob: -11.64108657836914
    5. '-
' → logprob: -12.14108657836914
    6. '   ' → logprob: -13.51608657836914
    7. '        ' → logprob: -13.64108657836914
    8. '    ' → logprob: -13.89108657836914
    9. ' ' → logprob: -14.39108657836914
    10. '           ' → logprob: -14.39108657836914

Token 890: ' (' (ID: 350)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.12704485654830933
    2. ' (' → logprob: -2.127044916152954
    3. '(q' → logprob: -9.127044677734375
    4. '           ' → logprob: -12.627044677734375
    5. ' ' → logprob: -12.627044677734375
    6. '(' → logprob: -14.252044677734375
    7. '   ' → logprob: -14.502044677734375
    8. '  ' → logprob: -16.752044677734375
    9. '               ' → logprob: -16.877044677734375
    10. '       ' → logprob: -16.877044677734375

Token 891: 'p' (ID: 79)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.04929185286164284
    2. '(q' → logprob: -3.4242918491363525
    3. ' (' → logprob: -4.174292087554932
    4. 'q' → logprob: -9.674291610717773
    5. 'p' → logprob: -10.299291610717773
    6. ')(' → logprob: -11.299291610717773
    7. '           ' → logprob: -11.674291610717773
    8. '   ' → logprob: -11.924291610717773
    9. ')' → logprob: -12.549291610717773
    10. '(' → logprob: -12.549291610717773

Token 892: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.04935562238097191
    2. '.x' → logprob: -3.0493555068969727
    3. 'y' → logprob: -7.299355506896973
    4. '.' → logprob: -9.799355506896973
    5. 'x' → logprob: -10.799355506896973
    6. '.q' → logprob: -11.549355506896973
    7. ' ' → logprob: -13.174355506896973
    8. ' y' → logprob: -13.549355506896973
    9. ' .' → logprob: -14.549355506896973
    10. 'q' → logprob: -14.674355506896973

Token 893: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6333863735198975
    2. ' -' → logprob: -0.7583863735198975
    3. '<|end|>' → logprob: -7.383386611938477
    4. '<|end|>' → logprob: -9.758386611938477
    5. ' ' → logprob: -10.258386611938477
    6. ')' → logprob: -10.633386611938477
    7. '[' → logprob: -10.883386611938477
    8. '-o' → logprob: -12.133386611938477
    9. '  ' → logprob: -12.758386611938477
    10. ' (' → logprob: -13.008386611938477

Token 894: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.0010451936395838857
    2. ' o' → logprob: -6.876045227050781
    3. '{o' → logprob: -12.251045227050781
    4. '	o' → logprob: -12.376045227050781
    5. '(o' → logprob: -13.751045227050781
    6. ')o' → logprob: -14.001045227050781
    7. '[o' → logprob: -14.501045227050781
    8. '_o' → logprob: -15.626045227050781
    9. '=o' → logprob: -15.626045227050781
    10. ''o' → logprob: -15.751045227050781

Token 895: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.6379842758178711
    2. '.x' → logprob: -0.7629842758178711
    3. '.o' → logprob: -6.762984275817871
    4. '.' → logprob: -7.012984275817871
    5. 'import' → logprob: -7.012984275817871
    6. 'o' → logprob: -7.387984275817871
    7. 'y' → logprob: -7.762984275817871
    8. '```' → logprob: -8.137984275817871
    9. ')' → logprob: -8.637984275817871
    10. 'x' → logprob: -9.012984275817871

Token 896: ')*(' (ID: 44406)
  Prédit: ')*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*(' → logprob: -0.015885140746831894
    2. '*(' → logprob: -4.640885353088379
    3. ')' → logprob: -5.515885353088379
    4. '(o' → logprob: -6.640885353088379
    5. '(q' → logprob: -7.640885353088379
    6. '*q' → logprob: -9.515885353088379
    7. ')*' → logprob: -9.640885353088379
    8. 'q' → logprob: -10.515885353088379
    9. '(p' → logprob: -10.515885353088379
    10. ')(' → logprob: -10.515885353088379

Token 897: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.3080716346157715e-05
    2. '(q' → logprob: -11.000022888183594
    3. ' q' → logprob: -12.125022888183594
    4. '
' → logprob: -14.875022888183594
    5. '	q' → logprob: -15.625022888183594
    6. '[q' → logprob: -15.875022888183594
    7. '   ' → logprob: -16.250022888183594
    8. 'o' → logprob: -17.000022888183594
    9. '       ' → logprob: -17.250022888183594
    10. '```' → logprob: -17.250022888183594

Token 898: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -6.182190554682165e-05
    2. 'x' → logprob: -9.875061988830566
    3. '.q' → logprob: -11.750061988830566
    4. '.' → logprob: -13.500061988830566
    5. '[' → logprob: -15.250061988830566
    6. '.y' → logprob: -15.375061988830566
    7. 'q' → logprob: -15.875061988830566
    8. '1' → logprob: -16.12506103515625
    9. '```' → logprob: -16.25006103515625
    10. '	x' → logprob: -16.87506103515625

Token 899: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5759754776954651
    2. ' -' → logprob: -0.8259754776954651
    3. '-o' → logprob: -10.32597541809082
    4. ' ' → logprob: -14.07597541809082
    5. '```' → logprob: -14.20097541809082
    6. '-
' → logprob: -14.70097541809082
    7. 'o' → logprob: -14.95097541809082
    8. ')' → logprob: -15.45097541809082
    9. ' -
' → logprob: -15.70097541809082
    10. '[' → logprob: -16.20097541809082

Token 900: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -5.8961017202818766e-05
    2. ' o' → logprob: -9.750059127807617
    3. '	o' → logprob: -15.125059127807617
    4. '(o' → logprob: -16.125059127807617
    5. '[o' → logprob: -16.250059127807617
    6. '{o' → logprob: -16.500059127807617
    7. '$o' → logprob: -18.125059127807617
    8. '=o' → logprob: -18.250059127807617
    9. ')o' → logprob: -18.250059127807617
    10. '-o' → logprob: -18.625059127807617

Token 901: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0008871606551110744
    2. 'x' → logprob: -7.125887393951416
    3. '.o' → logprob: -9.750886917114258
    4. '```' → logprob: -11.625886917114258
    5. '.' → logprob: -12.375886917114258
    6. 'o' → logprob: -12.625886917114258
    7. '.q' → logprob: -13.125886917114258
    8. ')' → logprob: -13.750886917114258
    9. ').' → logprob: -13.875886917114258
    10. '0' → logprob: -14.375886917114258

Token 902: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008009305456653237
    2. '       ' → logprob: -7.750801086425781
    3. ')
' → logprob: -8.000801086425781
    4. ')

' → logprob: -10.625801086425781
    5. ' )' → logprob: -12.250801086425781
    6. ')
' → logprob: -13.125801086425781
    7. '   ' → logprob: -13.500801086425781
    8. ')`' → logprob: -13.750801086425781
    9. ' ' → logprob: -15.125801086425781
    10. ')

' → logprob: -15.250801086425781

Token 903: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009215624071657658
    2. '
' → logprob: -4.759215831756592
    3. '        
' → logprob: -7.884215831756592
    4. '   ' → logprob: -9.759215354919434
    5. '    
' → logprob: -9.759215354919434
    6. '  
' → logprob: -10.259215354919434
    7. ',' → logprob: -11.509215354919434
    8. '<|end|>' → logprob: -11.634215354919434
    9. '' → logprob: -11.884215354919434
    10. '           ' → logprob: -12.259215354919434

Token 904: ' n' (ID: 297)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7557093501091003
    2. 'for' → logprob: -1.5057094097137451
    3. 'n' (adapté à ' n') → logprob: -1.7557094097137451
    4. ' for' → logprob: -2.130709409713745
    5. ' n' → logprob: -4.255709171295166
    6. 'sign' → logprob: -7.130709171295166
    7. '   ' → logprob: -7.755709171295166
    8. 'side' → logprob: -8.005709648132324
    9. 'inside' → logprob: -8.380709648132324
    10. ' inside' → logprob: -8.755709648132324

Token 905: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06324250251054764
    2. '=' → logprob: -2.8132424354553223
    3. '<|end|>' → logprob: -7.688242435455322
    4. ' ' → logprob: -8.06324291229248
    5. '=len' → logprob: -8.56324291229248
    6. '   ' → logprob: -9.43824291229248
    7. ',' → logprob: -9.68824291229248
    8. '       ' → logprob: -10.18824291229248
    9. ':' → logprob: -10.18824291229248
    10. ')' → logprob: -10.43824291229248

Token 906: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00033546582562848926
    2. ' len' → logprob: -8.000335693359375
    3. '(len' → logprob: -17.875335693359375
    4. '[len' → logprob: -19.375335693359375
    5. '	len' → logprob: -21.000335693359375
    6. '=len' → logprob: -21.250335693359375
    7. '   ' → logprob: -22.625335693359375
    8. '<len' → logprob: -24.500335693359375
    9. 'Len' → logprob: -24.750335693359375
    10. '```' → logprob: -24.875335693359375

Token 907: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -3.650518920039758e-06
    2. 'polygon' → logprob: -13.000003814697266
    3. '(' → logprob: -14.375003814697266
    4. '(poly' → logprob: -15.250003814697266
    5. '(pol' → logprob: -15.500003814697266
    6. ' polygon' → logprob: -15.625003814697266
    7. 'p' → logprob: -17.625003814697266
    8. '(
' → logprob: -18.250003814697266
    9. ' (' → logprob: -19.250003814697266
    10. 'olygon' → logprob: -19.375003814697266

Token 908: 'olygon' (ID: 80431)
  Prédit: 'olygon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olygon' → logprob: -0.011814111843705177
    2. '(p' → logprob: -4.636814117431641
    3. 'polygon' → logprob: -6.261814117431641
    4. 'ol' → logprob: -9.63681411743164
    5. ')' → logprob: -10.88681411743164
    6. 'oly' → logprob: -11.01181411743164
    7. ' polygon' → logprob: -11.26181411743164
    8. '(pol' → logprob: -11.51181411743164
    9. '(poly' → logprob: -11.63681411743164
    10. '_polygon' → logprob: -12.26181411743164

Token 909: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020834634080529213
    2. ')
' → logprob: -3.8958346843719482
    3. '       ' → logprob: -8.270834922790527
    4. ' )' → logprob: -11.770834922790527
    5. '
' → logprob: -11.895834922790527
    6. '<|end|>' → logprob: -11.895834922790527
    7. '   ' → logprob: -12.145834922790527
    8. ' ' → logprob: -13.270834922790527
    9. ')n' → logprob: -13.520834922790527
    10. ')

' → logprob: -13.520834922790527

Token 910: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024451177567243576
    2. '
' → logprob: -4.27445125579834
    3. '        
' → logprob: -5.39945125579834
    4. ' for' → logprob: -5.64945125579834
    5. 'for' → logprob: -7.27445125579834
    6. '    
' → logprob: -7.39945125579834
    7. '   ' → logprob: -7.39945125579834
    8. ' 
' → logprob: -9.77445125579834
    9. '        ' → logprob: -10.27445125579834
    10. '```' → logprob: -10.52445125579834

Token 911: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.016834454610943794
    2. '       ' → logprob: -4.891834259033203
    3. 'side' → logprob: -5.016834259033203
    4. 'a' → logprob: -6.391834259033203
    5. ' for' → logprob: -8.016834259033203
    6. 'sa' → logprob: -9.266834259033203
    7. 'sign' → logprob: -9.516834259033203
    8. '   ' → logprob: -9.641834259033203
    9. '        
' → logprob: -10.266834259033203
    10. 'ai' → logprob: -10.391834259033203

Token 912: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0015053401002660394
    2. ' i' → logprob: -6.501505374908447
    3. 'e' → logprob: -13.376504898071289
    4. 'k' → logprob: -13.751504898071289
    5. 'edge' → logprob: -15.626504898071289
    6. '	i' → logprob: -16.12650489807129
    7. 'idx' → logprob: -17.12650489807129
    8. '_i' → logprob: -17.12650489807129
    9. '```' → logprob: -17.12650489807129
    10. '   ' → logprob: -17.87650489807129

Token 913: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04313027113676071
    2. 'in' → logprob: -3.1681301593780518
    3. ' ' → logprob: -9.918129920959473
    4. ',' → logprob: -10.293129920959473
    5. ')' → logprob: -12.043129920959473
    6. '	in' → logprob: -12.043129920959473
    7. 'n' → logprob: -12.418129920959473
    8. '   ' → logprob: -12.418129920959473
    9. '0' → logprob: -12.418129920959473
    10. ' ,' → logprob: -12.793129920959473

Token 914: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005234002135694027
    2. ' range' → logprob: -5.2552337646484375
    3. ' ' → logprob: -15.755233764648438
    4. '   ' → logprob: -15.880233764648438
    5. '(range' → logprob: -17.255233764648438
    6. '	range' → logprob: -17.880233764648438
    7. '  ' → logprob: -18.130233764648438
    8. '0' → logprob: -18.130233764648438
    9. '```' → logprob: -20.005233764648438
    10. '
' → logprob: -20.880233764648438

Token 915: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0014928421005606651
    2. ' n' → logprob: -7.001492977142334
    3. '(n' → logprob: -7.501492977142334
    4. '0' → logprob: -10.626492500305176
    5. '(' → logprob: -12.751492500305176
    6. '1' → logprob: -14.251492500305176
    7. ' (' → logprob: -14.501492500305176
    8. '	n' → logprob: -15.126492500305176
    9. ')n' → logprob: -15.751492500305176
    10. ' ' → logprob: -16.126493453979492

Token 916: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20183661580085754
    2. '):' → logprob: -1.7018365859985352
    3. ' ):
' → logprob: -8.701836585998535
    4. ' ):' → logprob: -9.576836585998535
    5. ')' → logprob: -9.951836585998535
    6. '):
' → logprob: -9.951836585998535
    7. '   ' → logprob: -10.201836585998535
    8. '       ' → logprob: -10.451836585998535
    9. ':' → logprob: -11.576836585998535
    10. ':
' → logprob: -12.451836585998535

Token 917: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005160700995475054
    2. ' p' → logprob: -5.755160808563232
    3. '   ' → logprob: -7.130160808563232
    4. 'p' → logprob: -7.880160808563232
    5. 'a' → logprob: -9.380160331726074
    6. ' edge' → logprob: -9.505160331726074
    7. ' a' → logprob: -9.755160331726074
    8. '       ' → logprob: -9.755160331726074
    9. '            
' → logprob: -9.755160331726074
    10. ' next' → logprob: -10.005160331726074

Token 918: ' p' (ID: 275)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.19792720675468445
    2. 'p' (adapté à ' p') → logprob: -1.8229272365570068
    3. 'edge' → logprob: -5.322926998138428
    4. ' o' → logprob: -5.822926998138428
    5. 'e' → logprob: -5.947926998138428
    6. '   ' → logprob: -5.947926998138428
    7. 'curr' → logprob: -6.447926998138428
    8. ' p' → logprob: -6.572926998138428
    9. 'pi' → logprob: -7.697926998138428
    10. 'oi' → logprob: -7.947926998138428

Token 919: '1' (ID: 16)
  Prédit: 'olygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olygon' → logprob: -0.06607704609632492
    2. ' =' → logprob: -3.0660769939422607
    3. '=' → logprob: -4.94107723236084
    4. '1' → logprob: -5.56607723236084
    5. 'i' → logprob: -6.06607723236084
    6. '0' → logprob: -6.19107723236084
    7. 'ol' → logprob: -7.31607723236084
    8. 'oly' → logprob: -7.69107723236084
    9. '=i' → logprob: -8.06607723236084
    10. '_i' → logprob: -8.69107723236084

Token 920: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31975871324539185
    2. '=' → logprob: -1.319758653640747
    3. ',' → logprob: -5.069758892059326
    4. '=p' → logprob: -9.444758415222168
    5. ' ' → logprob: -9.569758415222168
    6. ',p' → logprob: -11.194758415222168
    7. ' ,' → logprob: -11.319758415222168
    8. '<|end|>' → logprob: -11.944758415222168
    9. '  ' → logprob: -13.319758415222168
    10. '=
' → logprob: -13.444758415222168

Token 921: ' polygon' (ID: 65081)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.018157200887799263
    2. ' polygon' → logprob: -4.018157005310059
    3. 'poly' → logprob: -12.018157005310059
    4. 'olygon' → logprob: -14.518157005310059
    5. 'pol' → logprob: -15.143157005310059
    6. '_polygon' → logprob: -15.268157005310059
    7. 'p' → logprob: -17.018157958984375
    8. '           ' → logprob: -17.018157958984375
    9. '   ' → logprob: -17.518157958984375
    10. 'polar' → logprob: -17.643157958984375

Token 922: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.27099974633893e-05
    2. '           ' → logprob: -11.500012397766113
    3. '
' → logprob: -13.625012397766113
    4. 'i' → logprob: -14.250012397766113
    5. '       ' → logprob: -14.625012397766113
    6. '(i' → logprob: -17.12501335144043
    7. ',i' → logprob: -17.12501335144043
    8. '   ' → logprob: -17.75001335144043
    9. '               ' → logprob: -17.75001335144043
    10. ',' → logprob: -17.75001335144043

Token 923: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06993432343006134
    2. ')' → logprob: -2.944934368133545
    3. ']
' → logprob: -4.444934368133545
    4. '           ' → logprob: -6.319934368133545
    5. ']' → logprob: -6.819934368133545
    6. '       ' → logprob: -9.194933891296387
    7. ')
' → logprob: -10.319933891296387
    8. ',' → logprob: -10.569933891296387
    9. ')p' → logprob: -10.569933891296387
    10. ' ' → logprob: -10.819933891296387

Token 924: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06677021086215973
    2. ' p' → logprob: -3.316770315170288
    3. 'p' → logprob: -3.566770315170288
    4. '	p' → logprob: -10.941770553588867
    5. '	       ' → logprob: -11.441770553588867
    6. '		' → logprob: -11.691770553588867
    7. '   ' → logprob: -11.816770553588867
    8. ' ' → logprob: -12.066770553588867
    9. ',p' → logprob: -12.566770553588867
    10. ',' → logprob: -12.691770553588867

Token 925: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.00577520439401269
    2. ' p' → logprob: -5.505774974822998
    3. '           ' → logprob: -6.380774974822998
    4. '       ' → logprob: -15.130775451660156
    5. '          ' → logprob: -15.130775451660156
    6. '   ' → logprob: -15.255775451660156
    7. '            ' → logprob: -15.630775451660156
    8. '               ' → logprob: -15.755775451660156
    9. ' ' → logprob: -15.880775451660156
    10. '         ' → logprob: -16.005775451660156

Token 926: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.39782917499542236
    2. '(' → logprob: -1.8978291749954224
    3. '(i' → logprob: -3.147829055786133
    4. '((' → logprob: -3.272829055786133
    5. '(p' → logprob: -3.397829055786133
    6. '2' → logprob: -3.897829055786133
    7. 'p' → logprob: -4.272829055786133
    8. '+' → logprob: -5.772829055786133
    9. '
' → logprob: -6.022829055786133
    10. ' (' → logprob: -6.147829055786133

Token 927: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407910227775574
    2. '=' → logprob: -0.9740791320800781
    3. '=p' → logprob: -13.349079132080078
    4. '=
' → logprob: -15.349079132080078
    5. ' ' → logprob: -15.974079132080078
    6. ' =
' → logprob: -16.224079132080078
    7. ':' → logprob: -17.099079132080078
    8. '        ' → logprob: -17.849079132080078
    9. 'polygon' → logprob: -18.474079132080078
    10. ',' → logprob: -18.474079132080078

Token 928: ' polygon' (ID: 65081)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.048610869795084
    2. ' polygon' → logprob: -3.0486109256744385
    3. 'poly' → logprob: -10.79861068725586
    4. 'pol' → logprob: -13.29861068725586
    5. '_polygon' → logprob: -15.04861068725586
    6. 'olygon' → logprob: -15.04861068725586
    7. ' ' → logprob: -15.42361068725586
    8. 'polar' → logprob: -16.04861068725586
    9. 'p' → logprob: -16.17361068725586
    10. '   ' → logprob: -16.79861068725586

Token 929: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.00034237600630149245
    2. '[i' → logprob: -8.00034236907959
    3. '(i' → logprob: -12.50034236907959
    4. '[
' → logprob: -13.50034236907959
    5. '[' → logprob: -14.37534236907959
    6. '((' → logprob: -14.50034236907959
    7. '[next' → logprob: -14.87534236907959
    8. '   ' → logprob: -15.62534236907959
    9. '
' → logprob: -16.375343322753906
    10. '[j' → logprob: -16.750343322753906

Token 930: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.2729995988775045e-06
    2. '(i' → logprob: -12.000006675720215
    3. ' i' → logprob: -16.2500057220459
    4. '{i' → logprob: -17.3750057220459
    5. '   ' → logprob: -18.8750057220459
    6. '```' → logprob: -20.5000057220459
    7. ' (' → logprob: -20.6250057220459
    8. '	i' → logprob: -20.7500057220459
    9. '_i' → logprob: -20.8750057220459
    10. '
' → logprob: -21.1250057220459

Token 931: '+' (ID: 10)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0047303494065999985
    2. '(i' → logprob: -5.504730224609375
    3. '+' → logprob: -8.129730224609375
    4. '{i' → logprob: -8.754730224609375
    5. '1' → logprob: -9.504730224609375
    6. ' i' → logprob: -9.754730224609375
    7. '+i' → logprob: -9.879730224609375
    8. ' (' → logprob: -12.629730224609375
    9. ' +' → logprob: -12.629730224609375
    10. '(' → logprob: -13.129730224609375

Token 932: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.526570384972729e-05
    2. 'i' → logprob: -10.000055313110352
    3. '(i' → logprob: -12.125055313110352
    4. ' ' → logprob: -13.375055313110352
    5. '```' → logprob: -13.500055313110352
    6. '(' → logprob: -14.000055313110352
    7. '   ' → logprob: -15.750055313110352
    8. '{' → logprob: -15.875055313110352
    9. '``' → logprob: -16.75005531311035
    10. '+' → logprob: -16.87505531311035

Token 933: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06207333505153656
    2. ')%' → logprob: -2.812073230743408
    3. ')i' → logprob: -9.562073707580566
    4. '%i' → logprob: -10.812073707580566
    5. ')
' → logprob: -12.312073707580566
    6. '%n' → logprob: -12.687073707580566
    7. ')]' → logprob: -13.437073707580566
    8. '%' → logprob: -13.687073707580566
    9. ' %' → logprob: -13.812073707580566
    10. '%d' → logprob: -14.437073707580566

Token 934: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5389209389686584
    2. ')%' → logprob: -1.1639208793640137
    3. '%i' → logprob: -2.9139208793640137
    4. '%' → logprob: -3.9139208793640137
    5. ' %' → logprob: -4.288920879364014
    6. '%n' → logprob: -4.788920879364014
    7. ')i' → logprob: -5.538920879364014
    8. ']' → logprob: -6.413920879364014
    9. ']%' → logprob: -7.288920879364014
    10. ')]' → logprob: -7.788920879364014

Token 935: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.6240566083070007e-06
    2. ' n' → logprob: -13.375001907348633
    3. '	n' → logprob: -21.000001907348633
    4. '%n' → logprob: -21.500001907348633
    5. 'len' → logprob: -21.750001907348633
    6. '(n' → logprob: -21.875001907348633
    7. '
' → logprob: -22.250001907348633
    8. '   ' → logprob: -22.250001907348633
    9. ')n' → logprob: -22.250001907348633
    10. '```' → logprob: -22.625001907348633

Token 936: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.031810175627470016
    2. ']' → logprob: -3.5318102836608887
    3. ']

' → logprob: -6.906810283660889
    4. '       ' → logprob: -7.031810283660889
    5. ']
' → logprob: -8.78180980682373
    6. ' ]
' → logprob: -12.03180980682373
    7. ')
' → logprob: -12.15680980682373
    8. ']


' → logprob: -13.28180980682373
    9. '   ' → logprob: -13.40680980682373
    10. '           ' → logprob: -13.40680980682373

Token 937: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001266613689949736
    2. '
' → logprob: -9.125126838684082
    3. '            
' → logprob: -12.000126838684082
    4. '```' → logprob: -12.500126838684082
    5. '       ' → logprob: -12.875126838684082
    6. '          ' → logprob: -13.625126838684082
    7. '   ' → logprob: -14.000126838684082
    8. '               ' → logprob: -14.250126838684082
    9. ',' → logprob: -14.375126838684082
    10. '	       ' → logprob: -14.625126838684082

Token 938: ' c' (ID: 274)
  Prédit: 'side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.2677137851715088
    2. ' side' → logprob: -2.267713785171509
    3. '           ' → logprob: -2.517713785171509
    4. 'if' → logprob: -4.39271354675293
    5. 'd' → logprob: -5.26771354675293
    6. 'ca' → logprob: -5.26771354675293
    7. 'sign' → logprob: -5.26771354675293
    8. 'sa' → logprob: -5.51771354675293
    9. 'cross' → logprob: -5.64271354675293
    10. 'da' → logprob: -5.76771354675293

Token 939: '_a' (ID: 10852)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6737387776374817
    2. '1' → logprob: -1.298738718032837
    3. 'ross' → logprob: -2.798738718032837
    4. '_a' → logprob: -2.798738718032837
    5. ' =' → logprob: -2.923738718032837
    6. 'val' → logprob: -4.923738956451416
    7. 'p' → logprob: -5.048738956451416
    8. '_val' → logprob: -5.173738956451416
    9. 'def' → logprob: -5.298738956451416
    10. '_ab' → logprob: -5.798738956451416

Token 940: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14297743141651154
    2. '=' → logprob: -2.017977476119995
    3. 'ross' → logprob: -8.892977714538574
    4. 'a' → logprob: -9.142977714538574
    5. '_a' → logprob: -10.517977714538574
    6. '=a' → logprob: -12.142977714538574
    7. 'alc' → logprob: -12.392977714538574
    8. '   ' → logprob: -12.767977714538574
    9. ':' → logprob: -13.017977714538574
    10. ' ' → logprob: -13.267977714538574

Token 941: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.014185599982738495
    2. ' cross' → logprob: -4.264185428619385
    3. 'c' → logprob: -10.889185905456543
    4. 'Cross' → logprob: -13.764185905456543
    5. '(c' → logprob: -14.139185905456543
    6. '.cross' → logprob: -14.639185905456543
    7. '_cross' → logprob: -15.514185905456543
    8. '   ' → logprob: -15.889185905456543
    9. 'abs' → logprob: -16.139184951782227
    10. 'float' → logprob: -16.389184951782227

Token 942: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.0445127372804563e-05
    2. 'p' → logprob: -11.50001049041748
    3. ' p' → logprob: -16.500009536743164
    4. '(
' → logprob: -16.750009536743164
    5. '(' → logprob: -16.875009536743164
    6. '           ' → logprob: -17.500009536743164
    7. '[p' → logprob: -17.875009536743164
    8. '   ' → logprob: -18.500009536743164
    9. '<p' → logprob: -19.250009536743164
    10. ' (' → logprob: -19.250009536743164

Token 943: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008282098569907248
    2. 'olygon' → logprob: -7.375828266143799
    3. '(p' → logprob: -9.25082778930664
    4. '2' → logprob: -10.62582778930664
    5. 'ol' → logprob: -10.87582778930664
    6. 'a' → logprob: -11.25082778930664
    7. 'oly' → logprob: -11.25082778930664
    8. '(a' → logprob: -11.37582778930664
    9. '(' → logprob: -12.25082778930664
    10. 'oints' → logprob: -12.62582778930664

Token 944: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004765341989696026
    2. 'p' → logprob: -5.754765510559082
    3. ',p' → logprob: -7.004765510559082
    4. 'a' → logprob: -7.754765510559082
    5. '(p' → logprob: -8.629765510559082
    6. ' p' → logprob: -10.004765510559082
    7. ' ,' → logprob: -11.379765510559082
    8. ',a' → logprob: -11.504765510559082
    9. 'b' → logprob: -13.879765510559082
    10. '(a' → logprob: -14.254765510559082

Token 945: ' p' (ID: 275)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1270064264535904
    2. 'p' → logprob: -2.1270065307617188
    3. ' a' → logprob: -10.127006530761719
    4. ' p' → logprob: -11.252006530761719
    5. 'b' → logprob: -11.627006530761719
    6. 'Point' → logprob: -11.752006530761719
    7. '   ' → logprob: -12.627006530761719
    8. '           ' → logprob: -14.127006530761719
    9. '(a' → logprob: -14.752006530761719
    10. 'q' → logprob: -15.127006530761719

Token 946: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2010144591331482
    2. 'a' → logprob: -2.201014518737793
    3. '2' → logprob: -2.701014518737793
    4. 'p' → logprob: -6.451014518737793
    5. 'olygon' → logprob: -7.951014518737793
    6. 'b' → logprob: -8.201014518737793
    7. ',' → logprob: -8.201014518737793
    8. 'oints' → logprob: -8.326014518737793
    9. '   ' → logprob: -8.451014518737793
    10. '```' → logprob: -8.701014518737793

Token 947: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013320252764970064
    2. 'a' → logprob: -6.751331806182861
    3. ' ,' → logprob: -9.50133228302002
    4. ',a' → logprob: -9.50133228302002
    5. ' a' → logprob: -11.87633228302002
    6. '```' → logprob: -14.00133228302002
    7. ')' → logprob: -14.12633228302002
    8. '(a' → logprob: -14.12633228302002
    9. 'p' → logprob: -14.25133228302002
    10. ',
' → logprob: -14.50133228302002

Token 948: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -5.848420551046729e-05
    2. ' a' → logprob: -9.7500581741333
    3. '   ' → logprob: -17.000059127807617
    4. '	a' → logprob: -17.125059127807617
    5. ')a' → logprob: -18.125059127807617
    6. '[a' → logprob: -18.500059127807617
    7. '(a' → logprob: -18.875059127807617
    8. '#a' → logprob: -19.125059127807617
    9. ')' → logprob: -19.250059127807617
    10. '_a' → logprob: -19.500059127807617

Token 949: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011098162271082401
    2. ')
' → logprob: -4.511098384857178
    3. ' )' → logprob: -10.51109790802002
    4. ')
' → logprob: -11.38609790802002
    5. ' )
' → logprob: -12.76109790802002
    6. '),' → logprob: -13.13609790802002
    7. ')<' → logprob: -13.26109790802002
    8. ')>' → logprob: -13.26109790802002
    9. ')

' → logprob: -13.76109790802002
    10. '           ' → logprob: -15.01109790802002

Token 950: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0022154422476887703
    2. ' and' → logprob: -6.752215385437012
    3. ',' → logprob: -7.377215385437012
    4. ' ' → logprob: -9.502215385437012
    5. ' c' → logprob: -9.627215385437012
    6. ' if' → logprob: -9.877215385437012
    7. '          ' → logprob: -10.752215385437012
    8. ' >=' → logprob: -10.877215385437012
    9. '=' → logprob: -11.127215385437012
    10. ' =' → logprob: -11.127215385437012

Token 951: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.4357069134712219
    2. '           ' → logprob: -1.6857068538665771
    3. ' c' → logprob: -1.8107068538665771
    4. ' ' → logprob: -6.185707092285156
    5. '	c' → logprob: -7.060707092285156
    6. '		' → logprob: -7.560707092285156
    7. '            ' → logprob: -7.685707092285156
    8. ' ' → logprob: -9.310707092285156
    9. '       ' → logprob: -9.810707092285156
    10. '   ' → logprob: -9.935707092285156

Token 952: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.00016361083544325083
    2. '_' → logprob: -8.750164031982422
    3. 'b' → logprob: -12.750164031982422
    4. '_a' → logprob: -13.625164031982422
    5. '_
' → logprob: -14.875164031982422
    6. ' _' → logprob: -15.500164031982422
    7. '	b' → logprob: -15.750164031982422
    8. '_
' → logprob: -16.500164031982422
    9. '_

' → logprob: -16.875164031982422
    10. ' ' → logprob: -17.000164031982422

Token 953: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759598016738892
    2. '=' → logprob: -0.8259598016738892
    3. ' ' → logprob: -11.325960159301758
    4. '           ' → logprob: -12.075960159301758
    5. ')' → logprob: -14.075960159301758
    6. '            ' → logprob: -14.825960159301758
    7. '		' → logprob: -15.200960159301758
    8. '        ' → logprob: -15.700960159301758
    9. '=
' → logprob: -15.700960159301758
    10. ',' → logprob: -15.825960159301758

Token 954: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.011048289015889168
    2. ' cross' → logprob: -4.511048316955566
    3. '.cross' → logprob: -15.511048316955566
    4. '_cross' → logprob: -15.886048316955566
    5. 'p' → logprob: -16.88604736328125
    6. 'c' → logprob: -17.51104736328125
    7. 'Cross' → logprob: -17.51104736328125
    8. '(p' → logprob: -17.88604736328125
    9. '           ' → logprob: -19.38604736328125
    10. '       ' → logprob: -19.76104736328125

Token 955: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -2.7133641196996905e-05
    2. '(' → logprob: -11.12502670288086
    3. 'p' → logprob: -11.50002670288086
    4. '<|end|>' → logprob: -14.37502670288086
    5. ' (' → logprob: -14.62502670288086
    6. ' p' → logprob: -14.87502670288086
    7. '```' → logprob: -15.75002670288086
    8. '[p' → logprob: -16.00002670288086
    9. ')' → logprob: -16.12502670288086
    10. '(
' → logprob: -16.37502670288086

Token 956: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.758300438988954e-05
    2. '2' → logprob: -9.375097274780273
    3. '<|end|>' → logprob: -11.750097274780273
    4. 'user' → logprob: -13.875097274780273
    5. '<|end|>' → logprob: -14.750097274780273
    6. '...' → logprob: -14.750097274780273
    7. 'p' → logprob: -15.000097274780273
    8. '```' → logprob: -15.250097274780273
    9. 'token' → logprob: -15.437597274780273
    10. 'a' → logprob: -15.500097274780273

Token 957: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00025680975522845984
    2. ',p' → logprob: -8.625256538391113
    3. ' ,' → logprob: -9.625256538391113
    4. 'p' → logprob: -11.625256538391113
    5. ' p' → logprob: -13.500256538391113
    6. ',
' → logprob: -15.375256538391113
    7. ' ' → logprob: -15.625256538391113
    8. '   ' → logprob: -16.12525749206543
    9. '(p' → logprob: -16.12525749206543
    10. '`,' → logprob: -16.75025749206543

Token 958: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.008615042082965374
    2. ' p' → logprob: -4.758615016937256
    3. '           ' → logprob: -15.133615493774414
    4. '<p' → logprob: -16.383615493774414
    5. '	p' → logprob: -16.758615493774414
    6. '   ' → logprob: -17.008615493774414
    7. ' ' → logprob: -17.008615493774414
    8. '(p' → logprob: -17.383615493774414
    9. '       ' → logprob: -18.258615493774414
    10. '[p' → logprob: -18.508615493774414

Token 959: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.8325677703833207e-05
    2. '1' → logprob: -12.250028610229492
    3. 'p' → logprob: -12.500028610229492
    4. 'olygon' → logprob: -12.500028610229492
    5. '```' → logprob: -12.750028610229492
    6. 'oly' → logprob: -13.125028610229492
    7. 'b' → logprob: -13.375028610229492
    8. 'oints' → logprob: -13.750028610229492
    9. 'ol' → logprob: -13.812528610229492
    10. 'r' → logprob: -13.812528610229492

Token 960: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.747814349073451e-05
    2. ' ,' → logprob: -11.875017166137695
    3. ',b' → logprob: -12.000017166137695
    4. 'b' → logprob: -12.500017166137695
    5. ',p' → logprob: -15.750017166137695
    6. 'a' → logprob: -16.500017166137695
    7. ')' → logprob: -16.500017166137695
    8. ' ' → logprob: -17.000017166137695
    9. '           ' → logprob: -17.375017166137695
    10. '0' → logprob: -17.625017166137695

Token 961: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0002613358374219388
    2. ' b' → logprob: -8.250261306762695
    3. ')b' → logprob: -19.250261306762695
    4. '	b' → logprob: -19.875261306762695
    5. ')' → logprob: -20.000261306762695
    6. '   ' → logprob: -20.375261306762695
    7. 'B' → logprob: -20.750261306762695
    8. ' ' → logprob: -21.250261306762695
    9. 'a' → logprob: -21.500261306762695
    10. '(b' → logprob: -21.625261306762695

Token 962: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16141045093536377
    2. ')
' → logprob: -1.9114104509353638
    3. '           ' → logprob: -7.036410331726074
    4. '       ' → logprob: -9.036410331726074
    5. ')
' → logprob: -9.036410331726074
    6. ' )' → logprob: -10.411410331726074
    7. ' )
' → logprob: -10.786410331726074
    8. ')

' → logprob: -11.911410331726074
    9. ')<' → logprob: -12.536410331726074
    10. '        ' → logprob: -14.286410331726074

Token 963: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.843177233240567e-05
    2. '       ' → logprob: -12.625018119812012
    3. '	       ' → logprob: -12.625018119812012
    4. ' if' → logprob: -13.125018119812012
    5. '		' → logprob: -13.125018119812012
    6. ' ' → logprob: -13.250018119812012
    7. '          ' → logprob: -13.375018119812012
    8. '               ' → logprob: -14.000018119812012
    9. ',' → logprob: -14.250018119812012
    10. '            
' → logprob: -14.375018119812012

Token 964: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014572588261216879
    2. ' if' → logprob: -6.876457214355469
    3. 'if' → logprob: -7.876457214355469
    4. ' ' → logprob: -10.501457214355469
    5. '       ' → logprob: -11.501457214355469
    6. '   ' → logprob: -12.126457214355469
    7. '          ' → logprob: -14.626457214355469
    8. '		' → logprob: -15.001457214355469
    9. '  ' → logprob: -15.251457214355469
    10. '               ' → logprob: -15.626457214355469

Token 965: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.35371339321136475
    2. ' if' → logprob: -1.3537133932113647
    3. '           ' → logprob: -3.2287135124206543
    4. 'If' → logprob: -11.353713035583496
    5. '       ' → logprob: -11.478713035583496
    6. ' ' → logprob: -12.103713035583496
    7. '```' → logprob: -13.103713035583496
    8. '   ' → logprob: -13.853713035583496
    9. '          ' → logprob: -13.978713035583496
    10. '            ' → logprob: -14.103713035583496

Token 966: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.004155449103564024
    2. ' c' → logprob: -5.50415563583374
    3. '(c' → logprob: -9.754155158996582
    4. ' (' → logprob: -11.254155158996582
    5. '(' → logprob: -12.754155158996582
    6. '	c' → logprob: -13.504155158996582
    7. ' ' → logprob: -14.254155158996582
    8. '   ' → logprob: -14.754155158996582
    9. ' ' → logprob: -15.629155158996582
    10. '
' → logprob: -16.1291561126709

Token 967: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -9.088346359931165e-07
    2. '_' → logprob: -14.625000953674316
    3. 'a' → logprob: -14.750000953674316
    4. '_c' → logprob: -18.25
    5. '_
' → logprob: -18.375
    6. '_i' → logprob: -18.75
    7. '_b' → logprob: -19.375
    8. '```' → logprob: -19.5
    9. '_*' → logprob: -19.625
    10. '   ' → logprob: -19.875

Token 968: ' and' (ID: 326)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5328263640403748
    2. '*' → logprob: -1.2828264236450195
    3. '<' → logprob: -2.5328264236450195
    4. ' *' → logprob: -2.9078264236450195
    5. ' ' → logprob: -7.5328264236450195
    6. '*c' → logprob: -7.6578264236450195
    7. '>' → logprob: -7.9078264236450195
    8. ' >' → logprob: -8.15782642364502
    9. '   ' → logprob: -11.15782642364502
    10. '  ' → logprob: -11.15782642364502

Token 969: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0013553560711443424
    2. ' c' → logprob: -6.626355171203613
    3. '           ' → logprob: -10.626355171203613
    4. '               ' → logprob: -13.626355171203613
    5. '(c' → logprob: -14.126355171203613
    6. ' ' → logprob: -14.251355171203613
    7. '       ' → logprob: -14.501355171203613
    8. '   ' → logprob: -14.876355171203613
    9. '         ' → logprob: -15.251355171203613
    10. '
' → logprob: -15.251355171203613

Token 970: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.002195933135226369
    2. '_a' → logprob: -6.127195835113525
    3. 'b' → logprob: -12.252196311950684
    4. '_' → logprob: -12.502196311950684
    5. '_c' → logprob: -13.252196311950684
    6. '_i' → logprob: -15.002196311950684
    7. 'a' → logprob: -17.252195358276367
    8. '_
' → logprob: -17.502195358276367
    9. '_r' → logprob: -17.752195358276367
    10. '	b' → logprob: -18.002195358276367

Token 971: ' have' (ID: 679)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.14203587174415588
    2. '<' → logprob: -2.517035961151123
    3. '*' → logprob: -3.142035961151123
    4. ' *' → logprob: -4.892035961151123
    5. ' ' → logprob: -7.142035961151123
    6. ' >' → logprob: -9.892035484313965
    7. ' are' → logprob: -10.017035484313965
    8. '>' → logprob: -10.517035484313965
    9. ' have' → logprob: -10.767035484313965
    10. ' product' → logprob: -11.392035484313965

Token 972: ' product' (ID: 1888)
  Prédit: 'different'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'different' → logprob: -0.6743150949478149
    2. ' opposite' → logprob: -1.299315094947815
    3. 'op' → logprob: -2.4243149757385254
    4. 'negative' → logprob: -3.5493149757385254
    5. 'c' → logprob: -3.6743149757385254
    6. '*' → logprob: -3.6743149757385254
    7. ' different' → logprob: -4.799314975738525
    8. 'product' → logprob: -5.174314975738525
    9. '*c' → logprob: -5.174314975738525
    10. 'the' → logprob: -5.424314975738525

Token 973: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3201325237751007
    2. ' <' → logprob: -1.3201324939727783
    3. '()' → logprob: -5.445132732391357
    4. '()<' → logprob: -6.070132732391357
    5. '(' → logprob: -9.5701322555542
    6. ' ' → logprob: -10.1951322555542
    7. '[' → logprob: -10.4451322555542
    8. 's' → logprob: -11.3201322555542
    9. '0' → logprob: -11.8201322555542
    10. '{' → logprob: -11.8201322555542

Token 974: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05540720373392105
    2. ' ' → logprob: -2.9304072856903076
    3. '=' → logprob: -7.5554070472717285
    4. '```' → logprob: -14.555407524108887
    5. '1' → logprob: -14.805407524108887
    6. '  ' → logprob: -15.180407524108887
    7. ' ' → logprob: -16.30540657043457
    8. '   ' → logprob: -16.68040657043457
    9. ' =' → logprob: -16.68040657043457
    10. '(' → logprob: -16.68040657043457

Token 975: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021380767226219177
    2. ',' → logprob: -4.27138090133667
    3. ' and' → logprob: -5.89638090133667
    4. ' or' → logprob: -6.27138090133667
    5. ' :' → logprob: -7.64638090133667
    6. 'and' → logprob: -7.77138090133667
    7. ' <' → logprob: -7.89638090133667
    8. '<|end|>' → logprob: -7.89638090133667
    9. ':
' → logprob: -8.271380424499512
    10. '<' → logprob: -8.896380424499512

Token 976: ' then' (ID: 1815)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7353272438049316
    2. ' return' → logprob: -0.7353272438049316
    3. 'return' → logprob: -3.3603272438049316
    4. '           ' → logprob: -5.735327243804932
    5. '            ' → logprob: -6.610327243804932
    6. '                   ' → logprob: -7.735327243804932
    7. '                ' → logprob: -7.735327243804932
    8. ' continue' → logprob: -7.860327243804932
    9. ' ' → logprob: -8.485326766967773
    10. 'continue' → logprob: -9.485326766967773

Token 977: ' a' (ID: 261)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7580136656761169
    2. ' return' → logprob: -1.6330137252807617
    3. ' the' → logprob: -1.8830137252807617
    4. 'c' → logprob: -2.8830137252807617
    5. 'the' → logprob: -3.1330137252807617
    6. ' c' → logprob: -3.6330137252807617
    7. ' segment' → logprob: -3.8830137252807617
    8. 'segment' → logprob: -4.008013725280762
    9. ' they' → logprob: -4.633013725280762
    10. 'they' → logprob: -5.508013725280762

Token 978: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2695922553539276
    2. ' *' → logprob: -2.01959228515625
    3. 'and' → logprob: -2.51959228515625
    4. '*' → logprob: -4.14459228515625
    5. ' or' → logprob: -5.39459228515625
    6. ' ' → logprob: -6.76959228515625
    7. 'or' → logprob: -7.76959228515625
    8. '           ' → logprob: -7.76959228515625
    9. '*c' → logprob: -8.26959228515625
    10. ',' → logprob: -8.76959228515625

Token 979: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.025787176564335823
    2. ' b' → logprob: -3.775787115097046
    3. 'c' → logprob: -6.025787353515625
    4. ' c' → logprob: -9.025787353515625
    5. '           ' → logprob: -13.150787353515625
    6. ' ' → logprob: -14.900787353515625
    7. '       ' → logprob: -16.525787353515625
    8. '   ' → logprob: -17.400787353515625
    9. '               ' → logprob: -17.400787353515625
    10. '         ' → logprob: -18.275787353515625

Token 980: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.04733862355351448
    2. ' lie' → logprob: -3.6723387241363525
    3. 'are' → logprob: -3.9223387241363525
    4. ' ' → logprob: -8.172338485717773
    5. '           ' → logprob: -8.297338485717773
    6. 'lie' → logprob: -9.297338485717773
    7. ' cross' → logprob: -9.672338485717773
    8. ')' → logprob: -10.047338485717773
    9. ' fall' → logprob: -10.547338485717773
    10. ',' → logprob: -10.547338485717773

Token 981: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.31658682227134705
    2. 'on' → logprob: -1.3165868520736694
    3. ' strictly' → logprob: -6.941586971282959
    4. ' not' → logprob: -7.066586971282959
    5. 'strict' → logprob: -7.441586971282959
    6. 'not' → logprob: -7.441586971282959
    7. ' ' → logprob: -9.5665864944458
    8. '           ' → logprob: -10.0665864944458
    9. 'outside' → logprob: -10.1915864944458
    10. 'inside' → logprob: -10.5665864944458

Token 982: ' opposite' (ID: 23821)
  Prédit: 'different'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'different' → logprob: -0.04675723612308502
    2. 'op' → logprob: -3.171757221221924
    3. ' opposite' → logprob: -6.171757221221924
    4. ' different' → logprob: -6.546757221221924
    5. '-' → logprob: -9.296757698059082
    6. '<' → logprob: -9.796757698059082
    7. 'diff' → logprob: -10.796757698059082
    8. '>' → logprob: -11.171757698059082
    9. 'negative' → logprob: -11.171757698059082
    10. ' ' → logprob: -12.171757698059082

Token 983: ' sides' (ID: 18089)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06400707364082336
    2. ' sides' → logprob: -2.814007043838501
    3. 'sign' → logprob: -7.31400728225708
    4. '*' → logprob: -7.68900728225708
    5. 'side' → logprob: -8.564006805419922
    6. '_s' → logprob: -8.689006805419922
    7. ')' → logprob: -8.939006805419922
    8. ',' → logprob: -9.939006805419922
    9. '-s' → logprob: -10.064006805419922
    10. ' signs' → logprob: -10.314006805419922

Token 984: ' ->' (ID: 2747)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.2666250467300415
    2. '           ' → logprob: -1.5166250467300415
    3. '               ' → logprob: -5.016624927520752
    4. ':' → logprob: -6.391624927520752
    5. ' and' → logprob: -6.391624927520752
    6. 'or' → logprob: -6.516624927520752
    7. '          ' → logprob: -7.516624927520752
    8. '                       ' → logprob: -7.641624927520752
    9. '                   ' → logprob: -7.766624927520752
    10. ',' → logprob: -8.14162540435791

Token 985: ' segment' (ID: 14806)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.017886752262711525
    2. 'return' → logprob: -4.267886638641357
    3. ' False' → logprob: -6.142886638641357
    4. 'False' → logprob: -6.642886638641357
    5. '           ' → logprob: -8.892887115478516
    6. '               ' → logprob: -9.767887115478516
    7. ' ' → logprob: -11.142887115478516
    8. ' True' → logprob: -11.267887115478516
    9. '            ' → logprob: -11.517887115478516
    10. ' ' → logprob: -11.642887115478516

Token 986: ' goes' (ID: 8805)
  Prédit: ' crosses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' crosses' → logprob: -0.019158536568284035
    2. ' intersects' → logprob: -4.894158363342285
    3. ' passes' → logprob: -5.019158363342285
    4. ' is' → logprob: -5.894158363342285
    5. ' cross' → logprob: -7.394158363342285
    6. 'cross' → logprob: -7.519158363342285
    7. ' crossing' → logprob: -8.519158363342285
    8. '_cross' → logprob: -8.519158363342285
    9. ' ab' → logprob: -9.144158363342285
    10. ' ' → logprob: -9.644158363342285

Token 987: ' outside' (ID: 7539)
  Prédit: 'outside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outside' → logprob: -0.5232744216918945
    2. ' outside' → logprob: -0.8982744216918945
    3. 'out' → logprob: -9.898274421691895
    4. '           ' → logprob: -10.523274421691895
    5. ' ' → logprob: -11.148274421691895
    6. '   ' → logprob: -11.273274421691895
    7. ' out' → logprob: -11.398274421691895
    8. '               ' → logprob: -11.523274421691895
    9. '```' → logprob: -11.773274421691895
    10. '       ' → logprob: -12.648274421691895

Token 988: ' polygon' (ID: 65081)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05377105623483658
    2. ' or' → logprob: -3.3037710189819336
    3. '               ' → logprob: -4.553771018981934
    4. ':' → logprob: -6.428771018981934
    5. ',' → logprob: -6.553771018981934
    6. ' and' → logprob: -7.803771018981934
    7. ':
' → logprob: -8.178771018981934
    8. '.' → logprob: -8.303771018981934
    9. '                   ' → logprob: -8.428771018981934
    10. '       ' → logprob: -8.553771018981934

Token 989: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0050885952077806
    2. '               ' → logprob: -5.755088806152344
    3. ' or' → logprob: -7.005088806152344
    4. ' and' → logprob: -7.755088806152344
    5. ':' → logprob: -8.130088806152344
    6. ',' → logprob: -8.755088806152344
    7. '.' → logprob: -10.005088806152344
    8. '          ' → logprob: -11.130088806152344
    9. 'and' → logprob: -11.255088806152344
    10. '                   ' → logprob: -11.630088806152344

Token 990: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0051030684262514114
    2. ' and' → logprob: -6.13010311126709
    3. ' or' → logprob: -6.13010311126709
    4. '               ' → logprob: -8.00510311126709
    5. '          ' → logprob: -8.50510311126709
    6. 'and' → logprob: -9.88010311126709
    7. ':' → logprob: -9.88010311126709
    8. ',' → logprob: -10.25510311126709
    9. '       ' → logprob: -10.75510311126709
    10. '            ' → logprob: -11.63010311126709

Token 991: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008082019630819559
    2. ' if' → logprob: -7.250808238983154
    3. 'if' → logprob: -9.750807762145996
    4. '               ' → logprob: -11.250807762145996
    5. '          ' → logprob: -11.250807762145996
    6. '       ' → logprob: -12.250807762145996
    7. ' ' → logprob: -13.125807762145996
    8. '   ' → logprob: -13.250807762145996
    9. '		' → logprob: -13.625807762145996
    10. ',' → logprob: -13.750807762145996

Token 992: ' If' (ID: 1843)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2412680685520172
    2. ' if' → logprob: -2.1162681579589844
    3. 'if' → logprob: -2.3662681579589844
    4. '       ' → logprob: -10.491268157958984
    5. '               ' → logprob: -11.616268157958984
    6. '          ' → logprob: -11.991268157958984
    7. ' ' → logprob: -12.741268157958984
    8. '   ' → logprob: -12.866268157958984
    9. 'If' → logprob: -13.116268157958984
    10. '		' → logprob: -13.241268157958984

Token 993: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07891666889190674
    2. ' c' → logprob: -2.578916549682617
    3. '(c' → logprob: -10.953916549682617
    4. ' ' → logprob: -12.828916549682617
    5. ' (' → logprob: -13.078916549682617
    6. '   ' → logprob: -13.078916549682617
    7. '(' → logprob: -13.578916549682617
    8. '	c' → logprob: -14.578916549682617
    9. ' ' → logprob: -14.953916549682617
    10. '  ' → logprob: -15.828916549682617

Token 994: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -4.320199877838604e-07
    2. 'a' → logprob: -15.0
    3. '_' → logprob: -16.25
    4. '_i' → logprob: -17.875
    5. '_c' → logprob: -18.375
    6. '_b' → logprob: -18.375
    7. ')' → logprob: -19.25
    8. '_o' → logprob: -19.375
    9. ' _' → logprob: -19.5
    10. '_e' → logprob: -20.375

Token 995: ' ==' (ID: 951)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.34495821595191956
    2. '*' → logprob: -1.3449581861495972
    3. '*c' → logprob: -3.4699583053588867
    4. ' ' → logprob: -10.219958305358887
    5. '*b' → logprob: -10.719958305358887
    6. '**' → logprob: -11.969958305358887
    7. '```' → logprob: -12.844958305358887
    8. '*object' → logprob: -13.344958305358887
    9. '   ' → logprob: -13.594958305358887
    10. '*p' → logprob: -13.594958305358887

Token 996: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002829723060131073
    2. ' ' → logprob: -5.877829551696777
    3. 'c' → logprob: -11.002829551696777
    4. '   ' → logprob: -13.502829551696777
    5. 'None' → logprob: -13.502829551696777
    6. '=' → logprob: -13.627829551696777
    7. '  ' → logprob: -14.190329551696777
    8. ' c' → logprob: -14.752829551696777
    9. '
' → logprob: -14.940329551696777
    10. 'b' → logprob: -14.940329551696777

Token 997: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010211274639004841
    2. ' ' → logprob: -9.250102043151855
    3. 'c' → logprob: -12.250102043151855
    4. '=' → logprob: -14.875102043151855
    5. 'b' → logprob: -15.500102043151855
    6. '
' → logprob: -16.125102996826172
    7. '-' → logprob: -16.375102996826172
    8. '```' → logprob: -16.750102996826172
    9. '<|end|>' → logprob: -17.000102996826172
    10. '  
' → logprob: -17.000102996826172

Token 998: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.016070619225502014
    2. 'or' → logprob: -4.14107084274292
    3. ' ' → logprob: -11.016070365905762
    4. ' and' → logprob: -11.516070365905762
    5. '	or' → logprob: -12.016070365905762
    6. 'and' → logprob: -12.891070365905762
    7. '   ' → logprob: -15.391070365905762
    8. '           ' → logprob: -15.516070365905762
    9. '  ' → logprob: -15.641070365905762
    10. ',' → logprob: -15.766070365905762

Token 999: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3870657682418823
    2. ' c' → logprob: -1.1370657682418823
    3. '(c' → logprob: -9.012065887451172
    4. ' (' → logprob: -10.387065887451172
    5. ' ' → logprob: -11.512065887451172
    6. ' ' → logprob: -11.637065887451172
    7. '	c' → logprob: -12.262065887451172
    8. '   ' → logprob: -12.387065887451172
    9. '(' → logprob: -12.637065887451172
    10. '#' → logprob: -13.699565887451172

Token 1000: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -6.392202976712724e-06
    2. '_c' → logprob: -12.625006675720215
    3. '_a' → logprob: -13.125006675720215
    4. '_' → logprob: -14.500006675720215
    5. 'b' → logprob: -14.875006675720215
    6. '_B' → logprob: -17.0000057220459
    7. 'c' → logprob: -18.1250057220459
    8. '==' → logprob: -18.1250057220459
    9. 'a' → logprob: -18.7500057220459
    10. '	b' → logprob: -18.7500057220459

Token 1001: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3142417371273041
    2. '==' → logprob: -1.3142417669296265
    3. ' *' → logprob: -7.564241886138916
    4. '*' → logprob: -7.814241886138916
    5. ' <=' → logprob: -10.689241409301758
    6. '<=' → logprob: -10.814241409301758
    7. ' ' → logprob: -11.939241409301758
    8. '=' → logprob: -13.439241409301758
    9. '0' → logprob: -13.564241409301758
    10. '```' → logprob: -14.189241409301758

Token 1002: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017036291537806392
    2. ' ' → logprob: -6.37670373916626
    3. '   ' → logprob: -14.376703262329102
    4. '=' → logprob: -15.939203262329102
    5. '  ' → logprob: -16.0017032623291
    6. '	' → logprob: -16.1267032623291
    7. ' ' → logprob: -16.2517032623291
    8. '۰' → logprob: -16.5642032623291
    9. '```' → logprob: -16.8142032623291
    10. '1' → logprob: -17.1267032623291

Token 1003: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002967320033349097
    2. ' ' → logprob: -8.125296592712402
    3. '۰' → logprob: -16.18779754638672
    4. '   ' → logprob: -16.25029754638672
    5. '=' → logprob: -16.62529754638672
    6. '==' → logprob: -17.18779754638672
    7. '1' → logprob: -17.18779754638672
    8. '```' → logprob: -17.31279754638672
    9. ' ' → logprob: -17.37529754638672
    10. '  ' → logprob: -17.43779754638672

Token 1004: ' =>' (ID: 871)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.3622950613498688
    2. ' and' → logprob: -1.4872950315475464
    3. 'and' → logprob: -3.237295150756836
    4. 'or' → logprob: -4.112295150756836
    5. ':' → logprob: -4.487295150756836
    6. '           ' → logprob: -5.112295150756836
    7. ',' → logprob: -5.612295150756836
    8. '               ' → logprob: -7.237295150756836
    9. ':
' → logprob: -7.987295150756836
    10. '       ' → logprob: -9.862295150756836

Token 1005: ' point' (ID: 2438)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.36971911787986755
    2. 'continue' → logprob: -1.74471914768219
    3. ' return' → logprob: -2.4947190284729004
    4. 'return' → logprob: -3.6197190284729004
    5. ' segment' → logprob: -4.7447190284729
    6. ' #' → logprob: -5.7447190284729
    7. ' pass' → logprob: -5.8697190284729
    8. 'segment' → logprob: -6.4947190284729
    9. '           ' → logprob: -6.7447190284729
    10. ' the' → logprob: -6.7447190284729

Token 1006: ' lies' (ID: 24384)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.08772542327642441
    2. ' lies' → logprob: -3.3377254009246826
    3. 's' → logprob: -3.4627254009246826
    4. ' on' → logprob: -4.337725639343262
    5. 'is' → logprob: -6.337725639343262
    6. 'a' → logprob: -7.587725639343262
    7. ' ' → logprob: -7.712725639343262
    8. ' a' → logprob: -8.212725639343262
    9. ' are' → logprob: -8.337725639343262
    10. ' and' → logprob: -8.962725639343262

Token 1007: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.01212296448647976
    2. ' on' → logprob: -4.637123107910156
    3. ' exactly' → logprob: -6.637123107910156
    4. 'exact' → logprob: -6.887123107910156
    5. '0' → logprob: -11.637123107910156
    6. '_on' → logprob: -12.012123107910156
    7. ' ' → logprob: -12.012123107910156
    8. '	on' → logprob: -12.137123107910156
    9. '=' → logprob: -13.512123107910156
    10. 'ont' → logprob: -14.137123107910156

Token 1008: ' edge' (ID: 11165)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6488541960716248
    2. ' the' → logprob: -0.8988541960716248
    3. ' line' → logprob: -3.0238542556762695
    4. 'line' → logprob: -4.2738542556762695
    5. ' edge' → logprob: -5.7738542556762695
    6. 'edge' → logprob: -6.0238542556762695
    7. 'p' → logprob: -6.6488542556762695
    8. ' p' → logprob: -7.6488542556762695
    9. '(p' → logprob: -9.39885425567627
    10. ' an' → logprob: -9.77385425567627

Token 1009: ' line' (ID: 2543)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05817108601331711
    2. ' or' → logprob: -2.933171033859253
    3. ',' → logprob: -5.933171272277832
    4. '       ' → logprob: -8.558171272277832
    5. '               ' → logprob: -8.683171272277832
    6. ' and' → logprob: -9.308171272277832
    7. ' if' → logprob: -9.808171272277832
    8. '          ' → logprob: -10.683171272277832
    9. '.' → logprob: -10.808171272277832
    10. ' (' → logprob: -11.433171272277832

Token 1010: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014658194268122315
    2. ',' → logprob: -7.001465797424316
    3. ' if' → logprob: -8.626465797424316
    4. ' or' → logprob: -9.126465797424316
    5. '               ' → logprob: -9.501465797424316
    6. '       ' → logprob: -9.501465797424316
    7. ' and' → logprob: -9.626465797424316
    8. '          ' → logprob: -10.376465797424316
    9. 'and' → logprob: -13.126465797424316
    10. '                   ' → logprob: -13.376465797424316

Token 1011: ' allowed' (ID: 9279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7314155101776123
    2. ' continue' → logprob: -0.9814155101776123
    3. '               ' → logprob: -2.7314155101776123
    4. 'continue' → logprob: -3.7314155101776123
    5. ' or' → logprob: -4.106415748596191
    6. ' if' → logprob: -4.106415748596191
    7. '            ' → logprob: -4.981415748596191
    8. ' return' → logprob: -5.981415748596191
    9. ' continuing' → logprob: -6.356415748596191
    10. ' but' → logprob: -6.356415748596191

Token 1012: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.037835580878891e-05
    2. ',' → logprob: -11.00005054473877
    3. ' if' → logprob: -11.25005054473877
    4. '       ' → logprob: -12.37505054473877
    5. '               ' → logprob: -12.50005054473877
    6. '          ' → logprob: -12.62505054473877
    7. ' and' → logprob: -12.87505054473877
    8. ' or' → logprob: -13.37505054473877
    9. 'and' → logprob: -13.75005054473877
    10. '		' → logprob: -13.87505054473877

Token 1013: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.424530435353518e-05
    2. '       ' → logprob: -10.000094413757324
    3. ' if' → logprob: -11.000094413757324
    4. '```' → logprob: -12.250094413757324
    5. ' ' → logprob: -12.375094413757324
    6. ',' → logprob: -12.375094413757324
    7. '   ' → logprob: -12.625094413757324
    8. '               ' → logprob: -12.750094413757324
    9. '
' → logprob: -12.875094413757324
    10. '		' → logprob: -13.000094413757324

Token 1014: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002092922804877162
    2. ' if' → logprob: -6.7520928382873535
    3. 'if' (adapté à ' if') → logprob: -7.1270928382873535
    4. '       ' → logprob: -9.627093315124512
    5. '   ' → logprob: -10.502093315124512
    6. '               ' → logprob: -11.877093315124512
    7. '          ' → logprob: -12.127093315124512
    8. 'If' → logprob: -12.627093315124512
    9. ' ' → logprob: -12.752093315124512
    10. '		' → logprob: -13.377093315124512

Token 1015: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.14281488955020905
    2. ' c' → logprob: -2.017814874649048
    3. '(c' → logprob: -9.392814636230469
    4. ' (' → logprob: -10.517814636230469
    5. '   ' → logprob: -11.392814636230469
    6. ' ' → logprob: -11.517814636230469
    7. '(' → logprob: -12.267814636230469
    8. '	c' → logprob: -13.142814636230469
    9. '  ' → logprob: -15.017814636230469
    10. '    ' → logprob: -15.017814636230469

Token 1016: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -6.749814019713085e-06
    2. '_' → logprob: -12.125006675720215
    3. 'a' → logprob: -14.500006675720215
    4. ' _' → logprob: -15.375006675720215
    5. '_c' → logprob: -15.500006675720215
    6. '_i' → logprob: -15.625006675720215
    7. '_
' → logprob: -17.25000762939453
    8. ')' → logprob: -17.50000762939453
    9. '_x' → logprob: -18.00000762939453
    10. ' ' → logprob: -18.37500762939453

Token 1017: ' <' (ID: 464)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.18070486187934875
    2. '*' → logprob: -1.8057048320770264
    3. '*c' → logprob: -7.6807050704956055
    4. ' ' → logprob: -7.9307050704956055
    5. ' <' → logprob: -9.430705070495605
    6. '<' → logprob: -10.930705070495605
    7. '**' → logprob: -10.930705070495605
    8. '*object' → logprob: -12.680705070495605
    9. '*p' → logprob: -12.805705070495605
    10. '*b' → logprob: -13.555705070495605

Token 1018: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001382497837767005
    2. '-' → logprob: -6.751382350921631
    3. ' ' → logprob: -8.501382827758789
    4. ' -' → logprob: -11.626382827758789
    5. '-c' → logprob: -16.25138282775879
    6. '   ' → logprob: -18.75138282775879
    7. '  ' → logprob: -18.75138282775879
    8. '*' → logprob: -19.25138282775879
    9. '-m' → logprob: -19.37638282775879
    10. '-s' → logprob: -19.62638282775879

Token 1019: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.250000953674316
    3. '0' → logprob: -16.375001907348633
    4. '   ' → logprob: -16.875001907348633
    5. '(' → logprob: -17.625001907348633
    6. 'EPS' → logprob: -17.625001907348633
    7. '-' → logprob: -18.125001907348633
    8. '10' → logprob: -18.750001907348633
    9. '```' → logprob: -19.125001907348633
    10. 'epsilon' → logprob: -19.375001907348633

Token 1020: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -4.4060561776859686e-05
    2. '1' → logprob: -10.125043869018555
    3. '0' → logprob: -12.500043869018555
    4. '-' → logprob: -15.125043869018555
    5. 'E' → logprob: -17.000043869018555
    6. '000' → logprob: -17.375043869018555
    7. ' ' → logprob: -18.625043869018555
    8. '+' → logprob: -19.125043869018555
    9. '*' → logprob: -19.625043869018555
    10. '00' → logprob: -19.875043869018555

Token 1021: '-' (ID: 12)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.1263134628534317
    2. '12' → logprob: -2.8763134479522705
    3. '10' → logprob: -3.0013134479522705
    4. '8' → logprob: -4.50131368637085
    5. '7' → logprob: -7.50131368637085
    6. '14' → logprob: -7.50131368637085
    7. '-' → logprob: -8.626313209533691
    8. '13' → logprob: -9.126313209533691
    9. '15' → logprob: -9.501313209533691
    10. '11' → logprob: -11.001313209533691

Token 1022: '14' (ID: 1265)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.15329210460186005
    2. '12' → logprob: -2.653292179107666
    3. '10' → logprob: -2.778292179107666
    4. '8' → logprob: -4.778292179107666
    5. '14' → logprob: -7.153292179107666
    6. '7' → logprob: -8.528291702270508
    7. '15' → logprob: -9.153291702270508
    8. '13' → logprob: -9.903291702270508
    9. '11' → logprob: -11.653291702270508
    10. '09' → logprob: -14.090791702270508

Token 1023: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3869358003139496
    2. 'and' → logprob: -1.136935830116272
    3. ' *' → logprob: -10.13693618774414
    4. '*' → logprob: -11.38693618774414
    5. '           ' → logprob: -12.26193618774414
    6. ' ' → logprob: -12.26193618774414
    7. '            ' → logprob: -13.26193618774414
    8. '               ' → logprob: -14.01193618774414
    9. '	and' → logprob: -14.88693618774414
    10. ' or' → logprob: -15.26193618774414

Token 1024: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.014171624556183815
    2. ' c' → logprob: -4.264171600341797
    3. ' ' → logprob: -12.514171600341797
    4. '   ' → logprob: -13.139171600341797
    5. '  ' → logprob: -13.889171600341797
    6. '	c' → logprob: -14.389171600341797
    7. '(c' → logprob: -14.514171600341797
    8. '    ' → logprob: -15.514171600341797
    9. '     ' → logprob: -15.764171600341797
    10. '           ' → logprob: -16.514171600341797

Token 1025: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.00028290803311392665
    2. '_a' → logprob: -8.250283241271973
    3. '_c' → logprob: -11.500283241271973
    4. 'b' → logprob: -12.250283241271973
    5. 'a' → logprob: -12.750283241271973
    6. '_' → logprob: -13.500283241271973
    7. 'c' → logprob: -13.500283241271973
    8. '   ' → logprob: -14.750283241271973
    9. ' _' → logprob: -16.125282287597656
    10. '#' → logprob: -16.375282287597656

Token 1026: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2048482745885849
    2. ' >' → logprob: -1.704848289489746
    3. '<' → logprob: -5.954848289489746
    4. ' <' → logprob: -7.329848289489746
    5. ' ' → logprob: -8.954848289489746
    6. '1' → logprob: -10.704848289489746
    7. ')' → logprob: -12.079848289489746
    8. ')>' → logprob: -12.329848289489746
    9. '[' → logprob: -12.829848289489746
    10. '*' → logprob: -13.079848289489746

Token 1027: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004078878089785576
    2. ' ' → logprob: -5.5040788650512695
    3. '   ' → logprob: -15.87907886505127
    4. '+' → logprob: -15.87907886505127
    5. '0' → logprob: -16.379079818725586
    6. '  ' → logprob: -16.379079818725586
    7. '(' → logprob: -17.754079818725586
    8. '-' → logprob: -18.879079818725586
    9. '
' → logprob: -19.129079818725586
    10. ' ' → logprob: -19.254079818725586

Token 1028: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023095356300473213
    2. ' ' → logprob: -8.37523078918457
    3. '0' → logprob: -15.50023078918457
    4. '-' → logprob: -15.87523078918457
    5. '   ' → logprob: -17.62523078918457
    6. '+' → logprob: -17.62523078918457
    7. '  ' → logprob: -18.37523078918457
    8. '(' → logprob: -19.37523078918457
    9. '14' → logprob: -19.50023078918457
    10. '6' → logprob: -20.00023078918457

Token 1029: 'e' (ID: 68)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2843005657196045
    2. 'e' → logprob: -1.7843005657196045
    3. '4' → logprob: -2.5343005657196045
    4. '3' → logprob: -8.784300804138184
    5. '.' → logprob: -10.534300804138184
    6. '5' → logprob: -11.659300804138184
    7. '.e' → logprob: -12.284300804138184
    8. '+' → logprob: -12.284300804138184
    9. '-e' → logprob: -12.284300804138184
    10. '6' → logprob: -12.534300804138184

Token 1030: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.014684110297821e-06
    2. '14' → logprob: -11.750008583068848
    3. '```' → logprob: -15.125008583068848
    4. 'e' → logprob: -15.250008583068848
    5. '_' → logprob: -16.875009536743164
    6. '   ' → logprob: -17.000009536743164
    7. '-
' → logprob: -17.375009536743164
    8. '−' → logprob: -17.500009536743164
    9. ' -' → logprob: -17.500009536743164
    10. '``' → logprob: -17.562509536743164

Token 1031: '14' (ID: 1265)
  Prédit: '14'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '14' → logprob: -1.8624639324116288e-06
    2. '-' → logprob: -14.000001907348633
    3. '15' → logprob: -15.125001907348633
    4. '13' → logprob: -15.750001907348633
    5. '014' → logprob: -15.875001907348633
    6. '10' → logprob: -16.250001907348633
    7. '12' → logprob: -16.375001907348633
    8. '   ' → logprob: -17.437501907348633
    9. '```' → logprob: -17.437501907348633
    10. '4' → logprob: -17.437501907348633

Token 1032: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.04864618554711342
    2. 'or' → logprob: -3.7986462116241455
    3. '               ' → logprob: -4.173645973205566
    4. '            ' → logprob: -5.173645973205566
    5. '                ' → logprob: -6.673645973205566
    6. '           ' → logprob: -6.798645973205566
    7. '              ' → logprob: -7.173645973205566
    8. ':' → logprob: -8.048645973205566
    9. '                   ' → logprob: -8.798645973205566
    10. '             ' → logprob: -9.548645973205566

Token 1033: '               ' (ID: 506)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.045350298285484314
    2. '               ' → logprob: -3.2953503131866455
    3. '           ' → logprob: -5.670350074768066
    4. 'or' → logprob: -5.670350074768066
    5. '              ' → logprob: -9.170350074768066
    6. '            ' → logprob: -9.420350074768066
    7. '                   ' → logprob: -9.670350074768066
    8. '                           ' → logprob: -10.670350074768066
    9. ':' → logprob: -10.920350074768066
    10. '                       ' → logprob: -11.045350074768066

Token 1034: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.15013952553272247
    2. ' return' → logprob: -2.525139570236206
    3. '               ' → logprob: -2.900139570236206
    4. '           ' → logprob: -6.150139331817627
    5. '                   ' → logprob: -6.150139331817627
    6. '   ' → logprob: -10.775139808654785
    7. '	return' → logprob: -11.150139808654785
    8. '{return' → logprob: -11.525139808654785
    9. ':return' → logprob: -11.650139808654785
    10. '                ' → logprob: -12.525139808654785

Token 1035: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -7.493430894101039e-05
    2. ' False' → logprob: -9.500075340270996
    3. '(False' → logprob: -21.00007438659668
    4. 'True' → logprob: -21.87507438659668
    5. 'false' → logprob: -22.50007438659668
    6. '   ' → logprob: -24.00007438659668
    7. '=False' → logprob: -24.00007438659668
    8. '_false' → logprob: -26.00007438659668
    9. '.False' → logprob: -26.12507438659668
    10. '```' → logprob: -26.75007438659668

Token 1036: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008096250821836293
    2. '<|end|>' → logprob: -7.750809669494629
    3. ' if' → logprob: -8.875809669494629
    4. '               ' → logprob: -9.500809669494629
    5. '          ' → logprob: -10.000809669494629
    6. '```' → logprob: -10.250809669494629
    7. '            ' → logprob: -10.875809669494629
    8. '                   ' → logprob: -11.500809669494629
    9. 'elif' → logprob: -11.750809669494629
    10. '       ' → logprob: -12.250809669494629

Token 1037: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008465526043437421
    2. '          ' → logprob: -8.500846862792969
    3. ' elif' → logprob: -8.875846862792969
    4. '            ' → logprob: -8.875846862792969
    5. '<|end|>' → logprob: -9.000846862792969
    6. 'elif' → logprob: -9.375846862792969
    7. ' or' → logprob: -9.625846862792969
    8. ' if' → logprob: -10.750846862792969
    9. ' ' → logprob: -11.250846862792969
    10. '		' → logprob: -11.750846862792969

Token 1038: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.982165698194876e-05
    2. '          ' → logprob: -10.625080108642578
    3. ' if' → logprob: -10.625080108642578
    4. 'if' (adapté à ' if') → logprob: -11.500080108642578
    5. '            ' → logprob: -12.375080108642578
    6. '		' → logprob: -12.625080108642578
    7. '       ' → logprob: -12.625080108642578
    8. '<|end|>' → logprob: -13.250080108642578
    9. 'elif' → logprob: -13.375080108642578
    10. '               ' → logprob: -13.375080108642578

Token 1039: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.14269426465034485
    2. 'c' → logprob: -2.0176942348480225
    3. '(c' → logprob: -11.517694473266602
    4. '           ' → logprob: -12.517694473266602
    5. ' ' → logprob: -13.392694473266602
    6. '   ' → logprob: -13.892694473266602
    7. '               ' → logprob: -14.142694473266602
    8. ' (' → logprob: -14.517694473266602
    9. '	c' → logprob: -14.642694473266602
    10. '            ' → logprob: -14.892694473266602

Token 1040: '_a' (ID: 10852)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.38691654801368713
    2. '_a' → logprob: -1.1369165182113647
    3. 'a' → logprob: -10.136916160583496
    4. 'b' → logprob: -12.761916160583496
    5. '_c' → logprob: -13.761916160583496
    6. '_' → logprob: -14.511916160583496
    7. '   ' → logprob: -15.261916160583496
    8. '```' → logprob: -15.636916160583496
    9. '>' → logprob: -15.824416160583496
    10. ' _' → logprob: -15.949416160583496

Token 1041: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.020575758069753647
    2. '>' → logprob: -3.895575761795044
    3. ' ' → logprob: -10.520575523376465
    4. '   ' → logprob: -12.895575523376465
    5. ' *' → logprob: -13.770575523376465
    6. '*' → logprob: -14.145575523376465
    7. '  ' → logprob: -14.145575523376465
    8. ' ' → logprob: -14.520575523376465
    9. '1' → logprob: -14.645575523376465
    10. '    ' → logprob: -15.520575523376465

Token 1042: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10021119564771652
    2. ' ' → logprob: -2.3502111434936523
    3. '+' → logprob: -13.350211143493652
    4. '   ' → logprob: -13.600211143493652
    5. '  ' → logprob: -14.225211143493652
    6. '(' → logprob: -14.975211143493652
    7. '0' → logprob: -16.03771209716797
    8. '```' → logprob: -16.03771209716797
    9. '>' → logprob: -16.22521209716797
    10. '[' → logprob: -16.35021209716797

Token 1043: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00218583014793694
    2. ' ' → logprob: -6.127185821533203
    3. '+' → logprob: -15.502185821533203
    4. '   ' → logprob: -15.627185821533203
    5. '0' → logprob: -16.127185821533203
    6. '  ' → logprob: -16.252185821533203
    7. '`' → logprob: -17.002185821533203
    8. '```' → logprob: -17.564685821533203
    9. '[' → logprob: -17.689685821533203
    10. '(' → logprob: -17.689685821533203

Token 1044: 'e' (ID: 68)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10021044313907623
    2. 'e' → logprob: -2.350210428237915
    3. '14' → logprob: -13.100210189819336
    4. '1' → logprob: -14.475210189819336
    5. '```' → logprob: -15.100210189819336
    6. ' -' → logprob: -15.475210189819336
    7. '+' → logprob: -15.600210189819336
    8. '-e' → logprob: -15.850210189819336
    9. '   ' → logprob: -15.975210189819336
    10. '.' → logprob: -16.350210189819336

Token 1045: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.2664456789934775e-06
    2. '14' → logprob: -14.250000953674316
    3. 'e' → logprob: -14.750000953674316
    4. '[-' → logprob: -17.250001907348633
    5. '```' → logprob: -17.250001907348633
    6. '{-' → logprob: -18.625001907348633
    7. ' -' → logprob: -18.625001907348633
    8. '--' → logprob: -18.750001907348633
    9. '=' → logprob: -18.750001907348633
    10. '>-' → logprob: -19.062501907348633

Token 1046: '14' (ID: 1265)
  Prédit: '14'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '14' → logprob: -5.512236498361744e-07
    2. '014' → logprob: -15.250000953674316
    3. '-' → logprob: -16.125
    4. '4' → logprob: -16.5
    5. '' → logprob: -18.125
    6. '```' → logprob: -18.375
    7. '１４' → logprob: -18.5
    8. '१४' → logprob: -18.75
    9. '۱۴' → logprob: -18.75
    10. '13' → logprob: -18.875

Token 1047: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.01420041173696518
    2. 'and' → logprob: -4.264200210571289
    3. '           ' → logprob: -10.514200210571289
    4. '            ' → logprob: -11.889200210571289
    5. '               ' → logprob: -13.764200210571289
    6. ' ' → logprob: -15.014200210571289
    7. '```' → logprob: -15.014200210571289
    8. '        ' → logprob: -15.264200210571289
    9. '          ' → logprob: -15.764200210571289
    10. '   ' → logprob: -15.764200210571289

Token 1048: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.20141597092151642
    2. ' c' → logprob: -1.701416015625
    3. '   ' → logprob: -13.576416015625
    4. ' ' → logprob: -14.576416015625
    5. '  ' → logprob: -15.451416015625
    6. 'b' → logprob: -15.451416015625
    7. '	c' → logprob: -15.951416015625
    8. '(c' → logprob: -16.076416015625
    9. '           ' → logprob: -16.451416015625
    10. '    ' → logprob: -17.326416015625

Token 1049: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -3.583550642360933e-05
    2. '-' → logprob: -11.250036239624023
    3. '_a' → logprob: -11.625036239624023
    4. 'b' → logprob: -11.750036239624023
    5. '-b' → logprob: -12.625036239624023
    6. '   ' → logprob: -14.375036239624023
    7. '<' → logprob: -14.750036239624023
    8. ' b' → logprob: -14.750036239624023
    9. ' ' → logprob: -14.875036239624023
    10. ' -' → logprob: -15.625036239624023

Token 1050: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.16022492945194244
    2. ' <' → logprob: -1.9102249145507812
    3. ' ' → logprob: -14.160224914550781
    4. '[' → logprob: -17.66022491455078
    5. '<-' → logprob: -17.91022491455078
    6. '<class' → logprob: -19.28522491455078
    7. '   ' → logprob: -19.41022491455078
    8. ')<' → logprob: -19.91022491455078
    9. '  ' → logprob: -20.03522491455078
    10. '<std' → logprob: -20.28522491455078

Token 1051: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00023071514442563057
    2. ' -' → logprob: -8.37523078918457
    3. '1' → logprob: -16.37523078918457
    4. ' ' → logprob: -19.00023078918457
    5. '−' → logprob: -20.12523078918457
    6. '0' → logprob: -20.37523078918457
    7. '(-' → logprob: -20.50023078918457
    8. '   ' → logprob: -20.75023078918457
    9. '`' → logprob: -21.00023078918457
    10. '-
' → logprob: -21.12523078918457

Token 1052: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.500001907348633
    3. '0' → logprob: -15.625001907348633
    4. '-' → logprob: -18.500001907348633
    5. '```' → logprob: -18.750001907348633
    6. '   ' → logprob: -19.625001907348633
    7. '[' → logprob: -20.000001907348633
    8. '14' → logprob: -20.500001907348633
    9. '>' → logprob: -20.625001907348633
    10. '(' → logprob: -20.875001907348633

Token 1053: 'e' (ID: 68)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10262389481067657
    2. '1' → logprob: -2.35262393951416
    3. '-' → logprob: -6.47762393951416
    4. '0' → logprob: -7.10262393951416
    5. '14' → logprob: -11.35262393951416
    6. 'e' → logprob: -11.47762393951416
    7. '=' → logprob: -11.72762393951416
    8. ' .' → logprob: -12.35262393951416
    9. ' ' → logprob: -12.47762393951416
    10. '>' → logprob: -12.72762393951416

Token 1054: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.6934557505883276e-05
    2. '14' → logprob: -9.875057220458984
    3. '.' → logprob: -12.750057220458984
    4. 'e' → logprob: -13.125057220458984
    5. '```' → logprob: -16.250057220458984
    6. '014' → logprob: -16.375057220458984
    7. '4' → logprob: -16.875057220458984
    8. '=' → logprob: -17.125057220458984
    9. ' -' → logprob: -17.250057220458984
    10. '1' → logprob: -17.250057220458984

Token 1055: '14' (ID: 1265)
  Prédit: '14'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '14' → logprob: 0.0
    2. '014' → logprob: -19.0
    3. '-' → logprob: -19.25
    4. '' → logprob: -21.125
    5. '１４' → logprob: -21.125
    6. '4' → logprob: -21.5
    7. '۱۴' → logprob: -21.75
    8. '१४' → logprob: -21.875
    9. 'xiv' → logprob: -22.375
    10. '15' → logprob: -22.75

Token 1056: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.002718210220337
    2. ':
' → logprob: -1.127718210220337
    3. '               ' → logprob: -1.377718210220337
    4. '           ' → logprob: -2.877718210220337
    5. ':return' → logprob: -7.752717971801758
    6. '       ' → logprob: -8.877717971801758
    7. '):
' → logprob: -9.127717971801758
    8. '<|end|>' → logprob: -9.877717971801758
    9. ' or' → logprob: -10.502717971801758
    10. ',' → logprob: -10.877717971801758

Token 1057: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3134738802909851
    2. '           ' → logprob: -1.3134739398956299
    3. ' return' → logprob: -9.06347370147705
    4. 'return' → logprob: -10.43847370147705
    5. '```' → logprob: -10.93847370147705
    6. '                   ' → logprob: -11.06347370147705
    7. '   ' → logprob: -11.31347370147705
    8. '       ' → logprob: -11.81347370147705
    9. '<|end|>' → logprob: -12.81347370147705
    10. '                       ' → logprob: -13.06347370147705

Token 1058: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.20449252426624298
    2. ' return' → logprob: -1.7044925689697266
    3. '           ' → logprob: -6.329492568969727
    4. '               ' → logprob: -6.829492568969727
    5. '	return' → logprob: -8.829492568969727
    6. '                   ' → logprob: -10.454492568969727
    7. '   ' → logprob: -10.704492568969727
    8. '       ' → logprob: -12.454492568969727
    9. 'False' → logprob: -12.829492568969727
    10. ' ' → logprob: -13.704492568969727

Token 1059: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: 0.0
    2. ' False' → logprob: -17.5
    3. 'True' → logprob: -21.75
    4. 'F' → logprob: -24.625
    5. '(False' → logprob: -24.75
    6. 'Fal' → logprob: -25.0
    7. 'false' → logprob: -25.125
    8. '_false' → logprob: -25.875
    9. '=False' → logprob: -26.375
    10. '.False' → logprob: -26.375

Token 1060: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00021712594025302678
    2. '           ' → logprob: -8.50021743774414
    3. 'return' → logprob: -11.37521743774414
    4. 'continue' → logprob: -14.37521743774414
    5. '
' → logprob: -14.62521743774414
    6. ' return' → logprob: -15.00021743774414
    7. '```' → logprob: -15.75021743774414
    8. '	' → logprob: -15.87521743774414
    9. '   ' → logprob: -16.25021743774414
    10. '[' → logprob: -16.37521743774414

Token 1061: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2812516689300537
    2. '           ' → logprob: -1.4062516689300537
    3. '<|end|>' → logprob: -10.031251907348633
    4. '          ' → logprob: -11.281251907348633
    5. '        ' → logprob: -11.781251907348633
    6. '               ' → logprob: -11.906251907348633
    7. '		' → logprob: -12.281251907348633
    8. 'continue' → logprob: -12.531251907348633
    9. 'return' → logprob: -12.531251907348633
    10. '	       ' → logprob: -12.656251907348633

Token 1062: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004813034553080797
    2. '   ' → logprob: -5.754813194274902
    3. 'return' (adapté à ' return') → logprob: -6.754813194274902
    4. '	' → logprob: -8.754813194274902
    5. ' return' → logprob: -9.129813194274902
    6. '	return' → logprob: -9.254813194274902
    7. '
' → logprob: -9.879813194274902
    8. '           ' → logprob: -10.629813194274902
    9. '     ' → logprob: -11.879813194274902
    10. '        
' → logprob: -12.004813194274902

Token 1063: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -2.7610454708337784e-05
    2. ' True' → logprob: -10.500027656555176
    3. '(True' → logprob: -20.75002670288086
    4. '   ' → logprob: -21.87502670288086
    5. 'False' → logprob: -22.00002670288086
    6. 'true' → logprob: -22.00002670288086
    7. 'Tr' → logprob: -23.37502670288086
    8. '=True' → logprob: -24.00002670288086
    9. '	' → logprob: -25.37502670288086
    10. '
' → logprob: -25.50002670288086

Token 1064: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.1004803329706192
    2. '   ' → logprob: -2.350480318069458
    3. '
' → logprob: -8.475480079650879
    4. ' class' → logprob: -10.225480079650879
    5. '```' → logprob: -11.725480079650879
    6. 'def' → logprob: -11.975480079650879
    7. 'from' → logprob: -12.475480079650879
    8. 'import' → logprob: -12.725480079650879
    9. '    
' → logprob: -12.725480079650879
    10. '@' → logprob: -13.600480079650879

Token 1065: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009988710517063737
    2. 'class' → logprob: -7.3759989738464355
    3. '
' → logprob: -8.250998497009277
    4. 'def' → logprob: -9.250998497009277
    5. '    
' → logprob: -11.625998497009277
    6. ')' → logprob: -13.625998497009277
    7. 'from' → logprob: -14.375998497009277
    8. '@' → logprob: -14.375998497009277
    9. '

' → logprob: -14.500998497009277
    10. ' def' → logprob: -14.500998497009277

Token 1066: ' @' (ID: 759)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.1615370213985443
    2. '   ' → logprob: -1.9115370512008667
    3. '@' (adapté à ' @') → logprob: -7.161537170410156
    4. 'def' → logprob: -7.786537170410156
    5. '
' → logprob: -10.036537170410156
    6. 'import' → logprob: -10.911537170410156
    7. ' class' → logprob: -10.911537170410156
    8. 'from' → logprob: -11.286537170410156
    9. '@dat' → logprob: -11.286537170410156
    10. '```' → logprob: -12.161537170410156

Token 1067: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -1.9361264946837764e-07
    2. 'static' → logprob: -16.5
    3. 'classmethod' → logprob: -16.875
    4. ' static' → logprob: -21.25
    5. 'property' → logprob: -22.75
    6. '@' → logprob: -24.0
    7. 'Static' → logprob: -25.25
    8. '```' → logprob: -26.25
    9. '_static' → logprob: -26.5
    10. 'dat' → logprob: -26.625

Token 1068: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05886320769786835
    2. '(' → logprob: -3.3088631629943848
    3. ' def' → logprob: -4.433863162994385
    4. '   ' → logprob: -4.808863162994385
    5. '[' → logprob: -8.683863639831543
    6. '
' → logprob: -9.558863639831543
    7. '(
' → logprob: -9.683863639831543
    8. '(def' → logprob: -9.933863639831543
    9. ' (' → logprob: -10.308863639831543
    10. ')' → logprob: -10.558863639831543

Token 1069: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05054757744073868
    2. '   ' → logprob: -3.0505475997924805
    3. ' def' → logprob: -6.3005475997924805
    4. '
' → logprob: -9.17554759979248
    5. '	def' → logprob: -11.30054759979248
    6. '    
' → logprob: -13.42554759979248
    7. '  ' → logprob: -13.42554759979248
    8. '(def' → logprob: -14.17554759979248
    9. '(' → logprob: -14.30054759979248
    10. ' ' → logprob: -14.55054759979248

Token 1070: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00081963452976197
    2. ' def' → logprob: -7.250819683074951
    3. '
' → logprob: -9.125819206237793
    4. 'bool' → logprob: -14.125819206237793
    5. '   ' → logprob: -17.25082015991211
    6. '    
' → logprob: -17.75082015991211
    7. '```' → logprob: -17.75082015991211
    8. '
' → logprob: -18.50082015991211
    9. '(def' → logprob: -18.75082015991211
    10. 'Def' → logprob: -18.75082015991211

Token 1071: ' polygon' (ID: 65081)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.9337881803512573
    2. 'can' → logprob: -1.6837881803512573
    3. 'point' → logprob: -2.558788299560547
    4. 'is' → logprob: -2.683788299560547
    5. 'line' → logprob: -2.808788299560547
    6. 'check' → logprob: -2.933788299560547
    7. 'inter' → logprob: -3.933788299560547
    8. 'are' → logprob: -4.183788299560547
    9. 'find' → logprob: -4.183788299560547
    10. 'polygon' → logprob: -4.183788299560547

Token 1072: '_has' (ID: 51865)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.6503682732582092
    2. '_contains' → logprob: -2.2753682136535645
    3. '_edges' → logprob: -2.5253682136535645
    4. '(points' → logprob: -2.7753682136535645
    5. '_area' → logprob: -3.1503682136535645
    6. '_has' → logprob: -3.1503682136535645
    7. 'def' → logprob: -3.5253682136535645
    8. '_inside' → logprob: -3.9003682136535645
    9. 's' → logprob: -4.0253682136535645
    10. '_point' → logprob: -4.5253682136535645

Token 1073: '_edge' (ID: 43226)
  Prédit: '_point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -1.0746822357177734
    2. '_self' → logprob: -1.1996822357177734
    3. '_points' → logprob: -2.5746822357177734
    4. '_inter' → logprob: -2.5746822357177734
    5. '_edge' → logprob: -2.9496822357177734
    6. '_h' → logprob: -3.1996822357177734
    7. '_col' → logprob: -3.8246822357177734
    8. '_inside' → logprob: -4.074682235717773
    9. '_no' → logprob: -4.324682235717773
    10. '_out' → logprob: -4.824682235717773

Token 1074: '(edges' (ID: 185298)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.038326505571603775
    2. '(' → logprob: -4.038326740264893
    3. '_out' → logprob: -4.913326740264893
    4. '(self' → logprob: -4.913326740264893
    5. '_between' → logprob: -5.913326740264893
    6. '_on' → logprob: -7.788326740264893
    7. '_inside' → logprob: -8.038326263427734
    8. '(poly' → logprob: -8.288326263427734
    9. '_(' → logprob: -8.413326263427734
    10. '_inter' → logprob: -8.913326263427734

Token 1075: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20685674250125885
    2. ':' → logprob: -2.8318567276000977
    3. '):' → logprob: -3.0818567276000977
    4. '(p' → logprob: -3.3318567276000977
    5. ')' → logprob: -3.5818567276000977
    6. '(edges' → logprob: -5.331856727600098
    7. '   ' → logprob: -6.081856727600098
    8. 'edges' → logprob: -6.206856727600098
    9. '(pol' → logprob: -6.581856727600098
    10. '):
' → logprob: -6.581856727600098

Token 1076: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.021994130685925484
    2. ')' → logprob: -4.271994113922119
    3. 'Set' → logprob: -5.146994113922119
    4. ' List' → logprob: -7.521994113922119
    5. '[List' → logprob: -7.896994113922119
    6. '   ' → logprob: -8.021994590759277
    7. 'list' → logprob: -9.146994590759277
    8. '(List' → logprob: -9.146994590759277
    9. 'class' → logprob: -9.896994590759277
    10. '[' → logprob: -10.396994590759277

Token 1077: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0017374205635860562
    2. ',' → logprob: -6.501737594604492
    3. '[int' → logprob: -8.626737594604492
    4. '[List' → logprob: -10.626737594604492
    5. ')' → logprob: -12.001737594604492
    6. 'Edge' → logprob: -12.251737594604492
    7. ']' → logprob: -12.751737594604492
    8. '<Edge' → logprob: -12.876737594604492
    9. '   ' → logprob: -13.001737594604492
    10. ',[' → logprob: -13.126737594604492

Token 1078: 'Edge' (ID: 16577)
  Prédit: 'Edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -0.039483796805143356
    2. 'Tuple' → logprob: -3.5394837856292725
    3. 'Point' → logprob: -4.664484024047852
    4. 'int' → logprob: -8.289484024047852
    5. ' Edge' → logprob: -13.164484024047852
    6. '[' → logprob: -13.414484024047852
    7. 'List' → logprob: -13.789484024047852
    8. 'tuple' → logprob: -13.789484024047852
    9. 'edge' → logprob: -13.914484024047852
    10. 'Pair' → logprob: -14.414484024047852

Token 1079: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00037085101939737797
    2. '],' → logprob: -8.000370979309082
    3. ']' → logprob: -11.125370979309082
    4. ')' → logprob: -11.875370979309082
    5. ' ,' → logprob: -11.875370979309082
    6. '   ' → logprob: -13.125370979309082
    7. ',p' → logprob: -13.375370979309082
    8. '])' → logprob: -13.500370979309082
    9. ',
' → logprob: -15.375370979309082
    10. '),' → logprob: -15.375370979309082

Token 1080: ' polygon' (ID: 65081)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -1.1901676654815674
    2. 'polygon' → logprob: -1.3151676654815674
    3. ' edge' → logprob: -2.3151676654815674
    4. 'a' → logprob: -2.3151676654815674
    5. ' polygon' → logprob: -2.3151676654815674
    6. 'u' → logprob: -2.4401676654815674
    7. 'p' → logprob: -4.190167427062988
    8. 'e' → logprob: -5.065167427062988
    9. 'segment' → logprob: -5.315167427062988
    10. ' u' → logprob: -5.815167427062988

Token 1081: '_subset' (ID: 162934)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05195658281445503
    2. ',' → logprob: -3.6769566535949707
    3. ':' → logprob: -4.051956653594971
    4. '):' → logprob: -5.176956653594971
    5. '):
' → logprob: -6.551956653594971
    6. ')>' → logprob: -8.426956176757812
    7. '[' → logprob: -9.176956176757812
    8. '`)' → logprob: -9.301956176757812
    9. '<|end|>' → logprob: -9.676956176757812
    10. '_points' → logprob: -10.051956176757812

Token 1082: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4779168367385864
    2. ',' → logprob: -1.2279168367385864
    3. ':' → logprob: -2.852916717529297
    4. '):' → logprob: -3.602916717529297
    5. '[' → logprob: -7.227916717529297
    6. '):
' → logprob: -7.602916717529297
    7. '   ' → logprob: -8.477916717529297
    8. '<|end|>' → logprob: -9.227916717529297
    9. ']' → logprob: -9.477916717529297
    10. '])' → logprob: -9.977916717529297

Token 1083: ' Set' (ID: 3957)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.12826132774353027
    2. 'Set' → logprob: -2.1282613277435303
    3. ')' → logprob: -6.878261566162109
    4. ' List' → logprob: -9.12826156616211
    5. 'Point' → logprob: -9.75326156616211
    6. '[List' → logprob: -9.87826156616211
    7. 'Optional' → logprob: -10.37826156616211
    8. '   ' → logprob: -11.12826156616211
    9. 'set' → logprob: -11.62826156616211
    10. ' Set' → logprob: -11.75326156616211

Token 1084: '[int' (ID: 40124)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12723475694656372
    2. '[int' → logprob: -2.127234697341919
    3. ')' → logprob: -9.12723445892334
    4. ']' → logprob: -9.25223445892334
    5. '):
' → logprob: -10.87723445892334
    6. 'Point' → logprob: -11.00223445892334
    7. '):' → logprob: -11.12723445892334
    8. 'int' → logprob: -11.25223445892334
    9. ']:' → logprob: -11.75223445892334
    10. '])' → logprob: -11.75223445892334

Token 1085: '])' (ID: 4636)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.612369954586029
    2. '])' → logprob: -0.987369954586029
    3. ')' → logprob: -2.862370014190674
    4. '),' → logprob: -3.987370014190674
    5. ',' → logprob: -5.112370014190674
    6. '>,' → logprob: -6.362370014190674
    7. '>)' → logprob: -6.737370014190674
    8. ']):' → logprob: -7.862370014190674
    9. '):' → logprob: -9.112369537353516
    10. ']' → logprob: -9.487369537353516

Token 1086: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.25936925411224365
    2. ' ->' → logprob: -1.5093692541122437
    3. ')' → logprob: -5.509369373321533
    4. ':' → logprob: -6.009369373321533
    5. ')->' → logprob: -7.509369373321533
    6. '   ' → logprob: -8.134368896484375
    7. '       ' → logprob: -10.384368896484375
    8. ' ' → logprob: -11.134368896484375
    9. '(' → logprob: -12.134368896484375
    10. ':
' → logprob: -12.259368896484375

Token 1087: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.00038145645521581173
    2. ' bool' → logprob: -7.8753814697265625
    3. 'Optional' → logprob: -14.250381469726562
    4. '   ' → logprob: -15.250381469726562
    5. '	bool' → logprob: -15.875381469726562
    6. '<bool' → logprob: -16.375381469726562
    7. 'int' → logprob: -16.375381469726562
    8. 'classmethod' → logprob: -16.750381469726562
    9. '```' → logprob: -17.000381469726562
    10. ' ' → logprob: -17.000381469726562

Token 1088: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3842909336090088
    2. ':' → logprob: -2.509290933609009
    3. '       ' → logprob: -2.759290933609009
    4. '(self' → logprob: -2.884290933609009
    5. '(
' → logprob: -3.009290933609009
    6. '   ' → logprob: -3.384290933609009
    7. '(p' → logprob: -3.884290933609009
    8. ':
' → logprob: -4.88429069519043
    9. '(points' → logprob: -6.88429069519043
    10. '(edges' → logprob: -6.88429069519043

Token 1089: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5250739455223083
    2. '   ' → logprob: -0.9000739455223083
    3. ' for' → logprob: -6.650074005126953
    4. 'for' → logprob: -8.275074005126953
    5. '    ' → logprob: -8.525074005126953
    6. '	for' → logprob: -9.900074005126953
    7. '    
' → logprob: -10.275074005126953
    8. '```' → logprob: -11.025074005126953
    9. '	   ' → logprob: -11.025074005126953
    10. 'return' → logprob: -11.150074005126953

Token 1090: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23483458161354065
    2. ' for' → logprob: -1.7348345518112183
    3. 'for' → logprob: -3.484834671020508
    4. '   ' → logprob: -6.234834671020508
    5. '	for' → logprob: -8.734834671020508
    6. 'return' → logprob: -10.609834671020508
    7. ' return' → logprob: -11.859834671020508
    8. 'tokens' → logprob: -11.859834671020508
    9. 'if' → logprob: -11.984834671020508
    10. 'def' → logprob: -12.109834671020508

Token 1091: ' Checks' (ID: 51655)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002973780035972595
    2. '       ' → logprob: -6.377973556518555
    3. 'edges' → logprob: -8.002973556518555
    4. '#' → logprob: -8.627973556518555
    5. '   ' → logprob: -9.002973556518555
    6. ' for' → logprob: -9.002973556518555
    7. 'indices' → logprob: -9.127973556518555
    8. 'return' → logprob: -9.252973556518555
    9. 'existing' → logprob: -9.627973556518555
    10. 'subset' → logprob: -9.627973556518555

Token 1092: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14082588255405426
    2. 'any' → logprob: -2.1408259868621826
    3. 'if' → logprob: -4.3908257484436035
    4. '       ' → logprob: -7.5158257484436035
    5. ' any' → logprob: -7.8908257484436035
    6. ' for' → logprob: -8.390826225280762
    7. '   ' → logprob: -8.640826225280762
    8. 'return' → logprob: -9.890826225280762
    9. 'whether' → logprob: -11.515826225280762
    10. 'len' → logprob: -11.890826225280762

Token 1093: ' the' (ID: 290)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.005198182072490454
    2. 'len' → logprob: -5.505198001861572
    3. ' any' → logprob: -6.880198001861572
    4. 'there' → logprob: -9.63019847869873
    5. 'edges' → logprob: -11.50519847869873
    6. 'for' → logprob: -12.00519847869873
    7. '
' → logprob: -12.63019847869873
    8. '```' → logprob: -13.38019847869873
    9. '   ' → logprob: -13.50519847869873
    10. 'the' → logprob: -14.25519847869873

Token 1094: ' polygon' (ID: 65081)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.09504211694002151
    2. 'len' → logprob: -2.4700422286987305
    3. 'edges' → logprob: -6.0950422286987305
    4. 'polygon' → logprob: -6.4700422286987305
    5. 'for' → logprob: -6.9700422286987305
    6. 'def' → logprob: -7.0950422286987305
    7. ' any' → logprob: -8.84504222869873
    8. '
' → logprob: -9.34504222869873
    9. 'there' → logprob: -9.34504222869873
    10. 'exists' → logprob: -10.09504222869873

Token 1095: ' boundary' (ID: 35021)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.2981056272983551
    2. 'has' → logprob: -2.6731057167053223
    3. '_edges' → logprob: -3.1731057167053223
    4. ' edges' → logprob: -3.2981057167053223
    5. 'subset' → logprob: -3.2981057167053223
    6. '_subset' → logprob: -4.048105716705322
    7. '_has' → logprob: -4.173105716705322
    8. ' has' → logprob: -4.173105716705322
    9. 'contains' → logprob: -4.923105716705322
    10. ''s' → logprob: -5.923105716705322

Token 1096: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.7322627305984497
    2. 'any' → logprob: -1.8572627305984497
    3. 'for' → logprob: -1.9822627305984497
    4. 'has' → logprob: -3.35726261138916
    5. 'contains' → logprob: -3.60726261138916
    6. ' any' → logprob: -3.73226261138916
    7. '_edges' → logprob: -3.98226261138916
    8. ' for' → logprob: -3.98226261138916
    9. 'def' → logprob: -4.23226261138916
    10. ' has' → logprob: -4.23226261138916

Token 1097: ' all' (ID: 722)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.1492481380701065
    2. ' are' → logprob: -2.7742481231689453
    3. 'for' → logprob: -4.024248123168945
    4. 'exist' → logprob: -4.274248123168945
    5. 'in' → logprob: -4.524248123168945
    6. ' in' → logprob: -5.149248123168945
    7. 'appear' → logprob: -5.274248123168945
    8. ' exist' → logprob: -5.399248123168945
    9. ' for' → logprob: -5.524248123168945
    10. '.' → logprob: -6.524248123168945

Token 1098: ' exists' (ID: 13031)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.2887226343154907
    2. 'exist' → logprob: -2.038722515106201
    3. 'appear' → logprob: -2.538722515106201
    4. 'in' → logprob: -4.163722515106201
    5. 'present' → logprob: -4.413722515106201
    6. ' exist' → logprob: -5.288722515106201
    7. ' are' → logprob: -5.288722515106201
    8. '```' → logprob: -7.038722515106201
    9. 'occur' → logprob: -7.413722515106201
    10. 'lie' → logprob: -7.663722515106201

Token 1099: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3000286817550659
    2. '       ' → logprob: -2.0500288009643555
    3. 'in' → logprob: -3.1750288009643555
    4. '   ' → logprob: -3.5500288009643555
    5. ' and' → logprob: -3.6750288009643555
    6. ' for' → logprob: -4.8000288009643555
    7. ',' → logprob: -4.8000288009643555
    8. ':' → logprob: -5.5500288009643555
    9. ' as' → logprob: -5.9250288009643555
    10. ')' → logprob: -6.6750288009643555

Token 1100: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.001023758901283145
    2. '{' → logprob: -7.876023769378662
    3. ' edges' → logprob: -8.001023292541504
    4. '[(' → logprob: -9.626023292541504
    5. '   ' → logprob: -10.001023292541504
    6. 'edge' → logprob: -10.126023292541504
    7. '       ' → logprob: -10.376023292541504
    8. '[' → logprob: -10.501023292541504
    9. '[
' → logprob: -10.626023292541504
    10. 'polygon' → logprob: -11.001023292541504

Token 1101: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6694248914718628
    2. '   ' → logprob: -1.0444248914718628
    3. ':' → logprob: -2.1694250106811523
    4. ',' → logprob: -5.294425010681152
    5. ':
' → logprob: -5.544425010681152
    6. '(
' → logprob: -5.669425010681152
    7. '(' → logprob: -5.794425010681152
    8. ')' → logprob: -6.794425010681152
    9. '):' → logprob: -7.044425010681152
    10. '.' → logprob: -7.294425010681152

Token 1102: 'path' (ID: 4189)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -1.1576306819915771
    2. '       ' → logprob: -1.2826306819915771
    3. ')' → logprob: -1.6576306819915771
    4. 'for' → logprob: -1.7826306819915771
    5. '
' → logprob: -3.907630681991577
    6. ' for' → logprob: -4.657630920410156
    7. 'def' → logprob: -5.657630920410156
    8. ' edges' → logprob: -5.782630920410156
    9. 'edge' → logprob: -6.282630920410156
    10. '):
' → logprob: -6.282630920410156

Token 1103: ' subset' (ID: 58845)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9968823790550232
    2. '):' → logprob: -1.371882438659668
    3. '   ' → logprob: -2.371882438659668
    4. '):
' → logprob: -2.621882438659668
    5. ':' → logprob: -2.746882438659668
    6. '       ' → logprob: -3.496882438659668
    7. '_edges' → logprob: -3.621882438659668
    8. ' or' → logprob: -4.246882438659668
    9. 's' → logprob: -4.496882438659668
    10. ' and' → logprob: -4.871882438659668

Token 1104: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7729288339614868
    2. '):' → logprob: -1.6479288339614868
    3. '):
' → logprob: -1.7729288339614868
    4. '   ' → logprob: -2.5229287147521973
    5. ':' → logprob: -2.8979287147521973
    6. ',' → logprob: -4.022928714752197
    7. ' or' → logprob: -5.147928714752197
    8. ' and' → logprob: -5.272928714752197
    9. '       ' → logprob: -5.647928714752197
    10. 'and' → logprob: -6.647928714752197

Token 1105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28767281770706177
    2. '   ' → logprob: -1.412672758102417
    3. '(' → logprob: -6.162672996520996
    4. ':' → logprob: -6.912672996520996
    5. '```' → logprob: -7.162672996520996
    6. ')' → logprob: -7.287672996520996
    7. '(
' → logprob: -7.662672996520996
    8. '    ' → logprob: -7.662672996520996
    9. ',' → logprob: -8.662672996520996
    10. '):' → logprob: -9.162672996520996

Token 1106: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018262561410665512
    2. 'for' → logprob: -4.2682623863220215
    3. ' for' → logprob: -6.1432623863220215
    4. 'indices' → logprob: -7.6432623863220215
    5. 'n' → logprob: -7.7682623863220215
    6. 'points' → logprob: -8.14326286315918
    7. '```' → logprob: -8.76826286315918
    8. 'vertices' → logprob: -9.51826286315918
    9. 'edges' → logprob: -9.64326286315918
    10. 'if' → logprob: -9.64326286315918

Token 1107: ' polygon' (ID: 65081)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21117132902145386
    2. 'for' → logprob: -1.7111713886260986
    3. ' for' → logprob: -5.2111711502075195
    4. 'edges' → logprob: -7.0861711502075195
    5. 'existing' → logprob: -7.4611711502075195
    6. 'indices' → logprob: -7.5861711502075195
    7. 'present' → logprob: -7.7111711502075195
    8. 'subset' → logprob: -8.21117115020752
    9. 'return' → logprob: -8.33617115020752
    10. 'polygon' → logprob: -8.46117115020752

Token 1108: '_subset' (ID: 162934)
  Prédit: '_vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vertices' → logprob: -1.0427101850509644
    2. '_points' → logprob: -1.4177101850509644
    3. 'points' → logprob: -2.542710304260254
    4. '_subset' → logprob: -2.667710304260254
    5. '_edges' → logprob: -2.792710304260254
    6. 'vertices' → logprob: -3.167710304260254
    7. 'subset' → logprob: -3.292710304260254
    8. ' =' → logprob: -4.042710304260254
    9. '_vertex' → logprob: -4.042710304260254
    10. '_size' → logprob: -4.542710304260254

Token 1109: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7929949760437012
    2. '=' → logprob: -1.4179949760437012
    3. ':' → logprob: -1.6679949760437012
    4. '.' → logprob: -3.667994976043701
    5. 'points' → logprob: -4.167994976043701
    6. 'def' → logprob: -4.542994976043701
    7. '_points' → logprob: -4.542994976043701
    8. ')' → logprob: -4.542994976043701
    9. 'subset' → logprob: -5.042994976043701
    10. '_vertices' → logprob: -5.292994976043701

Token 1110: ' indices' (ID: 30378)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.1693934202194214
    2. 'set' → logprob: -1.2943934202194214
    3. 'list' → logprob: -2.169393539428711
    4. 'vertices' → logprob: -2.169393539428711
    5. 'List' → logprob: -2.669393539428711
    6. 'points' → logprob: -2.919393539428711
    7. 'indices' → logprob: -3.294393539428711
    8. 'Set' → logprob: -4.919393539428711
    9. '{' → logprob: -5.044393539428711
    10. 'sorted' → logprob: -5.294393539428711

Token 1111: ' of' (ID: 328)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0133239030838013
    2. ':' → logprob: -1.6383239030838013
    3. '       ' → logprob: -2.2633237838745117
    4. '   ' → logprob: -2.5133237838745117
    5. ' of' → logprob: -2.6383237838745117
    6. ',' → logprob: -3.2633237838745117
    7. ' in' → logprob: -3.3883237838745117
    8. ')' → logprob: -3.7633237838745117
    9. ' def' → logprob: -3.8883237838745117
    10. '<|end|>' → logprob: -4.013323783874512

Token 1112: ' polygon' (ID: 65081)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6353897452354431
    2. 'polygon' → logprob: -1.135389804840088
    3. 'points' → logprob: -2.260389804840088
    4. 'vertices' → logprob: -3.385389804840088
    5. 'list' → logprob: -5.010389804840088
    6. 'edges' → logprob: -6.760389804840088
    7. 'Point' → logprob: -7.135389804840088
    8. 'nodes' → logprob: -8.01038932800293
    9. 'pol' → logprob: -8.13538932800293
    10. 'point' → logprob: -8.13538932800293

Token 1113: ' vertices' (ID: 38360)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.5668023228645325
    2. 'vertices' → logprob: -1.1918022632598877
    3. ')' → logprob: -2.4418022632598877
    4. 'edges' → logprob: -4.316802501678467
    5. ' points' → logprob: -5.441802501678467
    6. 'oints' → logprob: -5.691802501678467
    7. ' vertices' → logprob: -5.816802501678467
    8. '_points' → logprob: -5.941802501678467
    9. 's' → logprob: -6.191802501678467
    10. '
' → logprob: -6.316802501678467

Token 1114: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46975114941596985
    2. ':' → logprob: -1.0947511196136475
    3. '   ' → logprob: -3.4697511196136475
    4. ':
' → logprob: -5.594751358032227
    5. ')' → logprob: -6.719751358032227
    6. ',' → logprob: -6.844751358032227
    7. '        
' → logprob: -7.594751358032227
    8. '):' → logprob: -7.844751358032227
    9. '):
' → logprob: -8.094751358032227
    10. '(' → logprob: -8.469751358032227

Token 1115: ' order' (ID: 2569)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.6737788319587708
    2. 'the' → logprob: -0.7987788319587708
    3. 'set' → logprob: -4.173779010772705
    4. 'order' → logprob: -4.548779010772705
    5. 'List' → logprob: -5.048779010772705
    6. 'Set' → logprob: -5.173779010772705
    7. 'list' → logprob: -7.423779010772705
    8. 'a' → logprob: -8.048778533935547
    9. 'sequence' → logprob: -8.173778533935547
    10. 'sorted' → logprob: -8.298778533935547

Token 1116: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10723709315061569
    2. ':' → logprob: -3.1072371006011963
    3. '   ' → logprob: -3.2322371006011963
    4. ',' → logprob: -4.232236862182617
    5. ')' → logprob: -6.607236862182617
    6. '):' → logprob: -7.607236862182617
    7. ':
' → logprob: -8.232236862182617
    8. '(' → logprob: -8.982236862182617
    9. '):
' → logprob: -9.357236862182617
    10. '    ' → logprob: -9.482236862182617

Token 1117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002033799421042204
    2. '```' → logprob: -6.752033710479736
    3. '   ' → logprob: -7.877033710479736
    4. ',' → logprob: -8.627034187316895
    5. ' for' → logprob: -9.502034187316895
    6. '
' → logprob: -10.252034187316895
    7. 'tokens' → logprob: -10.377034187316895
    8. 'n' → logprob: -10.377034187316895
    9. 'def' → logprob: -11.502034187316895
    10. '``' → logprob: -11.502034187316895

Token 1118: ' n' (ID: 297)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030072962399572134
    2. ' for' → logprob: -7.253007411956787
    3. '   ' → logprob: -7.378007411956787
    4. 'n' (adapté à ' n') → logprob: -8.003006935119629
    5. 'for' → logprob: -8.378006935119629
    6. 'points' → logprob: -8.503006935119629
    7. 'indices' → logprob: -8.878006935119629
    8. 'return' → logprob: -9.128006935119629
    9. '        
' → logprob: -9.628006935119629
    10. 'i' → logprob: -9.878006935119629

Token 1119: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12734654545783997
    2. ' =' → logprob: -2.1273465156555176
    3. '=len' → logprob: -8.252346992492676
    4. '   ' → logprob: -9.627346992492676
    5. ',' → logprob: -10.752346992492676
    6. ':' → logprob: -10.877346992492676
    7. '=int' → logprob: -11.127346992492676
    8. '=size' → logprob: -12.252346992492676
    9. '       ' → logprob: -12.502346992492676
    10. '=
' → logprob: -12.627346992492676

Token 1120: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.339278580620885e-06
    2. ' len' → logprob: -13.000001907348633
    3. '(len' → logprob: -17.250001907348633
    4. '	len' → logprob: -19.375001907348633
    5. '=len' → logprob: -19.500001907348633
    6. '[len' → logprob: -20.125001907348633
    7. '   ' → logprob: -20.375001907348633
    8. 'length' → logprob: -21.250001907348633
    9. ' ' → logprob: -21.500001907348633
    10. '```' → logprob: -22.000001907348633

Token 1121: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.011067868210375309
    2. 'polygon' → logprob: -4.511067867279053
    3. 'p' → logprob: -11.136068344116211
    4. ' polygon' → logprob: -12.261068344116211
    5. 'pol' → logprob: -15.886068344116211
    6. 'list' → logprob: -16.01106834411621
    7. 'poly' → logprob: -16.13606834411621
    8. '(pol' → logprob: -16.26106834411621
    9. '_polygon' → logprob: -16.38606834411621
    10. '(list' → logprob: -16.38606834411621

Token 1122: 'olygon' (ID: 80431)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.004111054353415966
    2. 'olygon' → logprob: -5.504111289978027
    3. ' polygon' → logprob: -10.379111289978027
    4. '_polygon' → logprob: -14.004111289978027
    5. '(p' → logprob: -15.504111289978027
    6. 'list' → logprob: -16.00411033630371
    7. ')' → logprob: -16.12911033630371
    8. 'poly' → logprob: -16.25411033630371
    9. '{' → logprob: -16.87911033630371
    10. 'ol' → logprob: -17.00411033630371

Token 1123: '_subset' (ID: 162934)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0077128661796450615
    2. '(p' → logprob: -5.5077128410339355
    3. ')
' → logprob: -6.2577128410339355
    4. '<|end|>' → logprob: -7.6327128410339355
    5. 'polygon' → logprob: -7.7577128410339355
    6. '       ' → logprob: -8.882713317871094
    7. ' polygon' → logprob: -9.632713317871094
    8. ')p' → logprob: -10.007713317871094
    9. 's' → logprob: -10.132713317871094
    10. '```' → logprob: -10.132713317871094

Token 1124: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0446680411696434
    2. ')
' → logprob: -3.169667959213257
    3. '
' → logprob: -7.669668197631836
    4. '-' → logprob: -7.919668197631836
    5. '       ' → logprob: -8.669668197631836
    6. '):
' → logprob: -9.044668197631836
    7. ' -' → logprob: -9.044668197631836
    8. ' )' → logprob: -9.169668197631836
    9. ')-' → logprob: -9.544668197631836
    10. '   ' → logprob: -10.044668197631836

Token 1125: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007783947046846151
    2. ' for' → logprob: -5.257783889770508
    3. '   ' → logprob: -6.882783889770508
    4. 'for' → logprob: -8.632783889770508
    5. '```' → logprob: -8.632783889770508
    6. ',' → logprob: -8.757783889770508
    7. ' indices' → logprob: -8.882783889770508
    8. ' i' → logprob: -9.007783889770508
    9. 'indices' → logprob: -9.257783889770508
    10. '<|end|>' → logprob: -9.382783889770508

Token 1126: ' ps' (ID: 10942)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.8267459869384766
    2. ' polygon' → logprob: -1.7017459869384766
    3. 'i' → logprob: -1.9517459869384766
    4. 'for' → logprob: -2.7017459869384766
    5. 'indices' → logprob: -3.2017459869384766
    6. ' for' → logprob: -3.7017459869384766
    7. 'points' → logprob: -3.8267459869384766
    8. ' i' → logprob: -4.201745986938477
    9. 'subset' → logprob: -4.201745986938477
    10. 'idx' → logprob: -4.701745986938477

Token 1127: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31999558210372925
    2. '=' → logprob: -1.319995641708374
    3. '_list' → logprob: -6.694995403289795
    4. '_indices' → logprob: -6.819995403289795
    5. '_points' → logprob: -7.194995403289795
    6. 'ub' → logprob: -7.694995403289795
    7. '_' → logprob: -7.694995403289795
    8. '_ids' → logprob: -7.944995403289795
    9. 'e' → logprob: -8.194995880126953
    10. '_sorted' → logprob: -8.319995880126953

Token 1128: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00015598179015796632
    2. 'sorted' → logprob: -9.50015640258789
    3. ' list' → logprob: -9.75015640258789
    4. '[list' → logprob: -10.75015640258789
    5. '[p' → logprob: -13.62515640258789
    6. '[' → logprob: -16.00015640258789
    7. '   ' → logprob: -17.50015640258789
    8. ' sorted' → logprob: -17.87515640258789
    9. '(list' → logprob: -18.37515640258789
    10. 'polygon' → logprob: -18.50015640258789

Token 1129: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00016039233014453202
    2. '(sorted' → logprob: -8.750160217285156
    3. 'polygon' → logprob: -13.375160217285156
    4. 'sorted' → logprob: -15.625160217285156
    5. '(pol' → logprob: -16.500160217285156
    6. '(poly' → logprob: -17.125160217285156
    7. '[p' → logprob: -17.625160217285156
    8. '(' → logprob: -18.750160217285156
    9. '(re' → logprob: -19.250160217285156
    10. 'p' → logprob: -19.250160217285156

Token 1130: 'olygon' (ID: 80431)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.001988947857171297
    2. 'olygon' → logprob: -6.251988887786865
    3. 'pol' → logprob: -9.876989364624023
    4. '(p' → logprob: -12.751989364624023
    5. ' polygon' → logprob: -12.876989364624023
    6. 'p' → logprob: -13.126989364624023
    7. 'poly' → logprob: -14.626989364624023
    8. '_polygon' → logprob: -14.876989364624023
    9. 'sorted' → logprob: -15.126989364624023
    10. '(pol' → logprob: -16.001989364624023

Token 1131: '_subset' (ID: 162934)
  Prédit: '_subset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_subset' → logprob: -0.10077041387557983
    2. 'subset' → logprob: -2.3507704734802246
    3. 'polygon' → logprob: -8.725769996643066
    4. '_sorted' → logprob: -9.100769996643066
    5. '(p' → logprob: -9.475769996643066
    6. '_indices' → logprob: -9.475769996643066
    7. ')' → logprob: -9.850769996643066
    8. 'sorted' → logprob: -10.725769996643066
    9. 'Subset' → logprob: -11.225769996643066
    10. 'p' → logprob: -11.850769996643066

Token 1132: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0026188241317868233
    2. '())' → logprob: -6.502618789672852
    3. ')
' → logprob: -6.877618789672852
    4. '<|end|>' → logprob: -10.752618789672852
    5. '       ' → logprob: -10.877618789672852
    6. '())
' → logprob: -11.377618789672852
    7. '<|end|>' → logprob: -11.502618789672852
    8. '()' → logprob: -11.627618789672852
    9. '   ' → logprob: -12.377618789672852
    10. ' )' → logprob: -12.377618789672852

Token 1133: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016402071341872215
    2. '<|end|>' → logprob: -4.516402244567871
    3. ' for' → logprob: -5.891402244567871
    4. '[' → logprob: -7.016402244567871
    5. ',' → logprob: -7.641402244567871
    6. ':' → logprob: -8.266402244567871
    7. ')' → logprob: -8.391402244567871
    8. '<|end|>' → logprob: -8.516402244567871
    9. 'for' → logprob: -9.516402244567871
    10. '
' → logprob: -9.891402244567871

Token 1134: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3874754011631012
    2. 'for' → logprob: -1.1374753713607788
    3. '       ' → logprob: -7.887475490570068
    4. '
' → logprob: -8.76247501373291
    5. ' i' → logprob: -10.63747501373291
    6. 'i' → logprob: -11.51247501373291
    7. '   ' → logprob: -11.51247501373291
    8. ' if' → logprob: -11.63747501373291
    9. 'return' → logprob: -11.76247501373291
    10. '```' → logprob: -12.63747501373291

Token 1135: ' polygon' (ID: 65081)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00263118464499712
    2. ' for' → logprob: -6.252631187438965
    3. 'if' → logprob: -8.502631187438965
    4. 'ps' → logprob: -8.627631187438965
    5. '   ' → logprob: -8.877631187438965
    6. '       ' → logprob: -9.627631187438965
    7. 'return' → logprob: -10.002631187438965
    8. 'i' → logprob: -10.502631187438965
    9. 'prev' → logprob: -10.752631187438965
    10. '```' → logprob: -11.752631187438965

Token 1136: ' given' (ID: 4335)
  Prédit: '_subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_subset' → logprob: -0.5278090834617615
    2. 'subset' → logprob: -2.1528091430664062
    3. '_vertices' → logprob: -2.4028091430664062
    4. ' =' → logprob: -2.5278091430664062
    5. '_indices' → logprob: -3.7778091430664062
    6. ' is' → logprob: -4.277809143066406
    7. '_edges' → logprob: -4.652809143066406
    8. 'indices' → logprob: -4.652809143066406
    9. 'vertices' → logprob: -4.777809143066406
    10. '_vertex' → logprob: -5.152809143066406

Token 1137: ' only' (ID: 1606)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3788634538650513
    2. ' if' → logprob: -1.6288634538650513
    3. ' is' → logprob: -2.5038633346557617
    4. 'if' → logprob: -2.5038633346557617
    5. ':' → logprob: -3.1288633346557617
    6. 'is' → logprob: -3.1288633346557617
    7. ' =' → logprob: -3.2538633346557617
    8. '[' → logprob: -3.5038633346557617
    9. ' in' → logprob: -3.6288633346557617
    10. 'in' → logprob: -3.7538633346557617

Token 1138: ' as' (ID: 472)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2446819394826889
    2. '       ' → logprob: -2.3696818351745605
    3. ' for' → logprob: -2.9946818351745605
    4. 'if' → logprob: -3.2446818351745605
    5. 'for' → logprob: -3.9946818351745605
    6. ':' → logprob: -6.2446818351745605
    7. '   ' → logprob: -6.3696818351745605
    8. '
' → logprob: -6.3696818351745605
    9. 'indices' → logprob: -6.3696818351745605
    10. ',' → logprob: -6.6196818351745605

Token 1139: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.8331596255302429
    2. 'ordered' → logprob: -2.0831596851348877
    3. 'list' → logprob: -2.2081596851348877
    4. 'ps' → logprob: -2.4581596851348877
    5. ' indices' → logprob: -2.7081596851348877
    6. ' list' → logprob: -2.9581596851348877
    7. 'a' → logprob: -3.5831596851348877
    8. ' ordered' → logprob: -4.083159446716309
    9. 'sorted' → logprob: -4.458159446716309
    10. 'subset' → logprob: -4.708159446716309

Token 1140: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19649828970432281
    2. ' for' → logprob: -1.9464982748031616
    3. '<|end|>' → logprob: -4.321498394012451
    4. ' if' → logprob: -4.946498394012451
    5. '
' → logprob: -5.446498394012451
    6. ',' → logprob: -5.571498394012451
    7. '<|end|>' → logprob: -6.071498394012451
    8. 'for' → logprob: -6.571498394012451
    9. ':' → logprob: -7.196498394012451
    10. ')' → logprob: -7.946498394012451

Token 1141: ' polygon' (ID: 65081)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.41945239901542664
    2. 'for' → logprob: -1.294452428817749
    3. '       ' → logprob: -2.794452428817749
    4. 'ps' → logprob: -5.41945219039917
    5. ' ps' → logprob: -7.04445219039917
    6. '#' → logprob: -7.54445219039917
    7. ' i' → logprob: -8.044452667236328
    8. 'i' → logprob: -8.169452667236328
    9. ' if' → logprob: -8.169452667236328
    10. 'if' → logprob: -8.419452667236328

Token 1142: ' vertices' (ID: 38360)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.858563244342804
    2. '=' → logprob: -1.8585631847381592
    3. '_vertices' → logprob: -1.8585631847381592
    4. 'indices' → logprob: -2.983563184738159
    5. '_points' → logprob: -3.108563184738159
    6. 'points' → logprob: -3.233563184738159
    7. '_indices' → logprob: -3.358563184738159
    8. 'vertices' → logprob: -3.983563184738159
    9. '_pts' → logprob: -3.983563184738159
    10. 'len' → logprob: -4.608563423156738

Token 1143: ' should' (ID: 1757)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.9392460584640503
    2. ' =' → logprob: -2.31424617767334
    3. ',' → logprob: -2.56424617767334
    4. ':' → logprob: -2.56424617767334
    5. '.sort' → logprob: -2.56424617767334
    6. '.' → logprob: -2.68924617767334
    7. '<|end|>' → logprob: -2.68924617767334
    8. 'for' → logprob: -2.81424617767334
    9. ')' → logprob: -2.81424617767334
    10. '=' → logprob: -2.93924617767334

Token 1144: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.4419163465499878
    2. '=' → logprob: -1.1919163465499878
    3. '+=' → logprob: -3.8169164657592773
    4. 'ps' → logprob: -4.441916465759277
    5. '.append' → logprob: -4.816916465759277
    6. 'remain' → logprob: -5.941916465759277
    7. 'sort' → logprob: -6.316916465759277
    8. ' be' → logprob: -6.691916465759277
    9. 'continue' → logprob: -6.941916465759277
    10. 'sorted' → logprob: -7.191916465759277

Token 1145: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.16194823384284973
    2. 'ps' → logprob: -1.9119482040405273
    3. 'ordered' → logprob: -7.661948204040527
    4. 'list' → logprob: -7.661948204040527
    5. 'polygon' → logprob: -8.286948204040527
    6. ' sorted' → logprob: -8.411948204040527
    7. ' ps' → logprob: -8.536948204040527
    8. '   ' → logprob: -11.036948204040527
    9. 'range' → logprob: -11.161948204040527
    10. '[' → logprob: -11.661948204040527

Token 1146: ' CC' (ID: 21547)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.020767616108059883
    2. '.' → logprob: -4.395767688751221
    3. '   ' → logprob: -6.395767688751221
    4. '(
' → logprob: -6.895767688751221
    5. ',' → logprob: -7.520767688751221
    6. ')' → logprob: -7.520767688751221
    7. '()' → logprob: -7.770767688751221
    8. ':' → logprob: -7.770767688751221
    9. '(sorted' → logprob: -7.895767688751221
    10. ':
' → logprob: -8.270767211914062

Token 1147: 'W' (ID: 54)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.51512211561203
    2. 'W' → logprob: -1.3901221752166748
    3. 'S' → logprob: -2.765122175216675
    4. 'sorted' → logprob: -3.640122175216675
    5. '[
' → logprob: -4.265121936798096
    6. 'ps' → logprob: -4.640121936798096
    7. 's' → logprob: -5.015121936798096
    8. '[' → logprob: -5.140121936798096
    9. '(ps' → logprob: -5.265121936798096
    10. 'p' → logprob: -5.640121936798096

Token 1148: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3218291997909546
    2. ':' → logprob: -1.8218291997909546
    3. '.sort' → logprob: -2.071829319000244
    4. ')' → logprob: -2.696829319000244
    5. ':
' → logprob: -2.696829319000244
    6. '   ' → logprob: -2.821829319000244
    7. '[' → logprob: -3.071829319000244
    8. ',' → logprob: -3.071829319000244
    9. '       ' → logprob: -3.696829319000244
    10. '<|end|>' → logprob: -3.821829319000244

Token 1149: ' but' (ID: 889)
  Prédit: 'ps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ps' → logprob: -0.6176753640174866
    2. '       ' → logprob: -1.2426753044128418
    3. ' for' → logprob: -2.367675304412842
    4. ' ps' → logprob: -3.617675304412842
    5. 'for' → logprob: -3.617675304412842
    6. '(ps' → logprob: -5.242675304412842
    7. '	ps' → logprob: -5.367675304412842
    8. '        
' → logprob: -6.367675304412842
    9. '#' → logprob: -6.492675304412842
    10. 'i' → logprob: -6.492675304412842

Token 1150: ' this' (ID: 495)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5509997606277466
    2. 'ps' → logprob: -1.0509997606277466
    3. ' ps' → logprob: -3.800999641418457
    4. '       ' → logprob: -4.550999641418457
    5. 'not' → logprob: -5.050999641418457
    6. 'for' → logprob: -5.175999641418457
    7. 'if' → logprob: -5.300999641418457
    8. '...' → logprob: -5.800999641418457
    9. 'polygon' → logprob: -5.925999641418457
    10. 'sorted' → logprob: -6.050999641418457

Token 1151: ' function' (ID: 1114)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.1827356815338135
    2. '[' → logprob: -1.6827356815338135
    3. ' continues' → logprob: -2.8077356815338135
    4. '.' → logprob: -2.9327356815338135
    5. '   ' → logprob: -3.1827356815338135
    6. ' can' → logprob: -3.1827356815338135
    7. ' does' → logprob: -3.8077356815338135
    8. ' will' → logprob: -3.8077356815338135
    9. ' ' → logprob: -4.057735443115234
    10. '
' → logprob: -4.057735443115234

Token 1152: ' requires' (ID: 10860)
  Prédit: ' continues'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continues' → logprob: -1.321427822113037
    2. '   ' → logprob: -1.696427822113037
    3. ':' → logprob: -2.321427822113037
    4. '.append' → logprob: -2.446427822113037
    5. '.sort' → logprob: -2.446427822113037
    6. '.' → logprob: -2.696427822113037
    7. '<|end|>' → logprob: -2.946427822113037
    8. '[' → logprob: -3.446427822113037
    9. '<|end|>' → logprob: -3.696427822113037
    10. '
' → logprob: -4.696427822113037

Token 1153: ' a' (ID: 261)
  Prédit: 'ps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ps' → logprob: -0.6484696865081787
    2. ' ps' → logprob: -1.7734696865081787
    3. 'n' → logprob: -2.3984696865081787
    4. ' n' → logprob: -2.8984696865081787
    5. 'for' → logprob: -3.6484696865081787
    6. 'len' → logprob: -3.6484696865081787
    7. '(ps' → logprob: -3.7734696865081787
    8. ' for' → logprob: -4.273469924926758
    9. 'True' → logprob: -4.648469924926758
    10. 'i' → logprob: -4.773469924926758

Token 1154: ' polygon' (ID: 65081)
  Prédit: 'ps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ps' → logprob: -1.52642822265625
    2. ')' → logprob: -1.77642822265625
    3. ':' → logprob: -1.77642822265625
    4. 'return' → logprob: -2.52642822265625
    5. ' ps' → logprob: -2.52642822265625
    6. '(ps' → logprob: -2.77642822265625
    7. 'sorted' → logprob: -3.27642822265625
    8. ' return' → logprob: -3.40142822265625
    9. ' sorted' → logprob: -3.77642822265625
    10. 'pass' → logprob: -4.02642822265625

Token 1155: ' order' (ID: 2569)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3874284029006958
    2. '   ' → logprob: -2.3874282836914062
    3. '
' → logprob: -2.8874282836914062
    4. '_vertices' → logprob: -3.0124282836914062
    5. '.' → logprob: -3.1374282836914062
    6. '[' → logprob: -3.3874282836914062
    7. '_indices' → logprob: -3.3874282836914062
    8. '_subset' → logprob: -3.5124282836914062
    9. '<|end|>' → logprob: -3.6374282836914062
    10. ',' → logprob: -3.6374282836914062

Token 1156: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.29542601108551025
    2. '
' → logprob: -2.7954258918762207
    3. '       ' → logprob: -2.9204258918762207
    4. ':
' → logprob: -3.0454258918762207
    5. '<|end|>' → logprob: -3.4204258918762207
    6. ',' → logprob: -4.295425891876221
    7. '[' → logprob: -4.295425891876221
    8. '<|end|>' → logprob: -5.170425891876221
    9. '.' → logprob: -5.795425891876221
    10. '(n' → logprob: -5.795425891876221

Token 1157: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07858723402023315
    2. '<|end|>' → logprob: -3.328587293624878
    3. '   ' → logprob: -4.828587055206299
    4. '	' → logprob: -5.203587055206299
    5. '
' → logprob: -5.703587055206299
    6. '\n' → logprob: -5.703587055206299
    7. '```' → logprob: -5.703587055206299
    8. '[' → logprob: -5.703587055206299
    9. '        
' → logprob: -6.328587055206299
    10. '[
' → logprob: -6.328587055206299

Token 1158: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7109708189964294
    2. '\n' → logprob: -1.4609708786010742
    3. '\' → logprob: -2.835970878601074
    4. ' ' → logprob: -2.835970878601074
    5. '[' → logprob: -3.585970878601074
    6. ' 
' → logprob: -3.710970878601074
    7. '<|end|>' → logprob: -4.085970878601074
    8. '	' → logprob: -4.585970878601074
    9. '    ' → logprob: -4.960970878601074
    10. '#' (adapté à ' #') → logprob: -4.960970878601074

Token 1159: ' So' (ID: 2632)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.2641807794570923
    2. '       ' → logprob: -1.3891807794570923
    3. ' if' → logprob: -1.5141807794570923
    4. 'return' → logprob: -2.1391806602478027
    5. 'if' → logprob: -3.3891806602478027
    6. ' for' → logprob: -3.7641806602478027
    7. '#' → logprob: -4.014180660247803
    8. ' ps' → logprob: -4.014180660247803
    9. 'ps' → logprob: -4.139180660247803
    10. 'for' → logprob: -5.389180660247803

Token 1160: ' polygon' (ID: 65081)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5652762651443481
    2. 'return' → logprob: -2.0652761459350586
    3. ' ps' → logprob: -2.4402761459350586
    4. '       ' → logprob: -2.6902761459350586
    5. ' for' → logprob: -2.9402761459350586
    6. '#' → logprob: -3.1902761459350586
    7. 'ps' → logprob: -3.8152761459350586
    8. ' #' → logprob: -4.940276145935059
    9. ' if' → logprob: -5.190276145935059
    10. '   ' → logprob: -5.190276145935059

Token 1161: '_subset' (ID: 162934)
  Prédit: '_subset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_subset' → logprob: -0.07353273034095764
    2. 'subset' → logprob: -2.823532819747925
    3. '_indices' → logprob: -5.323532581329346
    4. 'indices' → logprob: -6.198532581329346
    5. '_sorted' → logprob: -6.698532581329346
    6. '_vertices' → logprob: -7.198532581329346
    7. ' =' → logprob: -7.698532581329346
    8. '   ' → logprob: -8.073533058166504
    9. 'points' → logprob: -8.198533058166504
    10. '_points' → logprob: -8.198533058166504

Token 1162: ' must' (ID: 2804)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31700146198272705
    2. ' =' → logprob: -1.442001461982727
    3. ' is' → logprob: -4.0670013427734375
    4. '.sort' → logprob: -4.9420013427734375
    5. ')' → logprob: -6.1920013427734375
    6. ':' → logprob: -6.4420013427734375
    7. '_sorted' → logprob: -6.4420013427734375
    8. '.' → logprob: -7.0670013427734375
    9. '=list' → logprob: -7.0670013427734375
    10. 'is' → logprob: -7.3170013427734375

Token 1163: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.2271277755498886
    2. ' be' → logprob: -1.8521277904510498
    3. '=' → logprob: -4.227127552032471
    4. 'sorted' → logprob: -4.352127552032471
    5. 'len' → logprob: -5.977127552032471
    6. 'return' → logprob: -5.977127552032471
    7. 'continue' → logprob: -6.227127552032471
    8. 'ps' → logprob: -6.477127552032471
    9. 'raise' → logprob: -6.602127552032471
    10. 'not' → logprob: -6.727127552032471

Token 1164: ' a' (ID: 261)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.4844352602958679
    2. 'list' → logprob: -0.9844352602958679
    3. 'a' → logprob: -4.609435081481934
    4. ' list' → logprob: -8.984435081481934
    5. ' sorted' → logprob: -9.484435081481934
    6. 'ordered' → logprob: -9.859435081481934
    7. 'set' → logprob: -10.609435081481934
    8. '   ' → logprob: -10.984435081481934
    9. '[list' → logprob: -11.484435081481934
    10. 'len' → logprob: -11.609435081481934

Token 1165: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.039612699300050735
    2. 'sorted' → logprob: -3.9146127700805664
    3. 'List' → logprob: -4.164612770080566
    4. ' list' → logprob: -5.789612770080566
    5. 'ordered' → logprob: -9.164612770080566
    6. 'set' → logprob: -10.039612770080566
    7. 'complete' → logprob: -10.289612770080566
    8. ' sorted' → logprob: -10.664612770080566
    9. '```' → logprob: -11.164612770080566
    10. ' List' → logprob: -11.539612770080566

Token 1166: ' in' (ID: 306)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9922892451286316
    2. ',' → logprob: -1.1172893047332764
    3. '[' → logprob: -2.1172893047332764
    4. '(p' → logprob: -3.4922893047332764
    5. '(ps' → logprob: -3.6172893047332764
    6. '[p' → logprob: -3.8672893047332764
    7. ')' → logprob: -3.9922893047332764
    8. '<|end|>' → logprob: -3.9922893047332764
    9. '.' → logprob: -4.367289066314697
    10. ':
' → logprob: -4.617289066314697

Token 1167: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.12667712569236755
    2. 'the' → logprob: -2.6266770362854004
    3. 'polygon' → logprob: -3.8766770362854004
    4. 'sorted' → logprob: -5.0016770362854
    5. 'in' → logprob: -5.3766770362854
    6. 'sequence' → logprob: -5.8766770362854
    7. 'counter' → logprob: -6.8766770362854
    8. ' order' → logprob: -7.0016770362854
    9. 'ordered' → logprob: -7.0016770362854
    10. 'cc' → logprob: -7.0016770362854

Token 1168: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7112472057342529
    2. '       ' → logprob: -1.836247205734253
    3. ',' → logprob: -2.336247205734253
    4. '[' → logprob: -2.586247205734253
    5. ':
' → logprob: -3.086247205734253
    6. '<|end|>' → logprob: -3.461247205734253
    7. '   ' → logprob: -3.961247205734253
    8. ')' → logprob: -4.336247444152832
    9. '):' → logprob: -4.711247444152832
    10. '.' → logprob: -4.961247444152832

Token 1169: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7911041378974915
    2. ':' → logprob: -1.0411040782928467
    3. ':
' → logprob: -2.4161040782928467
    4. '   ' → logprob: -3.6661040782928467
    5. '[' → logprob: -3.9161040782928467
    6. ',' → logprob: -3.9161040782928467
    7. '[
' → logprob: -4.666104316711426
    8. '):
' → logprob: -4.791104316711426
    9. '):' → logprob: -4.916104316711426
    10. ')' → logprob: -5.416104316711426

Token 1170: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11973113566637039
    2. ':' → logprob: -3.1197311878204346
    3. ' if' → logprob: -3.4947311878204346
    4. '[' → logprob: -5.1197309494018555
    5. ':
' → logprob: -5.1197309494018555
    6. ',' → logprob: -5.2447309494018555
    7. ')' → logprob: -6.4947309494018555
    8. '(' → logprob: -6.6197309494018555
    9. '):
' → logprob: -6.6197309494018555
    10. '):' → logprob: -6.6197309494018555

Token 1171: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06677322089672089
    2. ' if' → logprob: -3.8167731761932373
    3. 'return' → logprob: -4.191773414611816
    4. 'if' → logprob: -4.191773414611816
    5. 'def' → logprob: -5.066773414611816
    6. '   ' → logprob: -6.316773414611816
    7. 'for' → logprob: -6.441773414611816
    8. ' return' → logprob: -6.691773414611816
    9. ' for' → logprob: -7.691773414611816
    10. 'n' → logprob: -8.566773414611816

Token 1172: ' will' (ID: 738)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.45591267943382263
    2. 'ps' → logprob: -2.8309125900268555
    3. '#' → logprob: -3.2059125900268555
    4. ' ps' → logprob: -3.2059125900268555
    5. 'for' → logprob: -3.5809125900268555
    6. '
' → logprob: -3.8309125900268555
    7. ' def' → logprob: -3.8309125900268555
    8. ' for' → logprob: -3.9559125900268555
    9. 'if' → logprob: -3.9559125900268555
    10. 'polygon' → logprob: -4.0809125900268555

Token 1173: ' receive' (ID: 6442)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6100844740867615
    2. ' return' → logprob: -1.3600845336914062
    3. 'continue' → logprob: -2.4850845336914062
    4. ' continue' → logprob: -3.2350845336914062
    5. 'pass' → logprob: -4.235084533691406
    6. ' pass' → logprob: -4.610084533691406
    7. '   ' → logprob: -4.985084533691406
    8. 'replace' → logprob: -4.985084533691406
    9. ' assume' → logprob: -4.985084533691406
    10. ' raise' → logprob: -5.110084533691406

Token 1174: ' ordered' (ID: 17889)
  Prédit: 'ps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ps' → logprob: -0.07749643176794052
    2. 'polygon' → logprob: -2.8274965286254883
    3. ' ps' → logprob: -5.202496528625488
    4. ' polygon' → logprob: -5.702496528625488
    5. '(ps' → logprob: -5.952496528625488
    6. 'def' → logprob: -7.327496528625488
    7. '   ' → logprob: -7.452496528625488
    8. 'List' → logprob: -7.577496528625488
    9. 'Set' → logprob: -8.327496528625488
    10. 'a' → logprob: -8.827496528625488

Token 1175: ' polygon' (ID: 65081)
  Prédit: 'ps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ps' → logprob: -1.2642000913619995
    2. 'polygon' → logprob: -1.3892000913619995
    3. '(ps' → logprob: -1.8892000913619995
    4. 'list' → logprob: -1.8892000913619995
    5. ' polygon' → logprob: -3.639200210571289
    6. ' list' → logprob: -3.639200210571289
    7. ']' → logprob: -3.889200210571289
    8. ')' → logprob: -4.139200210571289
    9. '_list' → logprob: -4.639200210571289
    10. 'points' → logprob: -4.764200210571289

Token 1176: ' indices' (ID: 30378)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6049724817276001
    2. ':' → logprob: -1.6049724817276
    3. '   ' → logprob: -2.3549723625183105
    4. ')' → logprob: -2.9799723625183105
    5. '(p' → logprob: -3.3549723625183105
    6. '       ' → logprob: -3.8549723625183105
    7. '):' → logprob: -4.4799723625183105
    8. 'def' → logprob: -4.7299723625183105
    9. '[' → logprob: -5.1049723625183105
    10. ']' → logprob: -5.3549723625183105

Token 1177: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.999496340751648
    2. ':' → logprob: -1.249496340751648
    3. '       ' → logprob: -1.374496340751648
    4. ',' → logprob: -3.4994964599609375
    5. '):' → logprob: -3.8744964599609375
    6. ')' → logprob: -4.1244964599609375
    7. ':
' → logprob: -4.9994964599609375
    8. '[' → logprob: -5.2494964599609375
    9. 'def' → logprob: -5.4994964599609375
    10. '(' → logprob: -6.6244964599609375

Token 1178: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4778262674808502
    2. '       ' → logprob: -1.4778262376785278
    3. '   ' → logprob: -2.6028263568878174
    4. '):' → logprob: -3.6028263568878174
    5. ',' → logprob: -3.8528263568878174
    6. ')' → logprob: -4.352826118469238
    7. '[' → logprob: -5.352826118469238
    8. 'def' → logprob: -5.477826118469238
    9. '(' → logprob: -6.602826118469238
    10. '    ' → logprob: -7.477826118469238

Token 1179: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24690233170986176
    2. ' for' → logprob: -1.746902346611023
    3. '       ' → logprob: -3.3719022274017334
    4. '   ' → logprob: -5.9969024658203125
    5. 'i' → logprob: -6.2469024658203125
    6. 'if' → logprob: -6.3719024658203125
    7. 'def' → logprob: -6.9969024658203125
    8. 'n' → logprob: -6.9969024658203125
    9. 'prev' → logprob: -7.1219024658203125
    10. 'm' → logprob: -7.9969024658203125

Token 1180: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0020847124978899956
    2. 'm' → logprob: -7.502084732055664
    3. 'def' → logprob: -7.627084732055664
    4. '   ' → logprob: -7.627084732055664
    5. ' for' → logprob: -8.627084732055664
    6. 'if' → logprob: -9.002084732055664
    7. 'edges' → logprob: -9.752084732055664
    8. 'n' → logprob: -9.877084732055664
    9. 'prev' → logprob: -10.127084732055664
    10. '       ' → logprob: -10.377084732055664

Token 1181: ' the' (ID: 290)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004128980450332165
    2. ' i' → logprob: -5.504128932952881
    3. '   ' → logprob: -10.879129409790039
    4. '
' → logprob: -12.004129409790039
    5. 'idx' → logprob: -12.004129409790039
    6. 'j' → logprob: -12.129129409790039
    7. ' ' → logprob: -12.504129409790039
    8. 'edge' → logprob: -12.754129409790039
    9. '(i' → logprob: -13.504129409790039
    10. '```' → logprob: -14.004129409790039

Token 1182: ' polygon' (ID: 65081)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006308307871222496
    2. ' i' → logprob: -5.381308078765869
    3. 'ps' → logprob: -7.381308078765869
    4. 'j' → logprob: -8.256308555603027
    5. 'in' → logprob: -8.881308555603027
    6. 'polygon' → logprob: -9.006308555603027
    7. 'p' → logprob: -9.131308555603027
    8. ' in' → logprob: -9.756308555603027
    9. 'idx' → logprob: -10.006308555603027
    10. '   ' → logprob: -10.131308555603027

Token 1183: ' edges' (ID: 22569)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.4861396551132202
    2. 'def' → logprob: -1.7361396551132202
    3. 'indices' → logprob: -1.8611396551132202
    4. ' for' → logprob: -2.2361397743225098
    5. 'subset' → logprob: -2.9861397743225098
    6. '   ' → logprob: -3.2361397743225098
    7. ' is' → logprob: -3.9861397743225098
    8. 'n' → logprob: -3.9861397743225098
    9. 'i' → logprob: -4.23613977432251
    10. 'vertices' → logprob: -4.48613977432251

Token 1184: ' defined' (ID: 9113)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38815316557884216
    2. 'for' → logprob: -1.1381531953811646
    3. '       ' → logprob: -6.763153076171875
    4. '   ' → logprob: -9.763153076171875
    5. 'n' → logprob: -10.388153076171875
    6. 'm' → logprob: -11.013153076171875
    7. 'i' → logprob: -11.888153076171875
    8. ' n' → logprob: -12.263153076171875
    9. ' i' → logprob: -12.763153076171875
    10. '
' → logprob: -13.013153076171875

Token 1185: ' by' (ID: 656)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8998826146125793
    2. ' for' → logprob: -1.7748825550079346
    3. 'in' → logprob: -2.0248825550079346
    4. '       ' → logprob: -2.1498825550079346
    5. 'i' → logprob: -2.3998825550079346
    6. ' in' → logprob: -3.1498825550079346
    7. 'range' → logprob: -4.149882793426514
    8. '   ' → logprob: -4.774882793426514
    9. ' i' → logprob: -5.024882793426514
    10. ',' → logprob: -5.524882793426514

Token 1186: ' consecutive' (ID: 40840)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014942311681807041
    2. 'i' → logprob: -4.639942169189453
    3. 'for' → logprob: -5.639942169189453
    4. ' range' → logprob: -7.264942169189453
    5. 'enumer' → logprob: -8.139942169189453
    6. '   ' → logprob: -9.014942169189453
    7. 'ps' → logprob: -9.014942169189453
    8. '(i' → logprob: -9.639942169189453
    9. '(range' → logprob: -9.764942169189453
    10. '
' → logprob: -10.139942169189453

Token 1187: ' polygon' (ID: 65081)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1951659917831421
    2. 'ps' → logprob: -2.8201661109924316
    3. 'range' → logprob: -3.3201661109924316
    4. 'polygon' → logprob: -3.8201661109924316
    5. 'indices' → logprob: -4.445166110992432
    6. ' i' → logprob: -4.570166110992432
    7. '(i' → logprob: -4.570166110992432
    8. ' polygon' → logprob: -5.320166110992432
    9. 'vertices' → logprob: -5.320166110992432
    10. '(ps' → logprob: -5.695166110992432

Token 1188: ' vertices' (ID: 38360)
  Prédit: 'ps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ps' → logprob: -0.9471657872200012
    2. 'indices' → logprob: -1.5721657276153564
    3. 'for' → logprob: -1.6971657276153564
    4. ' for' → logprob: -2.5721657276153564
    5. 'i' → logprob: -2.6971657276153564
    6. 'vertices' → logprob: -3.4471657276153564
    7. ' indices' → logprob: -4.1971659660339355
    8. ' i' → logprob: -5.3221659660339355
    9. 'points' → logprob: -5.5721659660339355
    10. ' ps' → logprob: -5.6971659660339355

Token 1189: ' in' (ID: 306)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.509171724319458
    2. 'for' → logprob: -1.009171724319458
    3. '       ' → logprob: -3.384171724319458
    4. ',' → logprob: -8.384171485900879
    5. '   ' → logprob: -8.884171485900879
    6. ' in' → logprob: -10.384171485900879
    7. 'i' → logprob: -10.384171485900879
    8. ' and' → logprob: -10.634171485900879
    9. 'n' → logprob: -10.884171485900879
    10. ' i' → logprob: -11.009171485900879

Token 1190: ' polygon' (ID: 65081)
  Prédit: 'ps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ps' → logprob: -0.0620521642267704
    2. 'range' → logprob: -3.0620522499084473
    3. 'polygon' → logprob: -4.437052249908447
    4. 'the' → logprob: -6.937052249908447
    5. ' ps' → logprob: -8.812051773071289
    6. ' range' → logprob: -9.437051773071289
    7. 'for' → logprob: -9.812051773071289
    8. 'pol' → logprob: -9.937051773071289
    9. '[' → logprob: -10.187051773071289
    10. '   ' → logprob: -10.312051773071289

Token 1191: '_subset' (ID: 162934)
  Prédit: '_subset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_subset' → logprob: -0.1280640810728073
    2. 'subset' → logprob: -3.0030641555786133
    3. 'ps' → logprob: -3.1280641555786133
    4. ')' → logprob: -4.878064155578613
    5. 'range' → logprob: -5.503064155578613
    6. '_ps' → logprob: -6.378064155578613
    7. '
' → logprob: -6.503064155578613
    8. ' ps' → logprob: -6.503064155578613
    9. 's' → logprob: -6.878064155578613
    10. '_indices' → logprob: -7.003064155578613

Token 1192: ',
' (ID: 412)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5399423241615295
    2. ' for' → logprob: -0.9149423241615295
    3. '       ' → logprob: -4.289942264556885
    4. ',' → logprob: -6.539942264556885
    5. ':' → logprob: -7.789942264556885
    6. '   ' → logprob: -8.164942741394043
    7. ')' → logprob: -8.914942741394043
    8. ' and' → logprob: -9.039942741394043
    9. '
' → logprob: -9.414942741394043
    10. '):' → logprob: -9.664942741394043

Token 1193: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3804362416267395
    2. '       ' → logprob: -1.6304361820220947
    3. 'for' → logprob: -2.1304361820220947
    4. 'def' → logprob: -7.255436420440674
    5. 'n' → logprob: -7.630436420440674
    6. '   ' → logprob: -8.880435943603516
    7. ' n' → logprob: -9.005435943603516
    8. 'i' → logprob: -9.005435943603516
    9. ' i' → logprob: -9.130435943603516
    10. '	for' → logprob: -11.255435943603516

Token 1194: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6937403082847595
    2. 'for' → logprob: -0.6937403082847595
    3. 'i' → logprob: -8.193739891052246
    4. ' i' → logprob: -8.193739891052246
    5. '       ' → logprob: -10.443739891052246
    6. 'range' → logprob: -12.693739891052246
    7. ' range' → logprob: -13.193739891052246
    8. '   ' → logprob: -13.318739891052246
    9. ' n' → logprob: -13.943739891052246
    10. 'n' → logprob: -13.943739891052246

Token 1195: ' check' (ID: 2371)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023953264579176903
    2. ' for' → logprob: -3.8989531993865967
    3. '       ' → logprob: -5.773953437805176
    4. '   ' → logprob: -8.648953437805176
    5. 'm' → logprob: -9.398953437805176
    6. 'def' → logprob: -11.148953437805176
    7. 'n' → logprob: -12.523953437805176
    8. 'prev' → logprob: -12.648953437805176
    9. 'return' → logprob: -13.023953437805176
    10. 'i' → logprob: -13.398953437805176

Token 1196: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05526091530919075
    2. 'all' → logprob: -3.3052608966827393
    3. '   ' → logprob: -5.180261135101318
    4. ' for' → logprob: -5.555261135101318
    5. '       ' → logprob: -5.805261135101318
    6. 'i' → logprob: -5.805261135101318
    7. ' all' → logprob: -6.930261135101318
    8. 'any' → logprob: -8.93026065826416
    9. 'len' → logprob: -8.93026065826416
    10. 'if' → logprob: -9.18026065826416

Token 1197: ' each' (ID: 2454)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.2590056359767914
    2. 'any' → logprob: -1.6340056657791138
    3. '(all' → logprob: -5.009005546569824
    4. 'edges' → logprob: -5.009005546569824
    5. '(any' → logprob: -5.759005546569824
    6. '(ps' → logprob: -6.009005546569824
    7. ' all' → logprob: -6.134005546569824
    8. 'for' → logprob: -6.134005546569824
    9. '(' → logprob: -6.509005546569824
    10. ' any' → logprob: -6.634005546569824

Token 1198: ' edge' (ID: 11165)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.29340311884880066
    2. '(ps' → logprob: -2.668403148651123
    3. '(i' → logprob: -3.043403148651123
    4. '(' → logprob: -3.043403148651123
    5. 'edges' → logprob: -3.668403148651123
    6. 'ps' → logprob: -3.668403148651123
    7. ' i' → logprob: -4.543403148651123
    8. '(p' → logprob: -5.168403148651123
    9. 'polygon' → logprob: -5.418403148651123
    10. ' (' → logprob: -5.668403148651123

Token 1199: ' exists' (ID: 13031)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6276740431785583
    2. 'in' → logprob: -1.0026741027832031
    3. 'exists' → logprob: -3.502674102783203
    4. ' (' → logprob: -4.252674102783203
    5. 'is' → logprob: -4.502674102783203
    6. ' is' → logprob: -4.627674102783203
    7. ' exists' → logprob: -4.877674102783203
    8. 'i' → logprob: -5.377674102783203
    9. '(' → logprob: -5.752674102783203
    10. '(p' → logprob: -5.877674102783203

Token 1200: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6830093264579773
    2. 'in' → logprob: -1.308009386062622
    3. 'for' → logprob: -1.933009386062622
    4. ' in' → logprob: -3.183009386062622
    5. ' for' → logprob: -3.433009386062622
    6. '(i' → logprob: -6.933009147644043
    7. '   ' → logprob: -7.058009147644043
    8. ' i' → logprob: -7.183009147644043
    9. 'i' → logprob: -7.183009147644043
    10. ',' → logprob: -7.433009147644043

Token 1201: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.02350238710641861
    2. ' edges' → logprob: -3.7735023498535156
    3. '   ' → logprob: -9.148502349853516
    4. 'edge' → logprob: -10.148502349853516
    5. '       ' → logprob: -10.773502349853516
    6. 'set' → logprob: -10.898502349853516
    7. '{' → logprob: -11.023502349853516
    8. '[' → logprob: -11.523502349853516
    9. '```' → logprob: -11.898502349853516
    10. '``' → logprob: -12.148502349853516

Token 1202: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029217300470918417
    2. ' for' → logprob: -6.5029215812683105
    3. 'for' → logprob: -7.7529215812683105
    4. ',' → logprob: -8.002922058105469
    5. ':' → logprob: -8.627922058105469
    6. '   ' → logprob: -8.877922058105469
    7. '
' → logprob: -9.627922058105469
    8. '.' → logprob: -10.002922058105469
    9. ')' → logprob: -10.252922058105469
    10. '<|end|>' → logprob: -10.502922058105469

Token 1203: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006950980518013239
    2. ' for' → logprob: -5.631950855255127
    3. 'for' → logprob: -5.881950855255127
    4. '   ' → logprob: -7.756950855255127
    5. 'n' → logprob: -10.381951332092285
    6. '```' → logprob: -10.631951332092285
    7. '
' → logprob: -11.006951332092285
    8. '           ' → logprob: -11.506951332092285
    9. 'i' → logprob: -11.631951332092285
    10. 'def' → logprob: -11.756951332092285

Token 1204: ' edge' (ID: 11165)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6716209053993225
    2. '       ' → logprob: -1.2966208457946777
    3. 'for' → logprob: -1.5466208457946777
    4. '   ' → logprob: -6.921620845794678
    5. 'n' → logprob: -7.296620845794678
    6. ' i' → logprob: -8.296621322631836
    7. '```' → logprob: -8.546621322631836
    8. 'i' → logprob: -8.921621322631836
    9. '           ' → logprob: -9.546621322631836
    10. '``' → logprob: -9.796621322631836

Token 1205: '_set' (ID: 5451)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3740066587924957
    2. '_set' → logprob: -1.2490066289901733
    3. '_keys' → logprob: -4.499006748199463
    4. '_indices' → logprob: -5.499006748199463
    5. 'set' → logprob: -5.749006748199463
    6. '_map' → logprob: -6.374006748199463
    7. '_s' → logprob: -6.999006748199463
    8. '_exists' → logprob: -6.999006748199463
    9. '   ' → logprob: -7.374006748199463
    10. '_list' → logprob: -7.499006748199463

Token 1206: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02634221501648426
    2. '=' → logprob: -3.6513421535491943
    3. ':' → logprob: -10.401342391967773
    4. ' =
' → logprob: -12.651342391967773
    5. 's' → logprob: -13.151342391967773
    6. ',' → logprob: -13.651342391967773
    7. ')' → logprob: -14.276342391967773
    8. '_edges' → logprob: -14.276342391967773
    9. 'edges' → logprob: -14.526342391967773
    10. '   ' → logprob: -14.526342391967773

Token 1207: ' {(' (ID: 75216)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.0625070333480835
    2. 'set' → logprob: -2.812507152557373
    3. ' {(' → logprob: -7.562507152557373
    4. ' set' → logprob: -11.187506675720215
    5. '{
' → logprob: -12.312506675720215
    6. '   ' → logprob: -14.437506675720215
    7. ' {' → logprob: -14.562506675720215
    8. '{s' → logprob: -16.43750762939453
    9. '(set' → logprob: -16.68750762939453
    10. '       ' → logprob: -16.93750762939453

Token 1208: 'min' (ID: 1493)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.13706539571285248
    2. 'edge' → logprob: -2.5120654106140137
    3. 'min' → logprob: -3.1370654106140137
    4. '(e' → logprob: -6.262065410614014
    5. '(edge' → logprob: -7.637065410614014
    6. ' e' → logprob: -8.137064933776855
    7. '(min' → logprob: -8.137064933776855
    8. '   ' → logprob: -8.387064933776855
    9. ' min' → logprob: -8.762064933776855
    10. ' edge' → logprob: -9.762064933776855

Token 1209: '(e' (ID: 3454)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7356522679328918
    2. '(e' → logprob: -0.7356522679328918
    3. '(u' → logprob: -4.360652446746826
    4. 'edge' → logprob: -4.360652446746826
    5. '(edge' → logprob: -4.360652446746826
    6. 'u' → logprob: -6.860652446746826
    7. 'a' → logprob: -7.360652446746826
    8. '(a' → logprob: -7.485652446746826
    9. '(p' → logprob: -7.985652446746826
    10. '```' → logprob: -9.110651969909668

Token 1210: '.u' (ID: 22262)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.017757348716259003
    2. 'u' → logprob: -5.017757415771484
    3. '.u' → logprob: -5.517757415771484
    4. '(e' → logprob: -5.892757415771484
    5. '.e' → logprob: -6.142757415771484
    6. '(u' → logprob: -6.767757415771484
    7. 'edge' → logprob: -7.642757415771484
    8. 'self' → logprob: -8.892757415771484
    9. 'a' → logprob: -9.142757415771484
    10. ')' → logprob: -9.892757415771484

Token 1211: ',e' (ID: 43127)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.11094020307064056
    2. ',e' → logprob: -2.6109402179718018
    3. ',' → logprob: -3.4859402179718018
    4. '(e' → logprob: -7.235939979553223
    5. '),' → logprob: -9.610939979553223
    6. ',
' → logprob: -10.610939979553223
    7. ')' → logprob: -10.735939979553223
    8. ' e' → logprob: -10.735939979553223
    9. ')e' → logprob: -11.360939979553223
    10. '[e' → logprob: -11.485939979553223

Token 1212: '.v' (ID: 5520)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1641806960105896
    2. 'v' → logprob: -1.9141807556152344
    3. ',' → logprob: -6.289180755615234
    4. 'u' → logprob: -7.789180755615234
    5. ',v' → logprob: -7.914180755615234
    6. ' e' → logprob: -8.289180755615234
    7. ',e' → logprob: -8.789180755615234
    8. '           ' → logprob: -8.914180755615234
    9. '<|end|>' → logprob: -9.414180755615234
    10. '(e' → logprob: -9.539180755615234

Token 1213: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0017665742198005319
    2. ',' → logprob: -6.376766681671143
    3. ' ),' → logprob: -11.126766204833984
    4. ',e' → logprob: -11.126766204833984
    5. ',),' → logprob: -11.376766204833984
    6. '),(' → logprob: -12.001766204833984
    7. 'e' → logprob: -12.126766204833984
    8. '),
' → logprob: -12.626766204833984
    9. '           ' → logprob: -13.376766204833984
    10. '       ' → logprob: -13.626766204833984

Token 1214: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0019287518225610256
    2. ' max' → logprob: -6.251928806304932
    3. '(max' → logprob: -16.376928329467773
    4. '   ' → logprob: -18.251928329467773
    5. ' ' → logprob: -18.501928329467773
    6. ',max' → logprob: -19.126928329467773
    7. 'min' → logprob: -19.251928329467773
    8. '	max' → logprob: -19.376928329467773
    9. '[max' → logprob: -19.376928329467773
    10. '    ' → logprob: -19.501928329467773

Token 1215: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -1.843177233240567e-05
    2. 'e' → logprob: -11.000018119812012
    3. ' (' → logprob: -14.500018119812012
    4. '(' → logprob: -15.000018119812012
    5. '((' → logprob: -15.625018119812012
    6. '   ' → logprob: -15.625018119812012
    7. '[e' → logprob: -15.875018119812012
    8. ')e' → logprob: -16.375019073486328
    9. ')' → logprob: -16.625019073486328
    10. ' e' → logprob: -17.000019073486328

Token 1216: '.u' (ID: 22262)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.023326653987169266
    2. 'e' → logprob: -3.7733266353607178
    3. '[e' → logprob: -10.398326873779297
    4. ')e' → logprob: -11.273326873779297
    5. '(u' → logprob: -11.523326873779297
    6. '.e' → logprob: -11.523326873779297
    7. '(' → logprob: -12.148326873779297
    8. ',e' → logprob: -13.148326873779297
    9. ')' → logprob: -13.523326873779297
    10. '=e' → logprob: -13.523326873779297

Token 1217: ',e' (ID: 43127)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3762315511703491
    2. '(e' → logprob: -2.0012316703796387
    3. ',e' → logprob: -2.2512316703796387
    4. '.e' → logprob: -2.6262316703796387
    5. '[e' → logprob: -8.75123119354248
    6. ',v' → logprob: -9.62623119354248
    7. ')e' → logprob: -9.62623119354248
    8. 'v' → logprob: -9.62623119354248
    9. '),' → logprob: -9.75123119354248
    10. ' e' → logprob: -9.75123119354248

Token 1218: '.v' (ID: 5520)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3140459954738617
    2. '.v' → logprob: -1.314046025276184
    3. ',v' → logprob: -7.8140459060668945
    4. 'e' → logprob: -8.439045906066895
    5. '(v' → logprob: -10.189045906066895
    6. '   ' → logprob: -11.064045906066895
    7. ' v' → logprob: -11.064045906066895
    8. '_v' → logprob: -11.564045906066895
    9. '	v' → logprob: -11.689045906066895
    10. ' ' → logprob: -11.689045906066895

Token 1219: '))' (ID: 915)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.23170186579227448
    2. '))' → logprob: -1.6067018508911133
    3. ')):' → logprob: -5.606701850891113
    4. ')' → logprob: -6.606701850891113
    5. ')),' → logprob: -7.481701850891113
    6. '))}
' → logprob: -8.356701850891113
    7. ')}' → logprob: -9.356701850891113
    8. ' ),' → logprob: -9.856701850891113
    9. 'e' → logprob: -9.856701850891113
    10. '(e' → logprob: -10.106701850891113

Token 1220: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.048797763884067535
    2. 'for' → logprob: -3.048797845840454
    3. ')' → logprob: -9.048797607421875
    4. '       ' → logprob: -10.923797607421875
    5. '        ' → logprob: -11.048797607421875
    6. '}' → logprob: -11.173797607421875
    7. ' in' → logprob: -11.548797607421875
    8. ',' → logprob: -12.048797607421875
    9. '           ' → logprob: -12.298797607421875
    10. ':' → logprob: -12.548797607421875

Token 1221: ' e' (ID: 319)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.017628053203225136
    2. ' edges' → logprob: -4.142628192901611
    3. 'e' → logprob: -6.517628192901611
    4. 'edge' → logprob: -9.642627716064453
    5. ' e' → logprob: -10.642627716064453
    6. '   ' → logprob: -11.392627716064453
    7. '(edges' → logprob: -12.267627716064453
    8. '       ' → logprob: -12.642627716064453
    9. 'ed' → logprob: -13.267627716064453
    10. '           ' → logprob: -13.642627716064453

Token 1222: ' in' (ID: 306)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.20164448022842407
    2. ' edges' → logprob: -1.7016444206237793
    3. '(edges' → logprob: -8.701644897460938
    4. 'e' → logprob: -10.701644897460938
    5. ' in' → logprob: -10.701644897460938
    6. 'edge' → logprob: -12.326644897460938
    7. ' e' → logprob: -12.701644897460938
    8. 'in' → logprob: -12.826644897460938
    9. '.edges' → logprob: -13.326644897460938
    10. '_edges' → logprob: -13.701644897460938

Token 1223: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.005239087622612715
    2. ' edges' → logprob: -5.255239009857178
    3. '(edges' → logprob: -13.505239486694336
    4. '   ' → logprob: -13.630239486694336
    5. 'edge' → logprob: -13.755239486694336
    6. '.edges' → logprob: -15.005239486694336
    7. '
' → logprob: -15.130239486694336
    8. '[' → logprob: -15.380239486694336
    9. ' ' → logprob: -15.880239486694336
    10. '       ' → logprob: -16.005239486694336

Token 1224: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.03068998083472252
    2. '       ' → logprob: -3.5306899547576904
    3. ')' → logprob: -7.7806901931762695
    4. '}
' → logprob: -8.15569019317627
    5. ' }' → logprob: -9.03069019317627
    6. ',' → logprob: -9.28069019317627
    7. ')}' → logprob: -11.90569019317627
    8. '<|end|>' → logprob: -12.53069019317627
    9. '   ' → logprob: -12.65569019317627
    10. '        ' → logprob: -13.53069019317627

Token 1225: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00294465571641922
    2. '<|end|>' → logprob: -6.627944469451904
    3. ' for' → logprob: -7.127944469451904
    4. ',' → logprob: -8.752944946289062
    5. '   ' → logprob: -8.877944946289062
    6. '	' → logprob: -9.127944946289062
    7. 'for' → logprob: -9.377944946289062
    8. '	for' → logprob: -9.877944946289062
    9. '        
' → logprob: -10.002944946289062
    10. ')' → logprob: -10.002944946289062

Token 1226: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3490977883338928
    2. '       ' → logprob: -1.349097728729248
    3. ' for' → logprob: -3.349097728729248
    4. '   ' → logprob: -9.474098205566406
    5. '	for' → logprob: -12.974098205566406
    6. '```' → logprob: -12.974098205566406
    7. '           ' → logprob: -13.724098205566406
    8. 'n' → logprob: -13.849098205566406
    9. '
' → logprob: -14.349098205566406
    10. ' ' → logprob: -14.724098205566406

Token 1227: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.007816827856004238
    2. ' i' → logprob: -4.882816791534424
    3. 'idx' → logprob: -8.632817268371582
    4. ' idx' → logprob: -11.507817268371582
    5. '   ' → logprob: -11.757817268371582
    6. '_i' → logprob: -12.007817268371582
    7. 'k' → logprob: -12.757817268371582
    8. 'index' → logprob: -13.132817268371582
    9. '	i' → logprob: -13.507817268371582
    10. ' ' → logprob: -14.257817268371582

Token 1228: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02976587973535061
    2. 'in' → logprob: -3.5297658443450928
    3. ' ' → logprob: -12.154766082763672
    4. ',' → logprob: -12.529766082763672
    5. '	in' → logprob: -13.029766082763672
    6. ' i' → logprob: -14.154766082763672
    7. '   ' → logprob: -14.279766082763672
    8. '+' → logprob: -14.404766082763672
    9. '0' → logprob: -14.654766082763672
    10. 'range' → logprob: -15.279766082763672

Token 1229: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.000158842682139948
    2. ' range' → logprob: -8.75015926361084
    3. '   ' → logprob: -15.12515926361084
    4. ' ' → logprob: -15.87515926361084
    5. '  ' → logprob: -17.625158309936523
    6. '(range' → logprob: -18.625158309936523
    7. '	range' → logprob: -18.875158309936523
    8. '
' → logprob: -19.125158309936523
    9. '    ' → logprob: -19.500158309936523
    10. '```' → logprob: -20.000158309936523

Token 1230: '(len' (ID: 14990)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.028847986832261086
    2. '(len' → logprob: -4.278848171234131
    3. 'n' → logprob: -4.778848171234131
    4. ' len' → logprob: -5.153848171234131
    5. ' n' → logprob: -8.278847694396973
    6. '   ' → logprob: -9.278847694396973
    7. '(n' → logprob: -10.653847694396973
    8. '	len' → logprob: -12.403847694396973
    9. '1' → logprob: -12.528847694396973
    10. ' (' → logprob: -12.653847694396973

Token 1231: '(ps' (ID: 72187)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.7368287444114685
    2. '(ps' → logprob: -0.7368287444114685
    3. 'ps' → logprob: -3.6118288040161133
    4. 'polygon' → logprob: -4.236828804016113
    5. '(pol' → logprob: -7.111828804016113
    6. 'p' → logprob: -8.611828804016113
    7. ' polygon' → logprob: -8.736828804016113
    8. 'pol' → logprob: -9.486828804016113
    9. '(poly' → logprob: -10.736828804016113
    10. ' ps' → logprob: -10.986828804016113

Token 1232: ')):
' (ID: 22530)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0389138460159302
    2. '-' → logprob: -1.1639138460159302
    3. ' -' → logprob: -1.1639138460159302
    4. '):
' → logprob: -5.288913726806641
    5. '):' → logprob: -5.538913726806641
    6. ' )' → logprob: -5.538913726806641
    7. ')-' → logprob: -6.038913726806641
    8. ' ' → logprob: -6.038913726806641
    9. '   ' → logprob: -6.663913726806641
    10. ')]' → logprob: -6.913913726806641

Token 1233: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006348780007101595
    2. ' if' → logprob: -8.250635147094727
    3. '   ' → logprob: -9.125635147094727
    4. '	       ' → logprob: -10.125635147094727
    5. ' next' → logprob: -10.375635147094727
    6. 'a' → logprob: -10.625635147094727
    7. ' u' → logprob: -10.625635147094727
    8. '```' → logprob: -11.000635147094727
    9. '       ' → logprob: -11.375635147094727
    10. ',' → logprob: -11.375635147094727

Token 1234: ' a' (ID: 261)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.5331559181213379
    2. 'u' → logprob: -1.408155918121338
    3. 'a' (adapté à ' a') → logprob: -2.033155918121338
    4. ' a' → logprob: -3.658155918121338
    5. '           ' → logprob: -5.283155918121338
    6. '       ' → logprob: -5.908155918121338
    7. 'j' → logprob: -6.658155918121338
    8. 'p' → logprob: -7.283155918121338
    9. ' if' → logprob: -7.783155918121338
    10. ' p' → logprob: -8.15815544128418

Token 1235: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4322004020214081
    2. ' =' → logprob: -1.5572004318237305
    3. '=' → logprob: -2.0572004318237305
    4. ' ,' → logprob: -5.1822004318237305
    5. 'a' → logprob: -6.3072004318237305
    6. 'i' → logprob: -6.8072004318237305
    7. ',i' → logprob: -6.9322004318237305
    8. ' ' → logprob: -7.5572004318237305
    9. '   ' → logprob: -7.6822004318237305
    10. '0' → logprob: -8.18220043182373

Token 1236: ' ps' (ID: 10942)
  Prédit: 'ps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ps' → logprob: -0.0019488678080961108
    2. ' ps' → logprob: -6.251948833465576
    3. '   ' → logprob: -11.376949310302734
    4. '(ps' → logprob: -12.251949310302734
    5. '	ps' → logprob: -14.126949310302734
    6. '  ' → logprob: -14.251949310302734
    7. 'min' → logprob: -14.251949310302734
    8. ' ' → logprob: -14.626949310302734
    9. '    ' → logprob: -14.751949310302734
    10. 'p' → logprob: -15.376949310302734

Token 1237: '[i' (ID: 1768)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20248398184776306
    2. '[i' → logprob: -1.7024840116500854
    3. '(i' → logprob: -7.202484130859375
    4. '           ' → logprob: -8.577484130859375
    5. ' i' → logprob: -8.952484130859375
    6. '[(' → logprob: -12.827484130859375
    7. '   ' → logprob: -13.577484130859375
    8. '[
' → logprob: -14.327484130859375
    9. '               ' → logprob: -14.577484130859375
    10. '       ' → logprob: -14.577484130859375

Token 1238: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.033274825662374496
    2. ']' → logprob: -3.5332748889923096
    3. '],' → logprob: -6.1582746505737305
    4. ']
' → logprob: -6.7832746505737305
    5. '           ' → logprob: -9.28327465057373
    6. ' ]
' → logprob: -10.03327465057373
    7. ')
' → logprob: -10.03327465057373
    8. ']%' → logprob: -10.90827465057373
    9. '])
' → logprob: -11.40827465057373
    10. '       ' → logprob: -11.65827465057373

Token 1239: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19468314945697784
    2. '   ' → logprob: -2.444683074951172
    3. 'b' → logprob: -2.569683074951172
    4. '       ' → logprob: -5.444683074951172
    5. 'a' → logprob: -5.944683074951172
    6. 'ps' → logprob: -6.069683074951172
    7. '(ps' → logprob: -6.819683074951172
    8. '    ' → logprob: -6.944683074951172
    9. ' b' → logprob: -7.444683074951172
    10. ' (' → logprob: -7.944683074951172

Token 1240: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.5551817417144775
    2. 'a' → logprob: -1.0551817417144775
    3. '           ' → logprob: -3.0551817417144775
    4. '   ' → logprob: -4.180181503295898
    5. '       ' → logprob: -4.680181503295898
    6. 'ps' → logprob: -6.430181503295898
    7. 'p' → logprob: -6.680181503295898
    8. '         ' → logprob: -7.305181503295898
    9. '          ' → logprob: -7.430181503295898
    10. 'next' → logprob: -7.555181503295898

Token 1241: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2015320509672165
    2. '=' → logprob: -1.701532006263733
    3. ' ps' → logprob: -9.951532363891602
    4. ' =
' → logprob: -10.951532363891602
    5. ',' → logprob: -11.076532363891602
    6. ' ' → logprob: -11.201532363891602
    7. '=
' → logprob: -11.701532363891602
    8. '<|end|>' → logprob: -12.451532363891602
    9. 'ps' → logprob: -12.951532363891602
    10. ')' → logprob: -13.451532363891602

Token 1242: ' ps' (ID: 10942)
  Prédit: 'ps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ps' → logprob: -0.0005530327325686812
    2. ' ps' → logprob: -7.500553131103516
    3. '	ps' → logprob: -17.000553131103516
    4. ' ' → logprob: -17.875553131103516
    5. '   ' → logprob: -18.500553131103516
    6. '(ps' → logprob: -18.500553131103516
    7. 'p' → logprob: -18.625553131103516
    8. '_ps' → logprob: -19.000553131103516
    9. 'psis' → logprob: -19.375553131103516
    10. 'psc' → logprob: -19.500553131103516

Token 1243: '[(' (ID: 20542)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.000818561646156013
    2. '[i' → logprob: -7.250818729400635
    3. '[(' → logprob: -9.500818252563477
    4. '(ps' → logprob: -10.375818252563477
    5. '{i' → logprob: -13.625818252563477
    6. 'i' → logprob: -14.500818252563477
    7. '   ' → logprob: -15.000818252563477
    8. ' (' → logprob: -15.250818252563477
    9. '(' → logprob: -15.750818252563477
    10. '((' → logprob: -17.125818252563477

Token 1244: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001035191467963159
    2. '(i' → logprob: -6.876035213470459
    3. ' i' → logprob: -13.8760347366333
    4. '{i' → logprob: -14.6260347366333
    5. ' (' → logprob: -14.7510347366333
    6. '```' → logprob: -15.5010347366333
    7. '   ' → logprob: -15.7510347366333
    8. '0' → logprob: -17.126035690307617
    9. '[i' → logprob: -17.501035690307617
    10. '`' → logprob: -17.626035690307617

Token 1245: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004253388848155737
    2. ' +' → logprob: -6.004253387451172
    3. '1' → logprob: -6.754253387451172
    4. '+i' → logprob: -8.129253387451172
    5. '(i' → logprob: -8.504253387451172
    6. 'i' → logprob: -9.129253387451172
    7. '[i' → logprob: -13.754253387451172
    8. 'a' → logprob: -14.379253387451172
    9. '(' → logprob: -14.754253387451172
    10. '```' → logprob: -15.004253387451172

Token 1246: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.319370302458992e-06
    2. 'i' → logprob: -12.250005722045898
    3. '(i' → logprob: -15.125005722045898
    4. '```' → logprob: -15.125005722045898
    5. ' ' → logprob: -17.0000057220459
    6. '(' → logprob: -17.3750057220459
    7. 'int' → logprob: -18.3750057220459
    8. 'len' → logprob: -18.5000057220459
    9. '+' → logprob: -18.7500057220459
    10. '``' → logprob: -18.8750057220459

Token 1247: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006072656717151403
    2. ')%' → logprob: -5.131072521209717
    3. '%' → logprob: -9.381072998046875
    4. ')
' → logprob: -10.881072998046875
    5. ' )' → logprob: -11.131072998046875
    6. ' %' → logprob: -11.381072998046875
    7. ']' → logprob: -12.006072998046875
    8. ')i' → logprob: -12.506072998046875
    9. '0' → logprob: -14.131072998046875
    10. ' ' → logprob: -14.381072998046875

Token 1248: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3476516902446747
    2. ' %' → logprob: -1.472651720046997
    3. '%i' → logprob: -2.847651720046997
    4. ')%' → logprob: -6.097651481628418
    5. 'i' → logprob: -6.722651481628418
    6. ')' → logprob: -7.472651481628418
    7. ']%' → logprob: -7.472651481628418
    8. ']' → logprob: -7.597651481628418
    9. '%d' → logprob: -8.222651481628418
    10. ' ' → logprob: -8.472651481628418

Token 1249: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.339278580620885e-06
    2. ' len' → logprob: -13.000001907348633
    3. '(len' → logprob: -16.875001907348633
    4. '[len' → logprob: -21.625001907348633
    5. '```' → logprob: -21.875001907348633
    6. '
' → logprob: -22.375001907348633
    7. '	len' → logprob: -22.375001907348633
    8. 'length' → logprob: -22.500001907348633
    9. '<len' → logprob: -22.875001907348633
    10. '   ' → logprob: -23.000001907348633

Token 1250: '(ps' (ID: 72187)
  Prédit: 'ps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ps' → logprob: -0.1604023277759552
    2. '(ps' → logprob: -1.9104022979736328
    3. ' ps' → logprob: -8.660402297973633
    4. '	ps' → logprob: -13.035402297973633
    5. '_ps' → logprob: -13.285402297973633
    6. '.ps' → logprob: -14.535402297973633
    7. 'Ps' → logprob: -15.910402297973633
    8. 'p' → logprob: -15.910402297973633
    9. '(p' → logprob: -16.410402297973633
    10. 'psc' → logprob: -17.285402297973633

Token 1251: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.2826227843761444
    2. ')]
' → logprob: -1.4076228141784668
    3. ')]
' → logprob: -7.782622814178467
    4. ']' → logprob: -8.032622337341309
    5. ')' → logprob: -8.157622337341309
    6. '       ' → logprob: -8.282622337341309
    7. '])' → logprob: -10.157622337341309
    8. ')])' → logprob: -10.532622337341309
    9. '   ' → logprob: -10.657622337341309
    10. ')]

' → logprob: -10.907622337341309

Token 1252: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00015681622608099133
    2. '       ' → logprob: -8.87515640258789
    3. ' if' → logprob: -11.62515640258789
    4. '   ' → logprob: -13.00015640258789
    5. 'if' → logprob: -13.25015640258789
    6. '               ' → logprob: -13.62515640258789
    7. '	       ' → logprob: -13.75015640258789
    8. '          ' → logprob: -14.37515640258789
    9. '		' → logprob: -15.37515640258789
    10. '         ' → logprob: -15.50015640258789

Token 1253: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.40721890330314636
    2. '           ' → logprob: -1.1572189331054688
    3. ' if' → logprob: -3.9072189331054688
    4. '       ' → logprob: -10.532218933105469
    5. '               ' → logprob: -11.407218933105469
    6. '   ' → logprob: -12.532218933105469
    7. '
' → logprob: -12.907218933105469
    8. 'return' → logprob: -14.407218933105469
    9. '          ' → logprob: -14.782218933105469
    10. '	if' → logprob: -15.157218933105469

Token 1254: ' (' (ID: 350)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.00034821697045117617
    2. ' (' → logprob: -8.000348091125488
    3. '           ' → logprob: -11.875348091125488
    4. '(max' → logprob: -13.125348091125488
    5. '   ' → logprob: -13.375348091125488
    6. '(not' → logprob: -14.750348091125488
    7. '(len' → logprob: -15.000348091125488
    8. '               ' → logprob: -15.125348091125488
    9. '       ' → logprob: -15.125348091125488
    10. '(m' → logprob: -15.250348091125488

Token 1255: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00025001514586620033
    2. '(min' → logprob: -9.000249862670898
    3. 'a' → logprob: -9.125249862670898
    4. ' min' → logprob: -11.000249862670898
    5. '   ' → logprob: -14.750249862670898
    6. '	min' → logprob: -15.625249862670898
    7. 'max' → logprob: -15.750249862670898
    8. '(a' → logprob: -16.8752498626709
    9. '_min' → logprob: -17.1252498626709
    10. '[min' → logprob: -17.2502498626709

Token 1256: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -5.836499985889532e-05
    2. 'a' → logprob: -9.7500581741333
    3. '(' → logprob: -17.250059127807617
    4. ',a' → logprob: -18.250059127807617
    5. ')(' → logprob: -18.625059127807617
    6. ',' → logprob: -18.750059127807617
    7. '(
' → logprob: -18.875059127807617
    8. '((' → logprob: -19.000059127807617
    9. ')a' → logprob: -19.125059127807617
    10. ' (' → logprob: -19.250059127807617

Token 1257: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47606754302978516
    2. ',b' → logprob: -0.9760675430297852
    3. ',a' → logprob: -6.476067543029785
    4. 'a' → logprob: -8.101067543029785
    5. 'b' → logprob: -9.101067543029785
    6. '(a' → logprob: -11.101067543029785
    7. ',
' → logprob: -11.601067543029785
    8. '(b' → logprob: -12.476067543029785
    9. ' ,' → logprob: -12.476067543029785
    10. '
' → logprob: -15.101067543029785

Token 1258: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004334102850407362
    2. '),' → logprob: -6.004333972930908
    3. ',b' → logprob: -6.379333972930908
    4. ' ,' → logprob: -9.379334449768066
    5. ',min' → logprob: -9.754334449768066
    6. 'b' → logprob: -11.754334449768066
    7. '),(' → logprob: -12.754334449768066
    8. ',max' → logprob: -13.129334449768066
    9. ',
' → logprob: -14.004334449768066
    10. ',a' → logprob: -14.004334449768066

Token 1259: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -3.547789674485102e-05
    2. ' max' → logprob: -10.250035285949707
    3. '(max' → logprob: -16.500036239624023
    4. '   ' → logprob: -19.875036239624023
    5. '	max' → logprob: -21.375036239624023
    6. '
' → logprob: -21.500036239624023
    7. ' ' → logprob: -21.750036239624023
    8. '           ' → logprob: -22.000036239624023
    9. '_max' → logprob: -22.000036239624023
    10. '[max' → logprob: -22.125036239624023

Token 1260: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.9361264946837764e-07
    2. 'a' → logprob: -15.625
    3. ' (' → logprob: -20.125
    4. '((' → logprob: -20.375
    5. '(' → logprob: -20.625
    6. '   ' → logprob: -20.875
    7. '(
' → logprob: -21.0
    8. ')' → logprob: -21.5
    9. '(i' → logprob: -22.25
    10. '(A' → logprob: -22.375

Token 1261: ',b' (ID: 17568)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0009120595059357584
    2. 'a' → logprob: -7.000912189483643
    3. ')' → logprob: -15.000911712646484
    4. ')a' → logprob: -16.750911712646484
    5. ' (' → logprob: -17.125911712646484
    6. '   ' → logprob: -17.250911712646484
    7. '[a' → logprob: -17.375911712646484
    8. ' a' → logprob: -17.500911712646484
    9. ',a' → logprob: -18.250911712646484
    10. '=a' → logprob: -18.500911712646484

Token 1262: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.7385154428193346e-05
    2. ' )' → logprob: -11.50003719329834
    3. ' not' → logprob: -11.62503719329834
    4. '))' → logprob: -11.62503719329834
    5. 'not' → logprob: -11.87503719329834
    6. '")' → logprob: -14.62503719329834
    7. '`)' → logprob: -14.62503719329834
    8. '')' → logprob: -14.75003719329834
    9. '   ' → logprob: -15.37503719329834
    10. '])' → logprob: -15.62503719329834

Token 1263: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.005245498847216368
    2. 'not' → logprob: -5.255245685577393
    3. ')' → logprob: -11.380245208740234
    4. ' )' → logprob: -16.005245208740234
    5. ' ' → logprob: -17.255245208740234
    6. '	not' → logprob: -17.255245208740234
    7. '
' → logprob: -18.255245208740234
    8. '```' → logprob: -18.380245208740234
    9. ' no' → logprob: -19.630245208740234
    10. ']' → logprob: -20.255245208740234

Token 1264: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5761914849281311
    2. ' in' → logprob: -0.8261914849281311
    3. 'edge' → logprob: -8.326191902160645
    4. ' edge' → logprob: -12.076191902160645
    5. '(edge' → logprob: -13.451191902160645
    6. '           ' → logprob: -13.701191902160645
    7. '   ' → logprob: -14.701191902160645
    8. ' ' → logprob: -15.201191902160645
    9. ')' → logprob: -15.451191902160645
    10. '=edge' → logprob: -15.576191902160645

Token 1265: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.0024763736873865128
    2. ' edge' → logprob: -6.002476215362549
    3. '   ' → logprob: -15.252476692199707
    4. 'edges' → logprob: -15.752476692199707
    5. '(edge' → logprob: -16.00247573852539
    6. '=edge' → logprob: -16.50247573852539
    7. ' ' → logprob: -16.75247573852539
    8. '           ' → logprob: -18.00247573852539
    9. '
' → logprob: -18.12747573852539
    10. '```' → logprob: -18.50247573852539

Token 1266: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -5.157039049663581e-05
    2. '_edge' → logprob: -10.875051498413086
    3. 'set' → logprob: -11.000051498413086
    4. 'edge' → logprob: -11.125051498413086
    5. 's' → logprob: -15.250051498413086
    6. '_map' → logprob: -15.875051498413086
    7. ')' → logprob: -15.875051498413086
    8. 'Set' → logprob: -15.875051498413086
    9. '_sets' → logprob: -16.625051498413086
    10. 'edges' → logprob: -16.875051498413086

Token 1267: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5036617517471313
    2. ':' → logprob: -1.0036617517471313
    3. '               ' → logprob: -4.128661632537842
    4. '           ' → logprob: -4.753661632537842
    5. ':return' → logprob: -5.628661632537842
    6. '):
' → logprob: -7.503661632537842
    7. ')' → logprob: -10.003662109375
    8. ':
' → logprob: -10.128662109375
    9. '       ' → logprob: -10.128662109375
    10. 'return' → logprob: -10.378662109375

Token 1268: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002477081725373864
    2. '           ' → logprob: -6.752477169036865
    3. ' return' → logprob: -6.752477169036865
    4. 'return' → logprob: -9.127476692199707
    5. ':return' → logprob: -11.502476692199707
    6. '              ' → logprob: -11.877476692199707
    7. '```' → logprob: -13.252476692199707
    8. '{return' → logprob: -13.377476692199707
    9. '                   ' → logprob: -13.502476692199707
    10. '
' → logprob: -13.877476692199707

Token 1269: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.001634835614822805
    2. ' return' → logprob: -6.50163459777832
    3. '               ' → logprob: -9.00163459777832
    4. '                   ' → logprob: -12.00163459777832
    5. '           ' → logprob: -13.62663459777832
    6. '	return' → logprob: -13.87663459777832
    7. ':return' → logprob: -14.75163459777832
    8. '
' → logprob: -15.25163459777832
    9. '{return' → logprob: -16.00163459777832
    10. '                       ' → logprob: -16.62663459777832

Token 1270: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -3.292907877039397e-06
    2. ' False' → logprob: -13.25000286102295
    3. 'True' → logprob: -13.50000286102295
    4. '(False' → logprob: -21.625003814697266
    5. 'false' → logprob: -23.375003814697266
    6. '
' → logprob: -23.375003814697266
    7. '   ' → logprob: -23.625003814697266
    8. 'F' → logprob: -24.000003814697266
    9. '```' → logprob: -24.375003814697266
    10. '=False' → logprob: -24.500003814697266

Token 1271: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.7729658540920354e-05
    2. '           ' → logprob: -11.375027656555176
    3. 'return' → logprob: -11.625027656555176
    4. '   ' → logprob: -12.875027656555176
    5. ' return' → logprob: -13.250027656555176
    6. '
' → logprob: -13.875027656555176
    7. '	' → logprob: -14.250027656555176
    8. '      ' → logprob: -15.250027656555176
    9. '[' → logprob: -15.625027656555176
    10. ',' → logprob: -15.750027656555176

Token 1272: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.76759916334413e-05
    2. '           ' → logprob: -9.500077247619629
    3. 'return' → logprob: -13.250077247619629
    4. '
' → logprob: -14.500077247619629
    5. ' return' → logprob: -15.250077247619629
    6. '   ' → logprob: -15.625077247619629
    7. '      ' → logprob: -17.000078201293945
    8. '0' → logprob: -18.375078201293945
    9. '     ' → logprob: -18.500078201293945
    10. '               ' → logprob: -18.500078201293945

Token 1273: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005519984755665064
    2. '   ' → logprob: -5.505519866943359
    3. 'return' (adapté à ' return') → logprob: -6.630519866943359
    4. '
' → logprob: -9.38051986694336
    5. ' return' → logprob: -10.75551986694336
    6. '           ' → logprob: -11.50551986694336
    7. '	return' → logprob: -13.88051986694336
    8. '     ' → logprob: -14.00551986694336
    9. '        
' → logprob: -14.25551986694336
    10. '    
' → logprob: -14.50551986694336

Token 1274: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0004320996522437781
    2. ' True' → logprob: -7.750432014465332
    3. 'False' → logprob: -13.500432014465332
    4. '(True' → logprob: -21.12543296813965
    5. '```' → logprob: -22.75043296813965
    6. '`' → logprob: -23.12543296813965
    7. ' False' → logprob: -23.12543296813965
    8. '   ' → logprob: -23.37543296813965
    9. '
' → logprob: -23.37543296813965
    10. '=True' → logprob: -23.37543296813965

Token 1275: '


' (ID: 2499)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09507626295089722
    2. '
' → logprob: -2.470076322555542
    3. '<|end|>' → logprob: -5.220076084136963
    4. '```' → logprob: -8.095076560974121
    5. '    
' → logprob: -8.345076560974121
    6. 'class' → logprob: -10.095076560974121
    7. ')' → logprob: -10.470076560974121
    8. '<|end|>' → logprob: -10.470076560974121
    9. '@' → logprob: -11.720076560974121
    10. 'def' → logprob: -11.720076560974121

Token 1276: 'class' (ID: 1444)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2100421041250229
    2. 'def' → logprob: -1.710042119026184
    3. 'class' → logprob: -5.2100419998168945
    4. '<|end|>' → logprob: -6.4600419998168945
    5. ' def' → logprob: -7.7100419998168945
    6. '@' → logprob: -8.085041999816895
    7. '
' → logprob: -8.710041999816895
    8. ')' → logprob: -8.960041999816895
    9. 'from' → logprob: -9.085041999816895
    10. 'import' → logprob: -9.585041999816895

Token 1277: ' Conv' (ID: 52133)
  Prédit: 'Polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Polygon' → logprob: -0.7770377993583679
    2. 'Solution' → logprob: -1.9020378589630127
    3. 'M' → logprob: -2.0270378589630127
    4. 'Village' → logprob: -2.7770378589630127
    5. 'Graph' → logprob: -3.1520378589630127
    6. 'Conv' → logprob: -3.2770378589630127
    7. 'Minimal' → logprob: -3.5270378589630127
    8. 'Path' → logprob: -4.277037620544434
    9. 'Minimum' → logprob: -4.652037620544434
    10. 'Plan' → logprob: -5.152037620544434

Token 1278: 'ex' (ID: 490)
  Prédit: 'ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -1.0802738870552275e-05
    2. 'exp' → logprob: -12.00001049041748
    3. 'ext' → logprob: -12.62501049041748
    4. 'exc' → logprob: -14.50001049041748
    5. '```' → logprob: -15.12501049041748
    6. '
' → logprob: -15.37501049041748
    7. 'exit' → logprob: -16.125011444091797
    8. 'e' → logprob: -16.500011444091797
    9. 'EX' → logprob: -16.875011444091797
    10. 'ect' → logprob: -17.500011444091797

Token 1279: 'Hull' (ID: 159984)
  Prédit: 'Hull'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Hull' → logprob: -0.16030627489089966
    2. 'Polygon' → logprob: -1.9103062152862549
    3. '
' → logprob: -10.035305976867676
    4. 'Poly' → logprob: -11.910305976867676
    5. '{' → logprob: -12.660305976867676
    6. ' Hull' → logprob: -12.910305976867676
    7. '```' → logprob: -12.910305976867676
    8. 'Polyline' → logprob: -13.035305976867676
    9. '{
' → logprob: -13.160305976867676
    10. 'Pol' → logprob: -13.285305976867676

Token 1280: 'Calculator' (ID: 50159)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4770228862762451
    2. ':' → logprob: -0.9770228862762451
    3. 'Builder' → logprob: -6.227023124694824
    4. 'Calculator' → logprob: -7.977023124694824
    5. '{' → logprob: -8.727023124694824
    6. 'Helper' → logprob: -8.977023124694824
    7. '(points' → logprob: -10.102023124694824
    8. ':

' → logprob: -10.227023124694824
    9. '(Point' → logprob: -10.227023124694824
    10. '(' → logprob: -10.602023124694824

Token 1281: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12693335115909576
    2. ':
' → logprob: -2.1269333362579346
    3. ':

' → logprob: -12.751933097839355
    4. ':def' → logprob: -14.376933097839355
    5. '):' → logprob: -14.876933097839355
    6. ':
' → logprob: -15.001933097839355
    7. '{' → logprob: -15.126933097839355
    8. '):
' → logprob: -15.126933097839355
    9. '   ' → logprob: -15.376933097839355
    10. 'def' → logprob: -15.751933097839355

Token 1282: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011449799640104175
    2. ' @' → logprob: -6.876144886016846
    3. '@' → logprob: -10.001145362854004
    4. 'staticmethod' → logprob: -10.626145362854004
    5. ' static' → logprob: -11.626145362854004
    6. 'class' → logprob: -12.001145362854004
    7. '```' → logprob: -12.001145362854004
    8. ' class' → logprob: -12.501145362854004
    9. ':' → logprob: -13.001145362854004
    10. '
' → logprob: -13.126145362854004

Token 1283: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.041969459503889084
    2. '   ' → logprob: -3.2919695377349854
    3. ' @' → logprob: -5.541969299316406
    4. 'staticmethod' → logprob: -13.791969299316406
    5. '
' → logprob: -15.041969299316406
    6. 'class' → logprob: -16.416969299316406
    7. '```' → logprob: -18.041969299316406
    8. '    
' → logprob: -18.541969299316406
    9. 'def' → logprob: -18.666969299316406
    10. ' ' → logprob: -18.916969299316406

Token 1284: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: 0.0
    2. 'classmethod' → logprob: -19.25
    3. 'static' → logprob: -20.75
    4. ' static' → logprob: -24.75
    5. 'dat' → logprob: -25.5
    6. '
' → logprob: -27.0
    7. '_static' → logprob: -28.25
    8. 'property' → logprob: -28.875
    9. 'stat' → logprob: -29.5
    10. '.static' → logprob: -29.75

Token 1285: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6641259789466858
    2. 'def' → logprob: -0.7891259789466858
    3. ' def' → logprob: -3.539125919342041
    4. '   ' → logprob: -6.539125919342041
    5. '  
' → logprob: -8.4141263961792
    6. '    
' → logprob: -9.1641263961792
    7. '	def' → logprob: -9.7891263961792
    8. '(' → logprob: -9.9141263961792
    9. '(
' → logprob: -10.2891263961792
    10. ' ' → logprob: -10.9141263961792

Token 1286: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02300960198044777
    2. '   ' → logprob: -4.023009777069092
    3. ' def' → logprob: -5.648009777069092
    4. '
' → logprob: -6.648009777069092
    5. '	def' → logprob: -11.273009300231934
    6. 'class' → logprob: -11.773009300231934
    7. ' ' → logprob: -12.523009300231934
    8. '    
' → logprob: -13.648009300231934
    9. '  ' → logprob: -14.023009300231934
    10. '```' → logprob: -15.773009300231934

Token 1287: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0009399275877512991
    2. ' def' → logprob: -7.000939846038818
    3. '
' → logprob: -11.000940322875977
    4. '   ' → logprob: -11.375940322875977
    5. 'from' → logprob: -15.750940322875977
    6. '	def' → logprob: -16.750940322875977
    7. 'class' → logprob: -17.250940322875977
    8. 'get' → logprob: -17.375940322875977
    9. '  ' → logprob: -18.250940322875977
    10. ' ' → logprob: -18.375940322875977

Token 1288: ' convex' (ID: 142423)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.05097917467355728
    2. ' compute' → logprob: -3.5509791374206543
    3. 'gra' → logprob: -4.425979137420654
    4. 'calculate' → logprob: -5.050979137420654
    5. 'gift' → logprob: -7.175979137420654
    6. 'conv' → logprob: -7.425979137420654
    7. 'mon' → logprob: -8.550979614257812
    8. 'get' → logprob: -8.675979614257812
    9. ' gra' → logprob: -8.675979614257812
    10. ' convex' → logprob: -8.675979614257812

Token 1289: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.00033581978641450405
    2. 'h' → logprob: -8.000335693359375
    3. 'Hull' → logprob: -16.125335693359375
    4. '(h' → logprob: -16.625335693359375
    5. '	h' → logprob: -16.875335693359375
    6. ' hull' → logprob: -17.500335693359375
    7. '_' → logprob: -17.750335693359375
    8. '_wrap' → logprob: -17.875335693359375
    9. '_polygon' → logprob: -18.500335693359375
    10. '.h' → logprob: -18.875335693359375

Token 1290: 'ull' (ID: 754)
  Prédit: 'ull'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ull' → logprob: -0.00011069540778407827
    2. 'ul' → logprob: -9.500110626220703
    3. 'all' → logprob: -11.875110626220703
    4. 'ulls' → logprob: -12.125110626220703
    5. 'ill' → logprob: -12.500110626220703
    6. 'alf' → logprob: -12.875110626220703
    7. '#' → logprob: -13.125110626220703
    8. '_' → logprob: -13.375110626220703
    9. 'ash' → logprob: -13.375110626220703
    10. '```' → logprob: -13.500110626220703

Token 1291: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -1.9504606825648807e-05
    2. '(' → logprob: -11.875019073486328
    3. '(Point' → logprob: -12.625019073486328
    4. '(point' → logprob: -12.750019073486328
    5. '_points' → logprob: -13.000019073486328
    6. ' (' → logprob: -13.750019073486328
    7. '(pol' → logprob: -14.500019073486328
    8. '(vertices' → logprob: -15.000019073486328
    9. '(items' → logprob: -15.250019073486328
    10. '(self' → logprob: -15.375019073486328

Token 1292: ':' (ID: 25)
  Prédit: '(points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.0032953477930277586
    2. ')' → logprob: -5.753295421600342
    3. '):' → logprob: -10.378294944763184
    4. ':' → logprob: -11.003294944763184
    5. ')(' → logprob: -11.128294944763184
    6. '):
' → logprob: -11.503294944763184
    7. '](' → logprob: -11.753294944763184
    8. '(p' → logprob: -12.253294944763184
    9. '   ' → logprob: -12.628294944763184
    10. '(self' → logprob: -12.753294944763184

Token 1293: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0007862794445827603
    2. ')' → logprob: -7.625786304473877
    3. ' List' → logprob: -8.375785827636719
    4. '[List' → logprob: -9.750785827636719
    5. 'Point' → logprob: -12.250785827636719
    6. '   ' → logprob: -13.875785827636719
    7. '[' → logprob: -14.250785827636719
    8. 'list' → logprob: -14.250785827636719
    9. 'points' → logprob: -14.500785827636719
    10. ')
' → logprob: -14.500785827636719

Token 1294: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.088346359931165e-07
    2. 'Point' → logprob: -14.750000953674316
    3. '[
' → logprob: -15.000000953674316
    4. '<Point' → logprob: -17.125
    5. '   ' → logprob: -18.0
    6. ')' → logprob: -18.0
    7. '(Point' → logprob: -18.25
    8. '
' → logprob: -18.75
    9. '```' → logprob: -18.875
    10. ']' → logprob: -19.125

Token 1295: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -1.9361264946837764e-07
    2. ' Point' → logprob: -15.875
    3. '	Point' → logprob: -19.0
    4. '<Point' → logprob: -21.375
    5. ')' → logprob: -21.625
    6. '(Point' → logprob: -21.625
    7. '   ' → logprob: -21.875
    8. '_Point' → logprob: -22.25
    9. '_point' → logprob: -22.5
    10. '
' → logprob: -23.0

Token 1296: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.8828707804204896e-05
    2. '):
' → logprob: -10.500048637390137
    3. '   ' → logprob: -11.500048637390137
    4. '')' → logprob: -12.625048637390137
    5. ')->' → logprob: -13.000048637390137
    6. '`)' → logprob: -13.000048637390137
    7. ' )' → logprob: -13.500048637390137
    8. '):' → logprob: -14.000048637390137
    9. '])' → logprob: -14.625048637390137
    10. '）' → logprob: -15.125048637390137

Token 1297: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2089143544435501
    2. ':
' → logprob: -1.9589143991470337
    3. '->' → logprob: -3.458914279937744
    4. ' ->' → logprob: -4.458914279937744
    5. ')' → logprob: -6.583914279937744
    6. '   ' → logprob: -6.583914279937744
    7. ')->' → logprob: -7.458914279937744
    8. '(points' → logprob: -7.583914279937744
    9. '       ' → logprob: -8.708914756774902
    10. '[' → logprob: -9.458914756774902

Token 1298: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -3.5597102396423e-05
    2. ' List' → logprob: -10.250035285949707
    3. '[List' → logprob: -16.250036239624023
    4. 'list' → logprob: -18.625036239624023
    5. '	List' → logprob: -19.750036239624023
    6. '   ' → logprob: -21.000036239624023
    7. '_list' → logprob: -21.375036239624023
    8. '<List' → logprob: -21.500036239624023
    9. '
' → logprob: -21.625036239624023
    10. '(List' → logprob: -22.000036239624023

Token 1299: '[int' (ID: 40124)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6240566083070007e-06
    2. '[
' → logprob: -14.500001907348633
    3. 'Point' → logprob: -14.625001907348633
    4. '[int' → logprob: -15.000001907348633
    5. '<Point' → logprob: -15.500001907348633
    6. '(Point' → logprob: -18.000001907348633
    7. '```' → logprob: -19.375001907348633
    8. '
' → logprob: -19.500001907348633
    9. '[Index' → logprob: -20.250001907348633
    10. '   ' → logprob: -20.375001907348633

Token 1300: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1075618267059326
    2. ':
' → logprob: -1.2325618267059326
    3. ']:
' → logprob: -2.2325618267059326
    4. '):
' → logprob: -2.4825618267059326
    5. '   ' → logprob: -2.6075618267059326
    6. ']:' → logprob: -3.1075618267059326
    7. '):' → logprob: -3.2325618267059326
    8. '():
' → logprob: -3.8575618267059326
    9. ']' → logprob: -5.732562065124512
    10. '       ' → logprob: -6.107562065124512

Token 1301: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01381203718483448
    2. '
' → logprob: -4.513812065124512
    3. ':' → logprob: -6.763812065124512
    4. '#' → logprob: -7.388812065124512
    5. ':
' → logprob: -8.138812065124512
    6. '   ' → logprob: -8.388812065124512
    7. '```' → logprob: -8.763812065124512
    8. ',' → logprob: -10.013812065124512
    9. '[
' → logprob: -10.013812065124512
    10. '[' → logprob: -10.138812065124512

Token 1302: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7696431875228882
    2. 'points' → logprob: -0.7696431875228882
    3. '#' (adapté à ' #') → logprob: -3.3946433067321777
    4. 'def' → logprob: -4.144643306732178
    5. '   ' → logprob: -4.269643306732178
    6. 'pts' → logprob: -5.644643306732178
    7. '
' → logprob: -5.644643306732178
    8. ' points' → logprob: -6.519643306732178
    9. 'if' → logprob: -7.394643306732178
    10. 'n' → logprob: -7.394643306732178

Token 1303: ' Returns' (ID: 9609)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.024340307340025902
    2. 'def' → logprob: -4.1493401527404785
    3. 'pts' → logprob: -5.1493401527404785
    4. '#' → logprob: -6.8993401527404785
    5. 'n' → logprob: -7.1493401527404785
    6. 'if' → logprob: -7.6493401527404785
    7. '   ' → logprob: -9.024340629577637
    8. 'sorted' → logprob: -10.774340629577637
    9. 'k' → logprob: -10.899340629577637
    10. ' points' → logprob: -11.274340629577637

Token 1304: ' indices' (ID: 30378)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.21900008618831635
    2. 'indices' → logprob: -2.2190001010894775
    3. 'points' → logprob: -2.8440001010894775
    4. ' the' → logprob: -4.343999862670898
    5. 'a' → logprob: -4.843999862670898
    6. 'sorted' → logprob: -5.468999862670898
    7. 'pts' → logprob: -6.718999862670898
    8. ' indices' → logprob: -7.218999862670898
    9. 'ids' → logprob: -7.468999862670898
    10. '   ' → logprob: -7.468999862670898

Token 1305: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.38087671995162964
    2. ' of' → logprob: -1.3808767795562744
    3. '(points' → logprob: -3.0058767795562744
    4. '       ' → logprob: -4.255876541137695
    5. 'points' → logprob: -7.755876541137695
    6. '(sorted' → logprob: -8.255876541137695
    7. '(' → logprob: -8.380876541137695
    8. 'sorted' → logprob: -8.755876541137695
    9. '(
' → logprob: -9.255876541137695
    10. '   ' → logprob: -9.255876541137695

Token 1306: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.01448995340615511
    2. 'the' → logprob: -4.764490127563477
    3. 'sorted' → logprob: -5.264490127563477
    4. 'pts' → logprob: -7.389490127563477
    5. ' points' → logprob: -9.889490127563477
    6. '#' → logprob: -12.014490127563477
    7. 'point' → logprob: -12.514490127563477
    8. '
' → logprob: -13.139490127563477
    9. '(points' → logprob: -13.764490127563477
    10. '	points' → logprob: -13.764490127563477

Token 1307: ' forming' (ID: 44860)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6884790062904358
    2. 'in' → logprob: -1.063478946685791
    3. 'sorted' → logprob: -2.313478946685791
    4. ' sorted' → logprob: -3.938478946685791
    5. '       ' → logprob: -4.938478946685791
    6. '
' → logprob: -5.188478946685791
    7. ' that' → logprob: -5.313478946685791
    8. '_sorted' → logprob: -5.688478946685791
    9. '   ' → logprob: -6.188478946685791
    10. ' ' → logprob: -6.438478946685791

Token 1308: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.18495573103427887
    2. 'h' → logprob: -1.9349557161331177
    3. 'points' → logprob: -3.8099558353424072
    4. ' the' → logprob: -6.309955596923828
    5. 'lower' → logprob: -8.559955596923828
    6. 'sorted' → logprob: -8.934955596923828
    7. ' points' → logprob: -10.309955596923828
    8. '   ' → logprob: -10.434955596923828
    9. '#' → logprob: -10.684955596923828
    10. ' hull' → logprob: -11.059955596923828

Token 1309: ' convex' (ID: 142423)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.13030824065208435
    2. 'points' → logprob: -2.130308151245117
    3. 'lower' → logprob: -6.130308151245117
    4. 'sorted' → logprob: -7.130308151245117
    5. 'conv' → logprob: -8.755308151245117
    6. 'polygon' → logprob: -9.255308151245117
    7. '#' → logprob: -10.005308151245117
    8. 'lowest' → logprob: -11.005308151245117
    9. 'subset' → logprob: -11.005308151245117
    10. '(points' → logprob: -11.380308151245117

Token 1310: ' hull' (ID: 74912)
  Prédit: '_h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.2522311210632324
    2. 'h' → logprob: -1.5022311210632324
    3. ' hull' → logprob: -8.50223159790039
    4. '	h' → logprob: -9.87723159790039
    5. '   ' → logprob: -10.50223159790039
    6. '
' → logprob: -12.37723159790039
    7. '       ' → logprob: -12.75223159790039
    8. '_' → logprob: -13.00223159790039
    9. '(h' → logprob: -13.12723159790039
    10. '	' → logprob: -13.37723159790039

Token 1311: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4554287791252136
    2. ',' → logprob: -2.0804288387298584
    3. '(points' → logprob: -2.3304288387298584
    4. '
' → logprob: -3.3304288387298584
    5. '   ' → logprob: -3.7054288387298584
    6. '(sorted' → logprob: -3.8304288387298584
    7. '       ' → logprob: -4.205428600311279
    8. ' (' → logprob: -4.580428600311279
    9. 'in' → logprob: -4.580428600311279
    10. ' sorted' → logprob: -4.580428600311279

Token 1312: ' CC' (ID: 21547)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.5804210901260376
    2. 'CC' → logprob: -1.3304210901260376
    3. 'sorted' → logprob: -1.8304210901260376
    4. 'in' → logprob: -5.330420970916748
    5. 'the' → logprob: -5.580420970916748
    6. 'cc' → logprob: -6.080420970916748
    7. 'order' → logprob: -6.705420970916748
    8. 'clock' → logprob: -6.955420970916748
    9. ' CC' → logprob: -7.455420970916748
    10. ' counter' → logprob: -7.955420970916748

Token 1313: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -1.9146995327901095e-05
    2. '   ' → logprob: -12.250019073486328
    3. '       ' → logprob: -12.375019073486328
    4. ' W' → logprob: -12.875019073486328
    5. '[' → logprob: -13.500019073486328
    6. 'w' → logprob: -13.875019073486328
    7. 'order' → logprob: -14.000019073486328
    8. '#' → logprob: -14.000019073486328
    9. 'Wind' → logprob: -15.000019073486328
    10. '
' → logprob: -15.125019073486328

Token 1314: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.018160827457904816
    2. ' order' → logprob: -4.018160820007324
    3. '
' → logprob: -12.018160820007324
    4. '_order' → logprob: -12.893160820007324
    5. '   ' → logprob: -13.393160820007324
    6. '(order' → logprob: -15.143160820007324
    7. '	order' → logprob: -15.393160820007324
    8. '    
' → logprob: -16.14316177368164
    9. '#' → logprob: -16.64316177368164
    10. '       ' → logprob: -17.14316177368164

Token 1315: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4877426028251648
    2. '       ' → logprob: -1.6127426624298096
    3. ':
' → logprob: -2.7377426624298096
    4. ':' → logprob: -2.8627426624298096
    5. '   ' → logprob: -3.1127426624298096
    6. ',' → logprob: -5.2377424240112305
    7. '(points' → logprob: -5.7377424240112305
    8. '        
' → logprob: -5.9877424240112305
    9. ' (' → logprob: -6.3627424240112305
    10. '	' → logprob: -6.3627424240112305

Token 1316: ' no' (ID: 860)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.9505655765533447
    2. 'points' → logprob: -1.7005655765533447
    3. ' pts' → logprob: -1.8255655765533447
    4. '   ' → logprob: -1.9505655765533447
    5. '       ' → logprob: -2.9505655765533447
    6. 'def' → logprob: -3.5755655765533447
    7. ' sorted' → logprob: -4.075565338134766
    8. 'pts' → logprob: -4.825565338134766
    9. 'sorted' → logprob: -4.950565338134766
    10. '        
' → logprob: -5.200565338134766

Token 1317: ' duplicates' (ID: 91135)
  Prédit: ' duplicates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' duplicates' → logprob: -0.2644663155078888
    2. 'duplicates' → logprob: -1.7644662857055664
    3. '_duplicates' → logprob: -3.3894662857055664
    4. ' duplicate' → logprob: -4.139466285705566
    5. 'duplicate' → logprob: -4.514466285705566
    6. '_duplicate' → logprob: -8.389466285705566
    7. ' repeats' → logprob: -9.014466285705566
    8. 'repeat' → logprob: -10.389466285705566
    9. 'Duplicates' → logprob: -10.389466285705566
    10. 'd' → logprob: -11.139466285705566

Token 1318: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08567459881305695
    2. '   ' → logprob: -3.460674524307251
    3. '       ' → logprob: -4.08567476272583
    4. ':
' → logprob: -4.83567476272583
    5. '        
' → logprob: -4.96067476272583
    6. ':' → logprob: -5.33567476272583
    7. '(points' → logprob: -5.83567476272583
    8. ',' → logprob: -5.96067476272583
    9. '    
' → logprob: -6.08567476272583
    10. '  
' → logprob: -7.21067476272583

Token 1319: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12152822315692902
    2. '       ' → logprob: -2.246528148651123
    3. '   ' → logprob: -5.246528148651123
    4. '        
' → logprob: -7.121528148651123
    5. '    
' → logprob: -7.121528148651123
    6. 'n' → logprob: -7.246528148651123
    7. '

' → logprob: -7.621528148651123
    8. 'points' → logprob: -8.621528625488281
    9. '```' → logprob: -8.871528625488281
    10. ' points' → logprob: -9.746528625488281

Token 1320: ' #' (ID: 1069)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.8501519560813904
    2. '       ' → logprob: -1.3501520156860352
    3. 'n' → logprob: -1.4751520156860352
    4. 'if' → logprob: -3.350152015686035
    5. 'pts' → logprob: -4.100152015686035
    6. '   ' → logprob: -4.225152015686035
    7. 'def' → logprob: -4.225152015686035
    8. '#' (adapté à ' #') → logprob: -6.600152015686035
    9. ' points' → logprob: -7.725152015686035
    10. '
' → logprob: -7.850152015686035

Token 1321: ' Using' (ID: 17511)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.1219446063041687
    2. 'pts' → logprob: -2.9969446659088135
    3. 'n' → logprob: -3.7469446659088135
    4. 'def' → logprob: -3.9969446659088135
    5. 'if' → logprob: -4.621944427490234
    6. '       ' → logprob: -4.746944427490234
    7. '   ' → logprob: -5.621944427490234
    8. '#' → logprob: -7.996944427490234
    9. ' pts' → logprob: -8.496944427490234
    10. 'sorted' → logprob: -9.246944427490234

Token 1322: ' Andrew' (ID: 28480)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.29859861731529236
    2. 'sorted' → logprob: -1.7985986471176147
    3. ' points' → logprob: -2.923598527908325
    4. 'def' → logprob: -3.673598527908325
    5. '#' → logprob: -5.298598766326904
    6. 'the' → logprob: -5.673598766326904
    7. ' sorted' → logprob: -6.423598766326904
    8. '(points' → logprob: -7.423598766326904
    9. 'p' → logprob: -7.673598766326904
    10. '
' → logprob: -7.798598766326904

Token 1323: ''s' (ID: 885)
  Prédit: ''s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.34710100293159485
    2. 'Mon' → logprob: -1.7221009731292725
    3. 'def' → logprob: -2.9721009731292725
    4. 'import' → logprob: -3.4721009731292725
    5. 'mon' → logprob: -4.722101211547852
    6. 'Hull' → logprob: -4.722101211547852
    7. 'algorithm' → logprob: -5.722101211547852
    8. '#' → logprob: -6.097101211547852
    9. '   ' → logprob: -6.597101211547852
    10. 'Scan' → logprob: -6.722101211547852

Token 1324: ' monot' (ID: 138920)
  Prédit: 'Mon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Mon' → logprob: -0.5499225854873657
    2. 'mon' → logprob: -0.9249225854873657
    3. 'scan' → logprob: -4.299922466278076
    4. 'algorithm' → logprob: -5.174922466278076
    5. ' monot' → logprob: -5.174922466278076
    6. 'Algorithm' → logprob: -7.924922466278076
    7. 'Scan' → logprob: -8.299922943115234
    8. '_mon' → logprob: -8.299922943115234
    9. 'import' → logprob: -9.049922943115234
    10. '```' → logprob: -9.299922943115234

Token 1325: 'one' (ID: 690)
  Prédit: 'one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.02434729039669037
    2. '```' → logprob: -5.024347305297852
    3. 'h' → logprob: -5.274347305297852
    4. 'hain' → logprob: -6.274347305297852
    5. 'on' → logprob: -6.399347305297852
    6. 'ane' → logprob: -6.649347305297852
    7. 'ne' → logprob: -6.774347305297852
    8. 'rone' → logprob: -7.274347305297852
    9. '
' → logprob: -7.524347305297852
    10. 'oine' → logprob: -7.899347305297852

Token 1326: ' chain' (ID: 13464)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.003663252806290984
    2. '_chain' → logprob: -5.628663063049316
    3. ' chain' → logprob: -9.878663063049316
    4. 'stack' → logprob: -12.378663063049316
    5. '-chain' → logprob: -12.753663063049316
    6. '```' → logprob: -13.628663063049316
    7. 'chains' → logprob: -13.753663063049316
    8. '.chain' → logprob: -14.753663063049316
    9. 'algorithm' → logprob: -14.878663063049316
    10. 'ch' → logprob: -14.878663063049316

Token 1327: ' algorithm' (ID: 22184)
  Prédit: ' algorithm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' algorithm' → logprob: -0.5310667753219604
    2. 'algorithm' → logprob: -1.5310667753219604
    3. '_algorithm' → logprob: -1.9060667753219604
    4. '
' → logprob: -3.53106689453125
    5. '   ' → logprob: -5.28106689453125
    6. '_conv' → logprob: -5.90606689453125
    7. '```' → logprob: -6.65606689453125
    8. 'conv' → logprob: -6.65606689453125
    9. '(
' → logprob: -7.15606689453125
    10. '       ' → logprob: -7.40606689453125

Token 1328: '.

' (ID: 364)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13973499834537506
    2. '       ' → logprob: -3.514734983444214
    3. '(points' → logprob: -3.639734983444214
    4. ':' → logprob: -4.014735221862793
    5. '

' → logprob: -4.139735221862793
    6. ':
' → logprob: -4.389735221862793
    7. '        
' → logprob: -4.764735221862793
    8. '    
' → logprob: -5.264735221862793
    9. '   ' → logprob: -5.389735221862793
    10. ':

' → logprob: -6.264735221862793

Token 1329: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7039667963981628
    2. 'points' → logprob: -1.3289668560028076
    3. '       ' → logprob: -2.3289668560028076
    4. '   ' → logprob: -2.5789668560028076
    5. 'def' → logprob: -3.5789668560028076
    6. '        
' → logprob: -4.9539666175842285
    7. ' points' → logprob: -4.9539666175842285
    8. '```' → logprob: -4.9539666175842285
    9. '    
' → logprob: -5.2039666175842285
    10. 'n' → logprob: -5.2039666175842285

Token 1330: ' pts' (ID: 66515)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.0029967203736305237
    2. 'pts' (adapté à ' pts') → logprob: -6.002996921539307
    3. '       ' → logprob: -8.627996444702148
    4. 'sorted' → logprob: -8.877996444702148
    5. '   ' → logprob: -9.002996444702148
    6. 'def' → logprob: -10.002996444702148
    7. ' points' → logprob: -11.502996444702148
    8. '#' → logprob: -11.752996444702148
    9. 'n' → logprob: -11.752996444702148
    10. 'if' → logprob: -12.877996444702148

Token 1331: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.282641738653183
    2. ' =' → logprob: -1.4076417684555054
    3. '_with' → logprob: -6.657641887664795
    4. '_sorted' → logprob: -9.282641410827637
    5. 'with' → logprob: -10.032641410827637
    6. 'sorted' → logprob: -11.032641410827637
    7. '_points' → logprob: -11.157641410827637
    8. '   ' → logprob: -12.032641410827637
    9. ':' → logprob: -12.657641410827637
    10. '_indices' → logprob: -12.782641410827637

Token 1332: ' [(' (ID: 43900)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.7644212245941162
    2. '[(' → logprob: -1.0144212245941162
    3. 'sorted' → logprob: -1.7644212245941162
    4. ' list' → logprob: -8.264421463012695
    5. ' [(' → logprob: -8.889421463012695
    6. 'enumer' → logprob: -10.139421463012695
    7. '[list' → logprob: -10.264421463012695
    8. ' sorted' → logprob: -10.639421463012695
    9. '[' → logprob: -12.764421463012695
    10. '[((' → logprob: -13.889421463012695

Token 1333: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.39064833521842957
    2. 'points' → logprob: -1.140648365020752
    3. 'pt' → logprob: -6.140648365020752
    4. 'point' → logprob: -6.515648365020752
    5. 'pts' → logprob: -10.015647888183594
    6. ' points' → logprob: -10.390647888183594
    7. '(points' → logprob: -10.765647888183594
    8. '(p' → logprob: -10.765647888183594
    9. '(' → logprob: -11.390647888183594
    10. ' p' → logprob: -12.515647888183594

Token 1334: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -9.090760431718081e-05
    2. '.' → logprob: -9.750090599060059
    3. 'x' → logprob: -11.375090599060059
    4. '.p' → logprob: -11.875090599060059
    5. '[' → logprob: -12.250090599060059
    6. ' .' → logprob: -13.000090599060059
    7. ').' → logprob: -13.125090599060059
    8. 'p' → logprob: -13.750090599060059
    9. 'index' → logprob: -14.875090599060059
    10. '0' → logprob: -15.000090599060059

Token 1335: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01621384173631668
    2. ',p' → logprob: -4.141213893890381
    3. ' ,' → logprob: -8.766213417053223
    4. 'p' → logprob: -10.891213417053223
    5. ',
' → logprob: -13.141213417053223
    6. '[p' → logprob: -13.891213417053223
    7. ' p' → logprob: -14.016213417053223
    8. '(p' → logprob: -15.016213417053223
    9. '
' → logprob: -15.391213417053223
    10. '[' → logprob: -16.01621437072754

Token 1336: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00044175516813993454
    2. ' p' → logprob: -7.750441551208496
    3. 'i' → logprob: -12.000441551208496
    4. 'pt' → logprob: -13.125441551208496
    5. 'idx' → logprob: -13.625441551208496
    6. 'pts' → logprob: -14.500441551208496
    7. '   ' → logprob: -15.000441551208496
    8. 'points' → logprob: -15.500441551208496
    9. '
' → logprob: -15.875441551208496
    10. ' ' → logprob: -16.375442504882812

Token 1337: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.00029720881138928235
    2. '.x' → logprob: -8.250297546386719
    3. 'y' → logprob: -11.250297546386719
    4. ')' → logprob: -12.625297546386719
    5. '.i' → logprob: -12.625297546386719
    6. ').' → logprob: -12.750297546386719
    7. ',y' → logprob: -12.875297546386719
    8. ',' → logprob: -13.125297546386719
    9. '   ' → logprob: -13.375297546386719
    10. '.' → logprob: -13.375297546386719

Token 1338: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00458546495065093
    2. ',i' → logprob: -6.004585266113281
    3. ',p' → logprob: -6.254585266113281
    4. ' ,' → logprob: -8.754585266113281
    5. ',index' → logprob: -11.254585266113281
    6. ')' → logprob: -11.629585266113281
    7. 'p' → logprob: -13.504585266113281
    8. ',(' → logprob: -13.629585266113281
    9. ',
' → logprob: -13.879585266113281
    10. ',e' → logprob: -14.379585266113281

Token 1339: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0040947855450212955
    2. 'idx' → logprob: -5.50409460067749
    3. ' i' → logprob: -11.629095077514648
    4. 'index' → logprob: -12.379095077514648
    5. ' idx' → logprob: -12.879095077514648
    6. '
' → logprob: -15.129095077514648
    7. 'id' → logprob: -15.504095077514648
    8. '   ' → logprob: -15.629095077514648
    9. ' ' → logprob: -17.62909507751465
    10. 'ix' → logprob: -17.75409507751465

Token 1340: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.676981345459353e-06
    2. ' )' → logprob: -13.125005722045898
    3. 'p' → logprob: -13.250005722045898
    4. '(p' → logprob: -14.375005722045898
    5. ')
' → logprob: -14.500005722045898
    6. '   ' → logprob: -16.2500057220459
    7. 'i' → logprob: -16.3750057220459
    8. ',' → logprob: -16.5000057220459
    9. ']' → logprob: -16.5000057220459
    10. '(i' → logprob: -16.7500057220459

Token 1341: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12729647755622864
    2. 'for' → logprob: -2.1272964477539062
    3. ')' → logprob: -8.377296447753906
    4. '       ' → logprob: -9.002296447753906
    5. '   ' → logprob: -12.627296447753906
    6. ']' → logprob: -12.627296447753906
    7. '        ' → logprob: -13.127296447753906
    8. ' ' → logprob: -13.627296447753906
    9. '           ' → logprob: -13.877296447753906
    10. ',' → logprob: -14.002296447753906

Token 1342: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001072823186405003
    2. ' i' → logprob: -7.126072883605957
    3. 'range' → logprob: -8.376072883605957
    4. 'enumer' → logprob: -10.501072883605957
    5. ' range' → logprob: -11.501072883605957
    6. '	i' → logprob: -15.876072883605957
    7. '(i' → logprob: -17.00107192993164
    8. '
' → logprob: -17.12607192993164
    9. ' enumerate' → logprob: -17.50107192993164
    10. ',' → logprob: -17.75107192993164

Token 1343: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6111964583396912
    2. 'in' → logprob: -1.111196517944336
    3. ',p' → logprob: -2.111196517944336
    4. 'p' → logprob: -5.361196517944336
    5. ' in' → logprob: -6.111196517944336
    6. ' p' → logprob: -9.986196517944336
    7. 'range' → logprob: -10.111196517944336
    8. ' ,' → logprob: -10.861196517944336
    9. ',i' → logprob: -12.236196517944336
    10. ',e' → logprob: -12.236196517944336

Token 1344: ' p' (ID: 275)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.01831967383623123
    2. ' enumerate' → logprob: -4.018319606781006
    3. 'range' → logprob: -9.643320083618164
    4. 'p' → logprob: -10.018320083618164
    5. '(' → logprob: -10.643320083618164
    6. ',' → logprob: -11.643320083618164
    7. '(p' → logprob: -12.018320083618164
    8. '[(' → logprob: -12.393320083618164
    9. 'in' → logprob: -12.643320083618164
    10. '((' → logprob: -12.893320083618164

Token 1345: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.25270354747772217
    2. ' in' → logprob: -1.5027035474777222
    3. 'enumer' → logprob: -7.252703666687012
    4. ',' → logprob: -9.877703666687012
    5. ' enumerate' → logprob: -11.877703666687012
    6. '
' → logprob: -12.252703666687012
    7. ')' → logprob: -14.377703666687012
    8. '<|end|>' → logprob: -14.377703666687012
    9. 'import' → logprob: -15.502703666687012
    10. '```' → logprob: -15.752703666687012

Token 1346: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -7.493430894101039e-05
    2. ' enumerate' → logprob: -9.500075340270996
    3. '
' → logprob: -17.37507438659668
    4. 'range' → logprob: -18.00007438659668
    5. 'enum' → logprob: -19.50007438659668
    6. '```' → logprob: -20.00007438659668
    7. 'en' → logprob: -21.25007438659668
    8. 'Enumer' → logprob: -22.25007438659668
    9. '.enumer' → logprob: -22.25007438659668
    10. 'import' → logprob: -22.62507438659668

Token 1347: '(points' (ID: 72131)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.00024370834580622613
    2. ' points' → logprob: -8.500244140625
    3. '(points' → logprob: -10.125244140625
    4. '
' → logprob: -16.875244140625
    5. '	points' → logprob: -17.000244140625
    6. '   ' → logprob: -18.625244140625
    7. 'pts' → logprob: -19.000244140625
    8. '.points' → logprob: -19.125244140625
    9. '[' → logprob: -19.750244140625
    10. 'enumer' → logprob: -20.000244140625

Token 1348: ')]
' (ID: 11587)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.062109749764204025
    2. ']' → logprob: -2.8121097087860107
    3. ']
' → logprob: -9.31210994720459
    4. ' ]
' → logprob: -10.56210994720459
    5. ')]
' → logprob: -11.93710994720459
    6. ')]' → logprob: -12.06210994720459
    7. ']

' → logprob: -12.06210994720459
    8. '       ' → logprob: -12.18710994720459
    9. ' ]' → logprob: -14.06210994720459
    10. '   ' → logprob: -14.68710994720459

Token 1349: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32226476073265076
    2. 'pts' → logprob: -1.9472647905349731
    3. '
' → logprob: -2.0722646713256836
    4. ' pts' → logprob: -5.322264671325684
    5. '   ' → logprob: -7.072264671325684
    6. '        
' → logprob: -7.822264671325684
    7. '```' → logprob: -8.697264671325684
    8. 'pt' → logprob: -9.072264671325684
    9. '_pts' → logprob: -9.572264671325684
    10. '    
' → logprob: -9.697264671325684

Token 1350: ' pts' (ID: 66515)
  Prédit: 'pts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' (adapté à ' pts') → logprob: -0.006619215942919254
    2. ' pts' → logprob: -5.506619453430176
    3. '       ' → logprob: -6.006619453430176
    4. '   ' → logprob: -10.381619453430176
    5. '
' → logprob: -10.756619453430176
    6. '_pts' → logprob: -11.506619453430176
    7. 'pt' → logprob: -12.256619453430176
    8. '        
' → logprob: -12.881619453430176
    9. '#' → logprob: -13.756619453430176
    10. 'pti' → logprob: -14.381619453430176

Token 1351: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -9.829823102336377e-05
    2. '.' → logprob: -9.75009822845459
    3. 'sort' → logprob: -10.37509822845459
    4. '=' → logprob: -11.75009822845459
    5. ' .' → logprob: -14.87509822845459
    6. ' sort' → logprob: -15.12509822845459
    7. '	sort' → logprob: -16.000099182128906
    8. 'sorted' → logprob: -17.500099182128906
    9. ' =' → logprob: -17.875099182128906
    10. '.=' → logprob: -17.875099182128906

Token 1352: '(key' (ID: 8932)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4750242531299591
    2. '()
' → logprob: -1.2250242233276367
    3. '(key' → logprob: -2.9750242233276367
    4. 'key' → logprob: -4.350024223327637
    5. '       ' → logprob: -4.975024223327637
    6. 'def' → logprob: -5.100024223327637
    7. ',' → logprob: -6.600024223327637
    8. '   ' → logprob: -6.725024223327637
    9. '        
' → logprob: -6.975024223327637
    10. '
' → logprob: -7.350024223327637

Token 1353: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.0009408812038600445
    2. '=' → logprob: -7.250940799713135
    3. 'lambda' → logprob: -8.375941276550293
    4. ' lambda' → logprob: -15.125941276550293
    5. '(lambda' → logprob: -15.875941276550293
    6. '=
' → logprob: -15.875941276550293
    7. 'operator' → logprob: -18.000940322875977
    8. ' =' → logprob: -19.250940322875977
    9. '_lambda' → logprob: -19.625940322875977
    10. '=None' → logprob: -20.500940322875977

Token 1354: ' x' (ID: 1215)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.47102829813957214
    2. 'x' → logprob: -1.0960283279418945
    3. 'pt' → logprob: -3.5960283279418945
    4. 'p' → logprob: -4.8460283279418945
    5. ' lambda' → logprob: -5.4710283279418945
    6. 'pts' → logprob: -7.0960283279418945
    7. '(lambda' → logprob: -7.4710283279418945
    8. ' x' → logprob: -8.596028327941895
    9. 'xy' → logprob: -9.471028327941895
    10. ' pt' → logprob: -9.846028327941895

Token 1355: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004842341877520084
    2. ':(' → logprob: -5.504842281341553
    3. '(x' → logprob: -7.754842281341553
    4. '(' → logprob: -8.379842758178711
    5. ':x' → logprob: -10.379842758178711
    6. '=(' → logprob: -10.754842758178711
    7. ' (' → logprob: -11.129842758178711
    8. 'x' → logprob: -11.504842758178711
    9. '=lambda' → logprob: -12.004842758178711
    10. ' :' → logprob: -12.004842758178711

Token 1356: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.4328834116458893
    2. '(' → logprob: -1.432883381843567
    3. '(lambda' → logprob: -2.1828835010528564
    4. ' (' → logprob: -10.682883262634277
    5. 'lambda' → logprob: -12.807883262634277
    6. '(xx' → logprob: -14.057883262634277
    7. '(px' → logprob: -15.182883262634277
    8. '(p' → logprob: -15.557883262634277
    9. '(y' → logprob: -15.807883262634277
    10. '(i' → logprob: -16.182884216308594

Token 1357: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0003706126008182764
    2. ' x' → logprob: -8.375370979309082
    3. '(x' → logprob: -8.875370979309082
    4. ' (' → logprob: -15.625370979309082
    5. '(' → logprob: -17.000370025634766
    6. '	x' → logprob: -17.625370025634766
    7. '   ' → logprob: -17.875370025634766
    8. '
' → logprob: -19.125370025634766
    9. ')x' → logprob: -19.375370025634766
    10. '{x' → logprob: -19.625370025634766

Token 1358: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18285755813121796
    2. 'x' → logprob: -2.1828575134277344
    3. '0' → logprob: -2.9328575134277344
    4. ' x' → logprob: -6.932857513427734
    5. '1' → logprob: -9.932857513427734
    6. ' ' → logprob: -10.307857513427734
    7. '(x' → logprob: -10.432857513427734
    8. ':' → logprob: -11.182857513427734
    9. '(' → logprob: -11.557857513427734
    10. ',' → logprob: -12.057857513427734

Token 1359: '0' (ID: 15)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.014233439229428768
    2. '0' → logprob: -4.264233589172363
    3. ' x' → logprob: -9.639233589172363
    4. '(x' → logprob: -13.639233589172363
    5. '1' → logprob: -13.889233589172363
    6. '	x' → logprob: -14.264233589172363
    7. '[' → logprob: -14.389233589172363
    8. ' ' → logprob: -14.514233589172363
    9. 'p' → logprob: -15.639233589172363
    10. '   ' → logprob: -15.889233589172363

Token 1360: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004766671918332577
    2. ',x' → logprob: -7.750476837158203
    3. ' ,' → logprob: -10.125476837158203
    4. ',
' → logprob: -12.125476837158203
    5. '
' → logprob: -15.375476837158203
    6. 'x' → logprob: -15.500476837158203
    7. ' x' → logprob: -17.000476837158203
    8. '),' → logprob: -18.125476837158203
    9. ')' → logprob: -18.250476837158203
    10. '<|end|>' → logprob: -18.375476837158203

Token 1361: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00317783304490149
    2. ' x' → logprob: -5.753177642822266
    3. '   ' → logprob: -16.003177642822266
    4. '	x' → logprob: -17.628177642822266
    5. ' ' → logprob: -17.753177642822266
    6. '(x' → logprob: -18.003177642822266
    7. '    ' → logprob: -18.253177642822266
    8. '  ' → logprob: -18.753177642822266
    9. '     ' → logprob: -20.128177642822266
    10. '       ' → logprob: -20.253177642822266

Token 1362: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.5941604690160602e-05
    2. 'x' → logprob: -10.750025749206543
    3. ',' → logprob: -13.250025749206543
    4. ':' → logprob: -14.000025749206543
    5. '1' → logprob: -14.000025749206543
    6. '   ' → logprob: -15.500025749206543
    7. '[
' → logprob: -15.500025749206543
    8. '#' → logprob: -15.625025749206543
    9. ',x' → logprob: -15.625025749206543
    10. '.x' → logprob: -16.75002670288086

Token 1363: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.625000953674316
    3. '   ' → logprob: -15.500000953674316
    4. ' ' → logprob: -16.375001907348633
    5. ',' → logprob: -17.000001907348633
    6. '#' → logprob: -17.125001907348633
    7. '```' → logprob: -17.312501907348633
    8. '.' → logprob: -17.437501907348633
    9. '<|end|>' → logprob: -17.500001907348633
    10. '' → logprob: -17.875001907348633

Token 1364: ']))

' (ID: 92947)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.04886984825134277
    2. '))
' → logprob: -3.0488698482513428
    3. '))

' → logprob: -9.173870086669922
    4. '0' → logprob: -10.048870086669922
    5. ')' → logprob: -10.548870086669922
    6. '))
' → logprob: -10.548870086669922
    7. ' ))' → logprob: -11.048870086669922
    8. ',' → logprob: -11.048870086669922
    9. '))


' → logprob: -11.798870086669922
    10. ')))' → logprob: -12.048870086669922

Token 1365: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0868057981133461
    2. '
' → logprob: -2.711805820465088
    3. 'def' → logprob: -4.336805820465088
    4. '   ' → logprob: -5.961805820465088
    5. '```' → logprob: -7.461805820465088
    6. 'n' → logprob: -8.58680534362793
    7. '        
' → logprob: -8.96180534362793
    8. '    
' → logprob: -9.46180534362793
    9. '``' → logprob: -9.96180534362793
    10. '

' → logprob: -10.21180534362793

Token 1366: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.2526630759239197
    2. 'lower' → logprob: -1.5026631355285645
    3. '       ' → logprob: -8.127662658691406
    4. '   ' → logprob: -8.377662658691406
    5. '#' → logprob: -9.002662658691406
    6. ' def' → logprob: -9.627662658691406
    7. ' lower' → logprob: -11.502662658691406
    8. '
' → logprob: -12.252662658691406
    9. 'upper' → logprob: -13.127662658691406
    10. '        
' → logprob: -13.627662658691406

Token 1367: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.0013204771094024181
    2. 'build' → logprob: -8.001320838928223
    3. 'orientation' → logprob: -8.126320838928223
    4. ' cross' → logprob: -8.376320838928223
    5. 'cc' → logprob: -8.876320838928223
    6. 'is' → logprob: -9.001320838928223
    7. 'turn' → logprob: -9.501320838928223
    8. '_cross' → logprob: -10.251320838928223
    9. 'half' → logprob: -10.376320838928223
    10. 'orient' → logprob: -11.251320838928223

Token 1368: '(o' (ID: 18928)
  Prédit: '(o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(o' → logprob: -0.003901480697095394
    2. '(' → logprob: -6.378901481628418
    3. '(a' → logprob: -6.503901481628418
    4. '(u' → logprob: -8.378901481628418
    5. '(
' → logprob: -8.628901481628418
    6. '(p' → logprob: -8.878901481628418
    7. '	o' → logprob: -10.378901481628418
    8. '(prev' → logprob: -10.878901481628418
    9. '(O' → logprob: -11.253901481628418
    10. '((' → logprob: -11.378901481628418

Token 1369: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004035017918795347
    2. ',p' → logprob: -8.75040340423584
    3. ':' → logprob: -9.00040340423584
    4. '(p' → logprob: -10.25040340423584
    5. ' ,' → logprob: -10.50040340423584
    6. '       ' → logprob: -10.62540340423584
    7. '   ' → logprob: -11.62540340423584
    8. 'p' → logprob: -12.87540340423584
    9. ',u' → logprob: -12.87540340423584
    10. 'a' → logprob: -13.25040340423584

Token 1370: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0564331205387134e-05
    2. ' a' → logprob: -11.50001049041748
    3. '   ' → logprob: -15.75001049041748
    4. '	a' → logprob: -16.000011444091797
    5. 'p' → logprob: -16.250011444091797
    6. '(a' → logprob: -16.875011444091797
    7. 'o' → logprob: -17.250011444091797
    8. 'i' → logprob: -17.500011444091797
    9. 'lambda' → logprob: -18.500011444091797
    10. '
' → logprob: -18.625011444091797

Token 1371: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.7053759519476444e-05
    2. ' ,' → logprob: -10.375057220458984
    3. ',p' → logprob: -11.000057220458984
    4. ',b' → logprob: -11.875057220458984
    5. ':' → logprob: -14.375057220458984
    6. 'p' → logprob: -14.750057220458984
    7. '   ' → logprob: -14.750057220458984
    8. ',t' → logprob: -15.875057220458984
    9. ',
' → logprob: -16.000057220458984
    10. 'b' → logprob: -16.125057220458984

Token 1372: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00012749579036608338
    2. 'o' → logprob: -9.500127792358398
    3. ' b' → logprob: -10.000127792358398
    4. 'n' → logprob: -12.875127792358398
    5. 'd' → logprob: -13.500127792358398
    6. 't' → logprob: -13.750127792358398
    7. 'i' → logprob: -14.375127792358398
    8. 'p' → logprob: -14.625127792358398
    9. '   ' → logprob: -15.125127792358398
    10. 'l' → logprob: -15.375127792358398

Token 1373: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.8148253560066223
    2. ',' → logprob: -0.9398253560066223
    3. '):' → logprob: -1.8148252964019775
    4. ')' → logprob: -5.814825534820557
    5. '   ' → logprob: -8.064825057983398
    6. ':' → logprob: -8.814825057983398
    7. '       ' → logprob: -9.189825057983398
    8. '):
' → logprob: -9.314825057983398
    9. ' ,' → logprob: -10.439825057983398
    10. '):

' → logprob: -11.064825057983398

Token 1374: '           ' (ID: 352)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5712039470672607
    2. '(o' → logprob: -1.8212039470672607
    3. '           ' → logprob: -2.0712039470672607
    4. ' return' → logprob: -2.4462039470672607
    5. 'return' → logprob: -3.5712039470672607
    6. '   ' → logprob: -4.19620418548584
    7. '(p' → logprob: -4.57120418548584
    8. '(a' → logprob: -5.57120418548584
    9. '(x' → logprob: -6.69620418548584
    10. ' ' → logprob: -7.57120418548584

Token 1375: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.39240145683288574
    2. ' return' → logprob: -1.6424014568328857
    3. ' (' → logprob: -2.1424014568328857
    4. '(x' → logprob: -5.392401695251465
    5. '           ' → logprob: -5.517401695251465
    6. '   ' → logprob: -5.767401695251465
    7. '(o' → logprob: -6.642401695251465
    8. ' ' → logprob: -8.142401695251465
    9. '               ' → logprob: -9.142401695251465
    10. '(a' → logprob: -9.642401695251465

Token 1376: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.4743650257587433
    2. ' (' → logprob: -0.9743649959564209
    3. '(o' → logprob: -8.224365234375
    4. '   ' → logprob: -11.724365234375
    5. '(x' → logprob: -12.099365234375
    6. ' ' → logprob: -12.349365234375
    7. '(ax' → logprob: -14.349365234375
    8. '  ' → logprob: -14.724365234375
    9. '(b' → logprob: -14.849365234375
    10. '(ab' → logprob: -16.224365234375

Token 1377: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.4121114822482923e-06
    2. '(a' → logprob: -13.250003814697266
    3. ' a' → logprob: -13.625003814697266
    4. '   ' → logprob: -15.000003814697266
    5. '	a' → logprob: -16.875003814697266
    6. 'x' → logprob: -18.500003814697266
    7. 'o' → logprob: -18.625003814697266
    8. '  ' → logprob: -18.875003814697266
    9. '    
' → logprob: -19.250003814697266
    10. ')a' → logprob: -19.375003814697266

Token 1378: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008989581256173551
    2. 'x' → logprob: -7.625898838043213
    3. '.x' → logprob: -8.000899314880371
    4. '.' → logprob: -9.625899314880371
    5. '   ' → logprob: -12.250899314880371
    6. '0' → logprob: -12.750899314880371
    7. '[
' → logprob: -13.500899314880371
    8. '```' → logprob: -15.125899314880371
    9. '1' → logprob: -16.500898361206055
    10. ' [' → logprob: -16.625898361206055

Token 1379: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.380904672667384e-05
    2. 'x' → logprob: -10.375033378601074
    3. '
' → logprob: -13.625033378601074
    4. '[' → logprob: -14.125033378601074
    5. ' ' → logprob: -15.000033378601074
    6. '   ' → logprob: -15.750033378601074
    7. '1' → logprob: -16.62503433227539
    8. '```' → logprob: -17.12503433227539
    9. ' x' → logprob: -18.12503433227539
    10. '۰' → logprob: -18.25003433227539

Token 1380: ']-' (ID: 27107)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.685412585735321
    2. ' -' → logprob: -0.935412585735321
    3. '-' → logprob: -2.310412645339966
    4. '0' → logprob: -5.560412406921387
    5. 'x' → logprob: -8.435412406921387
    6. '   ' → logprob: -8.685412406921387
    7. ' ' → logprob: -9.810412406921387
    8. '1' → logprob: -10.060412406921387
    9. '           ' → logprob: -10.935412406921387
    10. '.' → logprob: -11.185412406921387

Token 1381: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.0001093841710826382
    2. ' o' → logprob: -9.125109672546387
    3. '	o' → logprob: -14.875109672546387
    4. '{o' → logprob: -18.25010871887207
    5. '(o' → logprob: -18.25010871887207
    6. ''o' → logprob: -18.25010871887207
    7. ')o' → logprob: -18.25010871887207
    8. '_o' → logprob: -19.37510871887207
    9. ',o' → logprob: -19.37510871887207
    10. '[o' → logprob: -19.37510871887207

Token 1382: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005543439765460789
    2. '0' → logprob: -7.50055456161499
    3. '.' → logprob: -14.000554084777832
    4. 'x' → logprob: -15.000554084777832
    5. '[
' → logprob: -16.50055503845215
    6. '1' → logprob: -17.37555503845215
    7. ' ' → logprob: -17.50055503845215
    8. '(' → logprob: -18.00055503845215
    9. '<|end|>' → logprob: -18.12555503845215
    10. '#' → logprob: -18.12555503845215

Token 1383: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -14.750000953674316
    3. ' ' → logprob: -15.875000953674316
    4. '۰' → logprob: -19.5
    5. '   ' → logprob: -19.5
    6. '```' → logprob: -20.0
    7. '
' → logprob: -20.125
    8. 'x' → logprob: -20.375
    9. 'token' → logprob: -20.875
    10. '{' → logprob: -20.875

Token 1384: '])' (ID: 4636)
  Prédit: ')*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')*(' → logprob: -0.06434112787246704
    2. ')' → logprob: -2.8143410682678223
    3. ')*' → logprob: -6.189341068267822
    4. ',' → logprob: -9.31434154510498
    5. '       ' → logprob: -9.43934154510498
    6. ' )' → logprob: -9.93934154510498
    7. '           ' → logprob: -10.06434154510498
    8. '   ' → logprob: -10.18934154510498
    9. 'def' → logprob: -12.43934154510498
    10. '*(' → logprob: -12.93934154510498

Token 1385: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.07206925004720688
    2. ')*(' → logprob: -2.9470691680908203
    3. ' *' → logprob: -4.32206916809082
    4. '*' → logprob: -6.44706916809082
    5. '           ' → logprob: -6.94706916809082
    6. ')' → logprob: -6.94706916809082
    7. 'def' → logprob: -9.07206916809082
    8. '   ' → logprob: -9.82206916809082
    9. '       ' → logprob: -10.07206916809082
    10. ' *(' → logprob: -10.94706916809082

Token 1386: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4741422235965729
    2. '(b' → logprob: -0.9741421937942505
    3. ' (' → logprob: -9.724142074584961
    4. ' b' → logprob: -12.599142074584961
    5. '   ' → logprob: -13.599142074584961
    6. '	b' → logprob: -14.599142074584961
    7. '(' → logprob: -16.09914207458496
    8. '           ' → logprob: -16.34914207458496
    9. '       ' → logprob: -17.09914207458496
    10. '[b' → logprob: -17.09914207458496

Token 1387: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.292907877039397e-06
    2. '0' → logprob: -12.87500286102295
    3. '1' → logprob: -14.87500286102295
    4. '[
' → logprob: -15.50000286102295
    5. '.' → logprob: -16.875003814697266
    6. 'def' → logprob: -17.750003814697266
    7. '(' → logprob: -18.000003814697266
    8. '   ' → logprob: -18.500003814697266
    9. '2' → logprob: -18.750003814697266
    10. '```' → logprob: -18.875003814697266

Token 1388: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.017081398516893387
    2. '[' → logprob: -4.392081260681152
    3. '1' → logprob: -5.392081260681152
    4. '   ' → logprob: -12.267081260681152
    5. ' ' → logprob: -13.267081260681152
    6. '(' → logprob: -14.392081260681152
    7. '
' → logprob: -14.517081260681152
    8. '```' → logprob: -15.142081260681152
    9. '  ' → logprob: -15.392081260681152
    10. 'x' → logprob: -15.642081260681152

Token 1389: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0869939848780632
    2. ' -' → logprob: -2.961993932723999
    3. '-o' → logprob: -3.461993932723999
    4. '[' → logprob: -8.711994171142578
    5. '()-' → logprob: -10.586994171142578
    6. '-u' → logprob: -11.461994171142578
    7. '<|end|>' → logprob: -12.836994171142578
    8. '<|end|>' → logprob: -12.836994171142578
    9. '```' → logprob: -13.086994171142578
    10. ' ' → logprob: -13.211994171142578

Token 1390: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -3.531315314830863e-06
    2. ' o' → logprob: -12.875003814697266
    3. '	o' → logprob: -14.500003814697266
    4. ')o' → logprob: -16.375003814697266
    5. ''o' → logprob: -16.500003814697266
    6. '[o' → logprob: -17.125003814697266
    7. '(o' → logprob: -17.125003814697266
    8. '_o' → logprob: -17.125003814697266
    9. '{o' → logprob: -17.500003814697266
    10. '-o' → logprob: -18.875003814697266

Token 1391: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.21226269006729126
    2. '1' → logprob: -1.7122626304626465
    3. '0' → logprob: -4.5872626304626465
    4. '-' → logprob: -7.4622626304626465
    5. '(' → logprob: -11.587263107299805
    6. '   ' → logprob: -11.962263107299805
    7. ']' → logprob: -12.587263107299805
    8. '```' → logprob: -12.712263107299805
    9. 'o' → logprob: -13.212263107299805
    10. ' ' → logprob: -13.337263107299805

Token 1392: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017084944993257523
    2. '1' → logprob: -6.376708507537842
    3. 'o' → logprob: -12.251708030700684
    4. '   ' → logprob: -14.626708030700684
    5. ' ' → logprob: -14.626708030700684
    6. '[' → logprob: -14.876708030700684
    7. '
' → logprob: -16.626708984375
    8. '```' → logprob: -16.626708984375
    9. '  ' → logprob: -17.376708984375
    10. '#' → logprob: -17.626708984375

Token 1393: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003370118502061814
    2. '-' → logprob: -9.375336647033691
    3. ')-' → logprob: -9.875336647033691
    4. ' -' → logprob: -10.000336647033691
    5. ')-(' → logprob: -10.125336647033691
    6. '           ' → logprob: -10.250336647033691
    7. ' )' → logprob: -10.375336647033691
    8. '0' → logprob: -10.500336647033691
    9. '          ' → logprob: -12.750336647033691
    10. ' ' → logprob: -13.250336647033691

Token 1394: '-(' (ID: 18825)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.18084050714969635
    2. '-' → logprob: -1.8058404922485352
    3. '          ' → logprob: -7.680840492248535
    4. '           ' → logprob: -7.680840492248535
    5. '-(' → logprob: -9.805840492248535
    6. '            ' → logprob: -10.805840492248535
    7. '(' → logprob: -11.305840492248535
    8. '-
' → logprob: -11.805840492248535
    9. '         ' → logprob: -11.930840492248535
    10. '        ' → logprob: -11.930840492248535

Token 1395: 'a' (ID: 64)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.08097945898771286
    2. 'a' → logprob: -2.580979347229004
    3. 'o' → logprob: -6.205979347229004
    4. ' b' → logprob: -9.955979347229004
    5. '(b' → logprob: -11.330979347229004
    6. ' a' → logprob: -12.330979347229004
    7. '(a' → logprob: -12.830979347229004
    8. '(o' → logprob: -13.580979347229004
    9. ' o' → logprob: -13.830979347229004
    10. '	o' → logprob: -15.330979347229004

Token 1396: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5451681974809617e-05
    2. '<|end|>' → logprob: -12.125015258789062
    3. '<|end|>' → logprob: -12.250015258789062
    4. '0' → logprob: -13.125015258789062
    5. 'import' → logprob: -14.125015258789062
    6. '(' → logprob: -14.625015258789062
    7. 'def' → logprob: -15.125015258789062
    8. '...' → logprob: -15.125015258789062
    9. '   ' → logprob: -15.250015258789062
    10. 'x' → logprob: -15.250015258789062

Token 1397: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05490812286734581
    2. '[' → logprob: -2.929908037185669
    3. '1' → logprob: -10.80490779876709
    4. ' ' → logprob: -13.05490779876709
    5. 'x' → logprob: -14.05490779876709
    6. '#' → logprob: -14.67990779876709
    7. '   ' → logprob: -15.05490779876709
    8. '```' → logprob: -15.05490779876709
    9. '(' → logprob: -15.17990779876709
    10. ')' → logprob: -15.30490779876709

Token 1398: ']-' (ID: 27107)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20608921349048615
    2. '-' → logprob: -1.7060892581939697
    3. ' -' → logprob: -5.456089019775391
    4. '<|end|>' → logprob: -7.956089019775391
    5. '<|end|>' → logprob: -11.45608901977539
    6. ' ' → logprob: -12.08108901977539
    7. '-o' → logprob: -12.58108901977539
    8. '-[' → logprob: -12.83108901977539
    9. '   ' → logprob: -13.20608901977539
    10. '#' → logprob: -13.20608901977539

Token 1399: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -7.896309739408025e-07
    2. ' o' → logprob: -14.750000953674316
    3. '<|end|>' → logprob: -15.500000953674316
    4. '	o' → logprob: -16.75
    5. '{o' → logprob: -17.625
    6. '<|end|>' → logprob: -17.875
    7. '   ' → logprob: -18.0
    8. ')o' → logprob: -18.875
    9. '0' → logprob: -19.0
    10. '```' → logprob: -19.25

Token 1400: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008618000894784927
    2. '1' → logprob: -4.758617877960205
    3. '[
' → logprob: -14.133618354797363
    4. '0' → logprob: -14.258618354797363
    5. '   ' → logprob: -15.133618354797363
    6. '-' → logprob: -15.383618354797363
    7. '```' → logprob: -15.383618354797363
    8. '(' → logprob: -15.508618354797363
    9. '#' → logprob: -16.133617401123047
    10. '][' → logprob: -16.133617401123047

Token 1401: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19104278087615967
    2. '1' → logprob: -2.066042900085449
    3. 'o' → logprob: -3.066042900085449
    4. '[' → logprob: -7.566042900085449
    5. ' o' → logprob: -10.81604290008545
    6. '	o' → logprob: -11.06604290008545
    7. '[o' → logprob: -11.31604290008545
    8. '{o' → logprob: -11.56604290008545
    9. ' ' → logprob: -11.81604290008545
    10. '   ' → logprob: -12.19104290008545

Token 1402: '])' (ID: 4636)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2092597335577011
    2. ')' → logprob: -2.5842597484588623
    3. ')-(' → logprob: -2.9592597484588623
    4. ',' → logprob: -4.084259510040283
    5. ')o' → logprob: -4.209259510040283
    6. ')*(' → logprob: -4.334259510040283
    7. ')[' → logprob: -5.584259510040283
    8. ' -' → logprob: -5.709259510040283
    9. '-o' → logprob: -5.834259510040283
    10. '0' → logprob: -6.459259510040283

Token 1403: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.7977099418640137
    2. 'def' → logprob: -1.6727099418640137
    3. '(' → logprob: -1.9227099418640137
    4. '[' → logprob: -3.0477099418640137
    5. ' *' → logprob: -3.1727099418640137
    6. '       ' → logprob: -3.4227099418640137
    7. '<|end|>' → logprob: -3.6727099418640137
    8. ',' → logprob: -4.297709941864014
    9. '*' → logprob: -4.547709941864014
    10. '
' → logprob: -5.047709941864014

Token 1404: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -8.41866585687967e-06
    2. 'o' → logprob: -11.750008583068848
    3. ' b' → logprob: -14.625008583068848
    4. '
' → logprob: -18.00000762939453
    5. '(b' → logprob: -18.37500762939453
    6. '0' → logprob: -19.37500762939453
    7. '```' → logprob: -19.37500762939453
    8. '	b' → logprob: -19.50000762939453
    9. '   ' → logprob: -19.62500762939453
    10. 'a' → logprob: -19.62500762939453

Token 1405: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008120091515593231
    2. '0' → logprob: -7.12581205368042
    3. '[
' → logprob: -12.875811576843262
    4. '1' → logprob: -13.500811576843262
    5. '   ' → logprob: -14.000811576843262
    6. '```' → logprob: -14.625811576843262
    7. 'def' → logprob: -14.875811576843262
    8. 'import' → logprob: -14.875811576843262
    9. 'x' → logprob: -14.875811576843262
    10. '(' → logprob: -15.125811576843262

Token 1406: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003037650021724403
    2. '1' → logprob: -8.250304222106934
    3. '[' → logprob: -10.125304222106934
    4. '   ' → logprob: -13.625304222106934
    5. '
' → logprob: -14.500304222106934
    6. ' ' → logprob: -14.500304222106934
    7. '```' → logprob: -16.125303268432617
    8. '2' → logprob: -16.500303268432617
    9. '	' → logprob: -17.500303268432617
    10. '-' → logprob: -17.875303268432617

Token 1407: ']-' (ID: 27107)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009380138479173183
    2. '-' → logprob: -4.759380340576172
    3. ' -' → logprob: -7.384380340576172
    4. '-o' → logprob: -9.134380340576172
    5. '-[' → logprob: -11.259380340576172
    6. '0' → logprob: -11.634380340576172
    7. '<|end|>' → logprob: -12.634380340576172
    8. '```' → logprob: -13.384380340576172
    9. ')[' → logprob: -13.759380340576172
    10. '][' → logprob: -13.759380340576172

Token 1408: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -6.2729995988775045e-06
    2. ' o' → logprob: -12.125006675720215
    3. '	o' → logprob: -14.750006675720215
    4. '0' → logprob: -15.750006675720215
    5. '[o' → logprob: -15.875006675720215
    6. '
' → logprob: -16.7500057220459
    7. '{o' → logprob: -16.8750057220459
    8. ')o' → logprob: -17.3750057220459
    9. '_o' → logprob: -17.5000057220459
    10. ''o' → logprob: -17.7500057220459

Token 1409: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10026102513074875
    2. '0' → logprob: -2.3502609729766846
    3. '```' → logprob: -10.850260734558105
    4. '-' → logprob: -11.725260734558105
    5. '[
' → logprob: -11.850260734558105
    6. ',' → logprob: -11.975260734558105
    7. '1' → logprob: -12.225260734558105
    8. '.' → logprob: -13.225260734558105
    9. ' [' → logprob: -13.975260734558105
    10. ' ' → logprob: -13.975260734558105

Token 1410: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1756367712223437e-05
    2. '[' → logprob: -11.500011444091797
    3. '```' → logprob: -14.375011444091797
    4. ' ' → logprob: -14.750011444091797
    5. '   ' → logprob: -15.500011444091797
    6. '{' → logprob: -16.750011444091797
    7. ')' → logprob: -17.125011444091797
    8. '1' → logprob: -17.187511444091797
    9. '۰' → logprob: -17.250011444091797
    10. 'o' → logprob: -17.250011444091797

Token 1411: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.04921172559261322
    2. ')' → logprob: -3.0492117404937744
    3. '])
' → logprob: -8.424211502075195
    4. '       ' → logprob: -8.799211502075195
    5. '))' → logprob: -9.674211502075195
    6. ')
' → logprob: -10.049211502075195
    7. ' ])' → logprob: -10.299211502075195
    8. ')]' → logprob: -10.549211502075195
    9. ')])' → logprob: -10.674211502075195
    10. ']' → logprob: -11.049211502075195

Token 1412: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31406235694885254
    2. '       ' → logprob: -1.3140623569488525
    3. '

' → logprob: -8.439062118530273
    4. '   ' → logprob: -8.564062118530273
    5. '```' → logprob: -8.689062118530273
    6. '
' → logprob: -9.189062118530273
    7. '        
' → logprob: -9.814062118530273
    8. '    
' → logprob: -10.564062118530273
    9. '  
' → logprob: -11.564062118530273
    10. '``' → logprob: -12.064062118530273

Token 1413: ' lower' (ID: 6931)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' (adapté à ' lower') → logprob: -0.05479222908616066
    2. '       ' → logprob: -3.0547921657562256
    3. '   ' → logprob: -5.679792404174805
    4. 'l' → logprob: -6.554792404174805
    5. '
' → logprob: -7.679792404174805
    6. 'upper' → logprob: -8.179792404174805
    7. ' lower' → logprob: -8.304792404174805
    8. 'h' → logprob: -8.929792404174805
    9. 'def' → logprob: -9.179792404174805
    10. 'L' → logprob: -9.929792404174805

Token 1414: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.042986635118722916
    2. '=' → logprob: -3.6679866313934326
    3. '.append' → logprob: -4.417986869812012
    4. '=[]' → logprob: -6.042986869812012
    5. '=[]
' → logprob: -6.542986869812012
    6. ':' → logprob: -8.417986869812012
    7. '.' → logprob: -8.417986869812012
    8. '   ' → logprob: -9.167986869812012
    9. ' ' → logprob: -10.292986869812012
    10. '  ' → logprob: -10.792986869812012

Token 1415: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0041067772544920444
    2. '[]
' → logprob: -5.5041069984436035
    3. ' []' → logprob: -10.504106521606445
    4. '[]

' → logprob: -14.504106521606445
    5. '[' → logprob: -15.379106521606445
    6. ' []
' → logprob: -16.254106521606445
    7. '[]"' → logprob: -16.754106521606445
    8. '[])' → logprob: -17.129106521606445
    9. '[]}' → logprob: -17.129106521606445
    10. '[]>' → logprob: -18.004106521606445

Token 1416: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5039605498313904
    2. '[' → logprob: -1.5039606094360352
    3. '[(' → logprob: -3.753960609436035
    4. '.append' → logprob: -3.878960609436035
    5. '[
' → logprob: -4.128960609436035
    6. '
' → logprob: -4.128960609436035
    7. ',' → logprob: -4.503960609436035
    8. '[]
' → logprob: -4.628960609436035
    9. 'for' → logprob: -4.878960609436035
    10. '=' → logprob: -4.878960609436035

Token 1417: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.22752900421619415
    2. '       ' → logprob: -1.8525290489196777
    3. ' for' → logprob: -3.1025290489196777
    4. '(' → logprob: -7.977529048919678
    5. 'while' → logprob: -8.10252857208252
    6. '   ' → logprob: -8.35252857208252
    7. 'def' → logprob: -8.60252857208252
    8. ' (' → logprob: -9.10252857208252
    9. '(o' → logprob: -9.22752857208252
    10. '(i' → logprob: -9.60252857208252

Token 1418: ' p' (ID: 275)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.019581448286771774
    2. 'p' → logprob: -4.519581317901611
    3. ' x' → logprob: -5.644581317901611
    4. '_,' → logprob: -5.894581317901611
    5. 'pt' → logprob: -6.394581317901611
    6. '(_,' → logprob: -8.51958179473877
    7. '   ' → logprob: -9.14458179473877
    8. ' p' → logprob: -9.39458179473877
    9. '(x' → logprob: -10.26958179473877
    10. ' _,' → logprob: -10.26958179473877

Token 1419: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0016970803262665868
    2. 'in' → logprob: -6.626697063446045
    3. 'p' → logprob: -8.626697540283203
    4. '   ' → logprob: -9.501697540283203
    5. '_' → logprob: -10.876697540283203
    6. '
' → logprob: -11.001697540283203
    7. ' ' → logprob: -11.251697540283203
    8. '[' → logprob: -11.376697540283203
    9. 'x' → logprob: -11.626697540283203
    10. 't' → logprob: -12.126697540283203

Token 1420: ' pts' (ID: 66515)
  Prédit: 'pts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' → logprob: -0.00012368128227535635
    2. ' pts' → logprob: -9.000123977661133
    3. '_pts' → logprob: -15.500123977661133
    4. '[' → logprob: -17.375123977661133
    5. 'Pts' → logprob: -17.875123977661133
    6. 'pt' → logprob: -17.875123977661133
    7. '   ' → logprob: -19.000123977661133
    8. 'ts' → logprob: -20.875123977661133
    9. 'points' → logprob: -21.000123977661133
    10. '
' → logprob: -21.000123977661133

Token 1421: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.04228844866156578
    2. ':' → logprob: -3.2922885417938232
    3. ' in' → logprob: -6.542288303375244
    4. ',' → logprob: -7.167288303375244
    5. '.append' → logprob: -7.792288303375244
    6. '       ' → logprob: -7.917288303375244
    7. '   ' → logprob: -8.167288780212402
    8. '           ' → logprob: -8.167288780212402
    9. ' :
' → logprob: -8.167288780212402
    10. '):
' → logprob: -9.042288780212402

Token 1422: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028843475505709648
    2. '   ' → logprob: -4.528843402862549
    3. ' while' → logprob: -4.903843402862549
    4. '       ' → logprob: -5.028843402862549
    5. ' if' → logprob: -6.153843402862549
    6. ' x' → logprob: -8.153843879699707
    7. '```' → logprob: -8.528843879699707
    8. ' (' → logprob: -8.653843879699707
    9. ' ' → logprob: -8.653843879699707
    10. '    ' → logprob: -8.903843879699707

Token 1423: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.5771305561065674
    2. 'while' (adapté à ' while') → logprob: -0.8271305561065674
    3. '       ' → logprob: -7.077130317687988
    4. '           ' → logprob: -8.452130317687988
    5. 'While' → logprob: -9.577130317687988
    6. '   ' → logprob: -10.452130317687988
    7. '	while' → logprob: -10.952130317687988
    8. '               ' → logprob: -11.952130317687988
    9. ' ' → logprob: -12.077130317687988
    10. ' While' → logprob: -13.202130317687988

Token 1424: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.049459438771009445
    2. 'lower' → logprob: -3.299459457397461
    3. ' len' → logprob: -4.549459457397461
    4. ' lower' → logprob: -7.174459457397461
    5. '(len' → logprob: -11.299459457397461
    6. ' ' → logprob: -14.549459457397461
    7. '   ' → logprob: -14.799459457397461
    8. '(lower' → logprob: -14.799459457397461
    9. '  ' → logprob: -15.049459457397461
    10. '	len' → logprob: -15.424459457397461

Token 1425: '(lower' (ID: 146857)
  Prédit: '(lower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lower' → logprob: -0.00015872348740231246
    2. 'lower' → logprob: -8.750158309936523
    3. ' lower' → logprob: -15.875158309936523
    4. '(' → logprob: -16.875158309936523
    5. '(low' → logprob: -19.500158309936523
    6. '.lower' → logprob: -19.500158309936523
    7. 'Lower' → logprob: -19.875158309936523
    8. '_lower' → logprob: -20.250158309936523
    9. '(
' → logprob: -21.000158309936523
    10. ' (' → logprob: -22.250158309936523

Token 1426: ')' (ID: 8)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.014603088609874249
    2. ' >=' → logprob: -4.514603137969971
    3. '>' → logprob: -5.764603137969971
    4. ')>=' → logprob: -7.889603137969971
    5. ' >' → logprob: -11.389602661132812
    6. '≥' → logprob: -11.639602661132812
    7. ']>=' → logprob: -11.889602661132812
    8. ')' → logprob: -12.514602661132812
    9. 'and' → logprob: -12.514602661132812
    10. ')>' → logprob: -13.264602661132812

Token 1427: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.079603411257267
    2. '>' → logprob: -2.579603433609009
    3. ' >=' → logprob: -7.45460319519043
    4. 'and' → logprob: -9.20460319519043
    5. ' >' → logprob: -10.95460319519043
    6. '≥' → logprob: -11.70460319519043
    7. ' and' → logprob: -12.20460319519043
    8. ')>=' → logprob: -13.20460319519043
    9. '()>' → logprob: -14.57960319519043
    10. ']>=' → logprob: -14.82960319519043

Token 1428: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '
' → logprob: -17.875036239624023
    4. '1' → logprob: -19.125036239624023
    5. '   ' → logprob: -19.125036239624023
    6. '```' → logprob: -19.625036239624023
    7. '  ' → logprob: -19.875036239624023
    8. '۲' → logprob: -20.750036239624023
    9. ')' → logprob: -21.125036239624023
    10. '(' → logprob: -21.875036239624023

Token 1429: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '
' → logprob: -17.000003814697266
    4. '   ' → logprob: -18.500003814697266
    5. '  ' → logprob: -20.000003814697266
    6. '1' → logprob: -20.125003814697266
    7. '(' → logprob: -20.375003814697266
    8. '```' → logprob: -20.500003814697266
    9. '۲' → logprob: -21.250003814697266
    10. '{
' → logprob: -21.875003814697266

Token 1430: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.1602267622947693
    2. ' and' → logprob: -1.910226821899414
    3. '	and' → logprob: -14.160226821899414
    4. '          ' → logprob: -14.410226821899414
    5. '           ' → logprob: -14.660226821899414
    6. '   ' → logprob: -15.785226821899414
    7. '  ' → logprob: -15.910226821899414
    8. ' ' → logprob: -16.035226821899414
    9. '    ' → logprob: -16.160226821899414
    10. 'a' → logprob: -16.410226821899414

Token 1431: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.01814994215965271
    2. ' cross' → logprob: -4.0181498527526855
    3. '   ' → logprob: -17.018150329589844
    4. 'Cross' → logprob: -18.018150329589844
    5. '.cross' → logprob: -18.393150329589844
    6. '           ' → logprob: -18.893150329589844
    7. ' ' → logprob: -19.143150329589844
    8. '_cross' → logprob: -19.143150329589844
    9. '
' → logprob: -20.518150329589844
    10. '               ' → logprob: -20.643150329589844

Token 1432: '(lower' (ID: 146857)
  Prédit: '(lower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lower' → logprob: -0.00011129142512800172
    2. '(' → logprob: -9.25011157989502
    3. 'lower' → logprob: -11.75011157989502
    4. ' lower' → logprob: -12.50011157989502
    5. '(
' → logprob: -13.12511157989502
    6. '.lower' → logprob: -14.25011157989502
    7. ' (' → logprob: -14.50011157989502
    8. '(low' → logprob: -15.37511157989502
    9. '((' → logprob: -16.250110626220703
    10. '
' → logprob: -17.625110626220703

Token 1433: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00024524700711481273
    2. '(lower' → logprob: -8.875245094299316
    3. '(-' → logprob: -9.250245094299316
    4. 'lower' → logprob: -11.875245094299316
    5. '.lower' → logprob: -13.625245094299316
    6. ' lower' → logprob: -14.750245094299316
    7. '   ' → logprob: -15.750245094299316
    8. '```' → logprob: -15.875245094299316
    9. ' [-' → logprob: -16.250246047973633
    10. '([-' → logprob: -16.375246047973633

Token 1434: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5967798829078674
    2. '1' → logprob: -0.8467798829078674
    3. '-' → logprob: -4.221779823303223
    4. '(-' → logprob: -5.221779823303223
    5. '[-' → logprob: -8.221779823303223
    6. '(' → logprob: -9.096779823303223
    7. '   ' → logprob: -9.721779823303223
    8. 'lower' → logprob: -9.721779823303223
    9. 'len' → logprob: -10.721779823303223
    10. ' -' → logprob: -11.346779823303223

Token 1435: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03268150985240936
    2. '[' → logprob: -3.782681465148926
    3. '[-' → logprob: -4.782681465148926
    4. ' ,' → logprob: -7.282681465148926
    5. '(lower' → logprob: -8.907681465148926
    6. 'lower' → logprob: -10.157681465148926
    7. '[:-' → logprob: -10.532681465148926
    8. '   ' → logprob: -10.782681465148926
    9. '.lower' → logprob: -11.032681465148926
    10. ' lower' → logprob: -11.407681465148926

Token 1436: ' lower' (ID: 6931)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.0009138475870713592
    2. ' lower' → logprob: -7.000913619995117
    3. '(lower' → logprob: -13.250913619995117
    4. '.lower' → logprob: -15.125913619995117
    5. '           ' → logprob: -15.375913619995117
    6. '   ' → logprob: -17.375913619995117
    7. 'upper' → logprob: -17.625913619995117
    8. '                   ' → logprob: -18.750913619995117
    9. '
' → logprob: -18.875913619995117
    10. '               ' → logprob: -19.250913619995117

Token 1437: '[-' (ID: 17503)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.48350244760513306
    2. '[-' → logprob: -0.9835024476051331
    3. ',' → logprob: -5.483502388000488
    4. '(-' → logprob: -5.858502388000488
    5. ' -' → logprob: -6.358502388000488
    6. ' [-' → logprob: -9.108502388000488
    7. '
' → logprob: -9.358502388000488
    8. '   ' → logprob: -9.483502388000488
    9. ' ,' → logprob: -9.733502388000488
    10. ',-' → logprob: -9.858502388000488

Token 1438: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0445127372804563e-05
    2. '2' → logprob: -11.50001049041748
    3. ' ' → logprob: -16.875009536743164
    4. '3' → logprob: -17.000009536743164
    5. '   ' → logprob: -17.375009536743164
    6. '(' → logprob: -18.125009536743164
    7. '  ' → logprob: -18.562509536743164
    8. '     ' → logprob: -18.875009536743164
    9. '    ' → logprob: -19.125009536743164
    10. '0' → logprob: -19.250009536743164

Token 1439: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009889844805002213
    2. ',p' → logprob: -7.625988960266113
    3. 'p' → logprob: -8.000988960266113
    4. ' ,' → logprob: -8.750988960266113
    5. '[' → logprob: -13.250988960266113
    6. '),' → logprob: -13.250988960266113
    7. ' p' → logprob: -13.875988960266113
    8. '   ' → logprob: -14.375988960266113
    9. '],' → logprob: -14.375988960266113
    10. '(),' → logprob: -15.250988960266113

Token 1440: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.008621077984571457
    2. ' p' → logprob: -4.7586212158203125
    3. '(p' → logprob: -12.008621215820312
    4. '(' → logprob: -15.883621215820312
    5. ')p' → logprob: -15.883621215820312
    6. ' (' → logprob: -16.258621215820312
    7. '	p' → logprob: -17.008621215820312
    8. '   ' → logprob: -17.383621215820312
    9. '           ' → logprob: -17.633621215820312
    10. ')' → logprob: -17.633621215820312

Token 1441: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00036775172338820994
    2. ')<' → logprob: -8.000368118286133
    3. ' )' → logprob: -10.500368118286133
    4. '[' → logprob: -13.625368118286133
    5. ')>' → logprob: -14.000368118286133
    6. ')<=' → logprob: -14.250368118286133
    7. ')
' → logprob: -14.625368118286133
    8. ')>=' → logprob: -14.750368118286133
    9. ')!=' → logprob: -15.625368118286133
    10. '   ' → logprob: -15.875368118286133

Token 1442: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.04308779910206795
    2. '<=' → logprob: -3.1680877208709717
    3. ' <' → logprob: -9.79308795928955
    4. '<' → logprob: -10.79308795928955
    5. ')<=' → logprob: -12.16808795928955
    6. ')' → logprob: -12.54308795928955
    7. '(' → logprob: -13.91808795928955
    8. '[' → logprob: -14.41808795928955
    9. ' ≤' → logprob: -14.54308795928955
    10. ' ' → logprob: -14.79308795928955

Token 1443: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -18.875158309936523
    4. '  ' → logprob: -20.500158309936523
    5. '
' → logprob: -20.750158309936523
    6. '۰' → logprob: -22.000158309936523
    7. '  
' → logprob: -22.375158309936523
    8. '1' → logprob: -22.875158309936523
    9. '000' → logprob: -23.250158309936523
    10. '    ' → logprob: -23.375158309936523

Token 1444: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -18.2500057220459
    4. '  ' → logprob: -19.5000057220459
    5. '
' → logprob: -20.5000057220459
    6. '000' → logprob: -20.8750057220459
    7. '1' → logprob: -21.0000057220459
    8. '۰' → logprob: -21.0000057220459
    9. '```' → logprob: -21.1250057220459
    10. '(' → logprob: -21.2500057220459

Token 1445: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16258229315280914
    2. ')' → logprob: -3.1625823974609375
    3. ':
' → logprob: -3.4125823974609375
    4. '):' → logprob: -3.4125823974609375
    5. '):
' → logprob: -4.4125823974609375
    6. '           ' → logprob: -4.6625823974609375
    7. '<|end|>' → logprob: -4.9125823974609375
    8. ' ' → logprob: -5.4125823974609375
    9. ' :' → logprob: -6.5375823974609375
    10. '   ' → logprob: -6.7875823974609375

Token 1446: '               ' (ID: 506)
  Prédit: ' lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lower' → logprob: -0.5914046764373779
    2. '           ' → logprob: -0.8414046764373779
    3. 'lower' → logprob: -4.466404914855957
    4. '   ' → logprob: -6.591404914855957
    5. '               ' → logprob: -6.841404914855957
    6. '(lower' → logprob: -7.216404914855957
    7. '.lower' → logprob: -8.091404914855957
    8. '            ' → logprob: -9.216404914855957
    9. '    ' → logprob: -9.841404914855957
    10. '_lower' → logprob: -10.216404914855957

Token 1447: ' lower' (ID: 6931)
  Prédit: ' lower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lower' → logprob: -0.4740840196609497
    2. 'lower' (adapté à ' lower') → logprob: -0.9740840196609497
    3. '(lower' → logprob: -12.34908390045166
    4. '.lower' → logprob: -13.59908390045166
    5. 'pop' → logprob: -14.34908390045166
    6. '   ' → logprob: -15.09908390045166
    7. '_lower' → logprob: -15.47408390045166
    8. '    ' → logprob: -16.599084854125977
    9. ' pop' → logprob: -16.599084854125977
    10. '```' → logprob: -16.849084854125977

Token 1448: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.0004338877333793789
    2. '.' → logprob: -7.750433921813965
    3. ' .' → logprob: -13.125433921813965
    4. 'pop' → logprob: -13.875433921813965
    5. ' pop' → logprob: -16.37543296813965
    6. '	pop' → logprob: -16.37543296813965
    7. '_pop' → logprob: -16.75043296813965
    8. '.Pop' → logprob: -17.87543296813965
    9. '​.' → logprob: -18.25043296813965
    10. '].' → logprob: -18.87543296813965

Token 1449: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003436872211750597
    2. '()
' → logprob: -8.000343322753906
    3. '()-' → logprob: -12.250343322753906
    4. '(-' → logprob: -12.875343322753906
    5. '()

' → logprob: -14.375343322753906
    6. '())' → logprob: -16.250343322753906
    7. '()\' → logprob: -16.500343322753906
    8. '()
' → logprob: -17.375343322753906
    9. '()`' → logprob: -17.500343322753906
    10. '()]' → logprob: -17.875343322753906

Token 1450: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007802987936884165
    2. ' lower' → logprob: -6.132802963256836
    3. '[' → logprob: -6.632802963256836
    4. '		' → logprob: -7.507802963256836
    5. ' 
' → logprob: -7.507802963256836
    6. '       ' → logprob: -7.507802963256836
    7. '(lower' → logprob: -7.507802963256836
    8. ')' → logprob: -8.382802963256836
    9. 'lower' → logprob: -8.382802963256836
    10. ' ' → logprob: -8.382802963256836

Token 1451: ' lower' (ID: 6931)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' (adapté à ' lower') → logprob: -0.711458146572113
    2. ' lower' → logprob: -0.836458146572113
    3. '           ' → logprob: -2.586458206176758
    4. '(lower' → logprob: -8.461458206176758
    5. '   ' → logprob: -9.461458206176758
    6. '		' → logprob: -10.086458206176758
    7. '.lower' → logprob: -10.086458206176758
    8. '       ' → logprob: -10.086458206176758
    9. '[' → logprob: -10.836458206176758
    10. ' ' → logprob: -10.836458206176758

Token 1452: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.786196975852363e-05
    2. '.' → logprob: -10.250038146972656
    3. ' .' → logprob: -13.125038146972656
    4. '.app' → logprob: -15.000038146972656
    5. 'append' → logprob: -17.000038146972656
    6. '.ap' → logprob: -17.750038146972656
    7. '           ' → logprob: -19.125038146972656
    8. '.push' → logprob: -19.500038146972656
    9. '.Append' → logprob: -20.125038146972656
    10. 'Append' → logprob: -20.250038146972656

Token 1453: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -3.8889261304575484e-06
    2. '(' → logprob: -12.500003814697266
    3. '(lower' → logprob: -17.000003814697266
    4. '(
' → logprob: -17.125003814697266
    5. '((' → logprob: -18.500003814697266
    6. ' (' → logprob: -18.625003814697266
    7. 'p' → logprob: -19.125003814697266
    8. 'lower' → logprob: -20.375003814697266
    9. ' p' → logprob: -21.000003814697266
    10. '(P' → logprob: -21.000003814697266

Token 1454: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.399378566537052e-05
    2. ')
' → logprob: -9.750083923339844
    3. ' )' → logprob: -10.625083923339844
    4. '[' → logprob: -14.000083923339844
    5. '       ' → logprob: -16.000083923339844
    6. '<|end|>' → logprob: -16.750083923339844
    7. '),' → logprob: -17.000083923339844
    8. ')return' → logprob: -17.625083923339844
    9. ')

' → logprob: -17.750083923339844
    10. ')}' → logprob: -17.750083923339844

Token 1455: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034660786390304565
    2. '
' → logprob: -4.409660816192627
    3. ' upper' → logprob: -5.034660816192627
    4. '[' → logprob: -5.159660816192627
    5. '        
' → logprob: -5.784660816192627
    6. ')' → logprob: -6.534660816192627
    7. '   ' → logprob: -6.784660816192627
    8. 'upper' → logprob: -6.909660816192627
    9. '	' → logprob: -7.284660816192627
    10. '<|end|>' → logprob: -7.534660816192627

Token 1456: ' upper' (ID: 13057)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13366860151290894
    2. 'upper' (adapté à ' upper') → logprob: -2.3836686611175537
    3. '
' → logprob: -4.008668422698975
    4. ' upper' → logprob: -4.508668422698975
    5. '        
' → logprob: -6.508668422698975
    6. '   ' → logprob: -6.758668422698975
    7. '```' → logprob: -7.258668422698975
    8. '_upper' → logprob: -9.008668899536133
    9. '    
' → logprob: -9.633668899536133
    10. '.upper' → logprob: -10.508668899536133

Token 1457: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.062107957899570465
    2. '=' → logprob: -2.812108039855957
    3. '=[]' → logprob: -9.062108039855957
    4. '   ' → logprob: -11.687108039855957
    5. '.append' → logprob: -12.062108039855957
    6. '=[]
' → logprob: -12.312108039855957
    7. '.clear' → logprob: -13.562108039855957
    8. '  ' → logprob: -14.187108039855957
    9. ':' → logprob: -14.437108039855957
    10. '.' → logprob: -14.437108039855957

Token 1458: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.018160121515393257
    2. '[]' → logprob: -4.018160343170166
    3. ' []
' → logprob: -11.518159866333008
    4. '[]

' → logprob: -15.393159866333008
    5. ' []' → logprob: -16.768159866333008
    6. '[])
' → logprob: -17.393159866333008
    7. '[' → logprob: -17.768159866333008
    8. '([])
' → logprob: -18.143159866333008
    9. '[
' → logprob: -18.893159866333008
    10. '=[]
' → logprob: -19.893159866333008

Token 1459: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6042488813400269
    2. '       ' → logprob: -1.1042488813400269
    3. ' for' → logprob: -2.1042490005493164
    4. '	for' → logprob: -10.229249000549316
    5. '   ' → logprob: -10.479249000549316
    6. '[' → logprob: -10.479249000549316
    7. '	' → logprob: -10.729249000549316
    8. '```' → logprob: -13.729249000549316
    9. '	   ' → logprob: -14.354249000549316
    10. ' ' → logprob: -14.479249000549316

Token 1460: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0041448804549872875
    2. ' for' → logprob: -5.504144668579102
    3. '       ' → logprob: -9.629144668579102
    4. '   ' → logprob: -14.379144668579102
    5. '	for' → logprob: -16.8791446685791
    6. '```' → logprob: -17.6291446685791
    7. 'pts' → logprob: -18.3791446685791
    8. 'For' → logprob: -18.7541446685791
    9. '           ' → logprob: -18.7541446685791
    10. 'x' → logprob: -19.8791446685791

Token 1461: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.07889066636562347
    2. ' p' → logprob: -2.578890562057495
    3. '   ' → logprob: -14.953890800476074
    4. 'pt' → logprob: -15.078890800476074
    5. ' ' → logprob: -15.828890800476074
    6. '(p' → logprob: -16.578889846801758
    7. '	p' → logprob: -17.328889846801758
    8. '  ' → logprob: -17.453889846801758
    9. '_p' → logprob: -17.578889846801758
    10. '[p' → logprob: -17.828889846801758

Token 1462: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11306699365377426
    2. 'in' → logprob: -2.2380669116973877
    3. 'p' → logprob: -8.613066673278809
    4. ' p' → logprob: -9.988066673278809
    5. '   ' → logprob: -11.613066673278809
    6. '(p' → logprob: -12.363066673278809
    7. 'n' → logprob: -13.988066673278809
    8. '(' → logprob: -14.113066673278809
    9. '       ' → logprob: -14.613066673278809
    10. ' ' → logprob: -14.863066673278809

Token 1463: ' reversed' (ID: 57184)
  Prédit: 'pts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pts' → logprob: -0.02975245751440525
    2. ' pts' → logprob: -3.529752492904663
    3. '_pts' → logprob: -14.154752731323242
    4. 'Pts' → logprob: -14.279752731323242
    5. '   ' → logprob: -15.154752731323242
    6. 'pt' → logprob: -15.279752731323242
    7. '[' → logprob: -17.029752731323242
    8. 'points' → logprob: -17.904752731323242
    9. '       ' → logprob: -18.029752731323242
    10. 'PTS' → logprob: -18.654752731323242

Token 1464: '(' (ID: 7)
  Prédit: 'pts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' → logprob: -0.3868926465511322
    2. '(' → logprob: -1.1368926763534546
    3. ' pts' → logprob: -11.386892318725586
    4. 'pt' → logprob: -12.511892318725586
    5. 'Pts' → logprob: -12.886892318725586
    6. '_pts' → logprob: -13.136892318725586
    7. 'lower' → logprob: -14.511892318725586
    8. '[' → logprob: -14.636892318725586
    9. '(
' → logprob: -15.261892318725586
    10. '   ' → logprob: -15.511892318725586

Token 1465: 'pts' (ID: 24040)
  Prédit: 'pts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pts' → logprob: -1.3856492842023727e-06
    2. '(' → logprob: -13.750000953674316
    3. ' pts' → logprob: -15.375000953674316
    4. '_pts' → logprob: -17.875001907348633
    5. 'pt' → logprob: -18.000001907348633
    6. '[' → logprob: -18.125001907348633
    7. 'Pts' → logprob: -18.625001907348633
    8. ')' → logprob: -19.250001907348633
    9. '   ' → logprob: -19.750001907348633
    10. 'PTS' → logprob: -21.500001907348633

Token 1466: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0026448601856827736
    2. '       ' → logprob: -6.377645015716553
    3. '):' → logprob: -7.252645015716553
    4. ':
' → logprob: -8.752644538879395
    5. '   ' → logprob: -11.127644538879395
    6. '):
' → logprob: -11.377644538879395
    7. ':' → logprob: -11.502644538879395
    8. '[' → logprob: -11.502644538879395
    9. '():
' → logprob: -11.502644538879395
    10. '           ' → logprob: -11.877644538879395

Token 1467: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0164602380245924
    2. '       ' → logprob: -4.266460418701172
    3. ' while' → logprob: -6.766460418701172
    4. 'while' → logprob: -7.516460418701172
    5. ':
' → logprob: -8.641460418701172
    6. '[' → logprob: -8.641460418701172
    7. ':' → logprob: -9.891460418701172
    8. '   ' → logprob: -10.141460418701172
    9. '```' → logprob: -10.516460418701172
    10. ' ' → logprob: -10.891460418701172

Token 1468: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.47427111864089966
    2. 'while' (adapté à ' while') → logprob: -0.9742711186408997
    3. '           ' → logprob: -9.224270820617676
    4. '       ' → logprob: -9.349270820617676
    5. 'While' → logprob: -12.599270820617676
    6. '	while' → logprob: -12.974270820617676
    7. '               ' → logprob: -13.599270820617676
    8. '   ' → logprob: -14.599270820617676
    9. '        ' → logprob: -14.724270820617676
    10. ' ' → logprob: -14.974270820617676

Token 1469: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.07889914512634277
    2. ' len' → logprob: -2.5788991451263428
    3. '(len' → logprob: -11.578899383544922
    4. ' ' → logprob: -18.453899383544922
    5. '	len' → logprob: -19.078899383544922
    6. '  ' → logprob: -19.453899383544922
    7. '   ' → logprob: -19.953899383544922
    8. '[len' → logprob: -20.078899383544922
    9. 'lower' → logprob: -21.453899383544922
    10. '          ' → logprob: -21.453899383544922

Token 1470: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1517960956552997e-05
    2. 'upper' → logprob: -11.375011444091797
    3. '(lower' → logprob: -16.875011444091797
    4. ' upper' → logprob: -19.375011444091797
    5. '.upper' → logprob: -19.750011444091797
    6. 'Upper' → logprob: -20.125011444091797
    7. ' (' → logprob: -20.625011444091797
    8. '[' → logprob: -21.000011444091797
    9. '   ' → logprob: -21.375011444091797
    10. '_upper' → logprob: -21.375011444091797

Token 1471: 'upper' (ID: 26119)
  Prédit: 'upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.0486309714615345
    2. '(' → logprob: -3.048630952835083
    3. ' upper' → logprob: -10.048630714416504
    4. '.upper' → logprob: -15.048630714416504
    5. '_upper' → logprob: -16.92363166809082
    6. 'uppercase' → logprob: -16.92363166809082
    7. 'Upper' → logprob: -17.17363166809082
    8. 'lower' → logprob: -17.54863166809082
    9. '[' → logprob: -17.67363166809082
    10. ')' → logprob: -19.54863166809082

Token 1472: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09442642331123352
    2. '>=' → logprob: -2.719426393508911
    3. ')>=' → logprob: -3.844426393508911
    4. ' >=' → logprob: -6.21942663192749
    5. '[' → logprob: -8.594426155090332
    6. ']>=' → logprob: -8.844426155090332
    7. '<|end|>' → logprob: -9.094426155090332
    8. '<' → logprob: -9.344426155090332
    9. '<=' → logprob: -10.094426155090332
    10. ')<=' → logprob: -10.219426155090332

Token 1473: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.048894934356212616
    2. ' >=' → logprob: -3.0488948822021484
    3. '<' → logprob: -8.923894882202148
    4. '<=' → logprob: -9.798894882202148
    5. ')>=' → logprob: -9.798894882202148
    6. ')' → logprob: -10.923894882202148
    7. '[' → logprob: -11.423894882202148
    8. '   ' → logprob: -11.798894882202148
    9. ' <' → logprob: -12.048894882202148
    10. ']>=' → logprob: -12.298894882202148

Token 1474: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007100477814674377
    2. ' ' → logprob: -7.2507100105285645
    3. '   ' → logprob: -16.625709533691406
    4. '۲' → logprob: -19.500709533691406
    5. '```' → logprob: -20.125709533691406
    6. ' two' → logprob: -20.375709533691406
    7. '  ' → logprob: -20.500709533691406
    8. '[' → logprob: -20.875709533691406
    9. 'two' → logprob: -21.000709533691406
    10. '<|end|>' → logprob: -21.313209533691406

Token 1475: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '   ' → logprob: -18.750123977661133
    4. '```' → logprob: -18.750123977661133
    5. '۲' → logprob: -19.375123977661133
    6. '  ' → logprob: -20.812623977661133
    7. '२' → logprob: -20.875123977661133
    8. ' two' → logprob: -21.187623977661133
    9. 'two' → logprob: -21.312623977661133
    10. '２' → logprob: -21.437623977661133

Token 1476: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12692968547344208
    2. 'and' → logprob: -2.126929759979248
    3. '           ' → logprob: -14.00192928314209
    4. '   ' → logprob: -15.87692928314209
    5. ' ' → logprob: -16.126930236816406
    6. '            ' → logprob: -16.251930236816406
    7. '          ' → logprob: -16.501930236816406
    8. ' &&' → logprob: -16.626930236816406
    9. '	and' → logprob: -16.751930236816406
    10. '    ' → logprob: -16.876930236816406

Token 1477: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.3868710398674011
    2. ' cross' → logprob: -1.136871099472046
    3. 'upper' → logprob: -17.511871337890625
    4. 'Cross' → logprob: -17.761871337890625
    5. '.cross' → logprob: -17.886871337890625
    6. '_cross' → logprob: -18.511871337890625
    7. ' ' → logprob: -20.011871337890625
    8. 'c' → logprob: -20.136871337890625
    9. '(c' → logprob: -20.386871337890625
    10. ' ' → logprob: -20.636871337890625

Token 1478: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3856492842023727e-06
    2. ' (' → logprob: -14.375000953674316
    3. 'upper' → logprob: -14.500000953674316
    4. '(lower' → logprob: -15.500000953674316
    5. '           ' → logprob: -16.875001907348633
    6. ' upper' → logprob: -17.750001907348633
    7. '.upper' → logprob: -18.375001907348633
    8. '(
' → logprob: -18.500001907348633
    9. '   ' → logprob: -19.125001907348633
    10. '[' → logprob: -19.875001907348633

Token 1479: 'upper' (ID: 26119)
  Prédit: 'upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.0007849719258956611
    2. '(' → logprob: -7.250784873962402
    3. ' upper' → logprob: -9.500784873962402
    4. '.upper' → logprob: -16.50078582763672
    5. 'lower' → logprob: -16.62578582763672
    6. 'Upper' → logprob: -17.62578582763672
    7. 'uppercase' → logprob: -18.25078582763672
    8. '_upper' → logprob: -18.62578582763672
    9. '[' → logprob: -19.87578582763672
    10. '   ' → logprob: -20.00078582763672

Token 1480: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -3.128163257315464e-07
    2. '(-' → logprob: -15.5
    3. ' [-' → logprob: -18.625
    4. '   ' → logprob: -19.25
    5. '[' → logprob: -19.375
    6. '([-' → logprob: -19.375
    7. '```' → logprob: -20.625
    8. '][-' → logprob: -20.625
    9. ' ' → logprob: -20.875
    10. '[len' → logprob: -21.125

Token 1481: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '   ' → logprob: -19.625
    4. '-' → logprob: -20.0
    5. '  ' → logprob: -20.625
    6. '1' → logprob: -21.75
    7. '[-' → logprob: -21.875
    8. '(' → logprob: -22.0
    9. '۲' → logprob: -22.0
    10. '２' → logprob: -22.25

Token 1482: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.383526149671525e-05
    2. ' ,' → logprob: -10.000053405761719
    3. '(),' → logprob: -13.000053405761719
    4. '[' → logprob: -13.000053405761719
    5. '),' → logprob: -13.125053405761719
    6. '   ' → logprob: -15.125053405761719
    7. '<|end|>' → logprob: -15.125053405761719
    8. ')' → logprob: -15.250053405761719
    9. '],' → logprob: -15.875053405761719
    10. ',
' → logprob: -16.00005340576172

Token 1483: ' upper' (ID: 13057)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.005234952084720135
    2. ' upper' → logprob: -5.255234718322754
    3. '.upper' → logprob: -14.005234718322754
    4. 'uppercase' → logprob: -15.505234718322754
    5. '_upper' → logprob: -16.25523567199707
    6. 'uple' → logprob: -17.75523567199707
    7. 'lower' → logprob: -18.00523567199707
    8. 'Upper' → logprob: -18.50523567199707
    9. 'upp' → logprob: -18.75523567199707
    10. ' ' → logprob: -18.88023567199707

Token 1484: '[-' (ID: 17503)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07890686392784119
    2. '[-' → logprob: -2.578906774520874
    3. ' -' → logprob: -12.203907012939453
    4. '(-' → logprob: -12.453907012939453
    5. '[' → logprob: -12.578907012939453
    6. '{-' → logprob: -13.578907012939453
    7. '
' → logprob: -14.328907012939453
    8. '```' → logprob: -14.953907012939453
    9. '][-' → logprob: -14.953907012939453
    10. '[:-' → logprob: -14.953907012939453

Token 1485: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. '[' → logprob: -14.500000953674316
    3. '2' → logprob: -16.000001907348633
    4. '(' → logprob: -16.187501907348633
    5. 'upper' → logprob: -16.187501907348633
    6. '```' → logprob: -16.750001907348633
    7. ' ' → logprob: -16.937501907348633
    8. '#' → logprob: -17.437501907348633
    9. 'p' → logprob: -17.500001907348633
    10. '１' → logprob: -17.687501907348633

Token 1486: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000609867216553539
    2. ',p' → logprob: -7.750609874725342
    3. ' ,' → logprob: -9.125609397888184
    4. '),' → logprob: -9.875609397888184
    5. '],' → logprob: -11.125609397888184
    6. 'p' → logprob: -13.125609397888184
    7. '(),' → logprob: -13.625609397888184
    8. '`,' → logprob: -15.375609397888184
    9. ')' → logprob: -15.750609397888184
    10. '(p' → logprob: -15.750609397888184

Token 1487: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0007100477814674377
    2. ' p' → logprob: -7.2507100105285645
    3. ')p' → logprob: -18.000709533691406
    4. '           ' → logprob: -18.625709533691406
    5. '(p' → logprob: -18.750709533691406
    6. ')' → logprob: -19.750709533691406
    7. 'upper' → logprob: -19.750709533691406
    8. '
' → logprob: -19.875709533691406
    9. '	p' → logprob: -20.750709533691406
    10. '   ' → logprob: -20.875709533691406

Token 1488: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.927930654550437e-05
    2. ')<=' → logprob: -10.500029563903809
    3. ' )' → logprob: -13.375029563903809
    4. '')' → logprob: -17.750028610229492
    5. '）' → logprob: -17.750028610229492
    6. ']' → logprob: -18.000028610229492
    7. ')<' → logprob: -18.375028610229492
    8. '()' → logprob: -18.625028610229492
    9. ']<=' → logprob: -18.625028610229492
    10. '`)' → logprob: -18.625028610229492

Token 1489: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.003634634893387556
    2. '<=' → logprob: -5.628634452819824
    3. ')' → logprob: -10.878634452819824
    4. ')<=' → logprob: -11.128634452819824
    5. ' )' → logprob: -15.253634452819824
    6. ' <' → logprob: -15.503634452819824
    7. ']<=' → logprob: -15.628634452819824
    8. ' ' → logprob: -15.628634452819824
    9. ' ≤' → logprob: -16.50363540649414
    10. '[' → logprob: -16.62863540649414

Token 1490: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00861456897109747
    2. ' ' → logprob: -4.758614540100098
    3. '   ' → logprob: -17.258615493774414
    4. '  ' → logprob: -19.383615493774414
    5. ' ' → logprob: -20.508615493774414
    6. '```' → logprob: -20.633615493774414
    7. '    ' → logprob: -21.133615493774414
    8. '۰' → logprob: -21.758615493774414
    9. '(' → logprob: -22.383615493774414
    10. '[' → logprob: -22.758615493774414

Token 1491: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015028368216007948
    2. ' ' → logprob: -6.501502990722656
    3. '   ' → logprob: -14.876502990722656
    4. '  ' → logprob: -16.376502990722656
    5. '1' → logprob: -17.564002990722656
    6. '    ' → logprob: -18.439002990722656
    7. '۰' → logprob: -18.814002990722656
    8. '00' → logprob: -18.939002990722656
    9. '
' → logprob: -19.376502990722656
    10. ' ' → logprob: -19.814002990722656

Token 1492: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3653874397277832
    2. ':' → logprob: -1.2403874397277832
    3. '           ' → logprob: -4.240387439727783
    4. '               ' → logprob: -6.365387439727783
    5. '):
' → logprob: -7.615387439727783
    6. ':
' → logprob: -9.740386962890625
    7. '):' → logprob: -10.490386962890625
    8. '       ' → logprob: -10.865386962890625
    9. ' :
' → logprob: -11.365386962890625
    10. ':

' → logprob: -11.365386962890625

Token 1493: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030505798757076263
    2. '               ' → logprob: -3.530505895614624
    3. 'upper' → logprob: -7.655505657196045
    4. ' upper' → logprob: -8.280506134033203
    5. '       ' → logprob: -11.905506134033203
    6. '          ' → logprob: -12.530506134033203
    7. '		' → logprob: -12.655506134033203
    8. '[' → logprob: -13.030506134033203
    9. '   ' → logprob: -13.280506134033203
    10. '            ' → logprob: -13.530506134033203

Token 1494: ' upper' (ID: 13057)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' (adapté à ' upper') → logprob: -0.023246875032782555
    2. ' upper' → logprob: -3.7732467651367188
    3. '               ' → logprob: -13.773246765136719
    4. '.upper' → logprob: -15.648246765136719
    5. '           ' → logprob: -16.64824676513672
    6. '_upper' → logprob: -16.89824676513672
    7. 'lower' → logprob: -17.52324676513672
    8. '                   ' → logprob: -17.64824676513672
    9. 'Upper' → logprob: -18.14824676513672
    10. '   ' → logprob: -18.52324676513672

Token 1495: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -8.661626634420827e-05
    2. '.' → logprob: -9.750086784362793
    3. 'pop' → logprob: -10.875086784362793
    4. '.append' → logprob: -11.625086784362793
    5. ' .' → logprob: -15.000086784362793
    6. '.upper' → logprob: -17.125085830688477
    7. '[-' → logprob: -18.375085830688477
    8. 'upper' → logprob: -18.625085830688477
    9. '	pop' → logprob: -19.250085830688477
    10. '
' → logprob: -19.375085830688477

Token 1496: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.2014462798833847
    2. '()' → logprob: -1.701446294784546
    3. '           ' → logprob: -11.701446533203125
    4. ')
' → logprob: -12.326446533203125
    5. '())
' → logprob: -12.576446533203125
    6. ')' → logprob: -12.576446533203125
    7. '()

' → logprob: -12.701446533203125
    8. '()
' → logprob: -12.951446533203125
    9. '       ' → logprob: -13.451446533203125
    10. '(),' → logprob: -13.701446533203125

Token 1497: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004068395064678043
    2. '		' → logprob: -8.750407218933105
    3. 'upper' → logprob: -9.250407218933105
    4. '[' → logprob: -10.500407218933105
    5. '               ' → logprob: -10.500407218933105
    6. '       ' → logprob: -10.875407218933105
    7. '          ' → logprob: -11.125407218933105
    8. '1' → logprob: -11.250407218933105
    9. '	       ' → logprob: -11.750407218933105
    10. ',' → logprob: -11.875407218933105

Token 1498: ' upper' (ID: 13057)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' (adapté à ' upper') → logprob: -0.001174747827462852
    2. ' upper' → logprob: -6.7511749267578125
    3. '           ' → logprob: -12.376174926757812
    4. '.upper' → logprob: -15.126174926757812
    5. 'Upper' → logprob: -17.626174926757812
    6. '   ' → logprob: -17.751174926757812
    7. '       ' → logprob: -18.251174926757812
    8. '_upper' → logprob: -18.376174926757812
    9. '               ' → logprob: -18.501174926757812
    10. 'lower' → logprob: -18.626174926757812

Token 1499: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0022714624647051096
    2. '.pop' → logprob: -6.12727165222168
    3. 'append' → logprob: -9.50227165222168
    4. '.app' → logprob: -12.37727165222168
    5. '.' → logprob: -12.62727165222168
    6. 'pop' → logprob: -13.50227165222168
    7. 'Append' → logprob: -14.25227165222168
    8. 'app' → logprob: -14.37727165222168
    9. '_append' → logprob: -15.00227165222168
    10. '.Append' → logprob: -15.00227165222168

Token 1500: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00010998018842656165
    2. '(' → logprob: -9.125109672546387
    3. 'p' → logprob: -15.250109672546387
    4. 'upper' → logprob: -15.375109672546387
    5. '(
' → logprob: -15.875109672546387
    6. ')' → logprob: -16.000110626220703
    7. '(lower' → logprob: -16.125110626220703
    8. ' (' → logprob: -17.250110626220703
    9. '((' → logprob: -17.375110626220703
    10. '(up' → logprob: -17.750110626220703

Token 1501: ')
' (ID: 446)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.060560211539268494
    2. ')' → logprob: -2.9355602264404297
    3. '(' → logprob: -5.68556022644043
    4. 'p' → logprob: -6.43556022644043
    5. ')
' → logprob: -8.31056022644043
    6. '(-' → logprob: -8.81056022644043
    7. '[' → logprob: -9.06056022644043
    8. ')p' → logprob: -9.56056022644043
    9. '[p' → logprob: -11.18556022644043
    10. '[-' → logprob: -11.43556022644043

Token 1502: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.29614830017089844
    2. '       ' → logprob: -1.5461483001708984
    3. '[:-' → logprob: -3.7961483001708984
    4. '(' → logprob: -4.921148300170898
    5. '```' → logprob: -5.171148300170898
    6. 'upper' → logprob: -5.421148300170898
    7. '1' → logprob: -7.421148300170898
    8. '[-' → logprob: -7.546148300170898
    9. ' upper' → logprob: -7.796148300170898
    10. '<|end|>' → logprob: -8.046148300170898

Token 1503: ' hull' (ID: 74912)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2438267171382904
    2. '       ' → logprob: -2.1188266277313232
    3. '#' → logprob: -2.4938266277313232
    4. 'lower' → logprob: -4.993826866149902
    5. ' hull' → logprob: -6.368826866149902
    6. '   ' → logprob: -6.743826866149902
    7. ' return' → logprob: -6.743826866149902
    8. 'result' → logprob: -6.743826866149902
    9. 'del' → logprob: -7.493826866149902
    10. 'upper' → logprob: -8.243826866149902

Token 1504: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759491324424744
    2. ' =' → logprob: -0.8259491324424744
    3. '=h' → logprob: -12.450948715209961
    4. '=
' → logprob: -13.325948715209961
    5. '.pop' → logprob: -13.575948715209961
    6. '   ' → logprob: -13.700948715209961
    7. ' =
' → logprob: -14.575948715209961
    8. '_points' → logprob: -15.200948715209961
    9. '=len' → logprob: -15.825948715209961
    10. '[:-' → logprob: -15.825948715209961

Token 1505: ' lower' (ID: 6931)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.00045247984235174954
    2. ' lower' → logprob: -7.875452518463135
    3. '(lower' → logprob: -9.750452041625977
    4. 'upper' → logprob: -11.375452041625977
    5. 'list' → logprob: -13.500452041625977
    6. '[' → logprob: -14.125452041625977
    7. '   ' → logprob: -14.875452041625977
    8. '(' → logprob: -17.000452041625977
    9. '.lower' → logprob: -17.250452041625977
    10. '[:-' → logprob: -17.750452041625977

Token 1506: '[:-' (ID: 63556)
  Prédit: '[:-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:-' → logprob: -0.00523719098418951
    2. '[' → logprob: -5.255237102508545
    3. '[-' → logprob: -13.005237579345703
    4. '[:' → logprob: -14.005237579345703
    5. '[
' → logprob: -16.130237579345703
    6. '+' → logprob: -16.880237579345703
    7. '[::-' → logprob: -17.255237579345703
    8. '
' → logprob: -17.380237579345703
    9. '   ' → logprob: -17.505237579345703
    10. ' +' → logprob: -18.130237579345703

Token 1507: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '-' → logprob: -17.75
    3. '
' → logprob: -18.625
    4. '(' → logprob: -19.125
    5. '```' → logprob: -20.0
    6. ' ' → logprob: -20.375
    7. '   ' → logprob: -20.875
    8. '2' → logprob: -21.875
    9. '4' → logprob: -22.0
    10. '{' → logprob: -22.125

Token 1508: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3351035416126251
    2. ']' → logprob: -1.8351035118103027
    3. ' +' → logprob: -2.0851035118103027
    4. ']+' → logprob: -7.085103511810303
    5. ' ]' → logprob: -12.335103988647461
    6. '   ' → logprob: -14.085103988647461
    7. '    ' → logprob: -15.085103988647461
    8. '+]' → logprob: -15.085103988647461
    9. '+
' → logprob: -15.335103988647461
    10. ']
' → logprob: -15.585103988647461

Token 1509: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3868725895881653
    2. '+' → logprob: -1.1368725299835205
    3. '+
' → logprob: -14.261872291564941
    4. ' +
' → logprob: -15.511872291564941
    5. '+[' → logprob: -15.636872291564941
    6. '+self' → logprob: -15.636872291564941
    7. '       ' → logprob: -15.886872291564941
    8. '＋' → logprob: -16.761873245239258
    9. '   ' → logprob: -16.886873245239258
    10. '+b' → logprob: -17.386873245239258

Token 1510: ' upper' (ID: 13057)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.0004306692280806601
    2. ' upper' → logprob: -7.750430583953857
    3. 'uppercase' → logprob: -19.500431060791016
    4. '   ' → logprob: -19.875431060791016
    5. '[' → logprob: -21.750431060791016
    6. 'Upper' → logprob: -22.625431060791016
    7. '.upper' → logprob: -23.000431060791016
    8. ' ' → logprob: -23.125431060791016
    9. '_upper' → logprob: -23.625431060791016
    10. '  ' → logprob: -24.375431060791016

Token 1511: '[:-' (ID: 63556)
  Prédit: '[:-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:-' → logprob: -0.03806031122803688
    2. '[' → logprob: -3.288060426712036
    3. '[-' → logprob: -10.913060188293457
    4. '1' → logprob: -14.288060188293457
    5. '[:' → logprob: -16.913061141967773
    6. '```' → logprob: -17.663061141967773
    7. '[::-' → logprob: -18.163061141967773
    8. '   ' → logprob: -18.913061141967773
    9. '
' → logprob: -19.538061141967773
    10. '-' → logprob: -20.538061141967773

Token 1512: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '-' → logprob: -17.125
    3. '2' → logprob: -18.375
    4. ' ' → logprob: -18.375
    5. '   ' → logprob: -18.5
    6. '
' → logprob: -18.625
    7. '```' → logprob: -18.75
    8. '１' → logprob: -19.125
    9. '۱' → logprob: -20.9375
    10. '(' → logprob: -21.1875

Token 1513: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007541784550994635
    2. '<|end|>' → logprob: -5.632541656494141
    3. ']
' → logprob: -6.382541656494141
    4. ' ]' → logprob: -6.882541656494141
    5. '       ' → logprob: -7.007541656494141
    6. ')' → logprob: -8.50754165649414
    7. '<|end|>' → logprob: -9.63254165649414
    8. 'return' → logprob: -11.00754165649414
    9. '[' → logprob: -12.13254165649414
    10. '```' → logprob: -13.00754165649414

Token 1514: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03550757095217705
    2. 'return' → logprob: -3.5355076789855957
    3. ' return' → logprob: -6.660507678985596
    4. '
' → logprob: -6.660507678985596
    5. '[' → logprob: -7.035507678985596
    6. '<|end|>' → logprob: -7.660507678985596
    7. '[]' → logprob: -7.910507678985596
    8. ')' → logprob: -8.160507202148438
    9. '[]
' → logprob: -8.285507202148438
    10. '[
' → logprob: -8.660507202148438

Token 1515: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.17125673592090607
    2. '       ' → logprob: -2.0462567806243896
    3. '
' → logprob: -3.9212567806243896
    4. ' return' → logprob: -5.0462565422058105
    5. 'indices' → logprob: -7.2962565422058105
    6. '        
' → logprob: -8.046257019042969
    7. '#' (adapté à ' #') → logprob: -8.421257019042969
    8. 'h' → logprob: -8.546257019042969
    9. ' hull' → logprob: -8.546257019042969
    10. 'result' → logprob: -9.546257019042969

Token 1516: ' hull' (ID: 74912)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.006865628995001316
    2. 'h' → logprob: -5.256865501403809
    3. ' return' → logprob: -7.256865501403809
    4. 'indices' → logprob: -7.381865501403809
    5. 'result' → logprob: -8.256865501403809
    6. '   ' → logprob: -10.881865501403809
    7. 'res' → logprob: -11.381865501403809
    8. '#' → logprob: -12.256865501403809
    9. ' indices' → logprob: -13.131865501403809
    10. '       ' → logprob: -13.256865501403809

Token 1517: ' points' (ID: 5571)
  Prédit: '_indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.6312500238418579
    2. ' =' → logprob: -1.006250023841858
    3. 'indices' → logprob: -3.5062499046325684
    4. '<|end|>' → logprob: -3.8812499046325684
    5. '_points' → logprob: -4.256249904632568
    6. '=' → logprob: -4.256249904632568
    7. '[:]' → logprob: -4.881249904632568
    8. '_ids' → logprob: -6.006249904632568
    9. 'return' → logprob: -6.131249904632568
    10. '=[]' → logprob: -6.131249904632568

Token 1518: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8411899209022522
    2. '<|end|>' → logprob: -1.2161898612976074
    3. '_indices' → logprob: -1.5911898612976074
    4. 'indices' → logprob: -3.7161898612976074
    5. '=' → logprob: -3.8411898612976074
    6. '<|end|>' → logprob: -5.216189861297607
    7. ',' → logprob: -5.591189861297607
    8. '_indexes' → logprob: -6.091189861297607
    9. '=[]' → logprob: -6.216189861297607
    10. 'return' → logprob: -6.341189861297607

Token 1519: ' CC' (ID: 21547)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.8837315440177917
    2. 'order' → logprob: -1.2587316036224365
    3. '[h' → logprob: -1.5087316036224365
    4. '[' → logprob: -3.7587316036224365
    5. '[(' → logprob: -3.8837316036224365
    6. '[
' → logprob: -5.008731365203857
    7. 'sorted' → logprob: -5.258731365203857
    8. 'list' → logprob: -5.383731365203857
    9. '
' → logprob: -5.883731365203857
    10. '[]
' → logprob: -6.008731365203857

Token 1520: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -1.2664456789934775e-06
    2. ' W' → logprob: -14.250000953674316
    3. 'w' → logprob: -14.625000953674316
    4. '[' → logprob: -17.125001907348633
    5. 'order' → logprob: -18.250001907348633
    6. 'Wind' → logprob: -19.125001907348633
    7. 'Order' → logprob: -19.250001907348633
    8. 'Wx' → logprob: -19.250001907348633
    9. '[
' → logprob: -19.625001907348633
    10. '
' → logprob: -19.750001907348633

Token 1521: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.033958256244659424
    2. ' order' → logprob: -3.4089581966400146
    3. '
' → logprob: -8.658958435058594
    4. '_order' → logprob: -9.283958435058594
    5. '       ' → logprob: -10.658958435058594
    6. ',' → logprob: -12.158958435058594
    7. '#' → logprob: -12.533958435058594
    8. '   ' → logprob: -12.908958435058594
    9. '        
' → logprob: -13.033958435058594
    10. '    
' → logprob: -13.283958435058594

Token 1522: ' with' (ID: 483)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14549575746059418
    2. '       ' → logprob: -2.395495653152466
    3. 'return' → logprob: -3.270495653152466
    4. ' return' → logprob: -6.395495891571045
    5. '        
' → logprob: -6.645495891571045
    6. '
' → logprob: -7.270495891571045
    7. ')' → logprob: -7.395495891571045
    8. ')
' → logprob: -8.020495414733887
    9. '[' → logprob: -8.145495414733887
    10. 'indices' → logprob: -8.145495414733887

Token 1523: ' no' (ID: 860)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.2347240000963211
    2. 'unique' → logprob: -1.9847240447998047
    3. 'h' → logprob: -3.6097240447998047
    4. 'indices' → logprob: -4.109724044799805
    5. ' no' → logprob: -4.609724044799805
    6. 'out' → logprob: -5.109724044799805
    7. 'their' → logprob: -5.734724044799805
    8. 'duplicates' → logprob: -5.734724044799805
    9. 'distinct' → logprob: -5.734724044799805
    10. '#' → logprob: -6.984724044799805

Token 1524: ' duplicates' (ID: 91135)
  Prédit: 'duplicates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'duplicates' → logprob: -0.1274217963218689
    2. ' duplicates' → logprob: -2.1274218559265137
    3. 'duplicate' → logprob: -7.752421855926514
    4. ' duplicate' → logprob: -10.377421379089355
    5. '_duplicates' → logprob: -11.002421379089355
    6. ' repeats' → logprob: -12.377421379089355
    7. 're' → logprob: -12.377421379089355
    8. 'dup' → logprob: -12.627421379089355
    9. 'duplic' → logprob: -13.502421379089355
    10. 'Duplicates' → logprob: -13.752421379089355

Token 1525: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5885433554649353
    2. '       ' → logprob: -0.9635433554649353
    3. ')' → logprob: -4.21354341506958
    4. '        
' → logprob: -4.71354341506958
    5. '<|end|>' → logprob: -4.83854341506958
    6. 'return' → logprob: -4.96354341506958
    7. '[' → logprob: -4.96354341506958
    8. ',' → logprob: -5.71354341506958
    9. '[::-' → logprob: -6.08854341506958
    10. ' 
' → logprob: -6.33854341506958

Token 1526: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.009800950065255165
    2. '       ' → logprob: -5.009800910949707
    3. ' return' → logprob: -6.259800910949707
    4. '
' → logprob: -6.884800910949707
    5. '```' → logprob: -9.384800910949707
    6. '        
' → logprob: -11.134800910949707
    7. '[h' → logprob: -11.259800910949707
    8. 'h' → logprob: -11.634800910949707
    9. 'indices' → logprob: -11.759800910949707
    10. '[' → logprob: -12.384800910949707

Token 1527: ' indices' (ID: 30378)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.006494858302175999
    2. ' return' → logprob: -5.131494998931885
    3. '       ' → logprob: -8.256494522094727
    4. 'indices' (adapté à ' indices') → logprob: -8.631494522094727
    5. 'h' → logprob: -9.881494522094727
    6. '[h' → logprob: -10.381494522094727
    7. ' indices' → logprob: -11.506494522094727
    8. ' hull' → logprob: -11.631494522094727
    9. '[' → logprob: -11.881494522094727
    10. '
' → logprob: -12.006494522094727

Token 1528: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1619272530078888
    2. ' =' → logprob: -1.9119272232055664
    3. '=[]' → logprob: -7.036927223205566
    4. '.append' → logprob: -7.286927223205566
    5. '=[]
' → logprob: -9.661927223205566
    6. '=[' → logprob: -10.036927223205566
    7. '       ' → logprob: -12.411927223205566
    8. '=
' → logprob: -12.536927223205566
    9. '[:]' → logprob: -12.536927223205566
    10. '.extend' → logprob: -12.661927223205566

Token 1529: ' [' (ID: 723)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.09876970946788788
    2. '[i' → logprob: -2.5987696647644043
    3. '[' → logprob: -4.348769664764404
    4. ' [' → logprob: -5.598769664764404
    5. '[list' → logprob: -6.473769664764404
    6. '[k' → logprob: -8.223770141601562
    7. '[x' → logprob: -8.348770141601562
    8. '[item' → logprob: -8.723770141601562
    9. '[len' → logprob: -8.848770141601562
    10. '[index' → logprob: -9.348770141601562

Token 1530: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.005880321841686964
    2. 'h' → logprob: -5.755880355834961
    3. 'pt' → logprob: -6.255880355834961
    4. 'x' → logprob: -7.505880355834961
    5. 'point' → logprob: -9.130880355834961
    6. 'hp' → logprob: -9.255880355834961
    7. 'idx' → logprob: -11.380880355834961
    8. 'item' → logprob: -11.505880355834961
    9. ' p' → logprob: -13.130880355834961
    10. 'i' → logprob: -14.505880355834961

Token 1531: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3856492842023727e-06
    2. '2' → logprob: -13.625000953674316
    3. '
' → logprob: -16.375001907348633
    4. '[-' → logprob: -18.000001907348633
    5. '][' → logprob: -18.250001907348633
    6. '```' → logprob: -19.000001907348633
    7. 'for' → logprob: -19.500001907348633
    8. '#' → logprob: -19.625001907348633
    9. ' [' → logprob: -19.625001907348633
    10. '[
' → logprob: -20.125001907348633

Token 1532: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.8624639324116288e-06
    2. '-' → logprob: -13.625001907348633
    3. '
' → logprob: -15.250001907348633
    4. '```' → logprob: -15.750001907348633
    5. '[' → logprob: -17.375001907348633
    6. '' → logprob: -17.500001907348633
    7. ' ' → logprob: -17.625001907348633
    8. '``' → logprob: -18.250001907348633
    9. '   ' → logprob: -18.312501907348633
    10. '۲' → logprob: -18.562501907348633

Token 1533: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10412944853305817
    2. ']' → logprob: -2.8541295528411865
    3. 'for' → logprob: -3.2291295528411865
    4. ')' → logprob: -6.854129314422607
    5. '()' → logprob: -7.854129314422607
    6. ',' → logprob: -9.229129791259766
    7. ' ]' → logprob: -10.604129791259766
    8. '   ' → logprob: -10.729129791259766
    9. '       ' → logprob: -10.854129791259766
    10. '	for' → logprob: -11.354129791259766

Token 1534: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.014194650575518608
    2. 'for' → logprob: -4.264194488525391
    3. ']' → logprob: -11.38919448852539
    4. ')' → logprob: -11.76419448852539
    5. '       ' → logprob: -12.38919448852539
    6. '	for' → logprob: -12.88919448852539
    7. '           ' → logprob: -13.51419448852539
    8. '<|end|>' → logprob: -13.88919448852539
    9. ' ' → logprob: -14.13919448852539
    10. '
' → logprob: -14.38919448852539

Token 1535: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0002613358374219388
    2. ' p' → logprob: -8.250261306762695
    3. '_p' → logprob: -19.375261306762695
    4. '	p' → logprob: -19.750261306762695
    5. '
' → logprob: -20.875261306762695
    6. '(p' → logprob: -21.000261306762695
    7. 'h' → logprob: -21.500261306762695
    8. ' ' → logprob: -21.500261306762695
    9. '_' → logprob: -21.750261306762695
    10. '<p' → logprob: -21.750261306762695

Token 1536: ' in' (ID: 306)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.16787311434745789
    2. ' in' → logprob: -2.1678731441497803
    3. 'in' → logprob: -3.7928731441497803
    4. ' p' → logprob: -4.042872905731201
    5. '
' → logprob: -11.54287338256836
    6. '_' → logprob: -11.66787338256836
    7. ' ' → logprob: -12.04287338256836
    8. ',p' → logprob: -12.41787338256836
    9. '_p' → logprob: -12.66787338256836
    10. ',' → logprob: -13.04287338256836

Token 1537: ' hull' (ID: 74912)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -3.128163257315464e-07
    2. ' hull' → logprob: -15.375
    3. 'hul' → logprob: -17.375
    4. '
' → logprob: -18.0
    5. '[h' → logprob: -19.25
    6. '	h' → logprob: -19.5
    7. '   ' → logprob: -19.625
    8. '(h' → logprob: -19.875
    9. 'hall' → logprob: -20.75
    10. 'p' → logprob: -21.875

Token 1538: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5775902271270752
    2. ']
' → logprob: -0.8275902271270752
    3. '       ' → logprob: -6.452589988708496
    4. ']
' → logprob: -9.702589988708496
    5. ' ]' → logprob: -12.702589988708496
    6. ' ]
' → logprob: -12.827589988708496
    7. 'return' → logprob: -12.952589988708496
    8. ']

' → logprob: -13.202589988708496
    9. '   ' → logprob: -14.202589988708496
    10. '[::-' → logprob: -15.077589988708496

Token 1539: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00044127836008556187
    2. 'return' → logprob: -8.250441551208496
    3. '
' → logprob: -9.500441551208496
    4. ' return' → logprob: -9.750441551208496
    5. '<|end|>' → logprob: -10.875441551208496
    6. '   ' → logprob: -11.125441551208496
    7. '```' → logprob: -12.375441551208496
    8. '        
' → logprob: -13.000441551208496
    9. '	return' → logprob: -13.500441551208496
    10. '	' → logprob: -14.125441551208496

Token 1540: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.018321549519896507
    2. '       ' → logprob: -4.018321514129639
    3. ' return' → logprob: -8.768321990966797
    4. '
' → logprob: -11.268321990966797
    5. '   ' → logprob: -12.768321990966797
    6. '```' → logprob: -15.893321990966797
    7. '        
' → logprob: -16.143321990966797
    8. '	return' → logprob: -16.268321990966797
    9. 'indices' → logprob: -16.768321990966797
    10. '           ' → logprob: -17.893321990966797

Token 1541: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -3.1424973713001236e-05
    2. ' indices' → logprob: -10.375031471252441
    3. 'indexes' → logprob: -16.500030517578125
    4. '(indices' → logprob: -17.000030517578125
    5. '[' → logprob: -17.875030517578125
    6. 'list' → logprob: -18.250030517578125
    7. 'index' → logprob: -19.000030517578125
    8. '[]' → logprob: -19.250030517578125
    9. '   ' → logprob: -19.250030517578125
    10. 'ind' → logprob: -19.750030517578125

Token 1542: '


' (ID: 2499)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.010288373567163944
    2. '<|end|>' → logprob: -4.885288238525391
    3. '   ' → logprob: -6.385288238525391
    4. ' class' → logprob: -8.13528823852539
    5. 'def' → logprob: -8.26028823852539
    6. '#' → logprob: -8.63528823852539
    7. '<|end|>' → logprob: -9.38528823852539
    8. '```' → logprob: -9.88528823852539
    9. '
' → logprob: -10.26028823852539
    10. 'import' → logprob: -10.63528823852539

Token 1543: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00010604646377032623
    2. '   ' → logprob: -9.625105857849121
    3. 'def' → logprob: -10.250105857849121
    4. ' class' → logprob: -12.875105857849121
    5. '```' → logprob: -13.875105857849121
    6. 'import' → logprob: -14.500105857849121
    7. 'from' → logprob: -14.875105857849121
    8. '<class' → logprob: -16.500106811523438
    9. '    
' → logprob: -17.125106811523438
    10. '"class' → logprob: -17.375106811523438

Token 1544: ' Village' (ID: 27912)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.9814229011535645
    2. 'Polygon' → logprob: -2.1064229011535645
    3. 'Minimal' → logprob: -2.4814229011535645
    4. 'Ste' → logprob: -2.6064229011535645
    5. 'Village' → logprob: -2.6064229011535645
    6. 'Graph' → logprob: -3.1064229011535645
    7. 'Minimum' → logprob: -3.1064229011535645
    8. 'Solution' → logprob: -3.3564229011535645
    9. 'Path' → logprob: -3.3564229011535645
    10. 'Road' → logprob: -3.7314229011535645

Token 1545: 'Road' (ID: 58793)
  Prédit: 'Graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Graph' → logprob: -0.016348473727703094
    2. 'Network' → logprob: -5.141348361968994
    3. 'Builder' → logprob: -5.391348361968994
    4. 'Connectivity' → logprob: -6.516348361968994
    5. 'Connector' → logprob: -6.516348361968994
    6. 'Connection' → logprob: -7.641348361968994
    7. 'Planner' → logprob: -7.766348361968994
    8. 'Solver' → logprob: -8.016348838806152
    9. 'Sp' → logprob: -8.016348838806152
    10. 'Manager' → logprob: -8.891348838806152

Token 1546: 'Planner' (ID: 120933)
  Prédit: 'Network'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Network' → logprob: -0.3197912871837616
    2. 'Builder' → logprob: -1.819791316986084
    3. 's' → logprob: -2.444791316986084
    4. ':
' → logprob: -3.944791316986084
    5. 'Constructor' → logprob: -6.319791316986084
    6. 'Planner' → logprob: -6.444791316986084
    7. 'Construction' → logprob: -7.319791316986084
    8. 'System' → logprob: -7.569791316986084
    9. 'Connector' → logprob: -8.319790840148926
    10. '{
' → logprob: -8.944790840148926

Token 1547: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004083743318915367
    2. ':
' → logprob: -5.504083633422852
    3. '(' → logprob: -13.254083633422852
    4. ':def' → logprob: -13.754083633422852
    5. ':

' → logprob: -14.004083633422852
    6. '):' → logprob: -14.879083633422852
    7. '```' → logprob: -15.379083633422852
    8. ' :' → logprob: -15.504083633422852
    9. '():' → logprob: -16.12908363342285
    10. '   ' → logprob: -16.12908363342285

Token 1548: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00017159747949335724
    2. 'def' → logprob: -9.500171661376953
    3. ' def' → logprob: -9.625171661376953
    4. 'class' → logprob: -10.750171661376953
    5. '```' → logprob: -12.000171661376953
    6. '	def' → logprob: -13.750171661376953
    7. '   ' → logprob: -14.125171661376953
    8. ' class' → logprob: -15.125171661376953
    9. '
' → logprob: -15.375171661376953
    10. ':' → logprob: -15.625171661376953

Token 1549: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5768311023712158
    2. ' def' → logprob: -1.0768311023712158
    3. 'def' (adapté à ' def') → logprob: -2.326831102371216
    4. 'class' → logprob: -10.201830863952637
    5. '```' → logprob: -12.451830863952637
    6. '	def' → logprob: -13.576830863952637
    7. ':' → logprob: -14.201830863952637
    8. '
' → logprob: -14.451830863952637
    9. ' class' → logprob: -14.451830863952637
    10. '    ' → logprob: -14.701830863952637

Token 1550: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00847923569381237
    2. 'init' → logprob: -5.133479118347168
    3. '_init' → logprob: -6.258479118347168
    4. ' __' → logprob: -7.633479118347168
    5. 'def' → logprob: -9.008479118347168
    6. '```' → logprob: -11.758479118347168
    7. '__(' → logprob: -12.383479118347168
    8. '_complete' → logprob: -12.758479118347168
    9. 'plan' → logprob: -13.383479118347168
    10. '___' → logprob: -13.383479118347168

Token 1551: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -17.625
    3. '
' → logprob: -17.75
    4. '(init' → logprob: -17.75
    5. 'def' → logprob: -18.125
    6. '```' → logprob: -19.25
    7. 'int' → logprob: -19.75
    8. '_init' → logprob: -19.875
    9. '  ' → logprob: -20.25
    10. '	init' → logprob: -20.375

Token 1552: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.18041986227035522
    2. '(self' → logprob: -1.805419921875
    3. '(' → logprob: -8.305419921875
    4. '__(
' → logprob: -8.305419921875
    5. '__' → logprob: -9.555419921875
    6. 'self' → logprob: -10.055419921875
    7. ' (' → logprob: -10.055419921875
    8. '_(' → logprob: -11.305419921875
    9. '<>(' → logprob: -13.555419921875
    10. '   ' → logprob: -13.680419921875

Token 1553: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00012809180771000683
    2. ' self' → logprob: -9.375127792358398
    3. 'points' → logprob: -10.625127792358398
    4. '
' → logprob: -11.625127792358398
    5. ')' → logprob: -12.375127792358398
    6. '(self' → logprob: -13.000127792358398
    7. '   ' → logprob: -13.250127792358398
    8. ',self' → logprob: -14.375127792358398
    9. ',' → logprob: -14.875127792358398
    10. '       ' → logprob: -15.000127792358398

Token 1554: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023014962673187256
    2. '(self' → logprob: -4.023015022277832
    3. 'self' → logprob: -5.398015022277832
    4. ' (' → logprob: -8.773015022277832
    5. '       ' → logprob: -10.023015022277832
    6. ')' → logprob: -10.273015022277832
    7. ' ,' → logprob: -10.898015022277832
    8. '(' → logprob: -11.148015022277832
    9. '   ' → logprob: -11.148015022277832
    10. ' self' → logprob: -11.273015022277832

Token 1555: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.04007837176322937
    2. ' points' → logprob: -3.2900784015655518
    3. 'self' → logprob: -6.290078163146973
    4. ' self' → logprob: -9.540078163146973
    5. 'vill' → logprob: -10.165078163146973
    6. 'v' → logprob: -11.415078163146973
    7. ' villages' → logprob: -11.540078163146973
    8. 'graph' → logprob: -11.790078163146973
    9. '   ' → logprob: -11.790078163146973
    10. '	points' → logprob: -11.790078163146973

Token 1556: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00028374246903695166
    2. ',' → logprob: -8.750284194946289
    3. '):' → logprob: -9.625284194946289
    4. '<|end|>' → logprob: -10.625284194946289
    5. '=' → logprob: -11.250284194946289
    6. '):
' → logprob: -11.375284194946289
    7. ')' → logprob: -12.250284194946289
    8. ' :' → logprob: -13.375284194946289
    9. '<|end|>' → logprob: -13.375284194946289
    10. ' =' → logprob: -14.500284194946289

Token 1557: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.00672448705881834
    2. ' List' → logprob: -5.0067243576049805
    3. ')' → logprob: -12.50672435760498
    4. '[List' → logprob: -13.13172435760498
    5. '       ' → logprob: -13.25672435760498
    6. '   ' → logprob: -14.50672435760498
    7. 'list' → logprob: -14.75672435760498
    8. '```' → logprob: -15.63172435760498
    9. '[' → logprob: -15.88172435760498
    10. '
' → logprob: -16.006725311279297

Token 1558: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.153795766294934e-06
    2. '[int' → logprob: -12.875005722045898
    3. '):
' → logprob: -13.875005722045898
    4. '       ' → logprob: -14.250005722045898
    5. '   ' → logprob: -14.375005722045898
    6. '[List' → logprob: -14.875005722045898
    7. '[
' → logprob: -15.000005722045898
    8. ',' → logprob: -15.750005722045898
    9. '<Point' → logprob: -15.750005722045898
    10. 'Point' → logprob: -16.2500057220459

Token 1559: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -3.128163257315464e-07
    2. ' Point' → logprob: -15.75
    3. '	Point' → logprob: -16.875
    4. 'int' → logprob: -18.625
    5. '<Point' → logprob: -18.75
    6. ')' → logprob: -19.25
    7. '(Point' → logprob: -19.25
    8. '.Point' → logprob: -19.625
    9. '_Point' → logprob: -20.25
    10. '_point' → logprob: -20.5

Token 1560: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.109784796833992
    2. '):
' → logprob: -2.3597848415374756
    3. '):' → logprob: -5.1097846031188965
    4. ']):
' → logprob: -6.4847846031188965
    5. '       ' → logprob: -6.8597846031188965
    6. '   ' → logprob: -7.9847846031188965
    7. ']):' → logprob: -8.484785079956055
    8. '],' → logprob: -8.734785079956055
    9. '),' → logprob: -9.484785079956055
    10. ',
' → logprob: -10.484785079956055

Token 1561: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.019955098628997803
    2. ' edges' → logprob: -4.519955158233643
    3. 'original' → logprob: -5.144955158233643
    4. 'existing' → logprob: -6.019955158233643
    5. 'polygon' → logprob: -8.269954681396484
    6. '       ' → logprob: -9.269954681396484
    7. ' original' → logprob: -9.644954681396484
    8. '   ' → logprob: -9.894954681396484
    9. 'edge' → logprob: -10.269954681396484
    10. ' existing' → logprob: -10.519954681396484

Token 1562: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.006387906614691019
    2. ':' → logprob: -5.131387710571289
    3. '_:' → logprob: -9.256387710571289
    4. '):
' → logprob: -9.506387710571289
    5. '):' → logprob: -9.756387710571289
    6. 'indices' → logprob: -10.006387710571289
    7. 's' → logprob: -10.131387710571289
    8. '"indices' → logprob: -10.131387710571289
    9. '   ' → logprob: -10.256387710571289
    10. 'Indices' → logprob: -11.631387710571289

Token 1563: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02007393352687359
    2. '):
' → logprob: -4.145073890686035
    3. '):' → logprob: -5.520073890686035
    4. '):
' → logprob: -12.145073890686035
    5. ']:' → logprob: -12.145073890686035
    6. '   ' → logprob: -12.645073890686035
    7. ']):
' → logprob: -12.645073890686035
    8. ',' → logprob: -12.895073890686035
    9. '       ' → logprob: -13.270073890686035
    10. '```' → logprob: -13.895073890686035

Token 1564: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0005645881756208837
    2. ' List' → logprob: -7.5005645751953125
    3. '[List' → logprob: -11.375564575195312
    4. ')' → logprob: -15.750564575195312
    5. '	List' → logprob: -17.625564575195312
    6. 'list' → logprob: -18.250564575195312
    7. '[]' → logprob: -18.625564575195312
    8. '<List' → logprob: -18.750564575195312
    9. 'Optional' → logprob: -18.750564575195312
    10. '(List' → logprob: -18.750564575195312

Token 1565: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.259079363080673e-05
    2. '[int' → logprob: -12.000012397766113
    3. '   ' → logprob: -13.000012397766113
    4. '[List' → logprob: -13.875012397766113
    5. '[
' → logprob: -14.000012397766113
    6. '):
' → logprob: -14.250012397766113
    7. '[(' → logprob: -14.375012397766113
    8. ',' → logprob: -14.875012397766113
    9. '       ' → logprob: -15.000012397766113
    10. ')' → logprob: -16.25001335144043

Token 1566: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -7.100059156073257e-05
    2. 'int' → logprob: -9.625070571899414
    3. ' Tuple' → logprob: -12.375070571899414
    4. ')' → logprob: -15.875070571899414
    5. ']' → logprob: -16.250070571899414
    6. 'Tu' → logprob: -16.500070571899414
    7. '           ' → logprob: -16.500070571899414
    8. '   ' → logprob: -16.875070571899414
    9. '[' → logprob: -17.000070571899414
    10. '[int' → logprob: -17.125070571899414

Token 1567: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.2519473433494568
    2. 'int' → logprob: -1.5019474029541016
    3. '<int' → logprob: -11.751947402954102
    4. ',int' → logprob: -11.876947402954102
    5. ']int' → logprob: -13.626947402954102
    6. '(int' → logprob: -13.626947402954102
    7. ':int' → logprob: -14.501947402954102
    8. '=int' → logprob: -15.251947402954102
    9. ' int' → logprob: -15.876947402954102
    10. '	int' → logprob: -16.5019474029541

Token 1568: ',' (ID: 11)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.003167383372783661
    2. ',int' → logprob: -6.253167152404785
    3. '[int' → logprob: -6.753167152404785
    4. ',' → logprob: -9.878167152404785
    5. ' int' → logprob: -11.503167152404785
    6. ':int' → logprob: -12.503167152404785
    7. ']int' → logprob: -12.753167152404785
    8. '(int' → logprob: -13.128167152404785
    9. '<int' → logprob: -14.253167152404785
    10. '=int' → logprob: -16.1281681060791

Token 1569: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -5.919942486798391e-05
    2. ' int' → logprob: -9.750059127807617
    3. '[int' → logprob: -14.750059127807617
    4. '(int' → logprob: -15.875059127807617
    5. 'Optional' → logprob: -16.250059127807617
    6. '```' → logprob: -16.625059127807617
    7. '
' → logprob: -17.125059127807617
    8. 'Point' → logprob: -17.250059127807617
    9. '<int' → logprob: -17.500059127807617
    10. '   ' → logprob: -18.000059127807617

Token 1570: ']]' (ID: 8928)
  Prédit: ']):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):
' → logprob: -0.7552454471588135
    2. ']' → logprob: -1.0052454471588135
    3. ']):' → logprob: -2.5052454471588135
    4. ')]' → logprob: -2.7552454471588135
    5. ']]' → logprob: -4.505245208740234
    6. ']>' → logprob: -5.380245208740234
    7. '])' → logprob: -7.005245208740234
    8. ']}' → logprob: -7.005245208740234
    9. '])):
' → logprob: -7.755245208740234
    10. '       ' → logprob: -8.130245208740234

Token 1571: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6952480673789978
    2. '):' → logprob: -0.6952480673789978
    3. '       ' → logprob: -6.445248126983643
    4. ')' → logprob: -8.070247650146484
    5. '   ' → logprob: -8.820247650146484
    6. '):
' → logprob: -10.195247650146484
    7. ',' → logprob: -12.195247650146484
    8. ':' → logprob: -13.195247650146484
    9. '):

' → logprob: -13.195247650146484
    10. '```' → logprob: -14.195247650146484

Token 1572: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0047433990985155106
    2. 'self' → logprob: -5.629743576049805
    3. '   ' → logprob: -7.004743576049805
    4. 'def' → logprob: -9.129743576049805
    5. ' self' → logprob: -10.129743576049805
    6. '```' → logprob: -10.254743576049805
    7. '
' → logprob: -11.504743576049805
    8. '(self' → logprob: -12.004743576049805
    9. '        
' → logprob: -12.004743576049805
    10. ':' → logprob: -12.129743576049805

Token 1573: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0232741329818964
    2. '       ' → logprob: -3.7732741832733154
    3. ' self' → logprob: -10.523274421691895
    4. '   ' → logprob: -13.648274421691895
    5. 'super' → logprob: -16.023273468017578
    6. 'def' → logprob: -16.648273468017578
    7. '
' → logprob: -16.773273468017578
    8. 'import' → logprob: -16.773273468017578
    9. '```' → logprob: -16.898273468017578
    10. '	self' → logprob: -17.023273468017578

Token 1574: '.graph' (ID: 18104)
  Prédit: '.points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.points' → logprob: -0.0006828876794315875
    2. 'points' → logprob: -7.625682830810547
    3. ' .' → logprob: -9.500682830810547
    4. '.' → logprob: -9.625682830810547
    5. ' points' → logprob: -10.875682830810547
    6. '	points' → logprob: -11.375682830810547
    7. '.p' → logprob: -12.000682830810547
    8. '_points' → logprob: -12.875682830810547
    9. '(points' → logprob: -13.125682830810547
    10. '.Point' → logprob: -13.250682830810547

Token 1575: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022889316082
    2. '=' → logprob: -1.9102288484573364
    3. '   ' → logprob: -12.785228729248047
    4. ':' → logprob: -14.535228729248047
    5. '       ' → logprob: -14.785228729248047
    6. ' ' → logprob: -15.035228729248047
    7. '_points' → logprob: -15.910228729248047
    8. 'points' → logprob: -16.160228729248047
    9. ' =
' → logprob: -16.160228729248047
    10. '.' → logprob: -16.160228729248047

Token 1576: ' Village' (ID: 27912)
  Prédit: 'Village'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Village' → logprob: -0.01416350994259119
    2. ' Village' → logprob: -4.264163494110107
    3. 'Vill' → logprob: -17.264163970947266
    4. 'V' → logprob: -17.514163970947266
    5. ' village' → logprob: -19.264163970947266
    6. '   ' → logprob: -19.389163970947266
    7. 'Vue' → logprob: -19.639163970947266
    8. 'Villa' → logprob: -19.889163970947266
    9. '	V' → logprob: -20.639163970947266
    10. ' ' → logprob: -21.764163970947266

Token 1577: 'Graph' (ID: 9922)
  Prédit: 'Graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Graph' → logprob: -7.3458322731312364e-06
    2. 'Road' → logprob: -11.875007629394531
    3. 'graph' → logprob: -15.875007629394531
    4. 'Graphs' → logprob: -17.12500762939453
    5. '_graph' → logprob: -17.37500762939453
    6. 'raph' → logprob: -17.75000762939453
    7. '(Graph' → logprob: -17.87500762939453
    8. ' Graph' → logprob: -18.37500762939453
    9. '(points' → logprob: -18.75000762939453
    10. '.Graph' → logprob: -18.87500762939453

Token 1578: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -3.4121114822482923e-06
    2. 'points' → logprob: -12.625003814697266
    3. '(point' → logprob: -18.250003814697266
    4. '(' → logprob: -18.500003814697266
    5. ' points' → logprob: -18.750003814697266
    6. '	points' → logprob: -18.750003814697266
    7. ' (' → logprob: -19.250003814697266
    8. '(
' → logprob: -19.250003814697266
    9. '.points' → logprob: -19.750003814697266
    10. '   ' → logprob: -20.250003814697266

Token 1579: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020771251001860946
    2. ')' → logprob: -8.750207901000977
    3. ' ,' → logprob: -11.000207901000977
    4. '       ' → logprob: -11.250207901000977
    5. ',
' → logprob: -11.500207901000977
    6. '   ' → logprob: -12.750207901000977
    7. '.edges' → logprob: -13.500207901000977
    8. 'edges' → logprob: -13.625207901000977
    9. '(edges' → logprob: -14.000207901000977
    10. '[' → logprob: -14.625207901000977

Token 1580: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -9.65101717156358e-05
    2. ' edges' → logprob: -9.250096321105957
    3. 'edge' → logprob: -15.375096321105957
    4. '       ' → logprob: -17.375097274780273
    5. '   ' → logprob: -17.625097274780273
    6. '
' → logprob: -18.000097274780273
    7. '.edges' → logprob: -19.375097274780273
    8. 'Edges' → logprob: -19.500097274780273
    9. '           ' → logprob: -19.750097274780273
    10. '
' → logprob: -20.375097274780273

Token 1581: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -5.6934557505883276e-05
    2. 'indices' → logprob: -10.125057220458984
    3. ')' → logprob: -12.125057220458984
    4. '"indices' → logprob: -12.625057220458984
    5. ')
' → logprob: -13.250057220458984
    6. '       ' → logprob: -13.500057220458984
    7. '   ' → logprob: -13.875057220458984
    8. '
' → logprob: -14.500057220458984
    9. 'Indices' → logprob: -14.500057220458984
    10. '```' → logprob: -14.875057220458984

Token 1582: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.857719275401905e-05
    2. '       ' → logprob: -10.500038146972656
    3. ')
' → logprob: -11.750038146972656
    4. '   ' → logprob: -13.250038146972656
    5. ' )' → logprob: -13.750038146972656
    6. ' ' → logprob: -16.875038146972656
    7. '<|end|>' → logprob: -17.125038146972656
    8. '),' → logprob: -17.125038146972656
    9. '
' → logprob: -17.625038146972656
    10. ' ' → logprob: -18.250038146972656

Token 1583: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32836419343948364
    2. '   ' → logprob: -1.3283641338348389
    3. '
' → logprob: -4.578364372253418
    4. 'def' → logprob: -6.578364372253418
    5. 'self' → logprob: -6.828364372253418
    6. '```' → logprob: -7.203364372253418
    7. '<|end|>' → logprob: -7.578364372253418
    8. ' self' → logprob: -7.703364372253418
    9. ' def' → logprob: -8.078364372253418
    10. ',' → logprob: -9.328364372253418

Token 1584: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9223573207855225
    2. '       ' → logprob: -1.2973573207855225
    3. 'self' (adapté à ' self') → logprob: -1.5473573207855225
    4. '   ' → logprob: -2.1723573207855225
    5. '
' → logprob: -6.422357559204102
    6. ' def' → logprob: -7.672357559204102
    7. ' self' → logprob: -8.422357559204102
    8. 'class' → logprob: -10.172357559204102
    9. 'pass' → logprob: -10.422357559204102
    10. 'import' → logprob: -11.047357559204102

Token 1585: '.N' (ID: 4439)
  Prédit: '.v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.v' → logprob: -0.8539044260978699
    2. '.points' → logprob: -2.2289044857025146
    3. '.edges' → logprob: -2.3539044857025146
    4. '.best' → logprob: -2.7289044857025146
    5. '.conv' → logprob: -2.9789044857025146
    6. '.available' → logprob: -3.8539044857025146
    7. '.bound' → logprob: -3.8539044857025146
    8. '.p' → logprob: -3.9789044857025146
    9. '.all' → logprob: -3.9789044857025146
    10. '.selected' → logprob: -3.9789044857025146

Token 1586: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6862403154373169
    2. ' =' → logprob: -0.9362403154373169
    3. '<|end|>' → logprob: -2.3112401962280273
    4. ')' → logprob: -6.311240196228027
    5. '<|end|>' → logprob: -7.186240196228027
    6. '.' → logprob: -7.436240196228027
    7. ',' → logprob: -7.811240196228027
    8. ' ' → logprob: -7.936240196228027
    9. '
' → logprob: -8.311240196228027
    10. '    ' → logprob: -8.436240196228027

Token 1587: ' len' (ID: 4631)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6934167742729187
    2. 'len' → logprob: -0.6934167742729187
    3. ' len' → logprob: -8.693416595458984
    4. ' self' → logprob: -9.193416595458984
    5. '   ' → logprob: -17.068416595458984
    6. '(len' → logprob: -17.693416595458984
    7. '       ' → logprob: -17.693416595458984
    8. '
' → logprob: -18.318416595458984
    9. '=len' → logprob: -19.943416595458984
    10. '	len' → logprob: -20.068416595458984

Token 1588: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.0380435548722744
    2. '(self' → logprob: -3.28804349899292
    3. 'points' → logprob: -13.663043975830078
    4. '(point' → logprob: -14.663043975830078
    5. 'self' → logprob: -15.413043975830078
    6. '(' → logprob: -15.913043975830078
    7. ' points' → logprob: -16.663043975830078
    8. '	points' → logprob: -17.038043975830078
    9. '(p' → logprob: -17.788043975830078
    10. '(
' → logprob: -18.163043975830078

Token 1589: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.749814019713085e-06
    2. ')
' → logprob: -12.625006675720215
    3. ' )' → logprob: -13.375006675720215
    4. '       ' → logprob: -13.500006675720215
    5. '   ' → logprob: -14.750006675720215
    6. ' ' → logprob: -17.87500762939453
    7. '),' → logprob: -18.50000762939453
    8. '
' → logprob: -18.62500762939453
    9. '}' → logprob: -19.00000762939453
    10. ' ' → logprob: -19.50000762939453

Token 1590: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26503926515579224
    2. '
' → logprob: -2.0150392055511475
    3. '   ' → logprob: -2.3900392055511475
    4. '<|end|>' → logprob: -5.390039443969727
    5. 'def' → logprob: -6.765039443969727
    6. 'self' → logprob: -7.390039443969727
    7. ',' → logprob: -8.015039443969727
    8. ' self' → logprob: -8.265039443969727
    9. ' ' → logprob: -8.640039443969727
    10. ' def' → logprob: -8.890039443969727

Token 1591: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.08173070102930069
    2. '       ' → logprob: -2.581730604171753
    3. 'def' → logprob: -6.206730842590332
    4. '   ' → logprob: -7.706730842590332
    5. '
' → logprob: -8.206730842590332
    6. ' self' → logprob: -9.706730842590332
    7. '#' → logprob: -11.331730842590332
    8. 'polygon' → logprob: -12.456730842590332
    9. 'import' → logprob: -12.831730842590332
    10. 'from' → logprob: -12.956730842590332

Token 1592: '.original' (ID: 65193)
  Prédit: '.points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.points' → logprob: -0.7990397810935974
    2. '.p' → logprob: -1.0490398406982422
    3. '.graph' → logprob: -3.174039840698242
    4. '.edges' → logprob: -3.424039840698242
    5. '.bound' → logprob: -3.799039840698242
    6. '.' → logprob: -3.799039840698242
    7. '.v' → logprob: -3.924039840698242
    8. '.conv' → logprob: -4.674039840698242
    9. '.original' → logprob: -4.799039840698242
    10. '.pol' → logprob: -5.049039840698242

Token 1593: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.000712670327629894
    2. '_points' → logprob: -8.125712394714355
    3. 'edges' → logprob: -8.500712394714355
    4. '_edge' → logprob: -9.875712394714355
    5. '_ro' → logprob: -10.375712394714355
    6. '_graph' → logprob: -10.625712394714355
    7. 'Edges' → logprob: -10.625712394714355
    8. '_' → logprob: -10.625712394714355
    9. ' edges' → logprob: -11.625712394714355
    10. '_vertices' → logprob: -11.625712394714355

Token 1594: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3961438238620758
    2. '=' → logprob: -1.2711437940597534
    3. '<|end|>' → logprob: -3.896143913269043
    4. '[:]' → logprob: -4.396143913269043
    5. '=[]' → logprob: -5.146143913269043
    6. ':' → logprob: -5.396143913269043
    7. '.extend' → logprob: -7.146143913269043
    8. '<|end|>' → logprob: -7.271143913269043
    9. '.append' → logprob: -8.021143913269043
    10. '.' → logprob: -8.146143913269043

Token 1595: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003373694489710033
    2. ' self' → logprob: -8.250337600708008
    3. '[self' → logprob: -9.875337600708008
    4. 'list' → logprob: -10.625337600708008
    5. '[' → logprob: -15.875337600708008
    6. 'graph' → logprob: -16.500337600708008
    7. '[]' → logprob: -16.625337600708008
    8. ' list' → logprob: -16.875337600708008
    9. '[
' → logprob: -18.375337600708008
    10. '(self' → logprob: -18.500337600708008

Token 1596: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.0024993177503347397
    2. 'graph' → logprob: -6.002499103546143
    3. '.' → logprob: -11.7524995803833
    4. '.original' → logprob: -11.7524995803833
    5. '	graph' → logprob: -12.5024995803833
    6. 'original' → logprob: -13.1274995803833
    7. 'self' → logprob: -14.6274995803833
    8. ' .' → logprob: -14.7524995803833
    9. ' graph' → logprob: -14.8774995803833
    10. '
' → logprob: -15.1274995803833

Token 1597: '.original' (ID: 65193)
  Prédit: '.original'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.original' → logprob: -0.08290808647871017
    2. '.all' → logprob: -2.9579081535339355
    3. '.edges' → logprob: -3.9579081535339355
    4. '.' → logprob: -5.5829081535339355
    5. 'original' → logprob: -5.7079081535339355
    6. '.graph' → logprob: -8.082907676696777
    7. 'edges' → logprob: -8.207907676696777
    8. 'all' → logprob: -8.332907676696777
    9. '
' → logprob: -8.707907676696777
    10. '.edge' → logprob: -9.082907676696777

Token 1598: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -3.9054008084349334e-05
    2. 'edges' → logprob: -10.250039100646973
    3. '_' → logprob: -13.750039100646973
    4. ' edges' → logprob: -14.500039100646973
    5. '
' → logprob: -14.625039100646973
    6. 's' → logprob: -15.125039100646973
    7. 'Edges' → logprob: -15.375039100646973
    8. '_
' → logprob: -15.875039100646973
    9. '_edge' → logprob: -15.875039100646973
    10. '```' → logprob: -16.125038146972656

Token 1599: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020719854161143303
    2. '
' → logprob: -4.0207200050354
    3. '<|end|>' → logprob: -6.2707200050354
    4. 'self' → logprob: -8.145719528198242
    5. '   ' → logprob: -8.895719528198242
    6. '<|end|>' → logprob: -9.020719528198242
    7. ',' → logprob: -11.020719528198242
    8. '        
' → logprob: -11.145719528198242
    9. ' self' → logprob: -11.145719528198242
    10. '      ' → logprob: -11.520719528198242

Token 1600: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19309428334236145
    2. '   ' → logprob: -1.943094253540039
    3. '
' → logprob: -3.818094253540039
    4. '<|end|>' → logprob: -4.693094253540039
    5. 'def' → logprob: -7.943094253540039
    6. '```' → logprob: -8.193094253540039
    7. 'self' → logprob: -8.443094253540039
    8. ' self' → logprob: -9.193094253540039
    9. '<|end|>' → logprob: -9.318094253540039
    10. ' def' → logprob: -10.068094253540039

Token 1601: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.21072301268577576
    2. '       ' → logprob: -2.2107229232788086
    3. 'def' → logprob: -2.5857229232788086
    4. '   ' → logprob: -5.835722923278809
    5. ' self' → logprob: -6.585722923278809
    6. '
' → logprob: -7.335722923278809
    7. '#' → logprob: -10.460722923278809
    8. ' def' → logprob: -10.585722923278809
    9. 'from' → logprob: -12.210722923278809
    10. 'import' → logprob: -12.460722923278809

Token 1602: '.uf' (ID: 131293)
  Prédit: '.edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.edges' → logprob: -1.0568562746047974
    2. '.all' → logprob: -1.4318562746047974
    3. '.points' → logprob: -1.9318562746047974
    4. '.p' → logprob: -2.806856155395508
    5. '.available' → logprob: -3.056856155395508
    6. '.edge' → logprob: -3.431856155395508
    7. 'all' → logprob: -3.806856155395508
    8. 'edges' → logprob: -4.681856155395508
    9. '.best' → logprob: -4.681856155395508
    10. '.original' → logprob: -4.806856155395508

Token 1603: '_initial' (ID: 45740)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17975158989429474
    2. '=' → logprob: -1.8047516345977783
    3. '.' → logprob: -12.8047513961792
    4. '   ' → logprob: -14.1797513961792
    5. '  ' → logprob: -14.4297513961792
    6. 'f' → logprob: -14.6797513961792
    7. '    ' → logprob: -14.8047513961792
    8. ' ' → logprob: -14.9297513961792
    9. ':' → logprob: -15.0547513961792
    10. '(' → logprob: -15.4297513961792

Token 1604: ' =' (ID: 314)
  Prédit: '.union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.union' → logprob: -0.3095278739929199
    2. ' =' → logprob: -1.93452787399292
    3. '=' → logprob: -2.30952787399292
    4. '.' → logprob: -3.80952787399292
    5. 'union' → logprob: -9.184528350830078
    6. ' ' → logprob: -9.809528350830078
    7. '.un' → logprob: -10.809528350830078
    8. '.=' → logprob: -12.059528350830078
    9. '_union' → logprob: -12.059528350830078
    10. '	union' → logprob: -12.184528350830078

Token 1605: ' Union' (ID: 14746)
  Prédit: 'Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Union' → logprob: -0.001170225441455841
    2. ' Union' → logprob: -6.7511701583862305
    3. 'union' → logprob: -17.001171112060547
    4. '   ' → logprob: -17.376171112060547
    5. '_union' → logprob: -18.251171112060547
    6. ''Union' → logprob: -18.501171112060547
    7. ' union' → logprob: -19.126171112060547
    8. '       ' → logprob: -19.626171112060547
    9. ' ' → logprob: -20.126171112060547
    10. 'Universal' → logprob: -20.251171112060547

Token 1606: 'Find' (ID: 11437)
  Prédit: 'Find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Find' → logprob: -1.3856492842023727e-06
    2. '[' → logprob: -14.250000953674316
    3. '-F' → logprob: -15.875000953674316
    4. 'F' → logprob: -16.375001907348633
    5. '[int' → logprob: -16.375001907348633
    6. 'Fin' → logprob: -16.500001907348633
    7. '[]' → logprob: -16.750001907348633
    8. '
' → logprob: -17.125001907348633
    9. '   ' → logprob: -17.250001907348633
    10. '```' → logprob: -17.250001907348633

Token 1607: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.0325924449716695e-05
    2. '(' → logprob: -12.62501049041748
    3. 'self' → logprob: -12.75001049041748
    4. '(len' → logprob: -13.00001049041748
    5. '(
' → logprob: -13.25001049041748
    6. '[self' → logprob: -18.500009536743164
    7. '=self' → logprob: -19.000009536743164
    8. '(N' → logprob: -19.250009536743164
    9. '```' → logprob: -19.375009536743164
    10. ' self' → logprob: -19.625009536743164

Token 1608: '.N' (ID: 4439)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0007750853546895087
    2. 'self' → logprob: -7.25077486038208
    3. ')(' → logprob: -10.250775337219238
    4. '(' → logprob: -12.000775337219238
    5. ')' → logprob: -12.000775337219238
    6. '
' → logprob: -12.375775337219238
    7. '(len' → logprob: -12.500775337219238
    8. '(
' → logprob: -12.750775337219238
    9. ' self' → logprob: -13.000775337219238
    10. ',self' → logprob: -13.875775337219238

Token 1609: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.080963092041202e-06
    2. ')
' → logprob: -13.125004768371582
    3. '())' → logprob: -13.500004768371582
    4. ' )' → logprob: -13.625004768371582
    5. '()' → logprob: -15.125004768371582
    6. '(' → logprob: -15.750004768371582
    7. '   ' → logprob: -17.0000057220459
    8. '       ' → logprob: -17.7500057220459
    9. '))' → logprob: -17.7500057220459
    10. '[' → logprob: -18.1250057220459

Token 1610: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07979879528284073
    2. '   ' → logprob: -2.704798698425293
    3. '<|end|>' → logprob: -5.329798698425293
    4. '
' → logprob: -5.704798698425293
    5. 'self' → logprob: -6.829798698425293
    6. ' self' → logprob: -8.454798698425293
    7. '<|end|>' → logprob: -8.704798698425293
    8. ')' → logprob: -10.704798698425293
    9. '	self' → logprob: -10.954798698425293
    10. '```' → logprob: -11.079798698425293

Token 1611: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3904651403427124
    2. '       ' → logprob: -1.1404651403427124
    3. ' for' → logprob: -5.640465259552002
    4. 'self' → logprob: -11.015464782714844
    5. '   ' → logprob: -11.140464782714844
    6. '           ' → logprob: -13.515464782714844
    7. '
' → logprob: -13.640464782714844
    8. '#' → logprob: -13.765464782714844
    9. '	for' → logprob: -13.890464782714844
    10. '```' → logprob: -14.640464782714844

Token 1612: ' e' (ID: 319)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0024030047934502363
    2. 'e' → logprob: -6.7524027824401855
    3. '(u' → logprob: -6.8774027824401855
    4. 'edge' → logprob: -9.252403259277344
    5. ' u' → logprob: -9.752403259277344
    6. '```' → logprob: -11.127403259277344
    7. '   ' → logprob: -11.377403259277344
    8. '(e' → logprob: -12.877403259277344
    9. ' (' → logprob: -13.002403259277344
    10. '
' → logprob: -13.002403259277344

Token 1613: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009775333106517792
    2. 'in' → logprob: -4.634775161743164
    3. 'n' → logprob: -11.759775161743164
    4. 'e' → logprob: -12.259775161743164
    5. ' ' → logprob: -13.009775161743164
    6. 'self' → logprob: -13.634775161743164
    7. 's' → logprob: -14.009775161743164
    8. 'import' → logprob: -14.384775161743164
    9. ' e' → logprob: -14.759775161743164
    10. '	in' → logprob: -15.384775161743164

Token 1614: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.13388703338569e-06
    2. ' self' → logprob: -11.625009536743164
    3. '[self' → logprob: -16.375009536743164
    4. '(self' → logprob: -17.000009536743164
    5. '	self' → logprob: -17.875009536743164
    6. '   ' → logprob: -18.000009536743164
    7. '
' → logprob: -18.125009536743164
    8. '[' → logprob: -19.500009536743164
    9. ')' → logprob: -20.875009536743164
    10. '=self' → logprob: -21.500009536743164

Token 1615: '.original' (ID: 65193)
  Prédit: '.original'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.original' → logprob: -0.0004990590969100595
    2. 'original' → logprob: -7.625499248504639
    3. '.graph' → logprob: -11.75049877166748
    4. '.user' → logprob: -13.87549877166748
    5. 'graph' → logprob: -14.00049877166748
    6. 'Original' → logprob: -14.50049877166748
    7. '.' → logprob: -15.25049877166748
    8. '.origin' → logprob: -15.87549877166748
    9. '.orig' → logprob: -16.500499725341797
    10. '.initial' → logprob: -16.625499725341797

Token 1616: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -4.246537173457909e-06
    2. 'edges' → logprob: -12.875003814697266
    3. 'self' → logprob: -14.250003814697266
    4. '.edges' → logprob: -14.500003814697266
    5. 'Edges' → logprob: -15.875003814697266
    6. '_points' → logprob: -16.250003814697266
    7. '
' → logprob: -16.375003814697266
    8. 's' → logprob: -16.875003814697266
    9. '._' → logprob: -17.375003814697266
    10. ' edges' → logprob: -17.500003814697266

Token 1617: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.228542298078537
    2. ':' → logprob: -1.7285423278808594
    3. '.' → logprob: -3.9785423278808594
    4. '.union' → logprob: -5.728542327880859
    5. '           ' → logprob: -5.853542327880859
    6. '   ' → logprob: -6.853542327880859
    7. '       ' → logprob: -7.478542327880859
    8. 'self' → logprob: -9.22854232788086
    9. ':
' → logprob: -9.72854232788086
    10. '.
' → logprob: -10.47854232788086

Token 1618: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006232033483684063
    2. '   ' → logprob: -7.8756232261657715
    3. ' self' → logprob: -9.250622749328613
    4. '
' → logprob: -9.625622749328613
    5. 'self' → logprob: -11.000622749328613
    6. '	       ' → logprob: -11.125622749328613
    7. '       ' → logprob: -11.250622749328613
    8. '	   ' → logprob: -11.750622749328613
    9. '    	   ' → logprob: -12.125622749328613
    10. '		' → logprob: -12.500622749328613

Token 1619: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.008728026412427425
    2. ' self' → logprob: -5.00872802734375
    3. '_' → logprob: -6.75872802734375
    4. '           ' → logprob: -7.13372802734375
    5. '   ' → logprob: -10.13372802734375
    6. '       ' → logprob: -12.38372802734375
    7. ' _' → logprob: -12.50872802734375
    8. '               ' → logprob: -13.50872802734375
    9. '	self' → logprob: -13.75872802734375
    10. '_self' → logprob: -14.25872802734375

Token 1620: '.uf' (ID: 131293)
  Prédit: '.uf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.uf' → logprob: -0.00014060820103622973
    2. 'uf' → logprob: -8.875140190124512
    3. '.' → logprob: -15.875140190124512
    4. ' uf' → logprob: -16.000141143798828
    5. '.u' → logprob: -16.125141143798828
    6. ' .' → logprob: -16.500141143798828
    7. 'Uf' → logprob: -16.625141143798828
    8. '.ud' → logprob: -16.875141143798828
    9. '.um' → logprob: -17.250141143798828
    10. '.union' → logprob: -17.250141143798828

Token 1621: '_initial' (ID: 45740)
  Prédit: '.union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.union' → logprob: -0.5484961867332458
    2. '_initial' → logprob: -0.9234961867332458
    3. 'union' → logprob: -4.423496246337891
    4. '.initial' → logprob: -4.548496246337891
    5. 'Initial' → logprob: -7.048496246337891
    6. '.' → logprob: -7.673496246337891
    7. '_.' → logprob: -8.04849624633789
    8. '_union' → logprob: -8.79849624633789
    9. 'initial' → logprob: -9.04849624633789
    10. '.Initial' → logprob: -9.42349624633789

Token 1622: '.union' (ID: 140875)
  Prédit: '.union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.union' → logprob: -6.749814019713085e-06
    2. '.' → logprob: -12.000006675720215
    3. 'union' → logprob: -14.875006675720215
    4. ' .' → logprob: -16.25000762939453
    5. '.uniform' → logprob: -17.50000762939453
    6. '.uf' → logprob: -18.12500762939453
    7. '.un' → logprob: -18.25000762939453
    8. '	union' → logprob: -18.25000762939453
    9. '   ' → logprob: -19.12500762939453
    10. ').' → logprob: -20.62500762939453

Token 1623: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -3.7385154428193346e-05
    2. '(' → logprob: -10.25003719329834
    3. '(
' → logprob: -13.50003719329834
    4. ' (' → logprob: -14.50003719329834
    5. 'e' → logprob: -16.125038146972656
    6. '((' → logprob: -16.750038146972656
    7. '   ' → logprob: -19.000038146972656
    8. ' e' → logprob: -19.500038146972656
    9. ',e' → logprob: -20.500038146972656
    10. ')e' → logprob: -20.500038146972656

Token 1624: '.u' (ID: 22262)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.577521800994873
    2. 'e' → logprob: -0.827521800994873
    3. '.e' → logprob: -7.202521800994873
    4. ' e' → logprob: -7.702521800994873
    5. ',e' → logprob: -9.202522277832031
    6. ' (' → logprob: -9.327522277832031
    7. ')e' → logprob: -9.452522277832031
    8. ')' → logprob: -10.202522277832031
    9. '(' → logprob: -10.577522277832031
    10. '(
' → logprob: -10.702522277832031

Token 1625: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009339710813947022
    2. ',e' → logprob: -7.50093412399292
    3. ',
' → logprob: -8.500933647155762
    4. ' ,' → logprob: -8.875933647155762
    5. 'e' → logprob: -10.375933647155762
    6. ' e' → logprob: -12.250933647155762
    7. '           ' → logprob: -13.375933647155762
    8. '
' → logprob: -15.750933647155762
    9. ',
' → logprob: -17.000934600830078
    10. '`,' → logprob: -17.250934600830078

Token 1626: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0005537479883059859
    2. ' e' → logprob: -7.500553607940674
    3. '           ' → logprob: -14.375554084777832
    4. '   ' → logprob: -16.250553131103516
    5. '       ' → logprob: -17.875553131103516
    6. ')e' → logprob: -18.000553131103516
    7. ')' → logprob: -18.750553131103516
    8. '                   ' → logprob: -18.875553131103516
    9. '(e' → logprob: -19.000553131103516
    10. '	e' → logprob: -19.000553131103516

Token 1627: '.v' (ID: 5520)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14730753004550934
    2. '.e' → logprob: -2.2723076343536377
    3. ',e' → logprob: -4.397307395935059
    4. '.v' → logprob: -4.772307395935059
    5. 'e' → logprob: -5.272307395935059
    6. 'v' → logprob: -5.772307395935059
    7. ')' → logprob: -6.147307395935059
    8. ',v' → logprob: -6.772307395935059
    9. ',
' → logprob: -7.522307395935059
    10. '.' → logprob: -7.897307395935059

Token 1628: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2603901015827432e-05
    2. ')
' → logprob: -10.875022888183594
    3. '       ' → logprob: -12.625022888183594
    4. ' )' → logprob: -16.125022888183594
    5. '           ' → logprob: -16.375022888183594
    6. '),' → logprob: -18.250022888183594
    7. '   ' → logprob: -18.375022888183594
    8. '<|end|>' → logprob: -18.375022888183594
    9. ')#' → logprob: -18.375022888183594
    10. ')return' → logprob: -18.625022888183594

Token 1629: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06866364181041718
    2. '
' → logprob: -2.8186635971069336
    3. 'def' → logprob: -5.068663597106934
    4. ' def' → logprob: -8.318663597106934
    5. '       ' → logprob: -9.443663597106934
    6. '    
' → logprob: -10.693663597106934
    7. 'self' → logprob: -11.443663597106934
    8. '```' → logprob: -11.568663597106934
    9. '

' → logprob: -12.318663597106934
    10. 'import' → logprob: -12.443663597106934

Token 1630: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.007707062177360058
    2. '   ' → logprob: -5.257707118988037
    3. ' def' → logprob: -6.007707118988037
    4. '
' → logprob: -11.632706642150879
    5. '    
' → logprob: -15.132706642150879
    6. '	def' → logprob: -15.257706642150879
    7. '```' → logprob: -15.507706642150879
    8. 'import' → logprob: -15.507706642150879
    9. '       ' → logprob: -15.757706642150879
    10. ' ' → logprob: -15.757706642150879

Token 1631: ' compute' (ID: 23864)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -1.0480586290359497
    2. ' build' → logprob: -1.2980586290359497
    3. ' plan' → logprob: -1.4230586290359497
    4. ' compute' → logprob: -3.42305850982666
    5. 'build' → logprob: -3.54805850982666
    6. 'find' → logprob: -4.04805850982666
    7. ' def' → logprob: -4.04805850982666
    8. 'plan' → logprob: -4.92305850982666
    9. ' calculate' → logprob: -4.92305850982666
    10. 'def' → logprob: -5.67305850982666

Token 1632: '(self' (ID: 2402)
  Prédit: '_m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.453639417886734
    2. '_min' → logprob: -1.2036393880844116
    3. '_' → logprob: -3.953639507293701
    4. '_opt' → logprob: -4.828639507293701
    5. '()' → logprob: -5.328639507293701
    6. '_sp' → logprob: -5.453639507293701
    7. '(self' → logprob: -5.578639507293701
    8. '_next' → logprob: -5.703639507293701
    9. '_max' → logprob: -5.703639507293701
    10. '_best' → logprob: -5.703639507293701

Token 1633: ')' (ID: 8)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -1.1183539628982544
    2. '_' → logprob: -1.6183539628982544
    3. '_m' → logprob: -1.6183539628982544
    4. ')_' → logprob: -1.8683539628982544
    5. ')' → logprob: -2.493353843688965
    6. '_sp' → logprob: -4.993353843688965
    7. '_best' → logprob: -5.493353843688965
    8. '_M' → logprob: -5.618353843688965
    9. '_possible' → logprob: -5.993353843688965
    10. '_max' → logprob: -6.118353843688965

Token 1634: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.023913804441690445
    2. '(' → logprob: -4.773913860321045
    3. '       ' → logprob: -5.148913860321045
    4. '   ' → logprob: -5.523913860321045
    5. '(
' → logprob: -6.273913860321045
    6. ':' → logprob: -6.398913860321045
    7. 'self' → logprob: -6.523913860321045
    8. '_' → logprob: -9.523913383483887
    9. ':
' → logprob: -10.273913383483887
    10. '```' → logprob: -10.273913383483887

Token 1635: ' float' (ID: 4428)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.5366536378860474
    2. 'Edge' → logprob: -2.411653518676758
    3. 'None' → logprob: -2.411653518676758
    4. 'Optional' → logprob: -2.411653518676758
    5. 'Union' → logprob: -2.911653518676758
    6. 'Set' → logprob: -3.661653518676758
    7. 'int' → logprob: -3.786653518676758
    8. 'float' → logprob: -4.286653518676758
    9. ' List' → logprob: -4.661653518676758
    10. 'bool' → logprob: -5.161653518676758

Token 1636: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4817643463611603
    2. '       ' → logprob: -1.481764316558838
    3. '(self' → logprob: -2.106764316558838
    4. ':
' → logprob: -3.981764316558838
    5. '(' → logprob: -5.106764316558838
    6. '(
' → logprob: -5.481764316558838
    7. '   ' → logprob: -5.731764316558838
    8. 'self' → logprob: -7.606764316558838
    9. '):' → logprob: -8.481764793395996
    10. '():' → logprob: -8.981764793395996

Token 1637: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004856222774833441
    2. '
' → logprob: -5.504856109619141
    3. '        
' → logprob: -7.254856109619141
    4. '```' → logprob: -10.87985610961914
    5. '    
' → logprob: -11.50485610961914
    6. '#' → logprob: -11.50485610961914
    7. ' 
' → logprob: -12.12985610961914
    8. '  
' → logprob: -13.12985610961914
    9. ',' → logprob: -13.37985610961914
    10. 'n' → logprob: -13.50485610961914

Token 1638: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41498738527297974
    2. 'mst' → logprob: -1.414987325668335
    3. 'edges' → logprob: -3.414987325668335
    4. '#' (adapté à ' #') → logprob: -3.914987325668335
    5. 'uf' → logprob: -4.289987564086914
    6. 'all' → logprob: -4.664987564086914
    7. 'result' → logprob: -5.039987564086914
    8. ' edges' → logprob: -6.039987564086914
    9. ' mst' → logprob: -6.289987564086914
    10. 'possible' → logprob: -6.289987564086914

Token 1639: ' Step' (ID: 22291)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -1.27560293674469
    2. 'edges' → logprob: -1.40060293674469
    3. 'uf' → logprob: -1.90060293674469
    4. 'mst' → logprob: -1.90060293674469
    5. 'polygon' → logprob: -3.1506028175354004
    6. '#' → logprob: -3.2756028175354004
    7. 'points' → logprob: -4.1506028175354
    8. 'h' → logprob: -4.4006028175354
    9. '       ' → logprob: -4.4006028175354
    10. 'possible' → logprob: -4.7756028175354

Token 1640: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2404002547264099
    2. '       ' → logprob: -1.6154003143310547
    3. ' ' → logprob: -5.115400314331055
    4. '0' → logprob: -5.740400314331055
    5. ':' → logprob: -6.490400314331055
    6. 's' → logprob: -6.740400314331055
    7. '#' → logprob: -6.990400314331055
    8. '        ' → logprob: -7.115400314331055
    9. ' by' → logprob: -8.615400314331055
    10. '           ' → logprob: -8.615400314331055

Token 1641: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.179605171084404
    2. '#' → logprob: -2.17960524559021
    3. '       ' → logprob: -3.42960524559021
    4. '0' → logprob: -4.054605007171631
    5. 'edges' → logprob: -7.304605007171631
    6. 'all' → logprob: -8.429605484008789
    7. '```' → logprob: -8.429605484008789
    8. '   ' → logprob: -8.679605484008789
    9. 'self' → logprob: -9.054605484008789
    10. '2' → logprob: -9.679605484008789

Token 1642: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023039663210511208
    2. 'points' → logprob: -5.148039817810059
    3. 'all' → logprob: -5.523039817810059
    4. ':' → logprob: -5.773039817810059
    5. 'edges' → logprob: -5.898039817810059
    6. '#' → logprob: -6.273039817810059
    7. 'mst' → logprob: -6.398039817810059
    8. ' edges' → logprob: -7.398039817810059
    9. 'existing' → logprob: -7.523039817810059
    10. ' all' → logprob: -7.648039817810059

Token 1643: ' Compute' (ID: 45438)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.04814666882157326
    2. 'polygon' → logprob: -4.173146724700928
    3. '#' → logprob: -4.923146724700928
    4. 'all' → logprob: -5.423146724700928
    5. 'edges' → logprob: -5.548146724700928
    6. 'points' → logprob: -5.798146724700928
    7. 'initial' → logprob: -5.923146724700928
    8. 'conv' → logprob: -6.173146724700928
    9. 'uf' → logprob: -6.173146724700928
    10. 'mst' → logprob: -6.673146724700928

Token 1644: ' convex' (ID: 142423)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.018475564196705818
    2. 'conv' → logprob: -5.018475532531738
    3. '#' → logprob: -5.643475532531738
    4. 'all' → logprob: -6.143475532531738
    5. 'polygon' → logprob: -6.143475532531738
    6. '       ' → logprob: -6.393475532531738
    7. 'the' → logprob: -7.018475532531738
    8. 'points' → logprob: -7.768475532531738
    9. 'self' → logprob: -8.018475532531738
    10. '   ' → logprob: -8.393475532531738

Token 1645: ' hull' (ID: 74912)
  Prédit: '_h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.033886924386024475
    2. 'h' → logprob: -3.4088869094848633
    3. ' hull' → logprob: -8.408886909484863
    4. '_' → logprob: -12.158886909484863
    5. '	h' → logprob: -12.408886909484863
    6. '   ' → logprob: -12.533886909484863
    7. '       ' → logprob: -12.908886909484863
    8. ' ' → logprob: -14.158886909484863
    9. '#' → logprob: -15.033886909484863
    10. '```' → logprob: -15.158886909484863

Token 1646: ' polygon' (ID: 65081)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027388527989387512
    2. 'h' → logprob: -4.152388572692871
    3. 'points' → logprob: -4.902388572692871
    4. '(h' → logprob: -6.902388572692871
    5. 'polygon' → logprob: -7.027388572692871
    6. ' hull' → logprob: -8.152388572692871
    7. 'indices' → logprob: -8.527388572692871
    8. '(points' → logprob: -8.527388572692871
    9. ':' → logprob: -8.527388572692871
    10. ' points' → logprob: -8.527388572692871

Token 1647: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.094925157725811
    2. '
' → logprob: -2.4699251651763916
    3. 'points' → logprob: -5.4699249267578125
    4. '        
' → logprob: -7.5949249267578125
    5. 'polygon' → logprob: -7.7199249267578125
    6. 'h' → logprob: -8.344924926757812
    7. ' points' → logprob: -9.344924926757812
    8. '
' → logprob: -9.469924926757812
    9. '(points' → logprob: -9.844924926757812
    10. ',' → logprob: -10.094924926757812

Token 1648: ' all' (ID: 722)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018158959224820137
    2. ' self' → logprob: -4.018158912658691
    3. '(self' → logprob: -12.518158912658691
    4. '[self' → logprob: -13.018158912658691
    5. 'points' → logprob: -13.268158912658691
    6. 'the' → logprob: -14.518158912658691
    7. ' points' → logprob: -15.393158912658691
    8. '
' → logprob: -15.643158912658691
    9. '=self' → logprob: -15.768158912658691
    10. '	self' → logprob: -15.893158912658691

Token 1649: ' points' (ID: 5571)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002394559560343623
    2. 'points' → logprob: -6.377394676208496
    3. ' self' → logprob: -7.377394676208496
    4. '       ' → logprob: -9.877394676208496
    5. ' points' → logprob: -11.377394676208496
    6. '(self' → logprob: -13.002394676208496
    7. '   ' → logprob: -14.627394676208496
    8. '[self' → logprob: -14.627394676208496
    9. '_points' → logprob: -15.377394676208496
    10. '           ' → logprob: -15.752394676208496

Token 1650: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00886994693428278
    2. 'points' → logprob: -5.3838701248168945
    3. '
' → logprob: -6.1338701248168945
    4. 'polygon' → logprob: -7.5088701248168945
    5. 'h' → logprob: -7.7588701248168945
    6. '        
' → logprob: -8.258870124816895
    7. ':' → logprob: -8.633870124816895
    8. ' points' → logprob: -9.008870124816895
    9. ',' → logprob: -9.133870124816895
    10. '#' → logprob: -9.633870124816895

Token 1651: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010759611177491024
    2. 'points' → logprob: -9.875107765197754
    3. '
' → logprob: -10.875107765197754
    4. 'h' → logprob: -10.875107765197754
    5. 'polygon' → logprob: -11.875107765197754
    6. '```' → logprob: -11.875107765197754
    7. '   ' → logprob: -13.375107765197754
    8. '        
' → logprob: -14.125107765197754
    9. 'vertices' → logprob: -14.625107765197754
    10. 'self' → logprob: -15.375107765197754

Token 1652: ' hull' (ID: 74912)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05590750649571419
    2. 'h' → logprob: -3.3059074878692627
    3. 'polygon' → logprob: -4.055907726287842
    4. 'points' → logprob: -7.930907726287842
    5. ' polygon' → logprob: -11.555907249450684
    6. 'conv' → logprob: -12.305907249450684
    7. 'poly' → logprob: -12.805907249450684
    8. '   ' → logprob: -13.055907249450684
    9. '```' → logprob: -13.055907249450684
    10. ' hull' → logprob: -13.430907249450684

Token 1653: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.4763076603412628
    2. ' =' → logprob: -0.9763076305389404
    3. '_points' → logprob: -6.7263078689575195
    4. '=' → logprob: -6.9763078689575195
    5. '_idxs' → logprob: -10.22630786895752
    6. '_pts' → logprob: -10.60130786895752
    7. '   ' → logprob: -11.60130786895752
    8. '_ids' → logprob: -11.85130786895752
    9. '_indexes' → logprob: -12.35130786895752
    10. 'indices' → logprob: -12.72630786895752

Token 1654: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519298195838928
    2. '=' → logprob: -1.501929759979248
    3. ':' → logprob: -15.126930236816406
    4. ',' → logprob: -15.876930236816406
    5. ')' → logprob: -16.251930236816406
    6. '[:]' → logprob: -16.501930236816406
    7. '=[]' → logprob: -17.126930236816406
    8. ' =[' → logprob: -17.251930236816406
    9. '[' → logprob: -17.376930236816406
    10. ' =
' → logprob: -17.501930236816406

Token 1655: ' Conv' (ID: 52133)
  Prédit: 'Conv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Conv' → logprob: -0.011117971502244473
    2. ' Conv' → logprob: -4.511117935180664
    3. '       ' → logprob: -9.761117935180664
    4. 'self' → logprob: -11.761117935180664
    5. 'conv' → logprob: -14.011117935180664
    6. '   ' → logprob: -14.511117935180664
    7. ' convex' → logprob: -14.511117935180664
    8. '           ' → logprob: -14.636117935180664
    9. 'Const' → logprob: -14.761117935180664
    10. ' self' → logprob: -14.761117935180664

Token 1656: 'ex' (ID: 490)
  Prédit: 'ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -6.76628842484206e-05
    2. 'Hull' → logprob: -9.750067710876465
    3. 'Conv' → logprob: -11.875067710876465
    4. 'exp' → logprob: -14.125067710876465
    5. 'EX' → logprob: -14.500067710876465
    6. 'ext' → logprob: -14.875067710876465
    7. 'exc' → logprob: -15.750067710876465
    8. 'h' → logprob: -16.00006675720215
    9. 'Ex' → logprob: -16.37506675720215
    10. 'x' → logprob: -16.75006675720215

Token 1657: 'Hull' (ID: 159984)
  Prédit: 'Hull'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Hull' → logprob: -7.226628895296017e-06
    2. '_h' → logprob: -12.375007629394531
    3. ' Hull' → logprob: -13.875007629394531
    4. 'h' → logprob: -14.000007629394531
    5. '   ' → logprob: -15.125007629394531
    6. '_H' → logprob: -15.125007629394531
    7. 'Hill' → logprob: -15.625007629394531
    8. 'Hall' → logprob: -15.625007629394531
    9. '       ' → logprob: -16.50000762939453
    10. 'Hub' → logprob: -17.12500762939453

Token 1658: 'Calculator' (ID: 50159)
  Prédit: 'Calculator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Calculator' → logprob: -3.650518920039758e-06
    2. 'calculator' → logprob: -13.500003814697266
    3. 'Hull' → logprob: -14.125003814697266
    4. 'h' → logprob: -14.500003814697266
    5. ' Calculator' → logprob: -14.625003814697266
    6. 'Calc' → logprob: -15.875003814697266
    7. '(self' → logprob: -16.250003814697266
    8. '(h' → logprob: -16.750003814697266
    9. '[self' → logprob: -17.000003814697266
    10. '
' → logprob: -17.000003814697266

Token 1659: '.conv' (ID: 60346)
  Prédit: '.conv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.conv' → logprob: -1.0325924449716695e-05
    2. '.conc' → logprob: -12.62501049041748
    3. '.' → logprob: -12.75001049041748
    4. 'conv' → logprob: -13.87501049041748
    5. '.con' → logprob: -14.25001049041748
    6. '.const' → logprob: -14.37501049041748
    7. '.Conv' → logprob: -14.50001049041748
    8. ' convex' → logprob: -14.87501049041748
    9. ' .' → logprob: -15.00001049041748
    10. '(conv' → logprob: -15.50001049041748

Token 1660: 'ex' (ID: 490)
  Prédit: 'ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.24675890803337097
    2. 'h' → logprob: -1.7467589378356934
    3. '_h' → logprob: -3.1217589378356934
    4. '(h' → logprob: -8.746758460998535
    5. 'hul' → logprob: -10.996758460998535
    6. 'Hull' → logprob: -10.996758460998535
    7. '   ' → logprob: -11.121758460998535
    8. 'exp' → logprob: -12.121758460998535
    9. '_' → logprob: -12.246758460998535
    10. 'hx' → logprob: -12.621758460998535

Token 1661: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -5.157039049663581e-05
    2. 'h' → logprob: -9.875051498413086
    3. '_' → logprob: -16.625051498413086
    4. '   ' → logprob: -17.875051498413086
    5. '	h' → logprob: -18.625051498413086
    6. ' hull' → logprob: -19.000051498413086
    7. ' _' → logprob: -19.625051498413086
    8. '(h' → logprob: -20.000051498413086
    9. '```' → logprob: -20.125051498413086
    10. '\' → logprob: -20.375051498413086

Token 1662: 'ull' (ID: 754)
  Prédit: 'ull'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ull' → logprob: -0.00048501143464818597
    2. 'ul' → logprob: -7.750484943389893
    3. 'u' → logprob: -11.87548542022705
    4. 'ill' → logprob: -12.12548542022705
    5. '_' → logprob: -12.25048542022705
    6. 'all' → logprob: -12.37548542022705
    7. 'll' → logprob: -12.37548542022705
    8. 'h' → logprob: -13.12548542022705
    9. 'ulls' → logprob: -13.12548542022705
    10. '   ' → logprob: -13.25048542022705

Token 1663: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.3319124011322856e-05
    2. 'self' → logprob: -10.750022888183594
    3. '(' → logprob: -14.125022888183594
    4. ' (' → logprob: -14.750022888183594
    5. '       ' → logprob: -15.125022888183594
    6. ' self' → logprob: -16.250022888183594
    7. '(
' → logprob: -16.375022888183594
    8. '[self' → logprob: -17.000022888183594
    9. '   ' → logprob: -17.750022888183594
    10. '(list' → logprob: -17.875022888183594

Token 1664: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.576529324054718
    2. 'graph' → logprob: -0.826529324054718
    3. '.points' → logprob: -8.076529502868652
    4. 'points' → logprob: -8.201529502868652
    5. '	graph' → logprob: -13.701529502868652
    6. 'self' → logprob: -14.451529502868652
    7. '.point' → logprob: -14.701529502868652
    8. 'graphs' → logprob: -14.826529502868652
    9. '_graph' → logprob: -14.951529502868652
    10. '.grid' → logprob: -15.201529502868652

Token 1665: '.points' (ID: 66693)
  Prédit: '.points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.points' → logprob: -0.00027349460287950933
    2. 'points' → logprob: -8.250273704528809
    3. ' .' → logprob: -12.500273704528809
    4. '(points' → logprob: -13.000273704528809
    5. '	points' → logprob: -13.125273704528809
    6. '.' → logprob: -13.625273704528809
    7. ').' → logprob: -13.875273704528809
    8. '.point' → logprob: -14.375273704528809
    9. ' points' → logprob: -14.625273704528809
    10. '
' → logprob: -15.250273704528809

Token 1666: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20251347124576569
    2. ')
' → logprob: -1.7025134563446045
    3. '       ' → logprob: -6.827513694763184
    4. ')

' → logprob: -11.827513694763184
    5. ')
' → logprob: -12.327513694763184
    6. ' )' → logprob: -13.577513694763184
    7. ' )
' → logprob: -14.202513694763184
    8. '   ' → logprob: -14.452513694763184
    9. '
' → logprob: -15.452513694763184
    10. ')`
' → logprob: -15.702513694763184

Token 1667: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10764222592115402
    2. '
' → logprob: -2.60764217376709
    3. '        
' → logprob: -3.85764217376709
    4. ' hull' → logprob: -6.10764217376709
    5. ',' → logprob: -6.35764217376709
    6. ' polygon' → logprob: -7.85764217376709
    7. 'points' → logprob: -7.98264217376709
    8. '#' → logprob: -7.98264217376709
    9. '<|end|>' → logprob: -7.98264217376709
    10. 'polygon' → logprob: -8.23264217376709

Token 1668: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5474768280982971
    2. '
' → logprob: -1.2974767684936523
    3. 'polygon' → logprob: -2.1724767684936523
    4. '        
' → logprob: -4.172476768493652
    5. 'h' → logprob: -5.422476768493652
    6. ' polygon' → logprob: -5.547476768493652
    7. '#' → logprob: -5.797476768493652
    8. 'points' → logprob: -6.422476768493652
    9. ',' → logprob: -6.797476768493652
    10. ' hull' → logprob: -6.922476768493652

Token 1669: ' CC' (ID: 21547)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.3306906819343567
    2. 'polygon' → logprob: -1.330690622329712
    3. '       ' → logprob: -4.455690860748291
    4. ' polygon' → logprob: -6.330690860748291
    5. '#' → logprob: -6.455690860748291
    6. '
' → logprob: -6.580690860748291
    7. '        
' → logprob: -8.080690383911133
    8. ' hull' → logprob: -8.580690383911133
    9. '   ' → logprob: -9.330690383911133
    10. 'conv' → logprob: -10.080690383911133

Token 1670: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -1.259079363080673e-05
    2. 'w' → logprob: -12.125012397766113
    3. '       ' → logprob: -12.500012397766113
    4. '[' → logprob: -13.750012397766113
    5. '#' → logprob: -13.875012397766113
    6. '   ' → logprob: -15.000012397766113
    7. ' W' → logprob: -15.125012397766113
    8. '    ' → logprob: -15.500012397766113
    9. '```' → logprob: -15.625012397766113
    10. '        ' → logprob: -16.62501335144043

Token 1671: ' order' (ID: 2569)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8386158347129822
    2. '
' → logprob: -1.088615894317627
    3. ' hull' → logprob: -2.213615894317627
    4. ' polygon' → logprob: -2.838615894317627
    5. '        
' → logprob: -3.463615894317627
    6. 'polygon' → logprob: -4.213615894317627
    7. '#' → logprob: -5.713615894317627
    8. ')' → logprob: -6.088615894317627
    9. '_polygon' → logprob: -6.213615894317627
    10. '
' → logprob: -6.338615894317627

Token 1672: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7168146371841431
    2. '       ' → logprob: -0.7168146371841431
    3. '        
' → logprob: -4.3418145179748535
    4. ' polygon' → logprob: -6.2168145179748535
    5. 'polygon' → logprob: -6.3418145179748535
    6. ',' → logprob: -6.5918145179748535
    7. '<|end|>' → logprob: -6.8418145179748535
    8. ' hull' → logprob: -7.3418145179748535
    9. '#' → logprob: -7.8418145179748535
    10. '
' → logprob: -8.216814994812012

Token 1673: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12224941700696945
    2. '
' → logprob: -2.3722493648529053
    3. '        
' → logprob: -4.247249603271484
    4. ' polygon' → logprob: -5.372249603271484
    5. 'polygon' → logprob: -6.497249603271484
    6. ',' → logprob: -8.247249603271484
    7. '```' → logprob: -8.497249603271484
    8. '    
' → logprob: -9.122249603271484
    9. ' hull' → logprob: -9.497249603271484
    10. '_polygon' → logprob: -9.747249603271484

Token 1674: ' hull' (ID: 74912)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.716030478477478
    2. 'polygon' → logprob: -0.841030478477478
    3. '       ' → logprob: -2.7160305976867676
    4. 'all' → logprob: -5.591030597686768
    5. 'inside' → logprob: -5.841030597686768
    6. 'inter' → logprob: -6.091030597686768
    7. '#' → logprob: -6.216030597686768
    8. 'inner' → logprob: -7.591030597686768
    9. 'points' → logprob: -7.966030597686768
    10. 'internal' → logprob: -7.966030597686768

Token 1675: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.5392845869064331
    2. '_points' → logprob: -1.039284586906433
    3. '_indices' → logprob: -3.6642847061157227
    4. '_' → logprob: -3.6642847061157227
    5. ' =' → logprob: -5.539284706115723
    6. '_polygon' → logprob: -6.164284706115723
    7. '_pts' → logprob: -6.414284706115723
    8. '_edges' → logprob: -6.539284706115723
    9. '_point' → logprob: -7.164284706115723
    10. '_vertices' → logprob: -7.414284706115723

Token 1676: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759433507919312
    2. ' =' → logprob: -0.8259433507919312
    3. '=set' → logprob: -12.575942993164062
    4. ':' → logprob: -14.700942993164062
    5. '```' → logprob: -17.700942993164062
    6. ' ' → logprob: -17.950942993164062
    7. '   ' → logprob: -18.325942993164062
    8. ' =
' → logprob: -18.700942993164062
    9. '=
' → logprob: -18.825942993164062
    10. ' ' → logprob: -19.075942993164062

Token 1677: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.06196824833750725
    2. ' set' → logprob: -2.8119683265686035
    3. '{' → logprob: -15.186967849731445
    4. '=set' → logprob: -15.311967849731445
    5. '	set' → logprob: -16.436967849731445
    6. '(set' → logprob: -17.186967849731445
    7. ')set' → logprob: -17.686967849731445
    8. '_set' → logprob: -19.811967849731445
    9. 'Set' → logprob: -20.061967849731445
    10. '   ' → logprob: -20.061967849731445

Token 1678: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.8789383830153383e-05
    2. '(' → logprob: -11.000019073486328
    3. '(
' → logprob: -13.375019073486328
    4. '()' → logprob: -15.375019073486328
    5. 'h' → logprob: -16.500019073486328
    6. '([' → logprob: -17.375019073486328
    7. '((' → logprob: -17.500019073486328
    8. ' (' → logprob: -17.625019073486328
    9. '(p' → logprob: -17.750019073486328
    10. '```' → logprob: -17.875019073486328

Token 1679: 'ull' (ID: 754)
  Prédit: 'ull'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ull' → logprob: -0.20717579126358032
    2. '(h' → logprob: -1.7071757316589355
    3. 'h' → logprob: -5.3321757316589355
    4. 'ul' → logprob: -8.332176208496094
    5. 'ulls' → logprob: -8.832176208496094
    6. '(' → logprob: -9.082176208496094
    7. ')' → logprob: -9.832176208496094
    8. 'ud' → logprob: -10.332176208496094
    9. '(
' → logprob: -10.457176208496094
    10. '([' → logprob: -10.707176208496094

Token 1680: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.016929637640714645
    2. '(h' → logprob: -4.516929626464844
    3. 'indices' → logprob: -5.266929626464844
    4. ')' → logprob: -7.891929626464844
    5. 's' → logprob: -8.766929626464844
    6. 'Indices' → logprob: -9.766929626464844
    7. 'h' → logprob: -10.141929626464844
    8. '   ' → logprob: -10.641929626464844
    9. 'ind' → logprob: -12.016929626464844
    10. '_indexes' → logprob: -12.016929626464844

Token 1681: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31471943855285645
    2. ')
' → logprob: -1.3147194385528564
    3. '       ' → logprob: -6.564719200134277
    4. ')
' → logprob: -10.939719200134277
    5. ')

' → logprob: -10.939719200134277
    6. '
' → logprob: -12.564719200134277
    7. '()' → logprob: -13.189719200134277
    8. ' )' → logprob: -13.939719200134277
    9. '()
' → logprob: -13.939719200134277
    10. '   ' → logprob: -14.189719200134277

Token 1682: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01156939659267664
    2. '#' → logprob: -5.386569499969482
    3. 'all' → logprob: -5.886569499969482
    4. 'polygon' → logprob: -6.636569499969482
    5. '        
' → logprob: -7.386569499969482
    6. '
' → logprob: -7.511569499969482
    7. 'rest' → logprob: -7.886569499969482
    8. 'edges' → logprob: -7.886569499969482
    9. 'points' → logprob: -8.386569023132324
    10. 'full' → logprob: -9.511569023132324

Token 1683: ' #' (ID: 1069)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.12182915955781937
    2. 'edges' → logprob: -3.1218292713165283
    3. '#' (adapté à ' #') → logprob: -3.9968292713165283
    4. '       ' → logprob: -4.496829032897949
    5. 'possible' → logprob: -4.621829032897949
    6. 'available' → logprob: -4.871829032897949
    7. 'inside' → logprob: -4.996829032897949
    8. 'outside' → logprob: -5.496829032897949
    9. 'full' → logprob: -6.246829032897949
    10. 'valid' → logprob: -6.621829032897949

Token 1684: ' Step' (ID: 22291)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.6460424065589905
    2. 'edges' → logprob: -2.1460423469543457
    3. 'inside' → logprob: -2.3960423469543457
    4. '#' → logprob: -2.6460423469543457
    5. 'available' → logprob: -2.7710423469543457
    6. 'possible' → logprob: -3.6460423469543457
    7. 'candidate' → logprob: -3.6460423469543457
    8. 'h' → logprob: -4.021042346954346
    9. 'polygon' → logprob: -4.521042346954346
    10. 'valid' → logprob: -4.646042346954346

Token 1685: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.55291348695755
    2. '1' → logprob: -1.3029134273529053
    3. '       ' → logprob: -2.0529134273529053
    4. '   ' → logprob: -4.552913665771484
    5. ' =' → logprob: -5.302913665771484
    6. '2' → logprob: -5.552913665771484
    7. '=' → logprob: -6.427913665771484
    8. ':' → logprob: -6.927913665771484
    9. '        ' → logprob: -7.177913665771484
    10. '    ' → logprob: -7.552913665771484

Token 1686: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11670792102813721
    2. '2' → logprob: -2.3667078018188477
    3. '0' → logprob: -4.491707801818848
    4. '3' → logprob: -5.741707801818848
    5. '       ' → logprob: -6.991707801818848
    6. '   ' → logprob: -7.741707801818848
    7. '4' → logprob: -8.491707801818848
    8. '```' → logprob: -9.616707801818848
    9. ':' → logprob: -9.866707801818848
    10. 'self' → logprob: -10.116707801818848

Token 1687: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.633743405342102
    2. '       ' → logprob: -0.758743405342102
    3. ',' → logprob: -8.008743286132812
    4. ' :' → logprob: -8.383743286132812
    5. ' =' → logprob: -8.758743286132812
    6. '#' → logprob: -9.383743286132812
    7. ':
' → logprob: -9.633743286132812
    8. '=' → logprob: -9.633743286132812
    9. '        
' → logprob: -10.008743286132812
    10. '
' → logprob: -10.258743286132812

Token 1688: ' Check' (ID: 6208)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7565604448318481
    2. 'edges' → logprob: -2.3815603256225586
    3. 'uf' → logprob: -2.5065603256225586
    4. '       ' → logprob: -3.0065603256225586
    5. 'all' → logprob: -3.0065603256225586
    6. 'available' → logprob: -3.2565603256225586
    7. 'possible' → logprob: -3.3815603256225586
    8. 'mst' → logprob: -3.3815603256225586
    9. 'allowed' → logprob: -4.131560325622559
    10. 'valid' → logprob: -4.256560325622559

Token 1689: ' edges' (ID: 22569)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4380858838558197
    2. 'if' → logprob: -2.0630857944488525
    3. '       ' → logprob: -2.4380857944488525
    4. '#' → logprob: -2.8130857944488525
    5. 'for' → logprob: -3.4380857944488525
    6. ' for' → logprob: -4.313086032867432
    7. ' all' → logprob: -4.938086032867432
    8. 'all' → logprob: -5.063086032867432
    9. '   ' → logprob: -5.313086032867432
    10. ' #' → logprob: -5.313086032867432

Token 1690: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34293094277381897
    2. 'for' → logprob: -1.7179309129714966
    3. ' =' → logprob: -3.342931032180786
    4. 'in' → logprob: -3.717931032180786
    5. 'outside' → logprob: -4.592930793762207
    6. '_in' → logprob: -4.967930793762207
    7. ' for' → logprob: -5.467930793762207
    8. '_to' → logprob: -5.467930793762207
    9. 'used' → logprob: -5.717930793762207
    10. ' in' → logprob: -5.967930793762207

Token 1691: ' hull' (ID: 74912)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.035644128918647766
    2. 'the' → logprob: -3.535644054412842
    3. ' the' → logprob: -5.785644054412842
    4. ' hull' → logprob: -7.035644054412842
    5. 'polygon' → logprob: -7.035644054412842
    6. 'conv' → logprob: -7.285644054412842
    7. ' polygon' → logprob: -8.28564453125
    8. ' convex' → logprob: -10.03564453125
    9. 'boundary' → logprob: -11.03564453125
    10. '#' → logprob: -11.66064453125

Token 1692: ' exist' (ID: 4310)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6715396046638489
    2. '       ' → logprob: -0.9215396046638489
    3. ' for' → logprob: -3.296539545059204
    4. ' =' → logprob: -4.546539783477783
    5. ':' → logprob: -4.671539783477783
    6. 'edges' → logprob: -5.296539783477783
    7. '_edges' → logprob: -5.296539783477783
    8. 'present' → logprob: -5.421539783477783
    9. '
' → logprob: -5.796539783477783
    10. '_used' → logprob: -5.921539783477783

Token 1693: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012190475827082992
    2. ' for' → logprob: -7.001219272613525
    3. 'for' → logprob: -9.001218795776367
    4. ' in' → logprob: -9.501218795776367
    5. ' and' → logprob: -10.001218795776367
    6. ',' → logprob: -10.251218795776367
    7. ':' → logprob: -12.001218795776367
    8. 'in' → logprob: -12.001218795776367
    9. '           ' → logprob: -12.376218795776367
    10. ' =' → logprob: -12.626218795776367

Token 1694: ' original' (ID: 4756)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0013516645412892103
    2. ' self' → logprob: -7.126351833343506
    3. 'set' → logprob: -8.501351356506348
    4. '{' → logprob: -8.751351356506348
    5. 'the' → logprob: -9.751351356506348
    6. 'edge' → logprob: -10.376351356506348
    7. 'edges' → logprob: -10.501351356506348
    8. '[self' → logprob: -10.876351356506348
    9. '       ' → logprob: -10.876351356506348
    10. 'original' → logprob: -12.126351356506348

Token 1695: ' edges' (ID: 22569)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.5858253240585327
    2. 'edges' → logprob: -0.8358253240585327
    3. ' edges' → logprob: -5.210825443267822
    4. '       ' → logprob: -5.710825443267822
    5. 'self' → logprob: -7.585825443267822
    6. '
' → logprob: -8.460824966430664
    7. 'for' → logprob: -8.710824966430664
    8. '   ' → logprob: -10.085824966430664
    9. '#' → logprob: -10.835824966430664
    10. '_edge' → logprob: -11.210824966430664

Token 1696: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013715129171032459
    2. 'for' → logprob: -9.375137329101562
    3. '
' → logprob: -10.125137329101562
    4. ' for' → logprob: -11.500137329101562
    5. '        
' → logprob: -14.125137329101562
    6. ',' → logprob: -14.250137329101562
    7. 'edges' → logprob: -15.625137329101562
    8. '           ' → logprob: -16.125137329101562
    9. ':' → logprob: -16.625137329101562
    10. '```' → logprob: -16.625137329101562

Token 1697: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003927487414330244
    2. ' for' → logprob: -6.753927707672119
    3. '#' → logprob: -7.003927707672119
    4. 'for' → logprob: -7.378927707672119
    5. ' if' → logprob: -7.878927707672119
    6. ' and' → logprob: -8.003927230834961
    7. 'if' → logprob: -8.753927230834961
    8. '
' → logprob: -9.253927230834961
    9. 'and' → logprob: -9.253927230834961
    10. ' or' → logprob: -10.503927230834961

Token 1698: ' they' (ID: 1023)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2275606393814087
    2. 'raise' → logprob: -2.102560520172119
    3. ' return' → logprob: -2.977560520172119
    4. '           ' → logprob: -3.727560520172119
    5. ' raise' → logprob: -5.102560520172119
    6. '#' → logprob: -8.477560997009277
    7. '
' → logprob: -10.602560997009277
    8. 'self' → logprob: -10.852560997009277
    9. '       ' → logprob: -10.977560997009277
    10. ' #' → logprob: -11.352560997009277

Token 1699: ' need' (ID: 1309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.412038654088974
    2. 'return' → logprob: -1.6620386838912964
    3. 'raise' → logprob: -2.287038564682007
    4. ' raise' → logprob: -3.662038564682007
    5. ' return' → logprob: -4.162038803100586
    6. 'continue' → logprob: -6.162038803100586
    7. '#' → logprob: -6.662038803100586
    8. '	raise' → logprob: -8.287038803100586
    9. ':' → logprob: -8.412038803100586
    10. '   ' → logprob: -8.537038803100586

Token 1700: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.009785249829292297
    2. ' to' → logprob: -4.634785175323486
    3. 'replacement' → logprob: -11.884785652160645
    4. '#' → logprob: -12.259785652160645
    5. 'addition' → logprob: -12.509785652160645
    6. 're' → logprob: -12.634785652160645
    7. '   ' → logprob: -12.759785652160645
    8. 'added' → logprob: -13.009785652160645
    9. '_to' → logprob: -13.259785652160645
    10. 'adding' → logprob: -13.884785652160645

Token 1701: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.003466786816716194
    2. ' be' → logprob: -6.253466606140137
    3. '#' → logprob: -6.878466606140137
    4. 'add' → logprob: -8.378466606140137
    5. 'added' → logprob: -8.378466606140137
    6. '
' → logprob: -11.128466606140137
    7. 'self' → logprob: -11.503466606140137
    8. 'return' → logprob: -12.503466606140137
    9. 'raise' → logprob: -12.628466606140137
    10. '       ' → logprob: -12.628466606140137

Token 1702: ' constructed' (ID: 30248)
  Prédit: 'added'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'added' → logprob: -0.0027749205473810434
    2. ' added' → logprob: -6.752774715423584
    3. 're' → logprob: -7.002774715423584
    4. 'constructed' → logprob: -8.252775192260742
    5. '   ' → logprob: -9.377775192260742
    6. '#' → logprob: -9.502775192260742
    7. 'removed' → logprob: -9.752775192260742
    8. 'connected' → logprob: -10.252775192260742
    9. 'created' → logprob: -10.377775192260742
    10. 'planned' → logprob: -10.627775192260742

Token 1703: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004236531909555197
    2. '
' → logprob: -6.254236698150635
    3. ' for' → logprob: -6.504236698150635
    4. 'for' → logprob: -7.254236698150635
    5. ',' → logprob: -10.254236221313477
    6. '        
' → logprob: -10.629236221313477
    7. '```' → logprob: -11.129236221313477
    8. '<|end|>' → logprob: -11.754236221313477
    9. '           ' → logprob: -13.254236221313477
    10. ':' → logprob: -13.254236221313477

Token 1704: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011715330183506012
    2. '
' → logprob: -7.251171588897705
    3. 'for' → logprob: -8.126171112060547
    4. ' for' → logprob: -8.876171112060547
    5. '```' → logprob: -11.001171112060547
    6. '        
' → logprob: -12.376171112060547
    7. 'edges' → logprob: -12.751171112060547
    8. ' edges' → logprob: -14.376171112060547
    9. '   ' → logprob: -15.001171112060547
    10. '           ' → logprob: -15.126171112060547

Token 1705: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020514914765954018
    2. 'for' → logprob: -4.395514965057373
    3. ' for' → logprob: -5.145514965057373
    4. 'edges' → logprob: -7.895514965057373
    5. ' new' → logprob: -8.145514488220215
    6. 'new' → logprob: -8.270514488220215
    7. 'missing' → logprob: -8.270514488220215
    8. 'needed' → logprob: -8.645514488220215
    9. ' missing' → logprob: -9.020514488220215
    10. 'existing' → logprob: -9.020514488220215

Token 1706: ' We'll' (ID: 46830)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38070836663246155
    2. '       ' → logprob: -1.6307083368301392
    3. 'missing' → logprob: -2.3807084560394287
    4. 'needed' → logprob: -4.63070821762085
    5. 'new' → logprob: -5.50570821762085
    6. 'added' → logprob: -5.75570821762085
    7. '#' → logprob: -6.00570821762085
    8. 'edges' → logprob: -6.25570821762085
    9. 'constructed' → logprob: -6.50570821762085
    10. 'existing' → logprob: -6.63070821762085

Token 1707: ' build' (ID: 3024)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4360608458518982
    2. 'continue' → logprob: -1.936060905456543
    3. ' add' → logprob: -2.811060905456543
    4. ' continue' → logprob: -2.936060905456543
    5. 'add' → logprob: -3.811060905456543
    6. ' for' → logprob: -4.186060905456543
    7. '
' → logprob: -4.686060905456543
    8. 'for' → logprob: -4.686060905456543
    9. '#' → logprob: -5.686060905456543
    10. ' edges' → logprob: -5.686060905456543

Token 1708: ' the' (ID: 290)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.60565984249115
    2. '       ' → logprob: -1.60565984249115
    3. 'edges' → logprob: -2.1056599617004395
    4. 'additional' → logprob: -2.4806599617004395
    5. 'needed' → logprob: -2.6056599617004395
    6. 'new' → logprob: -2.7306599617004395
    7. ' new' → logprob: -2.7306599617004395
    8. ' a' → logprob: -3.2306599617004395
    9. ' edges' → logprob: -3.7306599617004395
    10. 'extra' → logprob: -4.1056599617004395

Token 1709: ' minimal' (ID: 19957)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.678089439868927
    2. 'needed' → logprob: -1.6780893802642822
    3. 'new' → logprob: -2.4280893802642822
    4. 'h' → logprob: -2.8030893802642822
    5. 'required' → logprob: -3.0530893802642822
    6. 'missing' → logprob: -3.5530893802642822
    7. 'additional' → logprob: -4.178089618682861
    8. 'remaining' → logprob: -4.678089618682861
    9. 'mst' → logprob: -4.678089618682861
    10. '#' → logprob: -4.803089618682861

Token 1710: ' total' (ID: 3609)
  Prédit: ' spanning'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' spanning' → logprob: -0.03330215439200401
    2. 'sp' → logprob: -3.658302068710327
    3. '_sp' → logprob: -6.158302307128906
    4. ' required' → logprob: -6.908302307128906
    5. ' additional' → logprob: -7.283302307128906
    6. 'edges' → logprob: -7.283302307128906
    7. ' edges' → logprob: -7.408302307128906
    8. ' new' → logprob: -7.533302307128906
    9. '_edges' → logprob: -8.033302307128906
    10. 'additional' → logprob: -8.283302307128906

Token 1711: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.5828773975372314
    2. ' length' → logprob: -1.0828773975372314
    3. 'cost' → logprob: -3.2078773975372314
    4. '_length' → logprob: -3.5828773975372314
    5. ' cost' → logprob: -4.582877159118652
    6. ' spanning' → logprob: -4.707877159118652
    7. '_cost' → logprob: -4.832877159118652
    8. '_sp' → logprob: -5.957877159118652
    9. '_edges' → logprob: -6.582877159118652
    10. 'edges' → logprob: -7.332877159118652

Token 1712: ' that' (ID: 484)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06619107723236084
    2. '
' → logprob: -4.06619119644165
    3. '#' → logprob: -4.31619119644165
    4. 'edges' → logprob: -4.56619119644165
    5. ' edges' → logprob: -4.69119119644165
    6. '        
' → logprob: -5.06619119644165
    7. ' spanning' → logprob: -6.69119119644165
    8. 'mst' → logprob: -6.81619119644165
    9. '(edges' → logprob: -6.94119119644165
    10. '```' → logprob: -7.44119119644165

Token 1713: ' includes' (ID: 6664)
  Prédit: ' includes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' includes' → logprob: -0.7151299715042114
    2. 'includes' → logprob: -0.9651299715042114
    3. ' connects' → logprob: -2.840129852294922
    4. 'connect' → logprob: -2.965129852294922
    5. ' covers' → logprob: -4.965129852294922
    6. 'covers' → logprob: -5.965129852294922
    7. ' respects' → logprob: -6.590129852294922
    8. ' preserves' → logprob: -6.840129852294922
    9. '
' → logprob: -7.090129852294922
    10. ' completes' → logprob: -7.215129852294922

Token 1714: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.0341656431555748
    2. 'h' → logprob: -3.909165620803833
    3. ' all' → logprob: -4.909165859222412
    4. 'the' → logprob: -5.159165859222412
    5. '```' → logprob: -8.784165382385254
    6. '#' → logprob: -9.159165382385254
    7. '
' → logprob: -10.284165382385254
    8. ' the' → logprob: -10.409165382385254
    9. '   ' → logprob: -10.534165382385254
    10. 'each' → logprob: -10.909165382385254

Token 1715: ' needed' (ID: 6118)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.002504793694242835
    2. 'edges' → logprob: -6.377504825592041
    3. ' hull' → logprob: -8.002504348754883
    4. 'points' → logprob: -9.002504348754883
    5. ' edges' → logprob: -9.252504348754883
    6. 'vertices' → logprob: -9.627504348754883
    7. '   ' → logprob: -10.377504348754883
    8. 'polygon' → logprob: -10.377504348754883
    9. '```' → logprob: -10.627504348754883
    10. 'conv' → logprob: -11.127504348754883

Token 1716: ' hull' (ID: 74912)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.055869970470666885
    2. 'edges' → logprob: -2.9308700561523438
    3. ' edges' → logprob: -8.055870056152344
    4. '```' → logprob: -8.305870056152344
    5. 'for' → logprob: -8.805870056152344
    6. 'polygon' → logprob: -9.680870056152344
    7. 'boundary' → logprob: -9.805870056152344
    8. '#' → logprob: -10.055870056152344
    9. ' hull' → logprob: -10.305870056152344
    10. 'connections' → logprob: -11.180870056152344

Token 1717: ' edges' (ID: 22569)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.5156038999557495
    2. 'edges' → logprob: -1.3906038999557495
    3. ' edges' → logprob: -1.8906038999557495
    4. '       ' → logprob: -6.640604019165039
    5. '_indices' → logprob: -7.515604019165039
    6. '   ' → logprob: -7.640604019165039
    7. '_' → logprob: -8.515604019165039
    8. '
' → logprob: -9.515604019165039
    9. 'indices' → logprob: -9.640604019165039
    10. '```' → logprob: -9.890604019165039

Token 1718: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.203210711479187
    2. '
' → logprob: -1.828210711479187
    3. '        
' → logprob: -4.328210830688477
    4. ' edges' → logprob: -5.828210830688477
    5. 'edges' → logprob: -6.078210830688477
    6. '```' → logprob: -6.828210830688477
    7. ',' → logprob: -6.953210830688477
    8. 'total' → logprob: -7.703210830688477
    9. '#' → logprob: -8.078210830688477
    10. '_edges' → logprob: -8.578210830688477

Token 1719: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010024038143455982
    2. '
' → logprob: -4.885024070739746
    3. ' edges' → logprob: -6.760024070739746
    4. 'edges' → logprob: -7.635024070739746
    5. '        
' → logprob: -8.010024070739746
    6. ',' → logprob: -9.510024070739746
    7. ' total' → logprob: -9.510024070739746
    8. 'total' → logprob: -9.760024070739746
    9. '```' → logprob: -9.760024070739746
    10. '#' → logprob: -10.135024070739746

Token 1720: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08310086280107498
    2. '
' → logprob: -3.4581007957458496
    3. 'all' → logprob: -4.58310079574585
    4. 'mst' → logprob: -4.58310079574585
    5. 'edges' → logprob: -4.70810079574585
    6. ' edges' → logprob: -4.95810079574585
    7. '#' (adapté à ' #') → logprob: -5.45810079574585
    8. ' all' → logprob: -6.70810079574585
    9. '        
' → logprob: -6.83310079574585
    10. 'available' → logprob: -7.45810079574585

Token 1721: ' Step' (ID: 22291)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24382905662059784
    2. 'all' → logprob: -2.4938290119171143
    3. 'edges' → logprob: -2.6188290119171143
    4. 'available' → logprob: -3.4938290119171143
    5. '#' → logprob: -4.618829250335693
    6. 'possible' → logprob: -4.993829250335693
    7. 'mst' → logprob: -5.368829250335693
    8. 'needed' → logprob: -5.868829250335693
    9. 'additional' → logprob: -6.993829250335693
    10. 'new' → logprob: -6.993829250335693

Token 1722: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2637597322463989
    2. '1' → logprob: -1.638759732246399
    3. ' ' → logprob: -4.763759613037109
    4. ':' → logprob: -4.763759613037109
    5. '           ' → logprob: -5.388759613037109
    6. ' =' → logprob: -5.763759613037109
    7. '=' → logprob: -5.763759613037109
    8. '2' → logprob: -5.763759613037109
    9. '   ' → logprob: -6.138759613037109
    10. '        ' → logprob: -6.763759613037109

Token 1723: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18661433458328247
    2. '2' → logprob: -2.0616142749786377
    3. '       ' → logprob: -3.6866142749786377
    4. '3' → logprob: -4.311614513397217
    5. '0' → logprob: -5.811614513397217
    6. ' ' → logprob: -7.936614513397217
    7. '```' → logprob: -8.061614036560059
    8. '#' → logprob: -8.186614036560059
    9. '   ' → logprob: -8.186614036560059
    10. '           ' → logprob: -8.686614036560059

Token 1724: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014776713214814663
    2. '       ' → logprob: -4.264776706695557
    3. ':
' → logprob: -7.639776706695557
    4. ',' → logprob: -10.139777183532715
    5. '   ' → logprob: -11.264777183532715
    6. '
' → logprob: -11.264777183532715
    7. '#' → logprob: -11.264777183532715
    8. '=' → logprob: -11.514777183532715
    9. ' :' → logprob: -11.764777183532715
    10. ' =' → logprob: -11.764777183532715

Token 1725: ' Build' (ID: 10885)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.2688528299331665
    2. '       ' → logprob: -2.393852710723877
    3. '#' → logprob: -2.643852710723877
    4. 'edges' → logprob: -3.393852710723877
    5. 'possible' → logprob: -4.143852710723877
    6. 'available' → logprob: -4.268852710723877
    7. 'existing' → logprob: -6.518852710723877
    8. 'Add' → logprob: -6.768852710723877
    9. ' all' → logprob: -6.893852710723877
    10. 'candidate' → logprob: -6.893852710723877

Token 1726: ' graph' (ID: 7465)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.2928580343723297
    2. 'mst' → logprob: -2.417858123779297
    3. 'edges' → logprob: -2.542858123779297
    4. '       ' → logprob: -2.792858123779297
    5. 'possible' → logprob: -4.042858123779297
    6. '#' → logprob: -5.792858123779297
    7. ' all' → logprob: -6.917858123779297
    8. 'available' → logprob: -6.917858123779297
    9. '```' → logprob: -7.917858123779297
    10. 'additional' → logprob: -8.292858123779297

Token 1727: ' edges' (ID: 22569)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04438471421599388
    2. '
' → logprob: -3.669384717941284
    3. ' edges' → logprob: -4.544384479522705
    4. 'edges' → logprob: -5.669384479522705
    5. 'all' → logprob: -6.169384479522705
    6. ' all' → logprob: -7.544384479522705
    7. '        
' → logprob: -7.794384479522705
    8. '#' → logprob: -8.044384956359863
    9. '```' → logprob: -8.294384956359863
    10. '(edges' → logprob: -9.794384956359863

Token 1728: ' which' (ID: 1118)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1221420168876648
    2. '
' → logprob: -2.2471420764923096
    3. 'edges' → logprob: -5.4971418380737305
    4. 'all' → logprob: -5.8721418380737305
    5. '        
' → logprob: -6.8721418380737305
    6. ' edges' → logprob: -6.9971418380737305
    7. '```' → logprob: -8.62214183807373
    8. ' all' → logprob: -9.37214183807373
    9. '
' → logprob: -10.37214183807373
    10. '    
' → logprob: -10.49714183807373

Token 1729: ' are' (ID: 553)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.354696273803711
    2. 'include' → logprob: -2.104696273803711
    3. ' can' → logprob: -2.479696273803711
    4. ' are' → logprob: -2.604696273803711
    5. 'must' → logprob: -2.604696273803711
    6. ' include' → logprob: -2.729696273803711
    7. 'can' → logprob: -2.854696273803711
    8. 'are' → logprob: -3.104696273803711
    9. 'should' → logprob: -3.104696273803711
    10. ' =' → logprob: -3.104696273803711

Token 1730: ' original' (ID: 4756)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.12733279168605804
    2. '[' → logprob: -3.0023326873779297
    3. '[]
' → logprob: -3.5023326873779297
    4. '[
' → logprob: -4.25233268737793
    5. 'self' → logprob: -4.62733268737793
    6. 'allowed' → logprob: -5.25233268737793
    7. 'all' → logprob: -6.25233268737793
    8. 'valid' → logprob: -6.37733268737793
    9. '[e' → logprob: -6.37733268737793
    10. '[self' → logprob: -6.75233268737793

Token 1731: ' edges' (ID: 22569)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.14804038405418396
    2. ' +' → logprob: -2.648040294647217
    3. '_' → logprob: -3.648040294647217
    4. '+' → logprob: -4.023040294647217
    5. '       ' → logprob: -4.273040294647217
    6. 'edges' → logprob: -5.898040294647217
    7. '```' → logprob: -6.273040294647217
    8. '
' → logprob: -7.398040294647217
    9. '   ' → logprob: -7.898040294647217
    10. '           ' → logprob: -8.273040771484375

Token 1732: ' or' (ID: 503)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3340299725532532
    2. '+' → logprob: -1.4590299129486084
    3. '       ' → logprob: -3.2090299129486084
    4. ' =' → logprob: -5.8340301513671875
    5. '=' → logprob: -6.5840301513671875
    6. '
' → logprob: -6.8340301513671875
    7. 'self' → logprob: -6.9590301513671875
    8. '+
' → logprob: -7.0840301513671875
    9. '+self' → logprob: -7.2090301513671875
    10. ' +
' → logprob: -7.9590301513671875

Token 1733: ' hull' (ID: 74912)
  Prédit: 'Edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -1.4593610763549805
    2. 'self' → logprob: -1.8343610763549805
    3. 'edges' → logprob: -2.4593610763549805
    4. 'additional' → logprob: -2.5843610763549805
    5. 'constructed' → logprob: -2.5843610763549805
    6. '#' → logprob: -2.7093610763549805
    7. 'all' → logprob: -2.9593610763549805
    8. 'import' → logprob: -3.2093610763549805
    9. 'possible' → logprob: -3.3343610763549805
    10. 'new' → logprob: -3.3343610763549805

Token 1734: ' polygon' (ID: 65081)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.015264380723237991
    2. '       ' → logprob: -5.515264511108398
    3. 'edges' → logprob: -5.765264511108398
    4. '_' → logprob: -5.890264511108398
    5. '_indices' → logprob: -5.890264511108398
    6. ' edges' → logprob: -6.890264511108398
    7. '   ' → logprob: -8.015264511108398
    8. '_points' → logprob: -8.390264511108398
    9. '_edge' → logprob: -9.140264511108398
    10. '           ' → logprob: -9.390264511108398

Token 1735: ' edges' (ID: 22569)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.36450648307800293
    2. 'edges' → logprob: -2.114506483078003
    3. ' edges' → logprob: -2.364506483078003
    4. '       ' → logprob: -2.864506483078003
    5. '
' → logprob: -3.864506483078003
    6. '_points' → logprob: -6.364506721496582
    7. ',' → logprob: -6.489506721496582
    8. '_candidates' → logprob: -6.864506721496582
    9. '(edges' → logprob: -7.364506721496582
    10. '#' → logprob: -7.364506721496582

Token 1736: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15800067782402039
    2. '
' → logprob: -2.2830007076263428
    3. '        
' → logprob: -4.283000469207764
    4. 'edges' → logprob: -4.408000469207764
    5. ' edges' → logprob: -4.408000469207764
    6. '```' → logprob: -6.158000469207764
    7. 'all' → logprob: -7.033000469207764
    8. '``' → logprob: -7.408000469207764
    9. '_edges' → logprob: -7.783000469207764
    10. '#' → logprob: -7.908000469207764

Token 1737: 'added' (ID: 28841)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.7479259967803955
    2. '[]' → logprob: -1.9979259967803955
    3. '[h' → logprob: -2.1229259967803955
    4. '       ' → logprob: -2.6229259967803955
    5. 'self' → logprob: -2.7479259967803955
    6. ')' → logprob: -2.8729259967803955
    7. '[]
' → logprob: -2.9979259967803955
    8. ')
' → logprob: -3.1229259967803955
    9. '[' → logprob: -3.4979259967803955
    10. '[])
' → logprob: -3.4979259967803955

Token 1738: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.341559648513794
    2. ' not' → logprob: -1.591559648513794
    3. ' if' → logprob: -1.716559648513794
    4. 'if' → logprob: -2.216559648513794
    5. 'not' → logprob: -2.466559648513794
    6. 'that' → logprob: -3.591559648513794
    7. ',' → logprob: -3.591559648513794
    8. 'with' → logprob: -3.716559648513794
    9. 'edges' → logprob: -4.591559410095215
    10. ' ones' → logprob: -4.716559410095215

Token 1739: ' missing' (ID: 12486)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.11801600456237793
    2. 'not' → logprob: -2.368016004562378
    3. 'missing' → logprob: -4.743016242980957
    4. '(not' → logprob: -5.618016242980957
    5. 'min' → logprob: -6.243016242980957
    6. ' (' → logprob: -7.118016242980957
    7. '(h' → logprob: -7.368016242980957
    8. '(m' → logprob: -7.743016242980957
    9. ' not' → logprob: -8.118016242980957
    10. '(abs' → logprob: -8.243016242980957

Token 1740: ')

' (ID: 1029)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.26889920234680176
    2. '       ' → logprob: -1.8938992023468018
    3. ')' → logprob: -2.6438992023468018
    4. ' edges' → logprob: -4.768898963928223
    5. '):
' → logprob: -6.268898963928223
    6. 'edges' → logprob: -6.893898963928223
    7. ').
' → logprob: -7.518898963928223
    8. '),' → logprob: -7.768898963928223
    9. ',' → logprob: -8.143898963928223
    10. '_edges' → logprob: -8.143898963928223

Token 1741: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023937204852700233
    2. '
' → logprob: -4.523937225341797
    3. 'edges' → logprob: -4.773937225341797
    4. 'all' → logprob: -6.398937225341797
    5. '        
' → logprob: -7.273937225341797
    6. ' edges' → logprob: -7.398937225341797
    7. 'new' → logprob: -7.648937225341797
    8. '#' → logprob: -7.648937225341797
    9. 'existing' → logprob: -9.648937225341797
    10. '```' → logprob: -9.773937225341797

Token 1742: ' #' (ID: 1069)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.43358632922172546
    2. 'all' → logprob: -1.1835863590240479
    3. '       ' → logprob: -3.433586359024048
    4. 'available' → logprob: -5.808586120605469
    5. '#' (adapté à ' #') → logprob: -6.433586120605469
    6. 'added' → logprob: -6.683586120605469
    7. 'extra' → logprob: -6.683586120605469
    8. 'full' → logprob: -6.808586120605469
    9. 'existing' → logprob: -7.058586120605469
    10. 'additional' → logprob: -7.183586120605469

Token 1743: ' Build' (ID: 10885)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.6633737087249756
    2. 'all' → logprob: -0.9133737087249756
    3. 'available' → logprob: -3.5383737087249756
    4. '#' → logprob: -4.538373947143555
    5. 'h' → logprob: -4.913373947143555
    6. 'needed' → logprob: -5.038373947143555
    7. 'existing' → logprob: -5.163373947143555
    8. 'added' → logprob: -5.413373947143555
    9. 'extra' → logprob: -5.788373947143555
    10. 'full' → logprob: -5.788373947143555

Token 1744: ' hull' (ID: 74912)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.11953133344650269
    2. 'all' → logprob: -2.9945313930511475
    3. ' edges' → logprob: -3.4945313930511475
    4. '       ' → logprob: -4.869531154632568
    5. 'new' → logprob: -5.244531154632568
    6. 'edge' → logprob: -5.494531154632568
    7. 'additional' → logprob: -5.494531154632568
    8. ' all' → logprob: -6.119531154632568
    9. ' new' → logprob: -6.369531154632568
    10. 'extra' → logprob: -6.494531154632568

Token 1745: ' polygon' (ID: 65081)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.003954444080591202
    2. 'edges' → logprob: -6.6289544105529785
    3. '_edge' → logprob: -6.6289544105529785
    4. '_indices' → logprob: -7.7539544105529785
    5. '_points' → logprob: -8.253954887390137
    6. '_polygon' → logprob: -8.253954887390137
    7. '       ' → logprob: -9.128954887390137
    8. '_h' → logprob: -9.253954887390137
    9. ' =' → logprob: -9.878954887390137
    10. '   ' → logprob: -11.253954887390137

Token 1746: ' edges' (ID: 22569)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.37684524059295654
    2. '_polygon' → logprob: -2.501845359802246
    3. 'polygon' → logprob: -2.751845359802246
    4. '_points' → logprob: -3.126845359802246
    5. ' =' → logprob: -3.376845359802246
    6. 'edges' → logprob: -3.501845359802246
    7. '_indices' → logprob: -4.001845359802246
    8. '       ' → logprob: -4.001845359802246
    9. '_vertices' → logprob: -4.626845359802246
    10. '_edge' → logprob: -5.876845359802246

Token 1747: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1150873601436615
    2. 'h' → logprob: -2.2400872707366943
    3. 'edges' → logprob: -6.365087509155273
    4. '        
' → logprob: -9.240087509155273
    5. '```' → logprob: -9.365087509155273
    6. 'for' → logprob: -9.490087509155273
    7. 'edge' → logprob: -10.115087509155273
    8. ' hull' → logprob: -10.240087509155273
    9. '	h' → logprob: -10.615087509155273
    10. '   ' → logprob: -10.615087509155273

Token 1748: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038570782635360956
    2. 'h' → logprob: -6.378857135772705
    3. 'edges' → logprob: -6.503857135772705
    4. '```' → logprob: -7.753857135772705
    5. '
' → logprob: -9.503856658935547
    6. '        
' → logprob: -10.253856658935547
    7. 'for' → logprob: -10.628856658935547
    8. '``' → logprob: -11.253856658935547
    9. 'additional' → logprob: -11.503856658935547
    10. ' hull' → logprob: -11.503856658935547

Token 1749: ' hull' (ID: 74912)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.01649622432887554
    2. '       ' → logprob: -4.141496181488037
    3. 'self' → logprob: -8.266496658325195
    4. 'missing' → logprob: -9.641496658325195
    5. 'edges' → logprob: -10.141496658325195
    6. 'additional' → logprob: -10.891496658325195
    7. 'added' → logprob: -11.016496658325195
    8. 'for' → logprob: -11.141496658325195
    9. 'new' → logprob: -11.391496658325195
    10. ' hull' → logprob: -11.641496658325195

Token 1750: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.0016018638852983713
    2. '_indices' → logprob: -6.876601696014404
    3. '_polygon' → logprob: -8.376602172851562
    4. 'edges' → logprob: -9.626602172851562
    5. '_size' → logprob: -9.751602172851562
    6. '_points' → logprob: -9.876602172851562
    7. '_len' → logprob: -9.876602172851562
    8. '_edge' → logprob: -10.376602172851562
    9. '_pairs' → logprob: -10.751602172851562
    10. '_' → logprob: -11.126602172851562

Token 1751: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.694277822971344
    2. ' =' → logprob: -0.694277822971344
    3. ':' → logprob: -6.944277763366699
    4. '=[]' → logprob: -8.8192777633667
    5. '=[]
' → logprob: -11.4442777633667
    6. '   ' → logprob: -12.8192777633667
    7. '_' → logprob: -13.0692777633667
    8. 's' → logprob: -14.6942777633667
    9. '=[' → logprob: -14.9442777633667
    10. '[:]' → logprob: -15.3192777633667

Token 1752: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.21132689714431763
    2. '[' → logprob: -1.7113268375396729
    3. '[]' → logprob: -4.711327075958252
    4. '[
' → logprob: -7.461327075958252
    5. '[(' → logprob: -8.336326599121094
    6. '[]

' → logprob: -10.086326599121094
    7. ' []
' → logprob: -12.211326599121094
    8. '[])
' → logprob: -12.586326599121094
    9. '[List' → logprob: -13.461326599121094
    10. '[E' → logprob: -13.711326599121094

Token 1753: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01824839413166046
    2. 'for' → logprob: -4.018248558044434
    3. ' for' → logprob: -9.268248558044434
    4. '```' → logprob: -13.018248558044434
    5. '   ' → logprob: -13.893248558044434
    6. '
' → logprob: -14.768248558044434
    7. '           ' → logprob: -15.143248558044434
    8. '        
' → logprob: -16.518247604370117
    9. '	for' → logprob: -17.143247604370117
    10. '[' → logprob: -17.643247604370117

Token 1754: ' points' (ID: 5571)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0010536498157307506
    2. ' for' → logprob: -7.001053810119629
    3. '       ' → logprob: -8.876053810119629
    4. 'n' → logprob: -13.001053810119629
    5. 'm' → logprob: -15.876053810119629
    6. '```' → logprob: -16.376052856445312
    7. 'prev' → logprob: -18.001052856445312
    8. '	for' → logprob: -18.126052856445312
    9. ' n' → logprob: -18.376052856445312
    10. '``' → logprob: -18.876052856445312

Token 1755: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4530433416366577
    2. '=' → logprob: -2.0780434608459473
    3. '_count' → logprob: -2.7030434608459473
    4. '_len' → logprob: -2.7030434608459473
    5. '_h' → logprob: -3.7030434608459473
    6. '_indices' → logprob: -4.203043460845947
    7. '=h' → logprob: -4.703043460845947
    8. 'len' → logprob: -4.703043460845947
    9. 'for' → logprob: -4.828043460845947
    10. '[h' → logprob: -5.078043460845947

Token 1756: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0026666230987757444
    2. ' self' → logprob: -6.002666473388672
    3. '       ' → logprob: -8.752666473388672
    4. '[self' → logprob: -10.502666473388672
    5. '           ' → logprob: -13.502666473388672
    6. '   ' → logprob: -13.752666473388672
    7. '	self' → logprob: -14.002666473388672
    8. '[' → logprob: -14.377666473388672
    9. '
' → logprob: -14.502666473388672
    10. '(self' → logprob: -14.752666473388672

Token 1757: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.018162699416279793
    2. 'graph' → logprob: -4.018162727355957
    3. '	graph' → logprob: -11.768162727355957
    4. '.' → logprob: -13.018162727355957
    5. ' graph' → logprob: -13.893162727355957
    6. ' .' → logprob: -14.268162727355957
    7. '(graph' → logprob: -14.768162727355957
    8. '.points' → logprob: -15.393162727355957
    9. '
' → logprob: -15.768162727355957
    10. 'points' → logprob: -16.01816177368164

Token 1758: '.points' (ID: 66693)
  Prédit: '.points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.points' → logprob: -0.0013567865826189518
    2. 'points' → logprob: -6.626356601715088
    3. '	points' → logprob: -11.251357078552246
    4. '.' → logprob: -12.251357078552246
    5. '(points' → logprob: -12.251357078552246
    6. ' points' → logprob: -12.626357078552246
    7. ' .' → logprob: -13.626357078552246
    8. '       ' → logprob: -13.876357078552246
    9. '.
' → logprob: -14.501357078552246
    10. '   ' → logprob: -14.626357078552246

Token 1759: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7901551127433777
    2. 'for' → logprob: -0.9151551127433777
    3. ' for' → logprob: -2.5401551723480225
    4. '
' → logprob: -2.7901551723480225
    5. '<|end|>' → logprob: -6.165154933929443
    6. '        
' → logprob: -6.915154933929443
    7. '```' → logprob: -7.290154933929443
    8. ',' → logprob: -7.915154933929443
    9. ' 
' → logprob: -8.665155410766602
    10. '  
' → logprob: -8.915155410766602

Token 1760: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3879016041755676
    2. 'for' → logprob: -1.1379015445709229
    3. ' for' → logprob: -6.887901782989502
    4. '```' → logprob: -11.887901306152344
    5. 'n' → logprob: -13.637901306152344
    6. '   ' → logprob: -14.137901306152344
    7. '
' → logprob: -14.512901306152344
    8. '	for' → logprob: -15.012901306152344
    9. '           ' → logprob: -16.012901306152344
    10. '        
' → logprob: -16.012901306152344

Token 1761: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0016643505077809095
    2. '       ' → logprob: -6.501664161682129
    3. ' for' → logprob: -8.876664161682129
    4. 'm' → logprob: -10.876664161682129
    5. 'n' → logprob: -12.751664161682129
    6. '```' → logprob: -14.501664161682129
    7. '
' → logprob: -16.626665115356445
    8. '``' → logprob: -16.876665115356445
    9. 'M' → logprob: -17.626665115356445
    10. '   ' → logprob: -17.751665115356445

Token 1762: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0013313100207597017
    2. ' i' → logprob: -6.626331329345703
    3. '   ' → logprob: -12.626331329345703
    4. 'idx' → logprob: -14.376331329345703
    5. '_i' → logprob: -14.626331329345703
    6. '	i' → logprob: -14.626331329345703
    7. '```' → logprob: -15.251331329345703
    8. ' ' → logprob: -15.876331329345703
    9. '
' → logprob: -15.876331329345703
    10. '(i' → logprob: -17.126331329345703

Token 1763: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3487037718296051
    2. 'in' → logprob: -1.2237037420272827
    3. ',' → logprob: -8.473703384399414
    4. 'n' → logprob: -11.473703384399414
    5. '	in' → logprob: -11.598703384399414
    6. ' ' → logprob: -11.848703384399414
    7. '
' → logprob: -11.848703384399414
    8. ' ,' → logprob: -12.598703384399414
    9. '_in' → logprob: -12.723703384399414
    10. '   ' → logprob: -13.473703384399414

Token 1764: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005537479883059859
    2. ' range' → logprob: -7.500553607940674
    3. '
' → logprob: -14.750554084777832
    4. '   ' → logprob: -15.375554084777832
    5. '0' → logprob: -17.625553131103516
    6. ' ' → logprob: -17.750553131103516
    7. '	range' → logprob: -17.750553131103516
    8. '```' → logprob: -18.000553131103516
    9. '(range' → logprob: -18.250553131103516
    10. 'len' → logprob: -18.625553131103516

Token 1765: '(len' (ID: 14990)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.01427645143121481
    2. '(len' → logprob: -4.264276504516602
    3. ' len' → logprob: -9.139276504516602
    4. '1' → logprob: -13.514276504516602
    5. '	len' → logprob: -13.514276504516602
    6. '(' → logprob: -13.764276504516602
    7. '[len' → logprob: -14.014276504516602
    8. ',len' → logprob: -15.264276504516602
    9. '   ' → logprob: -15.389276504516602
    10. '<len' → logprob: -15.889276504516602

Token 1766: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.011047935113310814
    2. 'h' → logprob: -4.511047840118408
    3. '	h' → logprob: -17.51104736328125
    4. '(' → logprob: -17.88604736328125
    5. 'hul' → logprob: -18.26104736328125
    6. ' hull' → logprob: -18.76104736328125
    7. '[h' → logprob: -19.01104736328125
    8. '<h' → logprob: -19.76104736328125
    9. '```' → logprob: -20.01104736328125
    10. ' h' → logprob: -20.13604736328125

Token 1767: 'ull' (ID: 754)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.2324354499578476
    2. 'ull' → logprob: -1.6074354648590088
    3. '(h' → logprob: -4.98243522644043
    4. 'u' → logprob: -10.35743522644043
    5. 'ul' → logprob: -10.48243522644043
    6. ')' → logprob: -10.85743522644043
    7. 'ulls' → logprob: -10.98243522644043
    8. '(' → logprob: -11.98243522644043
    9. '   ' → logprob: -12.35743522644043
    10. 'ulk' → logprob: -12.48243522644043

Token 1768: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.0009718484943732619
    2. 'indices' → logprob: -7.125971794128418
    3. 'h' → logprob: -9.000971794128418
    4. '_edges' → logprob: -11.125971794128418
    5. '(h' → logprob: -11.500971794128418
    6. '
' → logprob: -12.250971794128418
    7. '(indices' → logprob: -12.750971794128418
    8. ')' → logprob: -13.125971794128418
    9. '_points' → logprob: -13.375971794128418
    10. '   ' → logprob: -13.375971794128418

Token 1769: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0072424099780619144
    2. '):' → logprob: -5.132242202758789
    3. ')):
' → logprob: -7.507242202758789
    4. '):
' → logprob: -8.007242202758789
    5. ' ):
' → logprob: -8.632242202758789
    6. '-' → logprob: -9.632242202758789
    7. '   ' → logprob: -10.007242202758789
    8. ')' → logprob: -10.257242202758789
    9. ' -' → logprob: -10.382242202758789
    10. '       ' → logprob: -10.507242202758789

Token 1770: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11599484086036682
    2. 'u' → logprob: -2.990994930267334
    3. ' u' → logprob: -3.240994930267334
    4. '   ' → logprob: -3.990994930267334
    5. 'a' → logprob: -6.615994930267334
    6. ' ' → logprob: -9.365994453430176
    7. ' a' → logprob: -9.490994453430176
    8. '(u' → logprob: -10.115994453430176
    9. '	u' → logprob: -10.115994453430176
    10. '```' → logprob: -10.615994453430176

Token 1771: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.20100274682044983
    2. ' u' → logprob: -2.201002836227417
    3. 'a' → logprob: -2.701002836227417
    4. '           ' → logprob: -6.201002597808838
    5. ' a' → logprob: -6.451002597808838
    6. '   ' → logprob: -7.451002597808838
    7. 'j' → logprob: -10.451003074645996
    8. '	u' → logprob: -11.076003074645996
    9. ' ' → logprob: -11.451003074645996
    10. 'prev' → logprob: -12.701003074645996

Token 1772: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.46134525537490845
    2. '=' → logprob: -1.0863451957702637
    3. ',' → logprob: -3.4613451957702637
    4. ' ,' → logprob: -8.461345672607422
    5. '=
' → logprob: -8.961345672607422
    6. ' =
' → logprob: -9.086345672607422
    7. ',h' → logprob: -9.836345672607422
    8. '=h' → logprob: -9.961345672607422
    9. '   ' → logprob: -10.336345672607422
    10. 'h' → logprob: -10.586345672607422

Token 1773: ' hull' (ID: 74912)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0022292369976639748
    2. ' hull' → logprob: -6.1272292137146
    3. 'hul' → logprob: -10.377229690551758
    4. '   ' → logprob: -12.877229690551758
    5. '	h' → logprob: -13.002229690551758
    6. '           ' → logprob: -13.377229690551758
    7. 'u' → logprob: -13.502229690551758
    8. 'hall' → logprob: -13.627229690551758
    9. 'Hull' → logprob: -14.502229690551758
    10. ' hul' → logprob: -14.627229690551758

Token 1774: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.030219709500670433
    2. 'i' → logprob: -4.030219554901123
    3. 'indices' → logprob: -5.155219554901123
    4. '[i' → logprob: -5.905219554901123
    5. 'h' → logprob: -6.530219554901123
    6. '   ' → logprob: -6.905219554901123
    7. '
' → logprob: -7.780219554901123
    8. ' i' → logprob: -9.155220031738281
    9. '```' → logprob: -9.655220031738281
    10. 'Indices' → logprob: -10.030220031738281

Token 1775: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00014025058771949261
    2. 'i' → logprob: -9.500140190124512
    3. '[(' → logprob: -10.750140190124512
    4. '           ' → logprob: -10.750140190124512
    5. '(i' → logprob: -12.000140190124512
    6. '
' → logprob: -12.500140190124512
    7. '   ' → logprob: -12.625140190124512
    8. '[' → logprob: -12.625140190124512
    9. ' i' → logprob: -13.500140190124512
    10. '       ' → logprob: -13.625140190124512

Token 1776: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.12434229999780655
    2. ']' → logprob: -2.499342203140259
    3. '           ' → logprob: -3.374342203140259
    4. '       ' → logprob: -8.99934196472168
    5. ']
' → logprob: -8.99934196472168
    6. '],' → logprob: -9.37434196472168
    7. '               ' → logprob: -9.74934196472168
    8. '
' → logprob: -10.37434196472168
    9. ')
' → logprob: -10.87434196472168
    10. ' ]' → logprob: -11.24934196472168

Token 1777: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28761157393455505
    2. 'b' → logprob: -1.4126116037368774
    3. ' b' → logprob: -5.162611484527588
    4. '   ' → logprob: -7.912611484527588
    5. '       ' → logprob: -9.287611961364746
    6. 'next' → logprob: -9.662611961364746
    7. 'v' → logprob: -10.037611961364746
    8. ',' → logprob: -10.037611961364746
    9. ' next' → logprob: -10.037611961364746
    10. ' ' → logprob: -11.287611961364746

Token 1778: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.0034747475292533636
    2. ' v' → logprob: -5.878474712371826
    3. 'b' → logprob: -7.503474712371826
    4. '   ' → logprob: -9.503475189208984
    5. '           ' → logprob: -10.753475189208984
    6. '	v' → logprob: -11.503475189208984
    7. '(v' → logprob: -12.878475189208984
    8. 'u' → logprob: -13.003475189208984
    9. '       ' → logprob: -13.628475189208984
    10. ' b' → logprob: -13.628475189208984

Token 1779: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1798267811536789
    2. '=' → logprob: -1.8048267364501953
    3. ' =
' → logprob: -10.179826736450195
    4. '=
' → logprob: -10.554826736450195
    5. ' ' → logprob: -12.554826736450195
    6. 'h' → logprob: -12.679826736450195
    7. '=h' → logprob: -12.929826736450195
    8. ' ' → logprob: -13.429826736450195
    9. ' hull' → logprob: -13.429826736450195
    10. ',' → logprob: -13.929826736450195

Token 1780: ' hull' (ID: 74912)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0031941127963364124
    2. ' hull' → logprob: -5.753194332122803
    3. 'hul' → logprob: -11.628193855285645
    4. ' ' → logprob: -13.378193855285645
    5. '   ' → logprob: -13.378193855285645
    6. '	h' → logprob: -13.503193855285645
    7. 'hall' → logprob: -14.128193855285645
    8. 'Hull' → logprob: -14.753193855285645
    9. 'hx' → logprob: -15.253193855285645
    10. ' hul' → logprob: -15.503193855285645

Token 1781: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.46841561794281006
    2. '(h' → logprob: -1.09341561794281
    3. 'indices' → logprob: -3.3434157371520996
    4. '[h' → logprob: -6.2184157371521
    5. 'h' → logprob: -7.5934157371521
    6. 'Indices' → logprob: -7.5934157371521
    7. '[(' → logprob: -7.9684157371521
    8. '   ' → logprob: -9.468415260314941
    9. '(v' → logprob: -10.093415260314941
    10. 'i' → logprob: -10.343415260314941

Token 1782: '[(' (ID: 20542)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.20350398123264313
    2. '[(' → logprob: -1.703503966331482
    3. '[i' → logprob: -6.2035040855407715
    4. '   ' → logprob: -11.203503608703613
    5. '(v' → logprob: -11.703503608703613
    6. '[
' → logprob: -11.703503608703613
    7. '
' → logprob: -12.078503608703613
    8. '(' → logprob: -12.078503608703613
    9. '[' → logprob: -12.203503608703613
    10. '(u' → logprob: -12.328503608703613

Token 1783: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.36574100604048e-06
    2. '(i' → logprob: -12.375004768371582
    3. ' i' → logprob: -17.000003814697266
    4. '   ' → logprob: -18.875003814697266
    5. '{i' → logprob: -19.000003814697266
    6. '```' → logprob: -20.125003814697266
    7. '           ' → logprob: -20.500003814697266
    8. 'u' → logprob: -20.750003814697266
    9. '	i' → logprob: -21.375003814697266
    10. '
' → logprob: -21.500003814697266

Token 1784: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00030972150852903724
    2. ' +' → logprob: -8.125309944152832
    3. '1' → logprob: -11.375309944152832
    4. '+i' → logprob: -13.125309944152832
    5. '+
' → logprob: -15.750309944152832
    6. 'i' → logprob: -17.375308990478516
    7. '+j' → logprob: -18.125308990478516
    8. '
' → logprob: -18.375308990478516
    9. 'u' → logprob: -18.750308990478516
    10. '```' → logprob: -19.000308990478516

Token 1785: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. 'i' → logprob: -12.500003814697266
    3. ' ' → logprob: -15.625003814697266
    4. '```' → logprob: -16.000003814697266
    5. '(i' → logprob: -17.625003814697266
    6. '
' → logprob: -19.125003814697266
    7. '   ' → logprob: -19.250003814697266
    8. '+' → logprob: -19.375003814697266
    9. 'int' → logprob: -19.625003814697266
    10. '(' → logprob: -20.250003814697266

Token 1786: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012580878101289272
    2. ')%' → logprob: -4.637580871582031
    3. '%' → logprob: -6.887580871582031
    4. ')]' → logprob: -7.262580871582031
    5. ' )' → logprob: -8.012580871582031
    6. ')
' → logprob: -8.262580871582031
    7. ']' → logprob: -8.387580871582031
    8. ' %' → logprob: -8.512580871582031
    9. '1' → logprob: -11.262580871582031
    10. '+' → logprob: -11.512580871582031

Token 1787: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.08584221452474594
    2. ' %' → logprob: -2.7108421325683594
    3. ')%' → logprob: -4.835842132568359
    4. ']' → logprob: -6.335842132568359
    5. '%i' → logprob: -6.335842132568359
    6. ')' → logprob: -6.460842132568359
    7. ']%' → logprob: -6.460842132568359
    8. '```' → logprob: -7.710842132568359
    9. '%n' → logprob: -7.835842132568359
    10. '%d' → logprob: -8.83584213256836

Token 1788: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00023286080977413803
    2. ' len' → logprob: -8.375232696533203
    3. '(len' → logprob: -13.875232696533203
    4. '   ' → logprob: -14.250232696533203
    5. 'h' → logprob: -15.250232696533203
    6. '```' → logprob: -15.750232696533203
    7. ']' → logprob: -16.875232696533203
    8. ' ' → logprob: -17.000232696533203
    9. '[len' → logprob: -17.125232696533203
    10. '	len' → logprob: -17.500232696533203

Token 1789: '(h' (ID: 8120)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.00021331508469302207
    2. '(h' → logprob: -8.625213623046875
    3. ' hull' → logprob: -11.000213623046875
    4. 'hul' → logprob: -11.375213623046875
    5. '   ' → logprob: -13.625213623046875
    6. '```' → logprob: -14.000213623046875
    7. 'hall' → logprob: -14.125213623046875
    8. '	h' → logprob: -14.750213623046875
    9. '[h' → logprob: -15.125213623046875
    10. ')' → logprob: -15.375213623046875

Token 1790: 'ull' (ID: 754)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.020671984180808067
    2. 'ull' → logprob: -3.895672082901001
    3. '(h' → logprob: -9.395671844482422
    4. 'hul' → logprob: -11.145671844482422
    5. ')' → logprob: -11.645671844482422
    6. '```' → logprob: -12.520671844482422
    7. 'u' → logprob: -12.645671844482422
    8. 'ul' → logprob: -12.895671844482422
    9. 'hall' → logprob: -13.770671844482422
    10. 'ulls' → logprob: -14.020671844482422

Token 1791: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.006326197646558285
    2. 'indices' → logprob: -5.131326198577881
    3. 'h' → logprob: -8.006325721740723
    4. '
' → logprob: -11.256325721740723
    5. 'Indices' → logprob: -11.756325721740723
    6. ')' → logprob: -11.881325721740723
    7. ')]' → logprob: -12.006325721740723
    8. '"indices' → logprob: -12.256325721740723
    9. '_edges' → logprob: -12.506325721740723
    10. '(indices' → logprob: -12.631325721740723

Token 1792: ')]
' (ID: 11587)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -1.0338672399520874
    2. ')]' → logprob: -1.0338672399520874
    3. ']' → logprob: -1.4088672399520874
    4. ')]
' → logprob: -3.158867359161377
    5. ')' → logprob: -6.783867359161377
    6. ')
' → logprob: -8.033866882324219
    7. ']
' → logprob: -8.533866882324219
    8. '       ' → logprob: -9.783866882324219
    9. '           ' → logprob: -10.033866882324219
    10. ')]
' → logprob: -10.158866882324219

Token 1793: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005444537382572889
    2. '       ' → logprob: -8.250544548034668
    3. '   ' → logprob: -8.625544548034668
    4. '
' → logprob: -9.625544548034668
    5. '               ' → logprob: -10.750544548034668
    6. 'h' → logprob: -12.875544548034668
    7. ',' → logprob: -13.125544548034668
    8. '                   ' → logprob: -13.750544548034668
    9. 'if' → logprob: -13.750544548034668
    10. '            
' → logprob: -13.875544548034668

Token 1794: ' e' (ID: 319)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20343618094921112
    2. 'edge' → logprob: -2.7034361362457275
    3. 'if' → logprob: -2.9534361362457275
    4. ' if' → logprob: -3.4534361362457275
    5. 'h' → logprob: -4.328436374664307
    6. 'e' (adapté à ' e') → logprob: -4.703436374664307
    7. ' edge' → logprob: -5.578436374664307
    8. 'existing' → logprob: -5.953436374664307
    9. '   ' → logprob: -6.578436374664307
    10. 'key' → logprob: -7.703436374664307

Token 1795: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2835957109928131
    2. '=' → logprob: -1.4085956811904907
    3. 'd' → logprob: -7.283595561981201
    4. 'dge' → logprob: -7.408595561981201
    5. 'f' → logprob: -8.15859603881836
    6. '           ' → logprob: -8.28359603881836
    7. '=edge' → logprob: -9.03359603881836
    8. 'if' → logprob: -9.03359603881836
    9. '_' → logprob: -9.53359603881836
    10. '       ' → logprob: -10.03359603881836

Token 1796: ' self' (ID: 1051)
  Prédit: 'Edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -0.11421690136194229
    2. 'self' → logprob: -2.2392168045043945
    3. ' Edge' → logprob: -6.8642168045043945
    4. ' self' → logprob: -8.739216804504395
    5. 'None' → logprob: -9.239216804504395
    6. 'next' → logprob: -9.989216804504395
    7. '   ' → logprob: -10.864216804504395
    8. '(self' → logprob: -12.614216804504395
    9. 'Next' → logprob: -12.614216804504395
    10. '       ' → logprob: -13.239216804504395

Token 1797: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.10511410236358643
    2. 'graph' → logprob: -2.355113983154297
    3. 'Edge' → logprob: -6.105113983154297
    4. '.original' → logprob: -6.730113983154297
    5. 'original' → logprob: -7.855113983154297
    6. '.Edge' → logprob: -7.855113983154297
    7. 'dge' → logprob: -8.605113983154297
    8. '	graph' → logprob: -8.980113983154297
    9. '.edge' → logprob: -9.855113983154297
    10. '.' → logprob: -9.980113983154297

Token 1798: '.edge' (ID: 112308)
  Prédit: '.edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.edge' → logprob: -0.22489458322525024
    2. 'edge' → logprob: -2.3498945236206055
    3. '.original' → logprob: -2.4748945236206055
    4. 'original' → logprob: -3.8498945236206055
    5. '.' → logprob: -8.849894523620605
    6. '_edge' → logprob: -9.474894523620605
    7. '._' → logprob: -9.599894523620605
    8. '.edges' → logprob: -9.849894523620605
    9. ' .' → logprob: -10.599894523620605
    10. '.__' → logprob: -10.724894523620605

Token 1799: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.007764681242406368
    2. 'map' → logprob: -5.50776481628418
    3. 's' → logprob: -5.63276481628418
    4. 'Map' → logprob: -9.50776481628418
    5. 'original' → logprob: -11.88276481628418
    6. '   ' → logprob: -12.13276481628418
    7. '
' → logprob: -13.25776481628418
    8. '           ' → logprob: -13.25776481628418
    9. '       ' → logprob: -13.50776481628418
    10. ' map' → logprob: -13.88276481628418

Token 1800: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.0010708003537729383
    2. '[(' → logprob: -7.001070976257324
    3. '.setdefault' → logprob: -8.876070976257324
    4. 'get' → logprob: -11.001070976257324
    5. '.' → logprob: -13.501070976257324
    6. '   ' → logprob: -14.751070976257324
    7. '
' → logprob: -15.251070976257324
    8. ' .' → logprob: -15.501070976257324
    9. '.ge' → logprob: -15.626070976257324
    10. '```' → logprob: -16.001070022583008

Token 1801: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00019424250058364123
    2. '(' → logprob: -8.875194549560547
    3. '(min' → logprob: -10.375194549560547
    4. ' (' → logprob: -11.125194549560547
    5. ' ((' → logprob: -12.625194549560547
    6. '   ' → logprob: -12.750194549560547
    7. '(
' → logprob: -13.250194549560547
    8. ' ' → logprob: -15.375194549560547
    9. '[(' → logprob: -15.875194549560547
    10. '```' → logprob: -17.500194549560547

Token 1802: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3942420482635498
    2. '(min' → logprob: -1.3942420482635498
    3. 'u' → logprob: -2.64424204826355
    4. '(u' → logprob: -5.019242286682129
    5. ' min' → logprob: -9.769242286682129
    6. '[min' → logprob: -11.019242286682129
    7. ' (' → logprob: -11.144242286682129
    8. '   ' → logprob: -11.769242286682129
    9. ' u' → logprob: -12.269242286682129
    10. '(
' → logprob: -12.394242286682129

Token 1803: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -1.306760805164231e-05
    2. 'u' → logprob: -11.25001335144043
    3. '(' → logprob: -18.00001335144043
    4. '(
' → logprob: -18.87501335144043
    5. ',u' → logprob: -20.12501335144043
    6. '((' → logprob: -20.25001335144043
    7. '<u' → logprob: -20.25001335144043
    8. '[u' → logprob: -20.37501335144043
    9. '	u' → logprob: -20.87501335144043
    10. '(a' → logprob: -21.00001335144043

Token 1804: ',v' (ID: 30680)
  Prédit: ',u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',u' → logprob: -0.3449840247631073
    2. '(u' → logprob: -1.8449840545654297
    3. ',' → logprob: -2.2199840545654297
    4. 'u' → logprob: -3.7199840545654297
    5. ',v' → logprob: -7.21998405456543
    6. ',
' → logprob: -9.34498405456543
    7. ' ,' → logprob: -10.46998405456543
    8. '(v' → logprob: -11.59498405456543
    9. '(' → logprob: -11.84498405456543
    10. '[u' → logprob: -12.09498405456543

Token 1805: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -8.709308167453855e-05
    2. '),(' → logprob: -10.250086784362793
    3. ',' → logprob: -10.375086784362793
    4. ' ),' → logprob: -12.000086784362793
    5. ',),' → logprob: -12.625086784362793
    6. '           ' → logprob: -12.750086784362793
    7. ',v' → logprob: -13.125086784362793
    8. '   ' → logprob: -13.625086784362793
    9. 'v' → logprob: -13.875086784362793
    10. ',u' → logprob: -14.125086784362793

Token 1806: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0002613358374219388
    2. ' max' → logprob: -8.250261306762695
    3. '(max' → logprob: -18.625261306762695
    4. '   ' → logprob: -21.000261306762695
    5. '	max' → logprob: -21.625261306762695
    6. ' ' → logprob: -21.875261306762695
    7. ',max' → logprob: -22.750261306762695
    8. '  ' → logprob: -23.000261306762695
    9. '     ' → logprob: -23.125261306762695
    10. '[max' → logprob: -23.250261306762695

Token 1807: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -1.5048530030981055e-06
    2. 'u' → logprob: -13.500001907348633
    3. '(' → logprob: -16.875001907348633
    4. '(
' → logprob: -18.625001907348633
    5. ' (' → logprob: -19.000001907348633
    6. '   ' → logprob: -19.375001907348633
    7. '((' → logprob: -19.375001907348633
    8. '[u' → logprob: -20.375001907348633
    9. '<u' → logprob: -20.375001907348633
    10. '```' → logprob: -20.750001907348633

Token 1808: ',v' (ID: 30680)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.003409893484786153
    2. '(v' → logprob: -5.8784098625183105
    3. 'u' → logprob: -7.6284098625183105
    4. 'v' → logprob: -9.628410339355469
    5. ',u' → logprob: -10.378410339355469
    6. '[u' → logprob: -11.503410339355469
    7. ',v' → logprob: -12.253410339355469
    8. '),' → logprob: -12.628410339355469
    9. ',' → logprob: -13.378410339355469
    10. '(' → logprob: -14.628410339355469

Token 1809: ')))
' (ID: 12562)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.7212857007980347
    2. '))
' → logprob: -0.8462857007980347
    3. '))' → logprob: -2.471285820007324
    4. '))

' → logprob: -9.096285820007324
    5. '           ' → logprob: -9.346285820007324
    6. ' ))
' → logprob: -9.971285820007324
    7. ')),' → logprob: -10.221285820007324
    8. ' ),' → logprob: -10.971285820007324
    9. '       ' → logprob: -10.971285820007324
    10. ')' → logprob: -11.221285820007324

Token 1810: '           ' (ID: 352)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4889477789402008
    2. ' if' → logprob: -1.2389477491378784
    3. '           ' → logprob: -2.613947868347168
    4. ' or' → logprob: -4.613947868347168
    5. '
' → logprob: -5.488947868347168
    6. ' is' → logprob: -5.738947868347168
    7. 'If' → logprob: -6.113947868347168
    8. 'or' → logprob: -6.238947868347168
    9. '       ' → logprob: -6.363947868347168
    10. '            
' → logprob: -8.488947868347168

Token 1811: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2032051533460617
    2. '           ' → logprob: -1.7032051086425781
    3. ' if' → logprob: -6.328205108642578
    4. '       ' → logprob: -12.578205108642578
    5. 'If' → logprob: -14.078205108642578
    6. '	if' → logprob: -15.078205108642578
    7. '   ' → logprob: -15.953205108642578
    8. '
' → logprob: -16.078205108642578
    9. '		' → logprob: -16.828205108642578
    10. ';if' → logprob: -17.078205108642578

Token 1812: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0003815756645053625
    2. ' e' → logprob: -7.8753814697265625
    3. 'not' → logprob: -13.875381469726562
    4. '   ' → logprob: -15.000381469726562
    5. ' not' → logprob: -16.000381469726562
    6. '	e' → logprob: -16.625381469726562
    7. '           ' → logprob: -17.000381469726562
    8. 'None' → logprob: -18.125381469726562
    9. '
' → logprob: -19.000381469726562
    10. '       ' → logprob: -19.000381469726562

Token 1813: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.20141518115997314
    2. 'is' → logprob: -1.7014151811599731
    3. 'e' → logprob: -14.451415061950684
    4. ')' → logprob: -14.576415061950684
    5. ')is' → logprob: -14.951415061950684
    6. 'i' → logprob: -15.451415061950684
    7. '	is' → logprob: -16.201416015625
    8. '
' → logprob: -16.576416015625
    9. ' ' → logprob: -16.951416015625
    10. '==' → logprob: -17.451416015625

Token 1814: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -9.758300438988954e-05
    2. ' None' → logprob: -9.250097274780273
    3. 'not' → logprob: -13.500097274780273
    4. ' not' → logprob: -17.500097274780273
    5. '_None' → logprob: -19.625097274780273
    6. '   ' → logprob: -20.500097274780273
    7. 'Not' → logprob: -20.625097274780273
    8. '=None' → logprob: -21.000097274780273
    9. '(None' → logprob: -21.750097274780273
    10. 'none' → logprob: -21.875097274780273

Token 1815: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.13684356212615967
    2. ':' → logprob: -2.136843681335449
    3. '               ' → logprob: -4.761843681335449
    4. '           ' → logprob: -6.761843681335449
    5. ',' → logprob: -9.76184368133545
    6. ' or' → logprob: -10.76184368133545
    7. '):
' → logprob: -10.76184368133545
    8. ' :
' → logprob: -11.01184368133545
    9. ':
' → logprob: -11.76184368133545
    10. ' :' → logprob: -12.13684368133545

Token 1816: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0017615711549296975
    2. '           ' → logprob: -6.876761436462402
    3. 'e' → logprob: -8.001761436462402
    4. ':' → logprob: -9.126761436462402
    5. ':
' → logprob: -9.251761436462402
    6. '                   ' → logprob: -10.626761436462402
    7. ',' → logprob: -10.751761436462402
    8. ' e' → logprob: -10.751761436462402
    9. '#' → logprob: -10.876761436462402
    10. '
' → logprob: -11.126761436462402

Token 1817: ' #' (ID: 1069)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.42597252130508423
    2. 'h' → logprob: -1.8009724617004395
    3. 'edge' → logprob: -2.6759724617004395
    4. '               ' → logprob: -2.9259724617004395
    5. ' e' → logprob: -3.4259724617004395
    6. '           ' → logprob: -4.4259724617004395
    7. '#' (adapté à ' #') → logprob: -5.6759724617004395
    8. ' edge' → logprob: -5.8009724617004395
    9. ' hull' → logprob: -6.4259724617004395
    10. '   ' → logprob: -6.5509724617004395

Token 1818: ' Construct' (ID: 36230)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5087738633155823
    2. 'h' → logprob: -1.7587738037109375
    3. 'edge' → logprob: -2.1337738037109375
    4. 'new' → logprob: -2.8837738037109375
    5. '#' → logprob: -3.1337738037109375
    6. '               ' → logprob: -5.6337738037109375
    7. '           ' → logprob: -6.3837738037109375
    8. ' e' → logprob: -7.3837738037109375
    9. 'missing' → logprob: -7.3837738037109375
    10. ' hull' → logprob: -7.7587738037109375

Token 1819: 'ed' (ID: 295)
  Prédit: 'Edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -0.1449703872203827
    2. 'e' → logprob: -2.519970417022705
    3. ' Edge' → logprob: -3.269970417022705
    4. ' e' → logprob: -4.644970417022705
    5. 'edge' → logprob: -5.644970417022705
    6. ' new' → logprob: -6.894970417022705
    7. ' edge' → logprob: -7.019970417022705
    8. '               ' → logprob: -7.644970417022705
    9. 'new' → logprob: -7.644970417022705
    10. '           ' → logprob: -8.269969940185547

Token 1820: ' edge' (ID: 11165)
  Prédit: 'Edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -0.24867865443229675
    2. 'edge' → logprob: -2.123678684234619
    3. ' Edge' → logprob: -3.373678684234619
    4. ' edge' → logprob: -3.623678684234619
    5. 'e' → logprob: -3.748678684234619
    6. '               ' → logprob: -5.373678684234619
    7. ' e' → logprob: -5.498678684234619
    8. '           ' → logprob: -5.748678684234619
    9. '_edge' → logprob: -6.498678684234619
    10. ')' → logprob: -7.498678684234619

Token 1821: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21792657673358917
    2. '=' → logprob: -2.217926502227783
    3. '               ' → logprob: -2.967926502227783
    4. '           ' → logprob: -3.467926502227783
    5. ',' → logprob: -6.467926502227783
    6. ':' → logprob: -7.342926502227783
    7. '                   ' → logprob: -7.717926502227783
    8. ')' → logprob: -7.842926502227783
    9. ':
' → logprob: -8.092926979064941
    10. 'Edge' → logprob: -8.967926979064941

Token 1822: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.37456220388412476
    2. ' =' → logprob: -1.3745622634887695
    3. '=' → logprob: -3.4995622634887695
    4. '           ' → logprob: -4.7495622634887695
    5. '                   ' → logprob: -4.9995622634887695
    6. 'e' → logprob: -5.7495622634887695
    7. 'h' → logprob: -6.2495622634887695
    8. ' e' → logprob: -6.4995622634887695
    9. '(h' → logprob: -6.7495622634887695
    10. ',' → logprob: -6.9995622634887695

Token 1823: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' (adapté à ' e') → logprob: -0.7503108978271484
    2. 'h' → logprob: -1.2503108978271484
    3. 'edge' → logprob: -1.8753108978271484
    4. '               ' → logprob: -3.2503108978271484
    5. 'Edge' → logprob: -3.7503108978271484
    6. '           ' → logprob: -5.000310897827148
    7. ' e' → logprob: -5.875310897827148
    8. ' hull' → logprob: -5.875310897827148
    9. 'new' → logprob: -6.000310897827148
    10. '   ' → logprob: -6.000310897827148

Token 1824: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029751179739832878
    2. ' =' → logprob: -3.5297510623931885
    3. '=
' → logprob: -14.65475082397461
    4. '=edge' → logprob: -15.77975082397461
    5. '＝' → logprob: -17.77975082397461
    6. '           ' → logprob: -17.90475082397461
    7. '=}' → logprob: -17.90475082397461
    8. ' =
' → logprob: -18.02975082397461
    9. '=

' → logprob: -18.02975082397461
    10. '   ' → logprob: -18.27975082397461

Token 1825: ' Edge' (ID: 16396)
  Prédit: 'Edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -0.0009117019944824278
    2. ' Edge' → logprob: -7.000911712646484
    3. '   ' → logprob: -15.500911712646484
    4. 'self' → logprob: -18.250911712646484
    5. '       ' → logprob: -18.500911712646484
    6. 'edge' → logprob: -18.625911712646484
    7. '<Edge' → logprob: -19.375911712646484
    8. '.Edge' → logprob: -19.500911712646484
    9. '           ' → logprob: -19.750911712646484
    10. 'EDGE' → logprob: -20.000911712646484

Token 1826: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.0011762974318116903
    2. 'u' → logprob: -6.751176357269287
    3. '(' → logprob: -12.126175880432129
    4. '(
' → logprob: -14.751175880432129
    5. ' u' → logprob: -15.376175880432129
    6. '(min' → logprob: -17.001176834106445
    7. '	u' → logprob: -17.626176834106445
    8. ' (' → logprob: -17.751176834106445
    9. '<u' → logprob: -20.251176834106445
    10. '           ' → logprob: -20.376176834106445

Token 1827: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030316898482851684
    2. ',v' → logprob: -8.125303268432617
    3. ' ,' → logprob: -12.125303268432617
    4. ',u' → logprob: -13.750303268432617
    5. ',
' → logprob: -14.875303268432617
    6. 'v' → logprob: -16.125303268432617
    7. '               ' → logprob: -16.500303268432617
    8. ',w' → logprob: -17.375303268432617
    9. '                   ' → logprob: -17.375303268432617
    10. ',e' → logprob: -18.000303268432617

Token 1828: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.000488110730657354
    2. ' v' → logprob: -7.62548828125
    3. '	v' → logprob: -16.62548828125
    4. '           ' → logprob: -17.87548828125
    5. '   ' → logprob: -18.50048828125
    6. '            ' → logprob: -18.62548828125
    7. '               ' → logprob: -18.75048828125
    8. '                ' → logprob: -19.37548828125
    9. '                               ' → logprob: -19.50048828125
    10. '                   ' → logprob: -19.62548828125

Token 1829: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002092207781970501
    2. ',[' → logprob: -6.502092361450195
    3. '[' → logprob: -8.127092361450195
    4. ' ,' → logprob: -8.627092361450195
    5. ' [' → logprob: -10.002092361450195
    6. '           ' → logprob: -10.627092361450195
    7. ' ,[' → logprob: -10.752092361450195
    8. '               ' → logprob: -11.627092361450195
    9. ',
' → logprob: -12.377092361450195
    10. '   ' → logprob: -13.002092361450195

Token 1830: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005269565153867006
    2. ' [' → logprob: -5.255269527435303
    3. '[p' → logprob: -11.005270004272461
    4. '           ' → logprob: -11.755270004272461
    5. '[self' → logprob: -12.130270004272461
    6. '       ' → logprob: -13.380270004272461
    7. '   ' → logprob: -13.505270004272461
    8. '               ' → logprob: -13.755270004272461
    9. ' ' → logprob: -15.130270004272461
    10. '(points' → logprob: -15.255270004272461

Token 1831: 'points' (ID: 14011)
  Prédit: 'points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -4.370294846012257e-05
    2. ' points' → logprob: -10.125043869018555
    3. 'self' → logprob: -12.750043869018555
    4. '   ' → logprob: -15.250043869018555
    5. '(points' → logprob: -15.750043869018555
    6. '	points' → logprob: -15.875043869018555
    7. '       ' → logprob: -17.250043869018555
    8. 'Points' → logprob: -17.500043869018555
    9. '           ' → logprob: -17.750043869018555
    10. 'point' → logprob: -17.750043869018555

Token 1832: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.014168089255690575
    2. 'u' → logprob: -4.2641682624816895
    3. '
' → logprob: -13.639167785644531
    4. '	u' → logprob: -13.764167785644531
    5. '[' → logprob: -14.264167785644531
    6. '(u' → logprob: -14.639167785644531
    7. '[
' → logprob: -14.764167785644531
    8. '<u' → logprob: -15.389167785644531
    9. '   ' → logprob: -15.764167785644531
    10. '_u' → logprob: -15.889167785644531

Token 1833: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001015183632262051
    2. '],' → logprob: -7.3760151863098145
    3. ' ,' → logprob: -8.001014709472656
    4. ',p' → logprob: -11.376014709472656
    5. '           ' → logprob: -11.751014709472656
    6. '),' → logprob: -12.126014709472656
    7. '   ' → logprob: -12.251014709472656
    8. '       ' → logprob: -12.251014709472656
    9. ',v' → logprob: -12.501014709472656
    10. ',u' → logprob: -12.626014709472656

Token 1834: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -3.1424973713001236e-05
    2. ' points' → logprob: -10.375031471252441
    3. '	points' → logprob: -16.500030517578125
    4. '   ' → logprob: -16.625030517578125
    5. '(points' → logprob: -17.625030517578125
    6. '           ' → logprob: -18.000030517578125
    7. '       ' → logprob: -18.125030517578125
    8. 'point' → logprob: -19.125030517578125
    9. '
' → logprob: -19.125030517578125
    10. '.points' → logprob: -19.250030517578125

Token 1835: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -6.64708495605737e-05
    2. 'v' → logprob: -9.625066757202148
    3. '(v' → logprob: -16.00006675720215
    4. '[' → logprob: -17.12506675720215
    5. '	v' → logprob: -17.25006675720215
    6. '<v' → logprob: -17.25006675720215
    7. '[
' → logprob: -17.50006675720215
    8. '```' → logprob: -17.75006675720215
    9. ']' → logprob: -18.50006675720215
    10. '_v' → logprob: -18.50006675720215

Token 1836: ']])
' (ID: 62818)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.6937224268913269
    2. '])
' → logprob: -0.6937224268913269
    3. '           ' → logprob: -8.81872272491455
    4. '])
' → logprob: -9.06872272491455
    5. ')])' → logprob: -9.19372272491455
    6. ']))
' → logprob: -9.81872272491455
    7. '       ' → logprob: -10.19372272491455
    8. ']])
' → logprob: -10.56872272491455
    9. '               ' → logprob: -10.69372272491455
    10. ']))' → logprob: -11.19372272491455

Token 1837: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011971325147897005
    2. '               ' → logprob: -7.001197338104248
    3. ')' → logprob: -8.87619686126709
    4. '       ' → logprob: -10.50119686126709
    5. 'h' → logprob: -10.50119686126709
    6. ',' → logprob: -10.87619686126709
    7. '```' → logprob: -10.87619686126709
    8. '                   ' → logprob: -11.12619686126709
    9. '
' → logprob: -12.12619686126709
    10. '          ' → logprob: -12.25119686126709

Token 1838: ' hull' (ID: 74912)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001368807745166123
    2. 'h' → logprob: -7.001368999481201
    3. '       ' → logprob: -8.626368522644043
    4. '
' → logprob: -8.876368522644043
    5. '               ' → logprob: -9.751368522644043
    6. '   ' → logprob: -10.376368522644043
    7. '```' → logprob: -11.876368522644043
    8. ' hull' → logprob: -12.126368522644043
    9. '            
' → logprob: -12.376368522644043
    10. ',h' → logprob: -12.376368522644043

Token 1839: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -5.5577775128767826e-06
    2. 'edges' → logprob: -13.375005722045898
    3. '_' → logprob: -13.875005722045898
    4. 'Edges' → logprob: -14.625005722045898
    5. '_ed' → logprob: -15.000005722045898
    6. '_indices' → logprob: -15.125005722045898
    7. '
' → logprob: -15.250005722045898
    8. '_
' → logprob: -15.625005722045898
    9. ' edges' → logprob: -15.625005722045898
    10. '_edge' → logprob: -15.875005722045898

Token 1840: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004095735494047403
    2. '.' → logprob: -5.504095554351807
    3. '.app' → logprob: -11.254096031188965
    4. '.ap' → logprob: -13.004096031188965
    5. ' .' → logprob: -14.004096031188965
    6. '.add' → logprob: -15.379096031188965
    7. '.Append' → logprob: -15.504096031188965
    8. '.extend' → logprob: -15.754096031188965
    9. '.setdefault' → logprob: -15.754096031188965
    10. 'append' → logprob: -16.00409507751465

Token 1841: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.00043460296001285315
    2. 'e' → logprob: -7.750434398651123
    3. '(' → logprob: -12.875434875488281
    4. ' e' → logprob: -14.125434875488281
    5. ' (' → logprob: -15.250434875488281
    6. '(
' → logprob: -15.250434875488281
    7. 'edge' → logprob: -16.50043487548828
    8. '(edge' → logprob: -17.62543487548828
    9. 'Edge' → logprob: -19.37543487548828
    10. '```' → logprob: -19.62543487548828

Token 1842: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0029778217431157827
    2. '<|end|>' → logprob: -6.2529778480529785
    3. '       ' → logprob: -7.1279778480529785
    4. '
' → logprob: -8.75297737121582
    5. '<|end|>' → logprob: -11.00297737121582
    6. ')
' → logprob: -11.00297737121582
    7. ',' → logprob: -11.37797737121582
    8. ' )' → logprob: -11.75297737121582
    9. ').' → logprob: -12.12797737121582
    10. '),' → logprob: -12.12797737121582

Token 1843: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11751197278499603
    2. '
' → logprob: -3.3675119876861572
    3. 'edges' → logprob: -3.6175119876861572
    4. '```' → logprob: -3.8675119876861572
    5. 'all' → logprob: -4.867511749267578
    6. '#' → logprob: -4.867511749267578
    7. '        
' → logprob: -4.992511749267578
    8. ' edges' → logprob: -5.367511749267578
    9. 'rest' → logprob: -8.492511749267578
    10. '`' → logprob: -8.617511749267578

Token 1844: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43374180793762207
    2. 'all' → logprob: -1.308741807937622
    3. '#' (adapté à ' #') → logprob: -3.183741807937622
    4. 'edges' → logprob: -3.558741807937622
    5. '
' → logprob: -5.058741569519043
    6. '        
' → logprob: -6.433741569519043
    7. 'rest' → logprob: -6.933741569519043
    8. '```' → logprob: -7.058741569519043
    9. ' edges' → logprob: -7.433741569519043
    10. 'mst' → logprob: -8.183741569519043

Token 1845: ' Now' (ID: 6549)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.07884131371974945
    2. '#' → logprob: -3.203841209411621
    3. 'edges' → logprob: -3.703841209411621
    4. 'candidate' → logprob: -5.703841209411621
    5. 'available' → logprob: -6.203841209411621
    6. 'mst' → logprob: -6.953841209411621
    7. 'possible' → logprob: -7.328841209411621
    8. 'uf' → logprob: -7.453841209411621
    9. 'remaining' → logprob: -7.453841209411621
    10. 'additional' → logprob: -7.703841209411621

Token 1846: ' create' (ID: 2501)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7319234013557434
    2. 'all' → logprob: -1.2319233417510986
    3. 'edges' → logprob: -1.9819233417510986
    4. '#' → logprob: -2.8569233417510986
    5. ' all' → logprob: -4.731923580169678
    6. 'uf' → logprob: -4.981923580169678
    7. ' edges' → logprob: -4.981923580169678
    8. 'mst' → logprob: -5.856923580169678
    9. 'existing' → logprob: -6.731923580169678
    10. 'possible' → logprob: -6.731923580169678

Token 1847: ' a' (ID: 261)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.22198179364204407
    2. 'mst' → logprob: -1.8469817638397217
    3. 'possible' → logprob: -4.096982002258301
    4. '       ' → logprob: -4.721982002258301
    5. 'edges' → logprob: -5.346982002258301
    6. 'candidate' → logprob: -5.471982002258301
    7. 'available' → logprob: -6.096982002258301
    8. 'additional' → logprob: -6.346982002258301
    9. '#' → logprob: -7.096982002258301
    10. 'c' → logprob: -7.346982002258301

Token 1848: ' union' (ID: 22208)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.1964731365442276
    2. 'candidate' → logprob: -2.8214731216430664
    3. 'mst' → logprob: -2.9464731216430664
    4. 'edges' → logprob: -3.0714731216430664
    5. 'full' → logprob: -4.821473121643066
    6. 'c' → logprob: -5.571473121643066
    7. 'possible' → logprob: -6.071473121643066
    8. 'complete' → logprob: -6.821473121643066
    9. 'list' → logprob: -6.946473121643066
    10. '#' → logprob: -7.321473121643066

Token 1849: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.6434712409973145
    2. '_find' → logprob: -0.7684712409973145
    3. 'Find' → logprob: -4.6434712409973145
    4. '-find' → logprob: -7.2684712409973145
    5. '
' → logprob: -8.768470764160156
    6. '   ' → logprob: -9.268470764160156
    7. ' find' → logprob: -9.518470764160156
    8. 'self' → logprob: -10.143470764160156
    9. '       ' → logprob: -10.268470764160156
    10. '```' → logprob: -10.768470764160156

Token 1850: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3020343780517578
    2. ' uf' → logprob: -1.6770343780517578
    3. 'self' → logprob: -1.8020343780517578
    4. 'uf' → logprob: -1.9270343780517578
    5. ' self' → logprob: -2.052034378051758
    6. ' =' → logprob: -3.177034378051758
    7. '
' → logprob: -3.427034378051758
    8. '(self' → logprob: -5.552034378051758
    9. ' for' → logprob: -5.677034378051758
    10. '        
' → logprob: -5.802034378051758

Token 1851: ' hull' (ID: 74912)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1231653019785881
    2. 'the' → logprob: -2.3731653690338135
    3. 'mst' → logprob: -4.748165130615234
    4. 'h' → logprob: -4.873165130615234
    5. 'all' → logprob: -6.748165130615234
    6. ' self' → logprob: -7.123165130615234
    7. 'edges' → logprob: -7.248165130615234
    8. 'uf' → logprob: -7.373165130615234
    9. '       ' → logprob: -7.748165130615234
    10. ' the' → logprob: -7.873165130615234

Token 1852: ' edges' (ID: 22569)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43352097272872925
    2. '
' → logprob: -2.058521032333374
    3. 'self' → logprob: -2.058521032333374
    4. '(self' → logprob: -3.308521032333374
    5. 'uf' → logprob: -3.558521032333374
    6. ' self' → logprob: -4.808520793914795
    7. ' =' → logprob: -5.308520793914795
    8. ')' → logprob: -5.433520793914795
    9. '        
' → logprob: -6.183520793914795
    10. '_union' → logprob: -6.308520793914795

Token 1853: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04008099064230919
    2. '
' → logprob: -3.665081024169922
    3. 'uf' → logprob: -4.415081024169922
    4. 'self' → logprob: -7.415081024169922
    5. ' uf' → logprob: -7.790081024169922
    6. '        
' → logprob: -8.040081024169922
    7. ',' → logprob: -9.165081024169922
    8. '```' → logprob: -10.290081024169922
    9. '
' → logprob: -10.665081024169922
    10. '   ' → logprob: -11.415081024169922

Token 1854: ' enforce' (ID: 57352)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2676476538181305
    2. 'union' → logprob: -2.0176477432250977
    3. ' for' → logprob: -3.3926477432250977
    4. '_union' → logprob: -3.3926477432250977
    5. '
' → logprob: -5.142647743225098
    6. ' union' → logprob: -5.392647743225098
    7. 'uf' → logprob: -5.517647743225098
    8. '    
' → logprob: -6.017647743225098
    9. '       ' → logprob: -6.142647743225098
    10. '   ' → logprob: -6.267647743225098

Token 1855: ' boundary' (ID: 35021)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2721984088420868
    2. 'the' → logprob: -1.8971984386444092
    3. 'h' → logprob: -3.522198438644409
    4. '```' → logprob: -4.14719820022583
    5. 'connected' → logprob: -5.02219820022583
    6. 'connect' → logprob: -5.27219820022583
    7. 'their' → logprob: -5.39719820022583
    8. 'all' → logprob: -5.52219820022583
    9. 'that' → logprob: -5.89719820022583
    10. '       ' → logprob: -6.14719820022583

Token 1856: ' edges' (ID: 22569)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5455878376960754
    2. '       ' → logprob: -1.4205877780914307
    3. 'self' → logprob: -2.4205877780914307
    4. ' for' → logprob: -3.0455877780914307
    5. 'uf' → logprob: -4.17058801651001
    6. 'conditions' → logprob: -5.17058801651001
    7. ' self' → logprob: -5.29558801651001
    8. ' conditions' → logprob: -5.42058801651001
    9. 'condition' → logprob: -6.17058801651001
    10. '```' → logprob: -6.17058801651001

Token 1857: '
' (ID: 198)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.9114379286766052
    2. '       ' → logprob: -1.03643798828125
    3. '
' → logprob: -1.78643798828125
    4. 'self' → logprob: -2.91143798828125
    5. ' uf' → logprob: -4.78643798828125
    6. '```' → logprob: -5.78643798828125
    7. '        
' → logprob: -5.91143798828125
    8. 'for' → logprob: -6.41143798828125
    9. ' self' → logprob: -6.53643798828125
    10. ',' → logprob: -7.28643798828125

Token 1858: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003122936934232712
    2. '
' → logprob: -5.878122806549072
    3. 'uf' → logprob: -8.87812328338623
    4. 'self' → logprob: -9.25312328338623
    5. '        
' → logprob: -10.12812328338623
    6. '```' → logprob: -11.12812328338623
    7. ',' → logprob: -11.25312328338623
    8. ' self' → logprob: -12.37812328338623
    9. ' uf' → logprob: -12.75312328338623
    10. '
' → logprob: -13.12812328338623

Token 1859: ' uf' (ID: 35772)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8521918654441833
    2. 'uf' (adapté à ' uf') → logprob: -0.9771918654441833
    3. ' uf' → logprob: -1.7271919250488281
    4. 'self' → logprob: -4.227191925048828
    5. '
' → logprob: -6.227191925048828
    6. ' self' → logprob: -6.352191925048828
    7. ' hull' → logprob: -7.602191925048828
    8. '        
' → logprob: -8.602191925048828
    9. '   ' → logprob: -8.977191925048828
    10. '```' → logprob: -9.352191925048828

Token 1860: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5778259634971619
    2. '=' → logprob: -0.8278259634971619
    3. '_h' → logprob: -7.202826023101807
    4. '_initial' → logprob: -7.702826023101807
    5. 'Hull' → logprob: -8.577825546264648
    6. '_' → logprob: -9.077825546264648
    7. '=self' → logprob: -9.327825546264648
    8. '	' → logprob: -10.577825546264648
    9. '_=' → logprob: -10.702825546264648
    10. ':' → logprob: -10.827825546264648

Token 1861: ' Union' (ID: 14746)
  Prédit: 'Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Union' → logprob: -0.00012356207298580557
    2. ' Union' → logprob: -9.000123977661133
    3. '       ' → logprob: -16.375123977661133
    4. '   ' → logprob: -17.875123977661133
    5. 'union' → logprob: -18.375123977661133
    6. '_union' → logprob: -18.500123977661133
    7. ''Union' → logprob: -18.750123977661133
    8. '           ' → logprob: -19.500123977661133
    9. 'Unity' → logprob: -20.875123977661133
    10. ' union' → logprob: -21.000123977661133

Token 1862: 'Find' (ID: 11437)
  Prédit: 'Find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Find' → logprob: -8.804671233519912e-05
    2. 'Union' → logprob: -9.37508773803711
    3. '(self' → logprob: -13.37508773803711
    4. 'find' → logprob: -14.62508773803711
    5. 'Fill' → logprob: -14.75008773803711
    6. 'F' → logprob: -15.75008773803711
    7. '(n' → logprob: -16.12508773803711
    8. 'Fold' → logprob: -16.25008773803711
    9. '(int' → logprob: -16.37508773803711
    10. 'Set' → logprob: -16.37508773803711

Token 1863: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.049427326768636703
    2. 'self' → logprob: -3.0494272708892822
    3. '(len' → logprob: -7.424427509307861
    4. '(' → logprob: -8.924427032470703
    5. '(
' → logprob: -9.674427032470703
    6. 'len' → logprob: -10.799427032470703
    7. ' self' → logprob: -10.924427032470703
    8. '       ' → logprob: -12.549427032470703
    9. '[self' → logprob: -13.049427032470703
    10. '
' → logprob: -13.299427032470703

Token 1864: '.N' (ID: 4439)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001237848773598671
    2. 'len' → logprob: -6.751237869262695
    3. ' self' → logprob: -9.751237869262695
    4. '(self' → logprob: -12.626237869262695
    5. '       ' → logprob: -12.751237869262695
    6. '
' → logprob: -13.876237869262695
    7. '(len' → logprob: -14.001237869262695
    8. 'N' → logprob: -14.501237869262695
    9. '[self' → logprob: -15.251237869262695
    10. ' len' → logprob: -15.626237869262695

Token 1865: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2079486846923828
    2. ')
' → logprob: -1.8329486846923828
    3. '       ' → logprob: -3.582948684692383
    4. '   ' → logprob: -12.082948684692383
    5. ')
' → logprob: -12.957948684692383
    6. '<|end|>' → logprob: -13.832948684692383
    7. '        ' → logprob: -13.957948684692383
    8. '           ' → logprob: -14.207948684692383
    9. '
' → logprob: -14.332948684692383
    10. '	' → logprob: -14.332948684692383

Token 1866: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1289776861667633
    2. 'for' → logprob: -2.1289777755737305
    3. ' for' → logprob: -6.2539777755737305
    4. '```' → logprob: -9.12897777557373
    5. '           ' → logprob: -12.37897777557373
    6. '   ' → logprob: -12.50397777557373
    7. ')' → logprob: -13.12897777557373
    8. '
' → logprob: -13.50397777557373
    9. '<|end|>' → logprob: -13.62897777557373
    10. '	for' → logprob: -13.62897777557373

Token 1867: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0001589618914294988
    2. '       ' → logprob: -8.75015926361084
    3. ' for' → logprob: -14.75015926361084
    4. '
' → logprob: -17.250158309936523
    5. '#' → logprob: -17.875158309936523
    6. '```' → logprob: -18.250158309936523
    7. '   ' → logprob: -18.625158309936523
    8. '	for' → logprob: -18.625158309936523
    9. '        
' → logprob: -20.000158309936523
    10. 'For' → logprob: -21.375158309936523

Token 1868: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.013100110925734043
    2. 'he' → logprob: -4.6381001472473145
    3. 'edge' → logprob: -5.7631001472473145
    4. ' e' → logprob: -8.638099670410156
    5. 'h' → logprob: -11.638099670410156
    6. ' edge' → logprob: -13.263099670410156
    7. '```' → logprob: -13.263099670410156
    8. '   ' → logprob: -13.388099670410156
    9. ' he' → logprob: -14.013099670410156
    10. 'hed' → logprob: -14.013099670410156

Token 1869: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008618593215942383
    2. 'in' → logprob: -4.758618354797363
    3. '	in' → logprob: -13.633618354797363
    4. 'e' → logprob: -14.008618354797363
    5. ' ' → logprob: -14.133618354797363
    6. ' ' → logprob: -15.258618354797363
    7. 'n' → logprob: -15.258618354797363
    8. 'h' → logprob: -15.758618354797363
    9. 'import' → logprob: -15.883618354797363
    10. 's' → logprob: -16.25861930847168

Token 1870: ' hull' (ID: 74912)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0008777545881457627
    2. ' hull' → logprob: -7.125877857208252
    3. 'e' → logprob: -9.750877380371094
    4. 'hul' → logprob: -12.125877380371094
    5. '	h' → logprob: -13.250877380371094
    6. '   ' → logprob: -13.375877380371094
    7. '```' → logprob: -13.500877380371094
    8. ' e' → logprob: -14.250877380371094
    9. 'hall' → logprob: -14.625877380371094
    10. ' ' → logprob: -14.750877380371094

Token 1871: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -4.334533878136426e-05
    2. 'edges' → logprob: -10.625042915344238
    3. '```' → logprob: -12.500042915344238
    4. '   ' → logprob: -12.625042915344238
    5. '_indices' → logprob: -12.750042915344238
    6. '.edges' → logprob: -13.000042915344238
    7. 'Edges' → logprob: -13.375042915344238
    8. '       ' → logprob: -14.125042915344238
    9. '
' → logprob: -14.375042915344238
    10. ')' → logprob: -14.375042915344238

Token 1872: ':
' (ID: 734)
  Prédit: '.union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.union' → logprob: -0.051471732556819916
    2. '.' → logprob: -3.051471710205078
    3. '           ' → logprob: -6.676471710205078
    4. '       ' → logprob: -7.926471710205078
    5. ':
' → logprob: -8.051471710205078
    6. ':' → logprob: -8.301471710205078
    7. '.uf' → logprob: -8.301471710205078
    8. '   ' → logprob: -8.551471710205078
    9. '.un' → logprob: -9.801471710205078
    10. ' .' → logprob: -9.926471710205078

Token 1873: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000574836041778326
    2. '.' → logprob: -8.750575065612793
    3. '
' → logprob: -9.500575065612793
    4. '	       ' → logprob: -9.625575065612793
    5. '		' → logprob: -9.750575065612793
    6. '       ' → logprob: -10.250575065612793
    7. '```' → logprob: -10.250575065612793
    8. ':
' → logprob: -10.750575065612793
    9. '            
' → logprob: -11.000575065612793
    10. '               ' → logprob: -11.000575065612793

Token 1874: ' uf' (ID: 35772)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' (adapté à ' uf') → logprob: -0.0010070850839838386
    2. ' uf' → logprob: -7.501007080078125
    3. '           ' → logprob: -8.001007080078125
    4. '```' → logprob: -10.626007080078125
    5. '   ' → logprob: -10.751007080078125
    6. 'ufi' → logprob: -11.001007080078125
    7. '_' → logprob: -11.251007080078125
    8. 'ug' → logprob: -11.626007080078125
    9. 'ufs' → logprob: -12.001007080078125
    10. '       ' → logprob: -12.626007080078125

Token 1875: '.union' (ID: 140875)
  Prédit: '.union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.union' → logprob: -0.00020520923135336488
    2. '.' → logprob: -8.500205039978027
    3. 'union' → logprob: -14.000205039978027
    4. ' .' → logprob: -14.875205039978027
    5. '.uniform' → logprob: -15.750205039978027
    6. '	union' → logprob: -16.125205993652344
    7. ').' → logprob: -17.000205993652344
    8. '.uf' → logprob: -17.000205993652344
    9. '.un' → logprob: -17.375205993652344
    10. '   ' → logprob: -17.375205993652344

Token 1876: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.00034118397161364555
    2. 'e' → logprob: -8.000341415405273
    3. '(' → logprob: -12.375341415405273
    4. ' e' → logprob: -13.875341415405273
    5. '(
' → logprob: -14.625341415405273
    6. ' (' → logprob: -16.250341415405273
    7. '```' → logprob: -17.875341415405273
    8. ')e' → logprob: -18.250341415405273
    9. '
' → logprob: -18.375341415405273
    10. '[e' → logprob: -18.500341415405273

Token 1877: '.u' (ID: 22262)
  Prédit: '.e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.e' → logprob: -0.49160057306289673
    2. 'e' → logprob: -0.9916005730628967
    3. '.u' → logprob: -4.616600513458252
    4. '(e' → logprob: -4.991600513458252
    5. 'u' → logprob: -8.11660099029541
    6. '.' → logprob: -8.86660099029541
    7. ' e' → logprob: -9.24160099029541
    8. '(u' → logprob: -9.36660099029541
    9. ',e' → logprob: -10.99160099029541
    10. ' .' → logprob: -11.11660099029541

Token 1878: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016563729150220752
    2. ',e' → logprob: -9.250165939331055
    3. ' ,' → logprob: -10.250165939331055
    4. ',
' → logprob: -10.625165939331055
    5. '           ' → logprob: -11.625165939331055
    6. 'e' → logprob: -14.250165939331055
    7. ' e' → logprob: -15.375165939331055
    8. '
' → logprob: -17.000165939331055
    9. '<|end|>' → logprob: -17.125165939331055
    10. ',
' → logprob: -17.625165939331055

Token 1879: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.005243002902716398
    2. ' e' → logprob: -5.255242824554443
    3. '           ' → logprob: -11.755243301391602
    4. '   ' → logprob: -14.005243301391602
    5. '
' → logprob: -15.505243301391602
    6. '       ' → logprob: -16.5052433013916
    7. ')e' → logprob: -16.5052433013916
    8. ')' → logprob: -17.1302433013916
    9. '               ' → logprob: -17.3802433013916
    10. '    ' → logprob: -17.6302433013916

Token 1880: '.v' (ID: 5520)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.14779865741729736
    2. '.e' → logprob: -2.147798538208008
    3. ',' → logprob: -4.397798538208008
    4. ',e' → logprob: -5.522798538208008
    5. ' e' → logprob: -5.772798538208008
    6. '.' → logprob: -8.022798538208008
    7. ')' → logprob: -8.272798538208008
    8. '	e' → logprob: -8.897798538208008
    9. '           ' → logprob: -9.147798538208008
    10. ',
' → logprob: -9.772798538208008

Token 1881: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001863750658230856
    2. ')
' → logprob: -9.2501859664917
    3. '       ' → logprob: -9.3751859664917
    4. '<|end|>' → logprob: -13.2501859664917
    5. '
' → logprob: -13.6251859664917
    6. ' )' → logprob: -14.3751859664917
    7. '           ' → logprob: -14.6251859664917
    8. ')#' → logprob: -15.2501859664917
    9. '),' → logprob: -15.5001859664917
    10. ')return' → logprob: -16.000186920166016

Token 1882: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23258234560489655
    2. 'edges' → logprob: -2.3575823307037354
    3. 'all' → logprob: -2.4825823307037354
    4. '
' → logprob: -3.9825823307037354
    5. '```' → logprob: -5.1075825691223145
    6. 'rest' → logprob: -6.3575825691223145
    7. '        
' → logprob: -7.3575825691223145
    8. ' edges' → logprob: -7.3575825691223145
    9. '#' → logprob: -7.3575825691223145
    10. 'remaining' → logprob: -8.607582092285156

Token 1883: ' #' (ID: 1069)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.3087933361530304
    2. 'edges' → logprob: -1.808793306350708
    3. '       ' → logprob: -2.933793306350708
    4. '#' (adapté à ' #') → logprob: -3.183793306350708
    5. 'possible' → logprob: -5.808793544769287
    6. 'available' → logprob: -6.933793544769287
    7. 'remaining' → logprob: -7.433793544769287
    8. 'rest' → logprob: -7.683793544769287
    9. 'candidate' → logprob: -7.808793544769287
    10. 'additional' → logprob: -8.433793067932129

Token 1884: ' Step' (ID: 22291)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.2470291703939438
    2. '#' → logprob: -2.4970290660858154
    3. 'edges' → logprob: -2.4970290660858154
    4. '       ' → logprob: -3.3720290660858154
    5. 'available' → logprob: -4.8720293045043945
    6. 'remaining' → logprob: -5.7470293045043945
    7. 'candidate' → logprob: -5.8720293045043945
    8. 'possible' → logprob: -5.8720293045043945
    9. 'mst' → logprob: -7.6220293045043945
    10. 'original' → logprob: -7.7470293045043945

Token 1885: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024704167619347572
    2. ':' → logprob: -4.7747039794921875
    3. ' ' → logprob: -4.7747039794921875
    4. '        ' → logprob: -6.6497039794921875
    5. '        
' → logprob: -6.6497039794921875
    6. '   ' → logprob: -7.2747039794921875
    7. '1' → logprob: -7.2747039794921875
    8. '_' → logprob: -7.3997039794921875
    9. '[' → logprob: -7.5247039794921875
    10. '    ' → logprob: -7.8997039794921875

Token 1886: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.09509402513504028
    2. '       ' → logprob: -3.4700939655303955
    3. '1' → logprob: -3.7200939655303955
    4. '5' → logprob: -4.220094203948975
    5. '2' → logprob: -5.595094203948975
    6. '3' → logprob: -5.595094203948975
    7. '0' → logprob: -5.595094203948975
    8. ':' → logprob: -5.970094203948975
    9. '#' → logprob: -6.470094203948975
    10. '```' → logprob: -6.720094203948975

Token 1887: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008324965834617615
    2. ':' → logprob: -4.883325099945068
    3. '
' → logprob: -7.508325099945068
    4. '#' → logprob: -9.25832462310791
    5. '        
' → logprob: -10.38332462310791
    6. '```' → logprob: -11.25832462310791
    7. ',' → logprob: -11.50832462310791
    8. '   ' → logprob: -12.25832462310791
    9. '           ' → logprob: -12.63332462310791
    10. ':
' → logprob: -13.25832462310791

Token 1888: ' From' (ID: 7217)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.21473421156406403
    2. 'edges' → logprob: -2.2147343158721924
    3. 'possible' → logprob: -3.8397343158721924
    4. 'available' → logprob: -3.9647343158721924
    5. '#' → logprob: -4.089734077453613
    6. 'candidate' → logprob: -4.464734077453613
    7. 'c' → logprob: -4.714734077453613
    8. 'remaining' → logprob: -6.089734077453613
    9. 'allowed' → logprob: -6.464734077453613
    10. 'mst' → logprob: -7.089734077453613

Token 1889: ' the' (ID: 290)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.05515217036008835
    2. 'self' → logprob: -3.430152177810669
    3. ' all' → logprob: -4.43015193939209
    4. 'the' → logprob: -5.43015193939209
    5. 'original' → logprob: -6.80515193939209
    6. 'remaining' → logprob: -6.80515193939209
    7. ' self' → logprob: -7.05515193939209
    8. 'edges' → logprob: -7.30515193939209
    9. 'rest' → logprob: -8.55515193939209
    10. 'other' → logprob: -8.55515193939209

Token 1890: ' original' (ID: 4756)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.4980193078517914
    2. 'graph' → logprob: -1.2480193376541138
    3. 'self' → logprob: -3.623019218444824
    4. 'original' → logprob: -3.873019218444824
    5. 'remaining' → logprob: -3.998019218444824
    6. 'edges' → logprob: -4.873019218444824
    7. ' graph' → logprob: -4.873019218444824
    8. 'rest' → logprob: -5.123019218444824
    9. '       ' → logprob: -5.623019218444824
    10. ' all' → logprob: -5.873019218444824

Token 1891: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.1883310228586197
    2. '_edges' → logprob: -1.8133310079574585
    3. ' edges' → logprob: -5.313331127166748
    4. 'all' → logprob: -5.813331127166748
    5. 'original' → logprob: -8.43833065032959
    6. '#' → logprob: -8.81333065032959
    7. '
' → logprob: -9.81333065032959
    8. '```' → logprob: -10.06333065032959
    9. '_all' → logprob: -10.18833065032959
    10. ' all' → logprob: -10.68833065032959

Token 1892: ' that' (ID: 484)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7361986041069031
    2. 'and' → logprob: -1.3611986637115479
    3. 'all' → logprob: -2.236198663711548
    4. 'edges' → logprob: -3.111198663711548
    5. ',' → logprob: -3.236198663711548
    6. 'remaining' → logprob: -3.736198663711548
    7. 'rest' → logprob: -4.736198425292969
    8. '#' → logprob: -4.736198425292969
    9. 'available' → logprob: -5.111198425292969
    10. ' and' → logprob: -5.611198425292969

Token 1893: ' are' (ID: 553)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.003248651046305895
    2. ' are' → logprob: -6.378248691558838
    3. '
' → logprob: -7.503248691558838
    4. 'do' → logprob: -8.50324821472168
    5. 'were' → logprob: -8.75324821472168
    6. '#' → logprob: -8.75324821472168
    7. 'uf' → logprob: -9.12824821472168
    8. '   ' → logprob: -10.00324821472168
    9. 'not' → logprob: -10.00324821472168
    10. 'self' → logprob: -10.12824821472168

Token 1894: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.002989589935168624
    2. ' not' → logprob: -6.002989768981934
    3. 'outside' → logprob: -7.877989768981934
    4. 'inside' → logprob: -9.377989768981934
    5. '
' → logprob: -11.752989768981934
    6. '   ' → logprob: -11.877989768981934
    7. 'allowed' → logprob: -12.127989768981934
    8. '#' → logprob: -12.252989768981934
    9. 'possible' → logprob: -12.377989768981934
    10. 'in' → logprob: -12.627989768981934

Token 1895: ' on' (ID: 402)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.94450843334198
    2. 'on' → logprob: -0.94450843334198
    3. 'h' → logprob: -1.81950843334198
    4. 'part' → logprob: -3.1945085525512695
    5. ' part' → logprob: -4.8195085525512695
    6. ' on' → logprob: -5.1945085525512695
    7. ' in' → logprob: -5.4445085525512695
    8. 'not' → logprob: -8.44450855255127
    9. ' hull' → logprob: -8.56950855255127
    10. 'boundary' → logprob: -8.69450855255127

Token 1896: ' hull' (ID: 74912)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.14800336956977844
    2. 'h' → logprob: -2.023003339767456
    3. ' the' → logprob: -5.273003578186035
    4. ' hull' → logprob: -9.648003578186035
    5. 'boundary' → logprob: -10.523003578186035
    6. '   ' → logprob: -10.773003578186035
    7. 'hul' → logprob: -10.773003578186035
    8. '#' → logprob: -11.773003578186035
    9. '
' → logprob: -12.335503578186035
    10. 'hu' → logprob: -12.648003578186035

Token 1897: ',' (ID: 11)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -1.0679856538772583
    2. 'edges' → logprob: -1.3179856538772583
    3. ',' → logprob: -1.8179856538772583
    4. ' edges' → logprob: -2.0679855346679688
    5. '       ' → logprob: -2.8179855346679688
    6. ' or' → logprob: -4.067985534667969
    7. ' and' → logprob: -5.442985534667969
    8. 'or' → logprob: -5.817985534667969
    9. ':' → logprob: -5.942985534667969
    10. 'and' → logprob: -6.192985534667969

Token 1898: ' add' (ID: 1147)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'non' → logprob: -1.1351287364959717
    2. 'candidate' → logprob: -2.2601287364959717
    3. 'add' → logprob: -2.5101287364959717
    4. '       ' → logprob: -2.5101287364959717
    5. 'c' → logprob: -2.8851287364959717
    6. 'other' → logprob: -3.2601287364959717
    7. 'rest' → logprob: -3.2601287364959717
    8. '           ' → logprob: -3.2601287364959717
    9. 'remaining' → logprob: -3.3851287364959717
    10. ' non' → logprob: -3.5101287364959717

Token 1899: ' edges' (ID: 22569)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.3632969856262207
    2. ' those' → logprob: -1.4882969856262207
    3. ' them' → logprob: -1.7382969856262207
    4. ' e' → logprob: -2.2382969856262207
    5. ' edges' → logprob: -2.6132969856262207
    6. 'them' → logprob: -3.2382969856262207
    7. 'those' → logprob: -3.4882969856262207
    8. 'edges' → logprob: -4.113296985626221
    9. ' for' → logprob: -4.113296985626221
    10. ' the' → logprob: -4.738296985626221

Token 1900: ' that' (ID: 484)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.6313056945800781
    2. 'outside' → logprob: -1.3813056945800781
    3. '       ' → logprob: -2.006305694580078
    4. ' outside' → logprob: -3.631305694580078
    5. ' not' → logprob: -4.631305694580078
    6. 'that' → logprob: -4.631305694580078
    7. 'to' → logprob: -4.631305694580078
    8. 'non' → logprob: -5.506305694580078
    9. 'for' → logprob: -5.881305694580078
    10. ':' → logprob: -6.131305694580078

Token 1901: ':
' (ID: 734)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.7372311949729919
    2. 'are' → logprob: -1.6122312545776367
    3. 'do' → logprob: -1.6122312545776367
    4. 'uf' → logprob: -2.8622312545776367
    5. '   ' → logprob: -4.612231254577637
    6. 'don't' → logprob: -4.612231254577637
    7. 'connect' → logprob: -4.737231254577637
    8. 'self' → logprob: -5.112231254577637
    9. ' do' → logprob: -5.362231254577637
    10. ' are' → logprob: -5.362231254577637

Token 1902: '       ' (ID: 309)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.2578853666782379
    2. ' not' → logprob: -2.007885456085205
    3. '       ' → logprob: -3.257885456085205
    4. ' are' → logprob: -4.007885456085205
    5. 'self' → logprob: -4.507885456085205
    6. '#' → logprob: -5.007885456085205
    7. 'e' → logprob: -5.257885456085205
    8. 'are' → logprob: -5.382885456085205
    9. ' self' → logprob: -6.382885456085205
    10. '           ' → logprob: -6.632885456085205

Token 1903: ' #' (ID: 1069)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.33239051699638367
    2. ' not' → logprob: -1.332390546798706
    3. 'self' → logprob: -4.957390308380127
    4. '       ' → logprob: -6.332390308380127
    5. ' are' → logprob: -6.332390308380127
    6. ' self' → logprob: -6.332390308380127
    7. '```' → logprob: -6.457390308380127
    8. 'e' → logprob: -6.957390308380127
    9. ' do' → logprob: -7.207390308380127
    10. 'are' → logprob: -7.582390308380127

Token 1904: ' (' (ID: 350)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0060662562027573586
    2. '   ' → logprob: -6.63106632232666
    3. ' not' → logprob: -6.63106632232666
    4. 'are' → logprob: -6.75606632232666
    5. 'self' → logprob: -7.00606632232666
    6. '
' → logprob: -8.13106632232666
    7. '#' → logprob: -8.25606632232666
    8. '       ' → logprob: -8.38106632232666
    9. 'for' → logprob: -8.88106632232666
    10. 'e' → logprob: -9.38106632232666

Token 1905: 'a' (ID: 64)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0045256540179252625
    2. ' not' → logprob: -6.379525661468506
    3. 'e' → logprob: -6.879525661468506
    4. ')' → logprob: -6.879525661468506
    5. 'self' → logprob: -8.254525184631348
    6. '
' → logprob: -9.254525184631348
    7. '   ' → logprob: -9.754525184631348
    8. '#' → logprob: -9.879525184631348
    9. '(not' → logprob: -9.879525184631348
    10. 'min' → logprob: -9.879525184631348

Token 1906: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04401838034391403
    2. ' not' → logprob: -4.669018268585205
    3. ' are' → logprob: -4.794018268585205
    4. '):' → logprob: -5.294018268585205
    5. ' !=' → logprob: -5.419018268585205
    6. ',' → logprob: -5.669018268585205
    7. ' )' → logprob: -6.044018268585205
    8. '   ' → logprob: -6.544018268585205
    9. ' ==' → logprob: -6.919018268585205
    10. 'not' → logprob: -6.919018268585205

Token 1907: ' do' (ID: 621)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.6543368697166443
    2. ' not' → logprob: -2.154336929321289
    3. 'do' → logprob: -2.279336929321289
    4. 'connect' → logprob: -2.654336929321289
    5. 'are' → logprob: -2.904336929321289
    6. ' are' → logprob: -3.279336929321289
    7. ' do' → logprob: -3.279336929321289
    8. 'uf' → logprob: -3.904336929321289
    9. 'self' → logprob: -4.029336929321289
    10. '   ' → logprob: -5.654336929321289

Token 1908: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.3491654694080353
    2. ' not' → logprob: -1.224165439605713
    3. '_not' → logprob: -7.849165439605713
    4. 'es' → logprob: -9.349165916442871
    5. 'n't' → logprob: -9.599165916442871
    6. '   ' → logprob: -10.224165916442871
    7. '```' → logprob: -10.224165916442871
    8. '       ' → logprob: -10.474165916442871
    9. '	not' → logprob: -10.724165916442871
    10. '           ' → logprob: -10.974165916442871

Token 1909: ' violate' (ID: 83695)
  Prédit: 'connect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'connect' → logprob: -0.17163033783435822
    2. 'conf' → logprob: -3.171630382537842
    3. 'share' → logprob: -3.296630382537842
    4. 'cross' → logprob: -3.796630382537842
    5. 'disconnect' → logprob: -4.421630382537842
    6. 'vi' → logprob: -4.796630382537842
    7. 'break' → logprob: -5.171630382537842
    8. 'create' → logprob: -5.171630382537842
    9. 'inter' → logprob: -5.421630382537842
    10. ' connect' → logprob: -5.421630382537842

Token 1910: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.33593523502349854
    2. 'the' → logprob: -1.5859352350234985
    3. ' boundary' → logprob: -3.085935115814209
    4. 'boundary' → logprob: -4.335935115814209
    5. ' uf' → logprob: -5.085935115814209
    6. ' hull' → logprob: -5.460935115814209
    7. 'uf' → logprob: -5.585935115814209
    8. 'Boundary' → logprob: -5.835935115814209
    9. ' Boundary' → logprob: -6.710935115814209
    10. 'h' → logprob: -6.835935115814209

Token 1911: ' convex' (ID: 142423)
  Prédit: 'boundary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'boundary' → logprob: -0.35549432039260864
    2. 'Boundary' → logprob: -1.7304942607879639
    3. 'conv' → logprob: -3.355494260787964
    4. ' boundary' → logprob: -3.730494260787964
    5. 'h' → logprob: -3.980494260787964
    6. 'inside' → logprob: -4.230494499206543
    7. 'polygon' → logprob: -4.605494499206543
    8. ' Boundary' → logprob: -5.230494499206543
    9. '"' → logprob: -5.355494499206543
    10. 'is' → logprob: -5.980494499206543

Token 1912: ' hull' (ID: 74912)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.017298178747296333
    2. '_h' → logprob: -4.142298221588135
    3. ' hull' → logprob: -7.392298221588135
    4. 'ity' → logprob: -7.642298221588135
    5. '
' → logprob: -9.392297744750977
    6. '   ' → logprob: -10.517297744750977
    7. ' ' → logprob: -11.017297744750977
    8. '#' → logprob: -11.392297744750977
    9. '-h' → logprob: -11.642297744750977
    10. '_' → logprob: -11.767297744750977

Token 1913: ' boundary' (ID: 35021)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2975999116897583
    2. '#' → logprob: -3.0475997924804688
    3. ' and' → logprob: -3.5475997924804688
    4. ')' → logprob: -3.7975997924804688
    5. ',' → logprob: -4.047599792480469
    6. ' condition' → logprob: -4.047599792480469
    7. '           ' → logprob: -4.172599792480469
    8. ')
' → logprob: -4.672599792480469
    9. '
' → logprob: -4.797599792480469
    10. ',
' → logprob: -4.797599792480469

Token 1914: ' condition' (ID: 7060)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.051751479506492615
    2. ',' → logprob: -3.8017513751983643
    3. ',
' → logprob: -4.801751613616943
    4. ' and' → logprob: -5.301751613616943
    5. ' (' → logprob: -5.301751613616943
    6. '
' → logprob: -5.426751613616943
    7. '#' → logprob: -6.301751613616943
    8. 'and' → logprob: -6.801751613616943
    9. '           ' → logprob: -7.301751613616943
    10. '        
' → logprob: -8.051751136779785

Token 1915: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010246128775179386
    2. ',' → logprob: -5.010246276855469
    3. '
' → logprob: -6.885246276855469
    4. ' (' → logprob: -7.635246276855469
    5. ',
' → logprob: -7.760246276855469
    6. ' and' → logprob: -8.010246276855469
    7. ' to' → logprob: -8.385246276855469
    8. '        
' → logprob: -8.385246276855469
    9. '           ' → logprob: -8.635246276855469
    10. ' for' → logprob: -8.760246276855469

Token 1916: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06655742973089218
    2. '#' → logprob: -2.9415574073791504
    3. '           ' → logprob: -4.69155740737915
    4. ' #' → logprob: -7.31655740737915
    5. '```' → logprob: -7.69155740737915
    6. '   ' → logprob: -7.94155740737915
    7. '               ' → logprob: -8.191557884216309
    8. 'for' → logprob: -8.566557884216309
    9. ' ' → logprob: -9.691557884216309
    10. ' (' → logprob: -9.816557884216309

Token 1917: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027959253638982773
    2. '```' → logprob: -4.65295934677124
    3. '           ' → logprob: -4.90295934677124
    4. '#' (adapté à ' #') → logprob: -4.90295934677124
    5. ' for' → logprob: -7.15295934677124
    6. ' #' → logprob: -7.40295934677124
    7. 'for' → logprob: -7.52795934677124
    8. ' (' → logprob: -8.152958869934082
    9. '               ' → logprob: -8.277958869934082
    10. '   ' → logprob: -9.152958869934082

Token 1918: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32478824257850647
    2. '#' → logprob: -1.324788212776184
    3. 'for' → logprob: -5.5747880935668945
    4. '           ' → logprob: -5.8247880935668945
    5. ' #' → logprob: -6.6997880935668945
    6. '   ' → logprob: -7.3247880935668945
    7. ' for' → logprob: -7.4497880935668945
    8. ' (' → logprob: -7.4497880935668945
    9. ' ' → logprob: -7.9497880935668945
    10. 'edges' → logprob: -8.074788093566895

Token 1919: ' every' (ID: 1753)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.029127413406968117
    2. 'edge' → logprob: -3.779127359390259
    3. ' e' → logprob: -6.029127597808838
    4. 'each' → logprob: -6.904127597808838
    5. 'u' → logprob: -7.154127597808838
    6. ' edge' → logprob: -7.654127597808838
    7. 'all' → logprob: -8.40412712097168
    8. 'p' → logprob: -9.27912712097168
    9. 'original' → logprob: -9.40412712097168
    10. 'edges' → logprob: -9.52912712097168

Token 1920: ' pair' (ID: 10610)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3308156132698059
    2. 'edge' → logprob: -1.4558155536651611
    3. ' edge' → logprob: -3.705815553665161
    4. ' e' → logprob: -4.58081579208374
    5. 'original' → logprob: -5.33081579208374
    6. 'existing' → logprob: -5.83081579208374
    7. 'other' → logprob: -6.58081579208374
    8. ' original' → logprob: -7.20581579208374
    9. 'candidate' → logprob: -7.20581579208374
    10. 'new' → logprob: -8.080815315246582

Token 1921: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.2546052038669586
    2. ')' → logprob: -3.129605293273926
    3. '(e' → logprob: -3.254605293273926
    4. ' (' → logprob: -3.379605293273926
    5. '           ' → logprob: -3.504605293273926
    6. '       ' → logprob: -4.004605293273926
    7. ',' → logprob: -4.754605293273926
    8. 'of' → logprob: -4.879605293273926
    9. '
' → logprob: -4.879605293273926
    10. '   ' → logprob: -5.629605293273926

Token 1922: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.1986897587776184
    2. 'u' → logprob: -2.5736896991729736
    3. 'e' → logprob: -3.3236896991729736
    4. 'edges' → logprob: -3.6986896991729736
    5. 'vertices' → logprob: -4.198689937591553
    6. 'a' → logprob: -4.448689937591553
    7. ' points' → logprob: -5.198689937591553
    8. 'self' → logprob: -5.698689937591553
    9. 'nodes' → logprob: -6.573689937591553
    10. 'distinct' → logprob: -6.573689937591553

Token 1923: ' u' (ID: 337)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5215262174606323
    2. ',' → logprob: -2.396526336669922
    3. '(i' → logprob: -2.521526336669922
    4. '(u' → logprob: -2.771526336669922
    5. 'a' → logprob: -2.896526336669922
    6. '(a' → logprob: -3.146526336669922
    7. ' not' → logprob: -4.646526336669922
    8. 'i' → logprob: -4.646526336669922
    9. '(' → logprob: -4.646526336669922
    10. '(p' → logprob: -4.771526336669922

Token 1924: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005841468460857868
    2. ' ,' → logprob: -5.630841255187988
    3. ',v' → logprob: -6.505841255187988
    4. ',
' → logprob: -8.380841255187988
    5. '           ' → logprob: -8.880841255187988
    6. 'and' → logprob: -9.130841255187988
    7. ' and' → logprob: -9.380841255187988
    8. ',b' → logprob: -9.630841255187988
    9. ',u' → logprob: -11.380841255187988
    10. ',n' → logprob: -11.755841255187988

Token 1925: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.41403964161872864
    2. ':
' → logprob: -1.6640396118164062
    3. '           ' → logprob: -2.7890396118164062
    4. ' in' → logprob: -3.5390396118164062
    5. ':' → logprob: -3.7890396118164062
    6. ',
' → logprob: -4.539039611816406
    7. '       ' → logprob: -4.914039611816406
    8. ' ,' → logprob: -5.289039611816406
    9. ' if' → logprob: -5.539039611816406
    10. '
' → logprob: -5.664039611816406

Token 1926: ' the' (ID: 290)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7787755727767944
    2. '           ' → logprob: -1.2787755727767944
    3. ' for' → logprob: -2.278775691986084
    4. ' if' → logprob: -2.653775691986084
    5. ' #' → logprob: -4.778775691986084
    6. ' (' → logprob: -4.778775691986084
    7. ' edges' → logprob: -4.778775691986084
    8. ',' → logprob: -5.153775691986084
    9. '
' → logprob: -5.153775691986084
    10. ' continue' → logprob: -5.278775691986084

Token 1927: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.6017051935195923
    2. 'line' → logprob: -1.1017051935195923
    3. ' line' → logprob: -3.3517050743103027
    4. 'edge' → logprob: -3.7267050743103027
    5. ' segment' → logprob: -3.8517050743103027
    6. 'point' → logprob: -5.351705074310303
    7. 'def' → logprob: -5.476705074310303
    8. 'if' → logprob: -5.601705074310303
    9. 'graph' → logprob: -5.726705074310303
    10. '#' → logprob: -5.851705074310303

Token 1928: ' must' (ID: 2804)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.712922990322113
    2. 'ab' → logprob: -1.9629230499267578
    3. ' between' → logprob: -2.587923049926758
    4. ' ab' → logprob: -2.837923049926758
    5. 'a' → logprob: -3.087923049926758
    6. 'u' → logprob: -3.462923049926758
    7. ' u' → logprob: -3.587923049926758
    8. 'between' → logprob: -3.962923049926758
    9. 'uv' → logprob: -4.087923049926758
    10. '[u' → logprob: -4.087923049926758

Token 1929: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.557830274105072
    2. ' not' → logprob: -1.3078303337097168
    3. 'not' → logprob: -2.557830333709717
    4. 'be' → logprob: -2.807830333709717
    5. 'pass' → logprob: -4.807830333709717
    6. ' pass' → logprob: -5.682830333709717
    7. ' lie' → logprob: -5.807830333709717
    8. 'continue' → logprob: -7.057830333709717
    9. 'inside' → logprob: -7.182830333709717
    10. ')' → logprob: -8.307829856872559

Token 1930: ' inside' (ID: 6772)
  Prédit: 'inside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inside' → logprob: -0.39423781633377075
    2. 'Boundary' → logprob: -1.144237756729126
    3. ' inside' → logprob: -5.769237995147705
    4. 'Inside' → logprob: -6.269237995147705
    5. 'fully' → logprob: -7.269237995147705
    6. ' Boundary' → logprob: -7.644237995147705
    7. 'contained' → logprob: -8.519237518310547
    8. 'com' → logprob: -8.769237518310547
    9. 'ins' → logprob: -8.894237518310547
    10. 'ent' → logprob: -9.019237518310547

Token 1931: ' or' (ID: 503)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.2701762914657593
    2. ' the' → logprob: -1.8951762914657593
    3. 'polygon' → logprob: -3.020176410675049
    4. ' polygon' → logprob: -4.145176410675049
    5. '       ' → logprob: -4.895176410675049
    6. 'self' → logprob: -5.020176410675049
    7. '(p' → logprob: -6.020176410675049
    8. '(' → logprob: -6.145176410675049
    9. '(self' → logprob: -6.645176410675049
    10. ' (' → logprob: -7.520176410675049

Token 1932: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.07898959517478943
    2. ' on' → logprob: -2.5789895057678223
    3. '#' → logprob: -10.82898998260498
    4. 'ont' → logprob: -11.20398998260498
    5. '_on' → logprob: -11.45398998260498
    6. '	on' → logprob: -11.45398998260498
    7. '
' → logprob: -11.57898998260498
    8. ' #' → logprob: -12.57898998260498
    9. 'the' → logprob: -12.57898998260498
    10. ' ' → logprob: -12.70398998260498

Token 1933: ' hull' (ID: 74912)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.23796683549880981
    2. 'h' → logprob: -1.987966775894165
    3. ' the' → logprob: -2.612966775894165
    4. ' hull' → logprob: -7.487967014312744
    5. '       ' → logprob: -7.987967014312744
    6. 'polygon' → logprob: -8.237966537475586
    7. '#' → logprob: -9.862966537475586
    8. ' polygon' → logprob: -9.987966537475586
    9. 'conv' → logprob: -9.987966537475586
    10. '           ' → logprob: -10.112966537475586

Token 1934: ' polygon' (ID: 65081)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08023159950971603
    2. '
' → logprob: -2.8302316665649414
    3. 'edges' → logprob: -5.205231666564941
    4. '#' → logprob: -5.580231666564941
    5. ' edges' → logprob: -6.080231666564941
    6. '
' → logprob: -6.580231666564941
    7. ',' → logprob: -7.080231666564941
    8. '        
' → logprob: -7.080231666564941
    9. 'points' → logprob: -7.580231666564941
    10. 'all' → logprob: -7.955231666564941

Token 1935: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.053547121584415436
    2. '
' → logprob: -3.8035471439361572
    3. 'edges' → logprob: -4.803546905517578
    4. 'all' → logprob: -5.178546905517578
    5. ' edges' → logprob: -5.303546905517578
    6. '#' → logprob: -5.678546905517578
    7. ',' → logprob: -6.178546905517578
    8. '        
' → logprob: -6.553546905517578
    9. ' all' → logprob: -7.678546905517578
    10. '
' → logprob: -8.053546905517578

Token 1936: ' so' (ID: 813)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7138709425926208
    2. '       ' → logprob: -0.7138709425926208
    3. 'edges' → logprob: -4.713871002197266
    4. ' #' → logprob: -5.963871002197266
    5. ' edges' → logprob: -5.963871002197266
    6. '
' → logprob: -6.088871002197266
    7. '           ' → logprob: -6.713871002197266
    8. ' and' → logprob: -7.713871002197266
    9. 'and' → logprob: -7.963871002197266
    10. '        
' → logprob: -8.213871002197266

Token 1937: ' check' (ID: 2371)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.215619444847107
    2. '           ' → logprob: -1.340619444847107
    3. ' if' → logprob: -1.465619444847107
    4. ' for' → logprob: -2.8406195640563965
    5. 'for' → logprob: -3.0906195640563965
    6. '       ' → logprob: -3.5906195640563965
    7. ' original' → logprob: -4.7156195640563965
    8. 'segment' → logprob: -5.0906195640563965
    9. 'original' → logprob: -5.0906195640563965
    10. 'point' → logprob: -5.4656195640563965

Token 1938: ' segment' (ID: 14806)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2921277284622192
    2. 'for' → logprob: -1.5421277284622192
    3. ' for' → logprob: -2.2921276092529297
    4. 'e' → logprob: -2.6671276092529297
    5. 'self' → logprob: -2.7921276092529297
    6. 'if' → logprob: -3.0421276092529297
    7. 'original' → logprob: -3.2921276092529297
    8. '           ' → logprob: -3.7921276092529297
    9. ' if' → logprob: -4.04212760925293
    10. ' original' → logprob: -4.16712760925293

Token 1939: ' inside' (ID: 6772)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.3704123795032501
    2. '       ' → logprob: -1.9954123497009277
    3. '           ' → logprob: -2.2454123497009277
    4. '
' → logprob: -4.370412349700928
    5. '   ' → logprob: -4.995412349700928
    6. 'inside' → logprob: -4.995412349700928
    7. 'ab' → logprob: -5.370412349700928
    8. ')' → logprob: -5.370412349700928
    9. '(' → logprob: -5.745412349700928
    10. ' (' → logprob: -5.870412349700928

Token 1940: ' polygon' (ID: 65081)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7909325361251831
    2. 'h' → logprob: -1.665932536125183
    3. 'self' → logprob: -2.2909326553344727
    4. '(h' → logprob: -2.4159326553344727
    5. 'for' → logprob: -3.0409326553344727
    6. '(self' → logprob: -3.2909326553344727
    7. 'polygon' → logprob: -3.6659326553344727
    8. 'the' → logprob: -3.7909326553344727
    9. 'if' → logprob: -4.915932655334473
    10. '(p' → logprob: -5.290932655334473

Token 1941: ' condition' (ID: 7060)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035301730036735535
    2. '
' → logprob: -3.785301685333252
    3. 'edges' → logprob: -5.410301685333252
    4. '        
' → logprob: -6.160301685333252
    5. ' edges' → logprob: -7.035301685333252
    6. 'all' → logprob: -7.035301685333252
    7. '
' → logprob: -7.785301685333252
    8. 'original' → logprob: -7.785301685333252
    9. ',' → logprob: -7.910301685333252
    10. '#' → logprob: -8.03530216217041

Token 1942: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0178992860019207
    2. '
' → logprob: -4.767899513244629
    3. 'edges' → logprob: -5.767899513244629
    4. '        
' → logprob: -6.392899513244629
    5. 'all' → logprob: -6.892899513244629
    6. ' edges' → logprob: -7.392899513244629
    7. '#' → logprob: -7.517899513244629
    8. 'original' → logprob: -8.142899513244629
    9. ',' → logprob: -8.392899513244629
    10. 'non' → logprob: -8.642899513244629

Token 1943: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007387855555862188
    2. 'edges' → logprob: -5.632387638092041
    3. '
' → logprob: -6.632387638092041
    4. ' edges' → logprob: -7.007387638092041
    5. '```' → logprob: -8.2573881149292
    6. '        
' → logprob: -8.2573881149292
    7. 'all' → logprob: -8.5073881149292
    8. '#' → logprob: -9.2573881149292
    9. 'original' → logprob: -9.3823881149292
    10. 'for' → logprob: -9.6323881149292

Token 1944: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05006340891122818
    2. 'all' → logprob: -4.050063610076904
    3. 'edges' → logprob: -4.050063610076904
    4. 'allowed' → logprob: -5.550063610076904
    5. '
' → logprob: -5.675063610076904
    6. 'available' → logprob: -6.550063610076904
    7. 'rest' → logprob: -7.175063610076904
    8. 'valid' → logprob: -7.550063610076904
    9. 'original' → logprob: -7.675063610076904
    10. 'candidate' → logprob: -7.675063610076904

Token 1945: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6810503602027893
    2. 'all' → logprob: -2.0560503005981445
    3. 'edges' → logprob: -2.1810503005981445
    4. 'allowed' → logprob: -2.5560503005981445
    5. 'available' → logprob: -3.1810503005981445
    6. 'candidate' → logprob: -3.8060503005981445
    7. 'possible' → logprob: -4.0560503005981445
    8. 'c' → logprob: -4.1810503005981445
    9. 'remaining' → logprob: -4.6810503005981445
    10. 'valid' → logprob: -4.8060503005981445

Token 1946: 'b' (ID: 65)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -1.36610746383667
    2. 'all' → logprob: -1.86610746383667
    3. '       ' → logprob: -1.99110746383667
    4. 'original' → logprob: -2.99110746383667
    5. 'candidate' → logprob: -2.99110746383667
    6. 'allowed' → logprob: -3.24110746383667
    7. ')' → logprob: -3.49110746383667
    8. 'additional' → logprob: -3.49110746383667
    9. '#' → logprob: -3.49110746383667
    10. 'available' → logprob: -3.61610746383667

Token 1947: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002466774603817612
    2. '       ' → logprob: -9.37524700164795
    3. ' )' → logprob: -10.00024700164795
    4. '   ' → logprob: -10.00024700164795
    5. '#' → logprob: -10.12524700164795
    6. ')
' → logprob: -11.87524700164795
    7. '           ' → logprob: -12.00024700164795
    8. ')#' → logprob: -12.50024700164795
    9. '    ' → logprob: -12.75024700164795
    10. '        ' → logprob: -13.00024700164795

Token 1948: ' maintains' (ID: 52623)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.7216221690177917
    2. ' edges' → logprob: -1.5966222286224365
    3. '#' → logprob: -2.8466222286224365
    4. 'allowed' → logprob: -3.2216222286224365
    5. 'candidate' → logprob: -3.3466222286224365
    6. '       ' → logprob: -3.4716222286224365
    7. 'all' → logprob: -4.221621990203857
    8. 'original' → logprob: -4.221621990203857
    9. 'eligible' → logprob: -4.221621990203857
    10. 'valid' → logprob: -4.471621990203857

Token 1949: ' graph' (ID: 7465)
  Prédit: ' connectivity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' connectivity' → logprob: -0.6841366291046143
    2. 'connect' → logprob: -0.9341366291046143
    3. 'the' → logprob: -3.1841366291046143
    4. 'graph' → logprob: -4.059136390686035
    5. 'connected' → logprob: -4.309136390686035
    6. 'self' → logprob: -4.809136390686035
    7. ' ac' → logprob: -5.059136390686035
    8. 'acy' → logprob: -5.809136390686035
    9. 'uf' → logprob: -5.809136390686035
    10. '       ' → logprob: -6.559136390686035

Token 1950: ' connectivity' (ID: 45849)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7842559814453125
    2. ' connectivity' → logprob: -1.1592559814453125
    3. ' edges' → logprob: -2.2842559814453125
    4. 'connect' → logprob: -3.2842559814453125
    5. '_edges' → logprob: -3.7842559814453125
    6. 'edges' → logprob: -4.0342559814453125
    7. '_' → logprob: -4.9092559814453125
    8. '#' → logprob: -5.0342559814453125
    9. '_connect' → logprob: -5.0342559814453125
    10. ''s' → logprob: -5.5342559814453125

Token 1951: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.060552142560482025
    2. '
' → logprob: -3.0605521202087402
    3. ' edges' → logprob: -5.68555212020874
    4. '        
' → logprob: -5.93555212020874
    5. 'edges' → logprob: -6.06055212020874
    6. '#' → logprob: -6.43555212020874
    7. 'all' → logprob: -7.18555212020874
    8. '```' → logprob: -8.935552597045898
    9. ',' → logprob: -9.185552597045898
    10. 'import' → logprob: -9.435552597045898

Token 1952: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11273977160453796
    2. '
' → logprob: -2.6127398014068604
    3. 'edges' → logprob: -3.9877398014068604
    4. 'all' → logprob: -5.112739562988281
    5. ' edges' → logprob: -5.737739562988281
    6. '        
' → logprob: -6.737739562988281
    7. '```' → logprob: -6.737739562988281
    8. 'rest' → logprob: -7.487739562988281
    9. 'available' → logprob: -7.987739562988281
    10. 'allowed' → logprob: -8.112739562988281

Token 1953: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30712878704071045
    2. 'all' → logprob: -1.6821287870407104
    3. 'edges' → logprob: -3.30712890625
    4. '
' → logprob: -4.30712890625
    5. 'available' → logprob: -5.05712890625
    6. '#' (adapté à ' #') → logprob: -5.18212890625
    7. 'possible' → logprob: -5.18212890625
    8. 'allowed' → logprob: -5.55712890625
    9. 'candidate' → logprob: -6.18212890625
    10. 'original' → logprob: -6.93212890625

Token 1954: ' We' (ID: 1416)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.4448271095752716
    2. '       ' → logprob: -1.9448270797729492
    3. 'available' → logprob: -2.944827079772949
    4. 'edges' → logprob: -2.944827079772949
    5. 'possible' → logprob: -3.069827079772949
    6. 'candidate' → logprob: -3.944827079772949
    7. 'allowed' → logprob: -4.194827079772949
    8. 'c' → logprob: -5.194827079772949
    9. 'valid' → logprob: -5.319827079772949
    10. '#' → logprob: -5.444827079772949

Token 1955: ' aim' (ID: 11773)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05527986213564873
    2. ' all' → logprob: -4.180279731750488
    3. ' edges' → logprob: -4.680279731750488
    4. ' original' → logprob: -4.930279731750488
    5. 'all' → logprob: -5.555279731750488
    6. '   ' → logprob: -5.680279731750488
    7. ' #' → logprob: -6.055279731750488
    8. ' continue' → logprob: -6.180279731750488
    9. 'edges' → logprob: -6.555279731750488
    10. ' will' → logprob: -6.680279731750488

Token 1956: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.672429621219635
    2. ' to' → logprob: -0.797429621219635
    3. '       ' → logprob: -3.2974295616149902
    4. '      ' → logprob: -7.92242956161499
    5. '        ' → logprob: -8.047430038452148
    6. '    ' → logprob: -8.047430038452148
    7. 'for' → logprob: -8.047430038452148
    8. ' at' → logprob: -9.047430038452148
    9. '   ' → logprob: -9.172430038452148
    10. ' for' → logprob: -9.172430038452148

Token 1957: ' minimize' (ID: 41776)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.7859381437301636
    2. 'edges' → logprob: -0.9109381437301636
    3. 'all' → logprob: -2.535938262939453
    4. 'original' → logprob: -4.160938262939453
    5. '#' → logprob: -4.285938262939453
    6. 'select' → logprob: -4.535938262939453
    7. 'build' → logprob: -5.035938262939453
    8. '       ' → logprob: -5.910938262939453
    9. ' edges' → logprob: -6.035938262939453
    10. '   ' → logprob: -6.160938262939453

Token 1958: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.6224061250686646
    2. ' total' → logprob: -0.9974061250686646
    3. '       ' → logprob: -3.497406005859375
    4. ' the' → logprob: -3.622406005859375
    5. 'the' → logprob: -3.872406005859375
    6. '_total' → logprob: -4.872406005859375
    7. 'self' → logprob: -6.122406005859375
    8. 'cost' → logprob: -6.247406005859375
    9. 'import' → logprob: -7.122406005859375
    10. '#' → logprob: -7.372406005859375

Token 1959: ' cost' (ID: 3097)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.5981276035308838
    2. '_length' → logprob: -0.8481276035308838
    3. 'cost' → logprob: -4.098127365112305
    4. '_cost' → logprob: -5.598127365112305
    5. ' length' → logprob: -6.598127365112305
    6. 'distance' → logprob: -9.223127365112305
    7. '_distance' → logprob: -9.598127365112305
    8. '_' → logprob: -10.348127365112305
    9. ' cost' → logprob: -10.348127365112305
    10. '```' → logprob: -11.348127365112305

Token 1960: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002504674717783928
    2. '
' → logprob: -7.002504825592041
    3. 'all' → logprob: -7.127504825592041
    4. 'edges' → logprob: -7.377504825592041
    5. '#' → logprob: -9.877504348754883
    6. '        
' → logprob: -10.002504348754883
    7. 'import' → logprob: -10.752504348754883
    8. ' edges' → logprob: -11.502504348754883
    9. '```' → logprob: -11.627504348754883
    10. 'original' → logprob: -11.877504348754883

Token 1961: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.042434241622686386
    2. 'added' → logprob: -3.4174342155456543
    3. 'all' → logprob: -5.542434215545654
    4. 'the' → logprob: -6.667434215545654
    5. 'additional' → logprob: -6.917434215545654
    6. 'adding' → logprob: -7.042434215545654
    7. 'selected' → logprob: -7.417434215545654
    8. 'constructed' → logprob: -8.167434692382812
    9. 'construction' → logprob: -8.417434692382812
    10. 'length' → logprob: -8.917434692382812

Token 1962: ' selected' (ID: 6386)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010888997465372086
    2. '
' → logprob: -5.010889053344727
    3. 'all' → logprob: -5.885889053344727
    4. 'edges' → logprob: -7.260889053344727
    5. '        
' → logprob: -8.385889053344727
    6. '#' → logprob: -9.135889053344727
    7. '```' → logprob: -9.260889053344727
    8. ' edges' → logprob: -9.385889053344727
    9. 'import' → logprob: -10.385889053344727
    10. ' all' → logprob: -10.510889053344727

Token 1963: ' including' (ID: 3463)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08181748539209366
    2. 'all' → logprob: -2.956817388534546
    3. 'edges' → logprob: -4.581817626953125
    4. '#' → logprob: -4.831817626953125
    5. '        
' → logprob: -6.081817626953125
    6. ' edges' → logprob: -6.456817626953125
    7. '
' → logprob: -6.706817626953125
    8. ' all' → logprob: -7.456817626953125
    9. '```' → logprob: -7.831817626953125
    10. 'import' → logprob: -8.331817626953125

Token 1964: ' hull' (ID: 74912)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.07765836268663406
    2. 'the' → logprob: -3.4526584148406982
    3. ' the' → logprob: -3.7026584148406982
    4. ' hull' → logprob: -5.077658176422119
    5. '"' → logprob: -5.452658176422119
    6. '```' → logprob: -6.202658176422119
    7. '"h' → logprob: -7.077658176422119
    8. ' h' → logprob: -7.327658176422119
    9. '
' → logprob: -7.702658176422119
    10. 'boundary' → logprob: -7.702658176422119

Token 1965: ' edges' (ID: 22569)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.2267528623342514
    2. '       ' → logprob: -1.8517528772354126
    3. '_' → logprob: -4.351752758026123
    4. ' edges' → logprob: -4.851752758026123
    5. '   ' → logprob: -5.101752758026123
    6. '
' → logprob: -5.601752758026123
    7. 'edges' → logprob: -5.601752758026123
    8. ',' → logprob: -6.351752758026123
    9. '        
' → logprob: -6.601752758026123
    10. ')' → logprob: -6.726752758026123

Token 1966: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020910516381263733
    2. 'all' → logprob: -4.520910739898682
    3. '
' → logprob: -4.895910739898682
    4. 'edges' → logprob: -6.520910739898682
    5. '#' → logprob: -8.020910263061523
    6. '        
' → logprob: -8.645910263061523
    7. '```' → logprob: -9.145910263061523
    8. ' edges' → logprob: -9.395910263061523
    9. 'import' → logprob: -9.520910263061523
    10. ' all' → logprob: -10.645910263061523

Token 1967: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09058884531259537
    2. 'all' → logprob: -2.9655888080596924
    3. 'edges' → logprob: -3.4655888080596924
    4. '#' → logprob: -6.5905890464782715
    5. '
' → logprob: -6.8405890464782715
    6. '```' → logprob: -8.090588569641113
    7. ' edges' → logprob: -8.340588569641113
    8. 'import' → logprob: -8.590588569641113
    9. '        
' → logprob: -8.715588569641113
    10. 'available' → logprob: -9.090588569641113

Token 1968: ' #' (ID: 1069)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.31941917538642883
    2. '       ' → logprob: -2.0694191455841064
    3. 'edges' → logprob: -2.3194191455841064
    4. 'available' → logprob: -3.8194191455841064
    5. 'possible' → logprob: -4.0694193840026855
    6. 'allowed' → logprob: -5.5694193840026855
    7. 'candidate' → logprob: -6.4444193840026855
    8. 'c' → logprob: -6.5694193840026855
    9. '#' (adapté à ' #') → logprob: -6.8194193840026855
    10. 'remaining' → logprob: -7.9444193840026855

Token 1969: ' We'll' (ID: 46830)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.09257043153047562
    2. 'edges' → logprob: -3.5925705432891846
    3. 'available' → logprob: -3.7175705432891846
    4. 'possible' → logprob: -4.0925703048706055
    5. '       ' → logprob: -4.4675703048706055
    6. 'candidate' → logprob: -5.7175703048706055
    7. 'c' → logprob: -6.7175703048706055
    8. '#' → logprob: -6.9675703048706055
    9. 'allowed' → logprob: -7.0925703048706055
    10. 'remaining' → logprob: -7.0925703048706055

Token 1970: ' generate' (ID: 10419)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.13915389776229858
    2. '       ' → logprob: -2.3891539573669434
    3. 'edges' → logprob: -4.264153957366943
    4. '#' → logprob: -5.139153957366943
    5. 'available' → logprob: -5.639153957366943
    6. 'add' → logprob: -5.639153957366943
    7. 'possible' → logprob: -6.014153957366943
    8. 'candidate' → logprob: -6.139153957366943
    9. ' all' → logprob: -6.389153957366943
    10. 'import' → logprob: -6.514153957366943

Token 1971: ' candidate' (ID: 17098)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.01767244003713131
    2. ' all' → logprob: -5.142672538757324
    3. 'edges' → logprob: -5.892672538757324
    4. 'possible' → logprob: -6.142672538757324
    5. 'candidate' → logprob: -6.142672538757324
    6. 'additional' → logprob: -6.392672538757324
    7. 'c' → logprob: -6.892672538757324
    8. '       ' → logprob: -7.142672538757324
    9. 'extra' → logprob: -7.517672538757324
    10. ' edges' → logprob: -8.767672538757324

Token 1972: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.8445301055908203
    2. '_edges' → logprob: -0.8445301055908203
    3. 'edges' → logprob: -1.9695301055908203
    4. 's' → logprob: -7.21953010559082
    5. '_edge' → logprob: -9.96953010559082
    6. '_' → logprob: -10.46953010559082
    7. ' =' → logprob: -10.84453010559082
    8. '```' → logprob: -11.21953010559082
    9. '_list' → logprob: -11.34453010559082
    10. ' next' → logprob: -11.46953010559082

Token 1973: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.045934177935123444
    2. '=' → logprob: -3.1709342002868652
    3. '       ' → logprob: -6.295934200286865
    4. ':' → logprob: -7.045934200286865
    5. '        ' → logprob: -10.420933723449707
    6. 'self' → logprob: -10.545933723449707
    7. 'all' → logprob: -10.670933723449707
    8. '=self' → logprob: -11.045933723449707
    9. '_all' → logprob: -11.295933723449707
    10. 'from' → logprob: -11.545933723449707

Token 1974: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012629959732294083
    2. 'edges' → logprob: -5.012629985809326
    3. 'all' → logprob: -5.512629985809326
    4. ' edges' → logprob: -6.887629985809326
    5. 'candidate' → logprob: -8.137629508972168
    6. '```' → logprob: -8.512629508972168
    7. '        
' → logprob: -9.137629508972168
    8. ' all' → logprob: -9.512629508972168
    9. '
' → logprob: -9.637629508972168
    10. 'c' → logprob: -10.637629508972168

Token 1975: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7045336365699768
    2. 'edges' → logprob: -1.704533576965332
    3. 'all' → logprob: -1.829533576965332
    4. 'c' → logprob: -2.079533576965332
    5. 'candidate' → logprob: -3.329533576965332
    6. 'possible' → logprob: -7.204533576965332
    7. ' edges' → logprob: -7.704533576965332
    8. 'available' → logprob: -8.704533576965332
    9. 'remaining' → logprob: -8.829533576965332
    10. 'allowed' → logprob: -8.829533576965332

Token 1976: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.736818253993988
    2. 'all' → logprob: -1.4868183135986328
    3. 'edges' → logprob: -2.736818313598633
    4. 'candidate' → logprob: -2.736818313598633
    5. ' edges' → logprob: -2.861818313598633
    6. 'c' → logprob: -3.111818313598633
    7. ' all' → logprob: -3.736818313598633
    8. ' candidates' → logprob: -3.736818313598633
    9. ' candidate' → logprob: -4.486818313598633
    10. 'possible' → logprob: -6.111818313598633

Token 1977: ' mandatory' (ID: 40021)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -1.201311707496643
    2. ' all' → logprob: -1.576311707496643
    3. ' original' → logprob: -2.2013115882873535
    4. ' edges' → logprob: -2.2013115882873535
    5. 'candidate' → logprob: -2.7013115882873535
    6. ' candidates' → logprob: -2.8263115882873535
    7. ' candidate' → logprob: -2.9513115882873535
    8. 'edges' → logprob: -3.3263115882873535
    9. 'original' → logprob: -3.5763115882873535
    10. 'c' → logprob: -4.3263115882873535

Token 1978: ' hull' (ID: 74912)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.0802752822637558
    2. ' =' → logprob: -2.830275297164917
    3. 'edges' → logprob: -4.205275058746338
    4. '=' → logprob: -6.830275058746338
    5. '_candidates' → logprob: -7.080275058746338
    6. '_' → logprob: -8.080275535583496
    7. ':' → logprob: -8.205275535583496
    8. ' edges' → logprob: -8.455275535583496
    9. '_set' → logprob: -9.455275535583496
    10. '
' → logprob: -9.705275535583496

Token 1979: ' edges' (ID: 22569)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.004299914930015802
    2. 'edges' → logprob: -5.504300117492676
    3. '_' → logprob: -9.504300117492676
    4. ' edges' → logprob: -9.879300117492676
    5. '```' → logprob: -10.379300117492676
    6. ' =' → logprob: -11.004300117492676
    7. '       ' → logprob: -11.754300117492676
    8. '
' → logprob: -11.879300117492676
    9. '_edge' → logprob: -12.004300117492676
    10. '   ' → logprob: -12.379300117492676

Token 1980: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7433232665061951
    2. 'candidate' → logprob: -1.1183233261108398
    3. 'edges' → logprob: -2.36832332611084
    4. 'all' → logprob: -2.99332332611084
    5. 'c' → logprob: -3.61832332611084
    6. '
' → logprob: -4.49332332611084
    7. '#' → logprob: -5.74332332611084
    8. ' edges' → logprob: -6.24332332611084
    9. 'additional' → logprob: -6.61832332611084
    10. '```' → logprob: -6.74332332611084

Token 1981: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008619419299066067
    2. '#' → logprob: -5.13361930847168
    3. 'edges' → logprob: -6.63361930847168
    4. '
' → logprob: -8.00861930847168
    5. ' edges' → logprob: -8.25861930847168
    6. ',' → logprob: -8.25861930847168
    7. 'all' → logprob: -8.50861930847168
    8. '```' → logprob: -10.25861930847168
    9. 'import' → logprob: -10.50861930847168
    10. '        
' → logprob: -10.50861930847168

Token 1982: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07187522947788239
    2. '#' (adapté à ' #') → logprob: -3.5718753337860107
    3. 'all' → logprob: -4.321875095367432
    4. 'edges' → logprob: -4.696875095367432
    5. 'candidate' → logprob: -4.821875095367432
    6. '
' → logprob: -5.071875095367432
    7. ',' → logprob: -6.446875095367432
    8. ' edges' → logprob: -7.196875095367432
    9. ' all' → logprob: -8.07187557220459
    10. ',
' → logprob: -8.44687557220459

Token 1983: ' -' (ID: 533)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.9944201707839966
    2. '       ' → logprob: -1.3694201707839966
    3. 'c' → logprob: -2.119420051574707
    4. 'candidate' → logprob: -2.369420051574707
    5. '#' → logprob: -2.869420051574707
    6. 'optional' → logprob: -3.619420051574707
    7. 'edges' → logprob: -3.994420051574707
    8. 'non' → logprob: -4.494420051574707
    9. 'other' → logprob: -4.869420051574707
    10. 'original' → logprob: -4.994420051574707

Token 1984: ' original' (ID: 4756)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.7492641806602478
    2. 'original' → logprob: -1.9992642402648926
    3. 'candidate' → logprob: -2.3742642402648926
    4. 'other' → logprob: -2.4992642402648926
    5. 'non' → logprob: -3.1242642402648926
    6. 'extra' → logprob: -3.4992642402648926
    7. 'additional' → logprob: -3.7492642402648926
    8. ' all' → logprob: -3.8742642402648926
    9. 'optional' → logprob: -4.124264240264893
    10. ' original' → logprob: -4.624264240264893

Token 1985: ' edges' (ID: 22569)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.002027019625529647
    2. 'edges' → logprob: -6.3770270347595215
    3. '_' → logprob: -9.377026557922363
    4. '_edge' → logprob: -9.627026557922363
    5. ' edges' → logprob: -9.877026557922363
    6. '
' → logprob: -10.377026557922363
    7. '_original' → logprob: -10.752026557922363
    8. 's' → logprob: -11.502026557922363
    9. '_candidates' → logprob: -11.502026557922363
    10. '_e' → logprob: -12.127026557922363

Token 1986: ' inside' (ID: 6772)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15200361609458923
    2. ' =' → logprob: -2.527003526687622
    3. '
' → logprob: -3.652003526687622
    4. 'edges' → logprob: -4.902003765106201
    5. 'all' → logprob: -5.777003765106201
    6. '        
' → logprob: -6.027003765106201
    7. '=' → logprob: -6.277003765106201
    8. '_candidates' → logprob: -6.277003765106201
    9. '_edges' → logprob: -6.402003765106201
    10. 'candidate' → logprob: -6.402003765106201

Token 1987: ' polygon' (ID: 65081)
  Prédit: '_polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_polygon' → logprob: -0.40621355175971985
    2. '_h' → logprob: -1.6562135219573975
    3. 'h' → logprob: -2.6562135219573975
    4. 'polygon' → logprob: -3.5312135219573975
    5. ' hull' → logprob: -4.156213760375977
    6. ' polygon' → logprob: -4.656213760375977
    7. 'the' → logprob: -5.031213760375977
    8. 'self' → logprob: -5.656213760375977
    9. '
' → logprob: -5.906213760375977
    10. ' the' → logprob: -6.531213760375977

Token 1988: ' satisfying' (ID: 52718)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09928127378225327
    2. 'all' → logprob: -2.5992813110351562
    3. 'edges' → logprob: -5.099281311035156
    4. 'candidate' → logprob: -5.099281311035156
    5. 'c' → logprob: -5.224281311035156
    6. ' edges' → logprob: -7.724281311035156
    7. '#' → logprob: -7.974281311035156
    8. '
' → logprob: -8.099281311035156
    9. ' all' → logprob: -8.349281311035156
    10. 'rest' → logprob: -8.599281311035156

Token 1989: ' condition' (ID: 7060)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.20219244062900543
    2. 'Boundary' → logprob: -2.202192544937134
    3. 'the' → logprob: -2.827192544937134
    4. 'boundary' → logprob: -5.827192306518555
    5. '
' → logprob: -6.202192306518555
    6. 'self' → logprob: -6.327192306518555
    7. '   ' → logprob: -6.702192306518555
    8. ' Boundary' → logprob: -7.202192306518555
    9. 'lambda' → logprob: -7.327192306518555
    10. '       ' → logprob: -7.327192306518555

Token 1990: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14453160762786865
    2. 'all' → logprob: -2.269531726837158
    3. 'edges' → logprob: -4.019531726837158
    4. 'candidate' → logprob: -5.269531726837158
    5. '
' → logprob: -5.894531726837158
    6. '        
' → logprob: -6.519531726837158
    7. ' edges' → logprob: -7.019531726837158
    8. '#' → logprob: -7.394531726837158
    9. ' all' → logprob: -7.769531726837158
    10. '```' → logprob: -8.01953125

Token 1991: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6768692135810852
    2. 'all' → logprob: -1.0518691539764404
    3. 'candidate' → logprob: -2.6768691539764404
    4. 'edges' → logprob: -3.4268691539764404
    5. 'c' → logprob: -3.5518691539764404
    6. '
' → logprob: -5.6768693923950195
    7. ' edges' → logprob: -6.9268693923950195
    8. '#' → logprob: -7.0518693923950195
    9. ' all' → logprob: -7.0518693923950195
    10. 'remaining' → logprob: -7.0518693923950195

Token 1992: ' #' (ID: 1069)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.8218069672584534
    2. 'all' → logprob: -1.0718069076538086
    3. 'c' → logprob: -1.9468069076538086
    4. 'edges' → logprob: -3.3218069076538086
    5. '       ' → logprob: -3.5718069076538086
    6. 'inside' → logprob: -5.696806907653809
    7. 'remaining' → logprob: -6.446806907653809
    8. 'possible' → logprob: -6.696806907653809
    9. '#' (adapté à ' #') → logprob: -6.821806907653809
    10. 'available' → logprob: -6.946806907653809

Token 1993: ' Step' (ID: 22291)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.8376438617706299
    2. 'candidate' → logprob: -1.0876438617706299
    3. 'c' → logprob: -1.9626438617706299
    4. 'edges' → logprob: -2.96264386177063
    5. '       ' → logprob: -3.71264386177063
    6. 'available' → logprob: -5.587643623352051
    7. 'possible' → logprob: -5.962643623352051
    8. 'inside' → logprob: -5.962643623352051
    9. 'allowed' → logprob: -6.712643623352051
    10. 'remaining' → logprob: -6.962643623352051

Token 1994: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21320369839668274
    2. '1' → logprob: -2.2132036685943604
    3. 's' → logprob: -3.7132036685943604
    4. '#' → logprob: -4.0882039070129395
    5. '   ' → logprob: -4.4632039070129395
    6. '_edges' → logprob: -4.8382039070129395
    7. '           ' → logprob: -5.4632039070129395
    8. 'edges' → logprob: -6.0882039070129395
    9. '=' → logprob: -6.0882039070129395
    10. '        ' → logprob: -6.3382039070129395

Token 1995: '5' (ID: 20)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6828734874725342
    2. '4' → logprob: -1.1828734874725342
    3. '       ' → logprob: -2.182873487472534
    4. '   ' → logprob: -3.932873487472534
    5. 'edges' → logprob: -4.057873725891113
    6. 'all' → logprob: -4.682873725891113
    7. '=' → logprob: -4.932873725891113
    8. '#' → logprob: -5.182873725891113
    9. 'step' → logprob: -5.432873725891113
    10. '
' → logprob: -6.182873725891113

Token 1996: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0794861689209938
    2. ':' → logprob: -2.829486131668091
    3. 'all' → logprob: -5.32948637008667
    4. 'edges' → logprob: -5.57948637008667
    5. '
' → logprob: -5.82948637008667
    6. '#' → logprob: -5.95448637008667
    7. ' edges' → logprob: -7.07948637008667
    8. 'candidate' → logprob: -7.20448637008667
    9. ' all' → logprob: -7.82948637008667
    10. '_edges' → logprob: -8.454485893249512

Token 1997: ' All' (ID: 2545)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.4099291265010834
    2. 'c' → logprob: -1.7849291563034058
    3. 'candidate' → logprob: -2.159929037094116
    4. 'edges' → logprob: -3.409929037094116
    5. 'possible' → logprob: -5.159929275512695
    6. '#' → logprob: -5.284929275512695
    7. '       ' → logprob: -5.909929275512695
    8. 'available' → logprob: -6.034929275512695
    9. 'remaining' → logprob: -6.659929275512695
    10. 'inside' → logprob: -6.784929275512695

Token 1998: ' points' (ID: 5571)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.14972764253616333
    2. '_original' → logprob: -3.0247275829315186
    3. 'edges' → logprob: -3.0247275829315186
    4. '_candidates' → logprob: -4.274727821350098
    5. 'original' → logprob: -4.649727821350098
    6. '_points' → logprob: -4.774727821350098
    7. '_remaining' → logprob: -5.899727821350098
    8. 'candidate' → logprob: -6.149727821350098
    9. '_candidate' → logprob: -6.899727821350098
    10. 'points' → logprob: -6.899727821350098

Token 1999: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.45386508107185364
    2. '       ' → logprob: -2.0788650512695312
    3. 'outside' → logprob: -3.0788650512695312
    4. 'not' → logprob: -3.4538650512695312
    5. '_out' → logprob: -3.4538650512695312
    6. '=' → logprob: -4.078865051269531
    7. '
' → logprob: -4.453865051269531
    8. '_remaining' → logprob: -4.703865051269531
    9. '_not' → logprob: -4.703865051269531
    10. '_set' → logprob: -4.828865051269531

Token 2000: ' inside' (ID: 6772)
  Prédit: 'connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'connected' → logprob: -0.0334843210875988
    2. ' connected' → logprob: -4.40848445892334
    3. 'included' → logprob: -4.78348445892334
    4. 'covered' → logprob: -5.03348445892334
    5. '       ' → logprob: -6.40848445892334
    6. 'already' → logprob: -6.78348445892334
    7. 'in' → logprob: -7.15848445892334
    8. '   ' → logprob: -7.15848445892334
    9. 'added' → logprob: -7.53348445892334
    10. 'union' → logprob: -9.03348445892334

Token 2001: ' or' (ID: 503)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.7851142287254333
    2. ' the' → logprob: -1.6601142883300781
    3. 'the' → logprob: -1.6601142883300781
    4. ' polygon' → logprob: -2.535114288330078
    5. ' or' → logprob: -3.660114288330078
    6. '#' → logprob: -4.285114288330078
    7. '       ' → logprob: -4.910114288330078
    8. 'self' → logprob: -4.910114288330078
    9. '_polygon' → logprob: -4.910114288330078
    10. 'h' → logprob: -5.160114288330078

Token 2002: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.05096195638179779
    2. ' on' → logprob: -3.050961971282959
    3. 'or' → logprob: -7.800961971282959
    4. '       ' → logprob: -7.925961971282959
    5. '   ' → logprob: -8.0509614944458
    6. '
' → logprob: -8.0509614944458
    7. 'outside' → logprob: -8.0509614944458
    8. '=' → logprob: -9.1759614944458
    9. '```' → logprob: -9.3009614944458
    10. ' or' → logprob: -9.6759614944458

Token 2003: ' hull' (ID: 74912)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.4981306791305542
    2. 'h' → logprob: -1.2481306791305542
    3. ' the' → logprob: -2.6231307983398438
    4. 'polygon' → logprob: -3.6231307983398438
    5. ' polygon' → logprob: -5.873130798339844
    6. 'conv' → logprob: -6.748130798339844
    7. ' hull' → logprob: -7.248130798339844
    8. 'their' → logprob: -8.123130798339844
    9. ' convex' → logprob: -8.248130798339844
    10. 'boundary' → logprob: -8.248130798339844

Token 2004: ' polygon' (ID: 65081)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2857081890106201
    2. '
' → logprob: -1.7857081890106201
    3. '#' → logprob: -4.285708427429199
    4. 'edges' → logprob: -4.285708427429199
    5. '_edges' → logprob: -4.410708427429199
    6. ' edges' → logprob: -5.035708427429199
    7. ',' → logprob: -5.160708427429199
    8. '

' → logprob: -5.285708427429199
    9. '        
' → logprob: -5.785708427429199
    10. '_points' → logprob: -6.035708427429199

Token 2005: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5409380197525024
    2. 'edges' → logprob: -1.9159380197525024
    3. 'all' → logprob: -2.165937900543213
    4. 'candidate' → logprob: -2.790937900543213
    5. '#' → logprob: -2.915937900543213
    6. '
' → logprob: -3.915937900543213
    7. ' edges' → logprob: -5.665937900543213
    8. ',' → logprob: -5.790937900543213
    9. 'points' → logprob: -6.290937900543213
    10. 'remaining' → logprob: -6.415937900543213

Token 2006: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21013882756233215
    2. 'all' → logprob: -2.0851387977600098
    3. 'edges' → logprob: -3.3351387977600098
    4. 'candidate' → logprob: -3.8351387977600098
    5. '#' → logprob: -5.46013879776001
    6. '
' → logprob: -6.71013879776001
    7. 'remaining' → logprob: -7.21013879776001
    8. 'c' → logprob: -8.585139274597168
    9. 'rest' → logprob: -8.585139274597168
    10. '```' → logprob: -8.710139274597168

Token 2007: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4941621720790863
    2. 'all' → logprob: -1.2441622018814087
    3. 'edges' → logprob: -2.619162082672119
    4. '#' (adapté à ' #') → logprob: -3.869162082672119
    5. 'candidate' → logprob: -5.369162082672119
    6. '
' → logprob: -6.744162082672119
    7. 'c' → logprob: -7.744162082672119
    8. 'remaining' → logprob: -7.994162082672119
    9. 'original' → logprob: -8.619162559509277
    10. '```' → logprob: -8.869162559509277

Token 2008: ' The' (ID: 623)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5586596727371216
    2. 'all' → logprob: -1.4336596727371216
    3. 'edges' → logprob: -2.058659553527832
    4. '#' → logprob: -3.183659553527832
    5. 'candidate' → logprob: -4.183659553527832
    6. 'c' → logprob: -6.683659553527832
    7. '
' → logprob: -7.058659553527832
    8. 'original' → logprob: -7.183659553527832
    9. 'remaining' → logprob: -7.683659553527832
    10. 'inside' → logprob: -8.058659553527832

Token 2009: ' polygon' (ID: 65081)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.188996434211731
    2. 'candidate' → logprob: -1.188996434211731
    3. 'edges' → logprob: -2.0639963150024414
    4. '#' → logprob: -2.6889963150024414
    5. 'all' → logprob: -2.9389963150024414
    6. 'inside' → logprob: -3.1889963150024414
    7. 'remaining' → logprob: -3.3139963150024414
    8. '       ' → logprob: -4.188996315002441
    9. 'outside' → logprob: -4.688996315002441
    10. 'rest' → logprob: -5.063996315002441

Token 2010: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6621124744415283
    2. '       ' → logprob: -2.7871124744415283
    3. '#' → logprob: -2.9121124744415283
    4. 'points' → logprob: -3.0371124744415283
    5. 'is' → logprob: -3.1621124744415283
    6. '   ' → logprob: -3.2871124744415283
    7. '_points' → logprob: -3.2871124744415283
    8. '
' → logprob: -3.6621124744415283
    9. ' can' → logprob: -3.6621124744415283
    10. ')' → logprob: -4.162112236022949

Token 2011: ' convex' (ID: 142423)
  Prédit: 'conv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conv' → logprob: -0.7285394072532654
    2. ' convex' → logprob: -0.9785394072532654
    3. 'h' → logprob: -3.35353946685791
    4. 'self' → logprob: -3.72853946685791
    5. 'the' → logprob: -3.72853946685791
    6. 'a' → logprob: -4.47853946685791
    7. 'points' → logprob: -4.85353946685791
    8. ' self' → logprob: -5.47853946685791
    9. 'already' → logprob: -5.47853946685791
    10. 'strict' → logprob: -5.60353946685791

Token 2012: ' hull' (ID: 74912)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3061656057834625
    2. '
' → logprob: -1.4311655759811401
    3. '#' → logprob: -4.18116569519043
    4. ',' → logprob: -5.93116569519043
    5. 'edges' → logprob: -6.43116569519043
    6. '        
' → logprob: -6.55616569519043
    7. ' edges' → logprob: -7.18116569519043
    8. '.
' → logprob: -7.68116569519043
    9. '.' → logprob: -7.80616569519043
    10. '
' → logprob: -7.80616569519043

Token 2013: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15234434604644775
    2. '
' → logprob: -2.152344226837158
    3. 'edges' → logprob: -5.152344226837158
    4. '#' → logprob: -5.527344226837158
    5. ' edges' → logprob: -5.527344226837158
    6. ',' → logprob: -5.527344226837158
    7. 'points' → logprob: -6.527344226837158
    8. 'all' → logprob: -7.152344226837158
    9. '
' → logprob: -7.527344226837158
    10. '        
' → logprob: -7.652344226837158

Token 2014: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2288827747106552
    2. 'all' → logprob: -2.1038827896118164
    3. 'edges' → logprob: -3.3538827896118164
    4. '
' → logprob: -3.8538827896118164
    5. '#' → logprob: -4.478882789611816
    6. 'candidate' → logprob: -4.853882789611816
    7. '        
' → logprob: -5.603882789611816
    8. ' edges' → logprob: -6.853882789611816
    9. ' all' → logprob: -8.353882789611816
    10. '```' → logprob: -8.603882789611816

Token 2015: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40924686193466187
    2. 'all' → logprob: -1.5342469215393066
    3. 'edges' → logprob: -2.4092469215393066
    4. '#' (adapté à ' #') → logprob: -3.9092469215393066
    5. 'candidate' → logprob: -5.159246921539307
    6. '
' → logprob: -6.784246921539307
    7. 'remaining' → logprob: -7.534246921539307
    8. 'original' → logprob: -7.659246921539307
    9. '```' → logprob: -7.659246921539307
    10. 'c' → logprob: -8.159246444702148

Token 2016: ' So' (ID: 2632)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.7421311736106873
    2. 'candidate' → logprob: -1.492131233215332
    3. '       ' → logprob: -2.117131233215332
    4. 'edges' → logprob: -2.242131233215332
    5. 'c' → logprob: -3.117131233215332
    6. '#' → logprob: -4.117131233215332
    7. 'possible' → logprob: -5.867131233215332
    8. 'inside' → logprob: -5.992131233215332
    9. 'original' → logprob: -6.492131233215332
    10. 'available' → logprob: -6.617131233215332

Token 2017: ' any' (ID: 1062)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.9642548561096191
    2. 'all' → logprob: -1.4642548561096191
    3. 'c' → logprob: -1.5892548561096191
    4. 'edges' → logprob: -2.589254856109619
    5. '       ' → logprob: -2.964254856109619
    6. '#' → logprob: -3.714254856109619
    7. 'inside' → logprob: -4.464254856109619
    8. 'remaining' → logprob: -5.089254856109619
    9. 'outside' → logprob: -5.964254856109619
    10. 'original' → logprob: -6.214254856109619

Token 2018: ' segment' (ID: 14806)
  Prédit: ' original'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' original' → logprob: -0.4633364677429199
    2. ' edge' → logprob: -1.21333646774292
    3. 'original' → logprob: -3.46333646774292
    4. 'edge' → logprob: -4.46333646774292
    5. ' candidate' → logprob: -5.33833646774292
    6. ' e' → logprob: -5.83833646774292
    7. 'candidate' → logprob: -5.83833646774292
    8. 'e' → logprob: -6.08833646774292
    9. ' point' → logprob: -6.08833646774292
    10. '   ' → logprob: -6.58833646774292

Token 2019: ' between' (ID: 2870)
  Prédit: ' between'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' between' → logprob: -0.8680936694145203
    2. 'between' → logprob: -1.368093729019165
    3. 'ab' → logprob: -2.243093729019165
    4. 'inside' → logprob: -3.243093729019165
    5. ' ab' → logprob: -3.368093729019165
    6. ' that' → logprob: -3.493093729019165
    7. ' connecting' → logprob: -3.993093729019165
    8. 'that' → logprob: -3.993093729019165
    9. 'connecting' → logprob: -4.493093490600586
    10. 'outside' → logprob: -4.868093490600586

Token 2020: ' points' (ID: 5571)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.9501137733459473
    2. ' two' → logprob: -1.8251137733459473
    3. ' points' → logprob: -2.0751137733459473
    4. 'points' → logprob: -2.0751137733459473
    5. 'two' → logprob: -2.2001137733459473
    6. ' any' → logprob: -2.7001137733459473
    7. 'all' → logprob: -4.825113773345947
    8. ' all' → logprob: -5.700113773345947
    9. 'vertices' → logprob: -5.700113773345947
    10. 'h' → logprob: -6.075113773345947

Token 2021: ' inside' (ID: 6772)
  Prédit: 'inside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inside' → logprob: -0.3900929391384125
    2. ' inside' → logprob: -2.2650928497314453
    3. ' is' → logprob: -2.6400928497314453
    4. 'not' → logprob: -3.6400928497314453
    5. 'is' → logprob: -4.015092849731445
    6. ' not' → logprob: -4.265092849731445
    7. 'that' → logprob: -4.390092849731445
    8. ' that' → logprob: -4.515092849731445
    9. ' (' → logprob: -4.765092849731445
    10. 'in' → logprob: -4.765092849731445

Token 2022: ' polygon' (ID: 65081)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -1.0672998428344727
    2. 'the' → logprob: -1.1922998428344727
    3. ' or' → logprob: -1.3172998428344727
    4. ' the' → logprob: -3.4422998428344727
    5. 'and' → logprob: -3.4422998428344727
    6. ',' → logprob: -5.067299842834473
    7. ' and' → logprob: -5.317299842834473
    8. '#' → logprob: -5.692299842834473
    9. 'polygon' → logprob: -6.067299842834473
    10. '       ' → logprob: -6.942299842834473

Token 2023: ' should' (ID: 1757)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6508989334106445
    2. ' is' → logprob: -1.7758989334106445
    3. ' or' → logprob: -2.6508989334106445
    4. 'is' → logprob: -2.9008989334106445
    5. '#' → logprob: -3.6508989334106445
    6. ' that' → logprob: -3.7758989334106445
    7. 'or' → logprob: -3.7758989334106445
    8. 'that' → logprob: -3.9008989334106445
    9. ' can' → logprob: -4.0258989334106445
    10. '
' → logprob: -4.4008989334106445

Token 2024: ' also' (ID: 1217)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.4993123412132263
    2. ' be' → logprob: -1.249312400817871
    3. 'also' → logprob: -2.624312400817871
    4. 'pass' → logprob: -4.499312400817871
    5. ' also' → logprob: -4.874312400817871
    6. 'return' → logprob: -5.374312400817871
    7. 'not' → logprob: -5.499312400817871
    8. ' lie' → logprob: -6.749312400817871
    9. ' not' → logprob: -6.999312400817871
    10. ' pass' → logprob: -7.249312400817871

Token 2025: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.667748212814331
    2. 'be' → logprob: -0.792748212814331
    3. ' lie' → logprob: -3.667748212814331
    4. 'lie' → logprob: -4.79274845123291
    5. '   ' → logprob: -8.54274845123291
    6. '
' → logprob: -9.29274845123291
    7. 'inside' → logprob: -9.66774845123291
    8. 'not' → logprob: -9.66774845123291
    9. '```' → logprob: -10.04274845123291
    10. 'stay' → logprob: -10.29274845123291

Token 2026: ' inside' (ID: 6772)
  Prédit: 'inside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inside' → logprob: -0.09365404397249222
    2. ' inside' → logprob: -2.468654155731201
    3. 'allowed' → logprob: -6.218654155731201
    4. 'accepted' → logprob: -6.843654155731201
    5. '```' → logprob: -7.843654155731201
    6. 'Inside' → logprob: -8.593653678894043
    7. 'checked' → logprob: -8.718653678894043
    8. 'valid' → logprob: -9.343653678894043
    9. 'within' → logprob: -9.468653678894043
    10. 'acceptable' → logprob: -9.593653678894043

Token 2027: ' polygon' (ID: 65081)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.4646807610988617
    2. ' the' → logprob: -2.3396806716918945
    3. 'polygon' → logprob: -2.3396806716918945
    4. '       ' → logprob: -2.9646806716918945
    5. 'the' → logprob: -3.2146806716918945
    6. '
' → logprob: -3.5896806716918945
    7. 'or' → logprob: -3.9646806716918945
    8. ' polygon' → logprob: -4.0896806716918945
    9. '.
' → logprob: -4.7146806716918945
    10. '#' → logprob: -5.3396806716918945

Token 2028: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03907907381653786
    2. '
' → logprob: -4.164079189300537
    3. '#' → logprob: -5.289079189300537
    4. 'edges' → logprob: -5.414079189300537
    5. ' edges' → logprob: -5.414079189300537
    6. '        
' → logprob: -5.789079189300537
    7. '```' → logprob: -6.289079189300537
    8. ',' → logprob: -6.539079189300537
    9. '.' → logprob: -6.914079189300537
    10. '(edges' → logprob: -8.914078712463379

Token 2029: ' but' (ID: 889)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6742010712623596
    2. '       ' → logprob: -0.7992010712623596
    3. ' so' → logprob: -4.299201011657715
    4. ' but' → logprob: -4.674201011657715
    5. 'except' → logprob: -5.174201011657715
    6. '
' → logprob: -5.299201011657715
    7. 'but' → logprob: -6.049201011657715
    8. 'so' → logprob: -6.799201011657715
    9. ' except' → logprob: -7.174201011657715
    10. '        
' → logprob: -7.299201011657715

Token 2030: ' problem' (ID: 4792)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8879633545875549
    2. 'we' → logprob: -1.0129632949829102
    3. 'some' → logprob: -2.26296329498291
    4. '       ' → logprob: -2.76296329498291
    5. 'not' → logprob: -4.26296329498291
    6. ' #' → logprob: -5.01296329498291
    7. 'to' → logprob: -5.13796329498291
    8. ' we' → logprob: -5.26296329498291
    9. '
' → logprob: -5.38796329498291
    10. 'for' → logprob: -5.76296329498291

Token 2031: ' states' (ID: 9407)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.21547725796699524
    2. ' continues' → logprob: -3.090477228164673
    3. ' is' → logprob: -4.215477466583252
    4. '   ' → logprob: -4.215477466583252
    5. 'is' → logprob: -4.340477466583252
    6. '
' → logprob: -4.590477466583252
    7. '...' → logprob: -4.715477466583252
    8. ':' → logprob: -4.715477466583252
    9. ' #' → logprob: -4.840477466583252
    10. '       ' → logprob: -4.840477466583252

Token 2032: ' condition' (ID: 7060)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4699907600879669
    2. 'we' → logprob: -1.8449907302856445
    3. '       ' → logprob: -2.0949907302856445
    4. 'that' → logprob: -3.4699907302856445
    5. 'the' → logprob: -4.0949907302856445
    6. ' we' → logprob: -4.3449907302856445
    7. 'some' → logprob: -5.0949907302856445
    8. ' #' → logprob: -5.3449907302856445
    9. ' that' → logprob: -5.4699907302856445
    10. 'they' → logprob: -5.8449907302856445

Token 2033: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2484985589981079
    2. '
' → logprob: -2.2484984397888184
    3. '#' → logprob: -2.4984984397888184
    4. '        
' → logprob: -4.748498439788818
    5. ':' → logprob: -5.498498439788818
    6. ',' → logprob: -5.623498439788818
    7. ' edges' → logprob: -5.873498439788818
    8. ':
' → logprob: -5.998498439788818
    9. '.' → logprob: -6.498498439788818
    10. '.
' → logprob: -7.123498439788818

Token 2034: '       ' (ID: 309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3559933304786682
    2. '       ' → logprob: -1.2309932708740234
    3. 'edges' → logprob: -5.605993270874023
    4. '```' → logprob: -6.605993270874023
    5. '
' → logprob: -7.855993270874023
    6. ' edges' → logprob: -7.855993270874023
    7. 'continue' → logprob: -8.105993270874023
    8. ' #' → logprob: -8.230993270874023
    9. 'for' → logprob: -8.230993270874023
    10. '        
' → logprob: -8.980993270874023

Token 2035: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.18346528708934784
    2. '       ' → logprob: -1.8084652423858643
    3. 'edges' → logprob: -6.058465480804443
    4. 'all' → logprob: -8.433465003967285
    5. '
' → logprob: -8.433465003967285
    6. '```' → logprob: -8.808465003967285
    7. 'for' → logprob: -8.933465003967285
    8. ' #' → logprob: -9.308465003967285
    9. 'points' → logprob: -9.808465003967285
    10. '        
' → logprob: -9.808465003967285

Token 2036: ' segment' (ID: 14806)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08914732187986374
    2. '       ' → logprob: -3.2141473293304443
    3. 'edges' → logprob: -3.4641473293304443
    4. 'candidate' → logprob: -5.464147090911865
    5. 'all' → logprob: -5.714147090911865
    6. 'c' → logprob: -6.214147090911865
    7. 'for' → logprob: -6.964147090911865
    8. 'points' → logprob: -7.589147090911865
    9. 'selected' → logprob: -7.714147090911865
    10. '
' → logprob: -8.089147567749023

Token 2037: ' between' (ID: 2870)
  Prédit: ' ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ab' → logprob: -1.384164571762085
    2. ' between' → logprob: -1.884164571762085
    3. 's' → logprob: -2.134164571762085
    4. 'between' → logprob: -2.134164571762085
    5. ' must' → logprob: -2.509164571762085
    6. 'ab' → logprob: -2.509164571762085
    7. 'must' → logprob: -2.634164571762085
    8. ' is' → logprob: -3.759164571762085
    9. '_ab' → logprob: -3.884164571762085
    10. 'inside' → logprob: -4.259164810180664

Token 2038: ' any' (ID: 1062)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.5010995864868164
    2. 'any' → logprob: -1.7510995864868164
    3. ' any' → logprob: -2.0010995864868164
    4. 'a' → logprob: -2.0010995864868164
    5. 'points' → logprob: -2.0010995864868164
    6. ' points' → logprob: -2.3760995864868164
    7. ' u' → logprob: -2.8760995864868164
    8. ' a' → logprob: -3.8760995864868164
    9. ' two' → logprob: -4.251099586486816
    10. 'two' → logprob: -5.126099586486816

Token 2039: ' two' (ID: 1920)
  Prédit: ' two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' two' → logprob: -0.1725422441959381
    2. 'two' → logprob: -1.9225422143936157
    3. ' pair' → logprob: -5.422542095184326
    4. '
' → logprob: -5.922542095184326
    5. ' ' → logprob: -6.422542095184326
    6. ' points' → logprob: -6.922542095184326
    7. 'points' → logprob: -7.422542095184326
    8. '   ' → logprob: -7.922542095184326
    9. 'pair' → logprob: -7.922542095184326
    10. 'u' → logprob: -8.797542572021484

Token 2040: ' villages' (ID: 49877)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.3198755979537964
    2. 'points' → logprob: -1.5698755979537964
    3. ' villages' → logprob: -3.069875717163086
    4. 'vill' → logprob: -4.444875717163086
    5. ' vertices' → logprob: -6.819875717163086
    6. 'vertices' → logprob: -6.944875717163086
    7. ' p' → logprob: -7.444875717163086
    8. ' ' → logprob: -7.444875717163086
    9. ' a' → logprob: -7.819875717163086
    10. 'p' → logprob: -8.069875717163086

Token 2041: ' shall' (ID: 8712)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09274808317422867
    2. '#' → logprob: -3.2177481651306152
    3. '
' → logprob: -3.8427481651306152
    4. ' edges' → logprob: -5.092748165130615
    5. 'edges' → logprob: -5.717748165130615
    6. '        
' → logprob: -6.217748165130615
    7. ',' → logprob: -6.342748165130615
    8. ' =' → logprob: -6.467748165130615
    9. ' is' → logprob: -6.842748165130615
    10. ' (' → logprob: -7.217748165130615

Token 2042: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.2482280433177948
    2. ' be' → logprob: -1.6232280731201172
    3. 'not' → logprob: -4.123228073120117
    4. 'be' → logprob: -5.248228073120117
    5. ' pass' → logprob: -7.623228073120117
    6. ' always' → logprob: -8.748228073120117
    7. 'pass' → logprob: -9.123228073120117
    8. ' stay' → logprob: -9.873228073120117
    9. ' lie' → logprob: -9.998228073120117
    10. ' remain' → logprob: -10.123228073120117

Token 2043: ' go' (ID: 810)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.11232645809650421
    2. ' pass' → logprob: -2.3623263835906982
    3. 'go' → logprob: -4.862326622009277
    4. '
' → logprob: -6.487326622009277
    5. '```' → logprob: -7.237326622009277
    6. ' go' → logprob: -7.362326622009277
    7. 'cross' → logprob: -7.987326622009277
    8. '   ' → logprob: -8.112326622009277
    9. ' ' → logprob: -8.487326622009277
    10. 'passes' → logprob: -8.612326622009277

Token 2044: ' outside' (ID: 7539)
  Prédit: ' outside'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' outside' → logprob: -0.22575168311595917
    2. 'outside' → logprob: -1.6007516384124756
    3. ' ' → logprob: -9.350751876831055
    4. '_' → logprob: -9.725751876831055
    5. ' ' → logprob: -10.475751876831055
    6. ' out' → logprob: -10.725751876831055
    7. '```' → logprob: -11.100751876831055
    8. '_out' → logprob: -11.350751876831055
    9. 'out' → logprob: -11.350751876831055
    10. ' outs' → logprob: -11.475751876831055

Token 2045: ' polygon' (ID: 65081)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06128745526075363
    2. '
' → logprob: -3.5612874031066895
    3. '#' → logprob: -4.5612874031066895
    4. 'edges' → logprob: -4.6862874031066895
    5. 'all' → logprob: -5.0612874031066895
    6. '        
' → logprob: -6.5612874031066895
    7. ' edges' → logprob: -6.5612874031066895
    8. 'candidate' → logprob: -7.4362874031066895
    9. '```' → logprob: -7.6862874031066895
    10. '

' → logprob: -8.686287879943848

Token 2046: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21283501386642456
    2. 'edges' → logprob: -2.3378350734710693
    3. 'all' → logprob: -2.9628350734710693
    4. '#' → logprob: -3.8378350734710693
    5. ' edges' → logprob: -5.33783483505249
    6. 'candidate' → logprob: -5.46283483505249
    7. '
' → logprob: -5.58783483505249
    8. '```' → logprob: -5.83783483505249
    9. 'points' → logprob: -6.96283483505249
    10. '``' → logprob: -7.08783483505249

Token 2047: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1924186795949936
    2. '#' → logprob: -2.3174185752868652
    3. 'edges' → logprob: -3.3174185752868652
    4. 'all' → logprob: -3.9424185752868652
    5. '
' → logprob: -4.192418575286865
    6. 'candidate' → logprob: -6.067418575286865
    7. '```' → logprob: -6.817418575286865
    8. '        
' → logprob: -7.192418575286865
    9. ' edges' → logprob: -8.692419052124023
    10. 'existing' → logprob: -8.817419052124023

Token 2048: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6738091111183167
    2. 'all' → logprob: -1.6738090515136719
    3. 'edges' → logprob: -1.7988090515136719
    4. '#' (adapté à ' #') → logprob: -2.548809051513672
    5. 'candidate' → logprob: -3.548809051513672
    6. 'c' → logprob: -4.048809051513672
    7. 'remaining' → logprob: -6.048809051513672
    8. 'original' → logprob: -6.423809051513672
    9. 'possible' → logprob: -6.548809051513672
    10. 'available' → logprob: -6.673809051513672

Token 2049: ' So' (ID: 2632)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.659806489944458
    2. '       ' → logprob: -1.159806489944458
    3. 'edges' → logprob: -2.284806489944458
    4. 'candidate' → logprob: -3.534806489944458
    5. '#' → logprob: -3.784806489944458
    6. 'c' → logprob: -4.784806251525879
    7. 'original' → logprob: -6.284806251525879
    8. 'available' → logprob: -6.659806251525879
    9. 'possible' → logprob: -6.659806251525879
    10. 'remaining' → logprob: -6.909806251525879

Token 2050: ' check' (ID: 2371)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5962721705436707
    2. 'candidate' → logprob: -1.7212722301483154
    3. 'all' → logprob: -1.9712722301483154
    4. 'edges' → logprob: -2.3462722301483154
    5. '#' → logprob: -4.471271991729736
    6. '       ' → logprob: -5.346271991729736
    7. 'possible' → logprob: -5.596271991729736
    8. ' edges' → logprob: -5.846271991729736
    9. 'remaining' → logprob: -6.221271991729736
    10. ' candidates' → logprob: -6.221271991729736

Token 2051: ' for' (ID: 395)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.5554339289665222
    2. 'all' → logprob: -1.930433988571167
    3. 'c' → logprob: -2.305433988571167
    4. '       ' → logprob: -2.430433988571167
    5. ' candidate' → logprob: -3.430433988571167
    6. ' candidates' → logprob: -4.430433750152588
    7. ' all' → logprob: -4.555433750152588
    8. 'edges' → logprob: -4.680433750152588
    9. 'possible' → logprob: -5.305433750152588
    10. '#' → logprob: -5.430433750152588

Token 2052: ' each' (ID: 2454)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.2259883880615234
    2. ' each' → logprob: -1.3509883880615234
    3. 'each' → logprob: -1.4759883880615234
    4. ' edge' → logprob: -2.8509883880615234
    5. ' all' → logprob: -3.4759883880615234
    6. ' e' → logprob: -3.4759883880615234
    7. 'all' → logprob: -3.6009883880615234
    8. 'edge' → logprob: -3.9759883880615234
    9. ' original' → logprob: -4.100988388061523
    10. ' every' → logprob: -4.850988388061523

Token 2053: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.7402826547622681
    2. 'e' → logprob: -1.240282654762268
    3. 'edge' → logprob: -1.990282654762268
    4. ' e' → logprob: -3.3652825355529785
    5. ' original' → logprob: -3.6152825355529785
    6. 'i' → logprob: -4.4902825355529785
    7. 'u' → logprob: -4.6152825355529785
    8. 'original' → logprob: -5.1152825355529785
    9. ' i' → logprob: -6.3652825355529785
    10. ' u' → logprob: -6.4902825355529785

Token 2054: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.48690593242645264
    2. 'in' → logprob: -1.8619059324264526
    3. 'for' → logprob: -2.611906051635742
    4. 'e' → logprob: -3.486906051635742
    5. ' for' → logprob: -3.486906051635742
    6. 'not' → logprob: -3.861906051635742
    7. ' not' → logprob: -4.361906051635742
    8. '       ' → logprob: -4.361906051635742
    9. '
' → logprob: -4.486906051635742
    10. 'self' → logprob: -4.611906051635742

Token 2055: ' original' (ID: 4756)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00045164540642872453
    2. ' self' → logprob: -8.375452041625977
    3. 'original' → logprob: -8.625452041625977
    4. '       ' → logprob: -10.625452041625977
    5. '
' → logprob: -12.375452041625977
    6. '[self' → logprob: -12.875452041625977
    7. 'edges' → logprob: -13.000452041625977
    8. 'sorted' → logprob: -13.000452041625977
    9. '(self' → logprob: -13.625452041625977
    10. 'all' → logprob: -14.125452041625977

Token 2056: ' edges' (ID: 22569)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.012210107408463955
    2. 'edges' → logprob: -4.512209892272949
    3. '_original' → logprob: -8.26220989227295
    4. 'self' → logprob: -8.38720989227295
    5. '   ' → logprob: -8.63720989227295
    6. ' edges' → logprob: -9.13720989227295
    7. 'original' → logprob: -9.13720989227295
    8. '       ' → logprob: -9.26220989227295
    9. '```' → logprob: -9.88720989227295
    10. '
' → logprob: -10.01220989227295

Token 2057: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7518147826194763
    2. 'for' → logprob: -1.376814842224121
    3. ' for' → logprob: -1.626814842224121
    4. ':' → logprob: -3.626814842224121
    5. ':
' → logprob: -4.126814842224121
    6. ',' → logprob: -5.001814842224121
    7. ' that' → logprob: -5.126814842224121
    8. 'outside' → logprob: -5.126814842224121
    9. ' outside' → logprob: -5.751814842224121
    10. 'that' → logprob: -5.876814842224121

Token 2058: ' segment' (ID: 14806)
  Prédit: 'Boundary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Boundary' → logprob: -0.22302348911762238
    2. 'e' → logprob: -1.973023533821106
    3. 'self' → logprob: -3.4730234146118164
    4. 'not' → logprob: -4.348023414611816
    5. 'edge' → logprob: -4.723023414611816
    6. 'Edge' → logprob: -6.348023414611816
    7. ' Boundary' → logprob: -6.723023414611816
    8. 'original' → logprob: -6.723023414611816
    9. '   ' → logprob: -6.848023414611816
    10. ' not' → logprob: -7.473023414611816

Token 2059: ' inside' (ID: 6772)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.6601816415786743
    2. 'lies' → logprob: -1.9101816415786743
    3. 'inside' → logprob: -2.2851815223693848
    4. 'between' → logprob: -2.6601815223693848
    5. ' lies' → logprob: -3.1601815223693848
    6. '   ' → logprob: -3.4101815223693848
    7. ' is' → logprob: -3.9101815223693848
    8. 'self' → logprob: -4.160181522369385
    9. ' between' → logprob: -4.785181522369385
    10. '(self' → logprob: -5.160181522369385

Token 2060: ' polygon' (ID: 65081)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16179117560386658
    2. 'h' → logprob: -2.2867910861968994
    3. '(self' → logprob: -3.9117910861968994
    4. 'e' → logprob: -4.6617913246154785
    5. 'polygon' → logprob: -4.7867913246154785
    6. 'the' → logprob: -5.1617913246154785
    7. '       ' → logprob: -6.6617913246154785
    8. '(h' → logprob: -7.4117913246154785
    9. ' self' → logprob: -7.5367913246154785
    10. '(e' → logprob: -8.16179084777832

Token 2061: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20048506557941437
    2. ':' → logprob: -2.7004849910736084
    3. 'for' → logprob: -3.0754849910736084
    4. ':
' → logprob: -3.8254849910736084
    5. ' for' → logprob: -4.3254852294921875
    6. '
' → logprob: -4.7004852294921875
    7. ',' → logprob: -4.9504852294921875
    8. 'edges' → logprob: -6.0754852294921875
    9. '.' → logprob: -6.7004852294921875
    10. '.
' → logprob: -6.7004852294921875

Token 2062: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08177189528942108
    2. 'edges' → logprob: -3.8317718505859375
    3. 'for' → logprob: -4.2067718505859375
    4. 'filtered' → logprob: -4.4567718505859375
    5. 'candidate' → logprob: -5.2067718505859375
    6. 'valid' → logprob: -5.4567718505859375
    7. 'rest' → logprob: -5.4567718505859375
    8. 'selected' → logprob: -5.5817718505859375
    9. 'remaining' → logprob: -5.8317718505859375
    10. ' edges' → logprob: -6.2067718505859375

Token 2063: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4845826327800751
    2. 'candidate' → logprob: -1.4845826625823975
    3. 'c' → logprob: -2.6095826625823975
    4. 'edges' → logprob: -3.4845826625823975
    5. 'valid' → logprob: -4.734582424163818
    6. 'remaining' → logprob: -4.859582424163818
    7. 'all' → logprob: -4.984582424163818
    8. 'allowed' → logprob: -5.109582424163818
    9. 'rest' → logprob: -5.359582424163818
    10. 'selected' → logprob: -5.859582424163818

Token 2064: ' And' (ID: 1958)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.8240429162979126
    2. '       ' → logprob: -1.5740429162979126
    3. 'c' → logprob: -2.074042797088623
    4. 'all' → logprob: -2.324042797088623
    5. 'edges' → logprob: -3.574042797088623
    6. 'inside' → logprob: -3.574042797088623
    7. 'allowed' → logprob: -3.949042797088623
    8. 'valid' → logprob: -4.199042797088623
    9. 'possible' → logprob: -4.574042797088623
    10. '#' → logprob: -5.074042797088623

Token 2065: ' also' (ID: 1217)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.93065345287323
    2. 'c' → logprob: -1.43065345287323
    3. '#' → logprob: -1.93065345287323
    4. '       ' → logprob: -2.6806535720825195
    5. 'additional' → logprob: -3.4306535720825195
    6. 'allowed' → logprob: -3.5556535720825195
    7. 'valid' → logprob: -4.0556535720825195
    8. 'all' → logprob: -4.0556535720825195
    9. 'remaining' → logprob: -5.0556535720825195
    10. 'for' → logprob: -5.1806535720825195

Token 2066: ' the' (ID: 290)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6770519018173218
    2. '#' → logprob: -1.1770519018173218
    3. 'for' → logprob: -3.4270520210266113
    4. ' for' → logprob: -3.6770520210266113
    5. ' edges' → logprob: -4.052052021026611
    6. 'add' → logprob: -4.427052021026611
    7. ' #' → logprob: -4.427052021026611
    8. ' original' → logprob: -4.552052021026611
    9. 'edges' → logprob: -4.552052021026611
    10. '
' → logprob: -4.552052021026611

Token 2067: ' original' (ID: 4756)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0306811332702637
    2. 'candidate' → logprob: -1.0306811332702637
    3. 'c' → logprob: -1.7806811332702637
    4. '       ' → logprob: -3.2806811332702637
    5. 'edges' → logprob: -3.4056811332702637
    6. 'for' → logprob: -4.280681133270264
    7. 'remaining' → logprob: -5.030681133270264
    8. 'all' → logprob: -5.030681133270264
    9. 'additional' → logprob: -5.530681133270264
    10. 'original' → logprob: -6.405681133270264

Token 2068: ' edges' (ID: 22569)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.13074785470962524
    2. 'edges' → logprob: -2.1307477951049805
    3. ' edges' → logprob: -5.7557477951049805
    4. '_original' → logprob: -8.88074779510498
    5. 'original' → logprob: -9.25574779510498
    6. '
' → logprob: -9.38074779510498
    7. 'for' → logprob: -9.88074779510498
    8. '       ' → logprob: -10.00574779510498
    9. '_edge' → logprob: -10.00574779510498
    10. '```' → logprob: -10.25574779510498

Token 2069: ' on' (ID: 402)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.8172266483306885
    2. '_out' → logprob: -1.5672266483306885
    3. 'outside' → logprob: -2.1922266483306885
    4. 'inside' → logprob: -2.9422266483306885
    5. '_not' → logprob: -3.0672266483306885
    6. '_set' → logprob: -3.4422266483306885
    7. '_inside' → logprob: -4.192226409912109
    8. 'out' → logprob: -4.567226409912109
    9. ' =' → logprob: -4.692226409912109
    10. '_edges' → logprob: -4.692226409912109

Token 2070: ' hull' (ID: 74912)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.014128832146525383
    2. 'the' → logprob: -4.389128684997559
    3. ' the' → logprob: -6.889128684997559
    4. ' hull' → logprob: -7.639128684997559
    5. '   ' → logprob: -10.264128684997559
    6. '#' → logprob: -11.139128684997559
    7. '       ' → logprob: -11.389128684997559
    8. 'polygon' → logprob: -11.639128684997559
    9. ' ' → logprob: -11.764128684997559
    10. '           ' → logprob: -12.264128684997559

Token 2071: ' must' (ID: 2804)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5576139688491821
    2. 'candidate' → logprob: -1.5576139688491821
    3. '       ' → logprob: -2.0576138496398926
    4. 'edges' → logprob: -3.8076138496398926
    5. 'remaining' → logprob: -4.307613849639893
    6. 'all' → logprob: -4.307613849639893
    7. '#' → logprob: -4.807613849639893
    8. 'additional' → logprob: -5.057613849639893
    9. 'allowed' → logprob: -5.557613849639893
    10. 'rest' → logprob: -5.932613849639893

Token 2072: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.3069429397583008
    2. ' be' → logprob: -1.8069429397583008
    3. 'also' → logprob: -3.056942939758301
    4. 'already' → logprob: -3.556942939758301
    5. 'not' → logprob: -4.306942939758301
    6. ' also' → logprob: -5.556942939758301
    7. 'all' → logprob: -5.681942939758301
    8. ' not' → logprob: -7.431942939758301
    9. 'remain' → logprob: -7.431942939758301
    10. 'appear' → logprob: -7.556942939758301

Token 2073: ' used' (ID: 2061)
  Prédit: 'included'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'included' → logprob: -0.042419400066137314
    2. 'added' → logprob: -3.91741943359375
    3. ' included' → logprob: -4.66741943359375
    4. 'pres' → logprob: -5.91741943359375
    5. 'ke' → logprob: -5.91741943359375
    6. 'consider' → logprob: -6.29241943359375
    7. 'accepted' → logprob: -6.66741943359375
    8. 'already' → logprob: -7.04241943359375
    9. 'present' → logprob: -7.54241943359375
    10. 'allowed' → logprob: -7.54241943359375

Token 2074: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08870790898799896
    2. 'edges' → logprob: -2.83870792388916
    3. 'all' → logprob: -4.83870792388916
    4. ' edges' → logprob: -5.46370792388916
    5. '#' → logprob: -5.58870792388916
    6. 'candidate' → logprob: -5.71370792388916
    7. 'rest' → logprob: -6.58870792388916
    8. '
' → logprob: -7.08870792388916
    9. '```' → logprob: -7.08870792388916
    10. 'selected' → logprob: -7.08870792388916

Token 2075: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01078309677541256
    2. 'edges' → logprob: -5.2607831954956055
    3. 'candidate' → logprob: -6.2607831954956055
    4. 'all' → logprob: -6.7607831954956055
    5. '#' → logprob: -6.7607831954956055
    6. 'c' → logprob: -7.7607831954956055
    7. 'rest' → logprob: -8.510783195495605
    8. 'remaining' → logprob: -8.760783195495605
    9. 'selected' → logprob: -9.010783195495605
    10. 'filtered' → logprob: -9.635783195495605

Token 2076: ' #' (ID: 1069)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.9662050604820251
    2. 'c' → logprob: -1.09120512008667
    3. 'edges' → logprob: -2.34120512008667
    4. '       ' → logprob: -2.59120512008667
    5. 'all' → logprob: -3.09120512008667
    6. '#' (adapté à ' #') → logprob: -3.46620512008667
    7. 'remaining' → logprob: -4.09120512008667
    8. 'additional' → logprob: -5.34120512008667
    9. 'selected' → logprob: -6.09120512008667
    10. 'rest' → logprob: -6.21620512008667

Token 2077: ' Step' (ID: 22291)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.133167028427124
    2. 'candidate' → logprob: -1.133167028427124
    3. '       ' → logprob: -1.883167028427124
    4. 'edges' → logprob: -2.383167028427124
    5. 'all' → logprob: -2.758167028427124
    6. '#' → logprob: -4.008167266845703
    7. 'remaining' → logprob: -4.758167266845703
    8. 'selected' → logprob: -5.008167266845703
    9. 'available' → logprob: -5.758167266845703
    10. 'allowed' → logprob: -6.258167266845703

Token 2078: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.010483271442353725
    2. '6' → logprob: -6.260483264923096
    3. '       ' → logprob: -6.385483264923096
    4. ':' → logprob: -6.510483264923096
    5. '   ' → logprob: -6.510483264923096
    6. ' #' → logprob: -7.010483264923096
    7. '    ' → logprob: -7.260483264923096
    8. ' =' → logprob: -7.510483264923096
    9. '        ' → logprob: -7.885483264923096
    10. '#' → logprob: -8.135483741760254

Token 2079: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.4298955798149109
    2. '5' → logprob: -1.9298956394195557
    3. '1' → logprob: -2.6798956394195557
    4. '4' → logprob: -2.8048956394195557
    5. '3' → logprob: -3.5548956394195557
    6. '7' → logprob: -4.054895401000977
    7. '       ' → logprob: -4.554895401000977
    8. '   ' → logprob: -5.679895401000977
    9. '```' → logprob: -5.679895401000977
    10. ' ' → logprob: -5.804895401000977

Token 2080: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20521827042102814
    2. '       ' → logprob: -1.7052183151245117
    3. ':
' → logprob: -6.830218315124512
    4. '#' → logprob: -6.955218315124512
    5. '
' → logprob: -7.205218315124512
    6. 'edges' → logprob: -7.705218315124512
    7. ' edges' → logprob: -9.330218315124512
    8. '_edges' → logprob: -9.705218315124512
    9. '```' → logprob: -9.830218315124512
    10. '        
' → logprob: -9.955218315124512

Token 2081: ' Kr' (ID: 11317)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.0798776149749756
    2. 'candidate' → logprob: -1.0798776149749756
    3. 'all' → logprob: -1.4548776149749756
    4. 'edges' → logprob: -3.0798776149749756
    5. '#' → logprob: -4.454877853393555
    6. 'remaining' → logprob: -4.954877853393555
    7. 'inside' → logprob: -5.454877853393555
    8. 'possible' → logprob: -5.454877853393555
    9. 'original' → logprob: -6.079877853393555
    10. 'non' → logprob: -6.079877853393555

Token 2082: 'us' (ID: 385)
  Prédit: 'us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.004633995704352856
    2. '       ' → logprob: -5.754633903503418
    3. 'usk' → logprob: -7.004633903503418
    4. '   ' → logprob: -8.879633903503418
    5. '           ' → logprob: -9.254633903503418
    6. '#' → logprob: -9.254633903503418
    7. 'ust' → logprob: -10.129633903503418
    8. 'u' → logprob: -10.754633903503418
    9. '         ' → logprob: -11.004633903503418
    10. '               ' → logprob: -11.004633903503418

Token 2083: 'kal' (ID: 23466)
  Prédit: 'kal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kal' → logprob: -0.08339876681566238
    2. 'ov' → logprob: -2.9583988189697266
    3. 'w' → logprob: -4.833398818969727
    4. 'owski' → logprob: -5.083398818969727
    5. 'cal' → logprob: -5.708398818969727
    6. 'ow' → logprob: -6.208398818969727
    7. 'al' → logprob: -6.458398818969727
    8. 't' → logprob: -6.583398818969727
    9. 'k' → logprob: -6.833398818969727
    10. 'uk' → logprob: -6.958398818969727

Token 2084: ' MST' (ID: 123058)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38877543807029724
    2. 'all' → logprob: -1.6387754678726196
    3. 'edges' → logprob: -2.51377534866333
    4. '#' → logprob: -3.51377534866333
    5. 'candidate' → logprob: -5.63877534866333
    6. ' edges' → logprob: -6.13877534866333
    7. '
' → logprob: -6.38877534866333
    8. '```' → logprob: -6.88877534866333
    9. 'original' → logprob: -7.01377534866333
    10. 'possible' → logprob: -7.13877534866333

Token 2085: ' over' (ID: 1072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8579050898551941
    2. 'edges' → logprob: -1.1079051494598389
    3. 'all' → logprob: -1.4829051494598389
    4. '#' → logprob: -4.73290491104126
    5. 'candidate' → logprob: -5.48290491104126
    6. 'c' → logprob: -6.85790491104126
    7. 'original' → logprob: -6.98290491104126
    8. 'possible' → logprob: -7.10790491104126
    9. '```' → logprob: -7.10790491104126
    10. 'mst' → logprob: -7.98290491104126

Token 2086: ' all' (ID: 722)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.17775078117847443
    2. '[self' → logprob: -2.677750825881958
    3. '[h' → logprob: -3.302750825881958
    4. 'edges' → logprob: -3.802750825881958
    5. '[
' → logprob: -4.552750587463379
    6. '[' → logprob: -4.802750587463379
    7. 'original' → logprob: -5.052750587463379
    8. 'h' → logprob: -5.802750587463379
    9. '[e' → logprob: -6.052750587463379
    10. 'all' → logprob: -6.802750587463379

Token 2087: ' nodes' (ID: 15749)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.287144273519516
    2. ' edges' → logprob: -2.162144184112549
    3. '       ' → logprob: -2.287144184112549
    4. '#' → logprob: -4.537144184112549
    5. '_edges' → logprob: -5.162144184112549
    6. 'candidate' → logprob: -5.412144184112549
    7. 'all' → logprob: -5.537144184112549
    8. 'original' → logprob: -6.787144184112549
    9. 'self' → logprob: -6.787144184112549
    10. '```' → logprob: -7.037144184112549

Token 2088: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0367923341691494
    2. 'edges' → logprob: -4.286792278289795
    3. 'all' → logprob: -4.411792278289795
    4. '
' → logprob: -5.286792278289795
    5. '#' → logprob: -6.161792278289795
    6. '```' → logprob: -6.536792278289795
    7. ' edges' → logprob: -7.786792278289795
    8. 'candidate' → logprob: -8.411792755126953
    9. '        
' → logprob: -8.536792755126953
    10. 'points' → logprob: -8.911792755126953

Token 2089: ' mandatory' (ID: 40021)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.31686022877693176
    2. 'edges' → logprob: -1.3168601989746094
    3. 'self' → logprob: -6.941860198974609
    4. ' edges' → logprob: -7.441860198974609
    5. 'selected' → logprob: -7.691860198974609
    6. 'mandatory' → logprob: -7.691860198974609
    7. 'all' → logprob: -7.816860198974609
    8. 'uf' → logprob: -8.06686019897461
    9. '       ' → logprob: -9.31686019897461
    10. 'candidate' → logprob: -9.69186019897461

Token 2090: ' hull' (ID: 74912)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.18336039781570435
    2. '_edges' → logprob: -2.4333603382110596
    3. 'edges' → logprob: -3.0583603382110596
    4. ' hull' → logprob: -3.6833603382110596
    5. 'h' → logprob: -5.808360576629639
    6. '_' → logprob: -6.058360576629639
    7. '_h' → logprob: -6.808360576629639
    8. ' _' → logprob: -7.808360576629639
    9. '_edge' → logprob: -8.55836009979248
    10. '_union' → logprob: -9.18336009979248

Token 2091: ' edges' (ID: 22569)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.33904609084129333
    2. ' edges' → logprob: -1.5890461206436157
    3. '       ' → logprob: -2.839046001434326
    4. 'edges' → logprob: -3.839046001434326
    5. '_' → logprob: -6.839046001434326
    6. '```' → logprob: -7.214046001434326
    7. ' _' → logprob: -7.964046001434326
    8. '        ' → logprob: -8.714046478271484
    9. '
' → logprob: -9.214046478271484
    10. '        
' → logprob: -9.339046478271484

Token 2092: ' included' (ID: 7360)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09704111516475677
    2. 'edges' → logprob: -3.097041130065918
    3. 'all' → logprob: -3.597041130065918
    4. '#' → logprob: -5.097041130065918
    5. '```' → logprob: -5.472041130065918
    6. ' edges' → logprob: -5.722041130065918
    7. '
' → logprob: -6.222041130065918
    8. '        
' → logprob: -7.472041130065918
    9. 'candidate' → logprob: -7.597041130065918
    10. ':' → logprob: -8.222041130065918

Token 2093: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06838135421276093
    2. 'all' → logprob: -3.5683813095092773
    3. 'edges' → logprob: -3.5683813095092773
    4. '#' → logprob: -5.318381309509277
    5. ' edges' → logprob: -6.318381309509277
    6. '
' → logprob: -6.943381309509277
    7. '```' → logprob: -7.693381309509277
    8. 'candidate' → logprob: -7.943381309509277
    9. '        
' → logprob: -8.443381309509277
    10. 'original' → logprob: -9.068381309509277

Token 2094: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08696317672729492
    2. '
' → logprob: -2.961963176727295
    3. 'all' → logprob: -3.961963176727295
    4. 'edges' → logprob: -4.961963176727295
    5. ' edges' → logprob: -5.961963176727295
    6. '```' → logprob: -6.086963176727295
    7. '        
' → logprob: -8.461963653564453
    8. ' all' → logprob: -9.086963653564453
    9. 'candidate' → logprob: -9.211963653564453
    10. '``' → logprob: -9.836963653564453

Token 2095: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05599847808480263
    2. 'all' → logprob: -3.6809985637664795
    3. 'edges' → logprob: -3.8059985637664795
    4. '```' → logprob: -6.0559983253479
    5. '
' → logprob: -6.1809983253479
    6. ' edges' → logprob: -6.8059983253479
    7. 'candidate' → logprob: -7.3059983253479
    8. '#' (adapté à ' #') → logprob: -8.555998802185059
    9. '``' → logprob: -8.930998802185059
    10. 'selected' → logprob: -9.305998802185059

Token 2096: ' Start' (ID: 7972)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6623274087905884
    2. 'edges' → logprob: -1.4123274087905884
    3. 'all' → logprob: -1.5373274087905884
    4. 'candidate' → logprob: -4.537327289581299
    5. '#' → logprob: -5.287327289581299
    6. 'c' → logprob: -5.662327289581299
    7. 'remaining' → logprob: -6.662327289581299
    8. 'possible' → logprob: -6.787327289581299
    9. 'available' → logprob: -6.787327289581299
    10. 'selected' → logprob: -7.412327289581299

Token 2097: ' uf' (ID: 35772)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2208750993013382
    2. 'edges' → logprob: -2.5958750247955322
    3. 'with' → logprob: -3.0958750247955322
    4. ' by' → logprob: -3.9708750247955322
    5. ' with' → logprob: -4.470875263214111
    6. ' edges' → logprob: -4.595875263214111
    7. '#' → logprob: -4.595875263214111
    8. 'from' → logprob: -5.095875263214111
    9. 'by' → logprob: -5.220875263214111
    10. 'all' → logprob: -5.345875263214111

Token 2098: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02784460410475731
    2. '=' → logprob: -3.6528446674346924
    3. 'for' → logprob: -8.152844429016113
    4. 'with' → logprob: -8.152844429016113
    5. '       ' → logprob: -8.652844429016113
    6. 'uf' → logprob: -9.152844429016113
    7. '(' → logprob: -9.277844429016113
    8. ':' → logprob: -9.402844429016113
    9. 'self' → logprob: -9.402844429016113
    10. '   ' → logprob: -9.777844429016113

Token 2099: ' hull' (ID: 74912)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.0003144896763842553
    2. ' uf' → logprob: -8.750314712524414
    3. 'h' → logprob: -9.000314712524414
    4. '```' → logprob: -12.125314712524414
    5. 'union' → logprob: -12.250314712524414
    6. 'self' → logprob: -12.375314712524414
    7. 'ufs' → logprob: -13.000314712524414
    8. '
' → logprob: -13.000314712524414
    9. '   ' → logprob: -13.125314712524414
    10. 'Union' → logprob: -13.125314712524414

Token 2100: ' edges' (ID: 22569)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.13292784988880157
    2. '.union' → logprob: -2.257927894592285
    3. '.edges' → logprob: -4.882927894592285
    4. 'edges' → logprob: -5.632927894592285
    5. ')' → logprob: -5.882927894592285
    6. '       ' → logprob: -6.132927894592285
    7. '   ' → logprob: -6.632927894592285
    8. '.' → logprob: -7.382927894592285
    9. '.uf' → logprob: -8.007927894592285
    10. 'union' → logprob: -8.132927894592285

Token 2101: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01732524111866951
    2. '
' → logprob: -5.017325401306152
    3. ' edges' → logprob: -5.267325401306152
    4. '```' → logprob: -6.392325401306152
    5. 'edges' → logprob: -6.517325401306152
    6. ',' → logprob: -7.142325401306152
    7. '        
' → logprob: -7.392325401306152
    8. 'all' → logprob: -8.642325401306152
    9. '#' → logprob: -9.142325401306152
    10. '_edges' → logprob: -9.642325401306152

Token 2102: ' then' (ID: 1815)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.7914803624153137
    2. '       ' → logprob: -1.791480302810669
    3. 'edges' → logprob: -1.916480302810669
    4. 'c' → logprob: -2.291480302810669
    5. 'candidate' → logprob: -2.416480302810669
    6. 'other' → logprob: -5.041480541229248
    7. 'remaining' → logprob: -5.041480541229248
    8. '#' → logprob: -5.291480541229248
    9. 'rest' → logprob: -5.291480541229248
    10. ' edges' → logprob: -5.541480541229248

Token 2103: ' add' (ID: 1147)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -1.057713508605957
    2. 'edges' → logprob: -1.057713508605957
    3. 'candidate' → logprob: -1.682713508605957
    4. 'for' → logprob: -3.682713508605957
    5. 'c' → logprob: -3.807713508605957
    6. '       ' → logprob: -3.932713508605957
    7. 'other' → logprob: -4.557713508605957
    8. 'rest' → logprob: -4.807713508605957
    9. 'remaining' → logprob: -5.057713508605957
    10. 'original' → logprob: -5.182713508605957

Token 2104: ' original' (ID: 4756)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.4264223277568817
    2. 'edges' → logprob: -1.551422357559204
    3. 'other' → logprob: -2.926422357559204
    4. ' for' → logprob: -4.676422119140625
    5. ' original' → logprob: -4.676422119140625
    6. 'for' → logprob: -4.926422119140625
    7. 'original' → logprob: -5.051422119140625
    8. ' other' → logprob: -5.051422119140625
    9. ' the' → logprob: -5.301422119140625
    10. 'remaining' → logprob: -5.301422119140625

Token 2105: ' edges' (ID: 22569)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.004517585039138794
    2. ' edges' → logprob: -5.879517555236816
    3. 'edges' → logprob: -6.629517555236816
    4. ' _' → logprob: -8.629517555236816
    5. '_' → logprob: -9.629517555236816
    6. '   ' → logprob: -9.879517555236816
    7. '_original' → logprob: -10.379517555236816
    8. '_edge' → logprob: -10.879517555236816
    9. '```' → logprob: -11.004517555236816
    10. '
' → logprob: -11.379517555236816

Token 2106: ' allowed' (ID: 9279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005991724319756031
    2. 'edges' → logprob: -6.7559919357299805
    3. ' edges' → logprob: -7.0059919357299805
    4. '#' → logprob: -7.3809919357299805
    5. '
' → logprob: -7.6309919357299805
    6. '        
' → logprob: -7.6309919357299805
    7. '```' → logprob: -7.6309919357299805
    8. '_edges' → logprob: -8.25599193572998
    9. ',' → logprob: -8.25599193572998
    10. '   ' → logprob: -8.88099193572998

Token 2107: ' ordered' (ID: 17889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0367836095392704
    2. 'edges' → logprob: -4.036783695220947
    3. ' edges' → logprob: -4.911783695220947
    4. '
' → logprob: -5.661783695220947
    5. ',' → logprob: -6.786783695220947
    6. '        
' → logprob: -6.786783695220947
    7. '#' → logprob: -7.036783695220947
    8. 'all' → logprob: -7.161783695220947
    9. '```' → logprob: -7.286783695220947
    10. '_edges' → logprob: -7.786783695220947

Token 2108: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.01158872526139021
    2. ' by' → logprob: -5.0115885734558105
    3. '=' → logprob: -5.7615885734558105
    4. '       ' → logprob: -7.1365885734558105
    5. 'self' → logprob: -8.386589050292969
    6. '(self' → logprob: -8.636589050292969
    7. '           ' → logprob: -8.886589050292969
    8. '   ' → logprob: -9.636589050292969
    9. '_by' → logprob: -9.886589050292969
    10. '(
' → logprob: -10.011589050292969

Token 2109: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.00497093191370368
    2. 'e' → logprob: -5.629971027374268
    3. 'self' → logprob: -7.254971027374268
    4. ' length' → logprob: -8.75497055053711
    5. 'edge' → logprob: -8.75497055053711
    6. 'lambda' → logprob: -9.12997055053711
    7. 'their' → logprob: -9.25497055053711
    8. 'len' → logprob: -9.50497055053711
    9. '```' → logprob: -11.25497055053711
    10. '.' → logprob: -11.25497055053711

Token 2110: ' increment' (ID: 24032)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015306534245610237
    2. 'all' → logprob: -5.14030647277832
    3. 'edges' → logprob: -5.14030647277832
    4. '
' → logprob: -7.01530647277832
    5. ' edges' → logprob: -7.01530647277832
    6. '```' → logprob: -7.39030647277832
    7. '#' → logprob: -7.76530647277832
    8. '        
' → logprob: -8.14030647277832
    9. 'candidate' → logprob: -10.01530647277832
    10. '``' → logprob: -10.14030647277832

Token 2111: 'ally' (ID: 2146)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018248511478304863
    2. 'edges' → logprob: -5.018248558044434
    3. ' edges' → logprob: -5.768248558044434
    4. '
' → logprob: -6.393248558044434
    5. '```' → logprob: -6.643248558044434
    6. 'all' → logprob: -6.768248558044434
    7. '#' → logprob: -7.143248558044434
    8. ':' → logprob: -8.143248558044434
    9. '_edges' → logprob: -8.268248558044434
    10. '        
' → logprob: -8.393248558044434

Token 2112: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.032460201531648636
    2. 'edges' → logprob: -4.0324602127075195
    3. 'all' → logprob: -4.7824602127075195
    4. '```' → logprob: -6.4074602127075195
    5. ' edges' → logprob: -6.6574602127075195
    6. '#' → logprob: -6.6574602127075195
    7. '
' → logprob: -7.5324602127075195
    8. 'allowed' → logprob: -8.15746021270752
    9. '        
' → logprob: -8.53246021270752
    10. 'candidate' → logprob: -9.90746021270752

Token 2113: ' connect' (ID: 4837)
  Prédit: 'connect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'connect' → logprob: -0.2104080319404602
    2. 'complete' → logprob: -2.0854079723358154
    3. 'union' → logprob: -3.2104079723358154
    4. 'uf' → logprob: -4.9604082107543945
    5. 'build' → logprob: -5.5854082107543945
    6. 'maint' → logprob: -5.8354082107543945
    7. 'un' → logprob: -6.2104082107543945
    8. 'keep' → logprob: -6.8354082107543945
    9. 'add' → logprob: -6.9604082107543945
    10. 'form' → logprob: -7.0854082107543945

Token 2114: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.32933950424194336
    2. '       ' → logprob: -2.0793395042419434
    3. 'the' → logprob: -2.5793395042419434
    4. 'self' → logprob: -3.4543395042419434
    5. ' all' → logprob: -4.204339504241943
    6. 'remaining' → logprob: -4.204339504241943
    7. '#' → logprob: -5.204339504241943
    8. 'rest' → logprob: -5.579339504241943
    9. 'ing' → logprob: -5.704339504241943
    10. ' the' → logprob: -6.204339504241943

Token 2115: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17624600231647491
    2. 'edges' → logprob: -2.426245927810669
    3. 'all' → logprob: -3.551245927810669
    4. '#' → logprob: -4.051246166229248
    5. ' edges' → logprob: -4.801246166229248
    6. 'allowed' → logprob: -5.551246166229248
    7. 'original' → logprob: -6.176246166229248
    8. 'rest' → logprob: -6.301246166229248
    9. '
' → logprob: -6.551246166229248
    10. 'candidate' → logprob: -6.801246166229248

Token 2116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.047658175230026245
    2. 'edges' → logprob: -3.5476582050323486
    3. 'all' → logprob: -4.2976579666137695
    4. ' edges' → logprob: -6.9226579666137695
    5. '
' → logprob: -7.0476579666137695
    6. '#' → logprob: -7.2976579666137695
    7. '```' → logprob: -7.7976579666137695
    8. '        
' → logprob: -8.29765796661377
    9. 'original' → logprob: -8.67265796661377
    10. 'allowed' → logprob: -8.67265796661377

Token 2117: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36432212591171265
    2. 'edges' → logprob: -1.6143221855163574
    3. 'all' → logprob: -2.3643221855163574
    4. '#' (adapté à ' #') → logprob: -5.239322185516357
    5. 'allowed' → logprob: -5.864322185516357
    6. 'candidate' → logprob: -6.614322185516357
    7. 'c' → logprob: -7.614322185516357
    8. ' edges' → logprob: -7.614322185516357
    9. 'original' → logprob: -7.989322185516357
    10. '
' → logprob: -8.1143217086792

Token 2118: ' Prepare' (ID: 49102)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.5659791231155396
    2. 'all' → logprob: -1.8159791231155396
    3. 'c' → logprob: -2.44097900390625
    4. '       ' → logprob: -2.56597900390625
    5. 'allowed' → logprob: -3.19097900390625
    6. 'candidate' → logprob: -3.44097900390625
    7. '#' → logprob: -3.94097900390625
    8. 'remaining' → logprob: -5.44097900390625
    9. 'original' → logprob: -6.19097900390625
    10. 'possible' → logprob: -6.31597900390625

Token 2119: ' the' (ID: 290)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.9480487704277039
    2. 'candidate' → logprob: -1.0730488300323486
    3. 'edges' → logprob: -2.3230488300323486
    4. 'allowed' → logprob: -2.6980488300323486
    5. 'all' → logprob: -2.6980488300323486
    6. 'mandatory' → logprob: -4.5730485916137695
    7. 'possible' → logprob: -4.9480485916137695
    8. 'additional' → logprob: -5.8230485916137695
    9. 'available' → logprob: -5.9480485916137695
    10. 'mst' → logprob: -6.0730485916137695

Token 2120: ' polygon' (ID: 65081)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.34228116273880005
    2. 'candidate' → logprob: -1.5922811031341553
    3. 'edges' → logprob: -2.5922811031341553
    4. 'allowed' → logprob: -5.342281341552734
    5. 'all' → logprob: -5.967281341552734
    6. 'possible' → logprob: -6.842281341552734
    7. 'mst' → logprob: -7.217281341552734
    8. 'mandatory' → logprob: -7.217281341552734
    9. 'import' → logprob: -7.342281341552734
    10. 'remaining' → logprob: -8.092281341552734

Token 2121: ' points' (ID: 5571)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.11748240143060684
    2. 'h' → logprob: -2.9924824237823486
    3. ' polygon' → logprob: -3.9924824237823486
    4. '       ' → logprob: -3.9924824237823486
    5. ' =' → logprob: -4.2424821853637695
    6. '=' → logprob: -5.6174821853637695
    7. 'points' → logprob: -6.1174821853637695
    8. '_polygon' → logprob: -7.1174821853637695
    9. ':' → logprob: -7.2424821853637695
    10. '[h' → logprob: -8.36748218536377

Token 2122: ' list' (ID: 1562)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.9382577538490295
    2. ' =' → logprob: -1.4382576942443848
    3. '=' → logprob: -1.6882576942443848
    4. '       ' → logprob: -2.8132576942443848
    5. ' polygon' → logprob: -2.9382576942443848
    6. '_polygon' → logprob: -3.3132576942443848
    7. 'h' → logprob: -4.188257694244385
    8. ':' → logprob: -4.938257694244385
    9. '_h' → logprob: -5.563257694244385
    10. ' hull' → logprob: -6.313257694244385

Token 2123: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9962037205696106
    2. ' polygon' → logprob: -1.6212036609649658
    3. ' =' → logprob: -1.8712036609649658
    4. 'polygon' → logprob: -1.8712036609649658
    5. ':' → logprob: -2.746203660964966
    6. '=' → logprob: -3.621203660964966
    7. 'points' → logprob: -4.871203899383545
    8. '[p' → logprob: -5.121203899383545
    9. '[' → logprob: -5.246203899383545
    10. '        
' → logprob: -6.121203899383545

Token 2124: ' polygon' (ID: 65081)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.4799579381942749
    2. 'self' → logprob: -1.854957938194275
    3. 'polygon' → logprob: -1.979957938194275
    4. 'Boundary' → logprob: -3.7299580574035645
    5. 'points' → logprob: -4.2299580574035645
    6. 'boundary' → logprob: -4.3549580574035645
    7. 'point' → logprob: -4.7299580574035645
    8. 'checking' → logprob: -5.1049580574035645
    9. 'poly' → logprob: -5.2299580574035645
    10. 'use' → logprob: -5.2299580574035645

Token 2125: ' checks' (ID: 22097)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3877561390399933
    2. ' =' → logprob: -1.512756109237671
    3. 'polygon' → logprob: -3.137756109237671
    4. 'points' → logprob: -3.762756109237671
    5. 'h' → logprob: -4.76275634765625
    6. '_points' → logprob: -5.01275634765625
    7. '[h' → logprob: -5.88775634765625
    8. '_polygon' → logprob: -5.88775634765625
    9. '=h' → logprob: -6.38775634765625
    10. '_h' → logprob: -6.51275634765625

Token 2126: '
' (ID: 198)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.6491140723228455
    2. ' polygon' → logprob: -1.0241141319274902
    3. '       ' → logprob: -2.2741141319274902
    4. ' =' → logprob: -5.64911413192749
    5. ':' → logprob: -5.89911413192749
    6. 'points' → logprob: -6.64911413192749
    7. '[' → logprob: -6.89911413192749
    8. '[p' → logprob: -7.14911413192749
    9. 'pol' → logprob: -7.14911413192749
    10. ' hull' → logprob: -7.39911413192749

Token 2127: '       ' (ID: 309)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.283153235912323
    2. '       ' → logprob: -1.4081532955169678
    3. ' polygon' → logprob: -6.408153057098389
    4. '```' → logprob: -9.158153533935547
    5. 'h' → logprob: -9.283153533935547
    6. 'poly' → logprob: -9.908153533935547
    7. 'self' → logprob: -10.908153533935547
    8. 'conv' → logprob: -11.033153533935547
    9. 'pol' → logprob: -11.158153533935547
    10. '``' → logprob: -11.658153533935547

Token 2128: ' polygon' (ID: 65081)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' (adapté à ' polygon') → logprob: -0.00272594066336751
    2. ' polygon' → logprob: -6.502726078033447
    3. 'h' → logprob: -7.127726078033447
    4. '       ' → logprob: -8.377725601196289
    5. '
' → logprob: -9.502725601196289
    6. 'poly' → logprob: -9.627725601196289
    7. '```' → logprob: -10.627725601196289
    8. 'pol' → logprob: -12.252725601196289
    9. '   ' → logprob: -12.252725601196289
    10. '        
' → logprob: -12.502725601196289

Token 2129: '_points' (ID: 30070)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25309687852859497
    2. ' =' → logprob: -1.5030968189239502
    3. '_points' → logprob: -6.878097057342529
    4. ':' → logprob: -10.253096580505371
    5. '_polygon' → logprob: -10.503096580505371
    6. 'points' → logprob: -10.628096580505371
    7. '=
' → logprob: -11.378096580505371
    8. '=[' → logprob: -11.753096580505371
    9. '=p' → logprob: -12.003096580505371
    10. '_pts' → logprob: -12.378096580505371

Token 2130: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869398236274719
    2. ' =' → logprob: -1.1369397640228271
    3. '=
' → logprob: -10.386940002441406
    4. ':' → logprob: -10.761940002441406
    5. ' =
' → logprob: -11.886940002441406
    6. '=p' → logprob: -12.511940002441406
    7. '=h' → logprob: -13.511940002441406
    8. '=[' → logprob: -13.636940002441406
    9. ',' → logprob: -14.136940002441406
    10. '=[
' → logprob: -14.386940002441406

Token 2131: ' [' (ID: 723)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.22318516671657562
    2. '[h' → logprob: -1.7231851816177368
    3. '[' → logprob: -3.9731850624084473
    4. '[p' → logprob: -5.973185062408447
    5. ' [' → logprob: -9.973185539245605
    6. '   ' → logprob: -10.348185539245605
    7. '[class' → logprob: -10.473185539245605
    8. '[list' → logprob: -10.598185539245605
    9. '[e' → logprob: -11.223185539245605
    10. '[this' → logprob: -12.223185539245605

Token 2132: 'points' (ID: 14011)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6937696933746338
    2. 'points' → logprob: -0.6937696933746338
    3. 'graph' → logprob: -8.068769454956055
    4. ' points' → logprob: -8.693769454956055
    5. ' self' → logprob: -9.693769454956055
    6. '(points' → logprob: -11.193769454956055
    7. 'Points' → logprob: -11.318769454956055
    8. 'Graph' → logprob: -11.443769454956055
    9. 'Point' → logprob: -11.693769454956055
    10. 'vertices' → logprob: -12.443769454956055

Token 2133: '[i' (ID: 1768)
  Prédit: '[h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.0009881501318886876
    2. '[i' → logprob: -7.000988006591797
    3. '[idx' → logprob: -10.125988006591797
    4. '[p' → logprob: -10.500988006591797
    5. '[' → logprob: -12.500988006591797
    6. 'h' → logprob: -13.250988006591797
    7. '[ind' → logprob: -13.625988006591797
    8. '[u' → logprob: -14.000988006591797
    9. '[index' → logprob: -14.250988006591797
    10. '[v' → logprob: -15.625988006591797

Token 2134: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003420183784328401
    2. 'for' → logprob: -8.12534236907959
    3. ' for' → logprob: -10.75034236907959
    4. ']
' → logprob: -11.50034236907959
    5. ' ]' → logprob: -11.87534236907959
    6. ')' → logprob: -12.87534236907959
    7. '])' → logprob: -13.50034236907959
    8. '[i' → logprob: -13.62534236907959
    9. '(i' → logprob: -15.00034236907959
    10. '],' → logprob: -15.37534236907959

Token 2135: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4778239130973816
    2. ' for' → logprob: -0.9778239130973816
    3. ']' → logprob: -5.602823734283447
    4. '
' → logprob: -10.977824211120605
    5. '	for' → logprob: -11.102824211120605
    6. ' ' → logprob: -12.352824211120605
    7. ')' → logprob: -12.727824211120605
    8. '       ' → logprob: -12.852824211120605
    9. '   ' → logprob: -12.977824211120605
    10. ']
' → logprob: -13.102824211120605

Token 2136: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0003855093673337251
    2. 'h' → logprob: -8.125385284423828
    3. ' i' → logprob: -9.625385284423828
    4. '
' → logprob: -11.875385284423828
    5. 'idx' → logprob: -12.375385284423828
    6. '   ' → logprob: -13.125385284423828
    7. 'p' → logprob: -13.250385284423828
    8. '	i' → logprob: -13.375385284423828
    9. 'index' → logprob: -13.875385284423828
    10. '_i' → logprob: -14.125385284423828

Token 2137: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5042319893836975
    2. 'i' → logprob: -1.3792319297790527
    3. ' in' → logprob: -2.0042319297790527
    4. 'h' → logprob: -5.254231929779053
    5. ' i' → logprob: -5.504231929779053
    6. ' hull' → logprob: -10.004232406616211
    7. ' ' → logprob: -10.129232406616211
    8. 'p' → logprob: -10.504232406616211
    9. ' ' → logprob: -11.504232406616211
    10. '
' → logprob: -11.504232406616211

Token 2138: ' hull' (ID: 74912)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -6.749814019713085e-06
    2. 'range' → logprob: -12.500006675720215
    3. '
' → logprob: -13.625006675720215
    4. 'hul' → logprob: -13.750006675720215
    5. ' hull' → logprob: -14.625006675720215
    6. '   ' → logprob: -15.375006675720215
    7. 'hall' → logprob: -16.87500762939453
    8. ']' → logprob: -17.37500762939453
    9. ' ' → logprob: -17.87500762939453
    10. '[h' → logprob: -18.00000762939453

Token 2139: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.0037276302464306355
    2. 'indices' → logprob: -6.003727436065674
    3. ']' → logprob: -6.878727436065674
    4. ']
' → logprob: -9.253727912902832
    5. 'Indices' → logprob: -10.378727912902832
    6. '   ' → logprob: -10.503727912902832
    7. '
' → logprob: -10.878727912902832
    8. '_points' → logprob: -11.253727912902832
    9. '```' → logprob: -12.253727912902832
    10. '_]' → logprob: -12.503727912902832

Token 2140: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06780984252691269
    2. ']
' → logprob: -3.067809820175171
    3. '       ' → logprob: -4.06781005859375
    4. ']

' → logprob: -6.31781005859375
    5. ' ]' → logprob: -9.81781005859375
    6. ']
' → logprob: -10.06781005859375
    7. ']

' → logprob: -12.06781005859375
    8. ']


' → logprob: -12.31781005859375
    9. ' ]
' → logprob: -12.31781005859375
    10. '   ' → logprob: -13.06781005859375

Token 2141: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1549815982580185
    2. 'edges' → logprob: -2.1549816131591797
    3. 'all' → logprob: -4.52998161315918
    4. 'candidate' → logprob: -4.77998161315918
    5. 'allowed' → logprob: -5.52998161315918
    6. 'rest' → logprob: -7.15498161315918
    7. '
' → logprob: -7.27998161315918
    8. '#' → logprob: -7.27998161315918
    9. ' edges' → logprob: -7.52998161315918
    10. '        
' → logprob: -8.27998161315918

Token 2142: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12110386788845062
    2. 'edges' → logprob: -2.6211037635803223
    3. 'all' → logprob: -3.9961037635803223
    4. 'allowed' → logprob: -4.371103763580322
    5. '#' (adapté à ' #') → logprob: -5.496103763580322
    6. 'candidate' → logprob: -5.746103763580322
    7. 'c' → logprob: -6.371103763580322
    8. 'possible' → logprob: -8.12110424041748
    9. 'remaining' → logprob: -8.49610424041748
    10. '
' → logprob: -9.12110424041748

Token 2143: ' Candidate' (ID: 81541)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.9604933857917786
    2. 'c' → logprob: -1.7104933261871338
    3. 'allowed' → logprob: -1.9604933261871338
    4. 'edges' → logprob: -2.210493326187134
    5. 'all' → logprob: -2.335493326187134
    6. '       ' → logprob: -2.710493326187134
    7. 'possible' → logprob: -4.460493564605713
    8. 'available' → logprob: -5.960493564605713
    9. 'remaining' → logprob: -6.085493564605713
    10. '#' → logprob: -6.085493564605713

Token 2144: ' edges' (ID: 22569)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.0009669648134149611
    2. 'edges' → logprob: -7.250967025756836
    3. '_' → logprob: -9.125967025756836
    4. '_original' → logprob: -9.875967025756836
    5. 's' → logprob: -10.125967025756836
    6. ' edges' → logprob: -10.250967025756836
    7. '_candidates' → logprob: -11.750967025756836
    8. '_edge' → logprob: -12.250967025756836
    9. '
' → logprob: -13.375967025756836
    10. ' _' → logprob: -13.750967025756836

Token 2145: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03744719550013542
    2. '       ' → logprob: -3.787447214126587
    3. '=' → logprob: -4.912446975708008
    4. 'candidate' → logprob: -6.287446975708008
    5. ':' → logprob: -6.412446975708008
    6. 'edges' → logprob: -6.662446975708008
    7. '=[]' → logprob: -7.787446975708008
    8. 'allowed' → logprob: -8.162446975708008
    9. '_candidates' → logprob: -8.662446975708008
    10. 'all' → logprob: -8.662446975708008

Token 2146: ' original' (ID: 4756)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5351118445396423
    2. 'candidate' → logprob: -0.9101118445396423
    3. 'allowed' → logprob: -4.785111904144287
    4. 'edges' → logprob: -6.535111904144287
    5. 'cand' → logprob: -7.285111904144287
    6. 'all' → logprob: -7.285111904144287
    7. '       ' → logprob: -8.285111427307129
    8. ' candidates' → logprob: -9.660111427307129
    9. 'selected' → logprob: -9.660111427307129
    10. 'possible' → logprob: -10.035111427307129

Token 2147: ' edges' (ID: 22569)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.31383687257766724
    2. 'edges' → logprob: -1.3138368129730225
    3. ' edges' → logprob: -8.813837051391602
    4. ' =' → logprob: -9.313837051391602
    5. '_candidates' → logprob: -9.688837051391602
    6. '_edge' → logprob: -9.938837051391602
    7. '_original' → logprob: -10.438837051391602
    8. 'e' → logprob: -10.563837051391602
    9. 'for' → logprob: -10.813837051391602
    10. 'Edges' → logprob: -10.938837051391602

Token 2148: ' that' (ID: 484)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22962988913059235
    2. '=' → logprob: -2.3546299934387207
    3. '_allowed' → logprob: -3.9796299934387207
    4. 'inside' → logprob: -4.104629993438721
    5. '_inside' → logprob: -4.229629993438721
    6. '_to' → logprob: -4.604629993438721
    7. 'allowed' → logprob: -4.604629993438721
    8. '_candidates' → logprob: -4.729629993438721
    9. '       ' → logprob: -5.104629993438721
    10. ':' → logprob: -5.229629993438721

Token 2149: ' are' (ID: 553)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.4991382956504822
    2. 'are' → logprob: -2.124138355255127
    3. ' not' → logprob: -2.749138355255127
    4. ' are' → logprob: -2.874138355255127
    5. 'for' → logprob: -3.249138355255127
    6. 'pass' → logprob: -3.374138355255127
    7. '=' → logprob: -3.499138355255127
    8. ' =' → logprob: -4.874138355255127
    9. ' for' → logprob: -5.124138355255127
    10. '
' → logprob: -5.249138355255127

Token 2150: ' NOT' (ID: 7116)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.04433693364262581
    2. ' not' → logprob: -3.544337034225464
    3. 'self' → logprob: -4.669336795806885
    4. 'inside' → logprob: -5.419336795806885
    5. 'outside' → logprob: -8.669337272644043
    6. ' self' → logprob: -9.044337272644043
    7. 'e' → logprob: -9.294337272644043
    8. 'either' → logprob: -9.294337272644043
    9. ' inside' → logprob: -10.419337272644043
    10. 'in' → logprob: -10.419337272644043

Token 2151: ' hull' (ID: 74912)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4173314869403839
    2. 'on' → logprob: -1.2923314571380615
    3. 'h' → logprob: -3.6673314571380615
    4. ' in' → logprob: -4.417331695556641
    5. 'part' → logprob: -4.542331695556641
    6. ' part' → logprob: -5.167331695556641
    7. ' on' → logprob: -5.542331695556641
    8. 'set' → logprob: -5.792331695556641
    9. '(' → logprob: -7.167331695556641
    10. 'min' → logprob: -7.417331695556641

Token 2152: ' edges' (ID: 22569)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.38865846395492554
    2. '_' → logprob: -1.1386585235595703
    3. '_set' → logprob: -7.63865852355957
    4. '   ' → logprob: -7.88865852355957
    5. ' _' → logprob: -8.26365852355957
    6. '_
' → logprob: -8.63865852355957
    7. '       ' → logprob: -9.38865852355957
    8. 'edges' → logprob: -9.51365852355957
    9. ',' → logprob: -10.01365852355957
    10. '_indices' → logprob: -10.51365852355957

Token 2153: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09774591028690338
    2. '=' → logprob: -2.847745895385742
    3. ':' → logprob: -4.972745895385742
    4. '_candidates' → logprob: -5.097745895385742
    5. '_set' → logprob: -5.972745895385742
    6. '=[]
' → logprob: -5.972745895385742
    7. '_candidate' → logprob: -5.972745895385742
    8. '_' → logprob: -5.972745895385742
    9. '_non' → logprob: -6.472745895385742
    10. ',' → logprob: -6.722745895385742

Token 2154: ' and' (ID: 326)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9293841123580933
    2. '[e' → logprob: -1.4293841123580933
    3. ' and' → logprob: -2.804384231567383
    4. ' but' → logprob: -3.304384231567383
    5. '[]' → logprob: -3.304384231567383
    6. ' [' → logprob: -3.429384231567383
    7. '[
' → logprob: -3.804384231567383
    8. ' e' → logprob: -4.054384231567383
    9. '[i' → logprob: -4.429384231567383
    10. '       ' → logprob: -4.679384231567383

Token 2155: ' inside' (ID: 6772)
  Prédit: 'Boundary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Boundary' → logprob: -0.05656144767999649
    2. '
' → logprob: -3.6815614700317383
    3. ' Boundary' → logprob: -4.431561470031738
    4. 'segment' → logprob: -4.681561470031738
    5. 'not' → logprob: -6.431561470031738
    6. 'all' → logprob: -6.556561470031738
    7. 'self' → logprob: -6.806561470031738
    8. 'are' → logprob: -7.181561470031738
    9. '   ' → logprob: -7.556561470031738
    10. ' segment' → logprob: -7.931561470031738

Token 2156: ' polygon' (ID: 65081)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.09537713974714279
    2. '_polygon' → logprob: -3.595377206802368
    3. '       ' → logprob: -3.845377206802368
    4. ' polygon' → logprob: -4.345376968383789
    5. 'the' → logprob: -4.345376968383789
    6. 'h' → logprob: -4.595376968383789
    7. '```' → logprob: -6.970376968383789
    8. ' the' → logprob: -7.095376968383789
    9. '           ' → logprob: -7.220376968383789
    10. '_h' → logprob: -7.345376968383789

Token 2157: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8346450328826904
    2. '
' → logprob: -1.9596450328826904
    3. ' =' → logprob: -2.3346450328826904
    4. '_candidate' → logprob: -2.4596450328826904
    5. 'candidate' → logprob: -2.5846450328826904
    6. '_candidates' → logprob: -2.8346450328826904
    7. 'allowed' → logprob: -3.2096450328826904
    8. '_allowed' → logprob: -4.0846452713012695
    9. '=[]
' → logprob: -4.5846452713012695
    10. '        
' → logprob: -5.4596452713012695

Token 2158: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005769161507487297
    2. 'candidate' → logprob: -6.0057692527771
    3. 'allowed' → logprob: -6.5057692527771
    4. 'c' → logprob: -7.7557692527771
    5. 'edges' → logprob: -8.255768775939941
    6. 'non' → logprob: -8.505768775939941
    7. ' candidates' → logprob: -8.880768775939941
    8. '
' → logprob: -9.005768775939941
    9. '```' → logprob: -9.130768775939941
    10. ' allowed' → logprob: -9.380768775939941

Token 2159: ' candidates' (ID: 18116)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6870198845863342
    2. 'candidate' → logprob: -0.9370198845863342
    3. 'allowed' → logprob: -2.8120198249816895
    4. 'c' → logprob: -3.3120198249816895
    5. 'edges' → logprob: -6.4370198249816895
    6. 'non' → logprob: -6.5620198249816895
    7. '```' → logprob: -6.6870198249816895
    8. 'remaining' → logprob: -7.5620198249816895
    9. ' candidate' → logprob: -7.9370198249816895
    10. 'rest' → logprob: -7.9370198249816895

Token 2160: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14275111258029938
    2. '=' → logprob: -2.0177512168884277
    3. '_' → logprob: -10.01775074005127
    4. ':' → logprob: -11.14275074005127
    5. '=[]' → logprob: -11.76775074005127
    6. '.' → logprob: -13.26775074005127
    7. '_space' → logprob: -13.64275074005127
    8. '=[]
' → logprob: -13.76775074005127
    9. '[:]' → logprob: -13.89275074005127
    10. ' ' → logprob: -14.14275074005127

Token 2161: ' List' (ID: 2655)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.867983341217041
    2. '=' → logprob: -0.992983341217041
    3. 'List' → logprob: -2.117983341217041
    4. ' List' → logprob: -2.992983341217041
    5. '[List' → logprob: -3.492983341217041
    6. '=[]' → logprob: -5.742983341217041
    7. '[]' → logprob: -6.242983341217041
    8. '=[]
' → logprob: -6.492983341217041
    9. '[' → logprob: -7.117983341217041
    10. '   ' → logprob: -7.367983341217041

Token 2162: '[' (ID: 58)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06821934878826141
    2. ' =' → logprob: -2.8182194232940674
    3. '=[]' → logprob: -5.568219184875488
    4. '[' → logprob: -6.193219184875488
    5. '[
' → logprob: -9.318219184875488
    6. ']' → logprob: -9.818219184875488
    7. '=[]
' → logprob: -9.943219184875488
    8. '       ' → logprob: -10.068219184875488
    9. ')' → logprob: -10.568219184875488
    10. '=[
' → logprob: -10.693219184875488

Token 2163: 'Edge' (ID: 16577)
  Prédit: 'Edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' → logprob: 0.0
    2. '[' → logprob: -16.75
    3. ' Edge' → logprob: -17.25
    4. '<Edge' → logprob: -19.875
    5. '   ' → logprob: -21.375
    6. 'Optional' → logprob: -22.0
    7. 'edge' → logprob: -22.0
    8. '_edge' → logprob: -22.0
    9. '       ' → logprob: -22.125
    10. '`' → logprob: -23.0

Token 2164: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16078630089759827
    2. ' =' → logprob: -1.9107862710952759
    3. '=[]' → logprob: -8.160786628723145
    4. ']' → logprob: -9.160786628723145
    5. '       ' → logprob: -9.660786628723145
    6. ')' → logprob: -9.910786628723145
    7. '=[]
' → logprob: -10.285786628723145
    8. ']=' → logprob: -12.035786628723145
    9. '   ' → logprob: -12.410786628723145
    10. '=
' → logprob: -12.535786628723145

Token 2165: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25205379724502563
    2. ' =' → logprob: -1.5020537376403809
    3. '=[]' → logprob: -9.127054214477539
    4. '=[]
' → logprob: -11.877054214477539
    5. '       ' → logprob: -12.502054214477539
    6. '=
' → logprob: -13.252054214477539
    7. ' =
' → logprob: -13.627054214477539
    8. '        ' → logprob: -14.752054214477539
    9. '[' → logprob: -14.752054214477539
    10. '=[' → logprob: -15.127054214477539

Token 2166: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.1556626558303833
    2. '[]' → logprob: -2.6556625366210938
    3. '[e' → logprob: -2.6556625366210938
    4. '[
' → logprob: -6.405662536621094
    5. '[' → logprob: -6.405662536621094
    6. '[]

' → logprob: -8.905662536621094
    7. '[i' → logprob: -9.280662536621094
    8. '[k' → logprob: -10.530662536621094
    9. '   ' → logprob: -11.280662536621094
    10. '[x' → logprob: -11.405662536621094

Token 2167: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7871941924095154
    2. 'for' → logprob: -0.7871941924095154
    3. ' for' → logprob: -2.41219425201416
    4. '
' → logprob: -9.66219425201416
    5. '```' → logprob: -10.16219425201416
    6. '   ' → logprob: -10.66219425201416
    7. '	for' → logprob: -12.28719425201416
    8. '``' → logprob: -13.03719425201416
    9. '           ' → logprob: -13.16219425201416
    10. '        
' → logprob: -13.41219425201416

Token 2168: ' hull' (ID: 74912)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.027793357148766518
    2. ' for' → logprob: -3.7777934074401855
    3. '       ' → logprob: -5.4027934074401855
    4. '```' → logprob: -10.902792930603027
    5. '
' → logprob: -11.527792930603027
    6. '	for' → logprob: -13.402792930603027
    7. '   ' → logprob: -13.402792930603027
    8. '``' → logprob: -13.777792930603027
    9. 'original' → logprob: -14.652792930603027
    10. '_for' → logprob: -16.152793884277344

Token 2169: '_edge' (ID: 43226)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.07597553730010986
    2. '_set' → logprob: -3.3259754180908203
    3. '_edge' → logprob: -3.9509754180908203
    4. '_indices' → logprob: -4.07597541809082
    5. 'edges' → logprob: -8.45097541809082
    6. '_' → logprob: -8.70097541809082
    7. '_vertices' → logprob: -8.82597541809082
    8. 'set' → logprob: -9.95097541809082
    9. '_points' → logprob: -10.07597541809082
    10. '   ' → logprob: -10.20097541809082

Token 2170: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.2947891652584076
    2. 's' → logprob: -1.54478919506073
    3. '_edges' → logprob: -3.5447890758514404
    4. '_keys' → logprob: -4.4197893142700195
    5. '_edge' → logprob: -7.5447893142700195
    6. 'set' → logprob: -8.16978931427002
    7. '_map' → logprob: -9.54478931427002
    8. '_s' → logprob: -9.91978931427002
    9. '_indices' → logprob: -10.54478931427002
    10. '_pairs' → logprob: -10.91978931427002

Token 2171: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519327998161316
    2. '=' → logprob: -1.5019328594207764
    3. '={(' → logprob: -13.376933097839355
    4. '=set' → logprob: -14.126933097839355
    5. ' ={' → logprob: -14.251933097839355
    6. '={' → logprob: -15.376933097839355
    7. ' ' → logprob: -15.626933097839355
    8. ' =
' → logprob: -16.12693214416504
    9. '={
' → logprob: -16.25193214416504
    10. ':' → logprob: -16.50193214416504

Token 2172: ' {(' (ID: 75216)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.0005287261446937919
    2. 'set' → logprob: -7.750528812408447
    3. ' {(' → logprob: -9.250528335571289
    4. '{
' → logprob: -13.250528335571289
    5. ' set' → logprob: -16.87552833557129
    6. '{s' → logprob: -16.87552833557129
    7. ' {' → logprob: -17.12552833557129
    8. '   ' → logprob: -17.12552833557129
    9. '{return' → logprob: -18.87552833557129
    10. '{sub' → logprob: -19.00052833557129

Token 2173: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.08493813872337341
    2. 'e' → logprob: -2.7099380493164062
    3. '(min' → logprob: -4.334938049316406
    4. '(e' → logprob: -6.584938049316406
    5. 'edge' → logprob: -8.959938049316406
    6. ' min' → logprob: -9.584938049316406
    7. '(h' → logprob: -9.834938049316406
    8. 'h' → logprob: -10.084938049316406
    9. '   ' → logprob: -10.584938049316406
    10. '[min' → logprob: -11.334938049316406

Token 2174: '(e' (ID: 3454)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.2135917991399765
    2. '(h' → logprob: -1.8385918140411377
    3. '(e' → logprob: -3.4635918140411377
    4. 'u' → logprob: -6.963591575622559
    5. '(a' → logprob: -7.588591575622559
    6. 'e' → logprob: -8.838591575622559
    7. 'h' → logprob: -8.963591575622559
    8. '(edge' → logprob: -9.963591575622559
    9. '(' → logprob: -10.088591575622559
    10. '(
' → logprob: -10.213591575622559

Token 2175: '.u' (ID: 22262)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.6339629888534546
    2. 'e' → logprob: -1.1339629888534546
    3. 'u' → logprob: -3.008963108062744
    4. '(u' → logprob: -3.258963108062744
    5. '.e' → logprob: -3.383963108062744
    6. '.u' → logprob: -3.758963108062744
    7. 'h' → logprob: -6.508963108062744
    8. '(h' → logprob: -7.258963108062744
    9. '.h' → logprob: -9.008962631225586
    10. '(' → logprob: -9.758962631225586

Token 2176: ',e' (ID: 43127)
  Prédit: ',e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',e' → logprob: -0.07551857829093933
    2. 'e' → logprob: -3.0755186080932617
    3. ',' → logprob: -3.7005186080932617
    4. '(e' → logprob: -6.325518608093262
    5. ',
' → logprob: -10.700518608093262
    6. ' ,' → logprob: -11.200518608093262
    7. ',u' → logprob: -12.075518608093262
    8. '[e' → logprob: -12.075518608093262
    9. ')e' → logprob: -12.575518608093262
    10. ')' → logprob: -13.325518608093262

Token 2177: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -0.013318694196641445
    2. ',v' → logprob: -4.3883185386657715
    3. '.u' → logprob: -8.01331901550293
    4. 'v' → logprob: -8.13831901550293
    5. '.e' → logprob: -9.26331901550293
    6. ',' → logprob: -9.63831901550293
    7. ',e' → logprob: -10.76331901550293
    8. ',u' → logprob: -12.88831901550293
    9. '.s' → logprob: -15.13831901550293
    10. '   ' → logprob: -15.76331901550293

Token 2178: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.09511473774909973
    2. '(e' → logprob: -2.7201147079467773
    3. ',' → logprob: -3.7201147079467773
    4. ',e' → logprob: -8.470114707946777
    5. '),(' → logprob: -9.095114707946777
    6. '()),' → logprob: -9.720114707946777
    7. '(h' → logprob: -9.845114707946777
    8. '(u' → logprob: -10.095114707946777
    9. 'e' → logprob: -10.220114707946777
    10. ' ),' → logprob: -10.220114707946777

Token 2179: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.000158842682139948
    2. ' max' → logprob: -8.75015926361084
    3. 'e' → logprob: -15.12515926361084
    4. '   ' → logprob: -16.625158309936523
    5. '(max' → logprob: -17.875158309936523
    6. ' ' → logprob: -18.250158309936523
    7. ' e' → logprob: -19.000158309936523
    8. ',max' → logprob: -19.375158309936523
    9. '  ' → logprob: -19.875158309936523
    10. '
' → logprob: -20.000158309936523

Token 2180: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -2.4272752852994017e-05
    2. '(' → logprob: -10.87502384185791
    3. '(
' → logprob: -13.37502384185791
    4. 'e' → logprob: -13.50002384185791
    5. '(u' → logprob: -14.00002384185791
    6. '((' → logprob: -14.50002384185791
    7. ' (' → logprob: -14.75002384185791
    8. ')' → logprob: -15.37502384185791
    9. '```' → logprob: -16.250024795532227
    10. '[e' → logprob: -16.875024795532227

Token 2181: '.u' (ID: 22262)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.0018956754356622696
    2. '(u' → logprob: -6.501895904541016
    3. 'e' → logprob: -8.001895904541016
    4. 'u' → logprob: -10.626895904541016
    5. '[e' → logprob: -11.001895904541016
    6. '=e' → logprob: -12.376895904541016
    7. '(' → logprob: -12.501895904541016
    8. ')e' → logprob: -12.501895904541016
    9. ')' → logprob: -13.001895904541016
    10. ',e' → logprob: -14.626895904541016

Token 2182: ',e' (ID: 43127)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.01475791446864605
    2. 'e' → logprob: -4.264758110046387
    3. ',e' → logprob: -8.764758110046387
    4. ')e' → logprob: -9.014758110046387
    5. '=e' → logprob: -9.264758110046387
    6. '(u' → logprob: -9.639758110046387
    7. '(h' → logprob: -10.639758110046387
    8. ')' → logprob: -10.764758110046387
    9. 'v' → logprob: -10.764758110046387
    10. 'h' → logprob: -11.014758110046387

Token 2183: '.v' (ID: 5520)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -3.297462171758525e-05
    2. 'e' → logprob: -10.750033378601074
    3. '.v' → logprob: -11.875033378601074
    4. ',v' → logprob: -12.750033378601074
    5. '(v' → logprob: -14.750033378601074
    6. ' v' → logprob: -15.125033378601074
    7. '	v' → logprob: -15.250033378601074
    8. 'в' → logprob: -15.500033378601074
    9. '_v' → logprob: -15.500033378601074
    10. '(e' → logprob: -15.750033378601074

Token 2184: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07303011417388916
    2. '),' → logprob: -2.9480299949645996
    3. ')' → logprob: -4.5730299949646
    4. '(e' → logprob: -5.8230299949646
    5. ')):' → logprob: -6.0730299949646
    6. '(h' → logprob: -7.3230299949646
    7. '))}
' → logprob: -7.5730299949646
    8. ')}' → logprob: -8.323030471801758
    9. '))
' → logprob: -8.448030471801758
    10. 'e' → logprob: -8.573030471801758

Token 2185: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4679638147354126
    2. 'for' → logprob: -1.4679638147354126
    3. ')' → logprob: -1.9679638147354126
    4. ',' → logprob: -6.342963695526123
    5. '}' → logprob: -7.592963695526123
    6. '       ' → logprob: -7.717963695526123
    7. '        ' → logprob: -8.717964172363281
    8. ')}' → logprob: -8.717964172363281
    9. '           ' → logprob: -9.592964172363281
    10. '   ' → logprob: -9.842964172363281

Token 2186: ' e' (ID: 319)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.12711603939533234
    2. 'e' → logprob: -2.1271159648895264
    3. ' e' → logprob: -10.002116203308105
    4. '(h' → logprob: -10.627116203308105
    5. ' hull' → logprob: -10.752116203308105
    6. 'hul' → logprob: -11.252116203308105
    7. 'edge' → logprob: -11.502116203308105
    8. 'he' → logprob: -11.627116203308105
    9. '(e' → logprob: -11.752116203308105
    10. '   ' → logprob: -11.877116203308105

Token 2187: ' in' (ID: 306)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.14925891160964966
    2. ' e' → logprob: -2.024258852005005
    3. 'h' → logprob: -5.774259090423584
    4. ' in' → logprob: -6.024259090423584
    5. 'in' → logprob: -7.524259090423584
    6. '(e' → logprob: -8.399258613586426
    7. ' hull' → logprob: -9.774258613586426
    8. 'edge' → logprob: -10.399258613586426
    9. ' h' → logprob: -10.524258613586426
    10. ',' → logprob: -11.024258613586426

Token 2188: ' hull' (ID: 74912)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -8.578184497309849e-05
    2. 'e' → logprob: -9.500085830688477
    3. ' hull' → logprob: -12.250085830688477
    4. '(h' → logprob: -13.500085830688477
    5. '[h' → logprob: -13.750085830688477
    6. 'hul' → logprob: -13.750085830688477
    7. '   ' → logprob: -14.000085830688477
    8. '	h' → logprob: -15.125085830688477
    9. 'hall' → logprob: -15.375085830688477
    10. 'edge' → logprob: -15.500085830688477

Token 2189: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.00013536323967855424
    2. '_indices' → logprob: -9.50013542175293
    3. 'edges' → logprob: -10.00013542175293
    4. 'h' → logprob: -12.62513542175293
    5. '```' → logprob: -13.87513542175293
    6. 'Edges' → logprob: -14.00013542175293
    7. 'edge' → logprob: -14.00013542175293
    8. '_edge' → logprob: -14.12513542175293
    9. 'e' → logprob: -14.37513542175293
    10. ')' → logprob: -14.37513542175293

Token 2190: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.02828795462846756
    2. '}
' → logprob: -3.778287887573242
    3. '       ' → logprob: -5.403287887573242
    4. ')' → logprob: -8.028287887573242
    5. ' }' → logprob: -9.653287887573242
    6. '}

' → logprob: -9.778287887573242
    7. ')}' → logprob: -10.153287887573242
    8. ',' → logprob: -11.028287887573242
    9. '   ' → logprob: -11.653287887573242
    10. '}
' → logprob: -12.153287887573242

Token 2191: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10706103593111038
    2. '       ' → logprob: -2.9820611476898193
    3. ' for' → logprob: -2.9820611476898193
    4. '```' → logprob: -9.232061386108398
    5. '
' → logprob: -10.232061386108398
    6. '   ' → logprob: -12.607061386108398
    7. ')' → logprob: -12.732061386108398
    8. '``' → logprob: -13.107061386108398
    9. '	for' → logprob: -13.232061386108398
    10. ')
' → logprob: -13.607061386108398

Token 2192: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00021557629224844277
    2. '       ' → logprob: -8.500215530395508
    3. ' for' → logprob: -11.375215530395508
    4. '```' → logprob: -14.500215530395508
    5. '``' → logprob: -17.125215530395508
    6. 'original' → logprob: -17.500215530395508
    7. '	for' → logprob: -18.000215530395508
    8. '
' → logprob: -18.125215530395508
    9. '   ' → logprob: -19.125215530395508
    10. 'edges' → logprob: -19.750215530395508

Token 2193: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0019063818035647273
    2. ' e' → logprob: -6.376906394958496
    3. 'edge' → logprob: -8.626906394958496
    4. '   ' → logprob: -10.876906394958496
    5. ' edge' → logprob: -13.251906394958496
    6. '       ' → logprob: -13.251906394958496
    7. '           ' → logprob: -14.126906394958496
    8. '	e' → logprob: -14.376906394958496
    9. '```' → logprob: -15.376906394958496
    10. ' ' → logprob: -15.501906394958496

Token 2194: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0024805311113595963
    2. 'in' → logprob: -6.002480506896973
    3. ' ' → logprob: -13.752480506896973
    4. '	in' → logprob: -13.752480506896973
    5. '<|end|>' → logprob: -14.627480506896973
    6. '_in' → logprob: -14.752480506896973
    7. '   ' → logprob: -15.252480506896973
    8. 'import' → logprob: -15.502480506896973
    9. 'e' → logprob: -15.752480506896973
    10. '<|end|>' → logprob: -16.00248146057129

Token 2195: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019361276645213366
    2. ' self' → logprob: -6.251935958862305
    3. '       ' → logprob: -12.876935958862305
    4. '   ' → logprob: -13.001935958862305
    5. '           ' → logprob: -13.876935958862305
    6. '(self' → logprob: -13.876935958862305
    7. '[self' → logprob: -14.876935958862305
    8. ' ' → logprob: -16.001935958862305
    9. '	self' → logprob: -16.126935958862305
    10. '         ' → logprob: -17.251935958862305

Token 2196: '.original' (ID: 65193)
  Prédit: '.original'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.original' → logprob: -0.2276824563741684
    2. 'original' → logprob: -1.6026824712753296
    3. 'graph' → logprob: -6.727682590484619
    4. '.graph' → logprob: -7.602682590484619
    5. ' in' → logprob: -8.477682113647461
    6. '_original' → logprob: -8.602682113647461
    7. 'self' → logprob: -9.727682113647461
    8. ' original' → logprob: -9.977682113647461
    9. 'Original' → logprob: -10.852682113647461
    10. 'in' → logprob: -10.977682113647461

Token 2197: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -6.110668618930504e-05
    2. 'edges' → logprob: -10.12506103515625
    3. '._' → logprob: -11.62506103515625
    4. '_original' → logprob: -11.87506103515625
    5. '_edge' → logprob: -13.75006103515625
    6. 'Edges' → logprob: -13.87506103515625
    7. '.edges' → logprob: -14.37506103515625
    8. 'original' → logprob: -14.87506103515625
    9. '
' → logprob: -15.00006103515625
    10. '   ' → logprob: -15.25006103515625

Token 2198: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43033289909362793
    2. ':
' → logprob: -1.055332899093628
    3. '       ' → logprob: -7.180333137512207
    4. '           ' → logprob: -7.305333137512207
    5. ',' → logprob: -9.930333137512207
    6. ':
' → logprob: -10.555333137512207
    7. '   ' → logprob: -10.680333137512207
    8. '):
' → logprob: -10.930333137512207
    9. '<|end|>' → logprob: -10.930333137512207
    10. ' if' → logprob: -11.430333137512207

Token 2199: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010362113825976849
    2. ' if' → logprob: -5.260362148284912
    3. '       ' → logprob: -5.885362148284912
    4. '<|end|>' → logprob: -7.635362148284912
    5. '        ' → logprob: -8.260361671447754
    6. '   ' → logprob: -8.385361671447754
    7. ',' → logprob: -8.510361671447754
    8. 'if' → logprob: -8.885361671447754
    9. '<|end|>' → logprob: -9.135361671447754
    10. '          ' → logprob: -9.135361671447754

Token 2200: ' edge' (ID: 11165)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1208893433213234
    2. ' if' → logprob: -2.24588942527771
    3. 'if' → logprob: -4.870889186859131
    4. '       ' → logprob: -8.745889663696289
    5. '   ' → logprob: -9.620889663696289
    6. '               ' → logprob: -9.870889663696289
    7. '            ' → logprob: -11.245889663696289
    8. '          ' → logprob: -11.370889663696289
    9. '            
' → logprob: -11.495889663696289
    10. '        ' → logprob: -11.870889663696289

Token 2201: '_key' (ID: 6724)
  Prédit: '_key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -0.006080718245357275
    2. '_tuple' → logprob: -5.506080627441406
    3. 'key' → logprob: -7.631080627441406
    4. ' =' → logprob: -7.756080627441406
    5. '_pair' → logprob: -8.256080627441406
    6. '   ' → logprob: -8.506080627441406
    7. '_set' → logprob: -8.631080627441406
    8. '_' → logprob: -9.131080627441406
    9. '           ' → logprob: -9.881080627441406
    10. '_t' → logprob: -10.381080627441406

Token 2202: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5232406854629517
    2. '=' → logprob: -0.8982406854629517
    3. ' =(' → logprob: -9.89824104309082
    4. ' in' → logprob: -10.77324104309082
    5. '=(' → logprob: -10.77324104309082
    6. '=
' → logprob: -11.27324104309082
    7. ' =
' → logprob: -12.14824104309082
    8. ' if' → logprob: -13.52324104309082
    9. 'in' → logprob: -13.89824104309082
    10. ' (' → logprob: -14.14824104309082

Token 2203: ' (' (ID: 350)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.011053952388465405
    2. ' (' → logprob: -4.511054039001465
    3. '   ' → logprob: -12.511054039001465
    4. ' ' → logprob: -13.636054039001465
    5. '[min' → logprob: -15.011054039001465
    6. '(max' → logprob: -15.136054039001465
    7. '  ' → logprob: -15.136054039001465
    8. '       ' → logprob: -16.13605308532715
    9. '           ' → logprob: -16.26105308532715
    10. '(' → logprob: -16.63605308532715

Token 2204: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -9.519893501419574e-05
    2. '(min' → logprob: -10.12509536743164
    3. 'e' → logprob: -10.25009536743164
    4. ' min' → logprob: -11.00009536743164
    5. '   ' → logprob: -13.12509536743164
    6. '(e' → logprob: -15.00009536743164
    7. '           ' → logprob: -15.62509536743164
    8. '	min' → logprob: -16.37509536743164
    9. '[min' → logprob: -16.50009536743164
    10. ',min' → logprob: -16.75009536743164

Token 2205: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.00033677343162707984
    2. 'e' → logprob: -8.000336647033691
    3. '[e' → logprob: -13.875336647033691
    4. '(
' → logprob: -16.000337600708008
    5. ',e' → logprob: -16.750337600708008
    6. ')e' → logprob: -16.875337600708008
    7. '   ' → logprob: -17.375337600708008
    8. '(' → logprob: -17.375337600708008
    9. ' (' → logprob: -18.000337600708008
    10. ' e' → logprob: -18.250337600708008

Token 2206: '.u' (ID: 22262)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.09360888600349426
    2. 'e' → logprob: -3.093608856201172
    3. '.e' → logprob: -3.218608856201172
    4. '.u' → logprob: -6.093608856201172
    5. '(u' → logprob: -6.843608856201172
    6. 'u' → logprob: -7.468608856201172
    7. '[e' → logprob: -9.718608856201172
    8. ',e' → logprob: -11.218608856201172
    9. ')e' → logprob: -12.343608856201172
    10. '#' → logprob: -12.593608856201172

Token 2207: ',e' (ID: 43127)
  Prédit: ',e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',e' → logprob: -0.015651047229766846
    2. '(e' → logprob: -4.765651226043701
    3. 'e' → logprob: -5.390651226043701
    4. ',' → logprob: -6.015651226043701
    5. '[e' → logprob: -12.640650749206543
    6. '.e' → logprob: -13.265650749206543
    7. '(' → logprob: -13.515650749206543
    8. ',
' → logprob: -13.515650749206543
    9. ' ,' → logprob: -13.640650749206543
    10. '=e' → logprob: -14.515650749206543

Token 2208: '.v' (ID: 5520)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.4380394518375397
    2. 'e' → logprob: -1.4380394220352173
    3. '.v' → logprob: -2.188039541244507
    4. '.e' → logprob: -5.563039302825928
    5. ',v' → logprob: -6.688039302825928
    6. ',e' → logprob: -10.063039779663086
    7. '(e' → logprob: -11.063039779663086
    8. ',' → logprob: -11.563039779663086
    9. ' e' → logprob: -12.563039779663086
    10. '(v' → logprob: -12.688039779663086

Token 2209: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17465947568416595
    2. ',e' → logprob: -1.9246594905853271
    3. '),' → logprob: -4.299659252166748
    4. '(e' → logprob: -7.799659252166748
    5. '           ' → logprob: -8.299659729003906
    6. 'e' → logprob: -10.049659729003906
    7. ' ,' → logprob: -10.299659729003906
    8. '),(' → logprob: -12.299659729003906
    9. '(),' → logprob: -12.674659729003906
    10. ')e' → logprob: -13.049659729003906

Token 2210: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -9.65101717156358e-05
    2. ' max' → logprob: -9.250096321105957
    3. 'e' → logprob: -15.375096321105957
    4. '   ' → logprob: -16.250097274780273
    5. '           ' → logprob: -17.750097274780273
    6. '(max' → logprob: -17.875097274780273
    7. '       ' → logprob: -18.625097274780273
    8. 'min' → logprob: -19.625097274780273
    9. ',max' → logprob: -20.000097274780273
    10. ' e' → logprob: -20.000097274780273

Token 2211: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -1.6240566083070007e-06
    2. 'e' → logprob: -14.375001907348633
    3. '(' → logprob: -15.375001907348633
    4. '[e' → logprob: -15.750001907348633
    5. ',e' → logprob: -16.250001907348633
    6. ')(' → logprob: -16.250001907348633
    7. '(
' → logprob: -16.500001907348633
    8. ' (' → logprob: -16.625001907348633
    9. ')e' → logprob: -16.625001907348633
    10. ')' → logprob: -17.000001907348633

Token 2212: '.u' (ID: 22262)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.00017231269157491624
    2. 'e' → logprob: -9.00017261505127
    3. '[e' → logprob: -10.62517261505127
    4. ',e' → logprob: -11.87517261505127
    5. '.e' → logprob: -12.12517261505127
    6. '(u' → logprob: -12.50017261505127
    7. 'u' → logprob: -12.75017261505127
    8. ' (' → logprob: -14.12517261505127
    9. 'v' → logprob: -14.25017261505127
    10. '   ' → logprob: -14.37517261505127

Token 2213: ',e' (ID: 43127)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.227140873670578
    2. 'e' → logprob: -1.8521409034729004
    3. ',e' → logprob: -3.1021409034729004
    4. '[e' → logprob: -6.8521409034729
    5. '.e' → logprob: -9.477140426635742
    6. ',' → logprob: -9.602140426635742
    7. ')e' → logprob: -9.852140426635742
    8. '),' → logprob: -11.102140426635742
    9. '=e' → logprob: -11.477140426635742
    10. 'v' → logprob: -11.477140426635742

Token 2214: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -0.0003918271977454424
    2. 'v' → logprob: -8.250391960144043
    3. ',v' → logprob: -9.750391960144043
    4. '.e' → logprob: -9.750391960144043
    5. '(e' → logprob: -12.250391960144043
    6. '(v' → logprob: -12.375391960144043
    7. 'e' → logprob: -13.000391960144043
    8. '<v' → logprob: -13.750391960144043
    9. '   ' → logprob: -15.000391960144043
    10. ')' → logprob: -15.375391960144043

Token 2215: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6863024830818176
    2. '))' → logprob: -1.0613024234771729
    3. '))
' → logprob: -2.686302423477173
    4. '),' → logprob: -2.936302423477173
    5. ')
' → logprob: -3.561302423477173
    6. '           ' → logprob: -7.311302661895752
    7. ')),' → logprob: -9.811302185058594
    8. '),
' → logprob: -9.936302185058594
    9. ',' → logprob: -10.186302185058594
    10. ')==' → logprob: -10.561302185058594

Token 2216: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002790935104712844
    2. ' if' → logprob: -8.625279426574707
    3. 'if' → logprob: -10.125279426574707
    4. '       ' → logprob: -10.375279426574707
    5. '   ' → logprob: -11.750279426574707
    6. '          ' → logprob: -11.875279426574707
    7. '```' → logprob: -13.000279426574707
    8. '	       ' → logprob: -13.250279426574707
    9. '               ' → logprob: -13.375279426574707
    10. '<|end|>' → logprob: -13.500279426574707

Token 2217: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10646995157003403
    2. 'if' (adapté à ' if') → logprob: -2.6064698696136475
    3. ' if' → logprob: -3.6064698696136475
    4. '   ' → logprob: -10.231470108032227
    5. '```' → logprob: -11.356470108032227
    6. '       ' → logprob: -12.231470108032227
    7. '          ' → logprob: -13.981470108032227
    8. ' ' → logprob: -14.231470108032227
    9. '               ' → logprob: -14.981470108032227
    10. 'If' → logprob: -15.356470108032227

Token 2218: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.5263192057609558
    2. ' edge' → logprob: -0.9013192057609558
    3. '           ' → logprob: -5.7763190269470215
    4. 'e' → logprob: -9.77631950378418
    5. 'not' → logprob: -11.65131950378418
    6. '            ' → logprob: -11.90131950378418
    7. '(edge' → logprob: -11.90131950378418
    8. '               ' → logprob: -13.15131950378418
    9. ' e' → logprob: -13.15131950378418
    10. ' not' → logprob: -13.40131950378418

Token 2219: '_key' (ID: 6724)
  Prédit: '_key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -4.656383680412546e-05
    2. 'not' → logprob: -10.500046730041504
    3. '_edge' → logprob: -12.375046730041504
    4. ' not' → logprob: -12.500046730041504
    5. 'key' → logprob: -12.625046730041504
    6. '   ' → logprob: -12.750046730041504
    7. '
' → logprob: -13.750046730041504
    8. '_not' → logprob: -14.250046730041504
    9. '           ' → logprob: -14.625046730041504
    10. 'edge' → logprob: -14.750046730041504

Token 2220: ' in' (ID: 306)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.018324701115489006
    2. 'not' → logprob: -4.018324851989746
    3. ' in' → logprob: -8.893324851989746
    4. 'in' → logprob: -10.268324851989746
    5. '	not' → logprob: -13.268324851989746
    6. ')' → logprob: -14.893324851989746
    7. '_not' → logprob: -15.643324851989746
    8. '!=' → logprob: -16.26832389831543
    9. '<|end|>' → logprob: -16.26832389831543
    10. '==' → logprob: -16.64332389831543

Token 2221: ' hull' (ID: 74912)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.9361264946837764e-07
    2. ' hull' → logprob: -15.625
    3. '	h' → logprob: -18.875
    4. '   ' → logprob: -19.0
    5. 'hul' → logprob: -19.25
    6. '           ' → logprob: -20.125
    7. '(h' → logprob: -20.75
    8. '[h' → logprob: -21.25
    9. 'hus' → logprob: -21.375
    10. '  ' → logprob: -21.5

Token 2222: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.0030238216277211905
    2. '_set' → logprob: -5.878023624420166
    3. '_edges' → logprob: -8.628024101257324
    4. 'edge' → logprob: -10.753024101257324
    5. '
' → logprob: -12.003024101257324
    6. 'set' → logprob: -12.253024101257324
    7. '   ' → logprob: -13.878024101257324
    8. ')' → logprob: -14.003024101257324
    9. 'edges' → logprob: -14.253024101257324
    10. '```' → logprob: -14.378024101257324

Token 2223: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -8.792751032160595e-05
    2. 'set' → logprob: -10.00008773803711
    3. 's' → logprob: -10.12508773803711
    4. '
' → logprob: -13.87508773803711
    5. '_sets' → logprob: -15.25008773803711
    6. '_' → logprob: -15.50008773803711
    7. 'Set' → logprob: -15.87508773803711
    8. ')' → logprob: -16.00008773803711
    9. '   ' → logprob: -16.12508773803711
    10. 'et' → logprob: -16.25008773803711

Token 2224: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7561643719673157
    2. '               ' → logprob: -1.131164312362671
    3. ':' → logprob: -1.756164312362671
    4. '           ' → logprob: -3.756164312362671
    5. ' continue' → logprob: -4.88116455078125
    6. 'continue' → logprob: -6.13116455078125
    7. ' continues' → logprob: -7.63116455078125
    8. '==' → logprob: -8.13116455078125
    9. '       ' → logprob: -8.13116455078125
    10. ' ==' → logprob: -8.25616455078125

Token 2225: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003925706725567579
    2. ' continue' → logprob: -6.378925800323486
    3. ' and' → logprob: -6.628925800323486
    4. '           ' → logprob: -7.628925800323486
    5. 'continue' → logprob: -8.628925323486328
    6. '                   ' → logprob: -9.628925323486328
    7. ':' → logprob: -9.878925323486328
    8. ' continues' → logprob: -10.378925323486328
    9. '              ' → logprob: -10.878925323486328
    10. ':
' → logprob: -11.378925323486328

Token 2226: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13543875515460968
    2. ' continue' → logprob: -2.3854386806488037
    3. 'continue' (adapté à ' continue') → logprob: -3.3854386806488037
    4. '               ' → logprob: -7.260438919067383
    5. '	continue' → logprob: -10.385438919067383
    6. '_continue' → logprob: -11.885438919067383
    7. '		' → logprob: -12.135438919067383
    8. '   ' → logprob: -12.760438919067383
    9. '	       ' → logprob: -13.760438919067383
    10. 'contin' → logprob: -14.010438919067383

Token 2227: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012594180181622505
    2. '
' → logprob: -4.512594223022461
    3. ' if' → logprob: -7.387594223022461
    4. '       ' → logprob: -8.512594223022461
    5. '            
' → logprob: -8.762594223022461
    6. '          ' → logprob: -9.387594223022461
    7. '        
' → logprob: -9.512594223022461
    8. '            ' → logprob: -10.012594223022461
    9. 'if' → logprob: -10.012594223022461
    10. ' 
' → logprob: -10.262594223022461

Token 2228: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015403309371322393
    2. ' if' → logprob: -6.751540184020996
    3. '
' → logprob: -8.876540184020996
    4. '       ' → logprob: -9.501540184020996
    5. 'if' → logprob: -9.501540184020996
    6. '               ' → logprob: -10.626540184020996
    7. '          ' → logprob: -11.126540184020996
    8. '            
' → logprob: -11.501540184020996
    9. '```' → logprob: -12.001540184020996
    10. '            ' → logprob: -12.001540184020996

Token 2229: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07097999006509781
    2. '           ' → logprob: -3.1959800720214844
    3. ' if' → logprob: -4.070980072021484
    4. '       ' → logprob: -4.570980072021484
    5. '   ' → logprob: -9.320980072021484
    6. '
' → logprob: -9.695980072021484
    7. '#' (adapté à ' #') → logprob: -11.820980072021484
    8. '```' → logprob: -12.070980072021484
    9. '        
' → logprob: -12.570980072021484
    10. ' ' → logprob: -12.820980072021484

Token 2230: ' Check' (ID: 6208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00024335073248948902
    2. '           ' → logprob: -8.875243186950684
    3. ' if' → logprob: -9.250243186950684
    4. '       ' → logprob: -11.875243186950684
    5. 'segment' → logprob: -16.625244140625
    6. 'If' → logprob: -16.750244140625
    7. '            
' → logprob: -16.875244140625
    8. 'inside' → logprob: -17.125244140625
    9. '   ' → logprob: -17.250244140625
    10. '```' → logprob: -18.125244140625

Token 2231: ' inside' (ID: 6772)
  Prédit: 'Boundary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Boundary' → logprob: -0.7121544480323792
    2. 'if' → logprob: -1.0871543884277344
    3. ' Boundary' → logprob: -2.3371543884277344
    4. '       ' → logprob: -3.0871543884277344
    5. ' if' → logprob: -3.8371543884277344
    6. '           ' → logprob: -4.837154388427734
    7. '   ' → logprob: -8.712154388427734
    8. 'not' → logprob: -9.212154388427734
    9. '_boundary' → logprob: -9.462154388427734
    10. 'Bound' → logprob: -9.837154388427734

Token 2232: ' polygon' (ID: 65081)
  Prédit: 'polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'polygon' → logprob: -0.5247372388839722
    2. '           ' → logprob: -2.6497373580932617
    3. '_polygon' → logprob: -2.6497373580932617
    4. ' =' → logprob: -2.7747373580932617
    5. 'if' → logprob: -3.1497373580932617
    6. '_condition' → logprob: -3.2747373580932617
    7. '       ' → logprob: -3.7747373580932617
    8. 'Condition' → logprob: -4.024737358093262
    9. 'e' → logprob: -4.274737358093262
    10. ' polygon' → logprob: -4.274737358093262

Token 2233: ' condition' (ID: 7060)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2980239689350128
    2. 'if' → logprob: -1.6730239391326904
    3. ' if' → logprob: -3.2980239391326904
    4. '           ' → logprob: -3.4230239391326904
    5. '
' → logprob: -8.92302417755127
    6. ',' → logprob: -9.29802417755127
    7. '```' → logprob: -9.67302417755127
    8. ' and' → logprob: -10.29802417755127
    9. 'and' → logprob: -10.92302417755127
    10. '   ' → logprob: -10.92302417755127

Token 2234: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0033571321982890368
    2. 'if' → logprob: -6.25335693359375
    3. '       ' → logprob: -6.87835693359375
    4. ' if' → logprob: -7.87835693359375
    5. '   ' → logprob: -11.50335693359375
    6. '
' → logprob: -12.50335693359375
    7. '               ' → logprob: -13.37835693359375
    8. ',' → logprob: -13.87835693359375
    9. '          ' → logprob: -14.37835693359375
    10. '            
' → logprob: -15.00335693359375

Token 2235: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02416832745075226
    2. '       ' → logprob: -3.8991682529449463
    3. ' if' → logprob: -6.149168491363525
    4. 'if' → logprob: -6.524168491363525
    5. '   ' → logprob: -11.524168014526367
    6. '               ' → logprob: -12.899168014526367
    7. '
' → logprob: -13.649168014526367
    8. '```' → logprob: -14.399168014526367
    9. '          ' → logprob: -14.649168014526367
    10. ' ' → logprob: -14.649168014526367

Token 2236: ' a' (ID: 261)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4037301540374756
    2. '           ' → logprob: -1.1537301540374756
    3. ' if' → logprob: -4.153730392456055
    4. '       ' → logprob: -6.903730392456055
    5. '   ' → logprob: -12.778730392456055
    6. '               ' → logprob: -13.403730392456055
    7. '```' → logprob: -13.653730392456055
    8. '
' → logprob: -14.528730392456055
    9. '          ' → logprob: -14.903730392456055
    10. ' ' → logprob: -15.528730392456055

Token 2237: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6945852637290955
    2. ' =' → logprob: -0.6945852637290955
    3. ',' → logprob: -6.56958532333374
    4. '   ' → logprob: -11.944584846496582
    5. '       ' → logprob: -12.319584846496582
    6. 'p' → logprob: -12.319584846496582
    7. '           ' → logprob: -12.569584846496582
    8. '=p' → logprob: -12.819584846496582
    9. ',p' → logprob: -13.444584846496582
    10. '_point' → logprob: -13.694584846496582

Token 2238: ' points' (ID: 5571)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8181118965148926
    2. 'points' → logprob: -0.9431118965148926
    3. 'self' → logprob: -1.8181118965148926
    4. ' points' → logprob: -5.568111896514893
    5. ' self' → logprob: -6.318111896514893
    6. ' e' → logprob: -6.693111896514893
    7. '(points' → logprob: -10.443111419677734
    8. 'edges' → logprob: -10.818111419677734
    9. 'point' → logprob: -11.068111419677734
    10. 'graph' → logprob: -11.693111419677734

Token 2239: '[e' (ID: 51414)
  Prédit: '[e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -0.026431269943714142
    2. 'e' → logprob: -3.6514313220977783
    3. '           ' → logprob: -10.0264310836792
    4. '[a' → logprob: -10.7764310836792
    5. '[' → logprob: -10.7764310836792
    6. '       ' → logprob: -11.1514310836792
    7. '
' → logprob: -11.7764310836792
    8. '   ' → logprob: -12.1514310836792
    9. '=e' → logprob: -12.7764310836792
    10. '[u' → logprob: -13.0264310836792

Token 2240: '.u' (ID: 22262)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5011653900146484
    2. '[e' → logprob: -1.0011653900146484
    3. '[u' → logprob: -3.8761653900146484
    4. 'u' → logprob: -5.501165390014648
    5. '[' → logprob: -8.251165390014648
    6. '.e' → logprob: -8.251165390014648
    7. '
' → logprob: -8.376165390014648
    8. 'a' → logprob: -8.501165390014648
    9. '[a' → logprob: -9.001165390014648
    10. '   ' → logprob: -9.001165390014648

Token 2241: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.31486475467681885
    2. ']' → logprob: -1.3148647546768188
    3. '],' → logprob: -6.814864635467529
    4. ',' → logprob: -8.064865112304688
    5. ' ]
' → logprob: -9.564865112304688
    6. ']

' → logprob: -10.564865112304688
    7. '];' → logprob: -10.564865112304688
    8. ']
' → logprob: -10.689865112304688
    9. ' ]' → logprob: -11.064865112304688
    10. 'e' → logprob: -11.939865112304688

Token 2242: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18384702503681183
    2. 'b' → logprob: -2.808846950531006
    3. ' b' → logprob: -3.308846950531006
    4. ' ' → logprob: -3.433846950531006
    5. ',' → logprob: -4.183846950531006
    6. '            ' → logprob: -4.433846950531006
    7. '            
' → logprob: -5.808846950531006
    8. ' ,' → logprob: -5.933846950531006
    9. ',b' → logprob: -7.183846950531006
    10. '    ' → logprob: -7.308846950531006

Token 2243: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.31326621770858765
    2. ' b' → logprob: -1.3132662773132324
    3. '           ' → logprob: -12.313265800476074
    4. '	b' → logprob: -17.18826675415039
    5. ' ' → logprob: -17.81326675415039
    6. '            ' → logprob: -17.81326675415039
    7. '       ' → logprob: -17.81326675415039
    8. ')b' → logprob: -18.81326675415039
    9. '```' → logprob: -19.06326675415039
    10. '   ' → logprob: -19.68826675415039

Token 2244: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11334280669689178
    2. '=' → logprob: -2.238342761993408
    3. '           ' → logprob: -7.988342761993408
    4. '=e' → logprob: -9.363343238830566
    5. '=
' → logprob: -11.113343238830566
    6. '            ' → logprob: -11.113343238830566
    7. ',' → logprob: -11.113343238830566
    8. ' =
' → logprob: -11.488343238830566
    9. 'a' → logprob: -11.738343238830566
    10. '.' → logprob: -12.363343238830566

Token 2245: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.02975500375032425
    2. ' points' → logprob: -3.529755115509033
    3. '(points' → logprob: -12.529754638671875
    4. '	points' → logprob: -14.154754638671875
    5. '           ' → logprob: -16.154754638671875
    6. '.points' → logprob: -17.029754638671875
    7. 'point' → logprob: -17.154754638671875
    8. '   ' → logprob: -17.654754638671875
    9. '       ' → logprob: -17.904754638671875
    10. 'Points' → logprob: -19.154754638671875

Token 2246: '[e' (ID: 51414)
  Prédit: '[e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -0.04987800493836403
    2. 'points' → logprob: -3.0498781204223633
    3. '[b' → logprob: -6.924878120422363
    4. '(points' → logprob: -9.049878120422363
    5. '.points' → logprob: -9.924878120422363
    6. 'e' → logprob: -9.924878120422363
    7. '[p' → logprob: -10.299878120422363
    8. '[' → logprob: -10.799878120422363
    9. ' points' → logprob: -11.549878120422363
    10. '	points' → logprob: -11.549878120422363

Token 2247: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -0.00027111053350381553
    2. 'v' → logprob: -8.75027084350586
    3. '[v' → logprob: -9.12527084350586
    4. '	v' → logprob: -13.25027084350586
    5. '```' → logprob: -14.75027084350586
    6. '<v' → logprob: -15.00027084350586
    7. '_v' → logprob: -15.62527084350586
    8. '(v' → logprob: -16.00027084350586
    9. '.b' → logprob: -16.12527084350586
    10. '.' → logprob: -16.12527084350586

Token 2248: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.9920687675476074
    2. '           ' → logprob: -1.1170687675476074
    3. ']
' → logprob: -1.2420687675476074
    4. ')' → logprob: -4.867068767547607
    5. ']' → logprob: -5.367068767547607
    6. '       ' → logprob: -8.242069244384766
    7. '])
' → logprob: -8.367069244384766
    8. '
' → logprob: -9.367069244384766
    9. ' )
' → logprob: -9.742069244384766
    10. '])' → logprob: -10.492069244384766

Token 2249: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002811199810821563
    2. '       ' → logprob: -8.75028133392334
    3. 'if' → logprob: -9.25028133392334
    4. ' if' → logprob: -10.62528133392334
    5. '
' → logprob: -13.87528133392334
    6. '   ' → logprob: -14.62528133392334
    7. '               ' → logprob: -15.00028133392334
    8. '          ' → logprob: -15.37528133392334
    9. '		' → logprob: -16.625280380249023
    10. ',' → logprob: -16.750280380249023

Token 2250: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2524377703666687
    2. 'if' (adapté à ' if') → logprob: -1.5024378299713135
    3. ' if' → logprob: -7.627437591552734
    4. '       ' → logprob: -10.877437591552734
    5. '   ' → logprob: -13.627437591552734
    6. '          ' → logprob: -14.627437591552734
    7. '               ' → logprob: -14.752437591552734
    8. '```' → logprob: -15.002437591552734
    9. '         ' → logprob: -16.502437591552734
    10. '	if' → logprob: -17.002437591552734

Token 2251: ' Boundary' (ID: 148449)
  Prédit: 'Boundary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Boundary' → logprob: -0.018157318234443665
    2. ' Boundary' → logprob: -4.018157482147217
    3. '           ' → logprob: -12.018157005310059
    4. 'Bound' → logprob: -13.893157005310059
    5. '   ' → logprob: -15.643157005310059
    6. '               ' → logprob: -16.143157958984375
    7. '_boundary' → logprob: -16.893157958984375
    8. 'Border' → logprob: -17.143157958984375
    9. ' boundary' → logprob: -17.143157958984375
    10. '            ' → logprob: -17.268157958984375

Token 2252: 'Condition' (ID: 14232)
  Prédit: 'Condition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Condition' → logprob: -0.00032521432149223983
    2. '_condition' → logprob: -9.000325202941895
    3. '.Condition' → logprob: -9.375325202941895
    4. '.' → logprob: -10.125325202941895
    5. '   ' → logprob: -10.500325202941895
    6. '._' → logprob: -10.500325202941895
    7. '_' → logprob: -11.375325202941895
    8. ' Condition' → logprob: -13.500325202941895
    9. '       ' → logprob: -13.500325202941895
    10. '
' → logprob: -13.750325202941895

Token 2253: 'Checker' (ID: 39016)
  Prédit: 'Checker'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Checker' → logprob: -2.463036435074173e-05
    2. 'Condition' → logprob: -11.375024795532227
    3. '_checker' → logprob: -11.875024795532227
    4. '.Check' → logprob: -13.375024795532227
    5. '_Check' → logprob: -13.750024795532227
    6. '.check' → logprob: -13.750024795532227
    7. 'Check' → logprob: -14.375024795532227
    8. ' Checker' → logprob: -15.000024795532227
    9. '   ' → logprob: -15.125024795532227
    10. 'checker' → logprob: -15.375024795532227

Token 2254: '.is' (ID: 3109)
  Prédit: '.segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.segment' → logprob: -0.0015537863364443183
    2. '.is' → logprob: -6.501554012298584
    3. '.' → logprob: -10.001553535461426
    4. 'segment' → logprob: -12.751553535461426
    5. ' .' → logprob: -14.251553535461426
    6. '.seg' → logprob: -14.376553535461426
    7. '(segment' → logprob: -15.001553535461426
    8. '
' → logprob: -15.376553535461426
    9. '   ' → logprob: -15.626553535461426
    10. '`.' → logprob: -15.626553535461426

Token 2255: '_inside' (ID: 191028)
  Prédit: '_inside'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inside' → logprob: -1.9027791495318525e-05
    2. 'Inside' → logprob: -11.250019073486328
    3. '_' → logprob: -12.250019073486328
    4. '```' → logprob: -15.125019073486328
    5. ' _' → logprob: -15.625019073486328
    6. '_
' → logprob: -15.875019073486328
    7. '
' → logprob: -16.125019073486328
    8. 'inside' → logprob: -16.125019073486328
    9. '   ' → logprob: -16.625019073486328
    10. '`' → logprob: -16.625019073486328

Token 2256: '_polygon' (ID: 195427)
  Prédit: '_polygon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_polygon' → logprob: -0.005444824229925871
    2. 'polygon' → logprob: -5.6304450035095215
    3. 'Polygon' → logprob: -6.7554450035095215
    4. '(p' → logprob: -7.3804450035095215
    5. ' polygon' → logprob: -11.380444526672363
    6. '
' → logprob: -11.630444526672363
    7. '```' → logprob: -11.755444526672363
    8. '_segment' → logprob: -11.880444526672363
    9. '_pol' → logprob: -11.880444526672363
    10. 'olygon' → logprob: -12.755444526672363

Token 2257: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0006652565789408982
    2. '(' → logprob: -7.625665187835693
    3. '(
' → logprob: -9.375665664672852
    4. 'polygon' → logprob: -9.750665664672852
    5. ' (' → logprob: -10.625665664672852
    6. ' polygon' → logprob: -12.625665664672852
    7. '(pol' → logprob: -13.250665664672852
    8. '```' → logprob: -14.000665664672852
    9. '(poly' → logprob: -14.125665664672852
    10. 'p' → logprob: -14.375665664672852

Token 2258: 'olygon' (ID: 80431)
  Prédit: 'olygon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olygon' → logprob: -0.2522487938404083
    2. 'polygon' → logprob: -1.502248764038086
    3. '(p' → logprob: -8.502248764038086
    4. 'oly' → logprob: -10.502248764038086
    5. '_polygon' → logprob: -10.502248764038086
    6. 'ol' → logprob: -11.002248764038086
    7. '```' → logprob: -11.127248764038086
    8. ' polygon' → logprob: -11.877248764038086
    9. '
' → logprob: -12.002248764038086
    10. '   ' → logprob: -12.752248764038086

Token 2259: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.001256303396075964
    2. '(p' → logprob: -7.251256465911865
    3. 'points' → logprob: -8.126255989074707
    4. 'polygon' → logprob: -8.751255989074707
    5. '_polygon' → logprob: -10.376255989074707
    6. '(points' → logprob: -10.751255989074707
    7. ')' → logprob: -11.376255989074707
    8. 'Points' → logprob: -11.626255989074707
    9. '[p' → logprob: -12.751255989074707
    10. '
' → logprob: -13.251255989074707

Token 2260: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006678790668956935
    2. ',a' → logprob: -7.500668048858643
    3. ' ,' → logprob: -10.250667572021484
    4. '           ' → logprob: -10.250667572021484
    5. ',p' → logprob: -10.500667572021484
    6. 'a' → logprob: -11.750667572021484
    7. '(a' → logprob: -12.875667572021484
    8. ',
' → logprob: -13.500667572021484
    9. '               ' → logprob: -14.000667572021484
    10. ',b' → logprob: -14.125667572021484

Token 2261: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004078639671206474
    2. ' a' → logprob: -5.5040788650512695
    3. '	a' → logprob: -15.75407886505127
    4. ')a' → logprob: -16.629077911376953
    5. ')' → logprob: -18.379077911376953
    6. '_a' → logprob: -18.879077911376953
    7. '
' → logprob: -18.879077911376953
    8. '#a' → logprob: -19.004077911376953
    9. '           ' → logprob: -19.254077911376953
    10. '    ' → logprob: -19.379077911376953

Token 2262: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021605310030281544
    2. ' ,' → logprob: -8.875216484069824
    3. ',b' → logprob: -9.750216484069824
    4. ',
' → logprob: -11.250216484069824
    5. ')' → logprob: -13.125216484069824
    6. 'b' → logprob: -14.250216484069824
    7. ',a' → logprob: -14.625216484069824
    8. 'a' → logprob: -15.375216484069824
    9. '[' → logprob: -15.500216484069824
    10. '),' → logprob: -15.500216484069824

Token 2263: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005233763717114925
    2. ' b' → logprob: -5.2552337646484375
    3. ')b' → logprob: -18.630233764648438
    4. '	b' → logprob: -19.755233764648438
    5. '
' → logprob: -21.505233764648438
    6. 'B' → logprob: -21.755233764648438
    7. '   ' → logprob: -22.255233764648438
    8. '           ' → logprob: -22.380233764648438
    9. ')' → logprob: -22.505233764648438
    10. '_b' → logprob: -22.755233764648438

Token 2264: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3038625121116638
    2. '):
' → logprob: -1.4288625717163086
    3. ')' → logprob: -3.9288625717163086
    4. '           ' → logprob: -6.553862571716309
    5. '               ' → logprob: -6.928862571716309
    6. ',' → logprob: -9.053862571716309
    7. ')==' → logprob: -9.303862571716309
    8. '):

' → logprob: -10.053862571716309
    9. '):
' → logprob: -10.178862571716309
    10. '       ' → logprob: -10.553862571716309

Token 2265: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -2.3795937522663735e-05
    2. '           ' → logprob: -11.25002384185791
    3. '```' → logprob: -12.50002384185791
    4. '                   ' → logprob: -13.12502384185791
    5. ',' → logprob: -14.62502384185791
    6. 'c' → logprob: -14.75002384185791
    7. '
' → logprob: -14.75002384185791
    8. '              ' → logprob: -14.75002384185791
    9. '                
' → logprob: -14.87502384185791
    10. ' and' → logprob: -15.12502384185791

Token 2266: ' candidates' (ID: 18116)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0750284492969513
    2. 'c' → logprob: -2.700028419494629
    3. ' candidates' → logprob: -5.325028419494629
    4. ' c' → logprob: -9.575028419494629
    5. '                   ' → logprob: -9.950028419494629
    6. '           ' → logprob: -10.325028419494629
    7. ',c' → logprob: -11.200028419494629
    8. '```' → logprob: -11.700028419494629
    9. '_candidates' → logprob: -11.825028419494629
    10. '   ' → logprob: -12.325028419494629

Token 2267: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.07904213666915894
    2. '.' → logprob: -2.5790421962738037
    3. '               ' → logprob: -9.579042434692383
    4. ' .' → logprob: -10.204042434692383
    5. '                   ' → logprob: -10.579042434692383
    6. '.add' → logprob: -11.454042434692383
    7. '.app' → logprob: -13.329042434692383
    8. '.push' → logprob: -13.579042434692383
    9. '.extend' → logprob: -13.704042434692383
    10. '.
' → logprob: -13.829042434692383

Token 2268: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.0002625278721097857
    2. '(' → logprob: -8.250262260437012
    3. '(
' → logprob: -13.875262260437012
    4. 'e' → logprob: -15.000262260437012
    5. ' (' → logprob: -17.250263214111328
    6. '(edge' → logprob: -17.250263214111328
    7. ' e' → logprob: -18.875263214111328
    8. '((' → logprob: -20.000263214111328
    9. '(

' → logprob: -20.000263214111328
    10. '()' → logprob: -20.375263214111328

Token 2269: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007634078152477741
    2. '       ' → logprob: -4.882634162902832
    3. ')
' → logprob: -11.382634162902832
    4. '())' → logprob: -12.382634162902832
    5. ' )' → logprob: -12.507634162902832
    6. '           ' → logprob: -13.007634162902832
    7. '               ' → logprob: -13.257634162902832
    8. '   ' → logprob: -14.257634162902832
    9. '.' → logprob: -14.257634162902832
    10. '<|end|>' → logprob: -14.257634162902832

Token 2270: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.055094193667173386
    2. '
' → logprob: -2.9300942420959473
    3. '        
' → logprob: -9.055093765258789
    4. 'c' → logprob: -10.305093765258789
    5. '```' → logprob: -10.930093765258789
    6. '
' → logprob: -11.430093765258789
    7. '           ' → logprob: -11.555093765258789
    8. 'sorted' → logprob: -11.930093765258789
    9. '_sorted' → logprob: -12.305093765258789
    10. '               ' → logprob: -13.555093765258789

Token 2271: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0719417929649353
    2. '
' → logprob: -2.69694185256958
    3. 'c' → logprob: -6.32194185256958
    4. '        
' → logprob: -9.946941375732422
    5. '```' → logprob: -10.071941375732422
    6. 'edges' → logprob: -10.446941375732422
    7. ' candidates' → logprob: -10.696941375732422
    8. '
' → logprob: -11.071941375732422
    9. 'sorted' → logprob: -11.196941375732422
    10. '   ' → logprob: -11.696941375732422

Token 2272: ' Also' (ID: 8820)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0030652955174446106
    2. '       ' → logprob: -6.00306510925293
    3. '#' → logprob: -7.62806510925293
    4. 'all' → logprob: -9.87806510925293
    5. 'edges' → logprob: -10.25306510925293
    6. 'import' → logprob: -11.75306510925293
    7. 'candidate' → logprob: -12.62806510925293
    8. 'sorted' → logprob: -13.25306510925293
    9. ' candidates' → logprob: -13.62806510925293
    10. 'cand' → logprob: -14.25306510925293

Token 2273: ' consider' (ID: 3331)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.9195050597190857
    2. '
' → logprob: -0.9195050597190857
    3. '       ' → logprob: -1.6695051193237305
    4. '#' → logprob: -4.6695051193237305
    5. 'all' → logprob: -6.6695051193237305
    6. 'h' → logprob: -6.9195051193237305
    7. ' candidates' → logprob: -6.9195051193237305
    8. 'edges' → logprob: -7.5445051193237305
    9. 'candidate' → logprob: -8.16950511932373
    10. '
' → logprob: -8.66950511932373

Token 2274: ' constructed' (ID: 30248)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.29254665970802307
    2. '       ' → logprob: -2.5425467491149902
    3. 'self' → logprob: -2.6675467491149902
    4. 'edges' → logprob: -3.5425467491149902
    5. ' all' → logprob: -3.6675467491149902
    6. ' edges' → logprob: -3.9175467491149902
    7. ' self' → logprob: -5.16754674911499
    8. 'for' → logprob: -5.29254674911499
    9. '#' → logprob: -5.54254674911499
    10. 'non' → logprob: -6.04254674911499

Token 2275: ' edges' (ID: 22569)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.18446139991283417
    2. ' edges' → logprob: -2.1844613552093506
    3. '_' → logprob: -3.6844613552093506
    4. '_edge' → logprob: -4.55946159362793
    5. ' _' → logprob: -4.80946159362793
    6. 'edges' → logprob: -5.05946159362793
    7. ' hull' → logprob: -5.80946159362793
    8. '_h' → logprob: -6.43446159362793
    9. ' ' → logprob: -7.68446159362793
    10. '_space' → logprob: -9.55946159362793

Token 2276: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6162840723991394
    2. '.extend' → logprob: -1.3662841320037842
    3. ' =' → logprob: -1.8662841320037842
    4. '=' → logprob: -4.241283893585205
    5. 'for' → logprob: -4.991283893585205
    6. '.append' → logprob: -5.366283893585205
    7. ' +=' → logprob: -5.491283893585205
    8. ':' → logprob: -5.741283893585205
    9. '+=' → logprob: -5.866283893585205
    10. '.' → logprob: -6.366283893585205

Token 2277: ' hull' (ID: 74912)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.014564558863639832
    2. 'the' → logprob: -4.264564514160156
    3. ' the' → logprob: -8.514564514160156
    4. ' hull' → logprob: -8.764564514160156
    5. '#' → logprob: -11.514564514160156
    6. 'conv' → logprob: -12.139564514160156
    7. '
' → logprob: -12.389564514160156
    8. '```' → logprob: -13.014564514160156
    9. '   ' → logprob: -13.264564514160156
    10. 'Hull' → logprob: -13.514564514160156

Token 2278: ' that' (ID: 484)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18788695335388184
    2. 'for' → logprob: -2.312886953353882
    3. '```' → logprob: -3.812886953353882
    4. '+
' → logprob: -4.812887191772461
    5. '
' → logprob: -4.812887191772461
    6. '.extend' → logprob: -5.312887191772461
    7. 'edges' → logprob: -5.562887191772461
    8. '.
' → logprob: -5.687887191772461
    9. ':
' → logprob: -6.312887191772461
    10. ')
' → logprob: -6.437887191772461

Token 2279: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.7983235716819763
    2. 'are' → logprob: -1.298323631286621
    3. 'continue' → logprob: -2.298323631286621
    4. '#' → logprob: -2.423323631286621
    5. 'for' → logprob: -4.298323631286621
    6. ' continue' → logprob: -4.673323631286621
    7. 'not' → logprob: -4.673323631286621
    8. ' were' → logprob: -5.048323631286621
    9. '       ' → logprob: -5.173323631286621
    10. ' might' → logprob: -5.298323631286621

Token 2280: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.23987716436386108
    2. 'already' → logprob: -1.8648772239685059
    3. ' not' → logprob: -3.739877223968506
    4. 'h' → logprob: -3.989877223968506
    5. 'needed' → logprob: -5.239877223968506
    6. 'necessary' → logprob: -6.239877223968506
    7. 'in' → logprob: -6.864877223968506
    8. 'added' → logprob: -6.989877223968506
    9. 'required' → logprob: -7.239877223968506
    10. 'missing' → logprob: -7.239877223968506

Token 2281: ' original' (ID: 4756)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.0941968709230423
    2. ' in' → logprob: -2.4691967964172363
    3. 'h' → logprob: -5.469196796417236
    4. 'already' → logprob: -8.594197273254395
    5. 'edge' → logprob: -8.594197273254395
    6. 'e' → logprob: -9.094197273254395
    7. '(h' → logprob: -9.344197273254395
    8. '
' → logprob: -9.844197273254395
    9. 'not' → logprob: -9.844197273254395
    10. ' edge' → logprob: -10.344197273254395

Token 2282: ' edges' (ID: 22569)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.009928793646395206
    2. '```' → logprob: -5.2599287033081055
    3. 'edges' → logprob: -6.6349287033081055
    4. '       ' → logprob: -7.3849287033081055
    5. ':' → logprob: -7.7599287033081055
    6. ' if' → logprob: -8.009928703308105
    7. '.' → logprob: -8.134928703308105
    8. ' edges' → logprob: -8.509928703308105
    9. '_edge' → logprob: -8.509928703308105
    10. 'if' → logprob: -8.509928703308105

Token 2283: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22332485020160675
    2. '.' → logprob: -2.348324775695801
    3. ':' → logprob: -3.348324775695801
    4. '.extend' → logprob: -3.473324775695801
    5. ' =' → logprob: -4.848324775695801
    6. ':
' → logprob: -5.348324775695801
    7. ' if' → logprob: -5.598324775695801
    8. '.
' → logprob: -5.723324775695801
    9. '.append' → logprob: -5.973324775695801
    10. ',' → logprob: -5.973324775695801

Token 2284: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004531707614660263
    2. '```' → logprob: -5.6295318603515625
    3. '
' → logprob: -7.3795318603515625
    4. 'for' → logprob: -9.004531860351562
    5. ' for' → logprob: -9.754531860351562
    6. 'edges' → logprob: -10.004531860351562
    7. '        
' → logprob: -10.379531860351562
    8. '``' → logprob: -11.504531860351562
    9. ',' → logprob: -11.629531860351562
    10. '           ' → logprob: -11.754531860351562

Token 2285: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21185624599456787
    2. 'for' → logprob: -2.5868563652038574
    3. 'c' → logprob: -2.9618563652038574
    4. '
' → logprob: -3.7118563652038574
    5. '```' → logprob: -4.086856365203857
    6. ' for' → logprob: -5.086856365203857
    7. 'edges' → logprob: -5.211856365203857
    8. 'all' → logprob: -5.461856365203857
    9. ' candidates' → logprob: -6.461856365203857
    10. 'h' → logprob: -6.461856365203857

Token 2286: ' these' (ID: 1879)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2755774259567261
    2. 'for' → logprob: -2.6505775451660156
    3. 'all' → logprob: -2.7755775451660156
    4. '
' → logprob: -3.4005775451660156
    5. 'c' → logprob: -3.6505775451660156
    6. 'edges' → logprob: -3.7755775451660156
    7. '```' → logprob: -4.525577545166016
    8. '#' → logprob: -5.275577545166016
    9. 'h' → logprob: -5.400577545166016
    10. 'candidate' → logprob: -6.025577545166016

Token 2287: ' constructed' (ID: 30248)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.4793190360069275
    2. '.append' → logprob: -1.2293190956115723
    3. '_edges' → logprob: -2.8543190956115723
    4. ':' → logprob: -5.854319095611572
    5. '.' → logprob: -6.104319095611572
    6. ' are' → logprob: -6.229319095611572
    7. ' =' → logprob: -6.354319095611572
    8. 'edges' → logprob: -6.479319095611572
    9. '```' → logprob: -6.479319095611572
    10. '_candidates' → logprob: -6.604319095611572

Token 2288: ' hull' (ID: 74912)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.14920499920845032
    2. 'edges' → logprob: -2.524204969406128
    3. ' edges' → logprob: -3.024204969406128
    4. '.edges' → logprob: -5.524205207824707
    5. '
' → logprob: -6.399205207824707
    6. '.' → logprob: -6.899205207824707
    7. '.append' → logprob: -7.399205207824707
    8. ',' → logprob: -7.899205207824707
    9. ')' → logprob: -8.399205207824707
    10. '```' → logprob: -8.524205207824707

Token 2289: ' edges' (ID: 22569)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.35672086477279663
    2. ' edges' → logprob: -1.7317209243774414
    3. 'edges' → logprob: -2.1067209243774414
    4. '_edge' → logprob: -7.106720924377441
    5. '```' → logprob: -8.481720924377441
    6. '
' → logprob: -8.981720924377441
    7. '_' → logprob: -9.731720924377441
    8. '.edges' → logprob: -10.231720924377441
    9. 'Edges' → logprob: -11.231720924377441
    10. 'edge' → logprob: -11.231720924377441

Token 2290: ':' (ID: 25)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.14256733655929565
    2. '.extend' → logprob: -2.3925673961639404
    3. ' =' → logprob: -5.017567157745361
    4. ':' → logprob: -5.017567157745361
    5. ' if' → logprob: -5.392567157745361
    6. 'for' → logprob: -5.392567157745361
    7. 'if' → logprob: -5.642567157745361
    8. 'continue' → logprob: -6.267567157745361
    9. ' +=' → logprob: -6.392567157745361
    10. '```' → logprob: -6.517567157745361

Token 2291: ' length' (ID: 5517)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0928545594215393
    2. ' for' → logprob: -2.5928544998168945
    3. '#' → logprob: -5.0928544998168945
    4. '
' → logprob: -5.8428544998168945
    5. '```' → logprob: -6.2178544998168945
    6. '       ' → logprob: -6.8428544998168945
    7. 'pass' → logprob: -8.092854499816895
    8. '[' → logprob: -8.467854499816895
    9. 'continue' → logprob: -8.592854499816895
    10. '           ' → logprob: -8.592854499816895

Token 2292: ' will' (ID: 738)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9826809167861938
    2. ' =' → logprob: -1.4826809167861938
    3. ' +=' → logprob: -1.6076809167861938
    4. '>' → logprob: -3.1076807975769043
    5. '+=' → logprob: -3.3576807975769043
    6. ' >' → logprob: -3.8576807975769043
    7. '+' → logprob: -3.8576807975769043
    8. 'for' → logprob: -4.357680797576904
    9. ')' → logprob: -4.482680797576904
    10. ' +' → logprob: -4.732680797576904

Token 2293: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.31640318036079407
    2. ' +=' → logprob: -1.6914031505584717
    3. '+=' → logprob: -3.0664031505584717
    4. 'be' → logprob: -4.441403388977051
    5. ' continue' → logprob: -5.191403388977051
    6. '+' → logprob: -5.691403388977051
    7. 'continue' → logprob: -5.816403388977051
    8. '>' → logprob: -5.816403388977051
    9. ' add' → logprob: -6.191403388977051
    10. '=' → logprob: -6.191403388977051

Token 2294: ' added' (ID: 5768)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1716892719268799
    2. 'sum' → logprob: -1.7966892719268799
    3. 'min' → logprob: -2.04668927192688
    4. 'e' → logprob: -2.29668927192688
    5. 'h' → logprob: -2.42168927192688
    6. 'max' → logprob: -2.79668927192688
    7. 'added' → logprob: -3.42168927192688
    8. 'self' → logprob: -3.67168927192688
    9. 'abs' → logprob: -3.79668927192688
    10. 'greater' → logprob: -4.671689033508301

Token 2295: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04965251311659813
    2. '
' → logprob: -3.674652576446533
    3. '```' → logprob: -5.299652576446533
    4. 'edges' → logprob: -5.424652576446533
    5. 'for' → logprob: -5.674652576446533
    6. 'total' → logprob: -6.174652576446533
    7. '        
' → logprob: -6.424652576446533
    8. '#' → logprob: -6.549652576446533
    9. ' edges' → logprob: -7.174652576446533
    10. ' for' → logprob: -7.424652576446533

Token 2296: ' must' (ID: 2804)
  Prédit: ' but'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' but' → logprob: -0.63297039270401
    2. '       ' → logprob: -1.3829703330993652
    3. '
' → logprob: -2.5079703330993652
    4. '#' → logprob: -2.7579703330993652
    5. 'but' → logprob: -3.2579703330993652
    6. '        
' → logprob: -4.757970333099365
    7. 'for' → logprob: -5.132970333099365
    8. ' #' → logprob: -5.757970333099365
    9. ' for' → logprob: -5.757970333099365
    10. '```' → logprob: -6.007970333099365

Token 2297: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.072826087474823
    2. ' be' → logprob: -2.6978261470794678
    3. 'included' → logprob: -6.697825908660889
    4. 'continue' → logprob: -7.072825908660889
    5. 'also' → logprob: -8.197826385498047
    6. 'include' → logprob: -8.947826385498047
    7. 'not' → logprob: -9.822826385498047
    8. '#' → logprob: -9.947826385498047
    9. ' included' → logprob: -9.947826385498047
    10. '_be' → logprob: -10.322826385498047

Token 2298: ' mandatory' (ID: 40021)
  Prédit: 'included'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'included' → logprob: -0.21624384820461273
    2. ' included' → logprob: -2.5912437438964844
    3. 'added' → logprob: -2.8412437438964844
    4. 'True' → logprob: -3.2162437438964844
    5. 'consider' → logprob: -5.216243743896484
    6. ' True' → logprob: -5.591243743896484
    7. 'used' → logprob: -5.966243743896484
    8. ' added' → logprob: -5.966243743896484
    9. 'count' → logprob: -6.216243743896484
    10. ' accounted' → logprob: -6.966243743896484

Token 2299: '

' (ID: 279)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.9615934491157532
    2. '       ' → logprob: -1.0865933895111084
    3. 'edges' → logprob: -1.9615933895111084
    4. '```' → logprob: -3.4615933895111084
    5. '#' → logprob: -3.7115933895111084
    6. '
' → logprob: -3.9615933895111084
    7. 'for' → logprob: -4.7115936279296875
    8. 'selected' → logprob: -4.8365936279296875
    9. 'additional' → logprob: -4.9615936279296875
    10. 'candidate' → logprob: -5.0865936279296875

Token 2300: '       ' (ID: 309)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.06457707285881042
    2. '       ' → logprob: -3.439577102661133
    3. 'selected' → logprob: -4.564577102661133
    4. '#' → logprob: -5.189577102661133
    5. 'edges' → logprob: -5.564577102661133
    6. '
' → logprob: -5.939577102661133
    7. 'mst' → logprob: -5.939577102661133
    8. 'uf' → logprob: -7.064577102661133
    9. 'additional' → logprob: -7.564577102661133
    10. 'mandatory' → logprob: -7.564577102661133

Token 2301: ' for' (ID: 395)
  Prédit: 'mst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mst' → logprob: -0.7042089700698853
    2. 'c' → logprob: -1.3292089700698853
    3. '       ' → logprob: -2.4542088508605957
    4. 'total' → logprob: -3.0792088508605957
    5. 'edges' → logprob: -3.2042088508605957
    6. '#' → logprob: -3.5792088508605957
    7. 'all' → logprob: -4.079208850860596
    8. 'selected' → logprob: -4.329208850860596
    9. 'additional' → logprob: -6.329208850860596
    10. 'remaining' → logprob: -6.329208850860596

Token 2302: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.08899028599262238
    2. ' e' → logprob: -2.5889902114868164
    3. 'i' → logprob: -4.838990211486816
    4. ' i' → logprob: -6.463990211486816
    5. 'edge' → logprob: -8.463990211486816
    6. 'constructed' → logprob: -9.338990211486816
    7. 'h' → logprob: -9.713990211486816
    8. ' edge' → logprob: -10.088990211486816
    9. '```' → logprob: -10.213990211486816
    10. '   ' → logprob: -10.588990211486816

Token 2303: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10026836395263672
    2. 'in' → logprob: -2.3502683639526367
    3. 'e' → logprob: -10.725268363952637
    4. ' ' → logprob: -11.475268363952637
    5. '_in' → logprob: -11.475268363952637
    6. 'h' → logprob: -12.600268363952637
    7. '_' → logprob: -12.600268363952637
    8. ' e' → logprob: -12.600268363952637
    9. 'i' → logprob: -13.600268363952637
    10. '
' → logprob: -13.600268363952637

Token 2304: ' hull' (ID: 74912)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.005948355887085199
    2. ' hull' → logprob: -5.130948543548584
    3. ' ' → logprob: -12.005948066711426
    4. 'hul' → logprob: -12.255948066711426
    5. '   ' → logprob: -12.755948066711426
    6. '	h' → logprob: -12.755948066711426
    7. 'hall' → logprob: -13.505948066711426
    8. '  ' → logprob: -14.630948066711426
    9. 'e' → logprob: -15.380948066711426
    10. '(h' → logprob: -15.380948066711426

Token 2305: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -3.650518920039758e-06
    2. 'edges' → logprob: -12.625003814697266
    3. '_edge' → logprob: -15.750003814697266
    4. '```' → logprob: -15.875003814697266
    5. '_' → logprob: -17.875003814697266
    6. ' edges' → logprob: -18.000003814697266
    7. ' _' → logprob: -18.250003814697266
    8. '_ed' → logprob: -18.375003814697266
    9. '[_' → logprob: -18.625003814697266
    10. 'Edges' → logprob: -18.750003814697266

Token 2306: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03045620024204254
    2. ':
' → logprob: -3.530456304550171
    3. '           ' → logprob: -7.780456066131592
    4. '       ' → logprob: -9.15545654296875
    5. ' if' → logprob: -9.53045654296875
    6. '   ' → logprob: -10.03045654296875
    7. '[' → logprob: -10.90545654296875
    8. ',' → logprob: -11.65545654296875
    9. ':
' → logprob: -11.65545654296875
    10. 'if' → logprob: -11.78045654296875

Token 2307: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04140450060367584
    2. ' if' → logprob: -3.4164044857025146
    3. ':
' → logprob: -5.791404724121094
    4. ':' → logprob: -6.041404724121094
    5. '       ' → logprob: -6.791404724121094
    6. '   ' → logprob: -7.916404724121094
    7. ',' → logprob: -8.416404724121094
    8. '	       ' → logprob: -8.666404724121094
    9. 'if' → logprob: -9.416404724121094
    10. '```' → logprob: -9.541404724121094

Token 2308: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' (adapté à ' edge') → logprob: -1.0466123819351196
    2. ' edge' → logprob: -1.2966123819351196
    3. ' if' → logprob: -2.04661226272583
    4. 'if' → logprob: -2.17161226272583
    5. ' key' → logprob: -3.04661226272583
    6. 'key' → logprob: -3.04661226272583
    7. '           ' → logprob: -3.42161226272583
    8. '_edge' → logprob: -6.54661226272583
    9. '   ' → logprob: -7.17161226272583
    10. '_key' → logprob: -7.54661226272583

Token 2309: '_key' (ID: 6724)
  Prédit: '_key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -0.0017908512381836772
    2. '_' → logprob: -6.751791000366211
    3. 'key' → logprob: -8.501791000366211
    4. '_set' → logprob: -8.626791000366211
    5. 'Key' → logprob: -9.376791000366211
    6. ' =' → logprob: -10.376791000366211
    7. '
' → logprob: -10.626791000366211
    8. '._' → logprob: -10.876791000366211
    9. ')' → logprob: -11.501791000366211
    10. '   ' → logprob: -11.501791000366211

Token 2310: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06787902116775513
    2. '=' → logprob: -3.1928789615631104
    3. ' not' → logprob: -4.4428791999816895
    4. 'not' → logprob: -5.1928791999816895
    5. ' if' → logprob: -6.4428791999816895
    6. ' in' → logprob: -6.5678791999816895
    7. '=(' → logprob: -6.9428791999816895
    8. ' =(' → logprob: -6.9428791999816895
    9. 'in' → logprob: -7.0678791999816895
    10. 'if' → logprob: -7.9428791999816895

Token 2311: ' (' (ID: 350)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.018155209720134735
    2. ' (' → logprob: -4.018155097961426
    3. '   ' → logprob: -12.393155097961426
    4. '(max' → logprob: -14.893155097961426
    5. ' ' → logprob: -15.268155097961426
    6. '[min' → logprob: -15.393155097961426
    7. '  ' → logprob: -16.268156051635742
    8. '           ' → logprob: -16.768156051635742
    9. '(' → logprob: -16.893156051635742
    10. '       ' → logprob: -17.143156051635742

Token 2312: 'min' (ID: 1493)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.2519797682762146
    2. 'min' → logprob: -1.5019798278808594
    3. ' min' → logprob: -11.00197982788086
    4. '[min' → logprob: -11.00197982788086
    5. ' (' → logprob: -11.50197982788086
    6. '=min' → logprob: -12.87697982788086
    7. ',min' → logprob: -13.62697982788086
    8. '   ' → logprob: -14.00197982788086
    9. '(e' → logprob: -14.12697982788086
    10. 'e' → logprob: -14.50197982788086

Token 2313: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -3.166338137816638e-05
    2. 'e' → logprob: -10.375031471252441
    3. ' (' → logprob: -16.000032424926758
    4. '(' → logprob: -16.250032424926758
    5. '(
' → logprob: -17.250032424926758
    6. ',e' → logprob: -17.375032424926758
    7. '[e' → logprob: -17.625032424926758
    8. ')e' → logprob: -17.750032424926758
    9. '((' → logprob: -17.875032424926758
    10. ')(' → logprob: -18.000032424926758

Token 2314: '.u' (ID: 22262)
  Prédit: '.u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.u' → logprob: -0.019903916865587234
    2. '.e' → logprob: -4.644904136657715
    3. '(e' → logprob: -5.019904136657715
    4. '(u' → logprob: -6.144904136657715
    5. 'u' → logprob: -6.644904136657715
    6. 'e' → logprob: -10.269904136657715
    7. '(' → logprob: -13.144904136657715
    8. '(.' → logprob: -13.144904136657715
    9. '.s' → logprob: -13.394904136657715
    10. ' .' → logprob: -13.769904136657715

Token 2315: ',e' (ID: 43127)
  Prédit: ',e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',e' → logprob: -0.06558235734701157
    2. '(e' → logprob: -2.815582275390625
    3. ',' → logprob: -6.440582275390625
    4. ',v' → logprob: -6.690582275390625
    5. 'e' → logprob: -7.440582275390625
    6. ',u' → logprob: -9.440582275390625
    7. '.e' → logprob: -10.065582275390625
    8. '[e' → logprob: -10.440582275390625
    9. 'v' → logprob: -12.065582275390625
    10. '[' → logprob: -12.065582275390625

Token 2316: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -0.0005626845522783697
    2. ',v' → logprob: -7.50056266784668
    3. '.e' → logprob: -11.75056266784668
    4. 'v' → logprob: -13.75056266784668
    5. ',' → logprob: -14.62556266784668
    6. ',e' → logprob: -15.25056266784668
    7. '<v' → logprob: -17.37556266784668
    8. 'e' → logprob: -17.75056266784668
    9. '.s' → logprob: -18.75056266784668
    10. '.' → logprob: -19.00056266784668

Token 2317: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.002564122434705496
    2. ',' → logprob: -6.002563953399658
    3. '           ' → logprob: -11.127564430236816
    4. ',e' → logprob: -11.252564430236816
    5. '(e' → logprob: -11.877564430236816
    6. '(),' → logprob: -11.877564430236816
    7. '),
' → logprob: -11.877564430236816
    8. ',),' → logprob: -11.877564430236816
    9. '),(' → logprob: -11.877564430236816
    10. 'e' → logprob: -12.002564430236816

Token 2318: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0067154900170862675
    2. ' max' → logprob: -5.006715297698975
    3. '(max' → logprob: -16.256715774536133
    4. ',max' → logprob: -18.506715774536133
    5. '   ' → logprob: -19.381715774536133
    6. '_max' → logprob: -19.631715774536133
    7. '[max' → logprob: -19.756715774536133
    8. '           ' → logprob: -19.756715774536133
    9. '	max' → logprob: -20.006715774536133
    10. 'e' → logprob: -20.756715774536133

Token 2319: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -5.438573680294212e-06
    2. '(' → logprob: -12.875005722045898
    3. '(u' → logprob: -13.500005722045898
    4. 'e' → logprob: -14.000005722045898
    5. ' (' → logprob: -15.750005722045898
    6. '(
' → logprob: -15.750005722045898
    7. '((' → logprob: -16.7500057220459
    8. '```' → logprob: -16.7500057220459
    9. ')' → logprob: -17.0000057220459
    10. ',e' → logprob: -17.3750057220459

Token 2320: '.u' (ID: 22262)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.02744443155825138
    2. '(u' → logprob: -3.652444362640381
    3. 'u' → logprob: -7.402444362640381
    4. 'e' → logprob: -8.027444839477539
    5. 'v' → logprob: -8.902444839477539
    6. '[e' → logprob: -10.777444839477539
    7. '(v' → logprob: -10.777444839477539
    8. '(edge' → logprob: -12.027444839477539
    9. ',e' → logprob: -12.402444839477539
    10. ',u' → logprob: -12.652444839477539

Token 2321: ',e' (ID: 43127)
  Prédit: '(e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.000840715249069035
    2. ',e' → logprob: -7.500840663909912
    3. 'e' → logprob: -8.37584114074707
    4. 'v' → logprob: -10.50084114074707
    5. ',v' → logprob: -11.37584114074707
    6. '[e' → logprob: -11.87584114074707
    7. '.e' → logprob: -11.87584114074707
    8. '(v' → logprob: -13.00084114074707
    9. ',' → logprob: -13.62584114074707
    10. '(' → logprob: -16.00084114074707

Token 2322: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -4.310693111619912e-05
    2. ',v' → logprob: -10.750042915344238
    3. 'v' → logprob: -11.375042915344238
    4. '.e' → logprob: -11.875042915344238
    5. '<v' → logprob: -13.125042915344238
    6. 'e' → logprob: -14.750042915344238
    7. '(v' → logprob: -14.750042915344238
    8. '	v' → logprob: -15.750042915344238
    9. ')v' → logprob: -15.750042915344238
    10. '[v' → logprob: -17.125043869018555

Token 2323: '))
' (ID: 2210)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.22740785777568817
    2. '))' → logprob: -2.102407932281494
    3. '))
' → logprob: -3.102407932281494
    4. ')' → logprob: -3.602407932281494
    5. ')
' → logprob: -5.102407932281494
    6. ')),' → logprob: -6.602407932281494
    7. ')):
' → logprob: -7.227407932281494
    8. '           ' → logprob: -7.852407932281494
    9. '):
' → logprob: -8.602407455444336
    10. '),
' → logprob: -9.852407455444336

Token 2324: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02198386937379837
    2. ' if' → logprob: -3.8969838619232178
    3. 'if' → logprob: -7.396984100341797
    4. '       ' → logprob: -8.021984100341797
    5. '```' → logprob: -8.521984100341797
    6. '<|end|>' → logprob: -9.396984100341797
    7. '	       ' → logprob: -9.896984100341797
    8. ' not' → logprob: -10.021984100341797
    9. 'not' → logprob: -10.896984100341797
    10. '               ' → logprob: -11.146984100341797

Token 2325: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.005856501404196024
    2. '           ' → logprob: -5.505856513977051
    3. ' if' → logprob: -6.505856513977051
    4. '       ' → logprob: -8.25585651397705
    5. '#' → logprob: -11.63085651397705
    6. 'not' → logprob: -11.75585651397705
    7. 'self' → logprob: -13.25585651397705
    8. '   ' → logprob: -13.63085651397705
    9. '	if' → logprob: -13.63085651397705
    10. '               ' → logprob: -15.50585651397705

Token 2326: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.0005129986093379557
    2. ' edge' → logprob: -8.000513076782227
    3. 'e' → logprob: -9.000513076782227
    4. '   ' → logprob: -10.500513076782227
    5. '(edge' → logprob: -10.875513076782227
    6. '           ' → logprob: -13.250513076782227
    7. 'not' → logprob: -13.250513076782227
    8. '       ' → logprob: -13.625513076782227
    9. ' ' → logprob: -14.125513076782227
    10. '(e' → logprob: -14.875513076782227

Token 2327: '_key' (ID: 6724)
  Prédit: '_key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -2.8087270038668066e-05
    2. 'not' → logprob: -11.000027656555176
    3. 'key' → logprob: -12.750027656555176
    4. 'Key' → logprob: -13.000027656555176
    5. '
' → logprob: -13.125027656555176
    6. 'e' → logprob: -14.125027656555176
    7. '_KEY' → logprob: -14.500027656555176
    8. ' not' → logprob: -14.750027656555176
    9. '#' → logprob: -15.125027656555176
    10. '```' → logprob: -15.125027656555176

Token 2328: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.1602703183889389
    2. 'not' → logprob: -1.9102703332901
    3. 'in' → logprob: -10.785270690917969
    4. ' in' → logprob: -10.910270690917969
    5. '	not' → logprob: -12.410270690917969
    6. ')' → logprob: -13.910270690917969
    7. '_not' → logprob: -14.285270690917969
    8. '
' → logprob: -14.410270690917969
    9. 'import' → logprob: -15.285270690917969
    10. 'Not' → logprob: -15.660270690917969

Token 2329: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.47445327043533325
    2. ' in' → logprob: -0.9744532704353333
    3. 'self' → logprob: -8.22445297241211
    4. ')' → logprob: -10.09945297241211
    5. 'e' → logprob: -11.09945297241211
    6. '<|end|>' → logprob: -11.22445297241211
    7. '(self' → logprob: -11.59945297241211
    8. ' self' → logprob: -12.09945297241211
    9. '_in' → logprob: -12.47445297241211
    10. 'not' → logprob: -13.09945297241211

Token 2330: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.910643762443215e-05
    2. ' self' → logprob: -9.875079154968262
    3. '{' → logprob: -11.250079154968262
    4. '
' → logprob: -12.625079154968262
    5. '(self' → logprob: -12.875079154968262
    6. '{
' → logprob: -13.000079154968262
    7. 'e' → logprob: -13.375079154968262
    8. 'edge' → logprob: -13.500079154968262
    9. 'set' → logprob: -13.625079154968262
    10. '[self' → logprob: -14.250079154968262

Token 2331: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.3045877516269684
    2. 'graph' → logprob: -1.429587721824646
    3. '.uf' → logprob: -4.3045878410339355
    4. 'self' → logprob: -5.1795878410339355
    5. '.edge' → logprob: -6.4295878410339355
    6. 'edge' → logprob: -6.8045878410339355
    7. '_graph' → logprob: -7.4295878410339355
    8. 'uf' → logprob: -9.054587364196777
    9. '	graph' → logprob: -9.054587364196777
    10. '.' → logprob: -9.679587364196777

Token 2332: '.edge' (ID: 112308)
  Prédit: '.edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.edge' → logprob: -0.02270291931927204
    2. '_edge' → logprob: -4.397702693939209
    3. 'edge' → logprob: -4.772702693939209
    4. '.original' → logprob: -7.022702693939209
    5. '_edges' → logprob: -8.272703170776367
    6. '.edges' → logprob: -8.397703170776367
    7. '._' → logprob: -9.397703170776367
    8. 'original' → logprob: -9.772703170776367
    9. '_original' → logprob: -10.147703170776367
    10. 'edges' → logprob: -10.397703170776367

Token 2333: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -1.8624639324116288e-06
    2. 'map' → logprob: -13.375001907348633
    3. '_set' → logprob: -16.000001907348633
    4. 'Map' → logprob: -16.250001907348633
    5. '_keys' → logprob: -17.125001907348633
    6. ' map' → logprob: -17.250001907348633
    7. '_mapping' → logprob: -18.000001907348633
    8. '_key' → logprob: -18.250001907348633
    9. '_maps' → logprob: -18.375001907348633
    10. '_MAP' → logprob: -18.625001907348633

Token 2334: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0629829689860344
    2. ':
' → logprob: -2.8129830360412598
    3. '):' → logprob: -7.56298303604126
    4. '):
' → logprob: -8.437982559204102
    5. '           ' → logprob: -9.062982559204102
    6. ')' → logprob: -9.937982559204102
    7. '.keys' → logprob: -10.312982559204102
    8. ':
' → logprob: -11.187982559204102
    9. '               ' → logprob: -11.437982559204102
    10. ' and' → logprob: -11.562982559204102

Token 2335: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1456606388092041
    2. ':
' → logprob: -2.270660638809204
    3. '           ' → logprob: -4.020660400390625
    4. ':' → logprob: -4.395660400390625
    5. '):
' → logprob: -7.395660400390625
    6. ' or' → logprob: -8.145660400390625
    7. ' and' → logprob: -8.645660400390625
    8. '       ' → logprob: -9.145660400390625
    9. ' :
' → logprob: -9.145660400390625
    10. ' :' → logprob: -9.270660400390625

Token 2336: ' candidates' (ID: 18116)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.17547111213207245
    2. ' uf' → logprob: -2.175471067428589
    3. '           ' → logprob: -3.300471067428589
    4. '               ' → logprob: -5.050471305847168
    5. 'self' → logprob: -5.800471305847168
    6. ' self' → logprob: -7.800471305847168
    7. '                   ' → logprob: -8.300471305847168
    8. '
' → logprob: -9.675471305847168
    9. 'for' → logprob: -9.925471305847168
    10. '.uf' → logprob: -10.175471305847168

Token 2337: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.002208069898188114
    2. '.' → logprob: -6.127208232879639
    3. '.extend' → logprob: -11.62720775604248
    4. '.add' → logprob: -12.25220775604248
    5. '.app' → logprob: -12.62720775604248
    6. '.insert' → logprob: -13.25220775604248
    7. '.remove' → logprob: -13.50220775604248
    8. ' .' → logprob: -14.00220775604248
    9. '.ap' → logprob: -14.62720775604248
    10. 'append' → logprob: -14.62720775604248

Token 2338: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -4.727905979962088e-05
    2. '(' → logprob: -10.00004768371582
    3. '(edge' → logprob: -13.75004768371582
    4. ' (' → logprob: -14.87504768371582
    5. '(
' → logprob: -14.87504768371582
    6. '(E' → logprob: -17.00004768371582
    7. 'e' → logprob: -17.12504768371582
    8. '((' → logprob: -17.75004768371582
    9. '```' → logprob: -19.25004768371582
    10. ')' → logprob: -19.87504768371582

Token 2339: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019123381935060024
    2. ')
' → logprob: -6.7519121170043945
    3. ' )' → logprob: -7.8769121170043945
    4. '       ' → logprob: -8.376912117004395
    5. '           ' → logprob: -9.626912117004395
    6. '<|end|>' → logprob: -10.501912117004395
    7. '
' → logprob: -11.626912117004395
    8. '               ' → logprob: -11.751912117004395
    9. '<|end|>' → logprob: -12.626912117004395
    10. ' )
' → logprob: -12.751912117004395

Token 2340: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09897887706756592
    2. '
' → logprob: -2.8489789962768555
    3. 'c' → logprob: -3.3489789962768555
    4. '```' → logprob: -7.4739789962768555
    5. 'edges' → logprob: -8.348978996276855
    6. '        
' → logprob: -9.098978996276855
    7. '#' → logprob: -9.223978996276855
    8. '   ' → logprob: -10.223978996276855
    9. ' candidates' → logprob: -10.223978996276855
    10. '
' → logprob: -10.598978996276855

Token 2341: ' #' (ID: 1069)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.202098548412323
    2. '       ' → logprob: -1.7020986080169678
    3. '
' → logprob: -8.452098846435547
    4. '#' (adapté à ' #') → logprob: -8.577098846435547
    5. 'edges' → logprob: -8.827098846435547
    6. 'mst' → logprob: -10.327098846435547
    7. 'total' → logprob: -10.577098846435547
    8. '   ' → logprob: -10.577098846435547
    9. '```' → logprob: -11.202098846435547
    10. 'selected' → logprob: -11.827098846435547

Token 2342: ' Sort' (ID: 25945)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0006952775875106454
    2. '#' → logprob: -8.25069522857666
    3. '       ' → logprob: -8.25069522857666
    4. 'mst' → logprob: -9.62569522857666
    5. 'edges' → logprob: -10.00069522857666
    6. 'candidate' → logprob: -11.12569522857666
    7. 'total' → logprob: -11.50069522857666
    8. 'all' → logprob: -11.87569522857666
    9. 'selected' → logprob: -12.12569522857666
    10. '
' → logprob: -12.62569522857666

Token 2343: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00032879042555578053
    2. ' candidates' → logprob: -8.50032901763916
    3. '(c' → logprob: -10.00032901763916
    4. '       ' → logprob: -10.12532901763916
    5. '(
' → logprob: -11.00032901763916
    6. '_candidates' → logprob: -11.12532901763916
    7. 'self' → logprob: -12.75032901763916
    8. 'all' → logprob: -13.50032901763916
    9. 'edges' → logprob: -13.62532901763916
    10. 'candidate' → logprob: -13.62532901763916

Token 2344: ' by' (ID: 656)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00563616631552577
    2. '.sort' → logprob: -5.630636215209961
    3. '       ' → logprob: -6.380636215209961
    4. 'edges' → logprob: -9.630636215209961
    5. '_candidates' → logprob: -9.630636215209961
    6. ' candidates' → logprob: -9.880636215209961
    7. '(c' → logprob: -10.005636215209961
    8. '(
' → logprob: -10.880636215209961
    9. '()
' → logprob: -11.130636215209961
    10. 'sort' → logprob: -11.505636215209961

Token 2345: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.00013655527436640114
    2. 'lambda' → logprob: -9.250136375427246
    3. ' length' → logprob: -10.250136375427246
    4. 'key' → logprob: -13.500136375427246
    5. 'len' → logprob: -13.625136375427246
    6. '```' → logprob: -14.125136375427246
    7. '_length' → logprob: -14.625136375427246
    8. '   ' → logprob: -15.125136375427246
    9. 'leng' → logprob: -15.625136375427246
    10. '	length' → logprob: -15.875136375427246

Token 2346: ' ascending' (ID: 75564)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.05854925140738487
    2. '       ' → logprob: -2.933549165725708
    3. '(c' → logprob: -6.433549404144287
    4. '()
' → logprob: -7.058549404144287
    5. ' candidates' → logprob: -8.058548927307129
    6. '()' → logprob: -8.308548927307129
    7. 'edges' → logprob: -8.933548927307129
    8. '.sort' → logprob: -9.058548927307129
    9. '_candidates' → logprob: -9.433548927307129
    10. ')c' → logprob: -10.308548927307129

Token 2347: '
' (ID: 198)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.02097928524017334
    2. '       ' → logprob: -3.895979404449463
    3. ' candidates' → logprob: -8.395978927612305
    4. '.c' → logprob: -10.145978927612305
    5. '(c' → logprob: -10.145978927612305
    6. '_candidates' → logprob: -10.395978927612305
    7. '.' → logprob: -10.770978927612305
    8. '.
' → logprob: -11.270978927612305
    9. ')c' → logprob: -11.395978927612305
    10. ',c' → logprob: -11.395978927612305

Token 2348: '       ' (ID: 309)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6933138370513916
    2. '       ' → logprob: -0.6933138370513916
    3. ' candidates' → logprob: -9.693313598632812
    4. '```' → logprob: -10.193313598632812
    5. '
' → logprob: -10.943313598632812
    6. '_candidates' → logprob: -11.443313598632812
    7. '[c' → logprob: -11.943313598632812
    8. '	c' → logprob: -12.193313598632812
    9. ',c' → logprob: -12.443313598632812
    10. '        
' → logprob: -12.443313598632812

Token 2349: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00011784763046307489
    2. ' candidates' → logprob: -9.250118255615234
    3. '       ' → logprob: -10.750118255615234
    4. '
' → logprob: -16.375118255615234
    5. ' c' → logprob: -17.125118255615234
    6. '_candidates' → logprob: -17.375118255615234
    7. '```' → logprob: -17.750118255615234
    8. '   ' → logprob: -18.375118255615234
    9. 'Candidates' → logprob: -18.500118255615234
    10. '	c' → logprob: -18.750118255615234

Token 2350: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0067167943343520164
    2. '.' → logprob: -5.006716728210449
    3. ' .' → logprob: -13.75671672821045
    4. 'sort' → logprob: -15.75671672821045
    5. '=' → logprob: -17.131717681884766
    6. '.reverse' → logprob: -17.506717681884766
    7. '	sort' → logprob: -17.756717681884766
    8. '.
' → logprob: -17.756717681884766
    9. '.Sort' → logprob: -17.881717681884766
    10. '.append' → logprob: -18.006717681884766

Token 2351: '(key' (ID: 8932)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11421669274568558
    2. '(key' → logprob: -2.2392168045043945
    3. '(' → logprob: -7.2392168045043945
    4. 'key' → logprob: -7.9892168045043945
    5. '()
' → logprob: -8.864216804504395
    6. '(reverse' → logprob: -9.239216804504395
    7. '(lambda' → logprob: -9.989216804504395
    8. '(
' → logprob: -11.614216804504395
    9. '(token' → logprob: -12.114216804504395
    10. ' key' → logprob: -12.239216804504395

Token 2352: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.0491134375333786
    2. '=' → logprob: -3.0491135120391846
    3. 'lambda' → logprob: -8.049113273620605
    4. '(lambda' → logprob: -8.549113273620605
    5. '=
' → logprob: -12.674113273620605
    6. '(' → logprob: -13.174113273620605
    7. ' lambda' → logprob: -13.549113273620605
    8. '=.' → logprob: -13.549113273620605
    9. ' =' → logprob: -14.049113273620605
    10. 'operator' → logprob: -14.049113273620605

Token 2353: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3905331492424011
    2. ' e' → logprob: -1.140533208847046
    3. 'edge' → logprob: -6.515532970428467
    4. ' edge' → logprob: -6.890532970428467
    5. 'x' → logprob: -7.015532970428467
    6. ' x' → logprob: -8.390533447265625
    7. 'lambda' → logprob: -11.015533447265625
    8. ' lambda' → logprob: -11.765533447265625
    9. 'c' → logprob: -12.640533447265625
    10. '   ' → logprob: -12.890533447265625

Token 2354: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04143229499459267
    2. 'e' → logprob: -3.4164323806762695
    3. ':e' → logprob: -5.4164323806762695
    4. ' e' → logprob: -6.5414323806762695
    5. ' :' → logprob: -6.7914323806762695
    6. '.' → logprob: -7.9164323806762695
    7. '.e' → logprob: -9.04143238067627
    8. '	e' → logprob: -9.29143238067627
    9. '(e' → logprob: -9.91643238067627
    10. '=e' → logprob: -10.16643238067627

Token 2355: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.014163863845169544
    2. ' e' → logprob: -4.264163970947266
    3. 'lambda' → logprob: -15.139163970947266
    4. '   ' → logprob: -16.389163970947266
    5. '(e' → logprob: -17.639163970947266
    6. ' lambda' → logprob: -18.264163970947266
    7. 'len' → logprob: -18.639163970947266
    8. '	e' → logprob: -19.014163970947266
    9. ' ' → logprob: -20.014163970947266
    10. 'length' → logprob: -20.389163970947266

Token 2356: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -3.5597102396423e-05
    2. '.' → logprob: -10.375035285949707
    3. '.l' → logprob: -12.875035285949707
    4. '.len' → logprob: -14.000035285949707
    5. ':length' → logprob: -15.000035285949707
    6. '.LENGTH' → logprob: -15.625035285949707
    7. 'length' → logprob: -15.750035285949707
    8. '.size' → logprob: -16.625036239624023
    9. ' .' → logprob: -16.625036239624023
    10. '.edge' → logprob: -16.875036239624023

Token 2357: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027448145672678947
    2. ')
' → logprob: -3.7774481773376465
    3. '       ' → logprob: -5.5274481773376465
    4. ',' → logprob: -9.527447700500488
    5. '
' → logprob: -10.027447700500488
    6. ')
' → logprob: -10.527447700500488
    7. '        
' → logprob: -11.027447700500488
    8. '):
' → logprob: -11.652447700500488
    9. '[' → logprob: -12.152447700500488
    10. '   ' → logprob: -12.152447700500488

Token 2358: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1861552596092224
    2. 'total' → logprob: -2.311155319213867
    3. 'uf' → logprob: -2.936155319213867
    4. 'mst' → logprob: -5.436155319213867
    5. 'for' → logprob: -5.686155319213867
    6. '```' → logprob: -6.311155319213867
    7. 'result' → logprob: -6.436155319213867
    8. 'selected' → logprob: -6.561155319213867
    9. 'current' → logprob: -6.561155319213867
    10. 'i' → logprob: -7.311155319213867

Token 2359: ' #' (ID: 1069)
  Prédit: 'mst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mst' → logprob: -0.13690000772476196
    2. 'total' → logprob: -2.136899948120117
    3. '       ' → logprob: -5.261899948120117
    4. 'uf' → logprob: -5.636899948120117
    5. 'result' → logprob: -7.011899948120117
    6. 'selected' → logprob: -8.761899948120117
    7. 'res' → logprob: -10.011899948120117
    8. ' mst' → logprob: -10.761899948120117
    9. 'cost' → logprob: -11.386899948120117
    10. 'length' → logprob: -12.636899948120117

Token 2360: ' Kr' (ID: 11317)
  Prédit: 'mst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mst' → logprob: -0.5583713054656982
    2. 'total' → logprob: -1.0583713054656982
    3. 'uf' → logprob: -2.5583713054656982
    4. 'result' → logprob: -5.933371543884277
    5. 'selected' → logprob: -7.558371543884277
    6. 'res' → logprob: -9.183371543884277
    7. 'added' → logprob: -10.183371543884277
    8. ' mst' → logprob: -11.058371543884277
    9. 'used' → logprob: -11.183371543884277
    10. 'cost' → logprob: -11.308371543884277

Token 2361: 'us' (ID: 385)
  Prédit: 'us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.02281584031879902
    2. 'usk' → logprob: -4.022815704345703
    3. '       ' → logprob: -5.772815704345703
    4. '   ' → logprob: -7.522815704345703
    5. 'u' → logprob: -8.522815704345703
    6. 'usal' → logprob: -8.772815704345703
    7. '           ' → logprob: -8.897815704345703
    8. 's' → logprob: -9.272815704345703
    9. '        ' → logprob: -9.522815704345703
    10. '  ' → logprob: -9.772815704345703

Token 2362: 'kal' (ID: 23466)
  Prédit: 'kal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kal' → logprob: -0.000344044849043712
    2. 'k' → logprob: -8.750344276428223
    3. '       ' → logprob: -10.000344276428223
    4. 'cal' → logprob: -10.000344276428223
    5. '   ' → logprob: -10.625344276428223
    6. '
' → logprob: -10.750344276428223
    7. 'kul' → logprob: -11.125344276428223
    8. ' kal' → logprob: -11.750344276428223
    9. '#' → logprob: -12.500344276428223
    10. '```' → logprob: -12.625344276428223

Token 2363: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6589937806129456
    2. 'uf' → logprob: -1.0339937210083008
    3. 'for' → logprob: -2.658993721008301
    4. ' for' → logprob: -3.658993721008301
    5. ' uf' → logprob: -4.033993721008301
    6. 'result' → logprob: -5.533993721008301
    7. 'mst' → logprob: -5.533993721008301
    8. 'total' → logprob: -6.658993721008301
    9. '   ' → logprob: -7.158993721008301
    10. ' result' → logprob: -7.783993721008301

Token 2364: ' forced' (ID: 19387)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.001594484318047762
    2. 'c' → logprob: -6.876594543457031
    3. 'self' → logprob: -8.751594543457031
    4. 'union' → logprob: -9.126594543457031
    5. 'for' → logprob: -9.376594543457031
    6. ' uf' → logprob: -9.876594543457031
    7. 'selected' → logprob: -10.001594543457031
    8. 'candidate' → logprob: -10.001594543457031
    9. 'mandatory' → logprob: -11.001594543457031
    10. 'result' → logprob: -12.126594543457031

Token 2365: ' hull' (ID: 74912)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uf' → logprob: -1.0281085968017578
    2. '       ' → logprob: -1.4031085968017578
    3. 'for' → logprob: -2.153108596801758
    4. 'edges' → logprob: -2.278108596801758
    5. '_edges' → logprob: -3.028108596801758
    6. 'union' → logprob: -3.278108596801758
    7. ' edges' → logprob: -3.278108596801758
    8. '   ' → logprob: -4.403108596801758
    9. '_union' → logprob: -4.403108596801758
    10. ' for' → logprob: -4.403108596801758

Token 2366: ' edges' (ID: 22569)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.13792504370212555
    2. ' edges' → logprob: -3.012925148010254
    3. 'edges' → logprob: -3.137925148010254
    4. '_' → logprob: -3.887925148010254
    5. '       ' → logprob: -4.387925148010254
    6. ' _' → logprob: -7.012925148010254
    7. '   ' → logprob: -7.137925148010254
    8. '_edge' → logprob: -7.637925148010254
    9. '_
' → logprob: -8.387925148010254
    10. '_union' → logprob: -8.637925148010254

Token 2367: ' union' (ID: 22208)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4396616518497467
    2. 'uf' → logprob: -1.6896616220474243
    3. 'for' → logprob: -2.314661741256714
    4. 'mst' → logprob: -2.939661741256714
    5. 'selected' → logprob: -4.939661502838135
    6. 'result' → logprob: -5.939661502838135
    7. ' for' → logprob: -6.064661502838135
    8. ' uf' → logprob: -6.314661502838135
    9. 'total' → logprob: -6.314661502838135
    10. '
' → logprob: -6.439661502838135

Token 2368: 'ed' (ID: 295)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7632680535316467
    2. 'for' → logprob: -0.8882680535316467
    3. 'uf' → logprob: -2.388267993927002
    4. ' for' → logprob: -4.388267993927002
    5. 'total' → logprob: -4.763267993927002
    6. '
' → logprob: -5.888267993927002
    7. 'result' → logprob: -6.138267993927002
    8. 'selected' → logprob: -6.638267993927002
    9. '```' → logprob: -6.888267993927002
    10. ' uf' → logprob: -7.013267993927002

Token 2369: ' first' (ID: 1577)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5373448133468628
    2. 'for' → logprob: -1.0373448133468628
    3. ' for' → logprob: -3.1623449325561523
    4. '
' → logprob: -4.162344932556152
    5. '```' → logprob: -6.662344932556152
    6. 'total' → logprob: -7.162344932556152
    7. 'result' → logprob: -7.287344932556152
    8. '        
' → logprob: -8.412344932556152
    9. ',' → logprob: -8.912344932556152
    10. 'edges' → logprob: -9.787344932556152

Token 2370: ':
' (ID: 734)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8522002696990967
    2. 'mst' → logprob: -0.8522002696990967
    3. 'total' → logprob: -2.9772002696990967
    4. '       ' → logprob: -3.1022002696990967
    5. 'uf' → logprob: -3.3522002696990967
    6. 'result' → logprob: -4.852200508117676
    7. 'selected' → logprob: -5.102200508117676
    8. 'res' → logprob: -7.602200508117676
    9. 'edges' → logprob: -7.727200508117676
    10. 'connected' → logprob: -7.852200508117676

Token 2371: '       ' (ID: 309)
  Prédit: 'mst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mst' → logprob: -0.5887181758880615
    2. 'uf' → logprob: -1.5887181758880615
    3. '       ' → logprob: -2.3387181758880615
    4. 'total' → logprob: -2.5887181758880615
    5. 'for' → logprob: -2.9637181758880615
    6. 'result' → logprob: -4.713718414306641
    7. 'connected' → logprob: -5.338718414306641
    8. 'selected' → logprob: -6.838718414306641
    9. 'edges' → logprob: -7.338718414306641
    10. 'res' → logprob: -7.338718414306641

Token 2372: ' for' (ID: 395)
  Prédit: 'mst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mst' → logprob: -0.11650679260492325
    2. 'total' → logprob: -2.366506814956665
    3. 'result' → logprob: -5.116506576538086
    4. 'uf' → logprob: -5.491506576538086
    5. 'for' (adapté à ' for') → logprob: -5.866506576538086
    6. 'res' → logprob: -6.241506576538086
    7. '       ' → logprob: -7.491506576538086
    8. 'cost' → logprob: -8.366506576538086
    9. 'selected' → logprob: -9.116506576538086
    10. '   ' → logprob: -9.366506576538086

Token 2373: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0018247656989842653
    2. ' e' → logprob: -6.501824855804443
    3. 'edge' → logprob: -8.126824378967285
    4. 'c' → logprob: -11.626824378967285
    5. '   ' → logprob: -12.251824378967285
    6. ' edge' → logprob: -12.251824378967285
    7. 'candidate' → logprob: -12.751824378967285
    8. '```' → logprob: -12.751824378967285
    9. ' ' → logprob: -14.126824378967285
    10. '`' → logprob: -14.876824378967285

Token 2374: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.048661742359399796
    2. 'in' → logprob: -3.048661708831787
    3. ' ' → logprob: -11.048662185668945
    4. '	in' → logprob: -11.673662185668945
    5. 's' → logprob: -11.923662185668945
    6. 'n' → logprob: -12.173662185668945
    7. '_in' → logprob: -12.173662185668945
    8. '  ' → logprob: -12.423662185668945
    9. '   ' → logprob: -12.423662185668945
    10. '    ' → logprob: -12.861162185668945

Token 2375: ' hull' (ID: 74912)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.003109503537416458
    2. ' candidates' → logprob: -6.003109455108643
    3. 'h' → logprob: -7.628109455108643
    4. 'self' → logprob: -9.3781099319458
    5. '   ' → logprob: -10.6281099319458
    6. 'candidate' → logprob: -11.5031099319458
    7. 'cand' → logprob: -11.7531099319458
    8. ' hull' → logprob: -13.0031099319458
    9. '	c' → logprob: -13.3781099319458
    10. '       ' → logprob: -13.3781099319458

Token 2376: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.00020020268857479095
    2. 'edges' → logprob: -8.875200271606445
    3. '_' → logprob: -10.125200271606445
    4. '_
' → logprob: -12.125200271606445
    5. '_edge' → logprob: -12.500200271606445
    6. '
' → logprob: -13.375200271606445
    7. 's' → logprob: -13.375200271606445
    8. '```' → logprob: -13.500200271606445
    9. '_candidates' → logprob: -13.625200271606445
    10. ')' → logprob: -14.000200271606445

Token 2377: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.110471710562706
    2. ':
' → logprob: -2.360471725463867
    3. '           ' → logprob: -4.735471725463867
    4. '.' → logprob: -6.985471725463867
    5. '.union' → logprob: -8.735471725463867
    6. '       ' → logprob: -8.985471725463867
    7. '   ' → logprob: -9.360471725463867
    8. ':
' → logprob: -10.360471725463867
    9. '[' → logprob: -10.860471725463867
    10. '):' → logprob: -11.110471725463867

Token 2378: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5333611369132996
    2. '           ' → logprob: -0.9083611369132996
    3. ' if' → logprob: -5.533360958099365
    4. '   ' → logprob: -5.908360958099365
    5. '```' → logprob: -6.158360958099365
    6. '
' → logprob: -6.908360958099365
    7. 'if' → logprob: -9.033361434936523
    8. '               ' → logprob: -10.158361434936523
    9. '        
' → logprob: -10.283361434936523
    10. '	       ' → logprob: -10.408361434936523

Token 2379: ' uf' (ID: 35772)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' (adapté à ' uf') → logprob: -0.00013452880375552922
    2. '_' → logprob: -9.750134468078613
    3. 'self' → logprob: -10.250134468078613
    4. '   ' → logprob: -11.125134468078613
    5. 'pass' → logprob: -11.250134468078613
    6. ' uf' → logprob: -11.875134468078613
    7. '
' → logprob: -13.875134468078613
    8. '       ' → logprob: -13.875134468078613
    9. 'if' → logprob: -14.000134468078613
    10. 'ufs' → logprob: -14.125134468078613

Token 2380: '.union' (ID: 140875)
  Prédit: '.union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.union' → logprob: -0.0001835141738411039
    2. '.' → logprob: -8.62518310546875
    3. 'union' → logprob: -13.87518310546875
    4. ' .' → logprob: -14.12518310546875
    5. '.uniform' → logprob: -14.25018310546875
    6. '.uf' → logprob: -14.50018310546875
    7. '	union' → logprob: -15.00018310546875
    8. '.un' → logprob: -15.50018310546875
    9. ').' → logprob: -15.75018310546875
    10. '   ' → logprob: -16.12518310546875

Token 2381: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.00017040544480551034
    2. 'e' → logprob: -8.750170707702637
    3. '(' → logprob: -11.625170707702637
    4. '(
' → logprob: -12.875170707702637
    5. ' e' → logprob: -15.750170707702637
    6. ' (' → logprob: -16.00016975402832
    7. ')e' → logprob: -16.87516975402832
    8. '   ' → logprob: -17.62516975402832
    9. '	e' → logprob: -17.87516975402832
    10. '[e' → logprob: -18.12516975402832

Token 2382: '.u' (ID: 22262)
  Prédit: '.u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.u' → logprob: -0.48048508167266846
    2. '.e' → logprob: -0.9804850816726685
    3. '.' → logprob: -5.480484962463379
    4. 'e' → logprob: -6.355484962463379
    5. 'u' → logprob: -7.730484962463379
    6. '(e' → logprob: -11.605484962463379
    7. ' .' → logprob: -11.980484962463379
    8. ').' → logprob: -12.105484962463379
    9. '(u' → logprob: -12.855484962463379
    10. ',' → logprob: -12.980484962463379

Token 2383: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007525705732405186
    2. ',e' → logprob: -7.5007524490356445
    3. ' ,' → logprob: -8.750752449035645
    4. ',
' → logprob: -10.625752449035645
    5. '           ' → logprob: -11.125752449035645
    6. 'e' → logprob: -13.375752449035645
    7. ' e' → logprob: -15.375752449035645
    8. '`,' → logprob: -16.00075340270996
    9. '```' → logprob: -16.37575340270996
    10. '
' → logprob: -16.75075340270996

Token 2384: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00023846338444855064
    2. ' e' → logprob: -8.375238418579102
    3. '           ' → logprob: -11.875238418579102
    4. '   ' → logprob: -14.500238418579102
    5. '       ' → logprob: -15.750238418579102
    6. '	e' → logprob: -16.7502384185791
    7. '               ' → logprob: -16.8752384185791
    8. '
' → logprob: -17.0002384185791
    9. '                   ' → logprob: -17.1252384185791
    10. '          ' → logprob: -17.6252384185791

Token 2385: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -0.0004257892433088273
    2. 'v' → logprob: -8.000425338745117
    3. '.e' → logprob: -9.500425338745117
    4. '.' → logprob: -11.375425338745117
    5. ',v' → logprob: -13.250425338745117
    6. 'e' → logprob: -13.375425338745117
    7. '	v' → logprob: -15.500425338745117
    8. ' .' → logprob: -15.875425338745117
    9. '   ' → logprob: -16.125425338745117
    10. '       ' → logprob: -16.625425338745117

Token 2386: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014201148878782988
    2. '       ' → logprob: -6.876420021057129
    3. ')
' → logprob: -8.251420021057129
    4. '<|end|>' → logprob: -9.251420021057129
    5. '
' → logprob: -10.751420021057129
    6. ')return' → logprob: -13.376420021057129
    7. '())' → logprob: -13.626420021057129
    8. '()' → logprob: -14.001420021057129
    9. '<|end|>' → logprob: -14.126420021057129
    10. ' )' → logprob: -14.376420021057129

Token 2387: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.588920533657074
    2. '       ' → logprob: -0.838920533657074
    3. '
' → logprob: -4.713920593261719
    4. ' for' → logprob: -6.213920593261719
    5. '```' → logprob: -6.338920593261719
    6. '   ' → logprob: -9.463920593261719
    7. '        
' → logprob: -10.838920593261719
    8. 'result' → logprob: -11.213920593261719
    9. 'total' → logprob: -11.338920593261719
    10. '``' → logprob: -11.963920593261719

Token 2388: ' #' (ID: 1069)
  Prédit: 'mst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mst' → logprob: -0.9009174704551697
    2. 'for' → logprob: -1.1509175300598145
    3. 'total' → logprob: -1.5259175300598145
    4. 'res' → logprob: -3.6509175300598145
    5. '       ' → logprob: -4.0259175300598145
    6. 'result' → logprob: -4.2759175300598145
    7. 'selected' → logprob: -6.9009175300598145
    8. 'added' → logprob: -8.025917053222656
    9. 'cost' → logprob: -8.150917053222656
    10. 'weight' → logprob: -8.650917053222656

Token 2389: ' Add' (ID: 4063)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5636483430862427
    2. 'total' → logprob: -1.0636483430862427
    3. 'mst' → logprob: -3.313648223876953
    4. 'res' → logprob: -3.438648223876953
    5. 'result' → logprob: -4.313648223876953
    6. '       ' → logprob: -6.688648223876953
    7. 'added' → logprob: -6.813648223876953
    8. 'cost' → logprob: -7.563648223876953
    9. 'selected' → logprob: -7.813648223876953
    10. 'length' → logprob: -9.438648223876953

Token 2390: ' candidates' (ID: 18116)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7221282124519348
    2. ' for' → logprob: -0.8471282124519348
    3. ' edges' → logprob: -3.22212815284729
    4. ' e' → logprob: -3.47212815284729
    5. 'e' → logprob: -5.722128391265869
    6. '_edges' → logprob: -5.847128391265869
    7. ' edge' → logprob: -6.222128391265869
    8. '_for' → logprob: -6.597128391265869
    9. 'edges' → logprob: -6.722128391265869
    10. '_' → logprob: -7.222128391265869

Token 2391: ' to' (ID: 316)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3746844232082367
    2. '       ' → logprob: -1.499684453010559
    3. ':' → logprob: -2.9996843338012695
    4. ' for' → logprob: -3.4996843338012695
    5. '   ' → logprob: -5.8746843338012695
    6. '
' → logprob: -5.8746843338012695
    7. '```' → logprob: -7.1246843338012695
    8. '        
' → logprob: -7.3746843338012695
    9. ':
' → logprob: -7.4996843338012695
    10. ' =' → logprob: -8.74968433380127

Token 2392: ' connect' (ID: 4837)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.04831104725599289
    2. ' uf' → logprob: -3.5483109951019287
    3. 'for' → logprob: -5.298311233520508
    4. 'the' → logprob: -5.548311233520508
    5. 'union' → logprob: -5.673311233520508
    6. ' the' → logprob: -5.923311233520508
    7. ' union' → logprob: -7.173311233520508
    8. ' for' → logprob: -7.298311233520508
    9. 'connect' → logprob: -7.298311233520508
    10. '   ' → logprob: -7.798311233520508

Token 2393: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.27465394139289856
    2. 'components' → logprob: -1.8996539115905762
    3. 'the' → logprob: -3.024653911590576
    4. 'remaining' → logprob: -3.649653911590576
    5. ' all' → logprob: -4.899653911590576
    6. 'uf' → logprob: -5.649653911590576
    7. 'edges' → logprob: -6.774653911590576
    8. 'rest' → logprob: -6.774653911590576
    9. ' components' → logprob: -7.899653911590576
    10. ' the' → logprob: -7.899653911590576

Token 2394: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6580370664596558
    2. 'for' → logprob: -1.0330370664596558
    3. 'edges' → logprob: -3.0330371856689453
    4. 'components' → logprob: -3.6580371856689453
    5. ' for' → logprob: -3.9080371856689453
    6. 'nodes' → logprob: -4.033037185668945
    7. ' edges' → logprob: -5.158037185668945
    8. 'points' → logprob: -6.158037185668945
    9. 'vertices' → logprob: -6.533037185668945
    10. '   ' → logprob: -6.658037185668945

Token 2395: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06753599643707275
    2. '       ' → logprob: -3.067535877227783
    3. ' for' → logprob: -4.067535877227783
    4. 'uf' → logprob: -8.067536354064941
    5. 'edges' → logprob: -8.317536354064941
    6. 'while' → logprob: -8.442536354064941
    7. 'components' → logprob: -8.817536354064941
    8. '   ' → logprob: -8.817536354064941
    9. 'connected' → logprob: -8.942536354064941
    10. 'result' → logprob: -9.067536354064941

Token 2396: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07722070813179016
    2. 'result' → logprob: -3.5772206783294678
    3. 'total' → logprob: -4.327220916748047
    4. 'mst' → logprob: -4.577220916748047
    5. '       ' → logprob: -4.827220916748047
    6. 'res' → logprob: -5.202220916748047
    7. 'edges' → logprob: -5.452220916748047
    8. 'connected' → logprob: -6.827220916748047
    9. ' for' → logprob: -6.952220916748047
    10. 'added' → logprob: -6.952220916748047

Token 2397: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.003184959525242448
    2. ' e' → logprob: -5.753184795379639
    3. '   ' → logprob: -12.253185272216797
    4. 'edge' → logprob: -14.003185272216797
    5. '       ' → logprob: -14.253185272216797
    6. '	e' → logprob: -15.003185272216797
    7. '           ' → logprob: -15.128185272216797
    8. '```' → logprob: -15.503185272216797
    9. ' edge' → logprob: -16.628185272216797
    10. 'c' → logprob: -16.878185272216797

Token 2398: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038337405771017075
    2. 'in' → logprob: -3.288337469100952
    3. '   ' → logprob: -9.288337707519531
    4. '           ' → logprob: -9.788337707519531
    5. ' ' → logprob: -10.163337707519531
    6. '       ' → logprob: -10.538337707519531
    7. '    ' → logprob: -11.413337707519531
    8. '.' → logprob: -11.663337707519531
    9. '  ' → logprob: -11.663337707519531
    10. ' if' → logprob: -12.038337707519531

Token 2399: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0005558936391025782
    2. ' candidates' → logprob: -7.500555992126465
    3. 'candidate' → logprob: -13.125555992126465
    4. '   ' → logprob: -15.125555992126465
    5. '_candidates' → logprob: -15.625555992126465
    6. '
' → logprob: -16.00055503845215
    7. ' ' → logprob: -16.87555503845215
    8. 'self' → logprob: -17.00055503845215
    9. 'cand' → logprob: -17.00055503845215
    10. '	c' → logprob: -17.37555503845215

Token 2400: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3782796859741211
    2. ':' → logprob: -2.003279685974121
    3. '   ' → logprob: -2.628279685974121
    4. ':
' → logprob: -2.753279685974121
    5. ' if' → logprob: -3.253279685974121
    6. 'if' → logprob: -6.628279685974121
    7. ',' → logprob: -6.628279685974121
    8. '           ' → logprob: -6.878279685974121
    9. '<|end|>' → logprob: -8.128279685974121
    10. '):
' → logprob: -8.753279685974121

Token 2401: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09789540618658066
    2. '   ' → logprob: -2.597895383834839
    3. ' if' → logprob: -4.097895622253418
    4. 'if' → logprob: -6.472895622253418
    5. '```' → logprob: -7.972895622253418
    6. '           ' → logprob: -8.472895622253418
    7. '
' → logprob: -9.972895622253418
    8. '    
' → logprob: -10.722895622253418
    9. '     ' → logprob: -11.597895622253418
    10. '    ' → logprob: -11.597895622253418

Token 2402: ' uf' (ID: 35772)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0003657362540252507
    2. ' if' → logprob: -8.0003662109375
    3. '       ' → logprob: -10.7503662109375
    4. '           ' → logprob: -11.7503662109375
    5. '   ' → logprob: -14.1253662109375
    6. '```' → logprob: -16.2503662109375
    7. '	if' → logprob: -17.0003662109375
    8. '               ' → logprob: -17.5003662109375
    9. '
' → logprob: -17.6253662109375
    10. 'If' → logprob: -18.5003662109375

Token 2403: '.union' (ID: 140875)
  Prédit: '.union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.union' → logprob: -0.00045081099960952997
    2. '.' → logprob: -7.750450611114502
    3. 'union' → logprob: -11.62545108795166
    4. '.parent' → logprob: -11.87545108795166
    5. '.un' → logprob: -13.62545108795166
    6. '   ' → logprob: -14.00045108795166
    7. ' .' → logprob: -14.62545108795166
    8. '.uniform' → logprob: -14.87545108795166
    9. '_union' → logprob: -15.12545108795166
    10. '	union' → logprob: -15.12545108795166

Token 2404: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -1.2948405128554441e-05
    2. '(' → logprob: -11.50001335144043
    3. '(
' → logprob: -13.25001335144043
    4. 'e' → logprob: -14.50001335144043
    5. ' (' → logprob: -15.00001335144043
    6. '((' → logprob: -16.37501335144043
    7. '[e' → logprob: -18.87501335144043
    8. ' e' → logprob: -18.87501335144043
    9. '   ' → logprob: -19.12501335144043
    10. ')' → logprob: -19.37501335144043

Token 2405: '.u' (ID: 22262)
  Prédit: '.e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.e' → logprob: -0.12591613829135895
    2. 'e' → logprob: -2.7509162425994873
    3. '(e' → logprob: -3.0009162425994873
    4. '.u' → logprob: -5.750916004180908
    5. ' e' → logprob: -7.250916004180908
    6. ',e' → logprob: -8.250916481018066
    7. '.' → logprob: -8.375916481018066
    8. 'u' → logprob: -9.000916481018066
    9. ' .' → logprob: -9.625916481018066
    10. ',' → logprob: -10.375916481018066

Token 2406: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004073178395628929
    2. ',e' → logprob: -6.504073143005371
    3. 'e' → logprob: -6.629073143005371
    4. ' ,' → logprob: -7.504073143005371
    5. '           ' → logprob: -7.629073143005371
    6. '(e' → logprob: -8.754073143005371
    7. ' e' → logprob: -11.129073143005371
    8. ',
' → logprob: -11.254073143005371
    9. '.e' → logprob: -11.504073143005371
    10. '),' → logprob: -12.754073143005371

Token 2407: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00247981958091259
    2. ' e' → logprob: -6.0024800300598145
    3. '           ' → logprob: -12.627479553222656
    4. '
' → logprob: -14.502479553222656
    5. '   ' → logprob: -15.252479553222656
    6. '	e' → logprob: -16.877479553222656
    7. ')e' → logprob: -17.502479553222656
    8. '               ' → logprob: -17.627479553222656
    9. ' ' → logprob: -17.752479553222656
    10. '(e' → logprob: -17.877479553222656

Token 2408: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -0.005642805248498917
    2. 'v' → logprob: -5.255642890930176
    3. ',v' → logprob: -8.755642890930176
    4. '.' → logprob: -9.130642890930176
    5. '.e' → logprob: -9.880642890930176
    6. '.u' → logprob: -10.505642890930176
    7. 'e' → logprob: -11.380642890930176
    8. ',' → logprob: -11.380642890930176
    9. '	v' → logprob: -12.380642890930176
    10. '_v' → logprob: -12.630642890930176

Token 2409: ')

' (ID: 1029)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4379546046257019
    2. '<|end|>' → logprob: -1.1879546642303467
    3. ')' → logprob: -3.6879546642303467
    4. '               ' → logprob: -4.437954425811768
    5. '       ' → logprob: -5.687954425811768
    6. ' if' → logprob: -5.937954425811768
    7. '
' → logprob: -6.312954425811768
    8. ' or' → logprob: -6.937954425811768
    9. ',' → logprob: -7.562954425811768
    10. '<|end|>' → logprob: -7.687954425811768

Token 2410: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1016809493303299
    2. '           ' → logprob: -2.9766809940338135
    3. '
' → logprob: -3.3516809940338135
    4. 'return' → logprob: -5.226680755615234
    5. '<|end|>' → logprob: -6.726680755615234
    6. ' ' → logprob: -7.101680755615234
    7. '        
' → logprob: -7.226680755615234
    8. '   ' → logprob: -7.601680755615234
    9. '        ' → logprob: -8.226680755615234
    10. '               ' → logprob: -8.351680755615234

Token 2411: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1757341623306274
    2. 'return' → logprob: -1.3007341623306274
    3. 'mst' → logprob: -1.9257341623306274
    4. 'total' → logprob: -2.425734043121338
    5. 'if' → logprob: -3.050734043121338
    6. 'connected' → logprob: -3.175734043121338
    7. '#' (adapté à ' #') → logprob: -3.300734043121338
    8. '
' → logprob: -4.050734043121338
    9. 'result' → logprob: -4.550734043121338
    10. 'visited' → logprob: -4.675734043121338

Token 2412: ' Verify' (ID: 44630)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.40500539541244507
    2. 'mst' → logprob: -1.7800054550170898
    3. 'connected' → logprob: -2.78000545501709
    4. 'uf' → logprob: -3.90500545501709
    5. '#' → logprob: -4.03000545501709
    6. 'result' → logprob: -4.15500545501709
    7. 'return' → logprob: -4.53000545501709
    8. '       ' → logprob: -4.78000545501709
    9. 'components' → logprob: -4.78000545501709
    10. 'res' → logprob: -5.53000545501709

Token 2413: ' connectivity' (ID: 45849)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8292428851127625
    2. 'connected' → logprob: -1.0792429447174072
    3. '       ' → logprob: -1.9542429447174072
    4. 'uf' → logprob: -2.8292429447174072
    5. 'all' → logprob: -4.954242706298828
    6. ' if' → logprob: -5.579242706298828
    7. 'self' → logprob: -5.954242706298828
    8. ' connected' → logprob: -6.329242706298828
    9. '#' → logprob: -6.454242706298828
    10. '
' → logprob: -6.954242706298828

Token 2414: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10511250048875809
    2. 'if' → logprob: -2.3551125526428223
    3. 'connected' → logprob: -6.105112552642822
    4. 'for' → logprob: -6.605112552642822
    5. 'all' → logprob: -7.480112552642822
    6. '
' → logprob: -7.855112552642822
    7. 'visited' → logprob: -9.230112075805664
    8. ' if' → logprob: -10.105112075805664
    9. '```' → logprob: -10.105112075805664
    10. '#' → logprob: -10.105112075805664

Token 2415: '       ' (ID: 309)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.7607170939445496
    2. '       ' → logprob: -1.0107171535491943
    3. 'if' → logprob: -2.6357171535491943
    4. 'roots' → logprob: -3.0107171535491943
    5. 'all' → logprob: -4.260716915130615
    6. 'for' → logprob: -4.385716915130615
    7. 'components' → logprob: -5.385716915130615
    8. 'parent' → logprob: -5.635716915130615
    9. '```' → logprob: -5.885716915130615
    10. '
' → logprob: -6.385716915130615

Token 2416: ' roots' (ID: 29895)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.5179318785667419
    2. 'roots' (adapté à ' roots') → logprob: -1.0179319381713867
    3. '       ' → logprob: -3.8929319381713867
    4. 'components' → logprob: -5.517931938171387
    5. 'rep' → logprob: -5.642931938171387
    6. 'parent' → logprob: -5.767931938171387
    7. 'if' → logprob: -5.767931938171387
    8. 'all' → logprob: -6.142931938171387
    9. ' roots' → logprob: -6.392931938171387
    10. 'component' → logprob: -7.142931938171387

Token 2417: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31559354066848755
    2. ' =' → logprob: -1.3155934810638428
    3. '=set' → logprob: -6.065593719482422
    4. '   ' → logprob: -13.190593719482422
    5. 's' → logprob: -13.815593719482422
    6. '_set' → logprob: -13.940593719482422
    7. '```' → logprob: -13.940593719482422
    8. '={' → logprob: -14.065593719482422
    9. '{' → logprob: -14.440593719482422
    10. 'set' → logprob: -14.690593719482422

Token 2418: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.0619727298617363
    2. 'set' → logprob: -2.8119726181030273
    3. ' {' → logprob: -13.311972618103027
    4. ' set' → logprob: -13.561972618103027
    5. '{s' → logprob: -13.686972618103027
    6. '(set' → logprob: -15.311972618103027
    7. '{i' → logprob: -15.436972618103027
    8. '{
' → logprob: -15.561972618103027
    9. '=set' → logprob: -15.936972618103027
    10. '{x' → logprob: -16.186973571777344

Token 2419: 'uf' (ID: 1427)
  Prédit: 'uf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -3.91732100979425e-05
    2. ' uf' → logprob: -10.875039100646973
    3. 'self' → logprob: -11.625039100646973
    4. 'ufs' → logprob: -12.000039100646973
    5. '   ' → logprob: -13.375039100646973
    6. '           ' → logprob: -14.000039100646973
    7. '               ' → logprob: -14.125039100646973
    8. '       ' → logprob: -14.625039100646973
    9. 'ufi' → logprob: -14.625039100646973
    10. '```' → logprob: -15.125039100646973

Token 2420: '.find' (ID: 4231)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.9942559003829956
    2. '.uf' → logprob: -1.2442559003829956
    3. 'e' → logprob: -2.119256019592285
    4. '.find' → logprob: -2.369256019592285
    5. 'self' → logprob: -2.869256019592285
    6. '.' → logprob: -3.494256019592285
    7. '[' → logprob: -4.619256019592285
    8. 'find' → logprob: -5.119256019592285
    9. '[u' → logprob: -5.494256019592285
    10. '[i' → logprob: -5.494256019592285

Token 2421: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.3532957434654236
    2. '(' → logprob: -1.2282958030700684
    3. '(r' → logprob: -6.603295803070068
    4. '0' → logprob: -6.603295803070068
    5. '(e' → logprob: -6.603295803070068
    6. 'i' → logprob: -7.728295803070068
    7. '(self' → logprob: -8.47829532623291
    8. 'e' → logprob: -9.97829532623291
    9. 'r' → logprob: -10.97829532623291
    10. 'self' → logprob: -11.10329532623291

Token 2422: ')' (ID: 8)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0010973571334034204
    2. '(' → logprob: -7.126097202301025
    3. 'for' → logprob: -8.626097679138184
    4. ' for' → logprob: -10.501097679138184
    5. '(p' → logprob: -10.501097679138184
    6. '(self' → logprob: -11.626097679138184
    7. ' (' → logprob: -11.626097679138184
    8. ')' → logprob: -11.626097679138184
    9. '}' → logprob: -12.126097679138184
    10. '(e' → logprob: -12.376097679138184

Token 2423: ' for' (ID: 395)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.24282808601856232
    2. 'for' → logprob: -1.742828130722046
    3. '(' → logprob: -3.742828130722046
    4. '()' → logprob: -4.367827892303467
    5. ' for' → logprob: -5.617827892303467
    6. '0' → logprob: -8.617828369140625
    7. 'i' → logprob: -8.992828369140625
    8. '(u' → logprob: -9.617828369140625
    9. '(f' → logprob: -10.242828369140625
    10. 'uf' → logprob: -10.742828369140625

Token 2424: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06700992584228516
    2. 'range' → logprob: -2.817009925842285
    3. ' range' → logprob: -5.942009925842285
    4. ' i' → logprob: -6.317009925842285
    5. '0' → logprob: -7.442009925842285
    6. '   ' → logprob: -12.192009925842285
    7. ' ' → logprob: -12.442009925842285
    8. 'e' → logprob: -14.942009925842285
    9. '
' → logprob: -15.067009925842285
    10. '_' → logprob: -15.192009925842285

Token 2425: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.636191725730896
    2. 'i' → logprob: -0.886191725730896
    3. 'in' → logprob: -2.8861918449401855
    4. ' range' → logprob: -6.2611918449401855
    5. ' in' → logprob: -7.7611918449401855
    6. ' i' → logprob: -8.511191368103027
    7. '(i' → logprob: -9.261191368103027
    8. '(range' → logprob: -9.886191368103027
    9. '0' → logprob: -14.261191368103027
    10. '(' → logprob: -14.761191368103027

Token 2426: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -6.2729995988775045e-06
    2. ' range' → logprob: -12.000006675720215
    3. '   ' → logprob: -20.1250057220459
    4. '(range' → logprob: -21.0000057220459
    5. '
' → logprob: -21.6250057220459
    6. '	range' → logprob: -21.8750057220459
    7. ' ' → logprob: -22.6250057220459
    8. '  ' → logprob: -23.8750057220459
    9. '0' → logprob: -24.1250057220459
    10. '```' → logprob: -24.8750057220459

Token 2427: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5761326551437378
    2. 'self' → logprob: -0.8261326551437378
    3. '(' → logprob: -9.201132774353027
    4. '0' → logprob: -9.576132774353027
    5. ' self' → logprob: -11.576132774353027
    6. '(i' → logprob: -12.451132774353027
    7. 'range' → logprob: -12.951132774353027
    8. 'i' → logprob: -13.326132774353027
    9. 's' → logprob: -13.576132774353027
    10. '(
' → logprob: -13.826132774353027

Token 2428: '.N' (ID: 4439)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5131704211235046
    2. '.N' → logprob: -1.0131704807281494
    3. 'self' → logprob: -3.2631704807281494
    4. '_N' → logprob: -10.63817024230957
    5. '   ' → logprob: -11.63817024230957
    6. '       ' → logprob: -11.63817024230957
    7. '	N' → logprob: -11.88817024230957
    8. ' self' → logprob: -12.51317024230957
    9. '<N' → logprob: -12.51317024230957
    10. '
' → logprob: -13.13817024230957

Token 2429: ')}
' (ID: 19324)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0010619866661727428
    2. '}
' → logprob: -7.001061916351318
    3. ')}' → logprob: -9.001062393188477
    4. ')' → logprob: -11.251062393188477
    5. ' }' → logprob: -12.001062393188477
    6. '})' → logprob: -12.001062393188477
    7. '}
' → logprob: -14.126062393188477
    8. '       ' → logprob: -14.376062393188477
    9. '}

' → logprob: -15.751062393188477
    10. ')}
' → logprob: -15.876062393188477

Token 2430: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07747139036655426
    2. '       ' → logprob: -3.0774714946746826
    3. '
' → logprob: -4.2024712562561035
    4. ' if' → logprob: -4.3274712562561035
    5. 'return' → logprob: -8.952471733093262
    6. '==' → logprob: -9.202471733093262
    7. '           ' → logprob: -10.577471733093262
    8. '```' → logprob: -10.952471733093262
    9. '        
' → logprob: -11.702471733093262
    10. '	if' → logprob: -12.452471733093262

Token 2431: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.002195813925936818
    2. 'return' → logprob: -6.252195835113525
    3. '       ' → logprob: -8.252195358276367
    4. ' if' → logprob: -12.252195358276367
    5. 'assert' → logprob: -13.877195358276367
    6. '```' → logprob: -14.502195358276367
    7. '
' → logprob: -15.502195358276367
    8. '   ' → logprob: -17.127195358276367
    9. 'If' → logprob: -18.377195358276367
    10. '	if' → logprob: -18.502195358276367

Token 2432: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.20145085453987122
    2. ' len' → logprob: -1.7014508247375488
    3. '(len' → logprob: -10.201451301574707
    4. '	len' → logprob: -15.201451301574707
    5. '=len' → logprob: -17.20145034790039
    6. '[len' → logprob: -17.20145034790039
    7. '
' → logprob: -17.20145034790039
    8. '```' → logprob: -17.57645034790039
    9. ',len' → logprob: -17.95145034790039
    10. '           ' → logprob: -17.95145034790039

Token 2433: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000145137935760431
    2. 'roots' → logprob: -8.875144958496094
    3. '(root' → logprob: -12.750144958496094
    4. '(
' → logprob: -14.125144958496094
    5. ' (' → logprob: -14.750144958496094
    6. '(ROOT' → logprob: -14.750144958496094
    7. ' roots' → logprob: -15.125144958496094
    8. '```' → logprob: -16.125144958496094
    9. '{' → logprob: -16.375144958496094
    10. '({' → logprob: -16.500144958496094

Token 2434: 'roots' (ID: 83507)
  Prédit: 'roots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'roots' → logprob: -0.04859929531812668
    2. '(' → logprob: -3.0485992431640625
    3. ' roots' → logprob: -11.548599243164062
    4. '(root' → logprob: -14.173599243164062
    5. 'root' → logprob: -14.673599243164062
    6. '(
' → logprob: -14.798599243164062
    7. '(ro' → logprob: -15.298599243164062
    8. '{' → logprob: -15.423599243164062
    9. '_ro' → logprob: -15.923599243164062
    10. 'Roots' → logprob: -16.298599243164062

Token 2435: ')' (ID: 8)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.215354323387146
    2. ')' → logprob: -2.5903544425964355
    3. ' >' → logprob: -2.7153544425964355
    4. '==' → logprob: -3.2153544425964355
    5. ' ==' → logprob: -4.8403544425964355
    6. ' !=' → logprob: -6.3403544425964355
    7. '!=' → logprob: -6.8403544425964355
    8. ')>' → logprob: -6.8403544425964355
    9. '```' → logprob: -8.340353965759277
    10. '()>' → logprob: -9.090353965759277

Token 2436: ' !=' (ID: 1666)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5615168809890747
    2. ' >' → logprob: -1.8115168809890747
    3. '==' → logprob: -1.9365168809890747
    4. ' ==' → logprob: -2.311516761779785
    5. ' !=' → logprob: -4.061516761779785
    6. '!=' → logprob: -5.311516761779785
    7. '```' → logprob: -8.186516761779785
    8. ')' → logprob: -8.686516761779785
    9. '[' → logprob: -8.936516761779785
    10. '   ' → logprob: -10.061516761779785

Token 2437: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -14.125004768371582
    4. '           ' → logprob: -16.8750057220459
    5. '```' → logprob: -16.8750057220459
    6. '       ' → logprob: -17.5000057220459
    7. '0' → logprob: -18.7500057220459
    8. '    ' → logprob: -19.0000057220459
    9. '     ' → logprob: -19.1250057220459
    10. '
' → logprob: -19.6250057220459

Token 2438: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.375001907348633
    3. '```' → logprob: -16.625001907348633
    4. '   ' → logprob: -17.500001907348633
    5. '
' → logprob: -18.687501907348633
    6. '2' → logprob: -19.187501907348633
    7. ')' → logprob: -19.437501907348633
    8. '3' → logprob: -19.562501907348633
    9. '0' → logprob: -19.562501907348633
    10. '{' → logprob: -19.625001907348633

Token 2439: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11306912451982498
    2. ':
' → logprob: -2.2380690574645996
    3. ':return' → logprob: -8.738069534301758
    4. '           ' → logprob: -9.988069534301758
    5. '       ' → logprob: -10.738069534301758
    6. '.' → logprob: -11.863069534301758
    7. ',' → logprob: -13.238069534301758
    8. ')' → logprob: -13.238069534301758
    9. ' or' → logprob: -13.363069534301758
    10. ':
' → logprob: -13.738069534301758

Token 2440: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007269674097187817
    2. 'raise' → logprob: -7.75072717666626
    3. 'return' → logprob: -8.625726699829102
    4. '
' → logprob: -10.125726699829102
    5. ' raise' → logprob: -10.500726699829102
    6. '       ' → logprob: -10.875726699829102
    7. '   ' → logprob: -11.500726699829102
    8. '```' → logprob: -12.125726699829102
    9. ' return' → logprob: -12.250726699829102
    10. '	raise' → logprob: -12.875726699829102

Token 2441: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04637299105525017
    2. 'raise' → logprob: -3.296372890472412
    3. '           ' → logprob: -4.796372890472412
    4. '
' → logprob: -11.04637336730957
    5. ' return' → logprob: -12.04637336730957
    6. 'float' → logprob: -12.04637336730957
    7. '```' → logprob: -12.67137336730957
    8. '#' (adapté à ' #') → logprob: -13.04637336730957
    9. ' raise' → logprob: -13.29637336730957
    10. '0' → logprob: -14.42137336730957

Token 2442: ' Not' (ID: 4037)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.31800299882888794
    2. 'raise' → logprob: -1.3180029392242432
    3. '           ' → logprob: -5.443003177642822
    4. '#' → logprob: -7.943003177642822
    5. 'Raise' → logprob: -11.193002700805664
    6. '       ' → logprob: -11.568002700805664
    7. 'raising' → logprob: -12.193002700805664
    8. ' raise' → logprob: -12.193002700805664
    9. 'total' → logprob: -12.568002700805664
    10. '   ' → logprob: -12.568002700805664

Token 2443: ' fully' (ID: 9637)
  Prédit: ' connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' connected' → logprob: -0.10672026872634888
    2. ' possible' → logprob: -2.856720209121704
    3. ' feasible' → logprob: -4.106720447540283
    4. ' return' → logprob: -4.606720447540283
    5. 'connected' → logprob: -5.106720447540283
    6. '
' → logprob: -6.231720447540283
    7. ' all' → logprob: -6.356720447540283
    8. 'possible' → logprob: -6.481720447540283
    9. '#' → logprob: -6.856720447540283
    10. ' raise' → logprob: -7.231720447540283

Token 2444: ' connected' (ID: 12079)
  Prédit: 'connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connected' → logprob: -0.03815670683979988
    2. ' connected' → logprob: -3.288156747817993
    3. '_connected' → logprob: -9.663156509399414
    4. '-connected' → logprob: -11.163156509399414
    5. 'connect' → logprob: -11.288156509399414
    6. '
' → logprob: -11.538156509399414
    7. 'covered' → logprob: -11.913156509399414
    8. 'Connected' → logprob: -12.663156509399414
    9. '   ' → logprob: -13.288156509399414
    10. '       ' → logprob: -14.038156509399414

Token 2445: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019248466938734055
    2. 'raise' → logprob: -4.3942484855651855
    3. 'return' → logprob: -5.3942484855651855
    4. '
' → logprob: -7.3942484855651855
    5. ':
' → logprob: -7.5192484855651855
    6. ' raise' → logprob: -8.019248008728027
    7. '       ' → logprob: -8.144248008728027
    8. ' return' → logprob: -9.144248008728027
    9. ':' → logprob: -9.269248008728027
    10. ',' → logprob: -9.894248008728027

Token 2446: ' need' (ID: 1309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2510066628456116
    2. '           ' → logprob: -1.8760066032409668
    3. 'raise' → logprob: -3.001006603240967
    4. ' return' → logprob: -4.126006603240967
    5. ' raise' → logprob: -6.001006603240967
    6. '#' → logprob: -8.126007080078125
    7. '   ' → logprob: -9.376007080078125
    8. '       ' → logprob: -11.251007080078125
    9. ' #' → logprob: -12.251007080078125
    10. '	raise' → logprob: -12.251007080078125

Token 2447: ' to' (ID: 316)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.4636695086956024
    2. 'to' → logprob: -1.7136695384979248
    3. ' to' → logprob: -2.213669538497925
    4. 'return' → logprob: -3.088669538497925
    5. ' raise' → logprob: -3.713669538497925
    6. '#' → logprob: -5.713669300079346
    7. '           ' → logprob: -5.713669300079346
    8. ' return' → logprob: -6.463669300079346
    9. '       ' → logprob: -6.838669300079346
    10. '
' → logprob: -7.713669300079346

Token 2448: ' add' (ID: 1147)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3898788094520569
    2. 'raise' → logprob: -1.139878749847412
    3. '#' → logprob: -6.514878749847412
    4. 'add' → logprob: -6.639878749847412
    5. 'for' → logprob: -8.63987922668457
    6. 'import' → logprob: -11.51487922668457
    7. 'continue' → logprob: -12.13987922668457
    8. 'construct' → logprob: -12.88987922668457
    9. 'consider' → logprob: -12.88987922668457
    10. 'extend' → logprob: -13.01487922668457

Token 2449: ' inside' (ID: 6772)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3435641527175903
    2. 'return' → logprob: -1.9685641527175903
    3. ' for' → logprob: -2.218564033508301
    4. ' more' → logprob: -2.218564033508301
    5. ' edges' → logprob: -2.593564033508301
    6. 'additional' → logprob: -2.593564033508301
    7. '#' → logprob: -2.718564033508301
    8. 'edges' → logprob: -2.843564033508301
    9. 'more' → logprob: -3.093564033508301
    10. 'remaining' → logprob: -3.968564033508301

Token 2450: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.18739959597587585
    2. ' edges' → logprob: -2.4373996257781982
    3. '_edges' → logprob: -2.5623996257781982
    4. '```' → logprob: -6.812399387359619
    5. '
' → logprob: -7.062399387359619
    6. 'polygon' → logprob: -7.312399387359619
    7. 'original' → logprob: -7.812399387359619
    8. 's' → logprob: -8.187399864196777
    9. '#' → logprob: -8.187399864196777
    10. 'for' → logprob: -8.437399864196777

Token 2451: ' ignoring' (ID: 68244)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34041789174079895
    2. '
' → logprob: -1.7154178619384766
    3. '           ' → logprob: -2.3404178619384766
    4. ',' → logprob: -5.465417861938477
    5. ':' → logprob: -6.465417861938477
    6. ':
' → logprob: -6.465417861938477
    7. '#' → logprob: -6.840417861938477
    8. '        
' → logprob: -7.340417861938477
    9. ' edges' → logprob: -7.465417861938477
    10. '
' → logprob: -8.215417861938477

Token 2452: ' polygon' (ID: 65081)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.007297667674720287
    2. '#' → logprob: -5.882297515869141
    3. 'length' → logprob: -6.382297515869141
    4. ' hull' → logprob: -6.507297515869141
    5. 'boundary' → logprob: -7.257297515869141
    6. 'self' → logprob: -8.75729751586914
    7. '```' → logprob: -9.50729751586914
    8. 'outside' → logprob: -9.50729751586914
    9. 'c' → logprob: -9.75729751586914
    10. 'original' → logprob: -10.13229751586914

Token 2453: ' condition' (ID: 7060)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7829877734184265
    2. '
' → logprob: -0.9079877734184265
    3. ':
' → logprob: -2.6579878330230713
    4. '.
' → logprob: -3.9079878330230713
    5. ':' → logprob: -4.407987594604492
    6. '           ' → logprob: -4.657987594604492
    7. '```' → logprob: -5.157987594604492
    8. '.' → logprob: -5.282987594604492
    9. ',' → logprob: -5.657987594604492
    10. '#' → logprob: -5.782987594604492

Token 2454: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21084214746952057
    2. '       ' → logprob: -1.8358421325683594
    3. '#' → logprob: -4.460842132568359
    4. '```' → logprob: -4.710842132568359
    5. 'edges' → logprob: -6.085842132568359
    6. '        
' → logprob: -6.210842132568359
    7. 'for' → logprob: -6.460842132568359
    8. 'return' → logprob: -6.960842132568359
    9. '           ' → logprob: -7.085842132568359
    10. '
' → logprob: -7.585842132568359

Token 2455: ' or' (ID: 503)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5415613055229187
    2. '       ' → logprob: -1.4165613651275635
    3. 'for' → logprob: -2.5415613651275635
    4. '           ' → logprob: -2.6665613651275635
    5. 'edges' → logprob: -4.166561126708984
    6. 'return' → logprob: -5.541561126708984
    7. ' for' → logprob: -5.541561126708984
    8. ' edges' → logprob: -7.291561126708984
    9. '
' → logprob: -7.416561126708984
    10. 'available' → logprob: -8.041561126708984

Token 2456: ' fail' (ID: 7111)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3897837698459625
    2. 'return' → logprob: -1.3897837400436401
    3. 'raise' → logprob: -3.1397838592529297
    4. 'pass' → logprob: -4.13978385925293
    5. 'for' → logprob: -5.51478385925293
    6. 'additional' → logprob: -5.88978385925293
    7. 'c' → logprob: -6.38978385925293
    8. 'edges' → logprob: -6.38978385925293
    9. 'possible' → logprob: -6.51478385925293
    10. ' return' → logprob: -7.26478385925293

Token 2457: '
' (ID: 198)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.9731782674789429
    2. '           ' → logprob: -1.4731782674789429
    3. '       ' → logprob: -1.7231782674789429
    4. '#' → logprob: -1.7231782674789429
    5. 'return' → logprob: -4.098178386688232
    6. '
' → logprob: -5.348178386688232
    7. '```' → logprob: -5.348178386688232
    8. ':
' → logprob: -5.973178386688232
    9. '               ' → logprob: -6.848178386688232
    10. ':' → logprob: -6.973178386688232

Token 2458: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21032632887363434
    2. '       ' → logprob: -1.7103263139724731
    3. 'raise' → logprob: -5.210326194763184
    4. '
' → logprob: -6.835326194763184
    5. 'return' → logprob: -7.085326194763184
    6. ' raise' → logprob: -7.460326194763184
    7. '               ' → logprob: -7.460326194763184
    8. '   ' → logprob: -8.960326194763184
    9. '```' → logprob: -9.085326194763184
    10. ' return' → logprob: -10.835326194763184

Token 2459: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.700890302658081
    2. '#' (adapté à ' #') → logprob: -1.325890302658081
    3. '           ' → logprob: -2.700890302658081
    4. 'return' → logprob: -3.075890302658081
    5. 'edges' → logprob: -3.325890302658081
    6. 'for' → logprob: -3.450890302658081
    7. 'raise' → logprob: -4.20089054107666
    8. 'possible' → logprob: -4.32589054107666
    9. 'all' → logprob: -5.20089054107666
    10. 'additional' → logprob: -5.20089054107666

Token 2460: ' but' (ID: 889)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5020743012428284
    2. '       ' → logprob: -1.2520742416381836
    3. '           ' → logprob: -3.5020742416381836
    4. 'return' → logprob: -3.5020742416381836
    5. '
' → logprob: -4.252074241638184
    6. 'possible' → logprob: -4.877074241638184
    7. 'edges' → logprob: -4.877074241638184
    8. 'raise' → logprob: -5.127074241638184
    9. 'for' → logprob: -5.127074241638184
    10. '   ' → logprob: -7.127074241638184

Token 2461: ' problem' (ID: 4792)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.10058685392141342
    2. 'return' → logprob: -2.4755868911743164
    3. 'pass' → logprob: -4.725586891174316
    4. 'for' → logprob: -6.725586891174316
    5. '       ' → logprob: -7.350586891174316
    6. 'uf' → logprob: -7.600586891174316
    7. '           ' → logprob: -8.975586891174316
    8. 'raise' → logprob: -9.475586891174316
    9. '
' → logprob: -9.725586891174316
    10. 'continue' → logprob: -10.475586891174316

Token 2462: ' guarantees' (ID: 49460)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.6851325035095215
    2. ':' → logprob: -1.6851325035095215
    3. ' states' → logprob: -2.0601325035095215
    4. '
' → logprob: -2.5601325035095215
    5. ' does' → logprob: -2.5601325035095215
    6. '.' → logprob: -2.9351325035095215
    7. ' continues' → logprob: -3.8101325035095215
    8. ' may' → logprob: -3.9351325035095215
    9. '   ' → logprob: -4.0601325035095215
    10. ' constraints' → logprob: -4.0601325035095215

Token 2463: ' connectivity' (ID: 45849)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7488638758659363
    2. '       ' → logprob: -1.748863935470581
    3. 'return' → logprob: -1.998863935470581
    4. ' for' → logprob: -2.498863935470581
    5. ' return' → logprob: -2.873863935470581
    6. 'for' → logprob: -3.873863935470581
    7. '           ' → logprob: -4.373863697052002
    8. '```' → logprob: -4.498863697052002
    9. 'continue' → logprob: -5.373863697052002
    10. '
' → logprob: -5.373863697052002

Token 2464: ' by' (ID: 656)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.055884599685669
    2. 'total' → logprob: -1.180884599685669
    3. 'return' → logprob: -1.930884599685669
    4. '       ' → logprob: -2.055884599685669
    5. 'raise' → logprob: -2.930884599685669
    6. 'edges' → logprob: -5.18088436126709
    7. '```' → logprob: -6.05588436126709
    8. '           ' → logprob: -6.55588436126709
    9. 'pass' → logprob: -6.68088436126709
    10. '
' → logprob: -6.68088436126709

Token 2465: ' original' (ID: 4756)
  Prédit: 'construction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'construction' → logprob: -0.8812525272369385
    2. 'original' → logprob: -1.6312525272369385
    3. 'problem' → logprob: -2.2562525272369385
    4. 'union' → logprob: -2.8812525272369385
    5. 'adding' → logprob: -3.1312525272369385
    6. 'the' → logprob: -3.1312525272369385
    7. 'including' → logprob: -3.6312525272369385
    8. 'construct' → logprob: -3.8812525272369385
    9. 'existing' → logprob: -4.006252288818359
    10. 'initial' → logprob: -4.131252288818359

Token 2466: ' edges' (ID: 22569)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.08541949838399887
    2. '
' → logprob: -3.7104194164276123
    3. 'edges' → logprob: -3.7104194164276123
    4. '#' → logprob: -4.085419654846191
    5. '_' → logprob: -5.710419654846191
    6. ' edges' → logprob: -5.710419654846191
    7. '_
' → logprob: -6.210419654846191
    8. '       ' → logprob: -6.835419654846191
    9. '```' → logprob: -6.835419654846191
    10. '_original' → logprob: -6.960419654846191

Token 2467: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8934439420700073
    2. '#' → logprob: -1.7684439420700073
    3. 'return' → logprob: -1.7684439420700073
    4. 'edges' → logprob: -2.393444061279297
    5. 'raise' → logprob: -2.893444061279297
    6. '           ' → logprob: -3.143444061279297
    7. 'for' → logprob: -3.893444061279297
    8. '
' → logprob: -4.143444061279297
    9. '```' → logprob: -4.393444061279297
    10. ' edges' → logprob: -6.268444061279297

Token 2468: ' so' (ID: 813)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.09804262220859528
    2. 'return' → logprob: -2.4730427265167236
    3. '       ' → logprob: -5.3480424880981445
    4. '           ' → logprob: -6.9730424880981445
    5. '```' → logprob: -7.2230424880981445
    6. '
' → logprob: -7.3480424880981445
    7. 'continue' → logprob: -7.5980424880981445
    8. ' return' → logprob: -7.5980424880981445
    9. 'pass' → logprob: -7.8480424880981445
    10. ' #' → logprob: -8.723042488098145

Token 2469: ' skip' (ID: 16677)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6285409927368164
    2. 'pass' → logprob: -1.0035409927368164
    3. '#' → logprob: -3.0035409927368164
    4. 'for' → logprob: -3.1285409927368164
    5. '           ' → logprob: -5.503540992736816
    6. 'raise' → logprob: -7.003540992736816
    7. 'continue' → logprob: -7.128540992736816
    8. '       ' → logprob: -8.253540992736816
    9. ' pass' → logprob: -8.753540992736816
    10. '```' → logprob: -8.753540992736816

Token 2470: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02109355479478836
    2. 'return' → logprob: -4.521093368530273
    3. '           ' → logprob: -5.521093368530273
    4. '<|end|>' → logprob: -6.521093368530273
    5. '
' → logprob: -6.646093368530273
    6. ' return' → logprob: -7.021093368530273
    7. '```' → logprob: -7.271093368530273
    8. '.' → logprob: -7.396093368530273
    9. '#' → logprob: -7.646093368530273
    10. ',' → logprob: -8.896093368530273

Token 2471: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10995205491781235
    2. 'return' → logprob: -2.609951972961426
    3. '
' → logprob: -3.609951972961426
    4. '```' → logprob: -5.984951972961426
    5. '#' → logprob: -7.984951972961426
    6. ' return' → logprob: -8.984951972961426
    7. '           ' → logprob: -9.359951972961426
    8. '        
' → logprob: -9.484951972961426
    9. 'raise' → logprob: -9.609951972961426
    10. '   ' → logprob: -9.859951972961426

Token 2472: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20909744501113892
    2. '           ' → logprob: -2.834097385406494
    3. 'pass' → logprob: -2.959097385406494
    4. ' return' → logprob: -3.584097385406494
    5. ' pass' → logprob: -3.834097385406494
    6. '#' (adapté à ' #') → logprob: -4.459097385406494
    7. '       ' → logprob: -4.459097385406494
    8. 'raise' → logprob: -6.084097385406494
    9. '
' → logprob: -6.209097385406494
    10. '```' → logprob: -7.209097385406494

Token 2473: ' But' (ID: 3072)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.7195270657539368
    2. 'return' → logprob: -0.8445270657539368
    3. '#' → logprob: -2.969527006149292
    4. '       ' → logprob: -3.969527006149292
    5. 'raise' → logprob: -5.219527244567871
    6. 'pass' → logprob: -5.594527244567871
    7. 'edges' → logprob: -7.219527244567871
    8. 'result' → logprob: -7.719527244567871
    9. 'root' → logprob: -7.719527244567871
    10. 'remaining' → logprob: -8.094527244567871

Token 2474: ' this' (ID: 495)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5216242671012878
    2. 'return' → logprob: -1.3966243267059326
    3. 'pass' → logprob: -2.0216243267059326
    4. ' return' → logprob: -4.8966240882873535
    5. ' pass' → logprob: -5.3966240882873535
    6. 'uf' → logprob: -5.7716240882873535
    7. '           ' → logprob: -5.8966240882873535
    8. 'for' → logprob: -6.0216240882873535
    9. 'continue' → logprob: -6.1466240882873535
    10. '       ' → logprob: -6.5216240882873535

Token 2475: ' should' (ID: 1757)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5320706963539124
    2. '#' → logprob: -2.5320706367492676
    3. '.' → logprob: -2.6570706367492676
    4. ' is' → logprob: -2.9070706367492676
    5. ' return' → logprob: -2.9070706367492676
    6. ':' → logprob: -3.1570706367492676
    7. ':return' → logprob: -4.157070636749268
    8. 'is' → logprob: -4.532070636749268
    9. '.uf' → logprob: -4.532070636749268
    10. '
' → logprob: -4.782070636749268

Token 2476: ' not' (ID: 625)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.997183620929718
    2. ' return' → logprob: -1.4971835613250732
    3. ' not' → logprob: -1.7471835613250732
    4. 'not' → logprob: -2.2471835613250732
    5. 'continue' → logprob: -2.4971835613250732
    6. ' continue' → logprob: -3.8721835613250732
    7. 'raise' → logprob: -5.122183799743652
    8. '           ' → logprob: -5.247183799743652
    9. ' be' → logprob: -5.372183799743652
    10. ' raise' → logprob: -5.872183799743652

Token 2477: ' happen' (ID: 5659)
  Prédit: ' happen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' happen' → logprob: -0.5310806632041931
    2. ' raise' → logprob: -2.031080722808838
    3. 'raise' → logprob: -2.031080722808838
    4. ' return' → logprob: -3.031080722808838
    5. '```' → logprob: -3.406080722808838
    6. '
' → logprob: -3.656080722808838
    7. 'return' → logprob: -3.656080722808838
    8. 'occur' → logprob: -5.781080722808838
    9. 'h' → logprob: -6.156080722808838
    10. ' occur' → logprob: -6.406080722808838

Token 2478: ' since' (ID: 3630)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0052564069628715515
    2. 'return' → logprob: -6.380256175994873
    3. '           ' → logprob: -6.380256175994873
    4. '
' → logprob: -7.255256175994873
    5. '.' → logprob: -7.755256175994873
    6. '```' → logprob: -8.505256652832031
    7. ',' → logprob: -8.755256652832031
    8. ')' → logprob: -9.255256652832031
    9. '<|end|>' → logprob: -9.505256652832031
    10. ' return' → logprob: -10.505256652832031

Token 2479: ' initial' (ID: 4871)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.3323536515235901
    2. 'True' → logprob: -1.9573535919189453
    3. 'all' → logprob: -2.7073535919189453
    4. '#' → logprob: -3.9573535919189453
    5. 'for' → logprob: -3.9573535919189453
    6. 'the' → logprob: -4.332353591918945
    7. 'self' → logprob: -4.457353591918945
    8. 'len' → logprob: -5.332353591918945
    9. 'False' → logprob: -5.832353591918945
    10. '
' → logprob: -7.082353591918945

Token 2480: ' graph' (ID: 7465)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.019573381170630455
    2. 'edges' → logprob: -4.519573211669922
    3. 'self' → logprob: -6.519573211669922
    4. '```' → logprob: -6.519573211669922
    5. ' edges' → logprob: -6.644573211669922
    6. ' uf' → logprob: -6.769573211669922
    7. 'union' → logprob: -7.394573211669922
    8. '.uf' → logprob: -7.519573211669922
    9. '#' → logprob: -7.769573211669922
    10. 'for' → logprob: -8.019573211669922

Token 2481: ' is' (ID: 382)
  Prédit: '.union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.union' → logprob: -0.41152840852737427
    2. '.' → logprob: -2.6615283489227295
    3. ' is' → logprob: -3.1615283489227295
    4. '       ' → logprob: -3.1615283489227295
    5. '.parent' → logprob: -3.2865283489227295
    6. 'union' → logprob: -3.5365283489227295
    7. '           ' → logprob: -4.411528587341309
    8. '.uf' → logprob: -4.536528587341309
    9. '   ' → logprob: -4.661528587341309
    10. 'is' → logprob: -4.661528587341309

Token 2482: ' connected' (ID: 12079)
  Prédit: 'connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connected' → logprob: -0.0009548133239150047
    2. 'already' → logprob: -7.625954627990723
    3. 'union' → logprob: -8.500954627990723
    4. 'fully' → logprob: -8.625954627990723
    5. ' connected' → logprob: -9.875954627990723
    6. 'initial' → logprob: -11.375954627990723
    7. '   ' → logprob: -12.250954627990723
    8. 'always' → logprob: -12.750954627990723
    9. '```' → logprob: -12.875954627990723
    10. 'gu' → logprob: -13.250954627990723

Token 2483: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02110837958753109
    2. '
' → logprob: -4.521108150482178
    3. '.' → logprob: -5.396108150482178
    4. '<|end|>' → logprob: -5.771108150482178
    5. '           ' → logprob: -7.021108150482178
    6. ',' → logprob: -7.646108150482178
    7. '...' → logprob: -8.396108627319336
    8. '```' → logprob: -8.521108627319336
    9. ')' → logprob: -8.771108627319336
    10. '#' → logprob: -9.146108627319336

Token 2484: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020192403346300125
    2. '
' → logprob: -4.145192623138428
    3. 'return' → logprob: -6.145192623138428
    4. '```' → logprob: -6.520192623138428
    5. '           ' → logprob: -8.77019214630127
    6. '        
' → logprob: -9.02019214630127
    7. '<|end|>' → logprob: -9.64519214630127
    8. '#' → logprob: -10.14519214630127
    9. ' return' → logprob: -10.27019214630127
    10. ')' → logprob: -10.52019214630127

Token 2485: ' pass' (ID: 1853)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4944727420806885
    2. '       ' → logprob: -1.9944727420806885
    3. 'raise' → logprob: -2.2444727420806885
    4. 'total' → logprob: -2.6194727420806885
    5. '#' → logprob: -3.2444727420806885
    6. '           ' → logprob: -3.8694727420806885
    7. 'pass' (adapté à ' pass') → logprob: -5.369472503662109
    8. '```' → logprob: -5.744472503662109
    9. '
' → logprob: -6.369472503662109
    10. 'edges' → logprob: -6.369472503662109

Token 2486: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3644048571586609
    2. '
' → logprob: -1.8644049167633057
    3. 'total' → logprob: -1.9894049167633057
    4. 'return' → logprob: -5.239404678344727
    5. '#' → logprob: -5.489404678344727
    6. '```' → logprob: -5.864404678344727
    7. ' total' → logprob: -7.364404678344727
    8. '        
' → logprob: -8.614404678344727
    9. 'result' → logprob: -9.114404678344727
    10. 'weight' → logprob: -9.489404678344727

Token 2487: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6440299153327942
    2. '       ' → logprob: -0.7690299153327942
    3. 'total' → logprob: -5.2690300941467285
    4. '
' → logprob: -5.6440300941467285
    5. '```' → logprob: -6.2690300941467285
    6. '#' → logprob: -8.51902961730957
    7. 'result' → logprob: -8.64402961730957
    8. '<|end|>' → logprob: -8.89402961730957
    9. '   ' → logprob: -9.64402961730957
    10. ' return' → logprob: -9.89402961730957

Token 2488: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.008042252622544765
    2. 'return' → logprob: -5.008042335510254
    3. '       ' → logprob: -7.383042335510254
    4. '#' (adapté à ' #') → logprob: -7.633042335510254
    5. 'length' → logprob: -9.133042335510254
    6. 'result' → logprob: -9.758042335510254
    7. 'res' → logprob: -10.633042335510254
    8. '
' → logprob: -11.508042335510254
    9. 'cost' → logprob: -12.133042335510254
    10. 'distance' → logprob: -12.383042335510254

Token 2489: ' Step' (ID: 22291)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0044650123454630375
    2. 'return' → logprob: -5.879465103149414
    3. '#' → logprob: -7.004465103149414
    4. 'result' → logprob: -7.754465103149414
    5. '       ' → logprob: -8.254465103149414
    6. 'res' → logprob: -10.379465103149414
    7. 'length' → logprob: -11.754465103149414
    8. 'cost' → logprob: -11.754465103149414
    9. ' total' → logprob: -11.879465103149414
    10. 'Return' → logprob: -13.629465103149414

Token 2490: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.28870487213134766
    2. ' ' → logprob: -1.9137048721313477
    3. '       ' → logprob: -2.4137048721313477
    4. '   ' → logprob: -5.413704872131348
    5. '8' → logprob: -5.913704872131348
    6. '1' → logprob: -6.163704872131348
    7. '#' → logprob: -7.163704872131348
    8. ':' → logprob: -7.288704872131348
    9. '9' → logprob: -7.663704872131348
    10. '5' → logprob: -7.788704872131348

Token 2491: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.008485502563416958
    2. 'return' → logprob: -6.008485317230225
    3. '6' → logprob: -6.258485317230225
    4. '       ' → logprob: -7.008485317230225
    5. ' ' → logprob: -7.383485317230225
    6. '8' → logprob: -7.508485317230225
    7. ':' → logprob: -7.633485317230225
    8. '   ' → logprob: -7.633485317230225
    9. '1' → logprob: -7.758485317230225
    10. '5' → logprob: -8.758485794067383

Token 2492: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13427121937274933
    2. 'total' → logprob: -2.1342711448669434
    3. '
' → logprob: -5.134271144866943
    4. ' total' → logprob: -6.759271144866943
    5. ':' → logprob: -9.509271621704102
    6. '#' → logprob: -9.884271621704102
    7. '```' → logprob: -10.134271621704102
    8. '   ' → logprob: -10.759271621704102
    9. 'result' → logprob: -11.009271621704102
    10. '
' → logprob: -11.259271621704102

Token 2493: ' Now' (ID: 6549)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0005315870512276888
    2. '#' → logprob: -8.375531196594238
    3. 'result' → logprob: -8.625531196594238
    4. 'return' → logprob: -9.875531196594238
    5. ' total' → logprob: -10.500531196594238
    6. 'mst' → logprob: -11.125531196594238
    7. 'res' → logprob: -11.250531196594238
    8. 'cost' → logprob: -12.500531196594238
    9. 'selected' → logprob: -12.750531196594238
    10. '   ' → logprob: -13.000531196594238

Token 2494: ' find' (ID: 1646)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.001966577721759677
    2. '       ' → logprob: -7.00196647644043
    3. '#' → logprob: -8.00196647644043
    4. ' total' → logprob: -8.12696647644043
    5. 'result' → logprob: -8.62696647644043
    6. 'selected' → logprob: -9.25196647644043
    7. 'return' → logprob: -9.87696647644043
    8. 'cost' → logprob: -10.12696647644043
    9. 'mst' → logprob: -10.75196647644043
    10. 'min' → logprob: -11.37696647644043

Token 2495: ' MST' (ID: 123058)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.007880822755396366
    2. ' total' → logprob: -5.507880687713623
    3. 'mst' → logprob: -6.257880687713623
    4. 'min' → logprob: -7.382880687713623
    5. 'result' → logprob: -7.757880687713623
    6. 'minimal' → logprob: -8.507881164550781
    7. 'the' → logprob: -8.632881164550781
    8. 'selected' → logprob: -8.632881164550781
    9. 'minimum' → logprob: -9.132881164550781
    10. '#' → logprob: -10.257881164550781

Token 2496: ' that' (ID: 484)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.6746353507041931
    2. '       ' → logprob: -1.049635410308838
    3. 'uf' → logprob: -3.174635410308838
    4. 'mst' → logprob: -3.174635410308838
    5. 'total' → logprob: -3.549635410308838
    6. ' edges' → logprob: -5.174635410308838
    7. 'result' → logprob: -5.299635410308838
    8. '
' → logprob: -5.549635410308838
    9. 'import' → logprob: -5.674635410308838
    10. '_edges' → logprob: -6.424635410308838

Token 2497: ' includes' (ID: 6664)
  Prédit: 'includes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'includes' → logprob: -0.23629018664360046
    2. ' includes' → logprob: -2.486290216445923
    3. '#' → logprob: -3.236290216445923
    4. 'edges' → logprob: -4.111289978027344
    5. 'sp' → logprob: -4.236289978027344
    6. 'min' → logprob: -4.736289978027344
    7. 'uses' → logprob: -4.736289978027344
    8. 'returns' → logprob: -5.111289978027344
    9. '       ' → logprob: -5.361289978027344
    10. 'selected' → logprob: -5.736289978027344

Token 2498: ' hull' (ID: 74912)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.08626025170087814
    2. 'h' → logprob: -2.8362603187561035
    3. 'the' → logprob: -4.3362603187561035
    4. ' all' → logprob: -4.5862603187561035
    5. '#' → logprob: -7.8362603187561035
    6. ' the' → logprob: -9.586259841918945
    7. '```' → logprob: -9.836259841918945
    8. 'both' → logprob: -9.961259841918945
    9. '   ' → logprob: -10.336259841918945
    10. '
' → logprob: -10.711259841918945

Token 2499: ' edges' (ID: 22569)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.006661027204245329
    2. '       ' → logprob: -5.3816609382629395
    3. ' edges' → logprob: -6.8816609382629395
    4. '
' → logprob: -8.381661415100098
    5. '_' → logprob: -8.381661415100098
    6. '```' → logprob: -9.006661415100098
    7. 'edges' → logprob: -9.256661415100098
    8. '#' → logprob: -9.256661415100098
    9. '   ' → logprob: -10.131661415100098
    10. '_edge' → logprob: -10.131661415100098

Token 2500: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03673224151134491
    2. 'edges' → logprob: -4.786732196807861
    3. 'mst' → logprob: -5.161732196807861
    4. '
' → logprob: -5.161732196807861
    5. 'selected' → logprob: -5.286732196807861
    6. '```' → logprob: -6.036732196807861
    7. '#' → logprob: -6.161732196807861
    8. ' edges' → logprob: -6.161732196807861
    9. 'total' → logprob: -6.411732196807861
    10. '        
' → logprob: -7.661732196807861

Token 2501: ' stay' (ID: 5092)
  Prédit: 'connect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'connect' → logprob: -1.3254320621490479
    2. 'all' → logprob: -1.8254320621490479
    3. 'additional' → logprob: -2.200432062149048
    4. 'min' → logprob: -2.825432062149048
    5. ' connects' → logprob: -3.075432062149048
    6. 'other' → logprob: -3.075432062149048
    7. 'includes' → logprob: -3.200432062149048
    8. ' all' → logprob: -3.450432062149048
    9. 'adds' → logprob: -3.450432062149048
    10. 'uses' → logprob: -3.575432062149048

Token 2502: ' inside' (ID: 6772)
  Prédit: 'within'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'within' → logprob: -0.0832737386226654
    2. 'inside' → logprob: -3.2082736492156982
    3. ' within' → logprob: -3.8332736492156982
    4. '       ' → logprob: -4.833273887634277
    5. '   ' → logprob: -6.083273887634277
    6. 'compatible' → logprob: -6.333273887634277
    7. 'strict' → logprob: -6.583273887634277
    8. 'connected' → logprob: -7.333273887634277
    9. 'consistent' → logprob: -7.333273887634277
    10. ' inside' → logprob: -7.583273887634277

Token 2503: ' polygon' (ID: 65081)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2036914825439453
    2. '#' → logprob: -2.3286914825439453
    3. 'edges' → logprob: -3.3286914825439453
    4. 'polygon' → logprob: -3.7036914825439453
    5. '```' → logprob: -4.328691482543945
    6. '
' → logprob: -5.703691482543945
    7. ' edges' → logprob: -5.703691482543945
    8. '``' → logprob: -6.203691482543945
    9. ' polygon' → logprob: -6.703691482543945
    10. 'all' → logprob: -7.703691482543945

Token 2504: ' boundary' (ID: 35021)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06428513675928116
    2. 'edges' → logprob: -3.9392850399017334
    3. '
' → logprob: -4.0642852783203125
    4. 'selected' → logprob: -4.6892852783203125
    5. ' edges' → logprob: -5.0642852783203125
    6. '#' → logprob: -5.3142852783203125
    7. 'total' → logprob: -6.0642852783203125
    8. '        
' → logprob: -6.8142852783203125
    9. ' selected' → logprob: -8.439285278320312
    10. 'mst' → logprob: -8.439285278320312

Token 2505: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09033119678497314
    2. 'selected' → logprob: -4.090331077575684
    3. 'mst' → logprob: -4.090331077575684
    4. 'edges' → logprob: -4.215331077575684
    5. '#' → logprob: -4.215331077575684
    6. 'total' → logprob: -4.590331077575684
    7. '
' → logprob: -4.965331077575684
    8. '```' → logprob: -6.215331077575684
    9. ' edges' → logprob: -7.465331077575684
    10. '        
' → logprob: -7.465331077575684

Token 2506: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2876065671443939
    2. 'mst' → logprob: -2.0376064777374268
    3. 'total' → logprob: -3.1626064777374268
    4. 'selected' → logprob: -3.4126064777374268
    5. 'edges' → logprob: -3.9126064777374268
    6. '#' → logprob: -4.537606716156006
    7. '
' → logprob: -5.037606716156006
    8. 'import' → logprob: -5.912606716156006
    9. '```' → logprob: -6.662606716156006
    10. 'result' → logprob: -6.787606716156006

Token 2507: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.7740625143051147
    2. 'mst' → logprob: -0.8990625143051147
    3. '       ' → logprob: -2.6490626335144043
    4. 'selected' → logprob: -3.2740626335144043
    5. '#' (adapté à ' #') → logprob: -4.399062633514404
    6. 'uf' → logprob: -5.899062633514404
    7. 'edges' → logprob: -5.899062633514404
    8. 'used' → logprob: -6.274062633514404
    9. 'result' → logprob: -7.149062633514404
    10. 'dist' → logprob: -7.524062633514404

Token 2508: ' We' (ID: 1416)
  Prédit: 'mst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mst' → logprob: -0.10984835773706436
    2. 'selected' → logprob: -3.3598482608795166
    3. '       ' → logprob: -3.4848482608795166
    4. 'total' → logprob: -3.9848482608795166
    5. '#' → logprob: -4.984848499298096
    6. 'used' → logprob: -5.734848499298096
    7. 'edges' → logprob: -5.859848499298096
    8. 'visited' → logprob: -6.109848499298096
    9. 'uf' → logprob: -6.484848499298096
    10. 'import' → logprob: -6.859848499298096

Token 2509: ' try' (ID: 2075)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6969214677810669
    2. '.uf' → logprob: -2.3219213485717773
    3. '       ' → logprob: -2.4469213485717773
    4. 'uf' → logprob: -2.8219213485717773
    5. '.selected' → logprob: -3.3219213485717773
    6. ' uf' → logprob: -3.6969213485717773
    7. '_selected' → logprob: -3.6969213485717773
    8. 'selected' → logprob: -3.9469213485717773
    9. 'edges' → logprob: -4.071921348571777
    10. '_edges' → logprob: -4.321921348571777

Token 2510: ' method' (ID: 2595)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25827232003211975
    2. ':
' → logprob: -2.508272409439087
    3. 'edges' → logprob: -3.883272409439087
    4. '{
' → logprob: -4.008272171020508
    5. '
' → logprob: -4.133272171020508
    6. '   ' → logprob: -4.258272171020508
    7. ':' → logprob: -4.258272171020508
    8. ' edges' → logprob: -4.508272171020508
    9. 'selected' → logprob: -4.633272171020508
    10. '#' → logprob: -4.883272171020508

Token 2511: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10337740927934647
    2. ':
' → logprob: -3.228377342224121
    3. ':' → logprob: -3.603377342224121
    4. ' =' → logprob: -3.853377342224121
    5. '#' → logprob: -6.353377342224121
    6. ' edges' → logprob: -6.853377342224121
    7. '=' → logprob: -6.978377342224121
    8. '   ' → logprob: -7.103377342224121
    9. '
' → logprob: -7.103377342224121
    10. '        
' → logprob: -7.103377342224121

Token 2512: ' MST' (ID: 123058)
  Prédit: 'mst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mst' → logprob: -0.11914793401956558
    2. 'uf' → logprob: -3.244148015975952
    3. 'selected' → logprob: -3.369148015975952
    4. ' mst' → logprob: -4.369147777557373
    5. 'result' → logprob: -4.869147777557373
    6. '#' → logprob: -4.994147777557373
    7. ' uf' → logprob: -6.619147777557373
    8. 'res' → logprob: -6.619147777557373
    9. 'total' → logprob: -6.869147777557373
    10. 'included' → logprob: -6.994147777557373

Token 2513: ' forced' (ID: 19387)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.5505664348602295
    2. ' =' → logprob: -0.9255664348602295
    3. '_' → logprob: -4.925566673278809
    4. '_weight' → logprob: -5.050566673278809
    5. '_candidates' → logprob: -5.550566673278809
    6. 'edges' → logprob: -6.175566673278809
    7. '_total' → logprob: -6.800566673278809
    8. 'uf' → logprob: -7.175566673278809
    9. '(
' → logprob: -7.425566673278809
    10. '_nodes' → logprob: -7.550566673278809

Token 2514: ' with' (ID: 483)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.2222241908311844
    2. ' =' → logprob: -1.722224235534668
    3. '_' → logprob: -4.347224235534668
    4. '_union' → logprob: -6.472224235534668
    5. '_set' → logprob: -6.847224235534668
    6. '=' → logprob: -6.972224235534668
    7. '   ' → logprob: -7.097224235534668
    8. 'edges' → logprob: -7.597224235534668
    9. '       ' → logprob: -8.222224235534668
    10. '_result' → logprob: -8.722224235534668

Token 2515: ' hull' (ID: 74912)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.001446545124053955
    2. 'all' → logprob: -7.126446723937988
    3. '#' → logprob: -8.251446723937988
    4. 'the' → logprob: -9.001446723937988
    5. 'existing' → logprob: -9.126446723937988
    6. 'edges' → logprob: -9.376446723937988
    7. '```' → logprob: -11.001446723937988
    8. 'mandatory' → logprob: -11.251446723937988
    9. ' hull' → logprob: -12.126446723937988
    10. 'included' → logprob: -12.376446723937988

Token 2516: ' edges' (ID: 22569)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.0028590820729732513
    2. 'edges' → logprob: -6.002859115600586
    3. '_edge' → logprob: -9.377859115600586
    4. '       ' → logprob: -9.627859115600586
    5. ' =' → logprob: -9.752859115600586
    6. '_' → logprob: -10.002859115600586
    7. '_union' → logprob: -10.127859115600586
    8. '_candidates' → logprob: -10.377859115600586
    9. ' edges' → logprob: -10.627859115600586
    10. '_set' → logprob: -11.877859115600586

Token 2517: ' included' (ID: 7360)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03802771866321564
    2. 'selected' → logprob: -4.538027763366699
    3. 'mst' → logprob: -5.038027763366699
    4. '
' → logprob: -5.163027763366699
    5. 'edges' → logprob: -5.413027763366699
    6. 'total' → logprob: -5.663027763366699
    7. '#' → logprob: -6.788027763366699
    8. ' edges' → logprob: -6.788027763366699
    9. '```' → logprob: -7.038027763366699
    10. '        
' → logprob: -7.288027763366699

Token 2518: ' plus' (ID: 2932)
  Prédit: 'mst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mst' → logprob: -0.5386176109313965
    2. '       ' → logprob: -1.4136176109313965
    3. 'selected' → logprob: -2.4136176109313965
    4. '#' → logprob: -3.4136176109313965
    5. 'uf' → logprob: -3.5386176109313965
    6. 'edges' → logprob: -4.7886176109313965
    7. 'total' → logprob: -5.4136176109313965
    8. '```' → logprob: -6.1636176109313965
    9. 'result' → logprob: -6.6636176109313965
    10. '
' → logprob: -6.7886176109313965

Token 2519: ' other' (ID: 1273)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.34211158752441406
    2. 'other' → logprob: -2.592111587524414
    3. 'remaining' → logprob: -2.967111587524414
    4. 'all' → logprob: -3.092111587524414
    5. 'the' → logprob: -3.342111587524414
    6. 'candidate' → logprob: -3.842111587524414
    7. 'additional' → logprob: -3.967111587524414
    8. 'edges' → logprob: -4.342111587524414
    9. '[c' → logprob: -4.717111587524414
    10. ' candidates' → logprob: -5.092111587524414

Token 2520: ' allowed' (ID: 9279)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.09032248705625534
    2. 'original' → logprob: -2.840322494506836
    3. ' edges' → logprob: -3.715322494506836
    4. '_edges' → logprob: -7.465322494506836
    5. 'e' → logprob: -7.715322494506836
    6. ' original' → logprob: -7.715322494506836
    7. 'c' → logprob: -8.090322494506836
    8. 'selected' → logprob: -8.215322494506836
    9. '#' → logprob: -8.465322494506836
    10. 'candidate' → logprob: -8.590322494506836

Token 2521: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.18775644898414612
    2. '_edges' → logprob: -1.9377564191818237
    3. ' edges' → logprob: -4.187756538391113
    4. '       ' → logprob: -4.687756538391113
    5. '```' → logprob: -6.562756538391113
    6. '#' → logprob: -7.937756538391113
    7. '``' → logprob: -9.187756538391113
    8. 'mst' → logprob: -9.312756538391113
    9. '_' → logprob: -9.437756538391113
    10. '.edges' → logprob: -9.687756538391113

Token 2522: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18221981823444366
    2. 'mst' → logprob: -2.5572197437286377
    3. 'selected' → logprob: -3.0572197437286377
    4. 'total' → logprob: -3.4322197437286377
    5. '#' → logprob: -5.932219982147217
    6. 'edges' → logprob: -6.057219982147217
    7. 'result' → logprob: -6.682219982147217
    8. '
' → logprob: -6.932219982147217
    9. 'remaining' → logprob: -7.682219982147217
    10. 'import' → logprob: -7.932219982147217

Token 2523: '       ' (ID: 309)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.4624814987182617
    2. '       ' → logprob: -1.0874814987182617
    3. 'selected' → logprob: -4.587481498718262
    4. 'mst' → logprob: -4.712481498718262
    5. '
' → logprob: -5.462481498718262
    6. 'result' → logprob: -5.712481498718262
    7. '#' → logprob: -6.087481498718262
    8. 'weight' → logprob: -6.462481498718262
    9. ' total' → logprob: -7.587481498718262
    10. 'return' → logprob: -8.212481498718262

Token 2524: ' uf' (ID: 35772)
  Prédit: 'mst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mst' → logprob: -0.3394260108470917
    2. 'total' → logprob: -1.839426040649414
    3. 'selected' → logprob: -2.714426040649414
    4. '       ' → logprob: -3.214426040649414
    5. '#' → logprob: -4.714426040649414
    6. 'result' → logprob: -5.464426040649414
    7. 'used' → logprob: -5.714426040649414
    8. 'edges' → logprob: -5.714426040649414
    9. 'remaining' → logprob: -7.839426040649414
    10. 'dist' → logprob: -8.214426040649414

Token 2525: '2' (ID: 17)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4440213143825531
    2. '=' → logprob: -1.0690213441848755
    3. '_final' → logprob: -5.069021224975586
    4. '2' → logprob: -5.194021224975586
    5. '_for' → logprob: -7.319021224975586
    6. '_union' → logprob: -7.694021224975586
    7. '_new' → logprob: -7.819021224975586
    8. 'for' → logprob: -7.944021224975586
    9. 'final' → logprob: -8.069021224975586
    10. '_copy' → logprob: -8.569021224975586

Token 2526: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141783356666565
    2. '=' → logprob: -1.7014178037643433
    3. '(' → logprob: -13.076417922973633
    4. '   ' → logprob: -14.701417922973633
    5. '.' → logprob: -14.951417922973633
    6. '=
' → logprob: -15.076417922973633
    7. ' =
' → logprob: -15.201417922973633
    8. ')' → logprob: -15.326417922973633
    9. '       ' → logprob: -15.576417922973633
    10. ',' → logprob: -16.076417922973633

Token 2527: ' Union' (ID: 14746)
  Prédit: 'Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Union' → logprob: -0.0005530327325686812
    2. ' Union' → logprob: -7.500553131103516
    3. 'union' → logprob: -17.125553131103516
    4. '_union' → logprob: -17.625553131103516
    5. ' union' → logprob: -19.000553131103516
    6. '   ' → logprob: -19.000553131103516
    7. ''Union' → logprob: -19.625553131103516
    8. '       ' → logprob: -19.625553131103516
    9. 'Unity' → logprob: -20.375553131103516
    10. 'Uni' → logprob: -20.750553131103516

Token 2528: 'Find' (ID: 11437)
  Prédit: 'Find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Find' → logprob: -4.127333340875339e-06
    2. 'Union' → logprob: -12.500003814697266
    3. 'Fill' → logprob: -15.375003814697266
    4. 'Fold' → logprob: -16.625003814697266
    5. 'Fit' → logprob: -18.250003814697266
    6. '(' → logprob: -18.625003814697266
    7. ' Find' → logprob: -18.750003814697266
    8. '_find' → logprob: -19.000003814697266
    9. 'F' → logprob: -19.125003814697266
    10. 'find' → logprob: -19.500003814697266

Token 2529: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.16026069223880768
    2. 'self' → logprob: -1.9102606773376465
    3. '(' → logprob: -10.785261154174805
    4. ' self' → logprob: -12.160261154174805
    5. '       ' → logprob: -12.785261154174805
    6. '
' → logprob: -12.785261154174805
    7. '(
' → logprob: -13.035261154174805
    8. '[self' → logprob: -13.660261154174805
    9. '```' → logprob: -14.285261154174805
    10. '   ' → logprob: -15.785261154174805

Token 2530: '.N' (ID: 4439)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003372502396814525
    2. ' self' → logprob: -8.375337600708008
    3. 'N' → logprob: -9.625337600708008
    4. '       ' → logprob: -10.875337600708008
    5. '
' → logprob: -11.125337600708008
    6. '(self' → logprob: -13.000337600708008
    7. '           ' → logprob: -13.375337600708008
    8. 'Self' → logprob: -13.625337600708008
    9. '   ' → logprob: -14.500337600708008
    10. '```' → logprob: -14.750337600708008

Token 2531: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1015780046582222
    2. ')' → logprob: -2.3515779972076416
    3. '       ' → logprob: -6.601578235626221
    4. ')
' → logprob: -12.226577758789062
    5. '   ' → logprob: -12.851577758789062
    6. '
' → logprob: -13.226577758789062
    7. ')

' → logprob: -14.101577758789062
    8. '())
' → logprob: -14.601577758789062
    9. '```' → logprob: -15.226577758789062
    10. '()
' → logprob: -15.476577758789062

Token 2532: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6355057954788208
    2. '       ' → logprob: -0.7605057954788208
    3. 'c' → logprob: -6.635505676269531
    4. ' for' → logprob: -7.260505676269531
    5. '```' → logprob: -7.635505676269531
    6. 'i' → logprob: -9.385505676269531
    7. 'edges' → logprob: -9.885505676269531
    8. 'candidate' → logprob: -9.885505676269531
    9. '	for' → logprob: -10.135505676269531
    10. '   ' → logprob: -10.260505676269531

Token 2533: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.12180782854557037
    2. '       ' → logprob: -2.621807813644409
    3. 'i' → logprob: -3.746807813644409
    4. 'c' → logprob: -4.621808052062988
    5. 'total' → logprob: -5.996808052062988
    6. 'idx' → logprob: -5.996808052062988
    7. 'result' → logprob: -7.496808052062988
    8. 'index' → logprob: -7.746808052062988
    9. 'edges' → logprob: -7.871808052062988
    10. '   ' → logprob: -7.996808052062988

Token 2534: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0015077205607667565
    2. ' e' → logprob: -6.501507759094238
    3. 'h' → logprob: -13.751507759094238
    4. 'edge' → logprob: -14.376507759094238
    5. '	e' → logprob: -14.439007759094238
    6. '   ' → logprob: -14.501507759094238
    7. 'u' → logprob: -14.876507759094238
    8. '```' → logprob: -14.939007759094238
    9. '_e' → logprob: -15.251507759094238
    10. '`' → logprob: -15.501507759094238

Token 2535: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0036071976646780968
    2. 'in' → logprob: -5.628607273101807
    3. '	in' → logprob: -12.378606796264648
    4. ' ' → logprob: -13.503606796264648
    5. 'e' → logprob: -14.878606796264648
    6. 'n' → logprob: -15.503606796264648
    7. ' e' → logprob: -15.503606796264648
    8. ' ' → logprob: -15.878606796264648
    9. 'import' → logprob: -15.878606796264648
    10. 'i' → logprob: -16.50360679626465

Token 2536: ' hull' (ID: 74912)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.00015586259542033076
    2. ' hull' → logprob: -9.500155448913574
    3. 'e' → logprob: -9.625155448913574
    4. 'hul' → logprob: -11.750155448913574
    5. '	h' → logprob: -13.250155448913574
    6. 'hf' → logprob: -14.000155448913574
    7. '```' → logprob: -14.125155448913574
    8. '   ' → logprob: -14.250155448913574
    9. 'u' → logprob: -14.625155448913574
    10. 'uf' → logprob: -14.750155448913574

Token 2537: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.0006450029904954135
    2. 'edges' → logprob: -7.500645160675049
    3. '_' → logprob: -10.50064468383789
    4. '```' → logprob: -10.87564468383789
    5. '.edges' → logprob: -11.87564468383789
    6. '_edge' → logprob: -11.87564468383789
    7. 'Edges' → logprob: -12.00064468383789
    8. '._' → logprob: -12.00064468383789
    9. '.' → logprob: -13.12564468383789
    10. '_
' → logprob: -13.12564468383789

Token 2538: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7576205134391785
    2. '.' → logprob: -1.3826205730438232
    3. '.union' → logprob: -1.3826205730438232
    4. ':
' → logprob: -3.8826205730438232
    5. ':' → logprob: -5.632620334625244
    6. '   ' → logprob: -6.132620334625244
    7. '       ' → logprob: -7.007620334625244
    8. '.uf' → logprob: -7.632620334625244
    9. '               ' → logprob: -7.757620334625244
    10. ',' → logprob: -8.507620811462402

Token 2539: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.43238765001296997
    2. '       ' → logprob: -1.4323875904083252
    3. '   ' → logprob: -2.932387590408325
    4. 'uf' → logprob: -3.432387590408325
    5. '```' → logprob: -3.932387590408325
    6. '	       ' → logprob: -6.557387828826904
    7. '		' → logprob: -7.057387828826904
    8. '	   ' → logprob: -7.057387828826904
    9. '               ' → logprob: -7.182387828826904
    10. '​' → logprob: -8.182387351989746

Token 2540: ' uf' (ID: 35772)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' (adapté à ' uf') → logprob: -8.41866585687967e-06
    2. ' uf' → logprob: -12.250008583068848
    3. '_' → logprob: -13.125008583068848
    4. '           ' → logprob: -14.500008583068848
    5. 'ufs' → logprob: -14.875008583068848
    6. '       ' → logprob: -15.750008583068848
    7. '```' → logprob: -16.00000762939453
    8. '   ' → logprob: -16.25000762939453
    9. '.uf' → logprob: -16.37500762939453
    10. 'ufi' → logprob: -16.50000762939453

Token 2541: '2' (ID: 17)
  Prédit: '.union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.union' → logprob: -0.028787052258849144
    2. '2' → logprob: -3.778787136077881
    3. 'union' → logprob: -5.403787136077881
    4. '.' → logprob: -7.153787136077881
    5. '```' → logprob: -9.028786659240723
    6. '   ' → logprob: -10.278786659240723
    7. ' .' → logprob: -10.528786659240723
    8. '	union' → logprob: -11.153786659240723
    9. '       ' → logprob: -11.653786659240723
    10. '.uniform' → logprob: -11.653786659240723

Token 2542: '.union' (ID: 140875)
  Prédit: '.union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.union' → logprob: -0.0004436587623786181
    2. '.' → logprob: -7.750443458557129
    3. 'union' → logprob: -12.000443458557129
    4. ' .' → logprob: -13.000443458557129
    5. '```' → logprob: -13.250443458557129
    6. '	union' → logprob: -14.125443458557129
    7. '.uniform' → logprob: -14.625443458557129
    8. '​.' → logprob: -14.625443458557129
    9. '   ' → logprob: -14.875443458557129
    10. '`.' → logprob: -15.500443458557129

Token 2543: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.0001805377542041242
    2. 'e' → logprob: -8.6251802444458
    3. '(' → logprob: -14.6251802444458
    4. ' e' → logprob: -15.2501802444458
    5. '(
' → logprob: -16.125181198120117
    6. ' (' → logprob: -16.625181198120117
    7. ')e' → logprob: -19.000181198120117
    8. '```' → logprob: -20.000181198120117
    9. ' ' → logprob: -20.500181198120117
    10. '   ' → logprob: -20.500181198120117

Token 2544: '.u' (ID: 22262)
  Prédit: '.u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.u' → logprob: -0.010949247516691685
    2. 'u' → logprob: -4.88594913482666
    3. '.e' → logprob: -6.26094913482666
    4. 'e' → logprob: -6.63594913482666
    5. '(u' → logprob: -9.63594913482666
    6. '.' → logprob: -10.38594913482666
    7. '(e' → logprob: -11.63594913482666
    8. ')' → logprob: -12.88594913482666
    9. ',u' → logprob: -13.01094913482666
    10. ').' → logprob: -13.88594913482666

Token 2545: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005906827282160521
    2. ',e' → logprob: -7.625590801239014
    3. ' ,' → logprob: -10.125590324401855
    4. ',
' → logprob: -10.500590324401855
    5. 'e' → logprob: -10.500590324401855
    6. ' e' → logprob: -13.250590324401855
    7. '           ' → logprob: -13.250590324401855
    8. '`,' → logprob: -13.625590324401855
    9. '',' → logprob: -13.750590324401855
    10. '       ' → logprob: -14.875590324401855

Token 2546: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00011844364780699834
    2. ' e' → logprob: -9.125118255615234
    3. '   ' → logprob: -12.250118255615234
    4. '       ' → logprob: -12.750118255615234
    5. '           ' → logprob: -14.000118255615234
    6. '	e' → logprob: -15.750118255615234
    7. '     ' → logprob: -15.875118255615234
    8. '    ' → logprob: -16.250118255615234
    9. '
' → logprob: -16.375118255615234
    10. '
' → logprob: -16.500118255615234

Token 2547: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -0.31355762481689453
    2. 'v' → logprob: -1.3135576248168945
    3. 'e' → logprob: -8.688557624816895
    4. ',v' → logprob: -9.688557624816895
    5. '	v' → logprob: -10.313557624816895
    6. ' v' → logprob: -12.063557624816895
    7. '.' → logprob: -12.188557624816895
    8. '.e' → logprob: -12.313557624816895
    9. '_v' → logprob: -12.688557624816895
    10. '<v' → logprob: -12.688557624816895

Token 2548: ')

' (ID: 1029)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15227802097797394
    2. ')' → logprob: -2.527277946472168
    3. '
' → logprob: -2.902277946472168
    4. '<|end|>' → logprob: -5.777277946472168
    5. ')
' → logprob: -6.027277946472168
    6. ',' → logprob: -8.402277946472168
    7. '        
' → logprob: -8.652277946472168
    8. 'for' → logprob: -9.027277946472168
    9. '<|end|>' → logprob: -9.652277946472168
    10. '),' → logprob: -9.777277946472168

Token 2549: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05788064002990723
    2. 'c' → logprob: -3.0578806400299072
    3. 'edges' → logprob: -5.432880401611328
    4. 'candidate' → logprob: -6.307880401611328
    5. '
' → logprob: -6.432880401611328
    6. '```' → logprob: -7.682880401611328
    7. 'for' → logprob: -7.807880401611328
    8. ' candidates' → logprob: -8.432880401611328
    9. ' edges' → logprob: -9.557880401611328
    10. '_candidates' → logprob: -9.807880401611328

Token 2550: ' mst' (ID: 179099)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2834230065345764
    2. 'edges' → logprob: -1.5334229469299316
    3. 'for' → logprob: -4.158422946929932
    4. '       ' → logprob: -4.408422946929932
    5. 'remaining' → logprob: -7.158422946929932
    6. 'candidate' → logprob: -7.158422946929932
    7. 'all' → logprob: -7.283422946929932
    8. 'rest' → logprob: -7.533422946929932
    9. 'available' → logprob: -9.78342342376709
    10. 'possible' → logprob: -9.90842342376709

Token 2551: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.028571605682373047
    2. ' =' → logprob: -4.153571605682373
    3. '_' → logprob: -4.903571605682373
    4. '_weight' → logprob: -5.653571605682373
    5. '_cost' → logprob: -7.403571605682373
    6. '_candidates' → logprob: -8.028572082519531
    7. '_weights' → logprob: -8.403572082519531
    8. '_total' → logprob: -9.028572082519531
    9. '_length' → logprob: -9.653572082519531
    10. '=[]' → logprob: -9.778572082519531

Token 2552: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10820459574460983
    2. '=' → logprob: -2.3582046031951904
    3. '=[]' → logprob: -5.108204364776611
    4. '.append' → logprob: -6.858204364776611
    5. ':' → logprob: -7.733204364776611
    6. '.' → logprob: -8.85820484161377
    7. '=[]
' → logprob: -9.23320484161377
    8. '_' → logprob: -10.23320484161377
    9. '[]' → logprob: -10.48320484161377
    10. '[:]' → logprob: -10.48320484161377

Token 2553: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0003662020608317107
    2. '[]
' → logprob: -8.6253662109375
    3. '[h' → logprob: -8.8753662109375
    4. ' []' → logprob: -10.5003662109375
    5. '[' → logprob: -11.8753662109375
    6. '[]}' → logprob: -12.1253662109375
    7. '[])' → logprob: -12.6253662109375
    8. '[]

' → logprob: -13.3753662109375
    9. '[]"' → logprob: -14.3753662109375
    10. 'list' → logprob: -14.6253662109375

Token 2554: '(h' (ID: 8120)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.35929059982299805
    2. '[]' → logprob: -1.234290599822998
    3. '=[]' → logprob: -5.859290599822998
    4. '()
' → logprob: -6.234290599822998
    5. '[]
' → logprob: -6.359290599822998
    6. '([]' → logprob: -6.484290599822998
    7. '(' → logprob: -7.109290599822998
    8. '=' → logprob: -7.359290599822998
    9. '[' → logprob: -8.484291076660156
    10. '(filter' → logprob: -8.484291076660156

Token 2555: 'ull' (ID: 754)
  Prédit: 'ull'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ull' → logprob: -0.0020109564065933228
    2. 'ulls' → logprob: -7.002010822296143
    3. '(' → logprob: -8.6270112991333
    4. 'ul' → logprob: -8.6270112991333
    5. 'f' → logprob: -9.0020112991333
    6. 'uf' → logprob: -9.1270112991333
    7. '[' → logprob: -9.8770112991333
    8. 'all' → logprob: -10.0020112991333
    9. ')' → logprob: -10.1270112991333
    10. 'for' → logprob: -10.1270112991333

Token 2556: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.0006279678200371563
    2. '_' → logprob: -7.5006279945373535
    3. '_)' → logprob: -10.375627517700195
    4. '_
' → logprob: -11.000627517700195
    5. ')' → logprob: -11.375627517700195
    6. ')_' → logprob: -11.750627517700195
    7. 'edges' → logprob: -13.250627517700195
    8. ' _' → logprob: -14.125627517700195
    9. '_]' → logprob: -14.125627517700195
    10. '```' → logprob: -14.250627517700195

Token 2557: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010648438474163413
    2. '       ' → logprob: -7.251064777374268
    3. ')
' → logprob: -8.001065254211426
    4. '[' → logprob: -11.626065254211426
    5. ')+' → logprob: -13.126065254211426
    6. '+' → logprob: -13.626065254211426
    7. ' )' → logprob: -13.876065254211426
    8. '[:' → logprob: -14.001065254211426
    9. '
' → logprob: -14.251065254211426
    10. '```' → logprob: -14.376065254211426

Token 2558: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008187580853700638
    2. '
' → logprob: -5.758187770843506
    3. 'for' → logprob: -5.758187770843506
    4. 'c' → logprob: -7.633187770843506
    5. 'edges' → logprob: -7.633187770843506
    6. '```' → logprob: -7.883187770843506
    7. ' for' → logprob: -8.133187294006348
    8. '        
' → logprob: -10.133187294006348
    9. ',' → logprob: -10.383187294006348
    10. ' candidates' → logprob: -10.633187294006348

Token 2559: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.013660118915140629
    2. '       ' → logprob: -4.513659954071045
    3. 'c' → logprob: -6.013659954071045
    4. 'edges' → logprob: -9.638660430908203
    5. ' for' → logprob: -9.763660430908203
    6. 'all' → logprob: -11.138660430908203
    7. 'remaining' → logprob: -11.513660430908203
    8. '
' → logprob: -12.513660430908203
    9. 'sorted' → logprob: -12.888660430908203
    10. '```' → logprob: -13.013660430908203

Token 2560: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.16022787988185883
    2. ' e' → logprob: -1.91022789478302
    3. 'c' → logprob: -13.66022777557373
    4. '	e' → logprob: -13.78522777557373
    5. '   ' → logprob: -14.16022777557373
    6. ' ' → logprob: -14.53522777557373
    7. ' ' → logprob: -16.660228729248047
    8. '```' → logprob: -16.660228729248047
    9. '`' → logprob: -17.410228729248047
    10. ' c' → logprob: -17.535228729248047

Token 2561: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0028086788952350616
    2. 'in' → logprob: -5.877808570861816
    3. ' ' → logprob: -13.127808570861816
    4. '	in' → logprob: -14.002808570861816
    5. ' ' → logprob: -15.127808570861816
    6. 's' → logprob: -15.502808570861816
    7. 'n' → logprob: -16.252809524536133
    8. 'import' → logprob: -16.252809524536133
    9. 'space' → logprob: -16.502809524536133
    10. 'e' → logprob: -16.627809524536133

Token 2562: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.9385402993066236e-05
    2. ' candidates' → logprob: -10.875019073486328
    3. 'candidate' → logprob: -15.125019073486328
    4. '_candidates' → logprob: -16.375019073486328
    5. 'cand' → logprob: -17.125019073486328
    6. '
' → logprob: -17.750019073486328
    7. '[c' → logprob: -17.750019073486328
    8. '   ' → logprob: -18.375019073486328
    9. '	c' → logprob: -18.750019073486328
    10. 'e' → logprob: -19.500019073486328

Token 2563: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18443354964256287
    2. ':
' → logprob: -1.8094335794448853
    3. '   ' → logprob: -6.184433460235596
    4. '           ' → logprob: -6.934433460235596
    5. 'if' → logprob: -7.309433460235596
    6. '       ' → logprob: -7.684433460235596
    7. ' if' → logprob: -8.809433937072754
    8. '[' → logprob: -9.184433937072754
    9. '<|end|>' → logprob: -9.434433937072754
    10. ':
' → logprob: -9.684433937072754

Token 2564: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.037472233176231384
    2. ' if' → logprob: -3.4124722480773926
    3. 'if' → logprob: -6.662472248077393
    4. ':
' → logprob: -6.662472248077393
    5. '       ' → logprob: -7.662472248077393
    6. ':' → logprob: -8.162471771240234
    7. '   ' → logprob: -8.787471771240234
    8. '               ' → logprob: -9.037471771240234
    9. '	       ' → logprob: -9.412471771240234
    10. ' ' → logprob: -10.412471771240234

Token 2565: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.19321133196353912
    2. '           ' → logprob: -2.318211317062378
    3. 'if' (adapté à ' if') → logprob: -2.568211317062378
    4. '   ' → logprob: -7.693211555480957
    5. '               ' → logprob: -9.443211555480957
    6. '       ' → logprob: -10.568211555480957
    7. ' ' → logprob: -13.318211555480957
    8. '    ' → logprob: -14.318211555480957
    9. '            
' → logprob: -14.318211555480957
    10. '            ' → logprob: -14.443211555480957

Token 2566: ' uf' (ID: 35772)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.20153018832206726
    2. ' uf' → logprob: -1.7015302181243896
    3. '   ' → logprob: -9.951530456542969
    4. ' not' → logprob: -10.701530456542969
    5. 'ufs' → logprob: -10.826530456542969
    6. 'not' → logprob: -11.451530456542969
    7. 'mst' → logprob: -12.326530456542969
    8. 'ufi' → logprob: -12.576530456542969
    9. ' ' → logprob: -13.076530456542969
    10. 'uft' → logprob: -13.701530456542969

Token 2567: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.481510692741722e-05
    2. '.union' → logprob: -9.87507438659668
    3. '.' → logprob: -10.87507438659668
    4. 'union' → logprob: -13.00007438659668
    5. ' ' → logprob: -14.37507438659668
    6. '   ' → logprob: -14.62507438659668
    7. '```' → logprob: -15.00007438659668
    8. '
' → logprob: -15.87507438659668
    9. ' .' → logprob: -16.12507438659668
    10. '``' → logprob: -16.37507438659668

Token 2568: '.find' (ID: 4231)
  Prédit: '.union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.union' → logprob: -0.0003403495065867901
    2. '.' → logprob: -8.375340461730957
    3. '.parent' → logprob: -10.000340461730957
    4. 'union' → logprob: -10.125340461730957
    5. '.can' → logprob: -12.250340461730957
    6. ' .' → logprob: -12.375340461730957
    7. '.find' → logprob: -12.500340461730957
    8. '   ' → logprob: -13.250340461730957
    9. '	union' → logprob: -13.250340461730957
    10. '.uniform' → logprob: -13.250340461730957

Token 2569: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.0010373335098847747
    2. 'e' → logprob: -6.876037120819092
    3. '(' → logprob: -12.62603759765625
    4. ' e' → logprob: -15.12603759765625
    5. '(
' → logprob: -15.12603759765625
    6. '(u' → logprob: -15.25103759765625
    7. ')e' → logprob: -16.25103759765625
    8. '```' → logprob: -16.25103759765625
    9. '[e' → logprob: -16.50103759765625
    10. '	e' → logprob: -16.62603759765625

Token 2570: '.u' (ID: 22262)
  Prédit: '.e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.e' → logprob: -0.3936959505081177
    2. '.u' → logprob: -1.6436959505081177
    3. '(e' → logprob: -3.268695831298828
    4. '.' → logprob: -3.268695831298828
    5. 'e' → logprob: -3.518695831298828
    6. 'u' → logprob: -4.643695831298828
    7. ').' → logprob: -4.893695831298828
    8. ')' → logprob: -5.143695831298828
    9. ' .' → logprob: -7.143695831298828
    10. '(u' → logprob: -7.143695831298828

Token 2571: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022247975692152977
    2. ' !=' → logprob: -4.147247791290283
    3. '!=' → logprob: -5.897247791290283
    4. ')!=' → logprob: -5.897247791290283
    5. '()' → logprob: -8.147248268127441
    6. 'e' → logprob: -8.897248268127441
    7. '()!=' → logprob: -8.897248268127441
    8. ' )' → logprob: -9.522248268127441
    9. ')e' → logprob: -10.647248268127441
    10. '```' → logprob: -11.647248268127441

Token 2572: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.4771591126918793
    2. ' !=' → logprob: -0.9771591424942017
    3. '()!=' → logprob: -6.102159023284912
    4. ')!=' → logprob: -7.477159023284912
    5. '```' → logprob: -9.10215950012207
    6. ')' → logprob: -9.60215950012207
    7. ']!=' → logprob: -9.97715950012207
    8. '!==' → logprob: -11.85215950012207
    9. '>' → logprob: -12.10215950012207
    10. '<>' → logprob: -12.10215950012207

Token 2573: ' uf' (ID: 35772)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.0003955224819947034
    2. 'e' → logprob: -8.125395774841309
    3. ' uf' → logprob: -9.375395774841309
    4. 'u' → logprob: -11.875395774841309
    5. 'ufs' → logprob: -12.625395774841309
    6. 'ut' → logprob: -13.500395774841309
    7. 'ufi' → logprob: -14.125395774841309
    8. 'uft' → logprob: -14.500395774841309
    9. '
' → logprob: -14.750395774841309
    10. 'ufa' → logprob: -14.875395774841309

Token 2574: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008016457431949675
    2. '(e' → logprob: -7.2508015632629395
    3. 'e' → logprob: -9.375802040100098
    4. '[e' → logprob: -13.000802040100098
    5. '.e' → logprob: -13.625802040100098
    6. '```' → logprob: -13.875802040100098
    7. '   ' → logprob: -14.875802040100098
    8. '`' → logprob: -15.125802040100098
    9. 'i' → logprob: -15.375802040100098
    10. '(u' → logprob: -15.500802040100098

Token 2575: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.00222210306674242
    2. '2' → logprob: -6.127222061157227
    3. '(e' → logprob: -11.127222061157227
    4. 'find' → logprob: -12.127222061157227
    5. 'e' → logprob: -12.377222061157227
    6. 'u' → logprob: -12.627222061157227
    7. ' .' → logprob: -13.127222061157227
    8. '.' → logprob: -13.127222061157227
    9. '._' → logprob: -13.252222061157227
    10. '.union' → logprob: -14.377222061157227

Token 2576: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.00029685118352063
    2. 'e' → logprob: -8.125296592712402
    3. '(' → logprob: -15.125296592712402
    4. '[e' → logprob: -15.500296592712402
    5. ' e' → logprob: -15.875296592712402
    6. '(u' → logprob: -16.12529754638672
    7. '(
' → logprob: -17.12529754638672
    8. ' (' → logprob: -17.87529754638672
    9. ')e' → logprob: -18.50029754638672
    10. 's' → logprob: -18.62529754638672

Token 2577: '.v' (ID: 5520)
  Prédit: '.e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.e' → logprob: -0.497441828250885
    2. '(e' → logprob: -0.997441828250885
    3. '.v' → logprob: -4.49744176864624
    4. 'e' → logprob: -4.74744176864624
    5. 'v' → logprob: -6.12244176864624
    6. '2' → logprob: -6.99744176864624
    7. '.u' → logprob: -9.247442245483398
    8. '[e' → logprob: -10.497442245483398
    9. 'u' → logprob: -10.747442245483398
    10. '(' → logprob: -11.997442245483398

Token 2578: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2770279347896576
    2. '):' → logprob: -1.65202796459198
    3. ')' → logprob: -3.0270278453826904
    4. ' and' → logprob: -7.1520280838012695
    5. '           ' → logprob: -7.5270280838012695
    6. ':
' → logprob: -8.52702808380127
    7. ':' → logprob: -9.27702808380127
    8. '):
' → logprob: -9.90202808380127
    9. ' ):
' → logprob: -10.02702808380127
    10. 'and' → logprob: -10.40202808380127

Token 2579: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0032900129444897175
    2. ' and' → logprob: -6.503290176391602
    3. ':
' → logprob: -6.753290176391602
    4. '           ' → logprob: -7.628290176391602
    5. '```' → logprob: -10.253290176391602
    6. 'and' → logprob: -10.753290176391602
    7. ':' → logprob: -11.003290176391602
    8. '                   ' → logprob: -11.753290176391602
    9. '                
' → logprob: -11.753290176391602
    10. '
' → logprob: -11.753290176391602

Token 2580: ' uf' (ID: 35772)
  Prédit: ' uf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' uf' → logprob: -0.2908477783203125
    2. 'uf' (adapté à ' uf') → logprob: -1.4158477783203125
    3. '               ' → logprob: -4.9158477783203125
    4. 'mst' → logprob: -6.5408477783203125
    5. '                   ' → logprob: -7.9158477783203125
    6. '           ' → logprob: -8.915847778320312
    7. ' mst' → logprob: -8.915847778320312
    8. ' if' → logprob: -9.290847778320312
    9. 'if' → logprob: -9.790847778320312
    10. '   ' → logprob: -10.540847778320312

Token 2581: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5048530030981055e-06
    2. '.' → logprob: -14.000001907348633
    3. '```' → logprob: -15.000001907348633
    4. '.union' → logprob: -15.250001907348633
    5. '   ' → logprob: -16.500001907348633
    6. '._' → logprob: -17.875001907348633
    7. 'union' → logprob: -17.875001907348633
    8. '_' → logprob: -17.875001907348633
    9. '.add' → logprob: -18.375001907348633
    10. '_union' → logprob: -18.375001907348633

Token 2582: '.union' (ID: 140875)
  Prédit: '.union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.union' → logprob: -8.196732960641384e-05
    2. '.' → logprob: -9.625082015991211
    3. 'union' → logprob: -11.125082015991211
    4. '	union' → logprob: -15.125082015991211
    5. '           ' → logprob: -16.00008201599121
    6. ' .' → logprob: -16.12508201599121
    7. '       ' → logprob: -16.25008201599121
    8. '   ' → logprob: -16.25008201599121
    9. '.uniform' → logprob: -16.37508201599121
    10. '_union' → logprob: -16.50008201599121

Token 2583: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -1.843177233240567e-05
    2. '(' → logprob: -11.000018119812012
    3. '(
' → logprob: -14.125018119812012
    4. 'e' → logprob: -14.125018119812012
    5. ' (' → logprob: -15.875018119812012
    6. ')' → logprob: -18.250019073486328
    7. '               ' → logprob: -18.625019073486328
    8. '()' → logprob: -18.750019073486328
    9. '(u' → logprob: -18.750019073486328
    10. ' e' → logprob: -18.750019073486328

Token 2584: '.u' (ID: 22262)
  Prédit: '.e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.e' → logprob: -0.630051851272583
    2. '(e' → logprob: -0.880051851272583
    3. 'e' → logprob: -3.755051851272583
    4. '.u' → logprob: -4.130051612854004
    5. '.' → logprob: -4.505051612854004
    6. 'u' → logprob: -7.130051612854004
    7. '(u' → logprob: -7.630051612854004
    8. ')' → logprob: -8.255051612854004
    9. ').' → logprob: -8.630051612854004
    10. '(' → logprob: -9.505051612854004

Token 2585: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08969561010599136
    2. '(e' → logprob: -2.589695692062378
    3. 'e' → logprob: -5.089695453643799
    4. ',e' → logprob: -5.589695453643799
    5. ')' → logprob: -7.589695453643799
    6. '(' → logprob: -8.464695930480957
    7. ' e' → logprob: -10.339695930480957
    8. ' ,' → logprob: -10.464695930480957
    9. '
' → logprob: -10.964695930480957
    10. ' (' → logprob: -11.589695930480957

Token 2586: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.4974866644479334e-05
    2. ' e' → logprob: -11.125015258789062
    3. '               ' → logprob: -16.375015258789062
    4. '                   ' → logprob: -16.750015258789062
    5. '(e' → logprob: -18.375015258789062
    6. '           ' → logprob: -18.500015258789062
    7. '   ' → logprob: -18.500015258789062
    8. '	e' → logprob: -18.500015258789062
    9. '
' → logprob: -19.250015258789062
    10. ')e' → logprob: -20.375015258789062

Token 2587: '.v' (ID: 5520)
  Prédit: '.v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.v' → logprob: -7.584239938296378e-06
    2. 'v' → logprob: -12.000007629394531
    3. '.' → logprob: -14.000007629394531
    4. ',v' → logprob: -14.875007629394531
    5. '	v' → logprob: -16.75000762939453
    6. '   ' → logprob: -17.00000762939453
    7. '.e' → logprob: -17.50000762939453
    8. '<v' → logprob: -18.12500762939453
    9. '```' → logprob: -18.25000762939453
    10. '(v' → logprob: -18.37500762939453

Token 2588: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005997385596856475
    2. ')' → logprob: -8.00059986114502
    3. '           ' → logprob: -9.12559986114502
    4. '                   ' → logprob: -10.12559986114502
    5. ',' → logprob: -10.37559986114502
    6. '
' → logprob: -10.75059986114502
    7. 'm' → logprob: -11.00059986114502
    8. '),' → logprob: -12.00059986114502
    9. ')
' → logprob: -12.00059986114502
    10. '```' → logprob: -12.00059986114502

Token 2589: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006361369974911213
    2. '```' → logprob: -5.631361484527588
    3. 'mst' → logprob: -6.256361484527588
    4. '           ' → logprob: -7.881361484527588
    5. '       ' → logprob: -8.38136100769043
    6. '`' → logprob: -9.75636100769043
    7. '                   ' → logprob: -10.00636100769043
    8. '``' → logprob: -10.13136100769043
    9. '
' → logprob: -10.88136100769043
    10. 'm' → logprob: -11.25636100769043

Token 2590: ' mst' (ID: 179099)
  Prédit: 'mst'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mst' (adapté à ' mst') → logprob: -0.0007728204363957047
    2. '               ' → logprob: -7.750772953033447
    3. ' mst' → logprob: -8.000772476196289
    4. '                   ' → logprob: -12.375772476196289
    5. '```' → logprob: -14.375772476196289
    6. '           ' → logprob: -14.500772476196289
    7. '   ' → logprob: -14.625772476196289
    8. 'ms' → logprob: -14.750772476196289
    9. '                               ' → logprob: -15.750772476196289
    10. '                       ' → logprob: -16.50077247619629

Token 2591: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -4.036524842376821e-05
    2. '._' → logprob: -10.625040054321289
    3. '_.' → logprob: -12.000040054321289
    4. '_' → logprob: -12.375040054321289
    5. ' _' → logprob: -13.250040054321289
    6. '_ed' → logprob: -13.375040054321289
    7. '_
' → logprob: -14.250040054321289
    8. '.' → logprob: -15.250040054321289
    9. '_edge' → logprob: -15.375040054321289
    10. '_e' → logprob: -15.500040054321289

Token 2592: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.07889661937952042
    2. '.' → logprob: -2.5788965225219727
    3. '.app' → logprob: -12.453896522521973
    4. 'append' → logprob: -14.328896522521973
    5. '.
' → logprob: -14.828896522521973
    6. ' .' → logprob: -14.953896522521973
    7. '_append' → logprob: -14.953896522521973
    8. '.add' → logprob: -15.078896522521973
    9. '.Append' → logprob: -15.203896522521973
    10. '.extend' → logprob: -15.453896522521973

Token 2593: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -3.547789674485102e-05
    2. '(' → logprob: -10.250035285949707
    3. '(
' → logprob: -17.125036239624023
    4. '(edge' → logprob: -20.375036239624023
    5. ' (' → logprob: -20.625036239624023
    6. 'e' → logprob: -21.125036239624023
    7. '((' → logprob: -21.250036239624023
    8. '(a' → logprob: -22.375036239624023
    9. '(E' → logprob: -22.750036239624023
    10. '(f' → logprob: -22.750036239624023

Token 2594: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0921942703134846e-05
    2. ')
' → logprob: -11.87501049041748
    3. '<|end|>' → logprob: -13.37501049041748
    4. '       ' → logprob: -14.12501049041748
    5. ')return' → logprob: -14.37501049041748
    6. ' )' → logprob: -15.12501049041748
    7. '           ' → logprob: -16.000011444091797
    8. '.' → logprob: -16.375011444091797
    9. '),' → logprob: -16.625011444091797
    10. '[' → logprob: -16.875011444091797

Token 2595: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4824352562427521
    2. '       ' → logprob: -0.9824352264404297
    3. 'total' → logprob: -4.85743522644043
    4. '```' → logprob: -8.35743522644043
    5. ' total' → logprob: -8.73243522644043
    6. '
' → logprob: -9.85743522644043
    7. 'sum' → logprob: -10.48243522644043
    8. '        
' → logprob: -10.48243522644043
    9. 'return' → logprob: -10.85743522644043
    10. '   ' → logprob: -11.60743522644043

Token 2596: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.11053372919559479
    2. '       ' → logprob: -2.3605337142944336
    3. 'return' → logprob: -4.610533714294434
    4. ' total' → logprob: -9.110533714294434
    5. 'length' → logprob: -9.360533714294434
    6. '
' → logprob: -10.110533714294434
    7. 'result' → logprob: -10.235533714294434
    8. '#' (adapté à ' #') → logprob: -11.110533714294434
    9. 'distance' → logprob: -11.110533714294434
    10. '```' → logprob: -11.360533714294434

Token 2597: ' Final' (ID: 12625)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.00012558852904476225
    2. 'return' → logprob: -9.750125885009766
    3. '       ' → logprob: -10.000125885009766
    4. 'result' → logprob: -11.000125885009766
    5. ' total' → logprob: -13.000125885009766
    6. 'cost' → logprob: -13.625125885009766
    7. 'length' → logprob: -13.875125885009766
    8. 'res' → logprob: -15.000125885009766
    9. '#' → logprob: -15.500125885009766
    10. 'weight' → logprob: -16.125125885009766

Token 2598: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.054873935878276825
    2. 'length' → logprob: -3.3048739433288574
    3. 'cost' → logprob: -4.554873943328857
    4. ' total' → logprob: -5.804873943328857
    5. 'result' → logprob: -6.929873943328857
    6. 'return' → logprob: -7.054873943328857
    7. '
' → logprob: -7.929873943328857
    8. '       ' → logprob: -8.0548734664917
    9. ' length' → logprob: -8.1798734664917
    10. ' cost' → logprob: -8.5548734664917

Token 2599: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.6202242970466614
    2. '_length' → logprob: -0.8702242970466614
    3. 'cost' → logprob: -3.6202242374420166
    4. '_cost' → logprob: -4.870224475860596
    5. ' length' → logprob: -4.995224475860596
    6. ' =' → logprob: -7.245224475860596
    7. ' cost' → logprob: -7.995224475860596
    8. '_distance' → logprob: -8.495223999023438
    9. '   ' → logprob: -8.620223999023438
    10. 'total' → logprob: -8.620223999023438

Token 2600: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4778473377227783
    2. 'total' → logprob: -0.9778473377227783
    3. 'result' → logprob: -6.227847099304199
    4. ' total' → logprob: -7.102847099304199
    5. '
' → logprob: -7.352847099304199
    6. 'length' → logprob: -8.9778470993042
    7. 'return' → logprob: -9.2278470993042
    8. '```' → logprob: -10.2278470993042
    9. 'sum' → logprob: -11.4778470993042
    10. 'final' → logprob: -11.4778470993042

Token 2601: '       ' (ID: 309)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.20411865413188934
    2. '       ' → logprob: -1.7041186094284058
    3. 'result' → logprob: -6.704118728637695
    4. 'return' → logprob: -7.204118728637695
    5. ' total' → logprob: -7.704118728637695
    6. '```' → logprob: -8.954118728637695
    7. 'length' → logprob: -9.079118728637695
    8. '
' → logprob: -10.829118728637695
    9. 'res' → logprob: -12.204118728637695
    10. 'sum' → logprob: -12.954118728637695

Token 2602: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.0012441592989489436
    2. 'return' → logprob: -7.001244068145752
    3. 'result' → logprob: -8.25124454498291
    4. 'length' → logprob: -10.25124454498291
    5. ' total' → logprob: -10.75124454498291
    6. '       ' → logprob: -11.50124454498291
    7. 'res' → logprob: -12.62624454498291
    8. 'tot' → logprob: -13.62624454498291
    9. '   ' → logprob: -16.376243591308594
    10. 'ret' → logprob: -16.876243591308594

Token 2603: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.049660343676805496
    2. '_' → logprob: -3.0496604442596436
    3. '_cost' → logprob: -7.7996602058410645
    4. '_len' → logprob: -8.299660682678223
    5. ' =' → logprob: -8.924660682678223
    6. ' _' → logprob: -9.549660682678223
    7. '=' → logprob: -10.174660682678223
    8. '_score' → logprob: -10.424660682678223
    9. '_sum' → logprob: -10.424660682678223
    10. '_distance' → logprob: -10.549660682678223

Token 2604: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07891777157783508
    2. '=' → logprob: -2.5789177417755127
    3. ' +=' → logprob: -10.578917503356934
    4. '       ' → logprob: -14.328917503356934
    5. '+=' → logprob: -14.578917503356934
    6. '        ' → logprob: -15.203917503356934
    7. '```' → logprob: -15.203917503356934
    8. ' ' → logprob: -15.328917503356934
    9. '   ' → logprob: -15.453917503356934
    10. '    ' → logprob: -15.703917503356934

Token 2605: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03868267685174942
    2. 'sum' → logprob: -3.288682699203491
    3. ' sum' → logprob: -7.413682460784912
    4. ' ' → logprob: -10.41368293762207
    5. '   ' → logprob: -11.78868293762207
    6. '
' → logprob: -16.66368293762207
    7. '       ' → logprob: -16.91368293762207
    8. '	sum' → logprob: -16.91368293762207
    9. '```' → logprob: -16.91368293762207
    10. '(sum' → logprob: -16.91368293762207

Token 2606: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.00527016120031476
    2. 'e' → logprob: -5.255270004272461
    3. '(' → logprob: -11.380270004272461
    4. '(edge' → logprob: -11.380270004272461
    5. '([' → logprob: -12.130270004272461
    6. '[e' → logprob: -13.130270004272461
    7. 'edge' → logprob: -13.255270004272461
    8. 'round' → logprob: -13.630270004272461
    9. '(round' → logprob: -13.880270004272461
    10. '(
' → logprob: -14.130270004272461

Token 2607: '.length' (ID: 3116)
  Prédit: '.length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.length' → logprob: -3.8889261304575484e-06
    2. '.' → logprob: -12.750003814697266
    3. ' .' → logprob: -14.500003814697266
    4. '.LENGTH' → logprob: -15.375003814697266
    5. '.l' → logprob: -16.750003814697266
    6. '.total' → logprob: -16.875003814697266
    7. '.Length' → logprob: -17.750003814697266
    8. '.size' → logprob: -18.250003814697266
    9. '.width' → logprob: -18.375003814697266
    10. 'length' → logprob: -18.375003814697266

Token 2608: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13143157958984375
    2. '+' → logprob: -3.3814315795898438
    3. ' for' → logprob: -3.6314315795898438
    4. ' +' → logprob: -3.6314315795898438
    5. 'for' → logprob: -4.506431579589844
    6. '<|end|>' → logprob: -4.506431579589844
    7. '()' → logprob: -4.631431579589844
    8. '       ' → logprob: -6.631431579589844
    9. '())' → logprob: -7.256431579589844
    10. '<|end|>' → logprob: -7.756431579589844

Token 2609: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00020413640595506877
    2. ' e' → logprob: -8.500204086303711
    3. 'mst' → logprob: -15.625204086303711
    4. '	e' → logprob: -15.875204086303711
    5. 'in' → logprob: -16.62520408630371
    6. ' in' → logprob: -17.00020408630371
    7. '```' → logprob: -17.25020408630371
    8. ')e' → logprob: -17.87520408630371
    9. '`' → logprob: -18.00020408630371
    10. 'ｅ' → logprob: -18.12520408630371

Token 2610: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07890962064266205
    2. 'in' → logprob: -2.5789096355438232
    3. 'e' → logprob: -11.203909873962402
    4. 's' → logprob: -13.203909873962402
    5. '.' → logprob: -13.953909873962402
    6. ')' → logprob: -14.328909873962402
    7. ' ' → logprob: -14.453909873962402
    8. '	in' → logprob: -14.828909873962402
    9. 'n' → logprob: -15.078909873962402
    10. '
' → logprob: -15.203909873962402

Token 2611: ' mst' (ID: 179099)
  Prédit: 'mst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mst' → logprob: -3.173704271830502e-06
    2. ' mst' → logprob: -12.75000286102295
    3. '   ' → logprob: -15.87500286102295
    4. 'mnt' → logprob: -16.750003814697266
    5. '
' → logprob: -17.250003814697266
    6. 'm' → logprob: -18.250003814697266
    7. 'ms' → logprob: -18.375003814697266
    8. 'msc' → logprob: -19.000003814697266
    9. '```' → logprob: -19.500003814697266
    10. 'mast' → logprob: -19.625003814697266

Token 2612: '_edges' (ID: 68870)
  Prédit: '_edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -6.635164754698053e-05
    2. 'edges' → logprob: -9.875066757202148
    3. 'es' → logprob: -11.875066757202148
    4. '_' → logprob: -12.250066757202148
    5. 'e' → logprob: -14.125066757202148
    6. 's' → logprob: -14.125066757202148
    7. 'ges' → logprob: -15.000066757202148
    8. '```' → logprob: -15.250066757202148
    9. '   ' → logprob: -15.875066757202148
    10. '
' → logprob: -16.00006675720215

Token 2613: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021319445222616196
    2. '       ' → logprob: -6.502131938934326
    3. ')+' → logprob: -8.502132415771484
    4. '<|end|>' → logprob: -9.252132415771484
    5. ')
' → logprob: -9.627132415771484
    6. ')return' → logprob: -9.627132415771484
    7. ' )' → logprob: -9.752132415771484
    8. '        ' → logprob: -10.127132415771484
    9. '
' → logprob: -10.752132415771484
    10. ' ' → logprob: -10.877132415771484

Token 2614: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04054128751158714
    2. '
' → logprob: -3.290541172027588
    3. 'return' → logprob: -6.165541172027588
    4. ' return' → logprob: -9.040541648864746
    5. '```' → logprob: -9.165541648864746
    6. '        
' → logprob: -9.790541648864746
    7. '<|end|>' → logprob: -10.165541648864746
    8. '   ' → logprob: -11.165541648864746
    9. '	' → logprob: -11.165541648864746
    10. '
' → logprob: -11.790541648864746

Token 2615: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0007287554908543825
    2. '       ' → logprob: -7.250728607177734
    3. ' return' → logprob: -11.000728607177734
    4. '```' → logprob: -13.375728607177734
    5. '
' → logprob: -15.000728607177734
    6. '	return' → logprob: -16.250728607177734
    7. '{return' → logprob: -16.625728607177734
    8. ':return' → logprob: -17.125728607177734
    9. '   ' → logprob: -17.750728607177734
    10. '_return' → logprob: -17.875728607177734

Token 2616: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.011047814972698689
    2. 'total' → logprob: -4.511047840118408
    3. '(total' → logprob: -18.38604736328125
    4. '	total' → logprob: -19.26104736328125
    5. ' ' → logprob: -19.63604736328125
    6. '_total' → logprob: -20.63604736328125
    7. '0' → logprob: -21.88604736328125
    8. '$total' → logprob: -22.13604736328125
    9. ' tota' → logprob: -22.76104736328125
    10. ' totale' → logprob: -22.88604736328125

Token 2617: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -7.465036105713807e-06
    2. '_' → logprob: -12.250007629394531
    3. '_total' → logprob: -13.625007629394531
    4. 'length' → logprob: -14.875007629394531
    5. '_l' → logprob: -15.375007629394531
    6. '_lengths' → logprob: -15.750007629394531
    7. 't' → logprob: -15.875007629394531
    8. ' _' → logprob: -16.25000762939453
    9. '_len' → logprob: -16.37500762939453
    10. 'Length' → logprob: -17.00000762939453

Token 2618: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2619: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2620: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.01892472617328167
    2. ' calculate' → logprob: -5.518924713134766
    3. 'main' → logprob: -5.643924713134766
    4. ' compute' → logprob: -5.643924713134766
    5. '__' → logprob: -6.268924713134766
    6. ' __' → logprob: -6.393924713134766
    7. ' solve' → logprob: -6.768924713134766
    8. '_' → logprob: -7.143924713134766
    9. ' _' → logprob: -8.018924713134766
    10. ' test' → logprob: -8.393924713134766

Token 2621: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00864282064139843
    2. '():
' → logprob: -4.758642673492432
    3. '()' → logprob: -10.63364315032959
    4. '():
' → logprob: -13.50864315032959
    5. ' ():' → logprob: -14.13364315032959
    6. '():

' → logprob: -14.13364315032959
    7. '(' → logprob: -14.25864315032959
    8. '_' → logprob: -15.25864315032959
    9. '()>' → logprob: -16.133642196655273
    10. ':' → logprob: -16.258642196655273

Token 2622: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32601404190063477
    2. 'import' → logprob: -1.9510140419006348
    3. ' points' → logprob: -2.4510140419006348
    4. 'points' → logprob: -3.9510140419006348
    5. ' import' → logprob: -3.9510140419006348
    6. '```' → logprob: -4.951014041900635
    7. '(points' → logprob: -6.701014041900635
    8. 'if' → logprob: -7.076014041900635
    9. ' if' → logprob: -7.076014041900635
    10. '	points' → logprob: -7.326014041900635

Token 2623: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.5853121280670166
    2. 'import' (adapté à ' import') → logprob: -0.8353121280670166
    3. '   ' → logprob: -5.4603118896484375
    4. ' n' → logprob: -5.7103118896484375
    5. 'n' → logprob: -6.9603118896484375
    6. '```' → logprob: -8.460311889648438
    7. ' points' → logprob: -8.585311889648438
    8. '#' → logprob: -9.210311889648438
    9. ' pass' → logprob: -9.335311889648438
    10. '	import' → logprob: -9.585311889648438

Token 2624: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00010413920972496271
    2. 'math' → logprob: -9.250103950500488
    3. ' sys' → logprob: -11.750103950500488
    4. '=sys' → logprob: -15.750103950500488
    5. '(sys' → logprob: -19.375104904174805
    6. '	sys' → logprob: -19.375104904174805
    7. ' math' → logprob: -20.750104904174805
    8. 'json' → logprob: -21.750104904174805
    9. '```' → logprob: -21.875104904174805
    10. '_sys' → logprob: -22.000104904174805

Token 2625: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022198783233761787
    2. 'input' → logprob: -4.772198677062988
    3. ' input' → logprob: -5.022198677062988
    4. '
' → logprob: -5.522198677062988
    5. ' lines' → logprob: -7.147198677062988
    6. ' readline' → logprob: -7.272198677062988
    7. '```' → logprob: -7.522198677062988
    8. 'n' → logprob: -8.397198677062988
    9. '    
' → logprob: -8.397198677062988
    10. 'data' → logprob: -8.772198677062988

Token 2626: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001263090642169118
    2. 'input' → logprob: -7.25126314163208
    3. '
' → logprob: -8.501262664794922
    4. ' input' → logprob: -9.001262664794922
    5. ' readline' → logprob: -9.501262664794922
    6. 'n' → logprob: -10.001262664794922
    7. '```' → logprob: -10.501262664794922
    8. ' lines' → logprob: -10.626262664794922
    9. '    
' → logprob: -11.126262664794922
    10. ' n' → logprob: -11.251262664794922

Token 2627: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.35984379053115845
    2. '   ' → logprob: -1.3598437309265137
    3. ' input' → logprob: -3.4848437309265137
    4. 'data' → logprob: -4.859843730926514
    5. 'n' → logprob: -5.984843730926514
    6. 'lines' → logprob: -6.359843730926514
    7. ' lines' → logprob: -7.234843730926514
    8. ' readline' → logprob: -7.234843730926514
    9. 'line' → logprob: -7.484843730926514
    10. ' n' → logprob: -7.984843730926514

Token 2628: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4170847237110138
    2. '=' → logprob: -1.6670846939086914
    3. '_line' → logprob: -2.5420846939086914
    4. '_data' → logprob: -3.2920846939086914
    5. '_' → logprob: -4.167084693908691
    6. '_lines' → logprob: -4.542084693908691
    7. ' =' → logprob: -5.417084693908691
    8. '().' → logprob: -5.667084693908691
    9. '_=' → logprob: -6.667084693908691
    10. '()
' → logprob: -7.667084693908691

Token 2629: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0011735594598576427
    2. ' sys' → logprob: -6.751173496246338
    3. '=sys' → logprob: -12.751173973083496
    4. 'input' → logprob: -15.501173973083496
    5. 'lambda' → logprob: -15.751173973083496
    6. '	sys' → logprob: -15.876173973083496
    7. '
' → logprob: -17.50117301940918
    8. '(sys' → logprob: -17.62617301940918
    9. 'stdin' → logprob: -19.50117301940918
    10. '   ' → logprob: -20.37617301940918

Token 2630: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.15612725913524628
    2. '().' → logprob: -2.7811272144317627
    3. '.readline' → logprob: -3.1561272144317627
    4. '.' → logprob: -3.2811272144317627
    5. '.stdout' → logprob: -7.531127452850342
    6. 'stdin' → logprob: -7.656127452850342
    7. '```' → logprob: -7.781127452850342
    8. '.read' → logprob: -8.281126976013184
    9. ' .' → logprob: -9.156126976013184
    10. '   ' → logprob: -9.281126976013184

Token 2631: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.07698928564786911
    2. '().' → logprob: -2.70198917388916
    3. '()' → logprob: -5.95198917388916
    4. '()
' → logprob: -6.20198917388916
    5. '.' → logprob: -6.57698917388916
    6. 'read' → logprob: -7.82698917388916
    7. '
' → logprob: -8.45198917388916
    8. ' =' → logprob: -9.32698917388916
    9. '=' → logprob: -9.45198917388916
    10. ' readline' → logprob: -10.20198917388916

Token 2632: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2734210193157196
    2. 'n' → logprob: -2.023421049118042
    3. '
' → logprob: -2.273421049118042
    4. '(n' → logprob: -6.648420810699463
    5. '()
' → logprob: -6.898420810699463
    6. 'num' → logprob: -7.398420810699463
    7. '```' → logprob: -8.398421287536621
    8. 'def' → logprob: -8.398421287536621
    9. 'N' → logprob: -8.773421287536621
    10. '()' → logprob: -9.023421287536621

Token 2633: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3891374170780182
    2. '   ' → logprob: -1.1391373872756958
    3. 'N' → logprob: -6.264137268066406
    4. 'num' → logprob: -8.764137268066406
    5. ' n' → logprob: -9.389137268066406
    6. '	n' → logprob: -10.014137268066406
    7. '
' → logprob: -10.639137268066406
    8. '```' → logprob: -11.014137268066406
    9. 't' → logprob: -11.264137268066406
    10. '_n' → logprob: -11.514137268066406

Token 2634: ' V' (ID: 631)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14253561198711395
    2. 'N' → logprob: -2.14253568649292
    3. 'T' → logprob: -4.51753568649292
    4. 't' → logprob: -5.51753568649292
    5. 'num' → logprob: -8.267535209655762
    6. 'Q' → logprob: -8.892535209655762
    7. '   ' → logprob: -9.267535209655762
    8. '
' → logprob: -10.017535209655762
    9. ' n' → logprob: -11.392535209655762
    10. '```' → logprob: -12.517535209655762

Token 2635: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6595874428749084
    2. '=' → logprob: -0.7845874428749084
    3. ',' → logprob: -3.9095873832702637
    4. '=int' → logprob: -5.159587383270264
    5. '   ' → logprob: -7.659587383270264
    6. 'E' → logprob: -9.284587860107422
    7. 'ALUE' → logprob: -10.284587860107422
    8. ' ' → logprob: -10.409587860107422
    9. 'al' → logprob: -10.659587860107422
    10. '  ' → logprob: -10.784587860107422

Token 2636: ' R' (ID: 460)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.061985164880752563
    2. ' E' → logprob: -2.8119852542877197
    3. '   ' → logprob: -12.56198501586914
    4. ' ' → logprob: -12.56198501586914
    5. ' =' → logprob: -12.68698501586914
    6. '
' → logprob: -13.06198501586914
    7. '	E' → logprob: -14.06198501586914
    8. '=' → logprob: -14.18698501586914
    9. ' 
' → logprob: -14.31198501586914
    10. '    
' → logprob: -14.31198501586914

Token 2637: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004415636416524649
    2. ' =' → logprob: -5.504415512084961
    3. ',' → logprob: -8.004415512084961
    4. '=int' → logprob: -13.754415512084961
    5. '=
' → logprob: -13.879415512084961
    6. '   ' → logprob: -14.879415512084961
    7. '=input' → logprob: -15.504415512084961
    8. ' ' → logprob: -16.00441551208496
    9. ')' → logprob: -16.25441551208496
    10. '    ' → logprob: -16.50441551208496

Token 2638: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.3132716417312622
    2. 'map' → logprob: -1.3132716417312622
    3. '[' → logprob: -11.813271522521973
    4. ' [' → logprob: -13.813271522521973
    5. '	map' → logprob: -14.438271522521973
    6. '(map' → logprob: -15.063271522521973
    7. '
' → logprob: -15.813271522521973
    8. ' ' → logprob: -16.31327247619629
    9. ' 
' → logprob: -16.56327247619629
    10. ' list' → logprob: -16.56327247619629

Token 2639: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00038074489566497505
    2. '(lambda' → logprob: -8.750380516052246
    3. '(str' → logprob: -9.375380516052246
    4. '(' → logprob: -9.500380516052246
    5. 'int' → logprob: -10.000380516052246
    6. '[int' → logprob: -11.375380516052246
    7. '=int' → logprob: -12.875380516052246
    8. '(input' → logprob: -13.500380516052246
    9. '(
' → logprob: -14.500380516052246
    10. '<int' → logprob: -14.625380516052246

Token 2640: ',' (ID: 11)
  Prédit: '(),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.5809796452522278
    2. '()' → logprob: -1.080979585647583
    3. ',' → logprob: -3.330979585647583
    4. '(input' → logprob: -3.955979585647583
    5. '().' → logprob: -4.080979824066162
    6. '(int' → logprob: -4.955979824066162
    7. '(' → logprob: -4.955979824066162
    8. '())' → logprob: -5.080979824066162
    9. '(str' → logprob: -6.080979824066162
    10. ',input' → logprob: -6.330979824066162

Token 2641: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0009138475870713592
    2. ' input' → logprob: -7.000913619995117
    3. 'str' → logprob: -13.500913619995117
    4. 'int' → logprob: -14.625913619995117
    5. '=input' → logprob: -15.250913619995117
    6. ')' → logprob: -16.375913619995117
    7. '(input' → logprob: -16.375913619995117
    8. '
' → logprob: -17.000913619995117
    9. ',input' → logprob: -18.375913619995117
    10. '_input' → logprob: -18.875913619995117

Token 2642: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.8206473871250637e-05
    2. '()' → logprob: -10.500028610229492
    3. '())' → logprob: -14.875028610229492
    4. '()
' → logprob: -15.625028610229492
    5. '(' → logprob: -16.500028610229492
    6. '()[' → logprob: -17.375028610229492
    7. '().
' → logprob: -18.125028610229492
    8. ' ().' → logprob: -18.250028610229492
    9. '().__' → logprob: -20.375028610229492
    10. '   ' → logprob: -20.500028610229492

Token 2643: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.004607776179909706
    2. 'strip' → logprob: -5.504607677459717
    3. 'rstrip' → logprob: -7.754607677459717
    4. '().' → logprob: -9.879608154296875
    5. '(split' → logprob: -10.254608154296875
    6. ' split' → logprob: -12.629608154296875
    7. ')' → logprob: -12.754608154296875
    8. 's' → logprob: -12.879608154296875
    9. '())' → logprob: -13.004608154296875
    10. 'spl' → logprob: -13.504608154296875

Token 2644: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6064556837081909
    2. '())
' → logprob: -0.8564556837081909
    3. ')' → logprob: -3.6064558029174805
    4. ')
' → logprob: -6.1064558029174805
    5. '()' → logprob: -7.4814558029174805
    6. '())
' → logprob: -10.10645580291748
    7. '()
' → logprob: -10.23145580291748
    8. '   ' → logprob: -10.85645580291748
    9. '(' → logprob: -11.23145580291748
    10. '().' → logprob: -12.73145580291748

Token 2645: '   ' (ID: 271)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.2576424479484558
    2. '   ' → logprob: -1.5076425075531006
    3. '	points' → logprob: -5.5076422691345215
    4. ' points' → logprob: -6.8826422691345215
    5. '    
' → logprob: -8.13264274597168
    6. '_points' → logprob: -8.75764274597168
    7. '(points' → logprob: -9.25764274597168
    8. '```' → logprob: -10.63264274597168
    9. '
' → logprob: -10.75764274597168
    10. '  
' → logprob: -12.38264274597168

Token 2646: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' (adapté à ' points') → logprob: -1.4736459888808895e-05
    2. ' points' → logprob: -11.875014305114746
    3. '   ' → logprob: -12.250014305114746
    4. '_points' → logprob: -13.125014305114746
    5. '	points' → logprob: -14.750014305114746
    6. '```' → logprob: -15.250014305114746
    7. '
' → logprob: -15.500014305114746
    8. '    
' → logprob: -17.125015258789062
    9. '(points' → logprob: -17.500015258789062
    10. 'coordinates' → logprob: -17.750015258789062

Token 2647: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0789669007062912
    2. ' =' → logprob: -2.5789668560028076
    3. '=[]' → logprob: -9.703967094421387
    4. '   ' → logprob: -11.703967094421387
    5. '=[]
' → logprob: -12.453967094421387
    6. '[]' → logprob: -13.203967094421387
    7. '[' → logprob: -14.078967094421387
    8. '[:]' → logprob: -14.578967094421387
    9. '=[' → logprob: -15.203967094421387
    10. '.append' → logprob: -15.203967094421387

Token 2648: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.20855724811553955
    2. '[' → logprob: -1.7085572481155396
    3. '[]' → logprob: -4.95855712890625
    4. '[class' → logprob: -10.45855712890625
    5. '[int' → logprob: -11.20855712890625
    6. '[V' → logprob: -11.95855712890625
    7. '[
' → logprob: -12.08355712890625
    8. '[array' → logprob: -12.20855712890625
    9. '[p' → logprob: -12.83355712890625
    10. '[start' → logprob: -12.95855712890625

Token 2649: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018754635006189346
    2. '   ' → logprob: -4.018754482269287
    3. ' for' → logprob: -7.518754482269287
    4. '	for' → logprob: -9.768754959106445
    5. '
' → logprob: -12.393754959106445
    6. '```' → logprob: -15.643754959106445
    7. '    
' → logprob: -15.768754959106445
    8. ' ' → logprob: -16.518754959106445
    9. '  ' → logprob: -18.268754959106445
    10. 'while' → logprob: -18.893754959106445

Token 2650: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -6.869017852295656e-06
    2. ' for' → logprob: -12.000006675720215
    3. '   ' → logprob: -14.250006675720215
    4. '
' → logprob: -18.50000762939453
    5. '	for' → logprob: -19.12500762939453
    6. '```' → logprob: -22.87500762939453
    7. 'while' → logprob: -25.75000762939453
    8. 'from' → logprob: -26.00000762939453
    9. '``' → logprob: -26.00000762939453
    10. '    
' → logprob: -26.25000762939453

Token 2651: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0087516784551553e-05
    2. '_range' → logprob: -12.75001049041748
    3. '_i' → logprob: -12.75001049041748
    4. '_
' → logprob: -13.12501049041748
    5. '_in' → logprob: -13.50001049041748
    6. '_v' → logprob: -14.87501049041748
    7. '
' → logprob: -15.87501049041748
    8. '_V' → logprob: -15.87501049041748
    9. ' _' → logprob: -17.250009536743164
    10. '_=' → logprob: -17.375009536743164

Token 2652: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.011872077360749245
    2. ' in' → logprob: -5.011872291564941
    3. 'range' → logprob: -5.886872291564941
    4. ' range' → logprob: -6.886872291564941
    5. 'in' → logprob: -7.136872291564941
    6. '_range' → logprob: -7.761872291564941
    7. '
' → logprob: -10.511872291564941
    8. '   ' → logprob: -10.886872291564941
    9. '_RANGE' → logprob: -10.886872291564941
    10. ' _' → logprob: -11.386872291564941

Token 2653: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.8624639324116288e-06
    2. ' range' → logprob: -13.250001907348633
    3. '
' → logprob: -18.000001907348633
    4. '   ' → logprob: -18.125001907348633
    5. '(range' → logprob: -18.875001907348633
    6. ' ' → logprob: -19.625001907348633
    7. 'V' → logprob: -19.750001907348633
    8. '  ' → logprob: -20.250001907348633
    9. '	range' → logprob: -21.125001907348633
    10. '    ' → logprob: -21.125001907348633

Token 2654: '(V' (ID: 16949)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.061987970024347305
    2. '(V' → logprob: -2.81198787689209
    3. ' V' → logprob: -11.31198787689209
    4. '   ' → logprob: -12.18698787689209
    5. '	V' → logprob: -13.43698787689209
    6. '(' → logprob: -14.81198787689209
    7. ')V' → logprob: -15.43698787689209
    8. '
' → logprob: -15.81198787689209
    9. '_V' → logprob: -16.186988830566406
    10. 'Q' → logprob: -16.311988830566406

Token 2655: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.002666265470907092
    2. '):' → logprob: -6.127666473388672
    3. '   ' → logprob: -7.752666473388672
    4. ':
' → logprob: -10.752666473388672
    5. '():
' → logprob: -11.252666473388672
    6. '       ' → logprob: -12.627666473388672
    7. '):
' → logprob: -12.627666473388672
    8. ')' → logprob: -13.127666473388672
    9. ',' → logprob: -13.252666473388672
    10. ':' → logprob: -13.502666473388672

Token 2656: '       ' (ID: 309)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07725834101438522
    2. '       ' → logprob: -2.702258348464966
    3. '   ' → logprob: -5.077258110046387
    4. ' x' → logprob: -7.077258110046387
    5. '```' → logprob: -9.577258110046387
    6. 'line' → logprob: -9.952258110046387
    7. 'xy' → logprob: -10.702258110046387
    8. '	x' → logprob: -10.702258110046387
    9. ' line' → logprob: -11.077258110046387
    10. ' ' → logprob: -11.952258110046387

Token 2657: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -6.988221684878226e-06
    2. ' x' → logprob: -12.250006675720215
    3. '   ' → logprob: -13.375006675720215
    4. '	x' → logprob: -15.250006675720215
    5. '       ' → logprob: -15.875006675720215
    6. '
' → logprob: -16.62500762939453
    7. 's' → logprob: -17.25000762939453
    8. 'line' → logprob: -17.25000762939453
    9. '```' → logprob: -17.37500762939453
    10. '_x' → logprob: -17.87500762939453

Token 2658: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0299703199416399
    2. ',y' → logprob: -3.529970407485962
    3. ' ,' → logprob: -8.654970169067383
    4. '_,' → logprob: -11.404970169067383
    5. ',v' → logprob: -11.779970169067383
    6. 'y' → logprob: -12.279970169067383
    7. ',p' → logprob: -12.279970169067383
    8. ',
' → logprob: -12.529970169067383
    9. ',int' → logprob: -12.779970169067383
    10. '=' → logprob: -12.904970169067383

Token 2659: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0004306692280806601
    2. ' y' → logprob: -7.750430583953857
    3. '	y' → logprob: -19.125431060791016
    4. ',y' → logprob: -20.875431060791016
    5. '_y' → logprob: -22.125431060791016
    6. '‘y' → logprob: -23.125431060791016
    7. '   ' → logprob: -23.625431060791016
    8. '=' → logprob: -23.750431060791016
    9. ''y' → logprob: -24.125431060791016
    10. ' ' → logprob: -24.250431060791016

Token 2660: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001170460251159966
    2. ' =' → logprob: -6.751170635223389
    3. '=
' → logprob: -15.62617015838623
    4. '=int' → logprob: -16.751171112060547
    5. ',' → logprob: -17.126171112060547
    6. '   ' → logprob: -18.626171112060547
    7. ')' → logprob: -18.751171112060547
    8. '=input' → logprob: -18.751171112060547
    9. '=line' → logprob: -18.751171112060547
    10. '<|end|>' → logprob: -19.001171112060547

Token 2661: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.008616935461759567
    2. ' map' → logprob: -4.758616924285889
    3. '
' → logprob: -13.258617401123047
    4. '	map' → logprob: -14.633617401123047
    5. '   ' → logprob: -16.133617401123047
    6. ' ' → logprob: -18.883617401123047
    7. '(map' → logprob: -19.633617401123047
    8. ' ' → logprob: -19.633617401123047
    9. '
' → logprob: -19.758617401123047
    10. '    ' → logprob: -19.883617401123047

Token 2662: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.061973731964826584
    2. 'int' → logprob: -2.811973810195923
    3. '   ' → logprob: -12.561973571777344
    4. '[int' → logprob: -13.436973571777344
    5. '=int' → logprob: -14.811973571777344
    6. '```' → logprob: -15.811973571777344
    7. '<int' → logprob: -16.186973571777344
    8. '
' → logprob: -16.311973571777344
    9. 'input' → logprob: -16.686973571777344
    10. ' int' → logprob: -17.311973571777344

Token 2663: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4414772689342499
    2. 'input' → logprob: -1.5664772987365723
    3. ',input' → logprob: -1.9414772987365723
    4. '(input' → logprob: -5.566477298736572
    5. '   ' → logprob: -7.691477298736572
    6. ' input' → logprob: -9.191476821899414
    7. '(),' → logprob: -9.441476821899414
    8. '=input' → logprob: -9.566476821899414
    9. ')' → logprob: -10.191476821899414
    10. '
' → logprob: -11.316476821899414

Token 2664: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -4.5491004129871726e-05
    2. ' input' → logprob: -10.000045776367188
    3. 'map' → logprob: -20.875045776367188
    4. '(input' → logprob: -22.000045776367188
    5. 'output' → logprob: -22.875045776367188
    6. '	input' → logprob: -23.250045776367188
    7. '<input' → logprob: -24.375045776367188
    8. ' ' → logprob: -24.375045776367188
    9. '_input' → logprob: -24.625045776367188
    10. '=input' → logprob: -24.750045776367188

Token 2665: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.512236498361744e-07
    2. '()' → logprob: -15.000000953674316
    3. '()
' → logprob: -16.5
    4. '())' → logprob: -17.25
    5. ')' → logprob: -17.375
    6. '.split' → logprob: -18.5
    7. '(' → logprob: -18.625
    8. '.readline' → logprob: -18.625
    9. '().
' → logprob: -18.75
    10. ' ().' → logprob: -18.75

Token 2666: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.8550976164988242e-05
    2. 'strip' → logprob: -11.000018119812012
    3. ' split' → logprob: -13.625018119812012
    4. 'rstrip' → logprob: -15.000018119812012
    5. '.split' → logprob: -15.750018119812012
    6. '(split' → logprob: -16.500019073486328
    7. '_split' → logprob: -16.750019073486328
    8. 'spl' → logprob: -17.750019073486328
    9. ')' → logprob: -19.000019073486328
    10. 'read' → logprob: -19.500019073486328

Token 2667: '())
' (ID: 4574)
  Prédit: '())
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())
' → logprob: -0.31691423058509827
    2. ')
' → logprob: -1.3169142007827759
    3. ')' → logprob: -6.066914081573486
    4. '())' → logprob: -6.941914081573486
    5. '()' → logprob: -8.816914558410645
    6. '()
' → logprob: -9.066914558410645
    7. '   ' → logprob: -10.066914558410645
    8. '       ' → logprob: -10.941914558410645
    9. '(' → logprob: -11.066914558410645
    10. '())
' → logprob: -11.566914558410645

Token 2668: '       ' (ID: 309)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.0448329783976078
    2. '   ' → logprob: -3.544832944869995
    3. ' points' → logprob: -4.419833183288574
    4. '	points' → logprob: -6.294833183288574
    5. '       ' → logprob: -7.544833183288574
    6. 'p' → logprob: -7.794833183288574
    7. 'point' → logprob: -9.419833183288574
    8. '
' → logprob: -10.794833183288574
    9. '```' → logprob: -10.919833183288574
    10. '(points' → logprob: -11.544833183288574

Token 2669: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' (adapté à ' points') → logprob: -2.963691804325208e-05
    2. '   ' → logprob: -11.375029563903809
    3. ' points' → logprob: -11.625029563903809
    4. 'point' → logprob: -11.875029563903809
    5. '       ' → logprob: -13.875029563903809
    6. 'p' → logprob: -14.125029563903809
    7. '	points' → logprob: -14.375029563903809
    8. 'pts' → logprob: -17.375030517578125
    9. '
' → logprob: -17.500030517578125
    10. '(points' → logprob: -18.375030517578125

Token 2670: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0010448360117152333
    2. '.' → logprob: -6.876044750213623
    3. 'append' → logprob: -12.251045227050781
    4. '.app' → logprob: -13.251045227050781
    5. ').' → logprob: -13.751045227050781
    6. ' .' → logprob: -13.876045227050781
    7. 'points' → logprob: -14.376045227050781
    8. ',' → logprob: -14.751045227050781
    9. '.ap' → logprob: -14.751045227050781
    10. '.p' → logprob: -14.876045227050781

Token 2671: '(Point' (ID: 72072)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.005279534496366978
    2. '(Point' → logprob: -5.255279541015625
    3. ' Point' → logprob: -10.005279541015625
    4. '	Point' → logprob: -14.255279541015625
    5. '_Point' → logprob: -18.880279541015625
    6. '.Point' → logprob: -19.380279541015625
    7. '   ' → logprob: -20.505279541015625
    8. '<Point' → logprob: -21.130279541015625
    9. '_point' → logprob: -21.380279541015625
    10. 'Points' → logprob: -21.755279541015625

Token 2672: '(x' (ID: 4061)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00028612653841264546
    2. '(x' → logprob: -8.250286102294922
    3. ' x' → logprob: -10.625286102294922
    4. ')x' → logprob: -15.125286102294922
    5. '	x' → logprob: -15.500286102294922
    6. '(' → logprob: -16.375286102294922
    7. ')' → logprob: -17.250286102294922
    8. '(
' → logprob: -17.375286102294922
    9. 'int' → logprob: -18.000286102294922
    10. ',x' → logprob: -18.500286102294922

Token 2673: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018565983918961138
    2. ',y' → logprob: -8.7501859664917
    3. ' ,' → logprob: -10.7501859664917
    4. ',
' → logprob: -12.3751859664917
    5. ',x' → logprob: -15.1251859664917
    6. '<|end|>' → logprob: -15.3751859664917
    7. ',p' → logprob: -15.7501859664917
    8. '   ' → logprob: -16.000185012817383
    9. ',user' → logprob: -16.250185012817383
    10. '‌,' → logprob: -16.500185012817383

Token 2674: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.029750484973192215
    2. ' y' → logprob: -3.5297505855560303
    3. '	y' → logprob: -19.40475082397461
    4. ' ' → logprob: -19.77975082397461
    5. '   ' → logprob: -20.52975082397461
    6. ' ' → logprob: -20.77975082397461
    7. ')y' → logprob: -22.15475082397461
    8. ''y' → logprob: -22.40475082397461
    9. '    ' → logprob: -22.65475082397461
    10. '  ' → logprob: -22.77975082397461

Token 2675: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.039012011140584946
    2. ',' → logprob: -3.4140119552612305
    3. '))
' → logprob: -5.2890119552612305
    4. ')' → logprob: -9.03901195526123
    5. '   ' → logprob: -9.16401195526123
    6. '       ' → logprob: -9.78901195526123
    7. ',
' → logprob: -11.41401195526123
    8. ',))
' → logprob: -12.78901195526123
    9. ')))' → logprob: -13.16401195526123
    10. ' ))' → logprob: -13.28901195526123

Token 2676: '   ' (ID: 271)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.5285259485244751
    2. '
' → logprob: -1.528525948524475
    3. '   ' → logprob: -1.903525948524475
    4. 'for' → logprob: -3.7785258293151855
    5. '```' → logprob: -5.1535258293151855
    6. 'roads' → logprob: -5.2785258293151855
    7. '    
' → logprob: -5.4035258293151855
    8. 'R' → logprob: -6.4035258293151855
    9. 'r' → logprob: -6.7785258293151855
    10. ' edges' → logprob: -6.7785258293151855

Token 2677: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.000763287884183228
    2. ' edges' → logprob: -7.750763416290283
    3. '   ' → logprob: -8.875762939453125
    4. 'original' → logprob: -9.500762939453125
    5. 'roads' → logprob: -9.500762939453125
    6. 'road' → logprob: -11.375762939453125
    7. 'edge' → logprob: -11.625762939453125
    8. '
' → logprob: -11.750762939453125
    9. 'for' → logprob: -12.375762939453125
    10. 'existing' → logprob: -13.250762939453125

Token 2678: '_indices' (ID: 43508)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6764358282089233
    2. '_indices' → logprob: -0.8014358282089233
    3. '=' → logprob: -3.426435947418213
    4. '_' → logprob: -4.801435947418213
    5. '=[]' → logprob: -7.176435947418213
    6. '=[]
' → logprob: -7.301435947418213
    7. '   ' → logprob: -7.801435947418213
    8. 's' → logprob: -8.926435470581055
    9. 'indices' → logprob: -10.551435470581055
    10. '_input' → logprob: -10.676435470581055

Token 2679: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12725932896137238
    2. '=' → logprob: -2.1272592544555664
    3. '=[]' → logprob: -8.627259254455566
    4. '=[]
' → logprob: -9.252259254455566
    5. '.append' → logprob: -9.877259254455566
    6. '   ' → logprob: -12.877259254455566
    7. '[]' → logprob: -14.002259254455566
    8. '=[]
' → logprob: -14.377259254455566
    9. '[:]' → logprob: -15.752259254455566
    10. '.extend' → logprob: -16.002260208129883

Token 2680: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9085476994514465
    2. '[]' → logprob: -0.9085476994514465
    3. '[]
' → logprob: -1.6585476398468018
    4. '[int' → logprob: -6.408547878265381
    5. ' []' → logprob: -7.908547878265381
    6. '[
' → logprob: -7.908547878265381
    7. '[s' → logprob: -8.158547401428223
    8. ' [' → logprob: -9.533547401428223
    9. '[str' → logprob: -10.033547401428223
    10. '[t' → logprob: -10.158547401428223

Token 2681: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7999678254127502
    2. 'for' → logprob: -0.7999678254127502
    3. ' for' → logprob: -2.2999677658081055
    4. '
' → logprob: -7.1749677658081055
    5. '	for' → logprob: -8.549967765808105
    6. '    
' → logprob: -10.174967765808105
    7. 'while' → logprob: -11.424967765808105
    8. ' 
' → logprob: -11.549967765808105
    9. '    ' → logprob: -11.799967765808105
    10. ' ' → logprob: -12.049967765808105

Token 2682: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0010616290383040905
    2. ' for' → logprob: -7.00106143951416
    3. '   ' → logprob: -8.87606143951416
    4. '	for' → logprob: -11.75106143951416
    5. '
' → logprob: -14.00106143951416
    6. 'while' → logprob: -14.37606143951416
    7. '_' → logprob: -14.87606143951416
    8. '```' → logprob: -14.87606143951416
    9. ' 
' → logprob: -15.12606143951416
    10. '    
' → logprob: -15.87606143951416

Token 2683: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.531315314830863e-06
    2. ' _' → logprob: -12.625003814697266
    3. '_
' → logprob: -16.625003814697266
    4. '   ' → logprob: -16.625003814697266
    5. ' in' → logprob: -17.250003814697266
    6. '_range' → logprob: -17.750003814697266
    7. '_
' → logprob: -18.250003814697266
    8. ' ' → logprob: -19.125003814697266
    9. '_=' → logprob: -19.625003814697266
    10. '_in' → logprob: -19.875003814697266

Token 2684: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00029685118352063
    2. 'in' → logprob: -8.125296592712402
    3. '_' → logprob: -15.250296592712402
    4. ' ' → logprob: -15.250296592712402
    5. '
' → logprob: -16.37529754638672
    6. 'range' → logprob: -16.37529754638672
    7. ' _' → logprob: -16.75029754638672
    8. ' ' → logprob: -17.62529754638672
    9. 'i' → logprob: -17.62529754638672
    10. 's' → logprob: -18.00029754638672

Token 2685: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014196764677762985
    2. ' range' → logprob: -4.264196872711182
    3. '_' → logprob: -10.389196395874023
    4. '
' → logprob: -13.389196395874023
    5. ' in' → logprob: -15.014196395874023
    6. '_range' → logprob: -15.264196395874023
    7. '   ' → logprob: -16.014196395874023
    8. ' ' → logprob: -16.139196395874023
    9. '	range' → logprob: -16.764196395874023
    10. 'in' → logprob: -17.014196395874023

Token 2686: '(R' (ID: 4092)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -9.253090865968261e-06
    2. '(R' → logprob: -11.750009536743164
    3. ' R' → logprob: -13.625009536743164
    4. '   ' → logprob: -18.000009536743164
    5. '	R' → logprob: -18.500009536743164
    6. '_R' → logprob: -21.125009536743164
    7. '<R' → logprob: -22.125009536743164
    8. '[R' → logprob: -22.375009536743164
    9. '(' → logprob: -22.625009536743164
    10. '
' → logprob: -23.625009536743164

Token 2687: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4854218363761902
    2. '   ' → logprob: -1.235421895980835
    3. '       ' → logprob: -2.485421895980835
    4. '():
' → logprob: -4.735421657562256
    5. '):' → logprob: -6.985421657562256
    6. '()):
' → logprob: -8.360422134399414
    7. ':
' → logprob: -8.485422134399414
    8. ',' → logprob: -8.860422134399414
    9. '  ' → logprob: -9.735422134399414
    10. '    ' → logprob: -9.985422134399414

Token 2688: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036276742815971375
    2. '   ' → logprob: -3.4112768173217773
    3. ' u' → logprob: -6.786276817321777
    4. 'u' → logprob: -7.036276817321777
    5. '(u' → logprob: -8.036276817321777
    6. ' line' → logprob: -10.036276817321777
    7. 't' → logprob: -10.161276817321777
    8. ' (' → logprob: -10.786276817321777
    9. ' edges' → logprob: -10.911276817321777
    10. '```' → logprob: -10.911276817321777

Token 2689: ' s' (ID: 265)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.005409730598330498
    2. ' u' → logprob: -5.3804097175598145
    3. '   ' → logprob: -7.2554097175598145
    4. 'a' → logprob: -10.380410194396973
    5. '       ' → logprob: -11.005410194396973
    6. '	u' → logprob: -11.005410194396973
    7. '```' → logprob: -12.130410194396973
    8. 'line' → logprob: -12.505410194396973
    9. ' line' → logprob: -13.130410194396973
    10. '*u' → logprob: -13.505410194396973

Token 2690: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013409859500825405
    2. ' ,' → logprob: -5.0134100914001465
    3. ',input' → logprob: -7.0134100914001465
    4. '_,' → logprob: -7.2634100914001465
    5. ',i' → logprob: -7.2634100914001465
    6. ',p' → logprob: -7.2634100914001465
    7. ',u' → logprob: -7.3884100914001465
    8. ',tr' → logprob: -7.5134100914001465
    9. ',e' → logprob: -7.7634100914001465
    10. 'tr' → logprob: -7.8884100914001465

Token 2691: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0042351046577095985
    2. 'd' → logprob: -6.00423526763916
    3. 'e' → logprob: -6.75423526763916
    4. ' t' → logprob: -7.50423526763916
    5. 'f' → logprob: -10.12923526763916
    6. ' d' → logprob: -14.00423526763916
    7. ' e' → logprob: -15.25423526763916
    8. 'g' → logprob: -15.75423526763916
    9. 'c' → logprob: -16.504234313964844
    10. 'b' → logprob: -17.379234313964844

Token 2692: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326720118522644
    2. ' =' → logprob: -1.3132672309875488
    3. ',' → logprob: -12.93826675415039
    4. '   ' → logprob: -14.18826675415039
    5. ')' → logprob: -14.43826675415039
    6. ' ' → logprob: -14.43826675415039
    7. '=line' → logprob: -14.81326675415039
    8. '=input' → logprob: -14.93826675415039
    9. '=int' → logprob: -16.31326675415039
    10. '=
' → logprob: -16.56326675415039

Token 2693: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.12692853808403015
    2. ' map' → logprob: -2.1269285678863525
    3. '	map' → logprob: -15.001928329467773
    4. 'm' → logprob: -16.876928329467773
    5. '   ' → logprob: -17.001928329467773
    6. '(map' → logprob: -17.501928329467773
    7. 'input' → logprob: -17.626928329467773
    8. '[' → logprob: -18.626928329467773
    9. '_map' → logprob: -18.751928329467773
    10. '.map' → logprob: -18.876928329467773

Token 2694: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.001596153131686151
    2. 'int' → logprob: -6.501595973968506
    3. '=int' → logprob: -9.876596450805664
    4. '[int' → logprob: -10.376596450805664
    5. '(lambda' → logprob: -12.376596450805664
    6. '<int' → logprob: -12.876596450805664
    7. ',int' → logprob: -13.876596450805664
    8. ']int' → logprob: -13.876596450805664
    9. '(
' → logprob: -14.376596450805664
    10. '(' → logprob: -14.876596450805664

Token 2695: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.3115576207637787
    2. ',' → logprob: -1.561557650566101
    3. ',int' → logprob: -3.4365575313568115
    4. 'int' → logprob: -3.8115575313568115
    5. '=int' → logprob: -5.686557769775391
    6. '[int' → logprob: -9.68655776977539
    7. ':int' → logprob: -10.56155776977539
    8. ' int' → logprob: -11.18655776977539
    9. ')' → logprob: -11.18655776977539
    10. 'lambda' → logprob: -11.31155776977539

Token 2696: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.047574855387210846
    2. 'int' → logprob: -3.297574758529663
    3. ' input' → logprob: -4.672574996948242
    4. 'str' → logprob: -9.297574996948242
    5. 'lambda' → logprob: -10.422574996948242
    6. 'map' → logprob: -11.922574996948242
    7. ' int' → logprob: -12.547574996948242
    8. 's' → logprob: -12.672574996948242
    9. 'split' → logprob: -13.797574996948242
    10. 'tuple' → logprob: -14.297574996948242

Token 2697: '().' (ID: 1454)
  Prédit: '()-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()-' → logprob: -0.8507534265518188
    2. '().' → logprob: -1.1007534265518188
    3. '()' → logprob: -2.4757533073425293
    4. '(),' → logprob: -2.4757533073425293
    5. ',' → logprob: -3.6007533073425293
    6. '=' → logprob: -4.475753307342529
    7. '=lambda' → logprob: -4.600753307342529
    8. 's' → logprob: -4.975753307342529
    9. '()
' → logprob: -6.100753307342529
    10. '=int' → logprob: -6.600753307342529

Token 2698: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.896309739408025e-07
    2. 's' → logprob: -15.000000953674316
    3. 'spl' → logprob: -15.625000953674316
    4. ' split' → logprob: -15.875000953674316
    5. '(split' → logprob: -16.625
    6. 'input' → logprob: -16.875
    7. 'skip' → logprob: -17.5
    8. '.split' → logprob: -17.625
    9. 'strip' → logprob: -17.75
    10. 'sys' → logprob: -19.125

Token 2699: '())
' (ID: 4574)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3959031105041504
    2. '())
' → logprob: -1.1459031105041504
    3. ')' → logprob: -4.89590311050415
    4. '()' → logprob: -7.64590311050415
    5. '())' → logprob: -7.64590311050415
    6. '()
' → logprob: -7.77090311050415
    7. '   ' → logprob: -9.770902633666992
    8. '(' → logprob: -10.770902633666992
    9. ' )
' → logprob: -10.895902633666992
    10. ')
' → logprob: -11.645902633666992

Token 2700: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024100957438349724
    2. ' edges' → logprob: -4.3991007804870605
    3. 'edges' → logprob: -4.8991007804870605
    4. '   ' → logprob: -6.3991007804870605
    5. '(edges' → logprob: -6.7741007804870605
    6. '<|end|>' → logprob: -7.5241007804870605
    7. '	   ' → logprob: -8.399101257324219
    8. '	' → logprob: -8.774101257324219
    9. '.edges' → logprob: -9.524101257324219
    10. '<|end|>' → logprob: -10.024101257324219

Token 2701: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.284748911857605
    2. ' edges' → logprob: -1.784748911857605
    3. '       ' → logprob: -2.5347490310668945
    4. '   ' → logprob: -7.5347490310668945
    5. 's' → logprob: -9.159749031066895
    6. ' s' → logprob: -11.409749031066895
    7. '(edges' → logprob: -12.034749031066895
    8. '	' → logprob: -12.159749031066895
    9. '.edges' → logprob: -12.534749031066895
    10. '           ' → logprob: -13.034749031066895

Token 2702: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.018495695665478706
    2. '.append' → logprob: -4.018495559692383
    3. 'indices' → logprob: -8.268495559692383
    4. '   ' → logprob: -10.643495559692383
    5. '"indices' → logprob: -10.768495559692383
    6. '_.' → logprob: -11.143495559692383
    7. 'Indices' → logprob: -11.518495559692383
    8. 's' → logprob: -12.518495559692383
    9. '.indices' → logprob: -12.518495559692383
    10. '       ' → logprob: -13.018495559692383

Token 2703: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0006016458501107991
    2. '.' → logprob: -7.500601768493652
    3. '.app' → logprob: -10.875601768493652
    4. '       ' → logprob: -11.375601768493652
    5. '           ' → logprob: -11.750601768493652
    6. 'append' → logprob: -12.750601768493652
    7. ' .' → logprob: -13.000601768493652
    8. '().' → logprob: -13.375601768493652
    9. '   ' → logprob: -14.000601768493652
    10. '=' → logprob: -15.125601768493652

Token 2704: '((' (ID: 2054)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.01429925300180912
    2. ' (' → logprob: -4.264299392700195
    3. '((' → logprob: -9.514299392700195
    4. '(' → logprob: -10.139299392700195
    5. '(t' → logprob: -10.889299392700195
    6. '   ' → logprob: -12.639299392700195
    7. '(
' → logprob: -15.639299392700195
    8. '       ' → logprob: -16.014299392700195
    9. '(S' → logprob: -16.514299392700195
    10. '(int' → logprob: -16.764299392700195

Token 2705: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2664456789934775e-06
    2. ' s' → logprob: -13.750000953674316
    3. '(s' → logprob: -16.750001907348633
    4. '   ' → logprob: -17.375001907348633
    5. '{s' → logprob: -19.625001907348633
    6. '	s' → logprob: -20.875001907348633
    7. '       ' → logprob: -21.875001907348633
    8. '    ' → logprob: -21.875001907348633
    9. ' ' → logprob: -22.125001907348633
    10. '  ' → logprob: -22.250001907348633

Token 2706: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06729204952716827
    2. '-' → logprob: -2.9422919750213623
    3. ' ,' → logprob: -4.692292213439941
    4. ' -' → logprob: -6.067292213439941
    5. ',t' → logprob: -7.317292213439941
    6. ',
' → logprob: -9.192292213439941
    7. ' ' → logprob: -10.692292213439941
    8. '   ' → logprob: -11.442292213439941
    9. '-,' → logprob: -11.442292213439941
    10. ' ,
' → logprob: -11.942292213439941

Token 2707: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '１' → logprob: -21.25
    4. '2' → logprob: -21.375
    5. '<|end|>' → logprob: -21.5
    6. '```' → logprob: -21.75
    7. '১' → logprob: -22.125
    8. '   ' → logprob: -22.25
    9. '۱' → logprob: -22.5
    10. '0' → logprob: -22.5

Token 2708: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002613358374219388
    2. ',t' → logprob: -8.625261306762695
    3. ',
' → logprob: -10.000261306762695
    4. ' ,' → logprob: -10.250261306762695
    5. ',s' → logprob: -14.500261306762695
    6. '<|end|>' → logprob: -16.125261306762695
    7. '‌,' → logprob: -17.000261306762695
    8. ',v' → logprob: -17.250261306762695
    9. ',\
' → logprob: -17.500261306762695
    10. ',
' → logprob: -17.625261306762695

Token 2709: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.001170460251159966
    2. ' t' → logprob: -6.751170635223389
    3. '(t' → logprob: -15.75117015838623
    4. '	t' → logprob: -17.251171112060547
    5. '`t' → logprob: -17.876171112060547
    6. '   ' → logprob: -18.376171112060547
    7. ')t' → logprob: -20.751171112060547
    8. '       ' → logprob: -21.251171112060547
    9. '$t' → logprob: -22.251171112060547
    10. '_t' → logprob: -22.251171112060547

Token 2710: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0001584850688232109
    2. '1' → logprob: -9.250158309936523
    3. ' -' → logprob: -9.750158309936523
    4. '0' → logprob: -13.625158309936523
    5. ')' → logprob: -14.125158309936523
    6. ')-' → logprob: -14.375158309936523
    7. '[' → logprob: -14.875158309936523
    8. '<|end|>' → logprob: -15.000158309936523
    9. '–' → logprob: -15.125158309936523
    10. '
' → logprob: -16.125158309936523

Token 2711: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -19.250001907348633
    4. '  ' → logprob: -21.875001907348633
    5. '```' → logprob: -22.125001907348633
    6. '
' → logprob: -22.562501907348633
    7. '１' → logprob: -22.562501907348633
    8. '0' → logprob: -22.687501907348633
    9. '۱' → logprob: -22.750001907348633
    10. '2' → logprob: -22.750001907348633

Token 2712: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0009289718000218272
    2. '))
' → logprob: -7.00092887878418
    3. ')' → logprob: -11.37592887878418
    4. ' ))' → logprob: -12.87592887878418
    5. '   ' → logprob: -13.00092887878418
    6. '       ' → logprob: -13.87592887878418
    7. ')))' → logprob: -16.37592887878418
    8. ' ' → logprob: -16.37592887878418
    9. '));' → logprob: -16.87592887878418
    10. '))

' → logprob: -17.25092887878418

Token 2713: '   ' (ID: 271)
  Prédit: 'planner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'planner' → logprob: -0.38034069538116455
    2. '   ' → logprob: -2.130340576171875
    3. 'result' → logprob: -2.130340576171875
    4. 'v' → logprob: -4.130340576171875
    5. 'road' → logprob: -4.255340576171875
    6. 'plan' → logprob: -4.380340576171875
    7. '
' → logprob: -4.380340576171875
    8. '```' → logprob: -5.005340576171875
    9. 'pl' → logprob: -5.505340576171875
    10. 'vp' → logprob: -5.505340576171875

Token 2714: ' planner' (ID: 66791)
  Prédit: 'planner'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'planner' (adapté à ' planner') → logprob: -0.00047214110963977873
    2. '   ' → logprob: -7.875472068786621
    3. 'plan' → logprob: -9.500472068786621
    4. 'road' → logprob: -12.125472068786621
    5. ' planner' → logprob: -12.375472068786621
    6. '
' → logprob: -12.750472068786621
    7. 'pl' → logprob: -12.875472068786621
    8. 'solver' → logprob: -14.000472068786621
    9. 'v' → logprob: -14.750472068786621
    10. '    
' → logprob: -15.375472068786621

Token 2715: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02632863074541092
    2. '=' → logprob: -3.6513285636901855
    3. '.' → logprob: -11.526329040527344
    4. ' =
' → logprob: -12.276329040527344
    5. '   ' → logprob: -12.276329040527344
    6. '<|end|>' → logprob: -12.776329040527344
    7. '    ' → logprob: -14.151329040527344
    8. '	' → logprob: -14.401329040527344
    9. '=
' → logprob: -14.401329040527344
    10. ')' → logprob: -14.401329040527344

Token 2716: ' Village' (ID: 27912)
  Prédit: 'Village'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Village' → logprob: -0.0002036595979006961
    2. ' Village' → logprob: -8.500204086303711
    3. 'Vill' → logprob: -15.750204086303711
    4. '   ' → logprob: -18.00020408630371
    5. 'Villa' → logprob: -18.37520408630371
    6. ' village' → logprob: -18.87520408630371
    7. 'V' → logprob: -20.12520408630371
    8. 'Vue' → logprob: -21.62520408630371
    9. '	V' → logprob: -21.75020408630371
    10. 'Ville' → logprob: -21.75020408630371

Token 2717: 'Road' (ID: 58793)
  Prédit: 'Road'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Road' → logprob: -5.512236498361744e-07
    2. '
' → logprob: -15.500000953674316
    3. ' Road' → logprob: -15.625000953674316
    4. '   ' → logprob: -17.0
    5. '```' → logprob: -17.75
    6. ' ' → logprob: -19.0
    7. 'Rail' → logprob: -19.0
    8. '_R' → logprob: -19.25
    9. '    
' → logprob: -19.25
    10. 'Roof' → logprob: -19.375

Token 2718: 'Planner' (ID: 120933)
  Prédit: 'Planner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Planner' → logprob: -2.45848218582978e-06
    2. 'planner' → logprob: -13.50000286102295
    3. 'Plan' → logprob: -14.12500286102295
    4. ' Planner' → logprob: -15.25000286102295
    5. 'Pl' → logprob: -16.875001907348633
    6. ' planner' → logprob: -17.250001907348633
    7. 'Painter' → logprob: -18.250001907348633
    8. 'Builder' → logprob: -19.000001907348633
    9. '   ' → logprob: -19.500001907348633
    10. 'Manager' → logprob: -19.875001907348633

Token 2719: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.0022745581809431314
    2. '(' → logprob: -6.877274513244629
    3. '(pl' → logprob: -7.377274513244629
    4. '(
' → logprob: -7.502274513244629
    5. '(V' → logprob: -10.002274513244629
    6. '.points' → logprob: -12.502274513244629
    7. '(plan' → logprob: -13.127274513244629
    8. 'points' → logprob: -13.127274513244629
    9. '(v' → logprob: -13.377274513244629
    10. '   ' → logprob: -13.502274513244629

Token 2720: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01659577153623104
    2. ')' → logprob: -4.141595840454102
    3. '(points' → logprob: -7.766595840454102
    4. '<|end|>' → logprob: -9.641595840454102
    5. ' ,' → logprob: -10.766595840454102
    6. '   ' → logprob: -11.516595840454102
    7. ',)' → logprob: -11.516595840454102
    8. ',
' → logprob: -11.891595840454102
    9. '(edges' → logprob: -12.141595840454102
    10. '(' → logprob: -12.516595840454102

Token 2721: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.005234475247561932
    2. ' edges' → logprob: -5.255234241485596
    3. 'edge' → logprob: -15.255234718322754
    4. '   ' → logprob: -15.630234718322754
    5. '(edges' → logprob: -16.130233764648438
    6. '.edges' → logprob: -16.380233764648438
    7. ' ' → logprob: -16.630233764648438
    8. 'Edges' → logprob: -18.005233764648438
    9. '
' → logprob: -18.630233764648438
    10. '       ' → logprob: -18.880233764648438

Token 2722: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -3.8219583075260743e-05
    2. '_,' → logprob: -11.375038146972656
    3. 'indices' → logprob: -11.750038146972656
    4. ',' → logprob: -11.750038146972656
    5. '   ' → logprob: -12.625038146972656
    6. 's' → logprob: -13.000038146972656
    7. '"indices' → logprob: -13.000038146972656
    8. 'Indices' → logprob: -13.875038146972656
    9. ',_' → logprob: -14.250038146972656
    10. ')_' → logprob: -15.125038146972656

Token 2723: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013821194879710674
    2. ')
' → logprob: -5.013821125030518
    3. '   ' → logprob: -5.138821125030518
    4. ').' → logprob: -7.388821125030518
    5. '.compute' → logprob: -8.263821601867676
    6. '<|end|>' → logprob: -8.638821601867676
    7. '<|end|>' → logprob: -10.513821601867676
    8. '()' → logprob: -10.888821601867676
    9. ' ' → logprob: -11.263821601867676
    10. '
' → logprob: -11.388821601867676

Token 2724: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06278393417596817
    2. '   ' → logprob: -3.06278395652771
    3. 'result' → logprob: -4.312783718109131
    4. '
' → logprob: -8.312784194946289
    5. '```' → logprob: -8.687784194946289
    6. 'total' → logprob: -9.062784194946289
    7. ' print' → logprob: -9.562784194946289
    8. 'return' → logprob: -10.062784194946289
    9. 'res' → logprob: -10.687784194946289
    10. '    
' → logprob: -11.562784194946289

Token 2725: ' res' (ID: 694)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04959693178534508
    2. 'result' → logprob: -3.0495970249176025
    3. 'res' (adapté à ' res') → logprob: -7.049596786499023
    4. ' print' → logprob: -9.799596786499023
    5. '   ' → logprob: -10.674596786499023
    6. 'total' → logprob: -10.674596786499023
    7. 'length' → logprob: -10.924596786499023
    8. ' result' → logprob: -11.549596786499023
    9. '```' → logprob: -12.424596786499023
    10. '
' → logprob: -12.674596786499023

Token 2726: ' =' (ID: 314)
  Prédit: 'ult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ult' → logprob: -0.6300151944160461
    2. 'ults' → logprob: -1.1300151348114014
    3. ' =' → logprob: -2.2550151348114014
    4. '=' → logprob: -3.5050151348114014
    5. 'ultat' → logprob: -5.3800153732299805
    6. '=res' → logprob: -5.8800153732299805
    7. '   ' → logprob: -8.25501537322998
    8. 's' → logprob: -8.38001537322998
    9. 'ulta' → logprob: -8.38001537322998
    10. '```' → logprob: -8.50501537322998

Token 2727: ' planner' (ID: 66791)
  Prédit: 'planner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'planner' → logprob: -0.25195011496543884
    2. ' planner' → logprob: -1.5019501447677612
    3. 'plan' → logprob: -11.50195026397705
    4. ' planer' → logprob: -12.12695026397705
    5. 'pl' → logprob: -13.25195026397705
    6. 'planning' → logprob: -13.75195026397705
    7. ' planners' → logprob: -14.37695026397705
    8. '   ' → logprob: -14.37695026397705
    9. '	pl' → logprob: -15.50195026397705
    10. 'Planner' → logprob: -15.62695026397705

Token 2728: '.compute' (ID: 60156)
  Prédit: '.compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.compute' → logprob: -0.0003490514063742012
    2. '.' → logprob: -8.000349044799805
    3. 'compute' → logprob: -12.125349044799805
    4. ' .' → logprob: -12.125349044799805
    5. '.calculate' → logprob: -13.750349044799805
    6. '.
' → logprob: -14.000349044799805
    7. '
' → logprob: -15.000349044799805
    8. '   ' → logprob: -16.375349044799805
    9. '.execute' → logprob: -16.750349044799805
    10. '.solve' → logprob: -17.000349044799805

Token 2729: '()
' (ID: 1234)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09465570002794266
    2. '   ' → logprob: -2.469655752182007
    3. '```' → logprob: -5.969655513763428
    4. ' print' → logprob: -6.469655513763428
    5. '(print' → logprob: -8.094655990600586
    6. '
' → logprob: -8.094655990600586
    7. '	print' → logprob: -8.594655990600586
    8. '<|end|>' → logprob: -8.594655990600586
    9. '(' → logprob: -8.844655990600586
    10. '``' → logprob: -9.094655990600586

Token 2730: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5769831538200378
    2. '   ' → logprob: -0.8269831538200378
    3. '```' → logprob: -6.9519829750061035
    4. '    
' → logprob: -10.701983451843262
    5. ' print' → logprob: -10.951983451843262
    6. '``' → logprob: -11.201983451843262
    7. '
' → logprob: -11.326983451843262
    8. '	print' → logprob: -11.701983451843262
    9. '`' → logprob: -12.076983451843262
    10. '<|end|>' → logprob: -13.076983451843262

Token 2731: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0015460490249097347
    2. '   ' → logprob: -6.5015459060668945
    3. '
' → logprob: -10.751545906066895
    4. ' print' → logprob: -11.376545906066895
    5. '```' → logprob: -11.501545906066895
    6. '	print' → logprob: -14.876545906066895
    7. '    
' → logprob: -15.376545906066895
    8. '``' → logprob: -15.876545906066895
    9. '`' → logprob: -17.75154685974121
    10. '#print' → logprob: -17.87654685974121

Token 2732: '(f' (ID: 1526)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.4219416379928589
    2. '(f' → logprob: -1.1719416379928589
    3. '(round' → logprob: -3.5469417572021484
    4. '(' → logprob: -5.296941757202148
    5. '(int' → logprob: -8.046941757202148
    6. '('' → logprob: -9.296941757202148
    7. '("{' → logprob: -9.671941757202148
    8. '()' → logprob: -10.171941757202148
    9. 'res' → logprob: -10.171941757202148
    10. 'f' → logprob: -10.296941757202148

Token 2733: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.20881953835487366
    2. 'res' → logprob: -2.208819627761841
    3. '{' → logprob: -2.708819627761841
    4. ''{' → logprob: -4.583819389343262
    5. '(res' → logprob: -7.083819389343262
    6. '"' → logprob: -7.583819389343262
    7. '("%.' → logprob: -9.208819389343262
    8. '("{' → logprob: -9.458819389343262
    9. ' res' → logprob: -9.708819389343262
    10. '	res' → logprob: -10.208819389343262

Token 2734: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: 0.0
    2. ' res' → logprob: -18.25
    3. '(res' → logprob: -23.0
    4. '	res' → logprob: -23.375
    5. '{' → logprob: -23.75
    6. '$res' → logprob: -24.375
    7. 'round' → logprob: -26.5
    8. 'result' → logprob: -26.75
    9. '_res' → logprob: -27.0
    10. '.res' → logprob: -27.125

Token 2735: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -5.9153885558771435e-06
    2. ' :.' → logprob: -12.250005722045898
    3. '.' → logprob: -14.375005722045898
    4. ':' → logprob: -14.750005722045898
    5. '{' → logprob: -16.5000057220459
    6. '():' → logprob: -17.5000057220459
    7. '(.' → logprob: -18.2500057220459
    8. '   ' → logprob: -19.1250057220459
    9. ' .' → logprob: -19.2500057220459
    10. '0' → logprob: -19.5000057220459

Token 2736: '10' (ID: 702)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.42513176798820496
    2. '9' → logprob: -1.6751317977905273
    3. '10' → logprob: -2.5501317977905273
    4. '7' → logprob: -3.1751317977905273
    5. '8' → logprob: -3.9251317977905273
    6. '12' → logprob: -4.175131797790527
    7. '15' → logprob: -5.800131797790527
    8. '2' → logprob: -8.050131797790527
    9. '11' → logprob: -8.175131797790527
    10. '3' → logprob: -8.925131797790527

Token 2737: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: 0.0
    2. 'g' → logprob: -17.0
    3. '}' → logprob: -20.75
    4. ' f' → logprob: -22.25
    5. '```' → logprob: -22.25
    6. '	f' → logprob: -23.125
    7. '
' → logprob: -23.5
    8. '}")' → logprob: -23.625
    9. 'lf' → logprob: -24.375
    10. '}"' → logprob: -24.875

Token 2738: '}"' (ID: 21503)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.01730533502995968
    2. '")' → logprob: -4.267305374145508
    3. ')")' → logprob: -5.767305374145508
    4. '}")
' → logprob: -12.017305374145508
    5. '}' → logprob: -13.767305374145508
    6. ')' → logprob: -14.267305374145508
    7. ' }' → logprob: -15.017305374145508
    8. '}")
' → logprob: -15.892305374145508
    9. '")}' → logprob: -16.017305374145508
    10. ')}' → logprob: -16.142305374145508

Token 2739: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010533124441280961
    2. ')
' → logprob: -9.375104904174805
    3. '   ' → logprob: -11.500104904174805
    4. '")' → logprob: -12.125104904174805
    5. ' )' → logprob: -13.625104904174805
    6. '()' → logprob: -13.625104904174805
    7. '())' → logprob: -13.750104904174805
    8. '
' → logprob: -14.750104904174805
    9. '`)' → logprob: -15.625104904174805
    10. '```' → logprob: -15.625104904174805

Token 2740: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.006600733380764723
    2. 'main' → logprob: -5.881600856781006
    3. '```' → logprob: -6.256600856781006
    4. '<|end|>' → logprob: -6.881600856781006
    5. ' if' → logprob: -7.256600856781006
    6. '#' → logprob: -9.381600379943848
    7. '
' → logprob: -10.756600379943848
    8. ')' → logprob: -12.506600379943848
    9. 'If' → logprob: -12.756600379943848
    10. '<|end|>' → logprob: -12.756600379943848

Token 2741: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3139246702194214
    2. ' __' → logprob: -1.3139246702194214
    3. '_name' → logprob: -8.188924789428711
    4. '_' → logprob: -8.313924789428711
    5. '___' → logprob: -9.438924789428711
    6. 'name' → logprob: -9.938924789428711
    7. ' ' → logprob: -13.188924789428711
    8. 'Name' → logprob: -13.313924789428711
    9. '  ' → logprob: -13.563924789428711
    10. ''' → logprob: -13.813924789428711

Token 2742: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.018473340198397636
    2. '==' → logprob: -4.268473148345947
    3. ' ==' → logprob: -6.143473148345947
    4. '__":
' → logprob: -7.018473148345947
    5. '__':
' → logprob: -8.143473625183105
    6. 'if' → logprob: -9.268473625183105
    7. '__.__' → logprob: -9.268473625183105
    8. '=="' → logprob: -9.393473625183105
    9. '```' → logprob: -9.393473625183105
    10. '<|end|>' → logprob: -9.393473625183105

Token 2743: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00011164903844473884
    2. '__.__' → logprob: -9.50011157989502
    3. '==' → logprob: -10.50011157989502
    4. '=="' → logprob: -13.00011157989502
    5. '__
' → logprob: -13.00011157989502
    6. '__.' → logprob: -13.87511157989502
    7. '__["' → logprob: -14.25011157989502
    8. ' ==' → logprob: -14.62511157989502
    9. '___' → logprob: -14.62511157989502
    10. '__('' → logprob: -14.75011157989502

Token 2744: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7375651001930237
    2. '__' → logprob: -0.7375651001930237
    3. ' ==' → logprob: -3.487565040588379
    4. '=="' → logprob: -4.487565040588379
    5. '=='' → logprob: -6.862565040588379
    6. '==
' → logprob: -8.487565040588379
    7. '__.__' → logprob: -8.862565040588379
    8. '__":
' → logprob: -9.862565040588379
    9. '_' → logprob: -10.362565040588379
    10. '```' → logprob: -10.487565040588379

Token 2745: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.16036203503608704
    2. ''' → logprob: -1.9103620052337646
    3. '__' → logprob: -8.910362243652344
    4. ' "__' → logprob: -13.285362243652344
    5. ''m' → logprob: -15.410362243652344
    6. ' '__' → logprob: -15.660362243652344
    7. '`' → logprob: -16.035362243652344
    8. '   ' → logprob: -16.410362243652344
    9. '"name' → logprob: -16.410362243652344
    10. 'main' → logprob: -16.535362243652344

Token 2746: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.038188375532627106
    2. '"' → logprob: -3.6631884574890137
    3. 'main' → logprob: -4.788188457489014
    4. ''' → logprob: -5.663188457489014
    5. '   ' → logprob: -12.413187980651855
    6. '__":
' → logprob: -12.538187980651855
    7. '__
' → logprob: -13.038187980651855
    8. ' "__' → logprob: -13.538187980651855
    9. '___' → logprob: -13.913187980651855
    10. '=="' → logprob: -14.038187980651855

Token 2747: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.48015913367271423
    2. '__":
' → logprob: -0.9801591634750366
    3. '__
' → logprob: -5.605159282684326
    4. '__':
' → logprob: -6.480159282684326
    5. '__.' → logprob: -8.355158805847168
    6. '=="' → logprob: -8.980158805847168
    7. ' ==' → logprob: -9.105158805847168
    8. '__.__' → logprob: -9.105158805847168
    9. '__["' → logprob: -9.230158805847168
    10. '__
' → logprob: -9.605158805847168

Token 2748: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.000261216628132388
    2. '	main' → logprob: -8.750261306762695
    3. ' main' → logprob: -9.375261306762695
    4. '   ' → logprob: -11.125261306762695
    5. '_main' → logprob: -13.000261306762695
    6. '(main' → logprob: -14.500261306762695
    7. '__' → logprob: -15.625261306762695
    8. '    
' → logprob: -16.625261306762695
    9. '```' → logprob: -16.875261306762695
    10. '.main' → logprob: -17.000261306762695

Token 2749: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -3.128163257315464e-07
    2. ' main' → logprob: -16.25
    3. '	main' → logprob: -16.75
    4. '   ' → logprob: -18.25
    5. '_main' → logprob: -21.625
    6. '(main' → logprob: -22.375
    7. '.main' → logprob: -23.25
    8. 'import' → logprob: -23.375
    9. '
' → logprob: -24.125
    10. 'Main' → logprob: -25.375

Token 2750: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 2748
Tokens correctement prédits (1ère position, stricte): 982
Tokens correctement prédits (1ère position, avec adaptation): 1076
Tokens correctement prédits (top 10): 2125
Précision stricte (1ère position): 35.74%
Précision adaptée (1ère position): 39.16%
Précision (top 10): 77.33%
================================================================================
