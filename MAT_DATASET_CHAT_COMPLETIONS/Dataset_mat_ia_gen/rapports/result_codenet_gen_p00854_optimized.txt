================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:04:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
for line in sys.stdin:
    n,k,m = map(int,line.split())
    if n==0 and k==0 and m==0:
        break
    # Adjust m to zero-based index
    pos = m - 1
    for i in range(n,1,-1):
        pos = (pos + k - 1) % i
    print(pos+1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'for' (ID: 1938)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.21183791756629944
    2. '.' → logprob: -2.3368380069732666
    3. '<|end|>' → logprob: -2.8368380069732666
    4. '\' → logprob: -4.7118377685546875
    5. 'newline' → logprob: -5.0868377685546875
    6. 'import' → logprob: -5.0868377685546875
    7. '
' → logprob: -5.7118377685546875
    8. '' → logprob: -5.8368377685546875
    9. '<|end|>' → logprob: -5.8368377685546875
    10. '\r' → logprob: -6.3368377685546875

Token 4: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006668128073215485
    2. '  ' → logprob: -5.1316680908203125
    3. ' i' → logprob: -7.2566680908203125
    4. ' )' → logprob: -11.631668090820312
    5. '```' → logprob: -12.631668090820312
    6. ' (' → logprob: -12.756668090820312
    7. 'i' → logprob: -13.006668090820312
    8. ' ' → logprob: -13.131668090820312
    9. ' ```' → logprob: -13.756668090820312
    10. ' ‌' → logprob: -13.881668090820312

Token 5: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20056261122226715
    2. ':' → logprob: -2.2005627155303955
    3. 'in' → logprob: -2.9505627155303955
    4. '[' → logprob: -5.325562477111816
    5. '<|end|>' → logprob: -5.450562477111816
    6. '```' → logprob: -5.825562477111816
    7. '():' → logprob: -6.700562477111816
    8. ' :' → logprob: -7.325562477111816
    9. '[:]' → logprob: -7.325562477111816
    10. '[]' → logprob: -7.825562477111816

Token 6: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.038194455206394196
    2. 'sys' → logprob: -3.288194417953491
    3. ' ' → logprob: -9.78819465637207
    4. '=sys' → logprob: -10.03819465637207
    5. '	sys' → logprob: -11.03819465637207
    6. '(sys' → logprob: -11.03819465637207
    7. ' iter' → logprob: -11.91319465637207
    8. ' in' → logprob: -13.28819465637207
    9. ' file' → logprob: -13.28819465637207
    10. 's' → logprob: -13.28819465637207

Token 7: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.006324658636003733
    2. '.readline' → logprob: -5.256324768066406
    3. '.stdin' → logprob: -7.881324768066406
    4. ' .' → logprob: -8.131324768066406
    5. '.readlines' → logprob: -9.381324768066406
    6. '[' → logprob: -9.506324768066406
    7. '.argv' → logprob: -9.756324768066406
    8. '.stdout' → logprob: -10.631324768066406
    9. '.import' → logprob: -10.881324768066406
    10. '```' → logprob: -11.006324768066406

Token 8: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00012118533049942926
    2. ':
' → logprob: -10.250121116638184
    3. '[:]' → logprob: -11.000121116638184
    4. '':' → logprob: -11.125121116638184
    5. '>:' → logprob: -11.375121116638184
    6. ':**' → logprob: -11.500121116638184
    7. '):' → logprob: -11.875121116638184
    8. '():' → logprob: -12.375121116638184
    9. '":' → logprob: -12.750121116638184
    10. '':'' → logprob: -12.875121116638184

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029767490923404694
    2. '    
' → logprob: -6.002976894378662
    3. ' print' → logprob: -8.502976417541504
    4. '```' → logprob: -9.502976417541504
    5. 'print' → logprob: -9.877976417541504
    6. '.strip' → logprob: -10.252976417541504
    7. ' if' → logprob: -10.752976417541504
    8. '.rstrip' → logprob: -10.877976417541504
    9. '    ' → logprob: -11.002976417541504
    10. ' 
' → logprob: -11.502976417541504

Token 10: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04391331598162651
    2. ' print' → logprob: -3.7939133644104004
    3. 'print' → logprob: -3.9189133644104004
    4. '    ' → logprob: -7.9189133644104
    5. ' if' → logprob: -9.168912887573242
    6. '       ' → logprob: -9.668912887573242
    7. ' pass' → logprob: -10.543912887573242
    8. '```' → logprob: -11.793912887573242
    9. '   ' → logprob: -11.918912887573242
    10. 'if' → logprob: -12.293912887573242

Token 11: ',k' (ID: 35155)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4335039556026459
    2. ' ' → logprob: -1.8085039854049683
    3. '=' → logprob: -2.4335038661956787
    4. '   ' → logprob: -3.3085038661956787
    5. '.' → logprob: -4.308504104614258
    6. 'umber' → logprob: -4.558504104614258
    7. 'um' → logprob: -4.808504104614258
    8. 'u' → logprob: -4.808504104614258
    9. 'o' → logprob: -5.308504104614258
    10. '  ' → logprob: -5.558504104614258

Token 12: ',m' (ID: 26648)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5761076807975769
    2. ' =' → logprob: -0.8261076807975769
    3. ',' → logprob: -8.8261079788208
    4. ' ' → logprob: -11.5761079788208
    5. ')' → logprob: -12.5761079788208
    6. ' ,' → logprob: -12.8261079788208
    7. '=input' → logprob: -13.9511079788208
    8. '=line' → logprob: -14.2011079788208
    9. '   ' → logprob: -14.3261079788208
    10. '=int' → logprob: -14.5761079788208

Token 13: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5231605768203735
    2. '=' → logprob: -0.8981605768203735
    3. ',' → logprob: -11.023160934448242
    4. '    ' → logprob: -11.898160934448242
    5. ' ' → logprob: -12.523160934448242
    6. '   ' → logprob: -12.523160934448242
    7. ')' → logprob: -13.023160934448242
    8. ' ,' → logprob: -13.773160934448242
    9. '  ' → logprob: -14.023160934448242
    10. ' =
' → logprob: -14.523160934448242

Token 14: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.138358011841774
    2. 'map' → logprob: -2.2633581161499023
    3. ' line' → logprob: -3.7633581161499023
    4. 'line' → logprob: -6.263358116149902
    5. ' ' → logprob: -10.013358116149902
    6. '[' → logprob: -11.138358116149902
    7. ' list' → logprob: -11.763358116149902
    8. '[line' → logprob: -11.888358116149902
    9. 'list' → logprob: -12.138358116149902
    10. '(map' → logprob: -12.138358116149902

Token 15: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15288949012756348
    2. '(int' → logprob: -2.4028894901275635
    3. '(str' → logprob: -3.2778894901275635
    4. '(lambda' → logprob: -5.027889251708984
    5. '<|end|>' → logprob: -5.277889251708984
    6. '```' → logprob: -7.777889251708984
    7. '<|end|>' → logprob: -8.027889251708984
    8. ' (' → logprob: -8.777889251708984
    9. 'str' → logprob: -9.027889251708984
    10. '<int' → logprob: -9.277889251708984

Token 16: ',line' (ID: 171132)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.016408046707510948
    2. ')' → logprob: -5.0164079666137695
    3. '(' → logprob: -5.5164079666137695
    4. ',' → logprob: -5.6414079666137695
    5. ',line' → logprob: -6.3914079666137695
    6. ' line' → logprob: -9.26640796661377
    7. '(sys' → logprob: -10.01640796661377
    8. 'line' → logprob: -10.01640796661377
    9. '#line' → logprob: -10.14140796661377
    10. '[line' → logprob: -10.51640796661377

Token 17: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.09410703182220459
    2. '.' → logprob: -2.594107151031494
    3. '.strip' → logprob: -4.219107151031494
    4. '.rstrip' → logprob: -8.719106674194336
    5. '.readline' → logprob: -9.344106674194336
    6. ' .' → logprob: -9.594106674194336
    7. ')' → logprob: -10.094106674194336
    8. 'split' → logprob: -11.719106674194336
    9. '().' → logprob: -12.344106674194336
    10. ').' → logprob: -12.344106674194336

Token 18: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.47295141220092773
    2. '('' → logprob: -1.0979514122009277
    3. ')' → logprob: -3.7229514122009277
    4. '(' → logprob: -4.847951412200928
    5. '()' → logprob: -5.222951412200928
    6. '(','' → logprob: -5.847951412200928
    7. '()))' → logprob: -6.222951412200928
    8. '))' → logprob: -7.222951412200928
    9. '("' → logprob: -9.347951889038086
    10. '(',' → logprob: -9.847951889038086

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38698360323905945
    2. '\n' → logprob: -2.136983633041382
    3. ' ' → logprob: -3.011983633041382
    4. '    
' → logprob: -3.511983633041382
    5. '    ' → logprob: -4.011983394622803
    6. ' 
' → logprob: -4.136983394622803
    7. ' if' → logprob: -4.136983394622803
    8. ':' → logprob: -4.386983394622803
    9. '\' → logprob: -4.511983394622803
    10. '
' → logprob: -4.636983394622803

Token 20: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8356837034225464
    2. '   ' → logprob: -1.0856837034225464
    3. '    ' → logprob: -2.710683822631836
    4. '\n' → logprob: -3.210683822631836
    5. ' if' → logprob: -3.460683822631836
    6. '       ' → logprob: -4.085683822631836
    7. ' 
' → logprob: -4.210683822631836
    8. ':' → logprob: -4.835683822631836
    9. '    
' → logprob: -5.085683822631836
    10. 'if' (adapté à ' if') → logprob: -5.210683822631836

Token 21: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.04349818453192711
    2. ' k' → logprob: -3.2934982776641846
    3. 'n' → logprob: -5.5434980392456055
    4. ' ' → logprob: -7.1684980392456055
    5. ' m' → logprob: -7.6684980392456055
    6. 'k' → logprob: -8.793498039245605
    7. ' not' → logprob: -9.293498039245605
    8. ' (' → logprob: -11.168498039245605
    9. ' ' → logprob: -11.543498039245605
    10. 'm' → logprob: -11.668498039245605

Token 22: '==' (ID: 560)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.21148455142974854
    2. '>' → logprob: -2.961484432220459
    3. ' <' → logprob: -2.961484432220459
    4. ' >=' → logprob: -2.961484432220459
    5. ' <=' → logprob: -4.461484432220459
    6. ' ' → logprob: -4.461484432220459
    7. ' ==' → logprob: -5.336484432220459
    8. '<' → logprob: -5.711484432220459
    9. '>=' → logprob: -6.586484432220459
    10. '   ' → logprob: -7.586484432220459

Token 23: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.298987478017807
    2. ' ' → logprob: -1.6739875078201294
    3. 'k' → logprob: -2.79898738861084
    4. ' k' → logprob: -4.67398738861084
    5. '1' → logprob: -7.54898738861084
    6. 'm' → logprob: -8.79898738861084
    7. ' m' → logprob: -10.42398738861084
    8. '2' → logprob: -12.61148738861084
    9. '  ' → logprob: -13.11148738861084
    10. '   ' → logprob: -13.36148738861084

Token 24: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10259635001420975
    2. ' and' → logprob: -2.3525962829589844
    3. ' :' → logprob: -6.227596282958984
    4. 'and' → logprob: -8.102596282958984
    5. ' or' → logprob: -9.977596282958984
    6. ':return' → logprob: -10.352596282958984
    7. ',' → logprob: -11.102596282958984
    8. ':
' → logprob: -11.727596282958984
    9. ' ' → logprob: -12.602596282958984
    10. '   ' → logprob: -13.352596282958984

Token 25: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.06196948140859604
    2. 'k' → logprob: -2.811969518661499
    3. ' ' → logprob: -13.436969757080078
    4. '	k' → logprob: -15.061969757080078
    5. '  ' → logprob: -17.561969757080078
    6. ',k' → logprob: -18.186969757080078
    7. '"k' → logprob: -18.311969757080078
    8. ' ' → logprob: -18.811969757080078
    9. ' к' → logprob: -19.186969757080078
    10. '   ' → logprob: -19.686969757080078

Token 26: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.018198054283857346
    2. ' ==' → logprob: -4.018198013305664
    3. '=' → logprob: -11.018198013305664
    4. '<|end|>' → logprob: -11.518198013305664
    5. ' ' → logprob: -12.143198013305664
    6. ' and' → logprob: -12.268198013305664
    7. '0' → logprob: -13.018198013305664
    8. ')==' → logprob: -13.393198013305664
    9. '==-' → logprob: -13.518198013305664
    10. ']==' → logprob: -13.643198013305664

Token 27: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002614550176076591
    2. ' ' → logprob: -8.250261306762695
    3. ' and' → logprob: -17.625261306762695
    4. 'and' → logprob: -18.250261306762695
    5. '۰' → logprob: -18.375261306762695
    6. '  ' → logprob: -18.500261306762695
    7. '   ' → logprob: -18.750261306762695
    8. '<|end|>' → logprob: -19.062761306762695
    9. '```' → logprob: -19.312761306762695
    10. '1' → logprob: -19.375261306762695

Token 28: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.002201167168095708
    2. 'and' → logprob: -6.127201080322266
    3. ' ' → logprob: -12.502201080322266
    4. '	and' → logprob: -12.627201080322266
    5. '   ' → logprob: -12.752201080322266
    6. '<|end|>' → logprob: -12.877201080322266
    7. ':' → logprob: -13.627201080322266
    8. '<|end|>' → logprob: -14.002201080322266
    9. '    ' → logprob: -14.252201080322266
    10. '```' → logprob: -15.377201080322266

Token 29: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.14283627271652222
    2. 'm' → logprob: -2.017836332321167
    3. '0' → logprob: -8.892836570739746
    4. ' ' → logprob: -11.017836570739746
    5. '	m' → logprob: -13.392836570739746
    6. '&m' → logprob: -13.892836570739746
    7. ' ' → logprob: -14.017836570739746
    8. ' k' → logprob: -14.642836570739746
    9. 'k' → logprob: -14.892836570739746
    10. '   ' → logprob: -15.017836570739746

Token 30: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.35269585251808167
    2. ' ==' → logprob: -1.2276958227157593
    3. '=' → logprob: -6.352695941925049
    4. '<|end|>' → logprob: -6.852695941925049
    5. '0' → logprob: -7.602695941925049
    6. ' ' → logprob: -7.852695941925049
    7. '```' → logprob: -8.72769546508789
    8. '<|end|>' → logprob: -8.97769546508789
    9. '  ' → logprob: -9.97769546508789
    10. ')==' → logprob: -9.97769546508789

Token 31: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '۰' → logprob: -17.750059127807617
    4. '<|end|>' → logprob: -18.250059127807617
    5. '  ' → logprob: -19.000059127807617
    6. '   ' → logprob: -19.500059127807617
    7. '<|end|>' → logprob: -19.750059127807617
    8. '০' → logprob: -19.875059127807617
    9. '０' → logprob: -19.875059127807617
    10. '०' → logprob: -20.125059127807617

Token 32: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018592236563563347
    2. '       ' → logprob: -4.143592357635498
    3. '   ' → logprob: -6.393592357635498
    4. ':
' → logprob: -7.143592357635498
    5. ' :' → logprob: -9.89359188079834
    6. '    ' → logprob: -11.01859188079834
    7. ':return' → logprob: -12.64359188079834
    8. '     ' → logprob: -12.76859188079834
    9. ':\' → logprob: -12.76859188079834
    10. '           ' → logprob: -13.01859188079834

Token 33: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.111979357432574e-05
    2. '   ' → logprob: -9.87507152557373
    3. ' break' → logprob: -11.50007152557373
    4. '     ' → logprob: -13.37507152557373
    5. '      ' → logprob: -13.37507152557373
    6. '    ' → logprob: -13.50007152557373
    7. '	break' → logprob: -13.62507152557373
    8. '           ' → logprob: -13.62507152557373
    9. '	' → logprob: -14.62507152557373
    10. '```' → logprob: -14.75007152557373

Token 34: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.17616063356399536
    2. '       ' → logprob: -1.9261605739593506
    3. 'break' (adapté à ' break') → logprob: -4.17616081237793
    4. '   ' → logprob: -8.17616081237793
    5. '	break' → logprob: -8.80116081237793
    6. '           ' → logprob: -11.67616081237793
    7. '```' → logprob: -12.80116081237793
    8. '    ' → logprob: -13.05116081237793
    9. '_break' → logprob: -13.05116081237793
    10. '\n' → logprob: -14.05116081237793

Token 35: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04169828072190285
    2. '    
' → logprob: -3.6666982173919678
    3. '\n' → logprob: -5.291698455810547
    4. '<|end|>' → logprob: -5.916698455810547
    5. '
' → logprob: -6.041698455810547
    6. '```' → logprob: -6.916698455810547
    7. '  
' → logprob: -7.041698455810547
    8. 'n' → logprob: -7.291698455810547
    9. '   
' → logprob: -7.541698455810547
    10. ' 
' → logprob: -7.916698455810547

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039674803614616394
    2. '    
' → logprob: -3.414674758911133
    3. '
' → logprob: -5.789674758911133
    4. '<|end|>' → logprob: -6.539674758911133
    5. '        
' → logprob: -8.164674758911133
    6. '```' → logprob: -8.289674758911133
    7. '  
' → logprob: -8.539674758911133
    8. ' 
' → logprob: -9.289674758911133
    9. '   
' → logprob: -9.414674758911133
    10. 'print' → logprob: -9.539674758911133

Token 37: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0504541397094727
    2. '
' → logprob: -1.4254541397094727
    3. '    
' → logprob: -2.1754541397094727
    4. ' 
' → logprob: -2.6754541397094727
    5. '\n' → logprob: -3.1754541397094727
    6. '<|end|>' → logprob: -3.1754541397094727
    7. ' ' → logprob: -3.3004541397094727
    8. '    ' → logprob: -3.5504541397094727
    9. '#' (adapté à ' #') → logprob: -4.050454139709473
    10. '```' → logprob: -4.425454139709473

Token 38: ' Adjust' (ID: 43076)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01673903502523899
    2. '    ' → logprob: -5.7667388916015625
    3. '   ' → logprob: -6.0167388916015625
    4. ' for' → logprob: -6.8917388916015625
    5. 'for' → logprob: -7.0167388916015625
    6. 's' → logprob: -7.3917388916015625
    7. 'result' → logprob: -7.6417388916015625
    8. 'd' → logprob: -7.6417388916015625
    9. ' #' → logprob: -7.6417388916015625
    10. 'c' → logprob: -8.016738891601562

Token 39: ' m' (ID: 284)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -1.6233025789260864
    2. '<|end|>' → logprob: -1.6233025789260864
    3. ' n' → logprob: -1.7483025789260864
    4. 'k' → logprob: -1.7483025789260864
    5. 'n' → logprob: -2.248302459716797
    6. '    ' → logprob: -3.748302459716797
    7. ' indentation' → logprob: -3.998302459716797
    8. 's' → logprob: -4.123302459716797
    9. 'm' → logprob: -4.248302459716797
    10. '   ' → logprob: -4.498302459716797

Token 40: ' to' (ID: 316)
  Prédit: ' %='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.23166091740131378
    2. '%=' → logprob: -2.856660842895508
    3. ' =' → logprob: -3.231660842895508
    4. '=' → logprob: -3.481660842895508
    5. '%' → logprob: -3.731660842895508
    6. ' -=' → logprob: -3.731660842895508
    7. ' +=' → logprob: -4.231660842895508
    8. ' %' → logprob: -4.731660842895508
    9. ' ' → logprob: -5.356660842895508
    10. '   ' → logprob: -6.856660842895508

Token 41: ' zero' (ID: 12421)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20491082966327667
    2. ' ' → logprob: -2.5799107551574707
    3. ' be' → logprob: -3.3299107551574707
    4. ' zero' → logprob: -3.4549107551574707
    5. 'm' → logprob: -3.8299107551574707
    6. ' m' → logprob: -4.454910755157471
    7. 'zero' → logprob: -5.829910755157471
    8. '1' → logprob: -5.954910755157471
    9. ' a' → logprob: -6.829910755157471
    10. 'be' → logprob: -7.204910755157471

Token 42: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.08679497987031937
    2. 'based' → logprob: -2.5867950916290283
    3. '-index' → logprob: -5.086794853210449
    4. ' based' → logprob: -6.961794853210449
    5. 'indexed' → logprob: -8.33679485321045
    6. '-' → logprob: -8.71179485321045
    7. ' -' → logprob: -9.33679485321045
    8. 'Based' → logprob: -9.46179485321045
    9. '_based' → logprob: -9.46179485321045
    10. '-base' → logprob: -10.21179485321045

Token 43: ' index' (ID: 3472)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: '
' (ID: 198)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.3155186176300049
    2. '   ' → logprob: -1.3155186176300049
    3. '    ' → logprob: -1.9405186176300049
    4. ' m' → logprob: -2.440518617630005
    5. '<|end|>' → logprob: -2.565518617630005
    6. '    
' → logprob: -3.440518617630005
    7. 'n' → logprob: -3.565518617630005
    8. ' ' → logprob: -3.815518617630005
    9. ' 
' → logprob: -4.065518379211426
    10. '\n' → logprob: -4.565518379211426

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39586910605430603
    2. '    ' → logprob: -1.8958691358566284
    3. 'm' → logprob: -2.395869016647339
    4. ' m' → logprob: -3.520869016647339
    5. '    
' → logprob: -3.770869016647339
    6. '<|end|>' → logprob: -4.520869255065918
    7. 'n' → logprob: -5.145869255065918
    8. '     
' → logprob: -5.645869255065918
    9. ' ' → logprob: -5.770869255065918
    10. ',' → logprob: -6.520869255065918

Token 46: ' pos' (ID: 1253)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.09496286511421204
    2. 'm' → logprob: -2.5949628353118896
    3. '    ' → logprob: -4.844963073730469
    4. '   ' → logprob: -4.969963073730469
    5. ' ' → logprob: -7.469963073730469
    6. '     
' → logprob: -9.219963073730469
    7. '    
' → logprob: -9.344963073730469
    8. ' 
' → logprob: -9.594963073730469
    9. ' n' → logprob: -9.844963073730469
    10. 'n' → logprob: -9.969963073730469

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05634761229157448
    2. '=' → logprob: -2.931347608566284
    3. 'ition' → logprob: -6.931347846984863
    4. ' -=' → logprob: -8.056347846984863
    5. '_' → logprob: -9.931347846984863
    6. ' +=' → logprob: -9.931347846984863
    7. 's' → logprob: -11.681347846984863
    8. 'i' → logprob: -11.681347846984863
    9. '-=' → logprob: -11.681347846984863
    10. 'iti' → logprob: -12.056347846984863

Token 48: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.26239630579948425
    2. 'm' → logprob: -1.6373963356018066
    3. ' (' → logprob: -3.3873963356018066
    4. '(m' → logprob: -6.262396335601807
    5. ' k' → logprob: -8.512395858764648
    6. 'k' → logprob: -8.637395858764648
    7. '(' → logprob: -9.012395858764648
    8. ' ' → logprob: -10.012395858764648
    9. '(k' → logprob: -11.012395858764648
    10. '   ' → logprob: -11.137395858764648

Token 49: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04860168322920799
    2. ' -' → logprob: -3.0486016273498535
    3. ' ' → logprob: -11.673602104187012
    4. '   ' → logprob: -13.673602104187012
    5. '  ' → logprob: -14.048602104187012
    6. '1' → logprob: -14.173602104187012
    7. ' ' → logprob: -14.673602104187012
    8. '```' → logprob: -14.798602104187012
    9. '[' → logprob: -15.048602104187012
    10. '`' → logprob: -15.298602104187012

Token 50: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '2' → logprob: -18.00000762939453
    4. '   ' → logprob: -18.25000762939453
    5. '```' → logprob: -18.25000762939453
    6. '<|end|>' → logprob: -18.25000762939453
    7. '  ' → logprob: -19.00000762939453
    8. 'one' → logprob: -19.31250762939453
    9. '[' → logprob: -19.62500762939453
    10. '１' → logprob: -19.93750762939453

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.625003814697266
    3. '2' → logprob: -16.125003814697266
    4. '   ' → logprob: -16.750003814697266
    5. '```' → logprob: -16.812503814697266
    6. '<|end|>' → logprob: -17.062503814697266
    7. '0' → logprob: -17.125003814697266
    8. '  ' → logprob: -17.625003814697266
    9. '-' → logprob: -18.500003814697266
    10. 'one' → logprob: -18.812503814697266

Token 52: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.345754474401474
    2. '<|end|>' → logprob: -1.9707545042037964
    3. '   ' → logprob: -2.720754384994507
    4. ' ' → logprob: -3.720754384994507
    5. '\n' → logprob: -4.595754623413086
    6. ')' → logprob: -4.595754623413086
    7. '    
' → logprob: -4.970754623413086
    8. ' 
' → logprob: -5.345754623413086
    9. ' if' → logprob: -5.345754623413086
    10. '<|end|>' → logprob: -5.470754623413086

Token 53: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0105860233306885
    2. '   ' → logprob: -1.0105860233306885
    3. '<|end|>' → logprob: -1.7605860233306885
    4. '    
' → logprob: -4.010585784912109
    5. ' ' → logprob: -4.385585784912109
    6. ' while' → logprob: -4.510585784912109
    7. 'while' → logprob: -5.135585784912109
    8. ')' → logprob: -5.260585784912109
    9. ' 
' → logprob: -5.385585784912109
    10. ' for' → logprob: -5.385585784912109

Token 54: ' for' (ID: 395)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1643273830413818
    2. 'n' → logprob: -2.164327383041382
    3. '   ' → logprob: -2.164327383041382
    4. ' 
' → logprob: -3.039327383041382
    5. ' if' → logprob: -3.164327383041382
    6. ' while' → logprob: -3.164327383041382
    7. 'while' → logprob: -3.414327383041382
    8. '<|end|>' → logprob: -3.664327383041382
    9. 'if' → logprob: -3.789327383041382
    10. '#' → logprob: -3.789327383041382

Token 55: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.5354299545288086
    2. ' i' → logprob: -1.2854299545288086
    3. ' ' → logprob: -2.5354299545288086
    4. '_' → logprob: -2.9104299545288086
    5. 'i' → logprob: -5.660429954528809
    6. ' in' → logprob: -7.910429954528809
    7. ' range' → logprob: -8.410429954528809
    8. '_i' → logprob: -8.660429954528809
    9. 'range' → logprob: -9.660429954528809
    10. '_range' → logprob: -11.785429954528809

Token 56: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026797622442245483
    2. 'in' → logprob: -3.6517975330352783
    3. ' ' → logprob: -8.0267972946167
    4. ',' → logprob: -9.6517972946167
    5. 'range' → logprob: -11.1517972946167
    6. 'n' → logprob: -11.2142972946167
    7. '	in' → logprob: -11.2767972946167
    8. '  ' → logprob: -11.7767972946167
    9. ' ,' → logprob: -11.9017972946167
    10. '   ' → logprob: -12.1517972946167

Token 57: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.00256067281588912
    2. 'range' → logprob: -6.002560615539551
    3. ' ' → logprob: -9.87756061553955
    4. ' xrange' → logprob: -10.75256061553955
    5. '  ' → logprob: -12.25256061553955
    6. '	range' → logprob: -12.62756061553955
    7. '   ' → logprob: -13.75256061553955
    8. ' ran' → logprob: -14.12756061553955
    9. '(range' → logprob: -14.25256061553955
    10. '```' → logprob: -14.75256061553955

Token 58: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.7647497653961182
    2. '(' → logprob: -1.0147497653961182
    3. '(k' → logprob: -1.7647497653961182
    4. ' (' → logprob: -7.264749526977539
    5. '(s' → logprob: -9.639749526977539
    6. '(pos' → logprob: -11.264749526977539
    7. '(i' → logprob: -11.389749526977539
    8. '(
' → logprob: -11.764749526977539
    9. '((' → logprob: -12.389749526977539
    10. '(len' → logprob: -12.514749526977539

Token 59: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1863270401954651
    2. '-' → logprob: -2.0613269805908203
    3. ',' → logprob: -3.5613269805908203
    4. ')' → logprob: -5.18632698059082
    5. ' -' → logprob: -5.43632698059082
    6. '):
' → logprob: -5.93632698059082
    7. '   ' → logprob: -7.31132698059082
    8. ' ):' → logprob: -7.43632698059082
    9. ' ,' → logprob: -9.06132698059082
    10. '+' → logprob: -9.06132698059082

Token 60: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.47844773530960083
    2. ' ' → logprob: -1.103447675704956
    3. '1' → logprob: -3.103447675704956
    4. 'k' → logprob: -6.103447914123535
    5. ' k' → logprob: -6.978447914123535
    6. ' -' → logprob: -8.228447914123535
    7. '-' → logprob: -9.353447914123535
    8. '2' → logprob: -9.478447914123535
    9. '   ' → logprob: -11.103447914123535
    10. '  ' → logprob: -12.728447914123535

Token 61: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.6022976636886597
    2. ',' → logprob: -0.8522976636886597
    3. '-' → logprob: -3.727297782897949
    4. ' ,' → logprob: -6.852297782897949
    5. ' ,-' → logprob: -7.852297782897949
    6. ' -' → logprob: -8.35229778289795
    7. '0' → logprob: -8.97729778289795
    8. '   ' → logprob: -10.22729778289795
    9. ',--' → logprob: -10.22729778289795
    10. '-,' → logprob: -10.35229778289795

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002261355984956026
    2. ' -' → logprob: -6.502261161804199
    3. '-' → logprob: -7.877261161804199
    4. ')' → logprob: -8.5022611618042
    5. ',-' → logprob: -9.0022611618042
    6. ' ' → logprob: -10.5022611618042
    7. ',' → logprob: -11.7522611618042
    8. '):
' → logprob: -12.0022611618042
    9. ')-' → logprob: -12.7522611618042
    10. '   ' → logprob: -12.8772611618042

Token 63: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13307739794254303
    2. '-' → logprob: -2.758077383041382
    3. '):
' → logprob: -3.383077383041382
    4. ',-' → logprob: -4.008077621459961
    5. ',' → logprob: -5.008077621459961
    6. '):-' → logprob: -7.383077621459961
    7. '   ' → logprob: -7.758077621459961
    8. ')' → logprob: -7.758077621459961
    9. '):
' → logprob: -8.008077621459961
    10. ' -' → logprob: -8.383077621459961

Token 64: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1161828264594078
    2. ':' → logprob: -2.616182804107666
    3. '   ' → logprob: -3.866182804107666
    4. '    ' → logprob: -5.366182804107666
    5. '<|end|>' → logprob: -5.366182804107666
    6. ' ' → logprob: -6.241182804107666
    7. ':
' → logprob: -6.866182804107666
    8. '        
' → logprob: -7.366182804107666
    9. ',' → logprob: -7.991182804107666
    10. '):
' → logprob: -8.241183280944824

Token 65: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.04014833644032478
    2. 'pos' (adapté à ' pos') → logprob: -3.4151482582092285
    3. '       ' → logprob: -5.6651482582092285
    4. ' ' → logprob: -6.6651482582092285
    5. '   ' → logprob: -7.1651482582092285
    6. '	pos' → logprob: -8.290148735046387
    7. '    ' → logprob: -8.290148735046387
    8. '<|end|>' → logprob: -8.665148735046387
    9. '        ' → logprob: -9.415148735046387
    10. ',pos' → logprob: -9.790148735046387

Token 66: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01210012100636959
    2. ' =' → logprob: -4.5121002197265625
    3. '=(' → logprob: -6.8871002197265625
    4. ' =(' → logprob: -11.262100219726562
    5. '=

' → logprob: -11.887100219726562
    6. '=
' → logprob: -13.387100219726562
    7. '-=' → logprob: -13.637100219726562
    8. '＝' → logprob: -13.762100219726562
    9. '=((' → logprob: -13.762100219726562
    10. '=f' → logprob: -14.512100219726562

Token 67: ' (' (ID: 350)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.01688825711607933
    2. ' (' → logprob: -4.26688814163208
    3. '(k' → logprob: -6.64188814163208
    4. '(' → logprob: -6.76688814163208
    5. '((' → logprob: -9.391888618469238
    6. '(i' → logprob: -9.391888618469238
    7. '(p' → logprob: -10.516888618469238
    8. '(position' → logprob: -11.266888618469238
    9. '(pid' → logprob: -11.516888618469238
    10. '(Pos' → logprob: -11.641888618469238

Token 68: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.002493968466296792
    2. '(pos' → logprob: -6.502493858337402
    3. ' pos' → logprob: -7.377493858337402
    4. 'k' → logprob: -8.002493858337402
    5. '(k' → logprob: -11.627493858337402
    6. '	pos' → logprob: -11.877493858337402
    7. '   ' → logprob: -12.752493858337402
    8. ')' → logprob: -12.752493858337402
    9. ' (' → logprob: -12.752493858337402
    10. '[pos' → logprob: -13.502493858337402

Token 69: ' +' (ID: 659)
  Prédit: '+k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+k' → logprob: -0.8271735310554504
    2. ' +' → logprob: -0.9521735310554504
    3. '*k' → logprob: -2.7021734714508057
    4. ' *' → logprob: -2.9521734714508057
    5. '+' → logprob: -3.2021734714508057
    6. '*' → logprob: -4.202173709869385
    7. 'k' → logprob: -7.702173709869385
    8. '-' → logprob: -8.077173233032227
    9. '-k' → logprob: -8.077173233032227
    10. ')' → logprob: -8.452173233032227

Token 70: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.011109007522463799
    2. ' k' → logprob: -4.511108875274658
    3. ')' → logprob: -10.386109352111816
    4. '	k' → logprob: -10.761109352111816
    5. '   ' → logprob: -12.761109352111816
    6. ' ' → logprob: -13.011109352111816
    7. '_k' → logprob: -13.761109352111816
    8. '    ' → logprob: -14.886109352111816
    9. '-k' → logprob: -15.011109352111816
    10. '+k' → logprob: -15.011109352111816

Token 71: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.32523515378125e-05
    2. ')%' → logprob: -10.250062942504883
    3. ' )' → logprob: -10.500062942504883
    4. '%' → logprob: -16.375062942504883
    5. '-' → logprob: -16.375062942504883
    6. '`)' → logprob: -17.000062942504883
    7. '）' → logprob: -17.250062942504883
    8. '')' → logprob: -17.750062942504883
    9. '%)' → logprob: -18.000062942504883
    10. '")' → logprob: -18.000062942504883

Token 72: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025298797991126776
    2. ' ' → logprob: -6.127530097961426
    3. ')' → logprob: -8.002530097961426
    4. ' )' → logprob: -11.877530097961426
    5. '<|end|>' → logprob: -14.252530097961426
    6. '%' → logprob: -14.502530097961426
    7. ')%' → logprob: -14.752530097961426
    8. '2' → logprob: -14.752530097961426
    9. ' %' → logprob: -15.377530097961426
    10. '```' → logprob: -15.627530097961426

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015205175441224128
    2. ' ' → logprob: -9.000151634216309
    3. ')' → logprob: -10.500151634216309
    4. '%' → logprob: -14.875151634216309
    5. ' )' → logprob: -15.875151634216309
    6. '2' → logprob: -16.250152587890625
    7. '```' → logprob: -16.250152587890625
    8. '<|end|>' → logprob: -16.250152587890625
    9. ')%' → logprob: -16.625152587890625
    10. ' %' → logprob: -16.687652587890625

Token 74: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.362307223957032e-05
    2. ' )' → logprob: -9.625073432922363
    3. ')%' → logprob: -11.875073432922363
    4. '%' → logprob: -15.625073432922363
    5. '+' → logprob: -16.00007438659668
    6. '   ' → logprob: -16.37507438659668
    7. '）' → logprob: -17.25007438659668
    8. '}' → logprob: -17.87507438659668
    9. '1' → logprob: -18.00007438659668
    10. '0' → logprob: -18.00007438659668

Token 75: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05121931433677673
    2. ' %' → logprob: -3.5512192249298096
    3. '%' → logprob: -4.426219463348389
    4. ')%' → logprob: -5.051219463348389
    5. ' )' → logprob: -5.926219463348389
    6. '%i' → logprob: -9.42621898651123
    7. ' ' → logprob: -10.55121898651123
    8. '   ' → logprob: -10.55121898651123
    9. '%n' → logprob: -10.92621898651123
    10. ']' → logprob: -11.42621898651123

Token 76: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00033558503491804004
    2. ' i' → logprob: -8.000335693359375
    3. '   ' → logprob: -16.500335693359375
    4. '	i' → logprob: -17.125335693359375
    5. '<|end|>' → logprob: -17.750335693359375
    6. '*i' → logprob: -18.500335693359375
    7. ' ' → logprob: -18.750335693359375
    8. '```' → logprob: -19.375335693359375
    9. '<i' → logprob: -19.625335693359375
    10. ')i' → logprob: -19.750335693359375

Token 77: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3130919337272644
    2. 'print' → logprob: -1.4380919933319092
    3. '
' → logprob: -3.813091993331909
    4. '+' → logprob: -6.06309175491333
    5. '<|end|>' → logprob: -6.18809175491333
    6. '    
' → logprob: -6.56309175491333
    7. ' print' → logprob: -7.06309175491333
    8. '```' → logprob: -7.56309175491333
    9. 'pos' → logprob: -8.063092231750488
    10. ')' → logprob: -8.313092231750488

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004010726697742939
    2. 'print' → logprob: -5.8790106773376465
    3. '    
' → logprob: -7.1290106773376465
    4. '<|end|>' → logprob: -8.879011154174805
    5. '+' → logprob: -9.379011154174805
    6. ' print' → logprob: -10.379011154174805
    7. '```' → logprob: -10.629011154174805
    8. '  
' → logprob: -10.879011154174805
    9. '\n' → logprob: -10.879011154174805
    10. '
' → logprob: -11.129011154174805

Token 79: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.16019456088542938
    2. '   ' → logprob: -2.0351946353912354
    3. ' print' → logprob: -4.910194396972656
    4. '
' → logprob: -5.285194396972656
    5. '\n' → logprob: -6.660194396972656
    6. '    
' → logprob: -6.785194396972656
    7. ' 
' → logprob: -7.535194396972656
    8. ' ' → logprob: -7.535194396972656
    9. '  
' → logprob: -7.785194396972656
    10. 'pos' → logprob: -8.410194396972656

Token 80: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.19150672852993011
    2. '(' → logprob: -1.8165067434310913
    3. '(n' → logprob: -4.941506862640381
    4. '(f' → logprob: -6.566506862640381
    5. '('' → logprob: -6.941506862640381
    6. '((' → logprob: -7.066506862640381
    7. '("' → logprob: -7.816506862640381
    8. '(chr' → logprob: -8.066506385803223
    9. '(i' → logprob: -8.941506385803223
    10. '(s' → logprob: -9.441506385803223

Token 81: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08904285728931427
    2. ' +' → logprob: -2.464042901992798
    3. ')' → logprob: -9.464042663574219
    4. ')+' → logprob: -11.589042663574219
    5. '+)' → logprob: -11.714042663574219
    6. '   ' → logprob: -12.714042663574219
    7. '+
' → logprob: -12.964042663574219
    8. ' ' → logprob: -14.589042663574219
    9. ' )' → logprob: -14.964042663574219
    10. '1' → logprob: -14.964042663574219

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.00000286102295
    3. '```' → logprob: -15.75000286102295
    4. ')' → logprob: -16.375001907348633
    5. '0' → logprob: -16.875001907348633
    6. '`' → logprob: -17.625001907348633
    7. '   ' → logprob: -18.875001907348633
    8. '2' → logprob: -19.000001907348633
    9. '<|end|>' → logprob: -19.000001907348633
    10. '``' → logprob: -19.625001907348633

Token 83: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ')
' → logprob: -14.500000953674316
    3. ' )' → logprob: -14.500000953674316
    4. ')`' → logprob: -17.000001907348633
    5. '))' → logprob: -17.875001907348633
    6. '`)' → logprob: -18.375001907348633
    7. '')' → logprob: -18.875001907348633
    8. '```' → logprob: -19.250001907348633
    9. '）' → logprob: -19.375001907348633
    10. '   ' → logprob: -19.375001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 81
Tokens correctement prédits (1ère position, stricte): 40
Tokens correctement prédits (1ère position, avec adaptation): 41
Tokens correctement prédits (top 10): 66
Précision stricte (1ère position): 49.38%
Précision adaptée (1ère position): 50.62%
Précision (top 10): 81.48%
================================================================================
