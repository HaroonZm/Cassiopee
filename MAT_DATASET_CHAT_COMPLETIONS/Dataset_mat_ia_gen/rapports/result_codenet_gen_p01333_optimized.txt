================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    A,B=map(int,input().split())
    if A==0 and B==0:
        break
    change=B-A
    n1000=change//1000
    change%=1000
    n500=change//500
    change%=500
    n100=change//100
    print(n100,n500,n1000)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.612176239490509
    2. '    ' → logprob: -2.2371761798858643
    3. '    
' → logprob: -2.6121761798858643
    4. '\' → logprob: -2.8621761798858643
    5. '\n' → logprob: -2.8621761798858643
    6. '```' → logprob: -3.2371761798858643
    7. ' ' → logprob: -3.3621761798858643
    8. ' 
' → logprob: -3.6121761798858643
    9. '  
' → logprob: -4.112176418304443
    10. '     
' → logprob: -4.237176418304443

Token 4: ' A' (ID: 355)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3108775019645691
    2. '    ' → logprob: -1.6858775615692139
    3. '```' → logprob: -3.435877561569214
    4. ' ' → logprob: -3.810877561569214
    5. '       ' → logprob: -4.810877323150635
    6. '    
' → logprob: -5.935877323150635
    7. '  ' → logprob: -6.185877323150635
    8. '\' → logprob: -6.185877323150635
    9. '\n' → logprob: -6.685877323150635
    10. '\t' → logprob: -6.810877323150635

Token 5: ',B' (ID: 19853)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23328156769275665
    2. ' =' → logprob: -2.6082816123962402
    3. '.' → logprob: -3.1082816123962402
    4. ' ' → logprob: -3.9832816123962402
    5. '[' → logprob: -4.10828161239624
    6. '   ' → logprob: -4.35828161239624
    7. ' +=' → logprob: -4.60828161239624
    8. ')' → logprob: -5.23328161239624
    9. '.append' → logprob: -5.48328161239624
    10. '+' → logprob: -5.98328161239624

Token 6: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5345137715339661
    2. '=' → logprob: -1.2845137119293213
    3. ',' → logprob: -2.0345137119293213
    4. ' ,' → logprob: -5.4095139503479
    5. ')' → logprob: -7.0345139503479
    6. ' ' → logprob: -7.5345139503479
    7. '[' → logprob: -8.159513473510742
    8. '.' → logprob: -9.659513473510742
    9. ' +=' → logprob: -9.659513473510742
    10. '<|end|>' → logprob: -10.034513473510742

Token 7: 'map' (ID: 3726)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.31166645884513855
    2. ' input' → logprob: -1.561666488647461
    3. ' map' → logprob: -3.436666488647461
    4. 'map' → logprob: -3.936666488647461
    5. ' ' → logprob: -5.686666488647461
    6. '0' → logprob: -6.186666488647461
    7. '1' → logprob: -9.436666488647461
    8. ' B' → logprob: -9.436666488647461
    9. 'int' → logprob: -9.561666488647461
    10. '(input' → logprob: -9.936666488647461

Token 8: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.5044970512390137
    2. '(' → logprob: -1.5044970512390137
    3. '(str' → logprob: -1.7544970512390137
    4. '(input' → logprob: -8.004497528076172
    5. '(lambda' → logprob: -8.754497528076172
    6. '(list' → logprob: -9.129497528076172
    7. 'int' → logprob: -9.129497528076172
    8. 'str' → logprob: -9.254497528076172
    9. ' str' → logprob: -9.754497528076172
    10. ' (' → logprob: -10.129497528076172

Token 9: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.03881754353642464
    2. ')' → logprob: -3.5388176441192627
    3. 'input' → logprob: -5.038817405700684
    4. '(' → logprob: -6.788817405700684
    5. ',input' → logprob: -7.538817405700684
    6. ' input' → logprob: -7.538817405700684
    7. '=input' → logprob: -8.913817405700684
    8. '<|end|>' → logprob: -10.413817405700684
    9. '[input' → logprob: -10.413817405700684
    10. '(user' → logprob: -10.538817405700684

Token 10: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.23180510103702545
    2. '()' → logprob: -1.6068050861358643
    3. '());' → logprob: -6.356805324554443
    4. '()))' → logprob: -6.481805324554443
    5. '().' → logprob: -7.356805324554443
    6. '(' → logprob: -7.606805324554443
    7. ')' → logprob: -8.106804847717285
    8. '()>' → logprob: -8.356804847717285
    9. '()));' → logprob: -8.731804847717285
    10. '();)' → logprob: -8.731804847717285

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.370294846012257e-05
    2. 'strip' → logprob: -10.125043869018555
    3. 'rstrip' → logprob: -12.875043869018555
    4. '(split' → logprob: -14.500043869018555
    5. ' split' → logprob: -14.625043869018555
    6. ')' → logprob: -17.250043869018555
    7. 'replace' → logprob: -18.250043869018555
    8. 'spl' → logprob: -18.625043869018555
    9. 'startswith' → logprob: -19.625043869018555
    10. 's' → logprob: -20.125043869018555

Token 12: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2556084096431732
    2. ')' → logprob: -1.8806084394454956
    3. '()))' → logprob: -3.130608320236206
    4. '))' → logprob: -3.630608320236206
    5. '()' → logprob: -5.880608558654785
    6. ' ())' → logprob: -11.755608558654785
    7. '(' → logprob: -11.880608558654785
    8. '())
' → logprob: -12.005608558654785
    9. ')))' → logprob: -12.130608558654785
    10. '`)' → logprob: -12.130608558654785

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7435429692268372
    2. '<|end|>' → logprob: -0.8685429692268372
    3. ':' → logprob: -3.3685429096221924
    4. ' if' → logprob: -3.7435429096221924
    5. ' ' → logprob: -3.7435429096221924
    6. ')' → logprob: -5.1185431480407715
    7. '  ' → logprob: -5.7435431480407715
    8. ',' → logprob: -6.2435431480407715
    9. ':
' → logprob: -6.4935431480407715
    10. '<|end|>' → logprob: -6.6185431480407715

Token 14: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7898491621017456
    2. '   ' → logprob: -0.9148491621017456
    3. '<|end|>' → logprob: -2.664849281311035
    4. 'if' (adapté à ' if') → logprob: -3.789849281311035
    5. ' ' → logprob: -4.164849281311035
    6. ')' → logprob: -4.914849281311035
    7. ':' → logprob: -4.914849281311035
    8. ',' → logprob: -5.039849281311035
    9. '    ' → logprob: -5.039849281311035
    10. '  ' → logprob: -5.789849281311035

Token 15: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.06459953635931015
    2. ' not' → logprob: -3.4395995140075684
    3. 'A' → logprob: -3.8145995140075684
    4. ' ' → logprob: -5.314599514007568
    5. ' B' → logprob: -5.814599514007568
    6. 'not' → logprob: -8.439599990844727
    7. 'B' → logprob: -8.564599990844727
    8. ' ' → logprob: -9.439599990844727
    9. ' (' → logprob: -11.564599990844727
    10. ')' → logprob: -11.689599990844727

Token 16: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2521476447582245
    2. ' <' → logprob: -1.8771476745605469
    3. '==' → logprob: -3.752147674560547
    4. ' >' → logprob: -4.252147674560547
    5. '<' → logprob: -4.627147674560547
    6. ' >=' → logprob: -5.002147674560547
    7. ' <=' → logprob: -5.127147674560547
    8. ' ' → logprob: -5.127147674560547
    9. '>' → logprob: -6.877147674560547
    10. ' !=' → logprob: -7.127147674560547

Token 17: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05519808083772659
    2. ' ' → logprob: -2.9301981925964355
    3. 'B' → logprob: -8.430197715759277
    4. ' B' → logprob: -9.430197715759277
    5. '-' → logprob: -11.555197715759277
    6. '1' → logprob: -13.430197715759277
    7. '   ' → logprob: -13.805197715759277
    8. '  ' → logprob: -13.930197715759277
    9. ' -' → logprob: -14.055197715759277
    10. '=' → logprob: -14.742697715759277

Token 18: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.009682666510343552
    2. 'and' → logprob: -4.759682655334473
    3. ':' → logprob: -7.009682655334473
    4. ' or' → logprob: -9.009682655334473
    5. ' ' → logprob: -10.509682655334473
    6. '   ' → logprob: -11.759682655334473
    7. ' a' → logprob: -13.259682655334473
    8. ' &' → logprob: -13.384682655334473
    9. '	and' → logprob: -13.759682655334473
    10. '<|end|>' → logprob: -14.509682655334473

Token 19: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.3868773579597473
    2. 'B' → logprob: -1.1368772983551025
    3. ' ' → logprob: -12.011877059936523
    4. '	B' → logprob: -15.636877059936523
    5. '<|end|>' → logprob: -16.386877059936523
    6. '   ' → logprob: -17.386877059936523
    7. '  ' → logprob: -18.261877059936523
    8. '    ' → logprob: -18.511877059936523
    9. '<|end|>' → logprob: -19.136877059936523
    10. ' ' → logprob: -19.261877059936523

Token 20: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03200414776802063
    2. ' ==' → logprob: -3.5320041179656982
    3. '=' → logprob: -6.782004356384277
    4. '<|end|>' → logprob: -7.282004356384277
    5. '<|end|>' → logprob: -9.407004356384277
    6. ']==' → logprob: -9.407004356384277
    7. ')==' → logprob: -9.532004356384277
    8. ' ' → logprob: -10.032004356384277
    9. '()==' → logprob: -10.157004356384277
    10. ' ' → logprob: -10.532004356384277

Token 21: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000627014203928411
    2. ' ' → logprob: -7.375627040863037
    3. '1' → logprob: -15.750626564025879
    4. '  ' → logprob: -16.188127517700195
    5. '   ' → logprob: -16.688127517700195
    6. '```' → logprob: -16.813127517700195
    7. '۰' → logprob: -17.500627517700195
    8. ')' → logprob: -17.750627517700195
    9. '<|end|>' → logprob: -18.000627517700195
    10. ' ' → logprob: -18.188127517700195

Token 22: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007618647650815547
    2. '       ' → logprob: -7.625761985778809
    3. ':
' → logprob: -8.750761985778809
    4. '   ' → logprob: -9.125761985778809
    5. ' :' → logprob: -13.125761985778809
    6. ':return' → logprob: -13.500761985778809
    7. '):' → logprob: -14.125761985778809
    8. '    ' → logprob: -14.500761985778809
    9. ':\' → logprob: -15.000761985778809
    10. '     ' → logprob: -15.000761985778809

Token 23: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003491705865599215
    2. '   ' → logprob: -8.375349044799805
    3. ' break' → logprob: -9.625349044799805
    4. '\n' → logprob: -11.000349044799805
    5. '	break' → logprob: -11.875349044799805
    6. '    ' → logprob: -12.250349044799805
    7. ' ' → logprob: -12.750349044799805
    8. ':' → logprob: -12.750349044799805
    9. '     ' → logprob: -12.750349044799805
    10. '<|end|>' → logprob: -12.875349044799805

Token 24: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08531639724969864
    2. ' break' → logprob: -2.5853164196014404
    3. 'break' (adapté à ' break') → logprob: -5.085316181182861
    4. '   ' → logprob: -9.46031665802002
    5. '	break' → logprob: -9.46031665802002
    6. '           ' → logprob: -9.96031665802002
    7. '_break' → logprob: -12.83531665802002
    8. '```' → logprob: -13.21031665802002
    9. ' ' → logprob: -13.33531665802002
    10. ' ' → logprob: -13.33531665802002

Token 25: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0896233543753624
    2. '\n' → logprob: -3.46462345123291
    3. '    
' → logprob: -3.71462345123291
    4. '<|end|>' → logprob: -3.96462345123291
    5. '  
' → logprob: -5.71462345123291
    6. 'print' → logprob: -6.58962345123291
    7. ')' → logprob: -6.71462345123291
    8. '
' → logprob: -7.08962345123291
    9. '  ' → logprob: -7.46462345123291
    10. '       ' → logprob: -7.46462345123291

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05279293283820152
    2. '    
' → logprob: -3.177793025970459
    3. '<|end|>' → logprob: -5.927793025970459
    4. '\n' → logprob: -6.052793025970459
    5. 'print' → logprob: -6.552793025970459
    6. '       ' → logprob: -6.677793025970459
    7. '
' → logprob: -7.177793025970459
    8. '        
' → logprob: -7.927793025970459
    9. '  
' → logprob: -8.6777925491333
    10. '```' → logprob: -8.6777925491333

Token 27: ' change' (ID: 3343)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23140613734722137
    2. '    
' → logprob: -2.3564062118530273
    3. '\n' → logprob: -2.8564062118530273
    4. 'print' → logprob: -3.3564062118530273
    5. '
' → logprob: -4.606406211853027
    6. '<|end|>' → logprob: -5.981406211853027
    7. '       ' → logprob: -6.856406211853027
    8. ' 
' → logprob: -6.981406211853027
    9. ' print' → logprob: -6.981406211853027
    10. '\r' → logprob: -7.106406211853027

Token 28: '=B' (ID: 139140)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4490054249763489
    2. ' =' → logprob: -1.199005365371704
    3. 's' → logprob: -3.699005365371704
    4. '=A' → logprob: -4.699005603790283
    5. '_ratio' → logprob: -5.449005603790283
    6. '_' → logprob: -5.449005603790283
    7. '_count' → logprob: -5.574005603790283
    8. 'A' → logprob: -6.324005603790283
    9. '_amount' → logprob: -6.449005603790283
    10. 'able' → logprob: -7.074005603790283

Token 29: '-A' (ID: 9406)
  Prédit: '-A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-A' → logprob: -0.39037591218948364
    2. '-' → logprob: -1.2653758525848389
    3. ' -' → logprob: -3.265375852584839
    4. '   ' → logprob: -7.390376091003418
    5. 'A' → logprob: -7.640376091003418
    6. '-=' → logprob: -7.640376091003418
    7. '-B' → logprob: -8.015376091003418
    8. '=' → logprob: -9.015376091003418
    9. '	A' → logprob: -9.390376091003418
    10. ' -=' → logprob: -9.390376091003418

Token 30: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2802020311355591
    2. '<|end|>' → logprob: -1.655202031135559
    3. ' if' → logprob: -3.5302019119262695
    4. ' ' → logprob: -5.4052019119262695
    5. '    ' → logprob: -5.6552019119262695
    6. '    
' → logprob: -5.9052019119262695
    7. '<|end|>' → logprob: -6.0302019119262695
    8. '
' → logprob: -6.1552019119262695
    9. '\n' → logprob: -6.2802019119262695
    10. '+' → logprob: -6.7802019119262695

Token 32: ' n' (ID: 297)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3428474962711334
    2. '   ' → logprob: -2.2178475856781006
    3. ' print' → logprob: -2.3428475856781006
    4. 'print' → logprob: -3.4678475856781006
    5. 'if' → logprob: -3.8428475856781006
    6. ' ' → logprob: -3.8428475856781006
    7. '    ' → logprob: -4.7178473472595215
    8. '<|end|>' → logprob: -7.0928473472595215
    9. '  ' → logprob: -7.7178473472595215
    10. ',' → logprob: -9.34284782409668

Token 33: '100' (ID: 1353)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18491965532302856
    2. '+=' → logprob: -2.559919595718384
    3. ' =' → logprob: -3.559919595718384
    4. '=int' → logprob: -3.809919595718384
    5. '+' → logprob: -4.684919834136963
    6. 'ext' → logprob: -5.059919834136963
    7. 'um' → logprob: -5.184919834136963
    8. ' +=' → logprob: -5.309919834136963
    9. '-=' → logprob: -6.309919834136963
    10. '*=' → logprob: -6.309919834136963

Token 34: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1260712593793869
    2. ' =' → logprob: -2.5010712146759033
    3. '=' → logprob: -3.6260712146759033
    4. '00' → logprob: -4.751071453094482
    5. ' ' → logprob: -7.876071453094482
    6. 's' → logprob: -8.251070976257324
    7. '=int' → logprob: -8.376070976257324
    8. '   ' → logprob: -9.751070976257324
    9. '_' → logprob: -10.126070976257324
    10. '```' → logprob: -10.126070976257324

Token 35: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09044031798839569
    2. ' =' → logprob: -2.465440273284912
    3. '=int' → logprob: -7.090440273284912
    4. 's' → logprob: -8.46544075012207
    5. ',' → logprob: -8.59044075012207
    6. '_' → logprob: -9.96544075012207
    7. '＝' → logprob: -10.59044075012207
    8. '=num' → logprob: -10.71544075012207
    9. '=_' → logprob: -10.96544075012207
    10. '_=' → logprob: -11.09044075012207

Token 36: 'change' (ID: 4939)
  Prédit: 'change'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.2812211811542511
    2. ' change' → logprob: -1.4062211513519287
    3. '(change' → logprob: -10.656221389770508
    4. 'chang' → logprob: -10.656221389770508
    5. 'int' → logprob: -11.281221389770508
    6. '	change' → logprob: -12.281221389770508
    7. ' chang' → logprob: -13.031221389770508
    8. '0' → logprob: -13.656221389770508
    9. ' int' → logprob: -13.781221389770508
    10. '   ' → logprob: -14.281221389770508

Token 37: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.6334409117698669
    2. ' //' → logprob: -0.7584409117698669
    3. '100' → logprob: -8.258440971374512
    4. '"' → logprob: -9.008440971374512
    5. ' ' → logprob: -9.508440971374512
    6. '`' → logprob: -9.508440971374512
    7. '   ' → logprob: -9.758440971374512
    8. '/' → logprob: -9.883440971374512
    9. ''' → logprob: -10.258440971374512
    10. ' /' → logprob: -10.883440971374512

Token 38: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -3.4121114822482923e-06
    2. '10' → logprob: -13.250003814697266
    3. '1' → logprob: -14.125003814697266
    4. ' ' → logprob: -14.250003814697266
    5. '１００' → logprob: -16.375003814697266
    6. '500' → logprob: -17.500003814697266
    7. '  ' → logprob: -17.750003814697266
    8. '0' → logprob: -18.375003814697266
    9. '```' → logprob: -18.562503814697266
    10. '   ' → logprob: -19.187503814697266

Token 39: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.024225465953350067
    2. '100' → logprob: -5.024225234985352
    3. '\n' → logprob: -5.774225234985352
    4. '000' → logprob: -5.899225234985352
    5. '<|end|>' → logprob: -5.899225234985352
    6. '
' → logprob: -6.149225234985352
    7. ' ' → logprob: -6.899225234985352
    8. '00' → logprob: -7.274225234985352
    9. '\' → logprob: -7.399225234985352
    10. '.' → logprob: -7.524225234985352

Token 40: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 41: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: ' change' (ID: 3343)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: '%=' (ID: 83893)
  Prédit: '%='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.5896517038345337
    2. '%' → logprob: -0.9646517038345337
    3. ' %=' → logprob: -2.839651584625244
    4. '=' → logprob: -5.214651584625244
    5. ' %' → logprob: -8.089652061462402
    6. '=%' → logprob: -9.339652061462402
    7. '-=' → logprob: -10.589652061462402
    8. ' =' → logprob: -11.339652061462402
    9. '//=' → logprob: -11.464652061462402
    10. '```' → logprob: -11.714652061462402

Token 44: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -4.60414821645827e-06
    2. ' ' → logprob: -12.375004768371582
    3. '1' → logprob: -16.125003814697266
    4. '１００' → logprob: -16.875003814697266
    5. '10' → logprob: -17.250003814697266
    6. '  ' → logprob: -17.875003814697266
    7. '   ' → logprob: -18.500003814697266
    8. '```' → logprob: -18.812503814697266
    9. '>' → logprob: -20.562503814697266
    10. '{' → logprob: -20.812503814697266

Token 45: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5928495486150496e-05
    2. '00' → logprob: -11.250016212463379
    3. ' ' → logprob: -13.750016212463379
    4. '100' → logprob: -13.875016212463379
    5. '000' → logprob: -14.250016212463379
    6. '   ' → logprob: -16.500015258789062
    7. '```' → logprob: -16.750015258789062
    8. '<|end|>' → logprob: -16.750015258789062
    9. '۰' → logprob: -17.750015258789062
    10. '  ' → logprob: -18.000015258789062

Token 46: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2725343108177185
    2. '   ' → logprob: -2.1475343704223633
    3. '\n' → logprob: -2.5225343704223633
    4. '
' → logprob: -3.5225343704223633
    5. '100' → logprob: -6.022534370422363
    6. 'newline' → logprob: -6.147534370422363
    7. '    
' → logprob: -6.397534370422363
    8. '```' → logprob: -6.522534370422363
    9. '<|end|>' → logprob: -6.647534370422363
    10. '	n' → logprob: -7.397534370422363

Token 47: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0395708829164505
    2. '   ' → logprob: -3.2895708084106445
    3. '<|end|>' → logprob: -7.6645708084106445
    4. ' n' → logprob: -8.414570808410645
    5. '	n' → logprob: -8.414570808410645
    6. ' ' → logprob: -8.789570808410645
    7. '  ' → logprob: -8.914570808410645
    8. '100' → logprob: -9.414570808410645
    9. '\n' → logprob: -9.664570808410645
    10. '    
' → logprob: -10.539570808410645

Token 48: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0002705145161598921
    2. '   ' → logprob: -8.75027084350586
    3. ' n' → logprob: -9.87527084350586
    4. '```' → logprob: -10.12527084350586
    5. '100' → logprob: -11.12527084350586
    6. '`' → logprob: -12.87527084350586
    7. '\n' → logprob: -14.00027084350586
    8. '	n' → logprob: -14.50027084350586
    9. ' ' → logprob: -14.62527084350586
    10. '    ' → logprob: -15.12527084350586

Token 49: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.07239684462547302
    2. '5' → logprob: -2.697396755218506
    3. ' ' → logprob: -6.447396755218506
    4. '100' → logprob: -8.322397232055664
    5. '```' → logprob: -8.822397232055664
    6. '50' → logprob: -8.947397232055664
    7. 'five' → logprob: -8.947397232055664
    8. '=' → logprob: -10.197397232055664
    9. '_' → logprob: -10.197397232055664
    10. '#' → logprob: -10.822397232055664

Token 50: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.6166903151315637e-05
    2. ' =' → logprob: -11.125016212463379
    3. '=n' → logprob: -14.375016212463379
    4. '=int' → logprob: -15.125016212463379
    5. '=f' → logprob: -16.750015258789062
    6. '=s' → logprob: -17.000015258789062
    7. '=value' → logprob: -17.625015258789062
    8. '=cut' → logprob: -17.625015258789062
    9. '=com' → logprob: -17.750015258789062
    10. '=

' → logprob: -17.750015258789062

Token 51: 'change' (ID: 4939)
  Prédit: 'change'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.00016098834748845547
    2. ' change' → logprob: -8.750161170959473
    3. '   ' → logprob: -13.500161170959473
    4. 'chang' → logprob: -14.750161170959473
    5. '(change' → logprob: -15.125161170959473
    6. '100' → logprob: -15.875161170959473
    7. '500' → logprob: -16.000160217285156
    8. '	change' → logprob: -16.250160217285156
    9. '0' → logprob: -17.125160217285156
    10. '5' → logprob: -17.375160217285156

Token 52: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.0031981545034796
    2. '//=' → logprob: -5.753198146820068
    3. ' //' → logprob: -10.878198623657227
    4. '=' → logprob: -14.253198623657227
    5. '/' → logprob: -14.503198623657227
    6. '//#' → logprob: -15.378198623657227
    7. '>//' → logprob: -16.878198623657227
    8. '#' → logprob: -17.003198623657227
    9. '```' → logprob: -17.003198623657227
    10. '`' → logprob: -17.378198623657227

Token 53: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.250006675720215
    3. '5' → logprob: -13.750006675720215
    4. '50' → logprob: -14.750006675720215
    5. '  ' → logprob: -17.6250057220459
    6. '```' → logprob: -18.5625057220459
    7. '   ' → logprob: -18.6250057220459
    8. '>' → logprob: -19.0000057220459
    9. '`' → logprob: -19.6250057220459
    10. '५०' → logprob: -20.0000057220459

Token 54: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6512255668640137
    2. '   ' → logprob: -1.2762255668640137
    3. 'change' → logprob: -1.7762255668640137
    4. '\n' → logprob: -4.401225566864014
    5. '<|end|>' → logprob: -4.901225566864014
    6. '    
' → logprob: -6.026225566864014
    7. 'n' → logprob: -6.151225566864014
    8. ' change' → logprob: -6.151225566864014
    9. '```' → logprob: -7.526225566864014
    10. ' 
' → logprob: -7.526225566864014

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4334956109523773
    2. 'change' → logprob: -1.0584956407546997
    3. ' change' → logprob: -6.30849552154541
    4. '```' → logprob: -6.30849552154541
    5. '
' → logprob: -7.93349552154541
    6. '\n' → logprob: -8.43349552154541
    7. '``' → logprob: -8.68349552154541
    8. '    
' → logprob: -9.18349552154541
    9. '	change' → logprob: -9.30849552154541
    10. '<|end|>' → logprob: -9.80849552154541

Token 56: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' (adapté à ' change') → logprob: -8.232493564719334e-05
    2. ' change' → logprob: -10.500082015991211
    3. '   ' → logprob: -11.375082015991211
    4. '
' → logprob: -11.375082015991211
    5. '```' → logprob: -11.375082015991211
    6. '%' → logprob: -11.750082015991211
    7. '(change' → logprob: -12.375082015991211
    8. '<|end|>' → logprob: -13.250082015991211
    9. '	change' → logprob: -13.375082015991211
    10. '\n' → logprob: -14.000082015991211

Token 57: '%=' (ID: 83893)
  Prédit: '%='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.011110661551356316
    2. '%' → logprob: -4.511110782623291
    3. ' %=' → logprob: -10.386110305786133
    4. '=' → logprob: -11.011110305786133
    5. '=%' → logprob: -11.136110305786133
    6. '```' → logprob: -15.386110305786133
    7. ')%' → logprob: -16.011110305786133
    8. ' %' → logprob: -16.886110305786133
    9. '()%' → logprob: -17.261110305786133
    10. '%\' → logprob: -17.386110305786133

Token 58: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.00020056030189152807
    2. '100' → logprob: -8.625200271606445
    3. '50' → logprob: -11.500200271606445
    4. '5' → logprob: -11.750200271606445
    5. ' ' → logprob: -12.750200271606445
    6. '400' → logprob: -17.500200271606445
    7. '  ' → logprob: -18.375200271606445
    8. '200' → logprob: -18.375200271606445
    9. '501' → logprob: -18.500200271606445
    10. '250' → logprob: -19.125200271606445

Token 59: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03853001818060875
    2. 'n' → logprob: -3.663530111312866
    3. '```' → logprob: -5.288529872894287
    4. '<|end|>' → logprob: -5.788529872894287
    5. '\n' → logprob: -6.288529872894287
    6. '
' → logprob: -7.163529872894287
    7. '    
' → logprob: -7.663529872894287
    8. '  ' → logprob: -7.913529872894287
    9. ' n' → logprob: -8.788530349731445
    10. '	n' → logprob: -9.163530349731445

Token 60: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6951944231987
    2. '   ' → logprob: -0.6951944231987
    3. '```' → logprob: -6.320194244384766
    4. '
' → logprob: -9.445194244384766
    5. '``' → logprob: -9.945194244384766
    6. ' n' → logprob: -10.070194244384766
    7. '  ' → logprob: -10.445194244384766
    8. '	n' → logprob: -10.570194244384766
    9. '    
' → logprob: -11.945194244384766
    10. ' ' → logprob: -12.445194244384766

Token 61: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.00022165567497722805
    2. '250' → logprob: -8.750221252441406
    3. '100' → logprob: -10.625221252441406
    4. '   ' → logprob: -10.875221252441406
    5. ' n' → logprob: -12.000221252441406
    6. '200' → logprob: -12.000221252441406
    7. '2' → logprob: -12.875221252441406
    8. '```' → logprob: -13.375221252441406
    9. '1' → logprob: -14.000221252441406
    10. '50' → logprob: -14.250221252441406

Token 62: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.005268738139420748
    2. '1' → logprob: -5.755268573760986
    3. '10' → logprob: -6.630268573760986
    4. '200' → logprob: -7.880268573760986
    5. ' ' → logprob: -8.630269050598145
    6. '2' → logprob: -10.380269050598145
    7. '50' → logprob: -10.380269050598145
    8. '=' → logprob: -10.505269050598145
    9. '_' → logprob: -10.880269050598145
    10. '20' → logprob: -11.005269050598145

Token 63: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -6.704273118884885e-07
    2. ' =' → logprob: -14.500000953674316
    3. '=n' → logprob: -16.75
    4. '=int' → logprob: -18.125
    5. '==' → logprob: -18.75
    6. '=`' → logprob: -18.875
    7. '=

' → logprob: -19.0
    8. '=#' → logprob: -19.125
    9. '=query' → logprob: -19.375
    10. '=line' → logprob: -19.375

Token 64: 'change' (ID: 4939)
  Prédit: 'change'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -2.8206473871250637e-05
    2. ' change' → logprob: -10.500028610229492
    3. '(change' → logprob: -14.375028610229492
    4. '100' → logprob: -17.250028610229492
    5. '	change' → logprob: -18.625028610229492
    6. '   ' → logprob: -19.750028610229492
    7. 'chang' → logprob: -20.375028610229492
    8. ' ' → logprob: -20.750028610229492
    9. '0' → logprob: -20.750028610229492
    10. '_change' → logprob: -21.875028610229492

Token 65: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.00018339496455155313
    2. '//=' → logprob: -8.62518310546875
    3. ' //' → logprob: -12.75018310546875
    4. '```' → logprob: -15.12518310546875
    5. '/' → logprob: -15.62518310546875
    6. '//#' → logprob: -15.75018310546875
    7. '#' → logprob: -16.12518310546875
    8. '>//' → logprob: -16.25018310546875
    9. '=' → logprob: -16.37518310546875
    10. '`' → logprob: -16.50018310546875

Token 66: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.875000953674316
    3. '1' → logprob: -16.000001907348633
    4. '10' → logprob: -16.500001907348633
    5. '１００' → logprob: -17.687501907348633
    6. '```' → logprob: -17.812501907348633
    7. '  ' → logprob: -18.562501907348633
    8. '   ' → logprob: -18.875001907348633
    9. 'hund' → logprob: -18.875001907348633
    10. '>' → logprob: -19.937501907348633

Token 67: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07842709124088287
    2. 'change' → logprob: -3.3284270763397217
    3. '\n' → logprob: -4.203427314758301
    4. '%' → logprob: -4.703427314758301
    5. '
' → logprob: -5.328427314758301
    6. '\' → logprob: -5.703427314758301
    7. ' change' → logprob: -6.078427314758301
    8. '%
' → logprob: -6.703427314758301
    9. '
' → logprob: -7.078427314758301
    10. '0' → logprob: -7.453427314758301

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009700375609099865
    2. 'change' → logprob: -4.759700298309326
    3. '```' → logprob: -8.009700775146484
    4. '
' → logprob: -8.259700775146484
    5. '\n' → logprob: -8.634700775146484
    6. '    
' → logprob: -9.134700775146484
    7. ' change' → logprob: -9.384700775146484
    8. '<|end|>' → logprob: -10.509700775146484
    9. 'n' → logprob: -11.009700775146484
    10. '	change' → logprob: -11.509700775146484

Token 69: ' print' (ID: 2123)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.001156770158559084
    2. '   ' → logprob: -7.251156806945801
    3. '```' → logprob: -7.751156806945801
    4. ' change' → logprob: -11.7511568069458
    5. '``' → logprob: -12.1261568069458
    6. '
' → logprob: -13.2511568069458
    7. '	change' → logprob: -14.2511568069458
    8. '\' → logprob: -15.6261568069458
    9. '(change' → logprob: -16.001155853271484
    10. '`' → logprob: -16.126155853271484

Token 70: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.10141430050134659
    2. '(' → logprob: -2.351414203643799
    3. ' (' → logprob: -7.601414203643799
    4. '(f' → logprob: -8.226414680480957
    5. '()' → logprob: -8.976414680480957
    6. '('' → logprob: -9.101414680480957
    7. '((' → logprob: -9.476414680480957
    8. '("' → logprob: -9.476414680480957
    9. 'n' → logprob: -10.351414680480957
    10. '(len' → logprob: -12.976414680480957

Token 71: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.10536099970340729
    2. '00' → logprob: -2.480360984802246
    3. '0' → logprob: -4.355360984802246
    4. '000' → logprob: -5.730360984802246
    5. '_' → logprob: -9.605360984802246
    6. '500' → logprob: -9.855360984802246
    7. '50' → logprob: -10.230360984802246
    8. '10' → logprob: -11.105360984802246
    9. '1' → logprob: -11.480360984802246
    10. ')' → logprob: -12.105360984802246

Token 72: ',n' (ID: 18103)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00594372907653451
    2. '0' → logprob: -5.255943775177002
    3. '//' → logprob: -7.630943775177002
    4. '*' → logprob: -9.880943298339844
    5. '`)' → logprob: -10.005943298339844
    6. ' )' → logprob: -10.880943298339844
    7. '100' → logprob: -11.005943298339844
    8. ')
' → logprob: -11.255943298339844
    9. ',)' → logprob: -11.755943298339844
    10. '*)' → logprob: -11.880943298339844

Token 73: '500' (ID: 3234)
  Prédit: '500'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '500' → logprob: -0.024080822244286537
    2. '5' → logprob: -4.649080753326416
    3. '50' → logprob: -5.024080753326416
    4. '0' → logprob: -5.024080753326416
    5. '00' → logprob: -7.774080753326416
    6. '100' → logprob: -8.649081230163574
    7. 'n' → logprob: -9.149081230163574
    8. '%' → logprob: -9.399081230163574
    9. ' ' → logprob: -9.399081230163574
    10. '+' → logprob: -10.274081230163574

Token 74: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.03807362541556358
    2. ',' → logprob: -3.2880735397338867
    3. ' ,' → logprob: -11.288073539733887
    4. ')' → logprob: -11.413073539733887
    5. 'n' → logprob: -12.038073539733887
    6. ',end' → logprob: -13.538073539733887
    7. ',)' → logprob: -14.538073539733887
    8. ' n' → logprob: -14.913073539733887
    9. ')n' → logprob: -15.413073539733887
    10. ',num' → logprob: -16.788074493408203

Token 75: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.011160066351294518
    2. '0' → logprob: -4.636159896850586
    3. '00' → logprob: -6.761159896850586
    4. '50' → logprob: -8.761159896850586
    5. '000' → logprob: -9.886159896850586
    6. '10' → logprob: -11.261159896850586
    7. '500' → logprob: -12.136159896850586
    8. ' ' → logprob: -12.386159896850586
    9. 'n' → logprob: -13.261159896850586
    10. '1' → logprob: -13.511159896850586

Token 76: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27622708678245544
    2. ',n' → logprob: -1.5262271165847778
    3. ',' → logprob: -3.7762269973754883
    4. ')n' → logprob: -7.401226997375488
    5. ',)' → logprob: -8.401226997375488
    6. 'n' → logprob: -9.151226997375488
    7. '100' → logprob: -10.776226997375488
    8. ' n' → logprob: -10.901226997375488
    9. ')
' → logprob: -11.651226997375488
    10. '(n' → logprob: -11.651226997375488

Token 77: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.319370302458992e-06
    2. ')
' → logprob: -12.500005722045898
    3. ' )' → logprob: -14.750005722045898
    4. '')' → logprob: -15.375005722045898
    5. '```' → logprob: -15.500005722045898
    6. '+' → logprob: -15.750005722045898
    7. '`)' → logprob: -15.875005722045898
    8. ',' → logprob: -16.1250057220459
    9. ')`' → logprob: -16.7500057220459
    10. ')n' → logprob: -16.7500057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 75
Tokens correctement prédits (1ère position, stricte): 45
Tokens correctement prédits (1ère position, avec adaptation): 48
Tokens correctement prédits (top 10): 62
Précision stricte (1ère position): 60.00%
Précision adaptée (1ère position): 64.00%
Précision (top 10): 82.67%
================================================================================
