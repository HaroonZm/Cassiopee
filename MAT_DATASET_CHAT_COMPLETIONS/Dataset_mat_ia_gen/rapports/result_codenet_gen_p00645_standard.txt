================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:58:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_matrix(n):
    return [tuple(map(int, input().split())) for _ in range(n)]

def toggle(state, r1, c1, r2, c2, n):
    new_state = list(state)
    for r in range(r1, r2+1):
        for c in range(c1, c2+1):
            pos = r*n + c
            new_state[pos] ^= 1
    return tuple(new_state)

def all_zero(state):
    return all(x == 0 for x in state)

def solve(n, matrix):
    start = tuple(sum(matrix, ()))
    from collections import deque
    queue = deque()
    visited = set()
    queue.append((start, ""))
    visited.add(start)
    while queue:
        state, spells = queue.popleft()
        if all_zero(state):
            return spells
        for r1 in range(n):
            for r2 in range(r1, n):
                for c1 in range(n):
                    for c2 in range(c1, n):
                        new_state = toggle(state, r1, c1, r2, c2, n)
                        if new_state not in visited:
                            visited.add(new_state)
                            queue.append((new_state, spells+"myon"))
    return ""

while True:
    n = int(input())
    if n == 0:
        break
    matrix = read_matrix(n)
    print(solve(n, matrix))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_matrix' (ID: 23431)
  → Token d'amorce (pas de prédiction)

Token 3: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.128267303109169
    2. '_' → logprob: -2.128267288208008
    3. '```' → logprob: -7.128267288208008
    4. ':' → logprob: -9.253267288208008
    5. '(_:' → logprob: -9.378267288208008
    6. '_:' → logprob: -9.628267288208008
    7. '_(' → logprob: -9.628267288208008
    8. '(:' → logprob: -10.128267288208008
    9. '(_' → logprob: -10.503267288208008
    10. '():' → logprob: -10.753267288208008

Token 4: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010928024537861347
    2. ')' → logprob: -4.885928153991699
    3. ',' → logprob: -5.885928153991699
    4. ':' → logprob: -8.0109281539917
    5. 's' → logprob: -8.7609281539917
    6. '):
' → logprob: -11.1359281539917
    7. '_' → logprob: -12.0109281539917
    8. '=' → logprob: -12.5109281539917
    9. ' ):' → logprob: -12.5109281539917
    10. '[' → logprob: -12.6359281539917

Token 5: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0037271606270223856
    2. '   ' → logprob: -6.128726959228516
    3. '```' → logprob: -7.253726959228516
    4. ':
' → logprob: -7.628726959228516
    5. '():' → logprob: -9.253726959228516
    6. '\n' → logprob: -9.378726959228516
    7. '    
' → logprob: -10.628726959228516
    8. '\' → logprob: -10.628726959228516
    9. '':' → logprob: -10.753726959228516
    10. ':\' → logprob: -10.878726959228516

Token 6: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1076262891292572
    2. 'matrix' → logprob: -3.35762619972229
    3. '```' → logprob: -3.48262619972229
    4. ' matrix' → logprob: -4.107626438140869
    5. '`' → logprob: -5.607626438140869
    6. ' ' → logprob: -5.857626438140869
    7. 'return' (adapté à ' return') → logprob: -6.232626438140869
    8. 'm' → logprob: -6.482626438140869
    9. '\' → logprob: -6.607626438140869
    10. '	matrix' → logprob: -6.857626438140869

Token 7: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.6121761202812195
    2. '[' → logprob: -1.1121761798858643
    3. ' []' → logprob: -2.1121761798858643
    4. '[]' → logprob: -5.862175941467285
    5. ' [[]' → logprob: -6.362175941467285
    6. ' ' → logprob: -6.737175941467285
    7. ' [
' → logprob: -6.987175941467285
    8. ' [[' → logprob: -6.987175941467285
    9. '[
' → logprob: -9.237175941467285
    10. '[[' → logprob: -9.362175941467285

Token 8: 'tuple' (ID: 52834)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8900156617164612
    2. 'list' → logprob: -0.8900156617164612
    3. '[list' → logprob: -2.1400156021118164
    4. ' list' → logprob: -3.3900156021118164
    5. ' [' → logprob: -4.140015602111816
    6. '[int' → logprob: -5.515015602111816
    7. '[]' → logprob: -5.640015602111816
    8. '[input' → logprob: -5.765015602111816
    9. '[i' → logprob: -8.765015602111816
    10. '[n' → logprob: -9.015015602111816

Token 9: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.20798014104366302
    2. '(int' → logprob: -1.7079801559448242
    3. '(' → logprob: -5.582980155944824
    4. '(input' → logprob: -5.957980155944824
    5. 'map' → logprob: -9.207980155944824
    6. '(i' → logprob: -10.582980155944824
    7. 'int' → logprob: -10.957980155944824
    8. 'input' → logprob: -11.457980155944824
    9. ' map' → logprob: -11.582980155944824
    10. '(
' → logprob: -12.082980155944824

Token 10: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0032505544368177652
    2. 'int' → logprob: -5.753250598907471
    3. ' int' → logprob: -10.378250122070312
    4. '(' → logprob: -10.628250122070312
    5. '<int' → logprob: -12.128250122070312
    6. '(str' → logprob: -12.503250122070312
    7. '```' → logprob: -13.378250122070312
    8. ',int' → logprob: -13.503250122070312
    9. '=int' → logprob: -13.753250122070312
    10. '   ' → logprob: -14.003250122070312

Token 11: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -1.2184991836547852
    2. ')' → logprob: -1.3434991836547852
    3. '(' → logprob: -1.4684991836547852
    4. '<|end|>' → logprob: -2.093499183654785
    5. '(line' → logprob: -3.968499183654785
    6. 'input' → logprob: -4.593499183654785
    7. '))' → logprob: -4.718499183654785
    8. '<|end|>' → logprob: -4.968499183654785
    9. ',' → logprob: -5.218499183654785
    10. '(token' → logprob: -5.343499183654785

Token 12: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.012523548677563667
    2. ' input' → logprob: -4.387523651123047
    3. '(input' → logprob: -12.262523651123047
    4. ')' → logprob: -12.512523651123047
    5. '<input' → logprob: -13.262523651123047
    6. '	input' → logprob: -14.137523651123047
    7. ',input' → logprob: -14.262523651123047
    8. '))' → logprob: -14.637523651123047
    9. '=input' → logprob: -14.637523651123047
    10. '[input' → logprob: -15.012523651123047

Token 13: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.9961305856704712
    2. '()))' → logprob: -0.9961305856704712
    3. '()' → logprob: -1.4961305856704712
    4. '())' → logprob: -3.3711304664611816
    5. '()));' → logprob: -6.871130466461182
    6. '());' → logprob: -7.621130466461182
    7. '()>' → logprob: -8.12113094329834
    8. '())))' → logprob: -8.37113094329834
    9. '(()' → logprob: -8.62113094329834
    10. '(' → logprob: -8.74613094329834

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0032775294966995716
    2. 'strip' → logprob: -5.75327730178833
    3. 'rstrip' → logprob: -9.253277778625488
    4. ' split' → logprob: -12.628277778625488
    5. 'read' → logprob: -14.253277778625488
    6. '(split' → logprob: -17.128276824951172
    7. 'spl' → logprob: -17.628276824951172
    8. ')' → logprob: -17.753276824951172
    9. ' strip' → logprob: -17.878276824951172
    10. ' ' → logprob: -18.003276824951172

Token 15: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.00519426679238677
    2. '))' → logprob: -5.755194187164307
    3. '())' → logprob: -6.630194187164307
    4. '()' → logprob: -8.130194664001465
    5. '(' → logprob: -9.005194664001465
    6. '('' → logprob: -9.255194664001465
    7. '())))' → logprob: -9.255194664001465
    8. '()))
' → logprob: -9.755194664001465
    9. '()));' → logprob: -12.380194664001465
    10. '   ' → logprob: -12.505194664001465

Token 16: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13225851953029633
    2. '(' → logprob: -3.132258415222168
    3. '(n' → logprob: -3.382258415222168
    4. ')]' → logprob: -3.882258415222168
    5. '   ' → logprob: -5.007258415222168
    6. '())' → logprob: -5.757258415222168
    7. '(i' → logprob: -5.882258415222168
    8. '(len' → logprob: -6.132258415222168
    9. ']' → logprob: -6.257258415222168
    10. 'for' → logprob: -6.632258415222168

Token 17: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3288731276988983
    2. ' _' → logprob: -1.7038731575012207
    3. '_' → logprob: -2.3288731575012207
    4. 'range' → logprob: -7.953873157501221
    5. ' ' → logprob: -8.828872680664062
    6. '_range' → logprob: -8.953872680664062
    7. ' in' → logprob: -9.078872680664062
    8. ' i' → logprob: -9.453872680664062
    9. '(range' → logprob: -10.578872680664062
    10. ' xrange' → logprob: -10.703872680664062

Token 18: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00695003429427743
    2. 'in' → logprob: -5.0069499015808105
    3. ' ' → logprob: -8.631950378417969
    4. '_' → logprob: -10.756950378417969
    5. '<|end|>' → logprob: -11.381950378417969
    6. '	in' → logprob: -11.756950378417969
    7. '  ' → logprob: -12.881950378417969
    8. 'range' → logprob: -13.131950378417969
    9. '<|end|>' → logprob: -13.381950378417969
    10. ')' → logprob: -13.506950378417969

Token 19: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20142094790935516
    2. ' range' → logprob: -1.7014209032058716
    3. '	range' → logprob: -12.326420783996582
    4. '_range' → logprob: -13.326420783996582
    5. '(range' → logprob: -14.326420783996582
    6. ' ' → logprob: -15.451420783996582
    7. '.range' → logprob: -15.576420783996582
    8. ' xrange' → logprob: -15.701420783996582
    9. 'rang' → logprob: -15.951420783996582
    10. '_' → logprob: -15.951420783996582

Token 20: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.10020958632230759
    2. '(' → logprob: -2.3502094745635986
    3. '(
' → logprob: -14.10020923614502
    4. ' (' → logprob: -14.22520923614502
    5. 'n' → logprob: -14.72520923614502
    6. ')' → logprob: -15.72520923614502
    7. '(

' → logprob: -15.72520923614502
    8. ' n' → logprob: -15.97520923614502
    9. ')n' → logprob: -16.100210189819336
    10. '(N' → logprob: -16.600210189819336

Token 21: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00012451570364646614
    2. ')' → logprob: -9.25012493133545
    3. ')])' → logprob: -11.37512493133545
    4. '))' → logprob: -11.75012493133545
    5. '])]' → logprob: -12.62512493133545
    6. ']' → logprob: -12.62512493133545
    7. '')]' → logprob: -14.25012493133545
    8. '   ' → logprob: -14.75012493133545
    9. '])' → logprob: -15.00012493133545
    10. ' )' → logprob: -15.00012493133545

Token 22: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11070482432842255
    2. '```' → logprob: -3.3607048988342285
    3. 'def' → logprob: -3.9857048988342285
    4. 'n' → logprob: -4.1107048988342285
    5. '#' → logprob: -4.7357048988342285
    6. '\n' → logprob: -5.2357048988342285
    7. '

' → logprob: -5.3607048988342285
    8. '[' → logprob: -5.8607048988342285
    9. 'a' → logprob: -6.1107048988342285
    10. 'newline' → logprob: -6.2357048988342285

Token 23: ' toggle' (ID: 24966)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3110685348510742
    2. ' calculate' → logprob: -2.311068534851074
    3. ' solve' → logprob: -2.561068534851074
    4. ' multiply' → logprob: -3.686068534851074
    5. ' write' → logprob: -4.186068534851074
    6. ' compute' → logprob: -4.311068534851074
    7. ' process' → logprob: -4.561068534851074
    8. ' sum' → logprob: -5.061068534851074
    9. ' matrix' → logprob: -5.061068534851074
    10. ' read' → logprob: -5.561068534851074

Token 24: '(state' (ID: 16114)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.37055733799934387
    2. '_' → logprob: -1.2455573081970215
    3. '(_' → logprob: -5.2455573081970215
    4. '_(' → logprob: -5.9955573081970215
    5. '_cell' → logprob: -6.1205573081970215
    6. '_user' → logprob: -6.9955573081970215
    7. ' (' → logprob: -7.3705573081970215
    8. '_space' → logprob: -7.3705573081970215
    9. '```' → logprob: -7.3705573081970215
    10. '_element' → logprob: -7.4955573081970215

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8728693127632141
    2. '[' → logprob: -0.8728693127632141
    3. '):' → logprob: -2.2478692531585693
    4. '_' → logprob: -3.8728692531585693
    5. ')' → logprob: -4.497869491577148
    6. '[state' → logprob: -4.747869491577148
    7. '_,' → logprob: -4.997869491577148
    8. ' ' → logprob: -5.622869491577148
    9. '   ' → logprob: -6.747869491577148
    10. '_state' → logprob: -7.122869491577148

Token 26: ' r' (ID: 428)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.9638935923576355
    2. 'row' → logprob: -1.7138936519622803
    3. ' row' → logprob: -1.8388936519622803
    4. 'i' → logprob: -2.0888936519622803
    5. ' x' → logprob: -3.7138936519622803
    6. ' r' → logprob: -3.8388936519622803
    7. ' index' → logprob: -3.9638936519622803
    8. ' pos' → logprob: -4.088893413543701
    9. 'r' → logprob: -4.213893413543701
    10. 'x' → logprob: -4.213893413543701

Token 27: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008090290939435363
    2. ')' → logprob: -8.125808715820312
    3. ' ,' → logprob: -8.125808715820312
    4. 'ex' → logprob: -10.000808715820312
    5. ',r' → logprob: -10.500808715820312
    6. ',)' → logprob: -10.500808715820312
    7. '_,' → logprob: -10.625808715820312
    8. ',c' → logprob: -11.500808715820312
    9. 'e' → logprob: -11.750808715820312
    10. 'ow' → logprob: -11.875808715820312

Token 28: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009504608809947968
    2. ',r' → logprob: -4.759504795074463
    3. ' ,' → logprob: -7.384504795074463
    4. ')' → logprob: -9.134504318237305
    5. ' ' → logprob: -9.759504318237305
    6. ',)' → logprob: -10.634504318237305
    7. ',:)' → logprob: -11.634504318237305
    8. 'r' → logprob: -11.759504318237305
    9. ',n' → logprob: -12.009504318237305
    10. '_,' → logprob: -12.259504318237305

Token 29: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.20775209367275238
    2. ' c' → logprob: -1.7077521085739136
    3. 'r' → logprob: -5.207752227783203
    4. ' r' → logprob: -7.082752227783203
    5. ' ' → logprob: -13.332752227783203
    6. '	c' → logprob: -13.832752227783203
    7. '   ' → logprob: -14.457752227783203
    8. ',' → logprob: -14.832752227783203
    9. ',c' → logprob: -14.832752227783203
    10. '```' → logprob: -15.207752227783203

Token 30: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001745775662129745
    2. ',' → logprob: -9.000174522399902
    3. 'r' → logprob: -11.375174522399902
    4. '_' → logprob: -11.500174522399902
    5. ')' → logprob: -12.000174522399902
    6. '```' → logprob: -12.000174522399902
    7. ' ' → logprob: -12.125174522399902
    8. '_start' → logprob: -13.250174522399902
    9. '_,' → logprob: -13.625174522399902
    10. 'a' → logprob: -13.625174522399902

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001426346570951864
    2. ' ,' → logprob: -9.000143051147461
    3. ',r' → logprob: -11.250143051147461
    4. ')' → logprob: -13.375143051147461
    5. '),' → logprob: -13.875143051147461
    6. '   ' → logprob: -14.125143051147461
    7. '):' → logprob: -14.125143051147461
    8. ' ' → logprob: -14.625143051147461
    9. ',c' → logprob: -15.125143051147461
    10. 'r' → logprob: -15.125143051147461

Token 32: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.47411173582077026
    2. 'r' → logprob: -0.9741117358207703
    3. ' ' → logprob: -11.099111557006836
    4. ')' → logprob: -12.099111557006836
    5. ',' → logprob: -12.599111557006836
    6. ',r' → logprob: -13.349111557006836
    7. '    ' → logprob: -13.474111557006836
    8. ' ' → logprob: -13.724111557006836
    9. ' ,' → logprob: -14.099111557006836
    10. 'c' → logprob: -14.099111557006836

Token 33: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033784625702537596
    2. '2' → logprob: -8.250337600708008
    3. ',' → logprob: -9.500337600708008
    4. ' ' → logprob: -14.875337600708008
    5. ' ,' → logprob: -15.000337600708008
    6. ')' → logprob: -15.250337600708008
    7. '```' → logprob: -15.250337600708008
    8. '0' → logprob: -16.187837600708008
    9. 'r' → logprob: -16.250337600708008
    10. ',r' → logprob: -16.562837600708008

Token 34: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022642381372861564
    2. ' ,' → logprob: -8.625226020812988
    3. ')' → logprob: -10.750226020812988
    4. ' ' → logprob: -11.000226020812988
    5. ',c' → logprob: -12.750226020812988
    6. '‌,' → logprob: -13.750226020812988
    7. ',r' → logprob: -14.125226020812988
    8. '),' → logprob: -14.250226020812988
    9. '`,' → logprob: -14.375226020812988
    10. '=' → logprob: -14.625226020812988

Token 35: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.10061142593622208
    2. 'c' → logprob: -2.350611448287964
    3. ' ' → logprob: -8.100611686706543
    4. '    ' → logprob: -10.600611686706543
    5. ')' → logprob: -10.725611686706543
    6. '   ' → logprob: -11.850611686706543
    7. '  ' → logprob: -11.975611686706543
    8. ',' → logprob: -11.975611686706543
    9. 's' → logprob: -12.288111686706543
    10. ' )' → logprob: -12.538111686706543

Token 36: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.842555426876061e-06
    2. ')' → logprob: -12.500004768371582
    3. '1' → logprob: -14.750004768371582
    4. ',' → logprob: -15.250004768371582
    5. '):' → logprob: -15.625004768371582
    6. '```' → logprob: -16.0000057220459
    7. ' ' → logprob: -16.3750057220459
    8. '₂' → logprob: -16.5000057220459
    9. '²' → logprob: -18.0000057220459
    10. '   ' → logprob: -18.6250057220459

Token 37: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003621212439611554
    2. ')' → logprob: -5.6286211013793945
    3. ' ):' → logprob: -12.003621101379395
    4. ':' → logprob: -12.378621101379395
    5. '):
' → logprob: -12.753621101379395
    6. ']:' → logprob: -12.878621101379395
    7. ''):' → logprob: -13.628621101379395
    8. ')]' → logprob: -13.753621101379395
    9. '   ' → logprob: -13.878621101379395
    10. ',' → logprob: -15.003621101379395

Token 38: ' n' (ID: 297)
  Prédit: ' state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' state' → logprob: -0.36765825748443604
    2. 'state' → logprob: -1.742658257484436
    3. ' matrix' → logprob: -2.6176581382751465
    4. ' grid' → logprob: -3.8676581382751465
    5. ' )' → logprob: -4.7426581382751465
    6. ' states' → logprob: -4.9926581382751465
    7. ' n' → logprob: -5.7426581382751465
    8. ' ):' → logprob: -5.7426581382751465
    9. '):' → logprob: -5.8676581382751465
    10. ')' → logprob: -6.1176581382751465

Token 39: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3869539201259613
    2. '):' → logprob: -1.1369539499282837
    3. ',' → logprob: -10.136954307556152
    4. ')]' → logprob: -11.261954307556152
    5. ' ):' → logprob: -11.761954307556152
    6. ' )' → logprob: -11.761954307556152
    7. '),' → logprob: -13.136954307556152
    8. ' ' → logprob: -13.511954307556152
    9. '=' → logprob: -13.636954307556152
    10. ':' → logprob: -13.886954307556152

Token 40: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6206750273704529
    2. '\n' → logprob: -1.8706750869750977
    3. ' 
' → logprob: -2.2456750869750977
    4. '
' → logprob: -2.9956750869750977
    5. '   ' → logprob: -3.1206750869750977
    6. ':
' → logprob: -3.2456750869750977
    7. ' ' → logprob: -3.9956750869750977
    8. '\' → logprob: -4.120675086975098
    9. '  
' → logprob: -4.745675086975098
    10. '<|end|>' → logprob: -5.245675086975098

Token 41: ' new' (ID: 620)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.383540153503418
    2. '\n' → logprob: -1.383540153503418
    3. '   ' → logprob: -1.508540153503418
    4. '\' → logprob: -2.258540153503418
    5. '    
' → logprob: -3.133540153503418
    6. ':' → logprob: -4.133540153503418
    7. '  
' → logprob: -4.258540153503418
    8. '[' → logprob: -4.383540153503418
    9. ' ' → logprob: -4.383540153503418
    10. '     
' → logprob: -4.758540153503418

Token 42: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.0636792778968811
    2. '_' → logprob: -2.8136792182922363
    3. 'state' → logprob: -7.063679218292236
    4. '_states' → logprob: -7.688679218292236
    5. '_s' → logprob: -8.313679695129395
    6. ' _' → logprob: -9.313679695129395
    7. ' ' → logprob: -11.438679695129395
    8. ' =' → logprob: -11.438679695129395
    9. '_stat' → logprob: -11.688679695129395
    10. '   ' → logprob: -12.063679695129395

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0028441029135137796
    2. '=' → logprob: -5.877844333648682
    3. ',' → logprob: -11.252843856811523
    4. '[' → logprob: -11.752843856811523
    5. ' ' → logprob: -12.127843856811523
    6. '  ' → logprob: -12.502843856811523
    7. 's' → logprob: -12.627843856811523
    8. ' =
' → logprob: -13.752843856811523
    9. '   ' → logprob: -14.127843856811523
    10. '[:]' → logprob: -14.127843856811523

Token 44: ' list' (ID: 1562)
  Prédit: '[state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[state' → logprob: -0.8241219520568848
    2. 'state' → logprob: -1.4491219520568848
    3. ' [' → logprob: -1.8241219520568848
    4. ' state' → logprob: -1.9491219520568848
    5. '[' → logprob: -3.8241219520568848
    6. '[]' → logprob: -8.324121475219727
    7. ' list' → logprob: -9.199121475219727
    8. 'list' → logprob: -9.199121475219727
    9. ' [[' → logprob: -9.449121475219727
    10. '(state' → logprob: -9.699121475219727

Token 45: '(state' (ID: 16114)
  Prédit: '(state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(state' → logprob: -0.5760347843170166
    2. '(' → logprob: -0.8260347843170166
    3. '(states' → logprob: -10.326034545898438
    4. '(s' → logprob: -10.951034545898438
    5. '(range' → logprob: -11.701034545898438
    6. '(st' → logprob: -11.826034545898438
    7. '(stat' → logprob: -11.951034545898438
    8. '(
' → logprob: -12.326034545898438
    9. '()' → logprob: -12.326034545898438
    10. '(State' → logprob: -12.451034545898438

Token 46: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006627743598073721
    2. '(state' → logprob: -5.256627559661865
    3. '(' → logprob: -6.631627559661865
    4. '   ' → logprob: -10.131628036499023
    5. '[state' → logprob: -11.756628036499023
    6. '())' → logprob: -12.506628036499023
    7. ' ' → logprob: -13.006628036499023
    8. ' )' → logprob: -13.256628036499023
    9. '(State' → logprob: -13.256628036499023
    10. '(n' → logprob: -13.381628036499023

Token 47: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6590215563774109
    2. '   ' → logprob: -1.4090216159820557
    3. '(' → logprob: -3.0340216159820557
    4. ' ' → logprob: -3.2840216159820557
    5. ')' → logprob: -3.2840216159820557
    6. '<|end|>' → logprob: -3.4090216159820557
    7. ':' → logprob: -3.7840216159820557
    8. '[
' → logprob: -4.784021377563477
    9. '\' → logprob: -5.034021377563477
    10. ',' → logprob: -5.159021377563477

Token 48: ' for' (ID: 395)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.223366141319275
    2. ')' → logprob: -1.348366141319275
    3. ':' → logprob: -2.0983662605285645
    4. '<|end|>' → logprob: -2.5983662605285645
    5. '\n' → logprob: -2.8483662605285645
    6. '   ' → logprob: -3.0983662605285645
    7. '\' → logprob: -3.3483662605285645
    8. '[' → logprob: -3.5983662605285645
    9. '  
' → logprob: -3.7233662605285645
    10. '
' → logprob: -4.5983662605285645

Token 49: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.6990076899528503
    2. ' i' → logprob: -0.8240076899528503
    3. ' _' → logprob: -3.324007749557495
    4. ' ' → logprob: -4.324007511138916
    5. 'r' → logprob: -4.574007511138916
    6. '_' → logprob: -6.199007511138916
    7. ' row' → logprob: -6.574007511138916
    8. 'i' → logprob: -6.949007511138916
    9. 'row' → logprob: -9.824007987976074
    10. '   ' → logprob: -10.324007987976074

Token 50: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011487908195704222
    2. ' ' → logprob: -7.251148700714111
    3. 'in' → logprob: -7.876148700714111
    4. '<|end|>' → logprob: -10.75114917755127
    5. ',' → logprob: -12.00114917755127
    6. ' range' → logprob: -12.12614917755127
    7. '1' → logprob: -12.25114917755127
    8. 'range' → logprob: -12.50114917755127
    9. '_' → logprob: -12.62614917755127
    10. ')' → logprob: -13.00114917755127

Token 51: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.001282376004382968
    2. 'range' → logprob: -6.751282215118408
    3. ' ' → logprob: -9.626282691955566
    4. '(range' → logprob: -11.126282691955566
    5. ' xrange' → logprob: -11.126282691955566
    6. '	range' → logprob: -11.126282691955566
    7. '<|end|>' → logprob: -13.876282691955566
    8. '  ' → logprob: -15.751282691955566
    9. '_range' → logprob: -15.876282691955566
    10. ' ran' → logprob: -15.876282691955566

Token 52: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.018388954922556877
    2. '(' → logprob: -4.018388748168945
    3. '(n' → logprob: -8.393388748168945
    4. ' r' → logprob: -12.018388748168945
    5. ' (' → logprob: -12.518388748168945
    6. '(
' → logprob: -13.518388748168945
    7. '(c' → logprob: -14.518388748168945
    8. 'r' → logprob: -14.518388748168945
    9. ' ' → logprob: -15.768388748168945
    10. '(

' → logprob: -16.018388748168945

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002549146767705679
    2. '2' → logprob: -6.002549171447754
    3. ')' → logprob: -11.127549171447754
    4. ' ' → logprob: -11.627549171447754
    5. ',' → logprob: -11.752549171447754
    6. '_' → logprob: -11.940049171447754
    7. '   ' → logprob: -12.502549171447754
    8. 'ange' → logprob: -12.752549171447754
    9. ' ,' → logprob: -12.940049171447754
    10. 'r' → logprob: -13.065049171447754

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011144972406327724
    2. ' ,' → logprob: -4.511145114898682
    3. ',r' → logprob: -9.261144638061523
    4. ',c' → logprob: -14.636144638061523
    5. ' ' → logprob: -14.886144638061523
    6. ')' → logprob: -15.011144638061523
    7. ',n' → logprob: -15.636144638061523
    8. ',
' → logprob: -15.761144638061523
    9. 'r' → logprob: -15.886144638061523
    10. '+' → logprob: -16.386144638061523

Token 55: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2048570215702057
    2. ' r' → logprob: -1.7048569917678833
    3. 'c' → logprob: -5.954856872558594
    4. ' c' → logprob: -7.079856872558594
    5. ' ' → logprob: -13.579856872558594
    6. '(r' → logprob: -15.454856872558594
    7. ' ' → logprob: -15.454856872558594
    8. '   ' → logprob: -15.579856872558594
    9. 'n' → logprob: -16.079856872558594
    10. '+' → logprob: -16.204856872558594

Token 56: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.703443770878948e-06
    2. '+' → logprob: -12.500007629394531
    3. ' ' → logprob: -14.250007629394531
    4. '```' → logprob: -14.375007629394531
    5. '₂' → logprob: -14.625007629394531
    6. '   ' → logprob: -14.937507629394531
    7. ' +' → logprob: -15.000007629394531
    8. ',' → logprob: -15.125007629394531
    9. '۲' → logprob: -15.375007629394531
    10. 'r' → logprob: -15.875007629394531

Token 57: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2519320547580719
    2. ' +' → logprob: -1.5019320249557495
    3. ')' → logprob: -13.876932144165039
    4. ' ' → logprob: -14.001932144165039
    5. '+)' → logprob: -14.501932144165039
    6. ')+' → logprob: -15.251932144165039
    7. ' +
' → logprob: -16.12693214416504
    8. '+
' → logprob: -16.75193214416504
    9. '1' → logprob: -16.87693214416504
    10. '   ' → logprob: -17.12693214416504

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4987974029500037e-05
    2. ' ' → logprob: -10.625024795532227
    3. ')' → logprob: -14.500024795532227
    4. '```' → logprob: -16.875024795532227
    5. '<|end|>' → logprob: -17.375024795532227
    6. '   ' → logprob: -17.625024795532227
    7. '
' → logprob: -18.625024795532227
    8. '):
' → logprob: -19.000024795532227
    9. ',' → logprob: -19.125024795532227
    10. '2' → logprob: -19.125024795532227

Token 59: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005651578772813082
    2. ',' → logprob: -5.505651473999023
    3. ')' → logprob: -7.255651473999023
    4. ':' → logprob: -7.880651473999023
    5. '):
' → logprob: -8.255651473999023
    6. ' ):' → logprob: -8.755651473999023
    7. '   ' → logprob: -9.880651473999023
    8. ' ' → logprob: -12.130651473999023
    9. '<|end|>' → logprob: -12.630651473999023
    10. '),' → logprob: -13.005651473999023

Token 60: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: ' for' (ID: 395)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3603643774986267
    2. ' for' → logprob: -1.6103644371032715
    3. '<|end|>' → logprob: -2.3603644371032715
    4. 'for' (adapté à ' for') → logprob: -5.7353644371032715
    5. '    ' → logprob: -6.3603644371032715
    6. ' 
' → logprob: -6.4853644371032715
    7. '       ' → logprob: -7.7353644371032715
    8. '   ' → logprob: -8.360363960266113
    9. ' c' → logprob: -8.485363960266113
    10. '<|end|>' → logprob: -8.985363960266113

Token 62: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.016049737110733986
    2. 'c' → logprob: -4.141049861907959
    3. ' ' → logprob: -11.2660493850708
    4. ' s' → logprob: -13.8910493850708
    5. '<|end|>' → logprob: -14.5160493850708
    6. 's' → logprob: -15.1410493850708
    7. ' ' → logprob: -15.2660493850708
    8. '	c' → logprob: -16.016050338745117
    9. ' t' → logprob: -16.391050338745117
    10. '    ' → logprob: -16.766050338745117

Token 63: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0024693517480045557
    2. 'in' → logprob: -6.377469539642334
    3. ' ' → logprob: -7.627469539642334
    4. ',' → logprob: -8.752469062805176
    5. '<|end|>' → logprob: -9.377469062805176
    6. ' ,' → logprob: -10.752469062805176
    7. ')' → logprob: -12.002469062805176
    8. '=' → logprob: -13.252469062805176
    9. '  ' → logprob: -13.502469062805176
    10. '<|end|>' → logprob: -13.752469062805176

Token 64: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1297282725572586
    2. ' range' → logprob: -2.129728317260742
    3. '(range' → logprob: -5.879728317260742
    4. '	range' → logprob: -14.504728317260742
    5. '.range' → logprob: -16.879728317260742
    6. '_range' → logprob: -17.254728317260742
    7. ')' → logprob: -18.004728317260742
    8. '(' → logprob: -18.129728317260742
    9. ' ' → logprob: -18.254728317260742
    10. '(c' → logprob: -18.629728317260742

Token 65: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00020914296328555793
    2. '(' → logprob: -8.500208854675293
    3. '(r' → logprob: -13.375208854675293
    4. 'c' → logprob: -13.500208854675293
    5. ' (' → logprob: -13.500208854675293
    6. ',' → logprob: -14.375208854675293
    7. ',c' → logprob: -15.000208854675293
    8. '   ' → logprob: -16.75020980834961
    9. '(C' → logprob: -16.75020980834961
    10. ' c' → logprob: -16.87520980834961

Token 66: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023684248328208923
    2. '1' → logprob: -4.148684024810791
    3. ',c' → logprob: -5.148684024810791
    4. ' ,' → logprob: -7.023684024810791
    5. 'c' → logprob: -7.648684024810791
    6. 'r' → logprob: -8.39868450164795
    7. '2' → logprob: -9.77368450164795
    8. 's' → logprob: -10.39868450164795
    9. ',r' → logprob: -10.89868450164795
    10. '),' → logprob: -10.89868450164795

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004247335251420736
    2. ' ,' → logprob: -6.004247188568115
    3. ',c' → logprob: -6.379247188568115
    4. ',n' → logprob: -10.254247665405273
    5. ',r' → logprob: -11.004247665405273
    6. '   ' → logprob: -12.004247665405273
    7. 'c' → logprob: -12.629247665405273
    8. '2' → logprob: -12.879247665405273
    9. '```' → logprob: -13.629247665405273
    10. '+' → logprob: -13.879247665405273

Token 68: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.01028518471866846
    2. ' c' → logprob: -4.635285377502441
    3. 'r' → logprob: -7.635285377502441
    4. '   ' → logprob: -10.135285377502441
    5. ' r' → logprob: -13.010285377502441
    6. ' ' → logprob: -13.760285377502441
    7. '    ' → logprob: -13.885285377502441
    8. '0' → logprob: -14.760285377502441
    9. '(c' → logprob: -14.760285377502441
    10. '	c' → logprob: -14.885285377502441

Token 69: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002914238488301635
    2. ',' → logprob: -5.8779144287109375
    3. '1' → logprob: -10.127914428710938
    4. '+' → logprob: -10.252914428710938
    5. 'r' → logprob: -11.127914428710938
    6. ' ,' → logprob: -12.002914428710938
    7. ',r' → logprob: -12.127914428710938
    8. '```' → logprob: -12.377914428710938
    9. ' ' → logprob: -14.127914428710938
    10. 'n' → logprob: -15.002914428710938

Token 70: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00028862981707789004
    2. '1' → logprob: -8.750288963317871
    3. ' +' → logprob: -9.250288963317871
    4. ',' → logprob: -10.625288963317871
    5. ')+' → logprob: -12.500288963317871
    6. '2' → logprob: -12.625288963317871
    7. '```' → logprob: -14.000288963317871
    8. '+,' → logprob: -14.500288963317871
    9. '()+' → logprob: -15.250288963317871
    10. '+
' → logprob: -15.250288963317871

Token 71: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.7994282795116305e-05
    2. '+' → logprob: -10.37504768371582
    3. '2' → logprob: -11.62504768371582
    4. ' ' → logprob: -12.12504768371582
    5. ',' → logprob: -14.37504768371582
    6. '   ' → logprob: -14.50004768371582
    7. '```' → logprob: -15.00004768371582
    8. ')' → logprob: -15.12504768371582
    9. 'n' → logprob: -15.93754768371582
    10. '):
' → logprob: -16.18754768371582

Token 72: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003094293177127838
    2. '):
' → logprob: -5.87809419631958
    3. ',' → logprob: -9.128094673156738
    4. ' ):' → logprob: -9.503094673156738
    5. ')' → logprob: -10.128094673156738
    6. ':' → logprob: -10.628094673156738
    7. '   ' → logprob: -10.753094673156738
    8. ']:' → logprob: -11.753094673156738
    9. '+' → logprob: -12.503094673156738
    10. '):

' → logprob: -12.878094673156738

Token 73: '           ' (ID: 352)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.07930877059698105
    2. '       ' → logprob: -3.3293087482452393
    3. ' ' → logprob: -4.579308986663818
    4. '[' → logprob: -4.829308986663818
    5. '   ' → logprob: -4.829308986663818
    6. 'new' → logprob: -5.204308986663818
    7. '        
' → logprob: -6.454308986663818
    8. ')' → logprob: -6.579308986663818
    9. '<|end|>' → logprob: -6.829308986663818
    10. '           ' → logprob: -6.954308986663818

Token 74: ' pos' (ID: 1253)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.12208621203899384
    2. ' idx' → logprob: -2.6220862865448
    3. 'new' → logprob: -3.9970862865448
    4. 'index' → logprob: -5.122086048126221
    5. 'idx' → logprob: -5.122086048126221
    6. ')' → logprob: -5.497086048126221
    7. ' index' → logprob: -6.122086048126221
    8. ' ' → logprob: -6.622086048126221
    9. '   ' → logprob: -6.747086048126221
    10. '    ' → logprob: -6.997086048126221

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014729139395058155
    2. '=' → logprob: -4.264729022979736
    3. ')' → logprob: -7.514729022979736
    4. ' ' → logprob: -11.639729499816895
    5. ')=' → logprob: -13.139729499816895
    6. ' )' → logprob: -13.514729499816895
    7. ']' → logprob: -13.639729499816895
    8. 's' → logprob: -13.889729499816895
    9. ' =)' → logprob: -13.889729499816895
    10. '  ' → logprob: -14.014729499816895

Token 76: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.038063064217567444
    2. 'r' → logprob: -3.2880630493164062
    3. ' n' → logprob: -11.163063049316406
    4. 'n' → logprob: -13.038063049316406
    5. ' ' → logprob: -13.538063049316406
    6. ' (' → logprob: -14.288063049316406
    7. '`' → logprob: -14.538063049316406
    8. ' ' → logprob: -14.788063049316406
    9. '<|end|>' → logprob: -14.913063049316406
    10. '(r' → logprob: -15.038063049316406

Token 77: '*n' (ID: 58470)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.09563662856817245
    2. '*' → logprob: -2.9706366062164307
    3. '*n' → logprob: -3.2206366062164307
    4. ' ' → logprob: -12.970636367797852
    5. ' ' → logprob: -14.095636367797852
    6. '*N' → logprob: -14.845636367797852
    7. '*c' → logprob: -14.970636367797852
    8. '*num' → logprob: -15.095636367797852
    9. '**' → logprob: -15.345636367797852
    10. ' **' → logprob: -16.09563636779785

Token 78: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07892691344022751
    2. '+' → logprob: -2.5789268016815186
    3. '+c' → logprob: -10.328927040100098
    4. ' ' → logprob: -12.953927040100098
    5. ' plus' → logprob: -13.703927040100098
    6. '+r' → logprob: -15.703927040100098
    7. '<|end|>' → logprob: -15.703927040100098
    8. ' ' → logprob: -16.32892608642578
    9. '+n' → logprob: -16.32892608642578
    10. '+k' → logprob: -16.57892608642578

Token 79: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.7610454708337784e-05
    2. ' c' → logprob: -10.500027656555176
    3. '	c' → logprob: -21.00002670288086
    4. ')c' → logprob: -21.50002670288086
    5. '   ' → logprob: -21.87502670288086
    6. '<|end|>' → logprob: -23.37502670288086
    7. ' ' → logprob: -24.00002670288086
    8. '<c' → logprob: -24.00002670288086
    9. '```' → logprob: -24.12502670288086
    10. '  ' → logprob: -24.62502670288086

Token 80: '
' (ID: 198)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.6095719337463379
    2. ')' → logprob: -1.484571933746338
    3. 'new' → logprob: -2.484571933746338
    4. ']' → logprob: -2.984571933746338
    5. '   ' → logprob: -3.359571933746338
    6. ' ' → logprob: -3.859571933746338
    7. '<|end|>' → logprob: -3.984571933746338
    8. '^' → logprob: -5.359571933746338
    9. ')
' → logprob: -5.609571933746338
    10. '1' → logprob: -5.859571933746338

Token 81: '           ' (ID: 352)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.46624404191970825
    2. '   ' → logprob: -1.5912439823150635
    3. ')' → logprob: -2.5912439823150635
    4. 'new' → logprob: -2.9662439823150635
    5. ' ' → logprob: -3.9662439823150635
    6. ']' → logprob: -4.591244220733643
    7. '<|end|>' → logprob: -6.091244220733643
    8. '       ' → logprob: -6.341244220733643
    9. '    ' → logprob: -6.591244220733643
    10. '1' → logprob: -6.591244220733643

Token 82: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.35328954458236694
    2. ' new' → logprob: -1.2282896041870117
    3. '   ' → logprob: -5.478289604187012
    4. '           ' → logprob: -7.853289604187012
    5. '       ' → logprob: -9.478289604187012
    6. 'state' → logprob: -10.478289604187012
    7. 'if' → logprob: -10.478289604187012
    8. '	new' → logprob: -10.478289604187012
    9. ' if' → logprob: -10.978289604187012
    10. ' ' → logprob: -11.228289604187012

Token 83: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -1.306760805164231e-05
    2. '_' → logprob: -11.50001335144043
    3. 'state' → logprob: -13.37501335144043
    4. '_states' → logprob: -14.87501335144043
    5. ' _' → logprob: -15.62501335144043
    6. '_State' → logprob: -15.87501335144043
    7. '_s' → logprob: -16.00001335144043
    8. '_code' → logprob: -16.37501335144043
    9. '_STATE' → logprob: -16.37501335144043
    10. '_position' → logprob: -17.12501335144043

Token 84: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -1.3425219549390022e-05
    2. '[' → logprob: -12.25001335144043
    3. ' ^=' → logprob: -12.37501335144043
    4. '^' → logprob: -14.12501335144043
    5. 'pos' → logprob: -14.50001335144043
    6. '^[' → logprob: -14.87501335144043
    7. '[state' → logprob: -14.87501335144043
    8. '[t' → logprob: -15.00001335144043
    9. '][' → logprob: -15.50001335144043
    10. '[position' → logprob: -15.75001335144043

Token 85: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49539265036582947
    2. ']' → logprob: -1.2453926801681519
    3. ' ^=' → logprob: -2.9953925609588623
    4. '=' → logprob: -3.2453925609588623
    5. ')]' → logprob: -5.370392799377441
    6. '^' → logprob: -5.745392799377441
    7. ' =' → logprob: -5.870392799377441
    8. ')=' → logprob: -7.120392799377441
    9. ')^' → logprob: -7.370392799377441
    10. ']=' → logprob: -7.495392799377441

Token 86: ' ^=' (ID: 79665)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.013238819316029549
    2. ' ^=' → logprob: -4.638238906860352
    3. '^' → logprob: -5.763238906860352
    4. ' =' → logprob: -8.013238906860352
    5. '1' → logprob: -13.638238906860352
    6. '+=' → logprob: -14.388238906860352
    7. '=!' → logprob: -14.388238906860352
    8. 'not' → logprob: -14.638238906860352
    9. ')' → logprob: -15.138238906860352
    10. ' ' → logprob: -15.763238906860352

Token 87: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031784253660589457
    2. ' ' → logprob: -5.753178596496582
    3. '   ' → logprob: -14.378178596496582
    4. '           ' → logprob: -16.753177642822266
    5. '  ' → logprob: -17.753177642822266
    6. '0' → logprob: -18.503177642822266
    7. '```' → logprob: -18.503177642822266
    8. '       ' → logprob: -19.003177642822266
    9. ' ' → logprob: -19.003177642822266
    10. '`' → logprob: -19.565677642822266

Token 88: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5094070477061905e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -15.375015258789062
    4. '           ' → logprob: -17.500015258789062
    5. '  ' → logprob: -18.125015258789062
    6. '255' → logprob: -18.750015258789062
    7. '       ' → logprob: -19.250015258789062
    8. '```' → logprob: -20.000015258789062
    9. '0' → logprob: -20.125015258789062
    10. '3' → logprob: -20.250015258789062

Token 89: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2747468650341034
    2. '
' → logprob: -1.7747468948364258
    3. '<|end|>' → logprob: -4.149746894836426
    4. '    
' → logprob: -4.274746894836426
    5. 'return' → logprob: -4.774746894836426
    6. ' return' → logprob: -4.899746894836426
    7. '\n' → logprob: -5.024746894836426
    8. '  
' → logprob: -5.649746894836426
    9. 'newline' → logprob: -5.899746894836426
    10. ' ' → logprob: -6.024746894836426

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008023456670343876
    2. '    
' → logprob: -5.633023262023926
    3. '
' → logprob: -6.008023262023926
    4. ' return' → logprob: -7.633023262023926
    5. ')' → logprob: -8.258023262023926
    6. 'return' → logprob: -8.258023262023926
    7. '<|end|>' → logprob: -8.508023262023926
    8. '\n' → logprob: -9.008023262023926
    9. '	return' → logprob: -9.133023262023926
    10. '  
' → logprob: -9.508023262023926

Token 91: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007270221132785082
    2. ' return' → logprob: -5.632270336151123
    3. ' ' → logprob: -7.132270336151123
    4. '    
' → logprob: -7.257270336151123
    5. 'return' (adapté à ' return') → logprob: -7.257270336151123
    6. '<|end|>' → logprob: -7.882270336151123
    7. ')' → logprob: -8.132269859313965
    8. '	return' → logprob: -8.132269859313965
    9. '
' → logprob: -9.257269859313965
    10. '```' → logprob: -9.507269859313965

Token 92: ' tuple' (ID: 31311)
  Prédit: ' tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.4748547673225403
    2. 'tuple' → logprob: -0.9748547673225403
    3. 'new' → logprob: -7.474854946136475
    4. ' new' → logprob: -8.849854469299316
    5. '(tuple' → logprob: -10.224854469299316
    6. '   ' → logprob: -11.099854469299316
    7. ' ' → logprob: -11.849854469299316
    8. 'bytes' → logprob: -12.724854469299316
    9. '  ' → logprob: -12.849854469299316
    10. ' bytes' → logprob: -14.099854469299316

Token 93: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -4.23917081207037e-05
    2. '(' → logprob: -10.125041961669922
    3. 'new' → logprob: -13.125041961669922
    4. ')new' → logprob: -15.625041961669922
    5. '[new' → logprob: -17.750041961669922
    6. ' new' → logprob: -17.750041961669922
    7. '(
' → logprob: -17.875041961669922
    8. '$new' → logprob: -18.375041961669922
    9. '((' → logprob: -18.750041961669922
    10. ' (' → logprob: -19.125041961669922

Token 94: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.00011439072113716975
    2. 'state' → logprob: -9.125114440917969
    3. '_' → logprob: -12.750114440917969
    4. 'new' → logprob: -14.375114440917969
    5. 'w' → logprob: -14.750114440917969
    6. '_new' → logprob: -14.750114440917969
    7. '_stat' → logprob: -15.375114440917969
    8. '_s' → logprob: -15.375114440917969
    9. '_states' → logprob: -15.500114440917969
    10. '_st' → logprob: -16.12511444091797

Token 95: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -14.875000953674316
    3. ' )' → logprob: -16.125
    4. ')

' → logprob: -19.125
    5. '<|end|>' → logprob: -20.0
    6. ')`' → logprob: -20.25
    7. '),' → logprob: -20.375
    8. '')' → logprob: -20.875
    9. ')return' → logprob: -21.125
    10. ')}' → logprob: -21.5

Token 96: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -9.996708104154095e-05
    2. 'n' → logprob: -10.375100135803223
    3. '```' → logprob: -10.750100135803223
    4. '#' → logprob: -11.000100135803223
    5. '\' → logprob: -11.750100135803223
    6. '
' → logprob: -12.000100135803223
    7. 'ndef' → logprob: -12.125100135803223
    8. '<|end|>' → logprob: -12.375100135803223
    9. ')' → logprob: -13.750100135803223
    10. '(' → logprob: -13.750100135803223

Token 97: ' all' (ID: 722)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.849784791469574
    2. ' solve' → logprob: -1.2247848510742188
    3. ' main' → logprob: -2.2247848510742188
    4. ' is' → logprob: -2.5997848510742188
    5. 'count' → logprob: -3.4747848510742188
    6. ' bfs' → logprob: -3.8497848510742188
    7. ' can' → logprob: -4.224784851074219
    8. 'solve' → logprob: -4.599784851074219
    9. ' find' → logprob: -5.349784851074219
    10. ' dfs' → logprob: -6.224784851074219

Token 98: '_zero' (ID: 53468)
  Prédit: '_on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_on' → logprob: -0.22283156216144562
    2. '_' → logprob: -1.9728316068649292
    3. '_states' → logprob: -3.2228314876556396
    4. '_com' → logprob: -5.222831726074219
    5. '_equal' → logprob: -5.347831726074219
    6. '_sub' → logprob: -5.347831726074219
    7. '_off' → logprob: -6.472831726074219
    8. '_pressed' → logprob: -7.347831726074219
    9. '_ON' → logprob: -7.472831726074219
    10. '_possible' → logprob: -7.972831726074219

Token 99: '(state' (ID: 16114)
  Prédit: '(state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(state' → logprob: -0.8106281161308289
    2. 's' → logprob: -1.9356281757354736
    3. '(s' → logprob: -2.1856281757354736
    4. '?' → logprob: -2.1856281757354736
    5. '(' → logprob: -2.6856281757354736
    6. 'es' → logprob: -3.3106281757354736
    7. '_states' → logprob: -3.6856281757354736
    8. '_state' → logprob: -4.1856279373168945
    9. '_s' → logprob: -4.4356279373168945
    10. '?(' → logprob: -4.5606279373168945

Token 100: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00015693542081862688
    2. ')' → logprob: -9.375157356262207
    3. '):
' → logprob: -10.125157356262207
    4. ' ):' → logprob: -10.375157356262207
    5. '):
' → logprob: -15.375157356262207
    6. '(state' → logprob: -16.37515640258789
    7. '():' → logprob: -16.37515640258789
    8. '):

' → logprob: -16.50015640258789
    9. '   ' → logprob: -17.25015640258789
    10. ')):' → logprob: -17.25015640258789

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08936929702758789
    2. ' return' → logprob: -2.589369297027588
    3. 'return' → logprob: -4.589369297027588
    4. ' all' → logprob: -9.33936882019043
    5. '    
' → logprob: -9.96436882019043
    6. ' for' → logprob: -10.08936882019043
    7. '	return' → logprob: -10.58936882019043
    8. 'all' → logprob: -10.71436882019043
    9. ' ' → logprob: -11.83936882019043
    10. '  ' → logprob: -11.96436882019043

Token 102: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2060200273990631
    2. ' return' → logprob: -2.2060201168060303
    3. '   ' → logprob: -2.7060201168060303
    4. 'all' → logprob: -5.081019878387451
    5. ' all' → logprob: -5.831019878387451
    6. 'for' → logprob: -9.83102035522461
    7. ' for' → logprob: -11.20602035522461
    8. '```' → logprob: -11.58102035522461
    9. ' ' → logprob: -11.83102035522461
    10. '
' → logprob: -12.95602035522461

Token 103: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.3869728147983551
    2. 'all' → logprob: -1.1369727849960327
    3. ' not' → logprob: -9.386972427368164
    4. 'not' → logprob: -11.136972427368164
    5. '(all' → logprob: -13.511972427368164
    6. 'sum' → logprob: -14.261972427368164
    7. ' sum' → logprob: -15.136972427368164
    8. '0' → logprob: -15.261972427368164
    9. ' ' → logprob: -15.261972427368164
    10. '	all' → logprob: -15.511972427368164

Token 104: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0030980966985225677
    2. '(v' → logprob: -6.253098011016846
    3. '(cell' → logprob: -8.128098487854004
    4. '(value' → logprob: -8.503098487854004
    5. '(not' → logprob: -8.503098487854004
    6. '(bit' → logprob: -8.503098487854004
    7. '(val' → logprob: -8.878098487854004
    8. '(s' → logprob: -9.628098487854004
    9. '(el' → logprob: -11.253098487854004
    10. '(' → logprob: -11.253098487854004

Token 105: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16025570034980774
    2. ' ==' → logprob: -1.9102556705474854
    3. '=' → logprob: -10.410255432128906
    4. ' ' → logprob: -15.035255432128906
    5. '===' → logprob: -15.285255432128906
    6. 'x' → logprob: -15.410255432128906
    7. '```' → logprob: -15.910255432128906
    8. ')' → logprob: -16.285255432128906
    9. ')==' → logprob: -16.410255432128906
    10. '()==' → logprob: -16.410255432128906

Token 106: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.054882392287254333
    2. ' ' → logprob: -2.929882287979126
    3. '   ' → logprob: -17.179882049560547
    4. '  ' → logprob: -17.429882049560547
    5. ' ' → logprob: -18.304882049560547
    6. '۰' → logprob: -18.554882049560547
    7. ')' → logprob: -18.804882049560547
    8. '```' → logprob: -19.554882049560547
    9. '    ' → logprob: -19.679882049560547
    10. '=' → logprob: -20.304882049560547

Token 107: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -18.000024795532227
    4. '  ' → logprob: -19.250024795532227
    5. ')' → logprob: -19.375024795532227
    6. '۰' → logprob: -19.875024795532227
    7. '```' → logprob: -20.125024795532227
    8. '00' → logprob: -20.625024795532227
    9. '    ' → logprob: -21.312524795532227
    10. '1' → logprob: -21.437524795532227

Token 108: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0013514261227101088
    2. 'for' → logprob: -6.626351356506348
    3. ')' → logprob: -10.751351356506348
    4. ' state' → logprob: -13.626351356506348
    5. '   ' → logprob: -13.876351356506348
    6. ' in' → logprob: -14.126351356506348
    7. ' ' → logprob: -14.501351356506348
    8. 'state' → logprob: -15.626351356506348
    9. '	for' → logprob: -16.001352310180664
    10. ' or' → logprob: -16.251352310180664

Token 109: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.1607031524181366
    2. 'x' → logprob: -1.910703182220459
    3. ' state' → logprob: -8.2857027053833
    4. 'state' → logprob: -8.4107027053833
    5. ' ' → logprob: -13.2857027053833
    6. '(x' → logprob: -13.6607027053833
    7. ' in' → logprob: -14.1607027053833
    8. '	x' → logprob: -15.5357027053833
    9. '_x' → logprob: -15.9107027053833
    10. ')x' → logprob: -16.660703659057617

Token 110: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.45858287811279297
    2. 'in' → logprob: -1.708582878112793
    3. 'state' → logprob: -1.708582878112793
    4. ' state' → logprob: -5.208582878112793
    5. ')' → logprob: -9.958582878112793
    6. ' ' → logprob: -10.583582878112793
    7. 'x' → logprob: -11.333582878112793
    8. ',state' → logprob: -12.083582878112793
    9. '   ' → logprob: -12.458582878112793
    10. ' x' → logprob: -13.083582878112793

Token 111: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.004078758880496025
    2. ' state' → logprob: -5.5040788650512695
    3. '	state' → logprob: -16.129077911376953
    4. ')' → logprob: -16.254077911376953
    5. '(state' → logprob: -16.879077911376953
    6. '   ' → logprob: -17.504077911376953
    7. ' ' → logprob: -18.004077911376953
    8. '  ' → logprob: -19.754077911376953
    9. ',state' → logprob: -19.879077911376953
    10. '[state' → logprob: -20.004077911376953

Token 112: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. '())' → logprob: -15.125000953674316
    3. ')
' → logprob: -15.250000953674316
    4. '))' → logprob: -16.125
    5. ')

' → logprob: -17.5
    6. ' )' → logprob: -17.875
    7. ')return' → logprob: -18.75
    8. '')' → logprob: -18.875
    9. ')`' → logprob: -18.875
    10. ')}' → logprob: -19.125

Token 113: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.2007883671903983e-05
    2. 'n' → logprob: -10.750021934509277
    3. 'ndef' → logprob: -14.500021934509277
    4. '(n' → logprob: -17.125022888183594
    5. ' def' → logprob: -17.750022888183594
    6. '```' → logprob: -18.375022888183594
    7. 'from' → logprob: -19.250022888183594
    8. '    
' → logprob: -19.375022888183594
    9. '<|end|>' → logprob: -19.375022888183594
    10. 'for' → logprob: -19.625022888183594

Token 114: ' solve' (ID: 17722)
  Prédit: ' solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.3591328263282776
    2. ' main' → logprob: -2.484132766723633
    3. ' minimal' → logprob: -2.609132766723633
    4. ' bfs' → logprob: -2.609132766723633
    5. ' min' → logprob: -3.734132766723633
    6. 'solve' → logprob: -4.109132766723633
    7. ' toggle' → logprob: -5.109132766723633
    8. ' minimum' → logprob: -5.234132766723633
    9. 'min' → logprob: -5.359132766723633
    10. ' flip' → logprob: -5.859132766723633

Token 115: '(n' (ID: 2406)
  Prédit: '(state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(state' → logprob: -0.15291231870651245
    2. '(n' → logprob: -2.0279123783111572
    3. '(' → logprob: -4.652912139892578
    4. '(states' → logprob: -8.277912139892578
    5. '(s' → logprob: -9.402912139892578
    6. '():' → logprob: -9.402912139892578
    7. '(size' → logprob: -9.527912139892578
    8. ' (' → logprob: -9.527912139892578
    9. '(depth' → logprob: -11.402912139892578
    10. '(def' → logprob: -11.777912139892578

Token 116: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004946522531099617
    2. '):' → logprob: -7.625494480133057
    3. ',state' → logprob: -12.750494956970215
    4. ' ,' → logprob: -12.875494956970215
    5. '):
' → logprob: -14.500494956970215
    6. ',n' → logprob: -16.0004940032959
    7. ':' → logprob: -16.3754940032959
    8. ' ):' → logprob: -16.3754940032959
    9. '   ' → logprob: -16.5004940032959
    10. ',s' → logprob: -16.6254940032959

Token 117: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.7170554995536804
    2. 'state' → logprob: -1.0920555591583252
    3. ' matrix' → logprob: -2.467055559158325
    4. ' state' → logprob: -2.967055559158325
    5. 'initial' → logprob: -3.717055559158325
    6. 'mat' → logprob: -5.342055320739746
    7. ' initial' → logprob: -5.592055320739746
    8. '   ' → logprob: -6.467055320739746
    9. 'm' → logprob: -6.842055320739746
    10. 'board' → logprob: -7.467055320739746

Token 118: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012373325414955616
    2. ',' → logprob: -4.512373447418213
    3. '):
' → logprob: -6.637373447418213
    4. ')' → logprob: -12.262372970581055
    5. ' ):' → logprob: -12.762372970581055
    6. '):
' → logprob: -13.762372970581055
    7. '):

' → logprob: -13.887372970581055
    8. ',state' → logprob: -14.137372970581055
    9. ':' → logprob: -14.262372970581055
    10. '   ' → logprob: -14.387372970581055

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006104405038058758
    2. 'state' → logprob: -5.631104469299316
    3. ' state' → logprob: -7.381104469299316
    4. '```' → logprob: -7.631104469299316
    5. ':' → logprob: -7.756104469299316
    6. ' states' → logprob: -8.506104469299316
    7. 'def' → logprob: -8.631104469299316
    8. '    ' → logprob: -8.881104469299316
    9. '[state' → logprob: -9.506104469299316
    10. '(state' → logprob: -9.881104469299316

Token 120: ' start' (ID: 1604)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.5862890481948853
    2. '   ' → logprob: -0.9612890481948853
    3. ' state' → logprob: -3.0862889289855957
    4. 'from' → logprob: -5.086288928985596
    5. ' from' → logprob: -5.711288928985596
    6. 'initial' → logprob: -5.836288928985596
    7. ' initial' → logprob: -6.711288928985596
    8. 'def' → logprob: -7.336288928985596
    9. 'dp' → logprob: -8.211289405822754
    10. 'states' → logprob: -8.961289405822754

Token 121: ' =' (ID: 314)
  Prédit: '_state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.06626605242490768
    2. ' =' → logprob: -2.9412660598754883
    3. '=' → logprob: -4.566266059875488
    4. '_' → logprob: -7.566266059875488
    5. 'state' → logprob: -8.066266059875488
    6. '_states' → logprob: -10.066266059875488
    7. ')' → logprob: -11.441266059875488
    8. '   ' → logprob: -11.566266059875488
    9. ',' → logprob: -11.816266059875488
    10. 'ing' → logprob: -11.941266059875488

Token 122: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.029515331611037254
    2. '(' → logprob: -3.779515266418457
    3. ' tuple' → logprob: -5.404515266418457
    4. '(tuple' → logprob: -6.404515266418457
    5. ' (' → logprob: -10.154515266418457
    6. '()' → logprob: -10.154515266418457
    7. '   ' → logprob: -12.154515266418457
    8. '()
' → logprob: -12.404515266418457
    9. 'matrix' → logprob: -12.404515266418457
    10. '[' → logprob: -13.279515266418457

Token 123: '(sum' (ID: 45528)
  Prédit: '(matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(matrix' → logprob: -0.04659215733408928
    2. '(sum' → logprob: -3.4215922355651855
    3. '(item' → logprob: -4.9215922355651855
    4. 'matrix' → logprob: -6.4215922355651855
    5. '(' → logprob: -6.7965922355651855
    6. '(cell' → logprob: -7.0465922355651855
    7. '([' → logprob: -7.2965922355651855
    8. '(x' → logprob: -8.421591758728027
    9. '(m' → logprob: -8.421591758728027
    10. '(row' → logprob: -8.546591758728027

Token 124: '(matrix' (ID: 57027)
  Prédit: '(matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(matrix' → logprob: -0.01119577419012785
    2. 'matrix' → logprob: -4.511195659637451
    3. '(' → logprob: -9.38619613647461
    4. ' matrix' → logprob: -10.51119613647461
    5. '(
' → logprob: -11.01119613647461
    6. '((' → logprob: -12.01119613647461
    7. '	matrix' → logprob: -12.01119613647461
    8. '(n' → logprob: -13.63619613647461
    9. '([' → logprob: -13.76119613647461
    10. '(m' → logprob: -13.76119613647461

Token 125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06373173743486404
    2. '[],' → logprob: -3.1887316703796387
    3. '(),' → logprob: -3.9387316703796387
    4. ',n' → logprob: -7.688731670379639
    5. ',m' → logprob: -8.813732147216797
    6. ' [],' → logprob: -9.313732147216797
    7. 'matrix' → logprob: -9.563732147216797
    8. '(matrix' → logprob: -9.563732147216797
    9. ' (),' → logprob: -9.938732147216797
    10. ' ,' → logprob: -10.063732147216797

Token 126: ' (' (ID: 350)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.007957935333251953
    2. '[]' → logprob: -5.132957935333252
    3. '())' → logprob: -7.132957935333252
    4. '()))
' → logprob: -7.382957935333252
    5. '()' → logprob: -7.882957935333252
    6. '()))

' → logprob: -9.257957458496094
    7. '())))' → logprob: -10.257957458496094
    8. '))' → logprob: -10.382957458496094
    9. '()));' → logprob: -11.382957458496094
    10. '())).' → logprob: -11.382957458496094

Token 127: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.0010581758106127381
    2. ' ' → logprob: -7.876058101654053
    3. '))' → logprob: -8.001058578491211
    4. ')))
' → logprob: -8.751058578491211
    5. '[]' → logprob: -9.626058578491211
    6. '0' → logprob: -9.751058578491211
    7. ')' → logprob: -11.001058578491211
    8. ')))

' → logprob: -11.126058578491211
    9. '))))' → logprob: -11.251058578491211
    10. '())))' → logprob: -12.001058578491211

Token 128: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43072226643562317
    2. '
' → logprob: -1.8057222366333008
    3. ')' → logprob: -2.430722236633301
    4. '<|end|>' → logprob: -2.680722236633301
    5. '    
' → logprob: -4.180722236633301
    6. '  
' → logprob: -5.805722236633301
    7. ' ' → logprob: -6.055722236633301
    8. '<|end|>' → logprob: -6.305722236633301
    9. ',' → logprob: -6.930722236633301
    10. ')
' → logprob: -6.930722236633301

Token 129: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' (adapté à ' from') → logprob: -0.6403977274894714
    2. '   ' → logprob: -1.6403977870941162
    3. 'queue' → logprob: -2.015397787094116
    4. 'if' → logprob: -2.015397787094116
    5. 'q' → logprob: -5.390397548675537
    6. 'visited' → logprob: -5.515397548675537
    7. 'for' → logprob: -7.140397548675537
    8. ' queue' → logprob: -7.390397548675537
    9. 'stack' → logprob: -7.515397548675537
    10. ' from' → logprob: -7.515397548675537

Token 130: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.011078237555921078
    2. ' collections' → logprob: -4.511078357696533
    3. ' itertools' → logprob: -10.886077880859375
    4. 'it' → logprob: -12.011077880859375
    5. 'copy' → logprob: -12.761077880859375
    6. 'queue' → logprob: -13.386077880859375
    7. '_it' → logprob: -14.386077880859375
    8. '_' → logprob: -15.011077880859375
    9. 'heap' → logprob: -15.761077880859375
    10. 'collection' → logprob: -16.636077880859375

Token 131: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.07122502475976944
    2. ' import' → logprob: -2.6962249279022217
    3. 'port' → logprob: -6.821225166320801
    4. '_import' → logprob: -10.4462251663208
    5. 'm' → logprob: -10.8212251663208
    6. 'n' → logprob: -10.8212251663208
    7. 'ort' → logprob: -11.0712251663208
    8. '	import' → logprob: -11.5712251663208
    9. '.import' → logprob: -11.5712251663208
    10. 'from' → logprob: -11.5712251663208

Token 132: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0007145775598473847
    2. ' deque' → logprob: -7.2507147789001465
    3. 'de' → logprob: -12.375714302062988
    4. '.de' → logprob: -15.000714302062988
    5. 'collections' → logprob: -15.625714302062988
    6. '```' → logprob: -17.000715255737305
    7. 'deb' → logprob: -18.250715255737305
    8. '	de' → logprob: -18.625715255737305
    9. '   ' → logprob: -18.875715255737305
    10. ' defaultdict' → logprob: -19.750715255737305

Token 133: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.012135441415011883
    2. '   ' → logprob: -4.7621355056762695
    3. '    
' → logprob: -6.5121355056762695
    4. 'queue' → logprob: -6.8871355056762695
    5. '

' → logprob: -8.88713550567627
    6. 'deque' → logprob: -8.88713550567627
    7. '
' → logprob: -9.13713550567627
    8. '  
' → logprob: -9.26213550567627
    9. '```' → logprob: -9.26213550567627
    10. 'q' → logprob: -9.38713550567627

Token 134: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015376612544059753
    2. '
' → logprob: -4.765376567840576
    3. ' queue' → logprob: -5.640376567840576
    4. '    
' → logprob: -6.265376567840576
    5. 'queue' → logprob: -6.765376567840576
    6. 'q' → logprob: -9.890377044677734
    7. '	queue' → logprob: -11.015377044677734
    8. ' q' → logprob: -11.640377044677734
    9. '```' → logprob: -11.640377044677734
    10. ' 
' → logprob: -12.140377044677734

Token 135: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.07133615016937256
    2. 'q' → logprob: -3.571336269378662
    3. '   ' → logprob: -3.946336269378662
    4. ' queue' → logprob: -3.946336269378662
    5. 'visited' → logprob: -6.821336269378662
    6. '
' → logprob: -8.571335792541504
    7. 'que' → logprob: -8.571335792541504
    8. ' q' → logprob: -8.696335792541504
    9. 'dq' → logprob: -8.946335792541504
    10. 'Q' → logprob: -9.071335792541504

Token 136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05488893762230873
    2. '=' → logprob: -2.929888963699341
    3. ' =)' → logprob: -13.679888725280762
    4. ',' → logprob: -13.679888725280762
    5. ')' → logprob: -13.804888725280762
    6. '<|end|>' → logprob: -13.804888725280762
    7. ' ' → logprob: -14.054888725280762
    8. '.' → logprob: -14.304888725280762
    9. ' =
' → logprob: -15.179888725280762
    10. '(' → logprob: -15.929888725280762

Token 137: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.6931482553482056
    2. 'deque' → logprob: -0.6931482553482056
    3. 'Deque' → logprob: -13.943148612976074
    4. 'de' → logprob: -15.943148612976074
    5. 'collections' → logprob: -16.193147659301758
    6. '   ' → logprob: -17.818147659301758
    7. '(de' → logprob: -17.818147659301758
    8. ' collections' → logprob: -18.693147659301758
    9. '	de' → logprob: -19.443147659301758
    10. '```' → logprob: -20.068147659301758

Token 138: '()
' (ID: 1234)
  Prédit: '([('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.4413728713989258
    2. '([' → logprob: -1.1913728713989258
    3. '()' → logprob: -2.941372871398926
    4. '(' → logprob: -9.191372871398926
    5. '[(' → logprob: -9.441372871398926
    6. '()
' → logprob: -10.191372871398926
    7. '([]' → logprob: -11.316372871398926
    8. '([
' → logprob: -11.816372871398926
    9. '((' → logprob: -12.941372871398926
    10. '()

' → logprob: -13.316372871398926

Token 139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1582845151424408
    2. ' queue' → logprob: -2.4082844257354736
    3. 'queue' → logprob: -3.2832844257354736
    4. '(queue' → logprob: -4.033284664154053
    5. '	queue' → logprob: -7.283284664154053
    6. '(' → logprob: -8.033284187316895
    7. ' (' → logprob: -10.158284187316895
    8. ' ' → logprob: -10.658284187316895
    9. '  ' → logprob: -10.658284187316895
    10. 'visited' → logprob: -10.908284187316895

Token 140: ' visited' (ID: 18416)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.011474411003291607
    2. 'visited' (adapté à ' visited') → logprob: -4.511474609375
    3. ' queue' → logprob: -7.886474609375
    4. '(queue' → logprob: -10.761474609375
    5. 'seen' → logprob: -10.886474609375
    6. ' visited' → logprob: -11.886474609375
    7. 'start' → logprob: -13.261474609375
    8. '   ' → logprob: -14.511474609375
    9. 'dist' → logprob: -14.886474609375
    10. '```' → logprob: -15.386474609375

Token 141: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048908911645412445
    2. ' =' → logprob: -3.0489089488983154
    3. '=set' → logprob: -8.048909187316895
    4. '={' → logprob: -14.173909187316895
    5. ' ={' → logprob: -14.673909187316895
    6. ' ' → logprob: -15.173909187316895
    7. '{' → logprob: -15.423909187316895
    8. ')' → logprob: -15.798909187316895
    9. '<|end|>' → logprob: -16.423908233642578
    10. 'set' → logprob: -16.923908233642578

Token 142: ' set' (ID: 920)
  Prédit: ' {'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -1.050276756286621
    2. '{' → logprob: -1.300276756286621
    3. ' set' → logprob: -1.550276756286621
    4. 'set' → logprob: -1.800276756286621
    5. '=set' → logprob: -9.175276756286621
    6. '	set' → logprob: -10.050276756286621
    7. '(set' → logprob: -10.050276756286621
    8. ' ' → logprob: -10.425276756286621
    9. '   ' → logprob: -10.550276756286621
    10. ' ' → logprob: -12.800276756286621

Token 143: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18375042080879211
    2. '(start' → logprob: -1.9337503910064697
    3. '(' → logprob: -4.433750629425049
    4. '([' → logprob: -5.558750629425049
    5. '(queue' → logprob: -5.558750629425049
    6. '()
' → logprob: -5.683750629425049
    7. '()

' → logprob: -9.68375015258789
    8. '[start' → logprob: -10.05875015258789
    9. '({' → logprob: -10.18375015258789
    10. '((' → logprob: -10.55875015258789

Token 144: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08060769736766815
    2. ' queue' → logprob: -2.9556076526641846
    3. 'queue' → logprob: -3.9556076526641846
    4. '
' → logprob: -5.330607891082764
    5. '(queue' → logprob: -7.205607891082764
    6. '	queue' → logprob: -8.080607414245605
    7. '    
' → logprob: -8.330607414245605
    8. ',' → logprob: -10.455607414245605
    9. '```' → logprob: -10.830607414245605
    10. '<|end|>' → logprob: -11.330607414245605

Token 145: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.05927155166864395
    2. ' queue' → logprob: -3.0592715740203857
    3. '   ' → logprob: -4.559271335601807
    4. '(queue' → logprob: -9.684271812438965
    5. 'start' → logprob: -9.934271812438965
    6. '
' → logprob: -11.059271812438965
    7. '	queue' → logprob: -11.559271812438965
    8. '    
' → logprob: -11.559271812438965
    9. ' ' → logprob: -12.434271812438965
    10. ' start' → logprob: -13.184271812438965

Token 146: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00021879478299524635
    2. '.' → logprob: -8.500218391418457
    3. '.enqueue' → logprob: -12.375218391418457
    4. '_append' → logprob: -12.750218391418457
    5. '.extend' → logprob: -12.875218391418457
    6. 'append' → logprob: -13.125218391418457
    7. '().' → logprob: -13.250218391418457
    8. '.p' → logprob: -14.625218391418457
    9. '.Append' → logprob: -15.000218391418457
    10. '.put' → logprob: -15.000218391418457

Token 147: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0009638655465096235
    2. '(' → logprob: -7.1259636878967285
    3. '(start' → logprob: -8.750964164733887
    4. '(((' → logprob: -14.625964164733887
    5. ' (' → logprob: -15.500964164733887
    6. '(
' → logprob: -15.750964164733887
    7. '(('' → logprob: -15.875964164733887
    8. ' ((' → logprob: -16.50096321105957
    9. '[(' → logprob: -17.50096321105957
    10. '([' → logprob: -17.87596321105957

Token 148: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -2.7491250875755213e-05
    2. ' start' → logprob: -10.750027656555176
    3. '0' → logprob: -12.125027656555176
    4. '(start' → logprob: -14.500027656555176
    5. ',start' → logprob: -17.50002670288086
    6. '[start' → logprob: -17.75002670288086
    7. ')' → logprob: -18.50002670288086
    8. '   ' → logprob: -18.87502670288086
    9. '	start' → logprob: -19.87502670288086
    10. ' ' → logprob: -20.12502670288086

Token 149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.704273118884885e-07
    2. ' ,' → logprob: -14.625000953674316
    3. '0' → logprob: -15.875000953674316
    4. ',
' → logprob: -18.0
    5. '‌,' → logprob: -19.5
    6. '1' → logprob: -19.75
    7. '```' → logprob: -20.125
    8. '),' → logprob: -20.125
    9. '`,' → logprob: -20.25
    10. '‍,' → logprob: -21.25

Token 150: ' "' (ID: 392)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000488110730657354
    2. ' ' → logprob: -7.62548828125
    3. '   ' → logprob: -17.37548828125
    4. ')' → logprob: -17.62548828125
    5. '))' → logprob: -18.50048828125
    6. '  ' → logprob: -19.00048828125
    7. '۰' → logprob: -19.12548828125
    8. ' ' → logprob: -20.50048828125
    9. ',' → logprob: -20.56298828125
    10. '<|end|>' → logprob: -20.81298828125

Token 151: '"))
' (ID: 10990)
  Prédit: '"))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"))' → logprob: -0.0015274790348485112
    2. '"))
' → logprob: -6.626527309417725
    3. '"' → logprob: -8.876527786254883
    4. '")' → logprob: -10.251527786254883
    5. '))' → logprob: -11.501527786254883
    6. '"))

' → logprob: -11.626527786254883
    7. ' "))' → logprob: -13.001527786254883
    8. '")))' → logprob: -13.501527786254883
    9. '"));' → logprob: -13.876527786254883
    10. '"))
' → logprob: -14.001527786254883

Token 152: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014048444107174873
    2. 'visited' → logprob: -4.3890485763549805
    3. 'while' → logprob: -6.8890485763549805
    4. ' while' → logprob: -8.26404857635498
    5. ' visited' → logprob: -8.76404857635498
    6. ')' → logprob: -9.88904857635498
    7. '<|end|>' → logprob: -10.51404857635498
    8. '    
' → logprob: -11.38904857635498
    9. '
' → logprob: -11.63904857635498
    10. '```' → logprob: -12.76404857635498

Token 153: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.38955336809158325
    2. 'while' → logprob: -1.3895533084869385
    3. '   ' → logprob: -2.6395533084869385
    4. ' while' → logprob: -6.389553546905518
    5. ' visited' → logprob: -7.889553546905518
    6. '    
' → logprob: -12.88955307006836
    7. '  ' → logprob: -13.88955307006836
    8. '
' → logprob: -14.01455307006836
    9. 'seen' → logprob: -14.26455307006836
    10. '	while' → logprob: -14.51455307006836

Token 154: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0022573103196918964
    2. '.' → logprob: -6.127257347106934
    3. '=' → logprob: -10.502257347106934
    4. ' =' → logprob: -11.502257347106934
    5. ' .' → logprob: -11.502257347106934
    6. '.=' → logprob: -11.752257347106934
    7. '.setdefault' → logprob: -12.002257347106934
    8. '.update' → logprob: -12.627257347106934
    9. '<|end|>' → logprob: -12.877257347106934
    10. '.append' → logprob: -13.377257347106934

Token 155: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -1.771655115589965e-05
    2. '(' → logprob: -11.125018119812012
    3. ' (' → logprob: -13.000018119812012
    4. '((' → logprob: -14.625018119812012
    5. 'start' → logprob: -15.625018119812012
    6. '(
' → logprob: -18.125017166137695
    7. '(end' → logprob: -18.250017166137695
    8. '=start' → logprob: -18.375017166137695
    9. ' start' → logprob: -18.625017166137695
    10. ',start' → logprob: -18.875017166137695

Token 156: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.610702363715973e-06
    2. ')
' → logprob: -11.625009536743164
    3. ' )' → logprob: -14.750009536743164
    4. '))' → logprob: -15.375009536743164
    5. ')

' → logprob: -17.500009536743164
    6. '),' → logprob: -17.625009536743164
    7. '   ' → logprob: -18.000009536743164
    8. ',)' → logprob: -18.125009536743164
    9. ')`' → logprob: -18.125009536743164
    10. ')}' → logprob: -18.375009536743164

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0210702084004879
    2. ' while' → logprob: -4.6460700035095215
    3. 'while' → logprob: -5.2710700035095215
    4. '    
' → logprob: -5.7710700035095215
    5. '
' → logprob: -5.8960700035095215
    6. '```' → logprob: -9.27107048034668
    7. '	while' → logprob: -9.64607048034668
    8. '<|end|>' → logprob: -10.14607048034668
    9. ')' → logprob: -10.64607048034668
    10. '  
' → logprob: -11.89607048034668

Token 158: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.006732660811394453
    2. '   ' → logprob: -5.25673246383667
    3. ' while' → logprob: -6.50673246383667
    4. '	while' → logprob: -13.131732940673828
    5. '    
' → logprob: -13.256732940673828
    6. '
' → logprob: -15.506732940673828
    7. 'While' → logprob: -15.881732940673828
    8. '```' → logprob: -16.131732940673828
    9. ')' → logprob: -16.506732940673828
    10. '  ' → logprob: -16.506732940673828

Token 159: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.004081128165125847
    2. ' queue' → logprob: -5.5040812492370605
    3. '(queue' → logprob: -13.754080772399902
    4. '	queue' → logprob: -13.754080772399902
    5. 'True' → logprob: -15.254080772399902
    6. 'que' → logprob: -16.00408172607422
    7. 'len' → logprob: -16.12908172607422
    8. '   ' → logprob: -16.87908172607422
    9. '.queue' → logprob: -17.50408172607422
    10. ' ' → logprob: -17.75408172607422

Token 160: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01262406911700964
    2. ':
' → logprob: -4.387624263763428
    3. '[' → logprob: -10.26262378692627
    4. '.pop' → logprob: -11.01262378692627
    5. '):
' → logprob: -11.26262378692627
    6. ' and' → logprob: -11.63762378692627
    7. '):' → logprob: -12.01262378692627
    8. 'and' → logprob: -12.13762378692627
    9. ',' → logprob: -12.26262378692627
    10. 'opleft' → logprob: -12.51262378692627

Token 161: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007738647051155567
    2. ',' → logprob: -6.2577385902404785
    3. 'state' → logprob: -6.2577385902404785
    4. '(state' → logprob: -6.5077385902404785
    5. ' (' → logprob: -6.8827385902404785
    6. ' state' → logprob: -7.0077385902404785
    7. ',state' → logprob: -8.882739067077637
    8. 'current' → logprob: -9.132739067077637
    9. ' current' → logprob: -9.382739067077637
    10. '(current' → logprob: -10.007739067077637

Token 162: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' (adapté à ' state') → logprob: -0.13413572311401367
    2. ' state' → logprob: -2.5091357231140137
    3. 'current' → logprob: -3.8841357231140137
    4. '(state' → logprob: -4.134135723114014
    5. ' current' → logprob: -5.134135723114014
    6. ' (' → logprob: -7.384135723114014
    7. '       ' → logprob: -7.509135723114014
    8. '           ' → logprob: -8.884136199951172
    9. '(current' → logprob: -9.009136199951172
    10. 'curr' → logprob: -9.384136199951172

Token 163: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.704273118884885e-07
    2. ' ,' → logprob: -14.750000953674316
    3. ',state' → logprob: -16.75
    4. ',current' → logprob: -16.875
    5. ',
' → logprob: -17.125
    6. ',length' → logprob: -18.125
    7. '‌,' → logprob: -18.5
    8. '_,' → logprob: -18.625
    9. ',next' → logprob: -18.75
    10. '   ' → logprob: -19.0

Token 164: ' spells' (ID: 69967)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.0019129343563690782
    2. ' path' → logprob: -7.001913070678711
    3. 'moves' → logprob: -7.251913070678711
    4. 'steps' → logprob: -8.376913070678711
    5. 'actions' → logprob: -10.251913070678711
    6. 'ops' → logprob: -11.501913070678711
    7. 'pat' → logprob: -12.251913070678711
    8. 'seq' → logprob: -12.876913070678711
    9. '_path' → logprob: -13.251913070678711
    10. 'commands' → logprob: -13.376913070678711

Token 165: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602315455675125
    2. ' =' → logprob: -1.910231590270996
    3. ')' → logprob: -12.160231590270996
    4. ')=' → logprob: -14.535231590270996
    5. ',' → logprob: -14.910231590270996
    6. '_' → logprob: -15.285231590270996
    7. ' ' → logprob: -15.410231590270996
    8. '   ' → logprob: -16.03523063659668
    9. 's' → logprob: -16.28523063659668
    10. '<|end|>' → logprob: -16.53523063659668

Token 166: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.07889904081821442
    2. 'queue' → logprob: -2.5788991451263428
    3. '(queue' → logprob: -12.078899383544922
    4. '       ' → logprob: -13.453899383544922
    5. '   ' → logprob: -13.953899383544922
    6. '	queue' → logprob: -14.328899383544922
    7. '.queue' → logprob: -14.953899383544922
    8. ' ' → logprob: -16.203899383544922
    9. 'que' → logprob: -16.203899383544922
    10. '    ' → logprob: -16.328899383544922

Token 167: '.p' (ID: 1201)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12717513740062714
    2. ' =' → logprob: -2.1271750926971436
    3. '.pop' → logprob: -8.502175331115723
    4. ',' → logprob: -11.002175331115723
    5. '   ' → logprob: -11.627175331115723
    6. 'pop' → logprob: -11.752175331115723
    7. '=
' → logprob: -12.752175331115723
    8. ' pop' → logprob: -13.752175331115723
    9. 'Pop' → logprob: -14.002175331115723
    10. ' =
' → logprob: -14.377175331115723

Token 168: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.005257952958345413
    2. 'op' → logprob: -5.255258083343506
    3. 'ople' → logprob: -11.130257606506348
    4. 'opl' → logprob: -11.630257606506348
    5. 'append' → logprob: -15.130257606506348
    6. 'opup' → logprob: -16.505258560180664
    7. 'opt' → logprob: -16.755258560180664
    8. 'p' → logprob: -17.255258560180664
    9. 'opf' → logprob: -17.630258560180664
    10. 'opy' → logprob: -17.630258560180664

Token 169: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006008113850839436
    2. '()
' → logprob: -8.125600814819336
    3. ')' → logprob: -8.750600814819336
    4. '(' → logprob: -9.000600814819336
    5. '       ' → logprob: -11.375600814819336
    6. '(
' → logprob: -12.625600814819336
    7. ' ()' → logprob: -13.375600814819336
    8. ',' → logprob: -13.625600814819336
    9. '()

' → logprob: -14.125600814819336
    10. '()`' → logprob: -14.125600814819336

Token 170: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009486184571869671
    2. '<|end|>' → logprob: -7.250948429107666
    3. '
' → logprob: -9.750948905944824
    4. ' if' → logprob: -9.875948905944824
    5. '        
' → logprob: -9.875948905944824
    6. ' for' → logprob: -10.125948905944824
    7. '<|end|>' → logprob: -11.500948905944824
    8. 'if' → logprob: -12.000948905944824
    9. ',' → logprob: -12.250948905944824
    10. 'for' → logprob: -12.500948905944824

Token 171: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.016074607148766518
    2. '       ' → logprob: -4.2660746574401855
    3. ' if' → logprob: -6.2660746574401855
    4. 'for' → logprob: -12.016074180603027
    5. '   ' → logprob: -12.766074180603027
    6. '        
' → logprob: -15.516074180603027
    7. '	if' → logprob: -16.141075134277344
    8. '           ' → logprob: -16.391075134277344
    9. 'If' → logprob: -16.391075134277344
    10. '```' → logprob: -16.391075134277344

Token 172: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.10020699352025986
    2. 'all' → logprob: -2.3502070903778076
    3. '(all' → logprob: -15.475207328796387
    4. '	all' → logprob: -16.72520637512207
    5. ' ' → logprob: -17.10020637512207
    6. '   ' → logprob: -17.10020637512207
    7. 'All' → logprob: -18.60020637512207
    8. '_all' → logprob: -19.10020637512207
    9. ' ' → logprob: -19.22520637512207
    10. ''all' → logprob: -19.35020637512207

Token 173: '_zero' (ID: 53468)
  Prédit: '_zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_zero' → logprob: -1.0280383548888494e-06
    2. 'zero' → logprob: -14.000000953674316
    3. '_ZERO' → logprob: -16.500001907348633
    4. '_' → logprob: -18.000001907348633
    5. '(_' → logprob: -19.250001907348633
    6. '0' → logprob: -19.375001907348633
    7. '```' → logprob: -20.000001907348633
    8. 'Zero' → logprob: -20.000001907348633
    9. '_all' → logprob: -20.125001907348633
    10. '_none' → logprob: -20.250001907348633

Token 174: '(state' (ID: 16114)
  Prédit: '(state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(state' → logprob: -4.008129963040119e-06
    2. ' (' → logprob: -12.500003814697266
    3. '(' → logprob: -15.125003814697266
    4. '(states' → logprob: -17.125003814697266
    5. ',state' → logprob: -18.000003814697266
    6. '[state' → logprob: -18.750003814697266
    7. 'state' → logprob: -19.625003814697266
    8. '(State' → logprob: -20.000003814697266
    9. '(
' → logprob: -20.000003814697266
    10. '(status' → logprob: -20.000003814697266

Token 175: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004804380238056183
    2. '):
' → logprob: -5.379804611206055
    3. ' ):' → logprob: -8.629804611206055
    4. ')' → logprob: -12.629804611206055
    5. ' ):
' → logprob: -14.254804611206055
    6. '):
' → logprob: -14.504804611206055
    7. '):

' → logprob: -14.629804611206055
    8. ':' → logprob: -14.879804611206055
    9. '():' → logprob: -16.254804611206055
    10. 'state' → logprob: -16.879804611206055

Token 176: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005925900186412036
    2. ' return' → logprob: -7.5005927085876465
    3. 'return' → logprob: -10.500592231750488
    4. '               ' → logprob: -11.875592231750488
    5. ':' → logprob: -13.875592231750488
    6. '       ' → logprob: -13.875592231750488
    7. '          ' → logprob: -14.000592231750488
    8. ':
' → logprob: -14.125592231750488
    9. ':return' → logprob: -14.500592231750488
    10. ',' → logprob: -15.125592231750488

Token 177: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.11023097485303879
    2. ' return' → logprob: -2.3602309226989746
    3. '           ' → logprob: -4.610230922698975
    4. 'print' → logprob: -11.235231399536133
    5. '   ' → logprob: -12.110231399536133
    6. '       ' → logprob: -12.735231399536133
    7. '               ' → logprob: -13.235231399536133
    8. '	return' → logprob: -14.235231399536133
    9. '
' → logprob: -14.485231399536133
    10. ' print' → logprob: -16.110231399536133

Token 178: ' spells' (ID: 69967)
  Prédit: 'sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sp' → logprob: -0.05771986395120621
    2. ' spells' → logprob: -2.9327199459075928
    3. 'len' → logprob: -6.307719707489014
    4. ' len' → logprob: -8.057720184326172
    5. 'spell' → logprob: -8.057720184326172
    6. '(sp' → logprob: -8.307720184326172
    7. ' sp' → logprob: -9.932720184326172
    8. '(len' → logprob: -10.182720184326172
    9. ' spell' → logprob: -10.682720184326172
    10. '   ' → logprob: -12.557720184326172

Token 179: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027305749244987965
    2. '
' → logprob: -6.502730369567871
    3. '        
' → logprob: -6.877730369567871
    4. '<|end|>' → logprob: -9.252730369567871
    5. ' for' → logprob: -9.627730369567871
    6. 'for' → logprob: -11.127730369567871
    7. '\n' → logprob: -12.127730369567871
    8. '           ' → logprob: -13.127730369567871
    9. ' 
' → logprob: -13.252730369567871
    10. '       
' → logprob: -13.502730369567871

Token 180: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00021057340200059116
    2. '
' → logprob: -8.625210762023926
    3. ' for' → logprob: -11.000210762023926
    4. '        
' → logprob: -11.875210762023926
    5. 'for' → logprob: -12.750210762023926
    6. '<|end|>' → logprob: -13.125210762023926
    7. '           ' → logprob: -14.250210762023926
    8. '```' → logprob: -14.500210762023926
    9. '   ' → logprob: -15.000210762023926
    10. '<|end|>' → logprob: -16.00020980834961

Token 181: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.020583350211381912
    2. ' for' → logprob: -4.020583152770996
    3. '       ' → logprob: -6.020583152770996
    4. 'n' → logprob: -14.145583152770996
    5. '        
' → logprob: -14.395583152770996
    6. '	for' → logprob: -14.895583152770996
    7. '   ' → logprob: -15.395583152770996
    8. '
' → logprob: -16.020584106445312
    9. '```' → logprob: -16.145584106445312
    10. '           ' → logprob: -16.395584106445312

Token 182: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07005525380373001
    2. ' r' → logprob: -2.6950552463531494
    3. 'i' → logprob: -10.32005500793457
    4. 'length' → logprob: -11.07005500793457
    5. '(r' → logprob: -11.32005500793457
    6. ' length' → logprob: -11.44505500793457
    7. 'size' → logprob: -11.69505500793457
    8. ' i' → logprob: -12.07005500793457
    9. ' size' → logprob: -12.32005500793457
    10. '0' → logprob: -12.32005500793457

Token 183: '1' (ID: 16)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0022692051716148853
    2. 'in' → logprob: -6.127269268035889
    3. '1' → logprob: -10.50226879119873
    4. ' ' → logprob: -10.62726879119873
    5. ',' → logprob: -11.12726879119873
    6. '<|end|>' → logprob: -11.87726879119873
    7. '0' → logprob: -12.62726879119873
    8. 'range' → logprob: -13.00226879119873
    9. 'n' → logprob: -14.12726879119873
    10. ' ,' → logprob: -14.25226879119873

Token 184: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023518923670053482
    2. 'in' → logprob: -3.7735190391540527
    3. ',' → logprob: -8.273518562316895
    4. ' ' → logprob: -11.773518562316895
    5. ' ,' → logprob: -13.273518562316895
    6. '1' → logprob: -13.523518562316895
    7. 'range' → logprob: -13.898518562316895
    8. '<|end|>' → logprob: -13.898518562316895
    9. '0' → logprob: -14.023518562316895
    10. ')' → logprob: -14.148518562316895

Token 185: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.038044821470975876
    2. ' range' → logprob: -3.2880449295043945
    3. '(range' → logprob: -12.788044929504395
    4. ' ' → logprob: -15.663044929504395
    5. '	range' → logprob: -16.038043975830078
    6. '0' → logprob: -16.163043975830078
    7. ')' → logprob: -16.663043975830078
    8. '
' → logprob: -17.413043975830078
    9. '   ' → logprob: -18.163043975830078
    10. ' xrange' → logprob: -18.288043975830078

Token 186: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.074907287256792e-05
    2. '(' → logprob: -10.25006103515625
    3. 'n' → logprob: -10.62506103515625
    4. '(r' → logprob: -14.12506103515625
    5. ' n' → logprob: -16.25006103515625
    6. '(
' → logprob: -17.00006103515625
    7. '(len' → logprob: -17.25006103515625
    8. ',n' → logprob: -17.50006103515625
    9. ')n' → logprob: -17.87506103515625
    10. ' (' → logprob: -18.00006103515625

Token 187: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011441766284406185
    2. '):
' → logprob: -4.511441707611084
    3. ' ):' → logprob: -8.136442184448242
    4. '+' → logprob: -10.261442184448242
    5. ':' → logprob: -11.136442184448242
    6. '   ' → logprob: -11.261442184448242
    7. 'n' → logprob: -11.386442184448242
    8. ')' → logprob: -12.011442184448242
    9. ',' → logprob: -12.511442184448242
    10. '       ' → logprob: -13.011442184448242

Token 188: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0361301563680172
    2. ' for' → logprob: -4.161129951477051
    3. '<|end|>' → logprob: -4.661129951477051
    4. ' ' → logprob: -5.661129951477051
    5. '   ' → logprob: -6.036129951477051
    6. '           ' → logprob: -6.161129951477051
    7. '        ' → logprob: -7.661129951477051
    8. '               ' → logprob: -7.661129951477051
    9. ':' → logprob: -8.28612995147705
    10. '<|end|>' → logprob: -8.41112995147705

Token 189: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07101074606180191
    2. 'for' (adapté à ' for') → logprob: -2.6960108280181885
    3. 'r' → logprob: -8.07101058959961
    4. ' ' → logprob: -8.19601058959961
    5. ' r' → logprob: -8.69601058959961
    6. '	for' → logprob: -8.94601058959961
    7. '       ' → logprob: -9.69601058959961
    8. '   ' → logprob: -9.69601058959961
    9. '           ' → logprob: -10.19601058959961
    10. '               ' → logprob: -12.19601058959961

Token 190: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.741879940032959
    2. ' r' → logprob: -0.866879940032959
    3. ' c' → logprob: -2.616879940032959
    4. 'c' → logprob: -3.491879940032959
    5. '<|end|>' → logprob: -10.491880416870117
    6. ' ' → logprob: -11.241880416870117
    7. '_r' → logprob: -13.616880416870117
    8. '   ' → logprob: -13.741880416870117
    9. 'n' → logprob: -14.366880416870117
    10. ',' → logprob: -14.866880416870117

Token 191: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00028946425300091505
    2. '2' → logprob: -8.750289916992188
    3. ' in' → logprob: -9.625289916992188
    4. 'r' → logprob: -11.000289916992188
    5. 'in' → logprob: -11.125289916992188
    6. 'for' → logprob: -11.375289916992188
    7. '(r' → logprob: -12.500289916992188
    8. 'ange' → logprob: -12.875289916992188
    9. ' ' → logprob: -13.250289916992188
    10. '```' → logprob: -13.250289916992188

Token 192: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08895397186279297
    2. 'in' → logprob: -2.463953971862793
    3. 'range' → logprob: -12.088953971862793
    4. ' ' → logprob: -13.088953971862793
    5. 'r' → logprob: -13.463953971862793
    6. '   ' → logprob: -13.713953971862793
    7. 'from' → logprob: -14.088953971862793
    8. '(r' → logprob: -14.213953971862793
    9. 'import' → logprob: -14.338953971862793
    10. ')' → logprob: -14.463953971862793

Token 193: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07892768830060959
    2. ' range' → logprob: -2.578927755355835
    3. '(range' → logprob: -10.203927993774414
    4. 'r' → logprob: -14.703927993774414
    5. '(r' → logprob: -14.828927993774414
    6. ' r' → logprob: -16.578927993774414
    7. ' ' → logprob: -18.453927993774414
    8. '   ' → logprob: -18.703927993774414
    9. '	range' → logprob: -18.953927993774414
    10. '[r' → logprob: -19.328927993774414

Token 194: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -4.723352049040841e-06
    2. '(range' → logprob: -13.125004768371582
    3. '(' → logprob: -13.750004768371582
    4. 'range' → logprob: -14.250004768371582
    5. 'r' → logprob: -14.250004768371582
    6. ' (' → logprob: -16.000003814697266
    7. ' r' → logprob: -16.000003814697266
    8. ' range' → logprob: -16.500003814697266
    9. '[r' → logprob: -18.750003814697266
    10. '(n' → logprob: -19.625003814697266

Token 195: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5941604690160602e-05
    2. 'r' → logprob: -11.625025749206543
    3. ')' → logprob: -12.125025749206543
    4. 'n' → logprob: -12.750025749206543
    5. '...' → logprob: -14.000025749206543
    6. ',' → logprob: -14.000025749206543
    7. '(r' → logprob: -14.000025749206543
    8. '```' → logprob: -14.000025749206543
    9. '+' → logprob: -14.375025749206543
    10. ' ' → logprob: -14.750025749206543

Token 196: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004665441811084747
    2. ',n' → logprob: -5.379665374755859
    3. ' ,' → logprob: -10.12966537475586
    4. 'n' → logprob: -12.50466537475586
    5. '+' → logprob: -14.00466537475586
    6. '(n' → logprob: -15.87966537475586
    7. '   ' → logprob: -16.12966537475586
    8. '

' → logprob: -16.25466537475586
    9. ',
' → logprob: -16.50466537475586
    10. '```' → logprob: -16.62966537475586

Token 197: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001170225441455841
    2. ' n' → logprob: -6.7511701583862305
    3. '(n' → logprob: -18.751171112060547
    4. '<n' → logprob: -19.126171112060547
    5. '	n' → logprob: -19.251171112060547
    6. ')n' → logprob: -20.001171112060547
    7. '   ' → logprob: -20.501171112060547
    8. '_n' → logprob: -20.751171112060547
    9. '<|end|>' → logprob: -21.126171112060547
    10. ')' → logprob: -21.376171112060547

Token 198: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07890135049819946
    2. '):' → logprob: -2.5789012908935547
    3. '):
' → logprob: -11.578901290893555
    4. '):

' → logprob: -13.828901290893555
    5. ':
' → logprob: -14.828901290893555
    6. ' ):
' → logprob: -15.578901290893555
    7. '           ' → logprob: -15.828901290893555
    8. '+' → logprob: -15.828901290893555
    9. '   ' → logprob: -15.953901290893555
    10. ':' → logprob: -16.203901290893555

Token 199: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0015541439643129706
    2. '           ' → logprob: -7.001554012298584
    3. ' for' → logprob: -7.376554012298584
    4. '            ' → logprob: -12.001554489135742
    5. '                   ' → logprob: -12.251554489135742
    6. 'for' → logprob: -13.626554489135742
    7. '       ' → logprob: -13.751554489135742
    8. '             ' → logprob: -13.751554489135742
    9. '                ' → logprob: -14.251554489135742
    10. '```' → logprob: -14.626554489135742

Token 200: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20265258848667145
    2. '                   ' → logprob: -2.3276526927948
    3. '               ' → logprob: -3.0776526927948
    4. '                ' → logprob: -3.9526526927948
    5. '           ' → logprob: -4.202652454376221
    6. 'for' (adapté à ' for') → logprob: -5.577652454376221
    7. '                 ' → logprob: -7.577652454376221
    8. '            ' → logprob: -8.077652931213379
    9. '       ' → logprob: -8.452652931213379
    10. '                    ' → logprob: -8.577652931213379

Token 201: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5759405493736267
    2. ' c' → logprob: -0.8259405493736267
    3. ' ' → logprob: -15.325940132141113
    4. '   ' → logprob: -15.325940132141113
    5. '	c' → logprob: -15.325940132141113
    6. '<|end|>' → logprob: -15.825940132141113
    7. '_c' → logprob: -15.950940132141113
    8. ')c' → logprob: -16.95094108581543
    9. '(c' → logprob: -17.70094108581543
    10. '  ' → logprob: -18.07594108581543

Token 202: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007980733062140644
    2. 'in' → logprob: -7.625798225402832
    3. ' in' → logprob: -8.125798225402832
    4. 'for' → logprob: -12.250798225402832
    5. 'c' → logprob: -12.625798225402832
    6. '```' → logprob: -13.375798225402832
    7. '=' → logprob: -13.625798225402832
    8. '2' → logprob: -14.000798225402832
    9. '0' → logprob: -14.375798225402832
    10. ' ' → logprob: -14.625798225402832

Token 203: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016036715358495712
    2. 'in' → logprob: -4.141036510467529
    3. '<|end|>' → logprob: -13.516036987304688
    4. ' ' → logprob: -14.141036987304688
    5. 'n' → logprob: -16.016036987304688
    6. 'In' → logprob: -16.516036987304688
    7. 'inthe' → logprob: -17.266036987304688
    8. '<|end|>' → logprob: -17.391036987304688
    9. 'import' → logprob: -17.516036987304688
    10. '=' → logprob: -17.891036987304688

Token 204: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25193214416503906
    2. ' range' → logprob: -1.501932144165039
    3. '(range' → logprob: -12.751932144165039
    4. 'in' → logprob: -16.50193214416504
    5. 'ange' → logprob: -17.12693214416504
    6. ' in' → logprob: -17.25193214416504
    7. '	range' → logprob: -17.62693214416504
    8. '0' → logprob: -17.87693214416504
    9. ' ' → logprob: -18.00193214416504
    10. '_range' → logprob: -18.50193214416504

Token 205: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.015268729068338871
    2. '(c' → logprob: -4.515268802642822
    3. 'range' → logprob: -6.390268802642822
    4. '(' → logprob: -6.765268802642822
    5. '(range' → logprob: -7.015268802642822
    6. ' (' → logprob: -8.140268325805664
    7. 'n' → logprob: -9.390268325805664
    8. ' range' → logprob: -9.890268325805664
    9. 'c' → logprob: -10.765268325805664
    10. '(r' → logprob: -10.890268325805664

Token 206: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2149098962545395
    2. ',' → logprob: -1.8399099111557007
    3. '):
' → logprob: -3.464909791946411
    4. ',n' → logprob: -6.58991003036499
    5. ' ,' → logprob: -7.33991003036499
    6. ',c' → logprob: -8.464909553527832
    7. '   ' → logprob: -8.839909553527832
    8. ' ):' → logprob: -8.839909553527832
    9. ':' → logprob: -9.214909553527832
    10. '):

' → logprob: -9.589909553527832

Token 207: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5215553045272827
    2. ' for' → logprob: -1.0215553045272827
    3. '               ' → logprob: -3.2715554237365723
    4. '                ' → logprob: -5.521555423736572
    5. '                       ' → logprob: -7.271555423736572
    6. '                    ' → logprob: -7.521555423736572
    7. '	               ' → logprob: -7.771555423736572
    8. '                               ' → logprob: -7.896555423736572
    9. 'for' → logprob: -8.021554946899414
    10. '           ' → logprob: -8.021554946899414

Token 208: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.13157299160957336
    2. 'for' (adapté à ' for') → logprob: -2.131572961807251
    3. '                   ' → logprob: -5.63157320022583
    4. '                    ' → logprob: -7.88157320022583
    5. '                       ' → logprob: -8.506572723388672
    6. '                               ' → logprob: -9.381572723388672
    7. '                           ' → logprob: -9.631572723388672
    8. '```' → logprob: -9.881572723388672
    9. ' in' → logprob: -10.006572723388672
    10. '                        ' → logprob: -10.506572723388672

Token 209: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.4740852415561676
    2. 'c' → logprob: -0.9740852117538452
    3. '(c' → logprob: -12.599084854125977
    4. '<|end|>' → logprob: -13.849084854125977
    5. ' ' → logprob: -14.099084854125977
    6. '_c' → logprob: -14.474084854125977
    7. '   ' → logprob: -14.849084854125977
    8. 'range' → logprob: -14.974084854125977
    9. ')c' → logprob: -14.974084854125977
    10. '	c' → logprob: -15.349084854125977

Token 210: '2' (ID: 17)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6521630883216858
    2. 'in' → logprob: -0.9021630883216858
    3. 'c' → logprob: -3.277163028717041
    4. '2' → logprob: -3.402163028717041
    5. '1' → logprob: -6.527163028717041
    6. ' c' → logprob: -8.1521635055542
    7. '(c' → logprob: -8.5271635055542
    8. '_c' → logprob: -8.9021635055542
    9. 'range' → logprob: -9.1521635055542
    10. '[c' → logprob: -10.2771635055542

Token 211: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003178782993927598
    2. 'in' → logprob: -5.753178596496582
    3. ' ' → logprob: -15.003178596496582
    4. '=' → logprob: -15.503178596496582
    5. 'In' → logprob: -15.878178596496582
    6. 'range' → logprob: -16.0031795501709
    7. '<|end|>' → logprob: -16.1281795501709
    8. 'inthe' → logprob: -16.8781795501709
    9. 'inth' → logprob: -17.1281795501709
    10. ' =' → logprob: -17.1281795501709

Token 212: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12741559743881226
    2. ' range' → logprob: -2.127415657043457
    3. '(range' → logprob: -7.627415657043457
    4. '(c' → logprob: -14.877415657043457
    5. '	range' → logprob: -16.87741470336914
    6. '_range' → logprob: -17.25241470336914
    7. ' in' → logprob: -19.00241470336914
    8. '.range' → logprob: -19.37741470336914
    9. 'rang' → logprob: -19.87741470336914
    10. 'Range' → logprob: -20.12741470336914

Token 213: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -7.862962229410186e-05
    2. ' (' → logprob: -9.500078201293945
    3. '(' → logprob: -12.750078201293945
    4. '                   ' → logprob: -15.625078201293945
    5. '(C' → logprob: -16.375078201293945
    6. '(range' → logprob: -16.375078201293945
    7. '                               ' → logprob: -16.625078201293945
    8. 'range' → logprob: -16.875078201293945
    9. '                       ' → logprob: -17.250078201293945
    10. '(col' → logprob: -17.375078201293945

Token 214: '1' (ID: 16)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.008872182108461857
    2. '1' → logprob: -5.508872032165527
    3. '2' → logprob: -5.508872032165527
    4. ' c' → logprob: -7.758872032165527
    5. '(c' → logprob: -8.758872032165527
    6. ',' → logprob: -9.883872032165527
    7. '```' → logprob: -10.508872032165527
    8. ',c' → logprob: -11.008872032165527
    9. '[c' → logprob: -11.633872032165527
    10. '$c' → logprob: -11.883872032165527

Token 215: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002023685723543167
    2. ',n' → logprob: -6.502023696899414
    3. ' ,' → logprob: -7.627023696899414
    4. '(n' → logprob: -10.627023696899414
    5. ',
' → logprob: -12.127023696899414
    6. 'n' → logprob: -12.877023696899414
    7. '+' → logprob: -14.627023696899414
    8. ',c' → logprob: -15.502023696899414
    9. '+,' → logprob: -15.627023696899414
    10. '                   ' → logprob: -15.627023696899414

Token 216: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16022463142871857
    2. ' n' → logprob: -1.9102246761322021
    3. '(n' → logprob: -15.660224914550781
    4. 'c' → logprob: -16.28522491455078
    5. '                   ' → logprob: -16.78522491455078
    6. ' ' → logprob: -16.91022491455078
    7. '               ' → logprob: -17.53522491455078
    8. '	n' → logprob: -17.66022491455078
    9. '   ' → logprob: -17.91022491455078
    10. '           ' → logprob: -18.03522491455078

Token 217: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2520996630191803
    2. '):
' → logprob: -1.502099633216858
    3. '                   ' → logprob: -10.002099990844727
    4. '):

' → logprob: -10.252099990844727
    5. '                       ' → logprob: -10.502099990844727
    6. ':' → logprob: -10.502099990844727
    7. ')' → logprob: -11.627099990844727
    8. '):
' → logprob: -11.627099990844727
    9. '+' → logprob: -12.627099990844727
    10. ' ):' → logprob: -12.752099990844727

Token 218: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.012096112594008446
    2. '                        
' → logprob: -5.012095928192139
    3. ':' → logprob: -6.137095928192139
    4. ' :' → logprob: -7.762095928192139
    5. ' new' → logprob: -7.762095928192139
    6. ':
' → logprob: -7.887095928192139
    7. '                           ' → logprob: -8.012096405029297
    8. '                   ' → logprob: -8.262096405029297
    9. '                        ' → logprob: -8.637096405029297
    10. ',' → logprob: -8.762096405029297

Token 219: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.12711583077907562
    2. '                           ' → logprob: -2.3771157264709473
    3. 'new' (adapté à ' new') → logprob: -3.8771157264709473
    4. ' next' → logprob: -5.877115726470947
    5. '           ' → logprob: -6.627115726470947
    6. 'next' → logprob: -8.002116203308105
    7. '                       ' → logprob: -8.002116203308105
    8. '
' → logprob: -8.627116203308105
    9. '                               ' → logprob: -9.252116203308105
    10. '   ' → logprob: -9.252116203308105

Token 220: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -3.9292415749514475e-05
    2. 'state' → logprob: -10.750039100646973
    3. '_' → logprob: -11.875039100646973
    4. '_s' → logprob: -12.125039100646973
    5. ' _' → logprob: -12.500039100646973
    6. '_states' → logprob: -15.000039100646973
    7. '=_' → logprob: -15.500039100646973
    8. '_code' → logprob: -15.750039100646973
    9. '```' → logprob: -16.37504005432129
    10. '_version' → logprob: -16.62504005432129

Token 221: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740789234638214
    2. ' =' → logprob: -0.974078893661499
    3. ',' → logprob: -13.599079132080078
    4. ')' → logprob: -14.474079132080078
    5. ')=' → logprob: -16.349079132080078
    6. ' =)' → logprob: -17.099079132080078
    7. '=
' → logprob: -18.099079132080078
    8. ' =
' → logprob: -18.224079132080078
    9. ' ' → logprob: -18.599079132080078
    10. '=

' → logprob: -18.849079132080078

Token 222: ' toggle' (ID: 24966)
  Prédit: ' toggle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' toggle' → logprob: -0.16027449071407318
    2. 'toggle' → logprob: -1.9102745056152344
    3. '(toggle' → logprob: -10.160274505615234
    4. 'oggle' → logprob: -11.785274505615234
    5. '.toggle' → logprob: -13.660274505615234
    6. ' ' → logprob: -13.785274505615234
    7. 't' → logprob: -14.410274505615234
    8. ' togg' → logprob: -14.535274505615234
    9. '_toggle' → logprob: -14.535274505615234
    10. '-toggle' → logprob: -15.910274505615234

Token 223: '(state' (ID: 16114)
  Prédit: '(state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(state' → logprob: -1.1041145626222715e-05
    2. 'state' → logprob: -12.125011444091797
    3. ' (' → logprob: -12.750011444091797
    4. '(' → logprob: -13.125011444091797
    5. ',state' → logprob: -14.875011444091797
    6. ' state' → logprob: -15.750011444091797
    7. '(
' → logprob: -15.875011444091797
    8. '[state' → logprob: -16.875011444091797
    9. '(states' → logprob: -17.750011444091797
    10. '(status' → logprob: -18.625011444091797

Token 224: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028731077909469604
    2. ',r' → logprob: -5.877872943878174
    3. ' ,' → logprob: -9.627873420715332
    4. ',
' → logprob: -13.627873420715332
    5. '(r' → logprob: -14.752873420715332
    6. ',n' → logprob: -15.252873420715332
    7. 'r' → logprob: -15.502873420715332
    8. '(' → logprob: -16.877872467041016
    9. ')' → logprob: -17.252872467041016
    10. ' r' → logprob: -17.252872467041016

Token 225: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00015860427811276168
    2. ' r' → logprob: -8.750158309936523
    3. '(r' → logprob: -17.625158309936523
    4. '[r' → logprob: -18.125158309936523
    5. '	r' → logprob: -18.125158309936523
    6. '                       ' → logprob: -18.250158309936523
    7. ')' → logprob: -18.250158309936523
    8. '   ' → logprob: -18.500158309936523
    9. '
' → logprob: -19.000158309936523
    10. '                   ' → logprob: -19.000158309936523

Token 226: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.625000953674316
    3. ',' → logprob: -15.125000953674316
    4. '2' → logprob: -16.375001907348633
    5. '```' → logprob: -16.500001907348633
    6. '   ' → logprob: -16.875001907348633
    7. 'r' → logprob: -17.125001907348633
    8. '[' → logprob: -17.562501907348633
    9. '                       ' → logprob: -17.875001907348633
    10. '<|end|>' → logprob: -18.000001907348633

Token 227: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003455944824963808
    2. ' ,' → logprob: -8.500345230102539
    3. ',c' → logprob: -8.875345230102539
    4. ',
' → logprob: -14.000345230102539
    5. 'c' → logprob: -15.125345230102539
    6. '‌,' → logprob: -15.500345230102539
    7. '   ' → logprob: -16.12534523010254
    8. ' c' → logprob: -16.25034523010254
    9. '                           ' → logprob: -16.50034523010254
    10. '                   ' → logprob: -16.62534523010254

Token 228: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00861456897109747
    2. ' c' → logprob: -4.758614540100098
    3. '   ' → logprob: -18.008615493774414
    4. ' ' → logprob: -18.383615493774414
    5. 'r' → logprob: -19.008615493774414
    6. '                           ' → logprob: -19.258615493774414
    7. '	c' → logprob: -19.508615493774414
    8. '                               ' → logprob: -20.258615493774414
    9. '
' → logprob: -20.383615493774414
    10. '  ' → logprob: -20.383615493774414

Token 229: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1134493425488472
    2. '2' → logprob: -2.2384493350982666
    3. ',' → logprob: -7.613449573516846
    4. ',c' → logprob: -9.863449096679688
    5. ' ' → logprob: -10.113449096679688
    6. 'c' → logprob: -11.113449096679688
    7. '```' → logprob: -11.113449096679688
    8. '+' → logprob: -12.863449096679688
    9. ' ,' → logprob: -13.363449096679688
    10. '   ' → logprob: -13.613449096679688

Token 230: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.758300438988954e-05
    2. ',r' → logprob: -9.750097274780273
    3. ' ,' → logprob: -10.250097274780273
    4. 'r' → logprob: -12.625097274780273
    5. '                   ' → logprob: -15.250097274780273
    6. '   ' → logprob: -16.625097274780273
    7. '```' → logprob: -17.125097274780273
    8. ' r' → logprob: -17.125097274780273
    9. '           ' → logprob: -17.250097274780273
    10. ',
' → logprob: -18.000097274780273

Token 231: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0007100477814674377
    2. ' r' → logprob: -7.2507100105285645
    3. '   ' → logprob: -17.750709533691406
    4. 'c' → logprob: -19.625709533691406
    5. '	r' → logprob: -20.000709533691406
    6. ' ' → logprob: -20.875709533691406
    7. '    ' → logprob: -21.125709533691406
    8. '                       ' → logprob: -21.750709533691406
    9. '  ' → logprob: -21.750709533691406
    10. '                   ' → logprob: -22.000709533691406

Token 232: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0921942703134846e-05
    2. '1' → logprob: -11.50001049041748
    3. ' ' → logprob: -15.62501049041748
    4. '```' → logprob: -15.75001049041748
    5. 'r' → logprob: -16.187511444091797
    6. ',' → logprob: -16.250011444091797
    7. '   ' → logprob: -16.937511444091797
    8. 'c' → logprob: -17.437511444091797
    9. '[' → logprob: -18.312511444091797
    10. '-' → logprob: -18.312511444091797

Token 233: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00036787090357393026
    2. ',c' → logprob: -8.500368118286133
    3. ' ,' → logprob: -9.250368118286133
    4. '+' → logprob: -9.750368118286133
    5. ',
' → logprob: -13.125368118286133
    6. '                   ' → logprob: -13.250368118286133
    7. '+,' → logprob: -14.000368118286133
    8. 'c' → logprob: -14.000368118286133
    9. ' +' → logprob: -14.250368118286133
    10. '2' → logprob: -14.250368118286133

Token 234: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.020543057471513748
    2. ' c' → logprob: -3.895543098449707
    3. '   ' → logprob: -15.020543098449707
    4. ' ' → logprob: -15.020543098449707
    5. '                   ' → logprob: -16.27054214477539
    6. '  ' → logprob: -16.52054214477539
    7. '                           ' → logprob: -16.77054214477539
    8. '	c' → logprob: -17.14554214477539
    9. '    ' → logprob: -17.27054214477539
    10. '                               ' → logprob: -17.52054214477539

Token 235: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00030078491545282304
    2. '1' → logprob: -8.125300407409668
    3. ' ' → logprob: -12.625300407409668
    4. '+' → logprob: -13.625300407409668
    5. '```' → logprob: -15.875300407409668
    6. ',' → logprob: -16.375301361083984
    7. '-' → logprob: -16.625301361083984
    8. '   ' → logprob: -18.000301361083984
    9. '21' → logprob: -18.562801361083984
    10. '25' → logprob: -18.625301361083984

Token 236: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018196819291915745
    2. ',n' → logprob: -9.000182151794434
    3. '+' → logprob: -10.125182151794434
    4. ' ,' → logprob: -12.250182151794434
    5. 'n' → logprob: -12.375182151794434
    6. ')' → logprob: -12.500182151794434
    7. '+,' → logprob: -14.000182151794434
    8. '```' → logprob: -14.000182151794434
    9. '2' → logprob: -14.125182151794434
    10. '1' → logprob: -14.625182151794434

Token 237: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5759416222572327
    2. 'n' → logprob: -0.8259416222572327
    3. ')n' → logprob: -13.700942039489746
    4. ')' → logprob: -14.325942039489746
    5. '	n' → logprob: -14.950942039489746
    6. '```' → logprob: -16.57594108581543
    7. '
' → logprob: -17.45094108581543
    8. '_n' → logprob: -17.57594108581543
    9. '   ' → logprob: -18.07594108581543
    10. '$n' → logprob: -18.20094108581543

Token 238: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004297155828680843
    2. ')
' → logprob: -8.1254301071167
    3. ',' → logprob: -9.0004301071167
    4. '                       ' → logprob: -12.6254301071167
    5. ' )' → logprob: -13.3754301071167
    6. ')`' → logprob: -13.5004301071167
    7. '),' → logprob: -13.6254301071167
    8. ')
' → logprob: -15.1254301071167
    9. '                   ' → logprob: -15.5004301071167
    10. ',)' → logprob: -15.6254301071167

Token 239: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.4212280511856079
    2. '<|end|>' → logprob: -1.671228051185608
    3. '                        
' → logprob: -2.5462279319763184
    4. '
' → logprob: -3.0462279319763184
    5. ' if' → logprob: -4.421227931976318
    6. '                           ' → logprob: -5.921227931976318
    7. ')' → logprob: -6.046227931976318
    8. '                        ' → logprob: -6.046227931976318
    9. ' 
' → logprob: -6.171227931976318
    10. '<|end|>' → logprob: -6.796227931976318

Token 240: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06002869829535484
    2. '                       ' → logprob: -3.4350287914276123
    3. 'if' (adapté à ' if') → logprob: -3.6850287914276123
    4. '                        
' → logprob: -8.310029029846191
    5. '                        ' → logprob: -8.435029029846191
    6. '```' → logprob: -8.810029029846191
    7. ' new' → logprob: -9.060029029846191
    8. '                           ' → logprob: -9.435029029846191
    9. ')' → logprob: -10.060029029846191
    10. '
' → logprob: -11.060029029846191

Token 241: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.10020710527896881
    2. 'new' → logprob: -2.3502070903778076
    3. ' not' → logprob: -15.225207328796387
    4. '(new' → logprob: -15.475207328796387
    5. 'not' → logprob: -17.60020637512207
    6. '	new' → logprob: -17.85020637512207
    7. '_new' → logprob: -18.35020637512207
    8. '[new' → logprob: -18.60020637512207
    9. ')new' → logprob: -18.60020637512207
    10. 'New' → logprob: -19.10020637512207

Token 242: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -3.7385154428193346e-05
    2. 'state' → logprob: -10.62503719329834
    3. '_' → logprob: -12.62503719329834
    4. ' _' → logprob: -12.87503719329834
    5. 'new' → logprob: -13.87503719329834
    6. '_stat' → logprob: -14.00003719329834
    7. '_STATE' → logprob: -14.00003719329834
    8. '_st' → logprob: -14.00003719329834
    9. '_states' → logprob: -14.12503719329834
    10. ' state' → logprob: -14.25003719329834

Token 243: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.1002068892121315
    2. 'not' → logprob: -2.3502068519592285
    3. '	not' → logprob: -15.475207328796387
    4. ')' → logprob: -17.35020637512207
    5. ':not' → logprob: -17.72520637512207
    6. '<|end|>' → logprob: -17.72520637512207
    7. ' in' → logprob: -18.72520637512207
    8. 'in' → logprob: -19.22520637512207
    9. '_not' → logprob: -19.35020637512207
    10. 'and' → logprob: -19.60020637512207

Token 244: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04425859451293945
    2. 'visited' → logprob: -3.9192585945129395
    3. 'in' → logprob: -4.2942585945129395
    4. ' visited' → logprob: -4.6692585945129395
    5. '<|end|>' → logprob: -8.419258117675781
    6. ')' → logprob: -9.919258117675781
    7. '
' → logprob: -10.794258117675781
    8. ' (' → logprob: -11.044258117675781
    9. '                           ' → logprob: -11.044258117675781
    10. '<|end|>' → logprob: -11.294258117675781

Token 245: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.04858771339058876
    2. ' visited' → logprob: -3.0485877990722656
    3. '
' → logprob: -16.173587799072266
    4. 'visit' → logprob: -16.923587799072266
    5. ' ' → logprob: -17.423587799072266
    6. '   ' → logprob: -17.673587799072266
    7. 'Visited' → logprob: -18.048587799072266
    8. '```' → logprob: -18.048587799072266
    9. 'seen' → logprob: -18.798587799072266
    10. 'vis' → logprob: -18.923587799072266

Token 246: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14468231797218323
    2. ':
' → logprob: -2.0196824073791504
    3. '):
' → logprob: -6.64468240737915
    4. '                       ' → logprob: -8.394681930541992
    5. '):' → logprob: -8.394681930541992
    6. '                           ' → logprob: -8.644681930541992
    7. '():
' → logprob: -10.769681930541992
    8. '<|end|>' → logprob: -11.394681930541992
    9. ':

' → logprob: -11.519681930541992
    10. ':
' → logprob: -11.894681930541992

Token 247: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.006323712877929211
    2. '                       ' → logprob: -5.50632381439209
    3. '                               ' → logprob: -6.38132381439209
    4. '           ' → logprob: -9.13132381439209
    5. ' visited' → logprob: -9.63132381439209
    6. '<|end|>' → logprob: -9.63132381439209
    7. '```' → logprob: -9.88132381439209
    8. '                            
' → logprob: -9.88132381439209
    9. '
' → logprob: -10.13132381439209
    10. '                            ' → logprob: -10.13132381439209

Token 248: ' visited' (ID: 18416)
  Prédit: ' visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.1964745968580246
    2. '                               ' → logprob: -1.821474552154541
    3. 'visited' (adapté à ' visited') → logprob: -4.196474552154541
    4. ' queue' → logprob: -7.446474552154541
    5. ' visitation' → logprob: -8.6964750289917
    6. '```' → logprob: -8.8214750289917
    7. '                           ' → logprob: -9.1964750289917
    8. ' visit' → logprob: -9.8214750289917
    9. '   ' → logprob: -9.8214750289917
    10. '                                   ' → logprob: -10.0714750289917

Token 249: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -1.5332478142227046e-05
    2. '.' → logprob: -11.125015258789062
    3. '.Add' → logprob: -16.125015258789062
    4. 'add' → logprob: -16.125015258789062
    5. '<|end|>' → logprob: -16.250015258789062
    6. '.append' → logprob: -16.625015258789062
    7. ' .' → logprob: -17.500015258789062
    8. '.setdefault' → logprob: -17.625015258789062
    9. ' add' → logprob: -17.875015258789062
    10. '.insert' → logprob: -18.125015258789062

Token 250: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.0001234428636962548
    2. '(' → logprob: -9.000123023986816
    3. '(
' → logprob: -17.125123977661133
    4. 'new' → logprob: -18.250123977661133
    5. '((' → logprob: -18.375123977661133
    6. ' (' → logprob: -18.625123977661133
    7. '(

' → logprob: -20.750123977661133
    8. ' new' → logprob: -21.250123977661133
    9. '(New' → logprob: -21.875123977661133
    10. '(n' → logprob: -22.000123977661133

Token 251: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.0011860613012686372
    2. 'state' → logprob: -7.126185894012451
    3. 'new' → logprob: -8.62618637084961
    4. '_' → logprob: -8.62618637084961
    5. '_new' → logprob: -10.75118637084961
    6. ' new' → logprob: -14.50118637084961
    7. '_states' → logprob: -15.00118637084961
    8. ' state' → logprob: -16.12618637084961
    9. ')' → logprob: -16.25118637084961
    10. '```' → logprob: -16.25118637084961

Token 252: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6320917010307312
    2. '                           ' → logprob: -0.8820917010307312
    3. ')' → logprob: -3.257091760635376
    4. ')
' → logprob: -4.507091522216797
    5. ',
' → logprob: -5.757091522216797
    6. '
' → logprob: -6.757091522216797
    7. '                            ' → logprob: -8.507091522216797
    8. '),' → logprob: -8.882091522216797
    9. '           ' → logprob: -9.257091522216797
    10. '                       ' → logprob: -10.007091522216797

Token 253: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0015362853882834315
    2. ' queue' → logprob: -7.1265363693237305
    3. '                            ' → logprob: -8.50153636932373
    4. '<|end|>' → logprob: -9.25153636932373
    5. '                       ' → logprob: -9.37653636932373
    6. '                               ' → logprob: -9.37653636932373
    7. '                            
' → logprob: -10.00153636932373
    8. '
' → logprob: -10.12653636932373
    9. '           ' → logprob: -10.50153636932373
    10. 'queue' → logprob: -10.62653636932373

Token 254: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.3133377134799957
    2. ' queue' → logprob: -1.3133376836776733
    3. '                           ' → logprob: -9.688337326049805
    4. '(queue' → logprob: -11.688337326049805
    5. '                               ' → logprob: -12.563337326049805
    6. '                                   ' → logprob: -14.563337326049805
    7. '           ' → logprob: -14.938337326049805
    8. '               ' → logprob: -15.438337326049805
    9. '.queue' → logprob: -15.813337326049805
    10. '                   ' → logprob: -15.813337326049805

Token 255: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.696889623621246e-06
    2. '.' → logprob: -13.25000286102295
    3. 'append' → logprob: -14.62500286102295
    4. '.enqueue' → logprob: -15.12500286102295
    5. '.extend' → logprob: -16.000001907348633
    6. '.app' → logprob: -17.250001907348633
    7. '.put' → logprob: -17.500001907348633
    8. ' .' → logprob: -17.750001907348633
    9. '.Append' → logprob: -18.125001907348633
    10. ').' → logprob: -18.375001907348633

Token 256: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0003631137660704553
    2. '(' → logprob: -8.50036334991455
    3. '(new' → logprob: -8.75036334991455
    4. ' (' → logprob: -14.87536334991455
    5. ' ((' → logprob: -15.12536334991455
    6. '```' → logprob: -15.75036334991455
    7. '(((' → logprob: -15.87536334991455
    8. '   ' → logprob: -16.000362396240234
    9. '(
' → logprob: -16.750362396240234
    10. ' ' → logprob: -18.500362396240234

Token 257: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.00032712158281356096
    2. ' new' → logprob: -8.500327110290527
    3. '(new' → logprob: -9.000327110290527
    4. '   ' → logprob: -16.000328063964844
    5. ')new' → logprob: -16.375328063964844
    6. '
' → logprob: -17.125328063964844
    7. ' (' → logprob: -17.125328063964844
    8. '	new' → logprob: -17.625328063964844
    9. '[new' → logprob: -17.625328063964844
    10. '```' → logprob: -17.750328063964844

Token 258: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.0022319748532027006
    2. 'state' → logprob: -6.127232074737549
    3. '_' → logprob: -11.50223159790039
    4. '_states' → logprob: -11.50223159790039
    5. '_STATE' → logprob: -11.75223159790039
    6. '```' → logprob: -12.25223159790039
    7. '_token' → logprob: -13.12723159790039
    8. 'new' → logprob: -13.62723159790039
    9. ',state' → logprob: -13.62723159790039
    10. 's' → logprob: -13.62723159790039

Token 259: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.580929347255733e-05
    2. ' ,' → logprob: -11.250016212463379
    3. '",' → logprob: -14.125016212463379
    4. ',
' → logprob: -14.250016212463379
    5. '`,' → logprob: -14.375016212463379
    6. ',s' → logprob: -15.250016212463379
    7. ',",' → logprob: -15.875016212463379
    8. '(' → logprob: -16.375015258789062
    9. '(sp' → logprob: -16.500015258789062
    10. '',' → logprob: -16.625015258789062

Token 260: ' spells' (ID: 69967)
  Prédit: ' spells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' spells' → logprob: -0.09037966281175613
    2. 'sp' → logprob: -2.4653797149658203
    3. '(sp' → logprob: -7.21537971496582
    4. 'spell' → logprob: -8.21537971496582
    5. ' spell' → logprob: -8.34037971496582
    6. '	sp' → logprob: -10.21537971496582
    7. ' sp' → logprob: -10.46537971496582
    8. ' spelling' → logprob: -10.71537971496582
    9. '```' → logprob: -11.21537971496582
    10. ' spins' → logprob: -11.46537971496582

Token 261: '+"' (ID: 8626)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16038435697555542
    2. ' +' → logprob: -1.9103844165802002
    3. '+(' → logprob: -8.910384178161621
    4. '+'' → logprob: -11.035384178161621
    5. '+"' → logprob: -12.035384178161621
    6. '+r' → logprob: -14.285384178161621
    7. '+c' → logprob: -14.535384178161621
    8. '+
' → logprob: -15.035384178161621
    9. '+s' → logprob: -15.410384178161621
    10. '+a' → logprob: -15.535384178161621

Token 262: 'my' (ID: 3825)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -1.4046984910964966
    2. 'T' → logprob: -1.6546984910964966
    3. '{}' → logprob: -1.9046984910964966
    4. '({' → logprob: -2.404698371887207
    5. '1' → logprob: -2.779698371887207
    6. 'R' → logprob: -3.154698371887207
    7. '"' → logprob: -3.279698371887207
    8. '{' → logprob: -3.904698371887207
    9. '("' → logprob: -3.904698371887207
    10. '(' → logprob: -4.029698371887207

Token 263: 'on' (ID: 263)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.9431933760643005
    2. ' f' → logprob: -1.6931934356689453
    3. '"' → logprob: -1.9431934356689453
    4. '(r' → logprob: -2.4431934356689453
    5. ' str' → logprob: -3.3181934356689453
    6. ' (' → logprob: -3.8181934356689453
    7. 'chr' → logprob: -3.8181934356689453
    8. '(str' → logprob: -4.068193435668945
    9. '(chr' → logprob: -4.443193435668945
    10. ''' → logprob: -4.568193435668945

Token 264: '"))
' (ID: 10990)
  Prédit: '"))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"))' → logprob: -0.26456204056739807
    2. ' "))' → logprob: -1.6395620107650757
    3. ' "' → logprob: -4.014562129974365
    4. '"' → logprob: -5.139562129974365
    5. 'r' → logprob: -5.639562129974365
    6. '(r' → logprob: -6.014562129974365
    7. '1' → logprob: -7.139562129974365
    8. ' (' → logprob: -7.389562129974365
    9. '("' → logprob: -7.389562129974365
    10. '{' → logprob: -7.389562129974365

Token 265: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016310833394527435
    2. '))' → logprob: -5.641310691833496
    3. '<|end|>' → logprob: -5.641310691833496
    4. ')
' → logprob: -6.266310691833496
    5. '"' → logprob: -6.391310691833496
    6. '")' → logprob: -6.641310691833496
    7. '   ' → logprob: -7.516310691833496
    8. '                           ' → logprob: -7.891310691833496
    9. '"\' → logprob: -8.141310691833496
    10. '
' → logprob: -8.141310691833496

Token 266: ' return' (ID: 622)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19097523391246796
    2. '<|end|>' → logprob: -1.8159751892089844
    3. '"' → logprob: -5.565975189208984
    4. ' ' → logprob: -6.565975189208984
    5. '")' → logprob: -6.940975189208984
    6. '
' → logprob: -6.940975189208984
    7. '(' → logprob: -7.190975189208984
    8. '   ' → logprob: -8.065975189208984
    9. '\n' → logprob: -8.065975189208984
    10. '<|end|>' → logprob: -8.190975189208984

Token 267: ' ""

' (ID: 86057)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.5765348076820374
    2. ' None' → logprob: -0.8265348076820374
    3. '"' → logprob: -7.451534748077393
    4. ' "' → logprob: -12.32653522491455
    5. '""' → logprob: -12.70153522491455
    6. '_None' → logprob: -13.45153522491455
    7. ''' → logprob: -13.82653522491455
    8. '(None' → logprob: -14.07653522491455
    9. ' ' → logprob: -14.32653522491455
    10. '"No' → logprob: -14.57653522491455

Token 268: 'while' (ID: 7032)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 269: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.011094626039266586
    2. 'True' → logprob: -4.511094570159912
    3. '(True' → logprob: -10.01109504699707
    4. '=True' → logprob: -14.51109504699707
    5. '1' → logprob: -14.63609504699707
    6. ' ' → logprob: -14.76109504699707
    7. ' input' → logprob: -15.13609504699707
    8. '_true' → logprob: -15.88609504699707
    9. 'true' → logprob: -16.38609504699707
    10. ' true' → logprob: -16.76109504699707

Token 270: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003191386058460921
    2. ':
' → logprob: -8.375319480895996
    3. ' :' → logprob: -9.375319480895996
    4. '():' → logprob: -12.625319480895996
    5. ':

' → logprob: -16.00031852722168
    6. ' :
' → logprob: -16.37531852722168
    7. '):' → logprob: -16.50031852722168
    8. '   ' → logprob: -16.62531852722168
    9. ',' → logprob: -17.37531852722168
    10. ':def' → logprob: -17.87531852722168

Token 271: '   ' (ID: 271)
  Prédit: ' try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' try' → logprob: -0.5417239665985107
    2. '   ' → logprob: -1.1667239665985107
    3. 'try' → logprob: -2.2917239665985107
    4. ' n' → logprob: -5.41672420501709
    5. 'n' → logprob: -6.66672420501709
    6. '	try' → logprob: -9.79172420501709
    7. ' s' → logprob: -13.29172420501709
    8. '```' → logprob: -14.04172420501709
    9. '   ' → logprob: -14.04172420501709
    10. '       ' → logprob: -14.16672420501709

Token 272: ' n' (ID: 297)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.17537598311901093
    2. ' try' → logprob: -2.5503759384155273
    3. 'n' (adapté à ' n') → logprob: -2.8003759384155273
    4. 'line' → logprob: -4.175375938415527
    5. ' line' → logprob: -5.175375938415527
    6. ' n' → logprob: -7.050375938415527
    7. '   ' → logprob: -9.050375938415527
    8. '	try' → logprob: -12.550375938415527
    9. '```' → logprob: -12.925375938415527
    10. '    
' → logprob: -13.675375938415527

Token 273: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3872617483139038
    2. ' =' → logprob: -1.1372617483139038
    3. '=int' → logprob: -7.887261867523193
    4. '=input' → logprob: -11.387261390686035
    5. 'int' → logprob: -14.012261390686035
    6. ',' → logprob: -14.512261390686035
    7. '=

' → logprob: -14.887261390686035
    8. 'input' → logprob: -15.012261390686035
    9. ' =
' → logprob: -15.012261390686035
    10. 's' → logprob: -15.387261390686035

Token 274: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.004110577050596476
    2. ' int' → logprob: -5.504110813140869
    3. 'input' → logprob: -10.379110336303711
    4. ' input' → logprob: -13.879110336303711
    5. '=int' → logprob: -17.62911033630371
    6. ' ' → logprob: -17.87911033630371
    7. '(int' → logprob: -18.25411033630371
    8. '[int' → logprob: -19.00411033630371
    9. 'try' → logprob: -19.25411033630371
    10. '  ' → logprob: -19.37911033630371

Token 275: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -2.629921436891891e-05
    2. '(' → logprob: -11.25002670288086
    3. 'input' → logprob: -11.25002670288086
    4. '()' → logprob: -15.37502670288086
    5. '=input' → logprob: -17.00002670288086
    6. ' input' → logprob: -17.37502670288086
    7. ' (' → logprob: -18.62502670288086
    8. '(
' → logprob: -19.12502670288086
    9. ',input' → logprob: -19.12502670288086
    10. '	input' → logprob: -20.37502670288086

Token 276: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00022487416572403163
    2. '())
' → logprob: -8.500225067138672
    3. '()' → logprob: -11.125225067138672
    4. '().' → logprob: -12.125225067138672
    5. '())

' → logprob: -14.125225067138672
    6. ' ())' → logprob: -15.375225067138672
    7. ')' → logprob: -16.375225067138672
    8. '())
' → logprob: -16.375225067138672
    9. '(' → logprob: -17.000225067138672
    10. '()
' → logprob: -17.375225067138672

Token 277: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.011656939052045345
    2. 'if' → logprob: -4.636656761169434
    3. '<|end|>' → logprob: -6.761656761169434
    4. '   ' → logprob: -7.261656761169434
    5. '<|end|>' → logprob: -11.511656761169434
    6. '	if' → logprob: -11.511656761169434
    7. '    ' → logprob: -12.261656761169434
    8. ' If' → logprob: -12.761656761169434
    9. 'If' → logprob: -13.136656761169434
    10. ')' → logprob: -13.636656761169434

Token 278: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04858759790658951
    2. ' if' → logprob: -3.0485875606536865
    3. '   ' → logprob: -16.548587799072266
    4. 'If' → logprob: -16.548587799072266
    5. 'break' → logprob: -18.298587799072266
    6. '<|end|>' → logprob: -18.423587799072266
    7. '	if' → logprob: -19.423587799072266
    8. ' break' → logprob: -19.673587799072266
    9. ';if' → logprob: -19.798587799072266
    10. '```' → logprob: -20.173587799072266

Token 279: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.048668671399354935
    2. 'n' → logprob: -3.048668622970581
    3. ' not' → logprob: -9.42366886138916
    4. '	n' → logprob: -15.29866886138916
    5. 'not' → logprob: -16.173667907714844
    6. ' ' → logprob: -16.423667907714844
    7. '_n' → logprob: -17.548667907714844
    8. '=n' → logprob: -18.298667907714844
    9. ')n' → logprob: -18.423667907714844
    10. 'n't' → logprob: -18.423667907714844

Token 280: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03805446997284889
    2. ' ==' → logprob: -3.2880544662475586
    3. '=' → logprob: -11.788054466247559
    4. '<=' → logprob: -13.163054466247559
    5. ')==' → logprob: -13.788054466247559
    6. '===' → logprob: -13.913054466247559
    7. '()==' → logprob: -14.413054466247559
    8. '==
' → logprob: -15.163054466247559
    9. ')' → logprob: -15.538054466247559
    10. ']==' → logprob: -15.788054466247559

Token 281: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -19.125139236450195
    4. ' ' → logprob: -20.375139236450195
    5. '۰' → logprob: -20.625139236450195
    6. '  ' → logprob: -20.750139236450195
    7. '```' → logprob: -21.250139236450195
    8. '=' → logprob: -21.875139236450195
    9. '０' → logprob: -21.875139236450195
    10. ')' → logprob: -22.625139236450195

Token 282: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '۰' → logprob: -19.75000762939453
    4. '-' → logprob: -20.00000762939453
    5. '０' → logprob: -20.25000762939453
    6. '   ' → logprob: -21.00000762939453
    7. ')' → logprob: -21.37500762939453
    8. '```' → logprob: -21.37500762939453
    9. '٠' → logprob: -21.75000762939453
    10. '০' → logprob: -21.87500762939453

Token 283: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1002512127161026
    2. ':
' → logprob: -2.3502511978149414
    3. '   ' → logprob: -10.225251197814941
    4. ':return' → logprob: -13.100251197814941
    5. ' :' → logprob: -13.350251197814941
    6. ' :
' → logprob: -13.725251197814941
    7. '):
' → logprob: -13.975251197814941
    8. '():
' → logprob: -14.100251197814941
    9. '	break' → logprob: -14.350251197814941
    10. ':
' → logprob: -14.850251197814941

Token 284: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018410729244351387
    2. '       ' → logprob: -4.018410682678223
    3. ' break' → logprob: -8.518410682678223
    4. '   ' → logprob: -10.768410682678223
    5. '	break' → logprob: -11.268410682678223
    6. ':' → logprob: -11.768410682678223
    7. 'break' → logprob: -12.268410682678223
    8. ':
' → logprob: -12.768410682678223
    9. ' ' → logprob: -12.768410682678223
    10. '    ' → logprob: -13.143410682678223

Token 285: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.16144777834415436
    2. 'break' (adapté à ' break') → logprob: -1.9114477634429932
    3. '   ' → logprob: -7.161448001861572
    4. '	break' → logprob: -7.786448001861572
    5. '       ' → logprob: -10.411447525024414
    6. '_break' → logprob: -13.911447525024414
    7. '-break' → logprob: -15.411447525024414
    8. '           ' → logprob: -16.161447525024414
    9. ' ' → logprob: -16.911447525024414
    10. '```' → logprob: -16.911447525024414

Token 286: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020638354122638702
    2. 'matrix' → logprob: -4.270638465881348
    3. ' matrix' → logprob: -5.145638465881348
    4. '    
' → logprob: -7.895638465881348
    5. '
' → logprob: -8.895638465881348
    6. '	matrix' → logprob: -9.520638465881348
    7. '```' → logprob: -11.395638465881348
    8. 'n' → logprob: -11.395638465881348
    9. '_matrix' → logprob: -12.020638465881348
    10. '  ' → logprob: -12.770638465881348

Token 287: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006909078918397427
    2. 'matrix' → logprob: -5.506908893585205
    3. ' matrix' → logprob: -6.631908893585205
    4. '    
' → logprob: -6.881908893585205
    5. '
' → logprob: -8.006909370422363
    6. '	matrix' → logprob: -9.131909370422363
    7. 'n' → logprob: -11.506909370422363
    8. 'input' → logprob: -12.006909370422363
    9. '```' → logprob: -12.506909370422363
    10. '  ' → logprob: -12.506909370422363

Token 288: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' (adapté à ' matrix') → logprob: -0.05033324286341667
    2. '   ' → logprob: -3.300333261489868
    3. ' matrix' → logprob: -4.425333023071289
    4. 'm' → logprob: -8.925333023071289
    5. '	matrix' → logprob: -9.550333023071289
    6. 'mat' → logprob: -10.800333023071289
    7. 'state' → logprob: -12.675333023071289
    8. '_matrix' → logprob: -12.800333023071289
    9. '    
' → logprob: -12.800333023071289
    10. '(matrix' → logprob: -13.300333023071289

Token 289: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023309072479605675
    2. '=' → logprob: -3.7733089923858643
    3. ',' → logprob: -9.773308753967285
    4. ')' → logprob: -12.148308753967285
    5. ')=' → logprob: -15.023308753967285
    6. ' ,' → logprob: -15.648308753967285
    7. ' ' → logprob: -15.773308753967285
    8. ' =
' → logprob: -15.898308753967285
    9. ' =)' → logprob: -16.2733097076416
    10. '<|end|>' → logprob: -16.5233097076416

Token 290: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.12784360349178314
    2. ' read' → logprob: -2.1278436183929443
    3. '[' → logprob: -7.127843379974365
    4. ' [' → logprob: -9.127843856811523
    5. '(read' → logprob: -12.502843856811523
    6. '	read' → logprob: -15.127843856811523
    7. '.read' → logprob: -16.502843856811523
    8. '   ' → logprob: -17.127843856811523
    9. '_read' → logprob: -17.127843856811523
    10. '[]' → logprob: -19.127843856811523

Token 291: '_matrix' (ID: 23431)
  Prédit: '_matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_matrix' → logprob: -1.4855663721391466e-05
    2. 'matrix' → logprob: -11.250015258789062
    3. '(n' → logprob: -13.500015258789062
    4. '(matrix' → logprob: -15.000015258789062
    5. ' matrix' → logprob: -16.750015258789062
    6. '_m' → logprob: -17.875015258789062
    7. '_MATRIX' → logprob: -18.375015258789062
    8. 'Matrix' → logprob: -18.625015258789062
    9. '_vector' → logprob: -19.000015258789062
    10. '_mat' → logprob: -19.000015258789062

Token 292: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.5928495486150496e-05
    2. 'n' → logprob: -11.125016212463379
    3. '(' → logprob: -13.750016212463379
    4. '(
' → logprob: -18.500015258789062
    5. ' (' → logprob: -18.625015258789062
    6. ' n' → logprob: -18.625015258789062
    7. '<n' → logprob: -19.875015258789062
    8. '(nx' → logprob: -21.125015258789062
    9. '```' → logprob: -21.125015258789062
    10. ')n' → logprob: -21.250015258789062

Token 293: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4418171455617994e-05
    2. ')
' → logprob: -10.125044822692871
    3. ')n' → logprob: -12.500044822692871
    4. ' )' → logprob: -15.125044822692871
    5. '(n' → logprob: -16.125043869018555
    6. ')
' → logprob: -16.625043869018555
    7. '))' → logprob: -16.875043869018555
    8. '   ' → logprob: -17.375043869018555
    9. ')`' → logprob: -17.875043869018555
    10. ')

' → logprob: -17.875043869018555

Token 294: '   ' (ID: 271)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.6977517008781433
    2. 'result' → logprob: -1.447751760482788
    3. '   ' → logprob: -1.947751760482788
    4. 'print' → logprob: -2.697751760482788
    5. ' print' → logprob: -3.197751760482788
    6. ' solution' → logprob: -4.322751522064209
    7. 'solution' → logprob: -6.072751522064209
    8. 'output' → logprob: -8.447751998901367
    9. ' spell' → logprob: -8.822751998901367
    10. ' spells' → logprob: -8.947751998901367

Token 295: ' print' (ID: 2123)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.13465116918087006
    2. 'print' (adapté à ' print') → logprob: -2.1346511840820312
    3. 'res' → logprob: -5.384651184082031
    4. 'answer' → logprob: -6.509651184082031
    5. ' result' → logprob: -7.759651184082031
    6. 'solution' → logprob: -7.884651184082031
    7. 'ans' → logprob: -8.009651184082031
    8. 'sp' → logprob: -8.134651184082031
    9. ' print' → logprob: -9.759651184082031
    10. ' spells' → logprob: -9.884651184082031

Token 296: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.2352385965641588e-05
    2. '(' → logprob: -11.625012397766113
    3. 'solve' → logprob: -12.625012397766113
    4. '((' → logprob: -17.625011444091797
    5. ' (' → logprob: -17.625011444091797
    6. ' solve' → logprob: -17.750011444091797
    7. '(sol' → logprob: -18.125011444091797
    8. '()' → logprob: -18.250011444091797
    9. '(
' → logprob: -18.500011444091797
    10. '(solution' → logprob: -18.750011444091797

Token 297: 'olve' (ID: 11460)
  Prédit: 'olve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olve' → logprob: -6.630610641877865e-06
    2. '(' → logprob: -12.250006675720215
    3. 'solve' → logprob: -14.125006675720215
    4. 'ove' → logprob: -15.250006675720215
    5. 'OLVE' → logprob: -15.500006675720215
    6. 'ol' → logprob: -16.1250057220459
    7. 'olver' → logprob: -16.1250057220459
    8. '(s' → logprob: -16.2500057220459
    9. 't' → logprob: -16.3750057220459
    10. ')' → logprob: -16.7500057220459

Token 298: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00015550498210359365
    2. '(' → logprob: -8.875155448913574
    3. ')' → logprob: -11.875155448913574
    4. ')(' → logprob: -12.125155448913574
    5. ' (' → logprob: -13.000155448913574
    6. '(
' → logprob: -15.000155448913574
    7. ')n' → logprob: -15.000155448913574
    8. '```' → logprob: -16.12515640258789
    9. 'n' → logprob: -17.25015640258789
    10. ',n' → logprob: -17.37515640258789

Token 299: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008105786982923746
    2. ',m' → logprob: -7.250810623168945
    3. '(matrix' → logprob: -9.375810623168945
    4. ',
' → logprob: -12.125810623168945
    5. ' ,' → logprob: -12.500810623168945
    6. ',n' → logprob: -12.500810623168945
    7. '(' → logprob: -13.500810623168945
    8. '(n' → logprob: -14.375810623168945
    9. '(m' → logprob: -15.000810623168945
    10. 'matrix' → logprob: -15.625810623168945

Token 300: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.10021336376667023
    2. ' matrix' → logprob: -2.3502132892608643
    3. '(matrix' → logprob: -12.225213050842285
    4. '	matrix' → logprob: -13.350213050842285
    5. '_matrix' → logprob: -16.2252140045166
    6. '.matrix' → logprob: -16.6002140045166
    7. ')' → logprob: -17.3502140045166
    8. ' ' → logprob: -17.9752140045166
    9. 'm' → logprob: -18.1002140045166
    10. '   ' → logprob: -18.1002140045166

Token 301: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00030805266578681767
    2. ')' → logprob: -8.1253080368042
    3. '(n' → logprob: -12.1253080368042
    4. ')))' → logprob: -12.7503080368042
    5. ' ))' → logprob: -13.6253080368042
    6. '))
' → logprob: -13.7503080368042
    7. ')n' → logprob: -14.6253080368042
    8. '()))' → logprob: -14.6253080368042
    9. '(' → logprob: -15.7503080368042
    10. ',n' → logprob: -15.8753080368042


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 299
Tokens correctement prédits (1ère position, stricte): 151
Tokens correctement prédits (1ère position, avec adaptation): 165
Tokens correctement prédits (top 10): 271
Précision stricte (1ère position): 50.50%
Précision adaptée (1ère position): 55.18%
Précision (top 10): 90.64%
================================================================================
