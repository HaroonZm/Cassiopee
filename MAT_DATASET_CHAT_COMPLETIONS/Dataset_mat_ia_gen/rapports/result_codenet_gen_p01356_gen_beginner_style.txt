================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n, m, a, b, p, q = map(int, input().split())

min_walk = m
for k in range(n):
    dist = p * a * k + q * b * k
    walk = abs(m - dist)
    if walk < min_walk:
        min_walk = walk

print(min_walk)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' m' (ID: 284)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14440903067588806
    2. ',' → logprob: -2.269408941268921
    3. ' =' → logprob: -3.519408941268921
    4. ';' → logprob: -8.0194091796875
    5. ')' → logprob: -8.1444091796875
    6. '```' → logprob: -8.2694091796875
    7. '.' → logprob: -9.0194091796875
    8. '#' → logprob: -9.5194091796875
    9. '*' → logprob: -9.7694091796875
    10. ' ' → logprob: -9.8944091796875

Token 4: ' a' (ID: 261)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4816083014011383
    2. '=' → logprob: -0.9816082715988159
    3. ',' → logprob: -4.9816083908081055
    4. ' ' → logprob: -8.481608390808105
    5. ')' → logprob: -8.731608390808105
    6. ';' → logprob: -8.856608390808105
    7. ' ,' → logprob: -9.981608390808105
    8. '.' → logprob: -10.856608390808105
    9. '_' → logprob: -11.856608390808105
    10. '  ' → logprob: -12.231608390808105

Token 5: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011627023108303547
    2. ' =' → logprob: -4.636627197265625
    3. ',' → logprob: -6.386627197265625
    4. '*' → logprob: -9.886627197265625
    5. ';' → logprob: -10.136627197265625
    6. ' ' → logprob: -10.886627197265625
    7. ')' → logprob: -10.886627197265625
    8. '[' → logprob: -11.511627197265625
    9. '+' → logprob: -11.761627197265625
    10. '```' → logprob: -12.011627197265625

Token 6: ' b' (ID: 287)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20186878740787506
    2. ' =' → logprob: -1.7018687725067139
    3. ',' → logprob: -7.826869010925293
    4. ' ' → logprob: -10.326869010925293
    5. ')' → logprob: -11.076869010925293
    6. ';' → logprob: -12.951869010925293
    7. '.' → logprob: -13.576869010925293
    8. '=input' → logprob: -14.326869010925293
    9. ' ,' → logprob: -14.826869010925293
    10. '_' → logprob: -14.826869010925293

Token 7: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.027859561145305634
    2. ' =' → logprob: -3.6528594493865967
    3. ',' → logprob: -6.652859687805176
    4. ' ' → logprob: -8.777859687805176
    5. ';' → logprob: -10.652859687805176
    6. '_' → logprob: -10.902859687805176
    7. '```' → logprob: -10.902859687805176
    8. ':' → logprob: -11.777859687805176
    9. ')' → logprob: -11.777859687805176
    10. '[' → logprob: -12.152859687805176

Token 8: ' p' (ID: 275)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03395525738596916
    2. ' =' → logprob: -3.4089553356170654
    3. ',' → logprob: -8.158955574035645
    4. ';' → logprob: -11.533955574035645
    5. ' ' → logprob: -12.158955574035645
    6. ')' → logprob: -13.158955574035645
    7. '=input' → logprob: -13.533955574035645
    8. '=

' → logprob: -14.033955574035645
    9. '.' → logprob: -14.283955574035645
    10. '=
' → logprob: -14.908955574035645

Token 9: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.010241996496915817
    2. ' =' → logprob: -4.635241985321045
    3. ',' → logprob: -7.760241985321045
    4. ' ' → logprob: -11.010242462158203
    5. ';' → logprob: -11.135242462158203
    6. ')' → logprob: -11.885242462158203
    7. '.' → logprob: -12.260242462158203
    8. '_' → logprob: -12.760242462158203
    9. '[' → logprob: -13.010242462158203
    10. '=

' → logprob: -13.135242462158203

Token 10: ' q' (ID: 2335)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03838559240102768
    2. ' =' → logprob: -3.2883856296539307
    3. ',' → logprob: -8.288385391235352
    4. ' ' → logprob: -9.788385391235352
    5. ')' → logprob: -11.038385391235352
    6. ';' → logprob: -11.413385391235352
    7. '.' → logprob: -13.538385391235352
    8. '=

' → logprob: -13.788385391235352
    9. '_' → logprob: -13.913385391235352
    10. '=
' → logprob: -14.038385391235352

Token 11: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.021730788052082062
    2. ' =' → logprob: -3.896730899810791
    3. ',' → logprob: -6.896730899810791
    4. ' ' → logprob: -8.896730422973633
    5. ';' → logprob: -12.021730422973633
    6. '_' → logprob: -12.146730422973633
    7. '+' → logprob: -12.521730422973633
    8. ')' → logprob: -12.646730422973633
    9. '#' → logprob: -12.771730422973633
    10. ':' → logprob: -12.896730422973633

Token 12: ' map' (ID: 4014)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16179046034812927
    2. ' ' → logprob: -2.786790370941162
    3. 'map' → logprob: -2.786790370941162
    4. ' map' → logprob: -3.786790370941162
    5. 'input' → logprob: -6.161790370941162
    6. '1' → logprob: -7.536790370941162
    7. '10' → logprob: -7.911790370941162
    8. ' input' → logprob: -8.53679084777832
    9. '5' → logprob: -10.03679084777832
    10. 'list' → logprob: -10.28679084777832

Token 13: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.395137220621109
    2. '<|end|>' → logprob: -1.1451371908187866
    3. '<|end|>' → logprob: -6.020137310028076
    4. ')' → logprob: -6.520137310028076
    5. '```' → logprob: -6.520137310028076
    6. '(lambda' → logprob: -7.020137310028076
    7. '(user' → logprob: -8.020136833190918
    8. '(token' → logprob: -8.270136833190918
    9. 'user' → logprob: -8.895136833190918
    10. '(input' → logprob: -9.520136833190918

Token 14: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3201673924922943
    2. ')' → logprob: -1.9451674222946167
    3. '<|end|>' → logprob: -2.320167303085327
    4. '(user' → logprob: -4.945167541503906
    5. '('' → logprob: -5.320167541503906
    6. '<|end|>' → logprob: -5.445167541503906
    7. ' (' → logprob: -5.570167541503906
    8. '(input' → logprob: -6.695167541503906
    9. '(n' → logprob: -6.820167541503906
    10. '(token' → logprob: -6.945167541503906

Token 15: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0659913420677185
    2. ' input' → logprob: -2.8159914016723633
    3. '(input' → logprob: -5.565991401672363
    4. ')' → logprob: -8.690991401672363
    5. '=input' → logprob: -12.190991401672363
    6. ',input' → logprob: -12.190991401672363
    7. 'str' → logprob: -12.940991401672363
    8. ' )' → logprob: -13.065991401672363
    9. '(' → logprob: -13.440991401672363
    10. '<input' → logprob: -13.815991401672363

Token 16: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5574448704719543
    2. ')' → logprob: -1.5574448108673096
    3. '()' → logprob: -2.3074448108673096
    4. '())' → logprob: -3.5574448108673096
    5. '(()' → logprob: -3.6824448108673096
    6. '('' → logprob: -3.6824448108673096
    7. '<|end|>' → logprob: -4.682445049285889
    8. '```' → logprob: -5.432445049285889
    9. '<|end|>' → logprob: -5.557445049285889
    10. '(""))' → logprob: -6.057445049285889

Token 17: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00254284730181098
    2. 'strip' → logprob: -6.002542972564697
    3. 'rstrip' → logprob: -9.877542495727539
    4. ')' → logprob: -11.877542495727539
    5. ' split' → logprob: -11.877542495727539
    6. '(split' → logprob: -14.127542495727539
    7. 'read' → logprob: -14.252542495727539
    8. 's' → logprob: -15.752542495727539
    9. 'spl' → logprob: -15.877542495727539
    10. '```' → logprob: -16.12754249572754

Token 18: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009119934402406216
    2. '())' → logprob: -4.884119987487793
    3. '))' → logprob: -7.634119987487793
    4. '()' → logprob: -8.009119987487793
    5. '(' → logprob: -8.009119987487793
    6. '`)' → logprob: -8.259119987487793
    7. '('' → logprob: -10.884119987487793
    8. '')' → logprob: -11.509119987487793
    9. '```' → logprob: -11.509119987487793
    10. ')`' → logprob: -11.759119987487793

Token 19: 'min' (ID: 1493)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.4697376489639282
    2. 'i' → logprob: -1.7197376489639282
    3. 'x' → logprob: -1.9697376489639282
    4. ',' → logprob: -2.4697375297546387
    5. ':' → logprob: -2.8447375297546387
    6. 'r' → logprob: -3.2197375297546387
    7. '#' → logprob: -3.2197375297546387
    8. '
' → logprob: -3.3447375297546387
    9. 'd' → logprob: -3.8447375297546387
    10. 'n' → logprob: -3.9697375297546387

Token 20: '_walk' (ID: 143639)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12771141529083252
    2. '_' → logprob: -2.127711296081543
    3. '_space' → logprob: -9.002711296081543
    4. '(
' → logprob: -9.627711296081543
    5. '_val' → logprob: -9.752711296081543
    6. '(a' → logprob: -9.877711296081543
    7. ')' → logprob: -10.127711296081543
    8. '(n' → logprob: -10.252711296081543
    9. '(s' → logprob: -10.377711296081543
    10. '(_)' → logprob: -10.377711296081543

Token 21: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.045710802078247
    2. '=' → logprob: -1.420710802078247
    3. ' =' → logprob: -1.670710802078247
    4. '_distance' → logprob: -1.795710802078247
    5. '_dist' → logprob: -3.420710802078247
    6. '_length' → logprob: -5.170710563659668
    7. '_len' → logprob: -5.920710563659668
    8. 'ing' → logprob: -6.295710563659668
    9. '_cost' → logprob: -6.420710563659668
    10. '_time' → logprob: -6.420710563659668

Token 22: ' m' (ID: 284)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.8429485559463501
    2. 'min' → logprob: -0.9679485559463501
    3. '(min' → logprob: -2.9679484367370605
    4. 'abs' → logprob: -3.2179484367370605
    5. 'a' → logprob: -3.3429484367370605
    6. ' abs' → logprob: -4.0929484367370605
    7. 'n' → logprob: -4.3429484367370605
    8. ' n' → logprob: -4.7179484367370605
    9. '(a' → logprob: -5.0929484367370605
    10. 'p' → logprob: -5.9679484367370605

Token 23: '
' (ID: 198)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -1.1165797710418701
    2. ' ' → logprob: -1.7415797710418701
    3. '*' → logprob: -1.8665797710418701
    4. '+' → logprob: -2.24157977104187
    5. '<|end|>' → logprob: -2.74157977104187
    6. ' +' → logprob: -2.86657977104187
    7. '-' → logprob: -3.61657977104187
    8. ' -' → logprob: -3.61657977104187
    9. ')' → logprob: -4.116580009460449
    10. ' //' → logprob: -5.241580009460449

Token 24: 'for' (ID: 1938)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0981402397155762
    2. '-' → logprob: -2.098140239715576
    3. '*' → logprob: -2.348140239715576
    4. ')' → logprob: -2.473140239715576
    5. '_' → logprob: -2.723140239715576
    6. '+' → logprob: -2.848140239715576
    7. ',' → logprob: -3.348140239715576
    8. ' //' → logprob: -3.348140239715576
    9. ' *' → logprob: -3.598140239715576
    10. '.' → logprob: -3.973140239715576

Token 25: ' k' (ID: 372)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4068465530872345
    2. ' _' → logprob: -1.531846523284912
    3. ' ' → logprob: -2.281846523284912
    4. '_' → logprob: -4.156846523284912
    5. ' p' → logprob: -9.03184700012207
    6. ' x' → logprob: -10.03184700012207
    7. 'i' → logprob: -10.28184700012207
    8. ' n' → logprob: -10.90684700012207
    9. '  ' → logprob: -11.15684700012207
    10. ' w' → logprob: -11.15684700012207

Token 26: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011012798640877008
    2. 'in' → logprob: -7.126101493835449
    3. ' ' → logprob: -8.25110149383545
    4. '_' → logprob: -11.87610149383545
    5. 'n' → logprob: -12.00110149383545
    6. '  ' → logprob: -12.37610149383545
    7. '	in' → logprob: -12.37610149383545
    8. ',' → logprob: -12.50110149383545
    9. ' i' → logprob: -13.62610149383545
    10. ' k' → logprob: -13.75110149383545

Token 27: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.02631458081305027
    2. 'range' → logprob: -3.6513144969940186
    3. ' ' → logprob: -11.901314735412598
    4. '	range' → logprob: -13.276314735412598
    5. '(range' → logprob: -13.401314735412598
    6. ' p' → logprob: -13.776314735412598
    7. ' n' → logprob: -14.276314735412598
    8. ' a' → logprob: -14.901314735412598
    9. ' xrange' → logprob: -14.901314735412598
    10. '.range' → logprob: -15.276314735412598

Token 28: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2327701449394226
    2. '(n' → logprob: -1.6077702045440674
    3. '(m' → logprob: -5.232769966125488
    4. '(p' → logprob: -6.982769966125488
    5. '(k' → logprob: -7.982769966125488
    6. '(min' → logprob: -7.982769966125488
    7. ' (' → logprob: -8.982769966125488
    8. '(q' → logprob: -9.232769966125488
    9. '(a' → logprob: -9.357769966125488
    10. '(s' → logprob: -11.107769966125488

Token 29: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4865584373474121
    2. '+' → logprob: -0.9865584373474121
    3. '):
' → logprob: -5.361558437347412
    4. ')' → logprob: -5.861558437347412
    5. ' +' → logprob: -5.986558437347412
    6. ' ):' → logprob: -6.736558437347412
    7. '-' → logprob: -7.361558437347412
    8. ',' → logprob: -8.61155891418457
    9. '+k' → logprob: -8.86155891418457
    10. ' -' → logprob: -10.23655891418457

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31470420956611633
    2. ' ' → logprob: -1.939704179763794
    3. ':' → logprob: -2.939704179763794
    4. '    ' → logprob: -3.064704179763794
    5. ' k' → logprob: -5.064704418182373
    6. ' :' → logprob: -5.064704418182373
    7. ',' → logprob: -5.814704418182373
    8. ' (' → logprob: -6.189704418182373
    9. '  ' → logprob: -6.814704418182373
    10. ''' → logprob: -6.814704418182373

Token 31: ' dist' (ID: 3601)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.49467018246650696
    2. '    ' → logprob: -2.1196701526641846
    3. ' k' → logprob: -2.1196701526641846
    4. '   ' → logprob: -3.1196701526641846
    5. ' if' → logprob: -3.7446701526641846
    6. ' p' → logprob: -3.9946701526641846
    7. 'k' → logprob: -4.869670391082764
    8. ' n' → logprob: -5.119670391082764
    9. 'p' → logprob: -5.744670391082764
    10. 'a' → logprob: -5.744670391082764

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05098416283726692
    2. '=' → logprob: -3.6759841442108154
    3. '_' → logprob: -4.1759843826293945
    4. '[' → logprob: -5.8009843826293945
    5. ' ' → logprob: -5.9259843826293945
    6. 'ance' → logprob: -7.1759843826293945
    7. '_k' → logprob: -7.4259843826293945
    8. '   ' → logprob: -8.175984382629395
    9. '  ' → logprob: -8.425984382629395
    10. ',' → logprob: -8.925984382629395

Token 33: ' p' (ID: 275)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.12056266516447067
    2. 'abs' → logprob: -2.3705625534057617
    3. ' p' → logprob: -4.995562553405762
    4. ' min' → logprob: -5.120562553405762
    5. ' a' → logprob: -6.745562553405762
    6. ' k' → logprob: -6.870562553405762
    7. ' (' → logprob: -6.870562553405762
    8. 'min' → logprob: -7.120562553405762
    9. 'a' → logprob: -7.495562553405762
    10. '(abs' → logprob: -7.745562553405762

Token 34: ' *' (ID: 425)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8041064739227295
    2. ' -' → logprob: -1.0541064739227295
    3. ' *' → logprob: -2.4291064739227295
    4. '+' → logprob: -2.9291064739227295
    5. '-' → logprob: -3.1791064739227295
    6. '+k' → logprob: -5.054106712341309
    7. '*' → logprob: -5.304106712341309
    8. '*q' → logprob: -5.679106712341309
    9. '*k' → logprob: -6.179106712341309
    10. '-k' → logprob: -6.804106712341309

Token 35: ' a' (ID: 261)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.08340666443109512
    2. '(k' → logprob: -3.333406686782837
    3. 'abs' → logprob: -3.708406686782837
    4. 'a' → logprob: -5.083406448364258
    5. '(abs' → logprob: -5.583406448364258
    6. 'min' → logprob: -6.583406448364258
    7. '(m' → logprob: -6.708406448364258
    8. ' abs' → logprob: -6.833406448364258
    9. '(a' → logprob: -6.833406448364258
    10. '(' → logprob: -7.083406448364258

Token 36: ' *' (ID: 425)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4406779110431671
    2. '+' → logprob: -1.0656778812408447
    3. '+k' → logprob: -4.815678119659424
    4. '*k' → logprob: -6.565678119659424
    5. '*' → logprob: -7.190678119659424
    6. ' -' → logprob: -7.690678119659424
    7. '+b' → logprob: -7.940678119659424
    8. ' *' → logprob: -8.065677642822266
    9. 'k' → logprob: -8.690677642822266
    10. '-' → logprob: -9.315677642822266

Token 37: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.12382254749536514
    2. ' k' → logprob: -3.3738224506378174
    3. '(k' → logprob: -3.3738224506378174
    4. 'b' → logprob: -3.4988224506378174
    5. ' (' → logprob: -5.7488226890563965
    6. 'q' → logprob: -5.7488226890563965
    7. '(' → logprob: -5.8738226890563965
    8. ' b' → logprob: -6.3738226890563965
    9. '+b' → logprob: -6.9988226890563965
    10. ' +' → logprob: -7.1238226890563965

Token 38: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2070971131324768
    2. ' +' → logprob: -1.707097053527832
    3. '<|end|>' → logprob: -5.332097053527832
    4. '-' → logprob: -7.957097053527832
    5. ' ' → logprob: -8.457097053527832
    6. ' -' → logprob: -8.957097053527832
    7. '<|end|>' → logprob: -10.082097053527832
    8. ')' → logprob: -10.832097053527832
    9. '+b' → logprob: -10.832097053527832
    10. '...' → logprob: -11.457097053527832

Token 39: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.348588228225708
    2. 'b' → logprob: -1.848588228225708
    3. ' q' → logprob: -2.473588228225708
    4. ' b' → logprob: -3.723588228225708
    5. ' (' → logprob: -4.848587989807129
    6. 'p' → logprob: -5.223587989807129
    7. '(q' → logprob: -5.223587989807129
    8. '(' → logprob: -5.473587989807129
    9. ' p' → logprob: -6.473587989807129
    10. '(b' → logprob: -6.848587989807129

Token 40: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6400008201599121
    2. ' *' → logprob: -0.7650008201599121
    3. '*b' → logprob: -6.140000820159912
    4. 'b' → logprob: -6.515000820159912
    5. ''' → logprob: -6.765000820159912
    6. '`' → logprob: -6.890000820159912
    7. '"' → logprob: -7.515000820159912
    8. '<|end|>' → logprob: -8.14000129699707
    9. '```' → logprob: -8.26500129699707
    10. ')' → logprob: -8.76500129699707

Token 41: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.3900977671146393
    2. 'b' → logprob: -1.140097737312317
    3. ' (' → logprob: -6.265097618103027
    4. '(' → logprob: -8.015097618103027
    5. ' ' → logprob: -8.390097618103027
    6. ' a' → logprob: -8.390097618103027
    7. 'a' → logprob: -8.515097618103027
    8. '(b' → logprob: -9.265097618103027
    9. ' m' → logprob: -9.765097618103027
    10. ')' → logprob: -10.515097618103027

Token 42: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1703045666217804
    2. '*(' → logprob: -2.170304536819458
    3. '*' → logprob: -3.420304536819458
    4. '*k' → logprob: -5.420304775238037
    5. '(' → logprob: -6.545304775238037
    6. '(k' → logprob: -6.795304775238037
    7. '<|end|>' → logprob: -7.170304775238037
    8. ' (' → logprob: -7.170304775238037
    9. ' +' → logprob: -7.795304775238037
    10. ' *(' → logprob: -7.920304775238037

Token 43: ' k' (ID: 372)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.36988094449043274
    2. '(k' → logprob: -1.4948809146881104
    3. 'k' → logprob: -3.6198809146881104
    4. '(n' → logprob: -3.6198809146881104
    5. '(' → logprob: -4.2448811531066895
    6. 'm' → logprob: -4.9948811531066895
    7. ' (' → logprob: -5.2448811531066895
    8. '((' → logprob: -6.3698811531066895
    9. '(abs' → logprob: -7.1198811531066895
    10. '(max' → logprob: -7.2448811531066895

Token 44: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.49654045701026917
    2. '<|end|>' → logprob: -1.6215404272079468
    3. ' ' → logprob: -2.3715405464172363
    4. ' +' → logprob: -2.4965405464172363
    5. '
' → logprob: -5.371540546417236
    6. ' 
' → logprob: -5.621540546417236
    7. '<|end|>' → logprob: -6.371540546417236
    8. ' if' → logprob: -6.371540546417236
    9. '+
' → logprob: -6.746540546417236
    10. ')' → logprob: -6.871540546417236

Token 45: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: ' walk' (ID: 5229)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22995123267173767
    2. ' +' → logprob: -2.7299511432647705
    3. '=' → logprob: -2.9799511432647705
    4. '+' → logprob: -3.2299511432647705
    5. '   ' → logprob: -4.47995138168335
    6. '*' → logprob: -4.60495138168335
    7. ' *' → logprob: -4.97995138168335
    8. ' +=' → logprob: -5.22995138168335
    9. ' ' → logprob: -5.97995138168335
    10. '_' → logprob: -5.97995138168335

Token 48: ' abs' (ID: 8443)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.6834292411804199
    2. ' min' → logprob: -1.30842924118042
    3. 'm' → logprob: -2.18342924118042
    4. 'min' → logprob: -2.80842924118042
    5. ' abs' → logprob: -4.05842924118042
    6. ' p' → logprob: -4.43342924118042
    7. 'abs' → logprob: -5.18342924118042
    8. ' dist' → logprob: -5.68342924118042
    9. ' (' → logprob: -5.80842924118042
    10. ' ' → logprob: -5.93342924118042

Token 49: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.3484838306903839
    2. '(min' → logprob: -1.4734838008880615
    3. '(' → logprob: -3.0984838008880615
    4. '(dist' → logprob: -4.473484039306641
    5. '(n' → logprob: -5.098484039306641
    6. '(k' → logprob: -6.598484039306641
    7. '(p' → logprob: -7.348484039306641
    8. '(w' → logprob: -8.47348403930664
    9. '((' → logprob: -9.59848403930664
    10. '(s' → logprob: -9.97348403930664

Token 50: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.11340507119894028
    2. '-' → logprob: -2.2384049892425537
    3. '-k' → logprob: -8.238405227661133
    4. ' ' → logprob: -8.488405227661133
    5. ')' → logprob: -9.613405227661133
    6. '-n' → logprob: -10.738405227661133
    7. '  ' → logprob: -11.988405227661133
    8. '<|end|>' → logprob: -12.613405227661133
    9. '-min' → logprob: -13.863405227661133
    10. ' )' → logprob: -13.863405227661133

Token 51: ' dist' (ID: 3601)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5956510901451111
    2. ' k' → logprob: -1.5956511497497559
    3. 'dist' → logprob: -1.9706511497497559
    4. ' dist' → logprob: -2.470651149749756
    5. ' (' → logprob: -5.095651149749756
    6. '(k' → logprob: -5.845651149749756
    7. ' n' → logprob: -6.345651149749756
    8. '(dist' → logprob: -6.595651149749756
    9. 'a' → logprob: -6.720651149749756
    10. ' p' → logprob: -6.845651149749756

Token 52: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.44574936106801e-05
    2. ' )' → logprob: -10.00007438659668
    3. ')
' → logprob: -11.00007438659668
    4. ')**' → logprob: -12.62507438659668
    5. '))' → logprob: -13.12507438659668
    6. ')`' → logprob: -13.50007438659668
    7. ' ' → logprob: -14.00007438659668
    8. ')

' → logprob: -14.12507438659668
    9. '   ' → logprob: -14.50007438659668
    10. '`)' → logprob: -14.62507438659668

Token 53: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 54: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27353739738464355
    2. ' if' → logprob: -1.5235373973846436
    3. 'if' (adapté à ' if') → logprob: -4.898537635803223
    4. ' ' → logprob: -5.023537635803223
    5. '```' → logprob: -6.273537635803223
    6. '    
' → logprob: -6.523537635803223
    7. '<|end|>' → logprob: -6.898537635803223
    8. '	if' → logprob: -7.148537635803223
    9. '  ' → logprob: -7.523537635803223
    10. ')' → logprob: -8.023537635803223

Token 55: ' walk' (ID: 5229)
  Prédit: ' walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' walk' → logprob: -0.00016074994346126914
    2. 'walk' → logprob: -8.750161170959473
    3. ' ' → logprob: -13.625161170959473
    4. ' walkthrough' → logprob: -14.875161170959473
    5. ' w' → logprob: -15.125161170959473
    6. ' ' → logprob: -15.375161170959473
    7. '_walk' → logprob: -16.750160217285156
    8. '  ' → logprob: -17.125160217285156
    9. ' min' → logprob: -17.875160217285156
    10. '.walk' → logprob: -18.250160217285156

Token 56: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.005141846369951963
    2. '<' → logprob: -5.380141735076904
    3. ' <=' → logprob: -8.005142211914062
    4. ' ' → logprob: -8.880142211914062
    5. ' >' → logprob: -11.005142211914062
    6. ' >=' → logprob: -12.005142211914062
    7. '   ' → logprob: -12.380142211914062
    8. ' ==' → logprob: -12.505142211914062
    9. '  ' → logprob: -13.005142211914062
    10. ')' → logprob: -13.005142211914062

Token 57: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.1602318435907364
    2. ' min' → logprob: -1.9102318286895752
    3. 'walk' → logprob: -13.035231590270996
    4. '=min' → logprob: -13.035231590270996
    5. '	min' → logprob: -13.160231590270996
    6. ' walk' → logprob: -14.660231590270996
    7. '(min' → logprob: -15.535231590270996
    8. '_min' → logprob: -15.785231590270996
    9. '|min' → logprob: -15.785231590270996
    10. ':min' → logprob: -16.035232543945312

Token 58: '_walk' (ID: 143639)
  Prédit: '_walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_walk' → logprob: -4.251091377227567e-05
    2. '_' → logprob: -10.125042915344238
    3. '_w' → logprob: -13.375042915344238
    4. ' _' → logprob: -15.625042915344238
    5. '_wrap' → logprob: -16.125041961669922
    6. '_watch' → logprob: -16.375041961669922
    7. '_write' → logprob: -16.625041961669922
    8. '__' → logprob: -16.625041961669922
    9. '_

' → logprob: -16.875041961669922
    10. '_run' → logprob: -17.125041961669922

Token 59: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001864976016804576
    2. ':
' → logprob: -6.626864910125732
    3. '       ' → logprob: -8.12686538696289
    4. '   ' → logprob: -8.87686538696289
    5. '):' → logprob: -10.50186538696289
    6. ' :' → logprob: -10.75186538696289
    7. '=' → logprob: -11.12686538696289
    8. ':min' → logprob: -11.12686538696289
    9. ' and' → logprob: -12.50186538696289
    10. '):
' → logprob: -13.00186538696289

Token 60: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025159848853945732
    2. ' min' → logprob: -4.77515983581543
    3. '   ' → logprob: -4.77515983581543
    4. '```' → logprob: -5.52515983581543
    5. 'min' → logprob: -5.77515983581543
    6. '	min' → logprob: -7.27515983581543
    7. '<|end|>' → logprob: -10.02515983581543
    8. '(min' → logprob: -10.65015983581543
    9. '``' → logprob: -10.90015983581543
    10. '
' → logprob: -11.27515983581543

Token 61: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.47561919689178467
    2. ' min' → logprob: -0.9756191968917847
    3. '   ' → logprob: -7.600619316101074
    4. '       ' → logprob: -7.850619316101074
    5. '```' → logprob: -7.850619316101074
    6. '           ' → logprob: -9.100619316101074
    7. '``' → logprob: -10.100619316101074
    8. '	min' → logprob: -10.475619316101074
    9. 'walk' → logprob: -10.975619316101074
    10. '    ' → logprob: -11.225619316101074

Token 62: '_walk' (ID: 143639)
  Prédit: '_walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_walk' → logprob: -7.107425062713446e-06
    2. '_' → logprob: -12.250006675720215
    3. '_w' → logprob: -14.000006675720215
    4. 'walk' → logprob: -14.750006675720215
    5. '_wrap' → logprob: -15.250006675720215
    6. 'Walk' → logprob: -15.375006675720215
    7. '_run' → logprob: -16.12500762939453
    8. '_watch' → logprob: -16.37500762939453
    9. '_write' → logprob: -16.62500762939453
    10. '\' → logprob: -17.12500762939453

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06993743777275085
    2. '=' → logprob: -2.6949374675750732
    3. ' ' → logprob: -15.194937705993652
    4. '<|end|>' → logprob: -15.569937705993652
    5. ',' → logprob: -16.194936752319336
    6. '＝' → logprob: -16.319936752319336
    7. ' =
' → logprob: -16.444936752319336
    8. ')' → logprob: -16.694936752319336
    9. '=min' → logprob: -16.819936752319336
    10. 's' → logprob: -17.194936752319336

Token 64: ' walk' (ID: 5229)
  Prédit: 'walk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'walk' → logprob: -0.10020893067121506
    2. ' walk' → logprob: -2.3502089977264404
    3. '   ' → logprob: -14.35020923614502
    4. '_walk' → logprob: -14.85020923614502
    5. ' walkthrough' → logprob: -14.97520923614502
    6. 'w' → logprob: -15.72520923614502
    7. ' ' → logprob: -15.85020923614502
    8. '```' → logprob: -15.97520923614502
    9. '  ' → logprob: -16.350208282470703
    10. 'wa' → logprob: -16.475208282470703

Token 65: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 67: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.02976333536207676
    2. '(' → logprob: -3.5297632217407227
    3. '(max' → logprob: -11.529763221740723
    4. '(m' → logprob: -13.529763221740723
    5. 'min' → logprob: -14.404763221740723
    6. '()' → logprob: -14.654763221740723
    7. '(`' → logprob: -15.904763221740723
    8. '('' → logprob: -16.02976417541504
    9. ' (' → logprob: -16.02976417541504
    10. '(print' → logprob: -16.40476417541504

Token 68: '_walk' (ID: 143639)
  Prédit: '_walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_walk' → logprob: -3.128163257315464e-07
    2. ')' → logprob: -16.375
    3. 'walk' → logprob: -16.375
    4. '_' → logprob: -16.5
    5. '_w' → logprob: -16.875
    6. '_)' → logprob: -17.5
    7. '_wrap' → logprob: -17.875
    8. '_watch' → logprob: -18.375
    9. '_print' → logprob: -18.75
    10. '_write' → logprob: -19.0

Token 69: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.45848218582978e-06
    2. ' )' → logprob: -13.75000286102295
    3. ')
' → logprob: -14.37500286102295
    4. '))' → logprob: -14.62500286102295
    5. '+' → logprob: -16.625001907348633
    6. ')`' → logprob: -17.000001907348633
    7. '`)' → logprob: -17.125001907348633
    8. '')' → logprob: -17.250001907348633
    9. ')))' → logprob: -18.375001907348633
    10. '#' → logprob: -18.375001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 67
Tokens correctement prédits (1ère position, stricte): 19
Tokens correctement prédits (1ère position, avec adaptation): 20
Tokens correctement prédits (top 10): 45
Précision stricte (1ère position): 28.36%
Précision adaptée (1ère position): 29.85%
Précision (top 10): 67.16%
================================================================================
