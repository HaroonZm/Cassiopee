================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:13:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)
input=sys.stdin.readline

def gcd(a,b):
    while b:
        a,b=b,a%b
    return a

def lcm(a,b):
    return a*b//gcd(a,b)

while True:
    n=int(input())
    if n==0:
        break
    p=[0]*(n+1)
    q=[0]*(n+1)
    r=[0]*(n+1)
    b=[0]*(n+1)
    for i in range(1,n+1):
        pp,qq,rr,bb=map(int,input().split())
        p[i]=pp
        q[i]=qq
        r[i]=rr
        b[i]=bb

    # dp[i]: (weight of balanced subtree rooted at i with the minimal weights assignment)
    # weight[i]: integer weight assigned to the node
    # We'll do post-order dfs to compute minimal weights

    weight = [0]*(n+1)
    memo = {}

    def dfs(x):
        if x==0:
            return 1  # weight of a single weight is 1

        if x in memo:
            return memo[x]

        lw = dfs(r[x])  # left weight (red side)
        rw = dfs(b[x])  # right weight (blue side)

        # We want integer weights a,b such that:
        # a*p[x] = b*q[x], a >= lw, b >= rw
        # minimal total weight a + b

        # start from lw and rw, scale to match ratio:
        # Find minimal k so that:
        # a = p[x]*k >= lw
        # b = q[x]*k >= rw
        # so k >= ceil(lw / p[x]) and k >= ceil(rw / q[x])

        # but since lw,rw and p[x],q[x] are integers, we can do:
        # find k such that max((lw + p[x]-1)//p[x], (rw + q[x]-1)//q[x]) <= k
        # then a = p[x]*k, b = q[x]*k

        a_min = (lw + p[x]-1)//p[x]
        b_min = (rw + q[x]-1)//q[x]
        k = max(a_min,b_min)
        a = p[x]*k
        b = q[x]*k
        memo[x] = a + b
        return memo[x]

    print(dfs(1))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -3.523948907968588e-05
    2. ' .' → logprob: -11.875035285949707
    3. '.import' → logprob: -12.125035285949707
    4. '.user' → logprob: -12.875035285949707
    5. '.readline' → logprob: -12.875035285949707
    6. '.`' → logprob: -13.125035285949707
    7. '.stdout' → logprob: -13.625035285949707
    8. '[' → logprob: -13.625035285949707
    9. '.exit' → logprob: -13.875035285949707
    10. '​.' → logprob: -14.125035285949707

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.7622331976890564
    2. 's' → logprob: -1.1372332572937012
    3. 't' → logprob: -2.887233257293701
    4. 'sys' → logprob: -3.262233257293701
    5. 'set' → logprob: -3.637233257293701
    6. 'soft' → logprob: -4.012233257293701
    7. 'default' → logprob: -4.262233257293701
    8. '_' → logprob: -5.012233257293701
    9. 'ex' → logprob: -5.012233257293701
    10. 'suffix' → logprob: -5.137233257293701

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.00019209683523513377
    2. 'ursive' → logprob: -8.875191688537598
    3. 'urs' → logprob: -11.000191688537598
    4. 'ur' → logprob: -11.750191688537598
    5. 'limit' → logprob: -12.000191688537598
    6. 'urf' → logprob: -12.125191688537598
    7. '_limit' → logprob: -12.625191688537598
    8. 'urse' → logprob: -13.000191688537598
    9. 'ursor' → logprob: -13.000191688537598
    10. 'ursively' → logprob: -13.250191688537598

Token 7: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.5803260207176208
    2. '_limit' → logprob: -0.8303260207176208
    3. '_depth' → logprob: -5.580326080322266
    4. 'depth' → logprob: -7.955326080322266
    5. '_' → logprob: -9.705326080322266
    6. ' limit' → logprob: -10.080326080322266
    7. 'lim' → logprob: -10.705326080322266
    8. '(' → logprob: -11.205326080322266
    9. '_rate' → logprob: -11.205326080322266
    10. '_limits' → logprob: -11.330326080322266

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.778209353797138e-05
    2. '(
' → logprob: -10.500067710876465
    3. ' (' → logprob: -11.375067710876465
    4. '40' → logprob: -11.875067710876465
    5. '(

' → logprob: -12.375067710876465
    6. '((' → logprob: -12.750067710876465
    7. '```' → logprob: -12.750067710876465
    8. '('' → logprob: -13.000067710876465
    9. '(.' → logprob: -13.000067710876465
    10. '("("' → logprob: -13.250067710876465

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.07906417548656464
    2. '100' → logprob: -2.579064130783081
    3. ' ' → logprob: -9.07906436920166
    4. '500' → logprob: -10.45406436920166
    5. '300' → logprob: -11.07906436920166
    6. '999' → logprob: -12.07906436920166
    7. '  ' → logprob: -12.45406436920166
    8. '   ' → logprob: -13.32906436920166
    9. '1' → logprob: -13.70406436920166
    10. '150' → logprob: -13.82906436920166

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6703574657440186
    2. '000' → logprob: -0.9203574657440186
    3. '00' → logprob: -2.4203574657440186
    4. '6' → logprob: -7.295357704162598
    5. '4' → logprob: -8.045357704162598
    6. '**' → logprob: -9.045357704162598
    7. '2' → logprob: -10.295357704162598
    8. '5' → logprob: -10.545357704162598
    9. '```' → logprob: -11.670357704162598
    10. '3' → logprob: -11.795357704162598

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0028600357472896576
    2. '6' → logprob: -6.252860069274902
    3. '9' → logprob: -7.002860069274902
    4. '8' → logprob: -10.752860069274902
    5. ' ' → logprob: -15.502860069274902
    6. '(' → logprob: -16.502859115600586
    7. '```' → logprob: -17.377859115600586
    8. '3' → logprob: -18.377859115600586
    9. ')' → logprob: -19.002859115600586
    10. '0' → logprob: -19.502859115600586

Token 12: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. ' )' → logprob: -13.12500286102295
    3. '))' → logprob: -13.75000286102295
    4. ')
' → logprob: -16.750003814697266
    5. ')))' → logprob: -18.000003814697266
    6. ' ' → logprob: -18.125003814697266
    7. '）' → logprob: -18.625003814697266
    8. '),' → logprob: -18.750003814697266
    9. ')`' → logprob: -18.750003814697266
    10. '')' → logprob: -19.000003814697266

Token 13: 'input' (ID: 2586)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4553336501121521
    2. '\' → logprob: -2.330333709716797
    3. '

' → logprob: -2.830333709716797
    4. '\n' → logprob: -2.955333709716797
    5. '(' → logprob: -3.080333709716797
    6. 'def' → logprob: -3.455333709716797
    7. '```' → logprob: -3.705333709716797
    8. '
' → logprob: -3.955333709716797
    9. '' → logprob: -4.705333709716797
    10. ')' → logprob: -4.705333709716797

Token 14: '=sys' (ID: 149200)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.054386552423238754
    2. '()' → logprob: -3.054386615753174
    3. '.' → logprob: -6.054386615753174
    4. ')' → logprob: -6.554386615753174
    5. '().' → logprob: -7.679386615753174
    6. '('' → logprob: -7.929386615753174
    7. '40' → logprob: -8.304386138916016
    8. '```' → logprob: -8.554386138916016
    9. '("("' → logprob: -8.929386138916016
    10. ''' → logprob: -9.429386138916016

Token 15: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03189781308174133
    2. '.readline' → logprob: -4.031898021697998
    3. ' .' → logprob: -4.531898021697998
    4. '.stdin' → logprob: -5.906898021697998
    5. '.stdout' → logprob: -10.15689754486084
    6. '.input' → logprob: -10.53189754486084
    7. '.read' → logprob: -10.90689754486084
    8. '.get' → logprob: -11.28189754486084
    9. '.​' → logprob: -11.78189754486084
    10. '```' → logprob: -12.15689754486084

Token 16: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.012224121019244194
    2. '.' → logprob: -4.512224197387695
    3. '.read' → logprob: -6.762224197387695
    4. '.Read' → logprob: -11.887224197387695
    5. '.readlines' → logprob: -12.012224197387695
    6. 'read' → logprob: -13.512224197387695
    7. ' readline' → logprob: -14.012224197387695
    8. '.buffer' → logprob: -14.512224197387695
    9. '.\' → logprob: -14.637224197387695
    10. '.READ' → logprob: -14.887224197387695

Token 17: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07044640928506851
    2. '()
' → logprob: -3.195446491241455
    3. '()

' → logprob: -3.945446491241455
    4. '(' → logprob: -5.570446491241455
    5. '
' → logprob: -6.570446491241455
    6. '()\' → logprob: -7.195446491241455
    7. '(
' → logprob: -7.695446491241455
    8. '

' → logprob: -7.695446491241455
    9. 'def' → logprob: -8.320446014404297
    10. '\n' → logprob: -8.570446014404297

Token 18: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12757857143878937
    2. 'n' → logprob: -2.1275784969329834
    3. 'd' → logprob: -7.6275787353515625
    4. 'N' → logprob: -9.752578735351562
    5. '```' → logprob: -10.377578735351562
    6. '\' → logprob: -10.627578735351562
    7. 'a' → logprob: -10.877578735351562
    8. '(n' → logprob: -12.002578735351562
    9. 't' → logprob: -12.252578735351562
    10. 'for' → logprob: -12.502578735351562

Token 19: ' gcd' (ID: 106918)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.29079678654670715
    2. ' factorial' → logprob: -1.6657967567443848
    3. ' main' → logprob: -3.2907967567443848
    4. ' solve' → logprob: -4.915796756744385
    5. ' ' → logprob: -5.040796756744385
    6. ' fibonacci' → logprob: -5.665796756744385
    7. ' factor' → logprob: -5.790796756744385
    8. ' f' → logprob: -6.415796756744385
    9. ' bfs' → logprob: -7.165796756744385
    10. ' binary' → logprob: -7.165796756744385

Token 20: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001100683817639947
    2. '(a' → logprob: -7.376100540161133
    3. ' (' → logprob: -8.626100540161133
    4. '<|end|>' → logprob: -9.001100540161133
    5. '(x' → logprob: -10.126100540161133
    6. '<|end|>' → logprob: -10.501100540161133
    7. '(n' → logprob: -10.751100540161133
    8. '("("' → logprob: -11.376100540161133
    9. '(user' → logprob: -11.501100540161133
    10. '```' → logprob: -11.876100540161133

Token 21: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010816591791808605
    2. ',b' → logprob: -4.63581657409668
    3. ',a' → logprob: -7.51081657409668
    4. ' ,' → logprob: -7.63581657409668
    5. ',g' → logprob: -11.88581657409668
    6. ',f' → logprob: -12.51081657409668
    7. ',m' → logprob: -12.63581657409668
    8. ',c' → logprob: -12.76081657409668
    9. ',n' → logprob: -12.88581657409668
    10. ',p' → logprob: -13.01081657409668

Token 22: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0023430653382092714
    2. ')' → logprob: -6.12734317779541
    3. '):
' → logprob: -9.37734317779541
    4. ',' → logprob: -10.00234317779541
    5. ' ):' → logprob: -11.00234317779541
    6. ':' → logprob: -12.00234317779541
    7. '   ' → logprob: -13.75234317779541
    8. '):
' → logprob: -13.87734317779541
    9. ' ' → logprob: -14.37734317779541
    10. '),' → logprob: -14.87734317779541

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013857292011380196
    2. ' if' → logprob: -4.513857364654541
    3. ' return' → logprob: -6.763857364654541
    4. ' ' → logprob: -7.388857364654541
    5. '	if' → logprob: -8.138856887817383
    6. '	return' → logprob: -8.388856887817383
    7. ' 
' → logprob: -8.763856887817383
    8. 'if' → logprob: -9.388856887817383
    9. '    
' → logprob: -9.888856887817383
    10. ' while' → logprob: -10.263856887817383

Token 24: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2688243091106415
    2. ' if' → logprob: -1.5188243389129639
    3. ' return' → logprob: -4.893824100494385
    4. ' while' → logprob: -5.518824100494385
    5. 'if' → logprob: -6.018824100494385
    6. '    ' → logprob: -6.768824100494385
    7. 'return' → logprob: -7.518824100494385
    8. ' ' → logprob: -8.018824577331543
    9. ' 
' → logprob: -8.393824577331543
    10. '    
' → logprob: -8.643824577331543

Token 25: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5801181197166443
    2. 'b' → logprob: -0.8301181197166443
    3. 'a' → logprob: -5.955118179321289
    4. ' a' → logprob: -6.455118179321289
    5. '	b' → logprob: -13.205118179321289
    6. ' ' → logprob: -13.330118179321289
    7. '_b' → logprob: -14.455118179321289
    8. '(b' → logprob: -14.830118179321289
    9. '(a' → logprob: -15.580118179321289
    10. '   ' → logprob: -15.705118179321289

Token 26: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012463049497455359
    2. '!=' → logprob: -7.626246452331543
    3. ' !=' → logprob: -7.751246452331543
    4. ' :' → logprob: -9.001246452331543
    5. ':
' → logprob: -9.501246452331543
    6. ' and' → logprob: -9.876246452331543
    7. '>' → logprob: -10.126246452331543
    8. '>:' → logprob: -11.626246452331543
    9. '):' → logprob: -11.876246452331543
    10. 'and' → logprob: -11.876246452331543

Token 27: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06226668879389763
    2. 'a' → logprob: -3.1872665882110596
    3. '   ' → logprob: -4.437266826629639
    4. ' a' → logprob: -5.062266826629639
    5. '    ' → logprob: -8.93726634979248
    6. '```' → logprob: -9.06226634979248
    7. ',' → logprob: -9.31226634979248
    8. ',a' → logprob: -9.43726634979248
    9. '<|end|>' → logprob: -10.06226634979248
    10. '0' → logprob: -10.18726634979248

Token 28: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.38690707087516785
    2. ' a' → logprob: -1.1369071006774902
    3. '	a' → logprob: -11.386906623840332
    4. '   ' → logprob: -11.886906623840332
    5. 't' → logprob: -12.386906623840332
    6. '       ' → logprob: -12.386906623840332
    7. '>a' → logprob: -13.136906623840332
    8. 'temp' → logprob: -13.261906623840332
    9. '```' → logprob: -13.386906623840332
    10. '    ' → logprob: -13.386906623840332

Token 29: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005550812464207411
    2. ',b' → logprob: -5.255550861358643
    3. ' ,' → logprob: -8.880550384521484
    4. ',a' → logprob: -9.755550384521484
    5. '%b' → logprob: -10.130550384521484
    6. '%,' → logprob: -10.755550384521484
    7. '%=' → logprob: -10.755550384521484
    8. ' %=' → logprob: -11.255550384521484
    9. '%' → logprob: -11.505550384521484
    10. ',g' → logprob: -12.505550384521484

Token 30: '=b' (ID: 49769)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.019025791436433792
    2. ' =' → logprob: -4.019025802612305
    3. '=b' → logprob: -7.144025802612305
    4. '=a' → logprob: -9.394025802612305
    5. '=s' → logprob: -14.519025802612305
    6. '=os' → logprob: -15.644025802612305
    7. '=
' → logprob: -15.769025802612305
    8. '=user' → logprob: -15.769025802612305
    9. '=c' → logprob: -15.894025802612305
    10. '=}' → logprob: -16.144025802612305

Token 31: ',a' (ID: 26776)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0280609130859375
    2. ',a' → logprob: -4.0280609130859375
    3. ' ,' → logprob: -4.6530609130859375
    4. '<|end|>' → logprob: -9.278060913085938
    5. 'a' → logprob: -9.528060913085938
    6. ',b' → logprob: -9.778060913085938
    7. ' a' → logprob: -10.403060913085938
    8. ' ' → logprob: -10.528060913085938
    9. '```' → logprob: -11.028060913085938
    10. '%' → logprob: -12.778060913085938

Token 32: '%b' (ID: 148937)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.20944257080554962
    2. '%b' → logprob: -1.7094426155090332
    3. ' %' → logprob: -4.834442615509033
    4. '<|end|>' → logprob: -10.709442138671875
    5. '%B' → logprob: -11.834442138671875
    6. '%e' → logprob: -12.459442138671875
    7. '%x' → logprob: -12.834442138671875
    8. '%i' → logprob: -13.209442138671875
    9. '%c' → logprob: -13.584442138671875
    10. '%n' → logprob: -13.834442138671875

Token 33: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 34: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 35: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7447883486747742
    2. '   ' → logprob: -1.619788408279419
    3. ' ' → logprob: -1.869788408279419
    4. 'return' (adapté à ' return') → logprob: -2.119788408279419
    5. '<|end|>' → logprob: -3.244788408279419
    6. ' 
' → logprob: -4.86978816986084
    7. '  ' → logprob: -7.11978816986084
    8. '    ' → logprob: -7.11978816986084
    9. '    
' → logprob: -7.11978816986084
    10. '```' → logprob: -7.24478816986084

Token 36: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10020720958709717
    2. ' a' → logprob: -2.3502073287963867
    3. '	a' → logprob: -14.725207328796387
    4. ' ' → logprob: -15.850207328796387
    5. '_a' → logprob: -18.35020637512207
    6. ' ' → logprob: -18.85020637512207
    7. '   ' → logprob: -19.35020637512207
    8. '  ' → logprob: -19.47520637512207
    9. ''a' → logprob: -19.47520637512207
    10. ')a' → logprob: -19.60020637512207

Token 37: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02245233580470085
    2. '
' → logprob: -4.272452354431152
    3. '```' → logprob: -5.272452354431152
    4. '<|end|>' → logprob: -6.522452354431152
    5. '

' → logprob: -8.022452354431152
    6. '    
' → logprob: -8.147452354431152
    7. '\n' → logprob: -8.397452354431152
    8. '' → logprob: -8.647452354431152
    9. '\' → logprob: -8.772452354431152
    10. '  
' → logprob: -9.022452354431152

Token 38: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0004653465002775192
    2. 'n' → logprob: -8.375465393066406
    3. 'a' → logprob: -9.625465393066406
    4. '```' → logprob: -9.625465393066406
    5. '
' → logprob: -10.000465393066406
    6. '\' → logprob: -10.875465393066406
    7. '\n' → logprob: -11.125465393066406
    8. '  
' → logprob: -12.250465393066406
    9. 'class' → logprob: -12.375465393066406
    10. ' def' → logprob: -12.750465393066406

Token 39: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.017664484679698944
    2. 'l' → logprob: -4.142664432525635
    3. ' main' → logprob: -6.642664432525635
    4. ' ' → logprob: -9.392664909362793
    5. ' pow' → logprob: -9.642664909362793
    6. ' solve' → logprob: -10.392664909362793
    7. '   ' → logprob: -10.642664909362793
    8. ' dfs' → logprob: -10.642664909362793
    9. '  ' → logprob: -11.017664909362793
    10. ' fib' → logprob: -11.142664909362793

Token 40: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -5.800739018013701e-05
    2. 'c' → logprob: -10.2500581741333
    3. 'cms' → logprob: -11.0000581741333
    4. '   ' → logprob: -12.3750581741333
    5. 'l' → logprob: -14.6250581741333
    6. 'cmp' → logprob: -14.8750581741333
    7. 'cmd' → logprob: -15.7500581741333
    8. 'cd' → logprob: -15.8750581741333
    9. 'm' → logprob: -16.250057220458984
    10. 'CM' → logprob: -16.750057220458984

Token 41: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.018151111900806427
    2. '(' → logprob: -4.01815128326416
    3. ' (' → logprob: -14.01815128326416
    4. '(A' → logprob: -16.018150329589844
    5. '(x' → logprob: -16.393150329589844
    6. '(
' → logprob: -17.018150329589844
    7. '\(' → logprob: -17.643150329589844
    8. '(i' → logprob: -17.768150329589844
    9. '(s' → logprob: -18.643150329589844
    10. '(n' → logprob: -18.643150329589844

Token 42: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.38688933849334717
    2. ',' → logprob: -1.1368893384933472
    3. ',a' → logprob: -11.511889457702637
    4. ' ,' → logprob: -11.886889457702637
    5. ',int' → logprob: -15.511889457702637
    6. ',d' → logprob: -15.886889457702637
    7. ',p' → logprob: -15.886889457702637
    8. ',c' → logprob: -16.01188850402832
    9. ',l' → logprob: -16.13688850402832
    10. ',y' → logprob: -16.51188850402832

Token 43: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -9.960946772480384e-05
    2. '):
' → logprob: -9.625099182128906
    3. ')' → logprob: -10.500099182128906
    4. ',' → logprob: -13.125099182128906
    5. ':' → logprob: -13.125099182128906
    6. '   ' → logprob: -14.250099182128906
    7. '):
' → logprob: -14.500099182128906
    8. ' ):' → logprob: -15.000099182128906
    9. '),' → logprob: -16.000099182128906
    10. ')：' → logprob: -16.500099182128906

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0023994361981749535
    2. ' return' → logprob: -6.127399444580078
    3. 'return' → logprob: -9.127399444580078
    4. ' a' → logprob: -9.752399444580078
    5. '    ' → logprob: -10.502399444580078
    6. ' (' → logprob: -12.127399444580078
    7. 'a' → logprob: -12.627399444580078
    8. '```' → logprob: -12.627399444580078
    9. '   ' → logprob: -13.002399444580078
    10. ' ```' → logprob: -13.377399444580078

Token 45: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6121875047683716
    2. '   ' → logprob: -1.1121875047683716
    3. 'return' (adapté à ' return') → logprob: -2.362187385559082
    4. ' a' → logprob: -3.612187385559082
    5. 'a' → logprob: -4.862187385559082
    6. '    ' → logprob: -11.237187385559082
    7. ' (' → logprob: -11.362187385559082
    8. '```' → logprob: -11.362187385559082
    9. '(a' → logprob: -11.737187385559082
    10. '	return' → logprob: -12.237187385559082

Token 46: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3134574294090271
    2. ' a' → logprob: -1.3134574890136719
    3. ' (' → logprob: -9.063457489013672
    4. '(a' → logprob: -9.688457489013672
    5. ' abs' → logprob: -11.938457489013672
    6. ' ' → logprob: -12.563457489013672
    7. '   ' → logprob: -12.938457489013672
    8. '	a' → logprob: -13.313457489013672
    9. '```' → logprob: -13.313457489013672
    10. 'abs' → logprob: -13.813457489013672

Token 47: '*b' (ID: 72162)
  Prédit: '*b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*b' → logprob: -0.21266038715839386
    2. '*a' → logprob: -1.7126604318618774
    3. '*l' → logprob: -4.712660312652588
    4. '*' → logprob: -6.712660312652588
    5. ' *' → logprob: -7.087660312652588
    6. '*(' → logprob: -10.087660789489746
    7. '//' → logprob: -10.212660789489746
    8. '*x' → logprob: -11.462660789489746
    9. '*n' → logprob: -11.587660789489746
    10. '*v' → logprob: -11.837660789489746

Token 48: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.0036014977376908064
    2. ' //' → logprob: -5.628601551055908
    3. '/' → logprob: -14.00360107421875
    4. '//=' → logprob: -15.12860107421875
    5. ')//' → logprob: -16.75360107421875
    6. '://' → logprob: -16.75360107421875
    7. ' ' → logprob: -17.12860107421875
    8. '#' → logprob: -17.50360107421875
    9. '/g' → logprob: -17.50360107421875
    10. 'g' → logprob: -17.87860107421875

Token 49: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.9361264946837764e-07
    2. ' gcd' → logprob: -16.375
    3. '   ' → logprob: -21.875
    4. 'gcc' → logprob: -22.875
    5. '  ' → logprob: -23.25
    6. '	g' → logprob: -23.5
    7. '(g' → logprob: -23.75
    8. '```' → logprob: -23.875
    9. ' ' → logprob: -24.375
    10. '_g' → logprob: -24.75

Token 50: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -1.6286106983898208e-05
    2. 'c' → logprob: -11.250016212463379
    3. 'cf' → logprob: -12.875016212463379
    4. 'cdf' → logprob: -14.875016212463379
    5. 'cdn' → logprob: -15.750016212463379
    6. '	cd' → logprob: -16.875017166137695
    7. 'cb' → logprob: -17.125017166137695
    8. '_cd' → logprob: -17.250017166137695
    9. 'b' → logprob: -17.875017166137695
    10. 'cm' → logprob: -18.000017166137695

Token 51: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.011048882268369198
    2. '(' → logprob: -4.511048793792725
    3. '(b' → logprob: -14.136049270629883
    4. ' (' → logprob: -15.636049270629883
    5. '(
' → logprob: -15.886049270629883
    6. 'a' → logprob: -17.511049270629883
    7. '(

' → logprob: -18.136049270629883
    8. '(s' → logprob: -18.511049270629883
    9. '(ab' → logprob: -18.761049270629883
    10. '(A' → logprob: -18.886049270629883

Token 52: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.31394681334495544
    2. ',' → logprob: -1.3139468431472778
    3. ',a' → logprob: -8.063946723937988
    4. ' ,' → logprob: -8.813946723937988
    5. 'b' → logprob: -9.188946723937988
    6. ')' → logprob: -9.313946723937988
    7. 'a' → logprob: -10.688946723937988
    8. ')b' → logprob: -13.188946723937988
    9. ' ' → logprob: -14.188946723937988
    10. ',g' → logprob: -14.438946723937988

Token 53: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -16.375
    3. ')
' → logprob: -17.125
    4. '))' → logprob: -17.75
    5. ')a' → logprob: -18.125
    6. ')return' → logprob: -18.5
    7. ')`' → logprob: -19.25
    8. ')b' → logprob: -19.25
    9. '）' → logprob: -19.375
    10. ')#' → logprob: -20.0

Token 54: 'while' (ID: 7032)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.046879179775714874
    2. 'def' → logprob: -3.296879291534424
    3. 'N' → logprob: -4.796879291534424
    4. 'a' → logprob: -7.671879291534424
    5. 't' → logprob: -10.546878814697266
    6. 'x' → logprob: -11.171878814697266
    7. 'for' → logprob: -11.546878814697266
    8. '\' → logprob: -12.421878814697266
    9. '```' → logprob: -12.796878814697266
    10. 'num' → logprob: -12.921878814697266

Token 55: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.004103692714124918
    2. 'True' → logprob: -5.504103660583496
    3. '(True' → logprob: -11.379103660583496
    4. ' ' → logprob: -12.129103660583496
    5. ' Tru' → logprob: -12.879103660583496
    6. ' T' → logprob: -12.879103660583496
    7. '1' → logprob: -13.379103660583496
    8. 'T' → logprob: -14.504103660583496
    9. '=True' → logprob: -14.504103660583496
    10. '  ' → logprob: -15.879103660583496

Token 56: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00032247265335172415
    2. '():' → logprob: -8.500322341918945
    3. ' :' → logprob: -9.125322341918945
    4. ':
' → logprob: -12.375322341918945
    5. ':**' → logprob: -13.375322341918945
    6. ',' → logprob: -13.625322341918945
    7. '   ' → logprob: -13.875322341918945
    8. '):' → logprob: -14.000322341918945
    9. ':def' → logprob: -15.125322341918945
    10. '(' → logprob: -15.500322341918945

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.5577775128767826e-06
    2. '    
' → logprob: -12.375005722045898
    3. '   ' → logprob: -15.000005722045898
    4. ' readline' → logprob: -15.250005722045898
    5. ' line' → logprob: -16.3750057220459
    6. '```' → logprob: -16.3750057220459
    7. ' input' → logprob: -16.5000057220459
    8. 'a' → logprob: -16.7500057220459
    9. 'n' → logprob: -17.0000057220459
    10. '       ' → logprob: -17.6250057220459

Token 58: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.7582883238792419
    2. 'a' → logprob: -0.8832883238792419
    3. 'try' → logprob: -2.5082883834838867
    4. '   ' → logprob: -4.508288383483887
    5. 'x' → logprob: -4.883288383483887
    6. 's' → logprob: -4.883288383483887
    7. ' try' → logprob: -6.133288383483887
    8. ' n' → logprob: -6.133288383483887
    9. ' a' → logprob: -6.883288383483887
    10. 'A' → logprob: -6.883288383483887

Token 59: '=int' (ID: 37431)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25257501006126404
    2. '=' → logprob: -1.5025750398635864
    3. '=int' → logprob: -7.877574920654297
    4. '=input' → logprob: -8.377574920654297
    5. ' ' → logprob: -10.877574920654297
    6. ' ==' → logprob: -11.752574920654297
    7. ',' → logprob: -12.127574920654297
    8. ' :=' → logprob: -14.127574920654297
    9. '=line' → logprob: -14.252574920654297
    10. ' =
' → logprob: -14.877574920654297

Token 60: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0002314303710591048
    2. '(' → logprob: -8.500231742858887
    3. '(sys' → logprob: -10.750231742858887
    4. 'input' → logprob: -12.125231742858887
    5. ' (' → logprob: -14.250231742858887
    6. '=input' → logprob: -16.12523078918457
    7. '()' → logprob: -16.37523078918457
    8. ' input' → logprob: -16.87523078918457
    9. ',input' → logprob: -17.00023078918457
    10. '(
' → logprob: -17.50023078918457

Token 61: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0015652115689590573
    2. '()' → logprob: -6.501564979553223
    3. '())
' → logprob: -10.001564979553223
    4. '().' → logprob: -11.251564979553223
    5. ')' → logprob: -13.876564979553223
    6. ' ())' → logprob: -13.876564979553223
    7. '())

' → logprob: -14.001564979553223
    8. '()
' → logprob: -14.001564979553223
    9. '()))' → logprob: -15.251564979553223
    10. '(' → logprob: -15.251564979553223

Token 62: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.023882843554019928
    2. '   ' → logprob: -4.398882865905762
    3. 'if' → logprob: -5.148882865905762
    4. ' ' → logprob: -5.523882865905762
    5. '<|end|>' → logprob: -6.773882865905762
    6. '    ' → logprob: -8.648882865905762
    7. '  ' → logprob: -9.523882865905762
    8. ')' → logprob: -10.523882865905762
    9. '	if' → logprob: -10.648882865905762
    10. ',' → logprob: -11.023882865905762

Token 63: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.336398184299469
    2. 'if' (adapté à ' if') → logprob: -1.5863981246948242
    3. ' ' → logprob: -2.961398124694824
    4. '<|end|>' → logprob: -4.211398124694824
    5. ')' → logprob: -5.586398124694824
    6. '    ' → logprob: -6.086398124694824
    7. '   ' → logprob: -6.461398124694824
    8. '=' → logprob: -6.586398124694824
    9. '0' → logprob: -7.086398124694824
    10. ',' → logprob: -7.211398124694824

Token 64: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.13013705611228943
    2. ' not' → logprob: -2.1301369667053223
    3. 'n' → logprob: -5.755136966705322
    4. 'not' → logprob: -10.25513744354248
    5. '	n' → logprob: -14.25513744354248
    6. ' ' → logprob: -14.50513744354248
    7. ' ' → logprob: -14.75513744354248
    8. 'n't' → logprob: -15.25513744354248
    9. ' n't' → logprob: -15.75513744354248
    10. ')n' → logprob: -16.880136489868164

Token 65: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5774290561676025
    2. ' ==' → logprob: -0.8274290561676025
    3. '<=' → logprob: -7.077428817749023
    4. '()==' → logprob: -8.952428817749023
    5. ' <=' → logprob: -8.952428817749023
    6. '<' → logprob: -9.327428817749023
    7. '=' → logprob: -9.327428817749023
    8. ')==' → logprob: -9.577428817749023
    9. '==-' → logprob: -9.827428817749023
    10. '===' → logprob: -10.327428817749023

Token 66: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004620949272066355
    2. ' ' → logprob: -5.3796210289001465
    3. '-' → logprob: -15.004620552062988
    4. '０' → logprob: -16.254621505737305
    5. '=' → logprob: -16.817121505737305
    6. '۰' → logprob: -16.817121505737305
    7. '   ' → logprob: -17.129621505737305
    8. ' -' → logprob: -17.129621505737305
    9. '  ' → logprob: -17.129621505737305
    10. '```' → logprob: -17.379621505737305

Token 67: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00081487005809322
    2. ':
' → logprob: -7.375814914703369
    3. '   ' → logprob: -8.875814437866211
    4. ' :' → logprob: -10.125814437866211
    5. ':return' → logprob: -12.250814437866211
    6. '):' → logprob: -14.500814437866211
    7. '	break' → logprob: -14.750814437866211
    8. ' break' → logprob: -14.875814437866211
    9. ' ' → logprob: -14.875814437866211
    10. '.' → logprob: -14.875814437866211

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31382548809051514
    2. '   ' → logprob: -1.3138254880905151
    3. '	break' → logprob: -8.563825607299805
    4. 'break' → logprob: -8.938825607299805
    5. ' break' → logprob: -9.063825607299805
    6. '  ' → logprob: -10.688825607299805
    7. '   ' → logprob: -10.688825607299805
    8. ' ' → logprob: -10.813825607299805
    9. '      ' → logprob: -11.063825607299805
    10. '    ' → logprob: -11.438825607299805

Token 69: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.48140737414360046
    2. 'break' (adapté à ' break') → logprob: -0.9814074039459229
    3. '   ' → logprob: -4.981407165527344
    4. '	break' → logprob: -8.231407165527344
    5. '       ' → logprob: -8.731407165527344
    6. 'b' → logprob: -12.356407165527344
    7. ' ' → logprob: -13.481407165527344
    8. '_break' → logprob: -13.481407165527344
    9. '-break' → logprob: -13.481407165527344
    10. '  ' → logprob: -14.606407165527344

Token 70: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21005649864673615
    2. 'numbers' → logprob: -2.4600565433502197
    3. ' numbers' → logprob: -3.4600565433502197
    4. '    
' → logprob: -3.7100565433502197
    5. 'a' → logprob: -3.9600565433502197
    6. 'n' → logprob: -4.960056304931641
    7. 'nums' → logprob: -5.960056304931641
    8. 's' → logprob: -5.960056304931641
    9. 'list' → logprob: -6.460056304931641
    10. 'array' → logprob: -6.710056304931641

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15480852127075195
    2. '<|end|>' → logprob: -2.029808521270752
    3. '    
' → logprob: -5.404808521270752
    4. '\n' → logprob: -6.529808521270752
    5. '<|end|>' → logprob: -7.279808521270752
    6. 'a' → logprob: -7.279808521270752
    7. ' ' → logprob: -7.404808521270752
    8. '[' → logprob: -7.404808521270752
    9. '  ' → logprob: -8.029808044433594
    10. ')' → logprob: -8.029808044433594

Token 72: ' p' (ID: 275)
  Prédit: ' numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.35055676102638245
    2. 'numbers' → logprob: -2.3505568504333496
    3. 'a' → logprob: -2.9755568504333496
    4. ' a' → logprob: -2.9755568504333496
    5. ' nums' → logprob: -3.3505568504333496
    6. 'nums' → logprob: -4.35055685043335
    7. ' s' → logprob: -4.47555685043335
    8. 's' → logprob: -4.97555685043335
    9. ' arr' → logprob: -5.22555685043335
    10. '   ' → logprob: -5.35055685043335

Token 73: '=[' (ID: 13370)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.17616984248161316
    2. '=' → logprob: -2.5511698722839355
    3. 'airs' → logprob: -3.5511698722839355
    4. ' =' → logprob: -4.5511698722839355
    5. 'ro' → logprob: -5.0511698722839355
    6. 'l' → logprob: -5.4261698722839355
    7. 'er' → logprob: -5.6761698722839355
    8. '=[]' → logprob: -5.9261698722839355
    9. 'e' → logprob: -6.3011698722839355
    10. 'layers' → logprob: -6.3011698722839355

Token 74: '0' (ID: 15)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.000520981615409255
    2. 'list' → logprob: -8.000520706176758
    3. '0' → logprob: -9.625520706176758
    4. '*' → logprob: -10.250520706176758
    5. 'tuple' → logprob: -10.625520706176758
    6. 'float' → logprob: -10.875520706176758
    7. ']' → logprob: -11.500520706176758
    8. '(int' → logprob: -11.500520706176758
    9. ' int' → logprob: -12.125520706176758
    10. ']int' → logprob: -12.250520706176758

Token 75: ']*(' (ID: 92627)
  Prédit: ']*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.44437897205352783
    2. ']' → logprob: -1.3193789720535278
    3. 'for' → logprob: -3.3193788528442383
    4. ']+' → logprob: -3.5693788528442383
    5. ']*(' → logprob: -4.194378852844238
    6. ' for' → logprob: -4.444378852844238
    7. ']+=' → logprob: -9.444378852844238
    8. ' ]' → logprob: -9.694378852844238
    9. ',' → logprob: -10.194378852844238
    10. ']int' → logprob: -10.444378852844238

Token 76: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.011598145589232445
    2. '101' → logprob: -5.636598110198975
    3. '(n' → logprob: -5.761598110198975
    4. '100' → logprob: -6.011598110198975
    5. '40' → logprob: -7.761598110198975
    6. '41' → logprob: -7.761598110198975
    7. '46' → logprob: -8.011598587036133
    8. '(' → logprob: -8.636598587036133
    9. '45' → logprob: -8.636598587036133
    10. '10' → logprob: -8.761598587036133

Token 77: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.009913682006299496
    2. ')' → logprob: -4.634913444519043
    3. '+)' → logprob: -9.259913444519043
    4. '*' → logprob: -9.884913444519043
    5. ' +' → logprob: -12.884913444519043
    6. '1' → logprob: -13.259913444519043
    7. '2' → logprob: -13.384913444519043
    8. ' )' → logprob: -13.884913444519043
    9. '+
' → logprob: -14.009913444519043
    10. '+n' → logprob: -14.134913444519043

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001564586127642542
    2. ' ' → logprob: -9.00015640258789
    3. '2' → logprob: -10.37515640258789
    4. '   ' → logprob: -15.00015640258789
    5. '10' → logprob: -15.18765640258789
    6. ')' → logprob: -15.25015640258789
    7. '3' → logprob: -15.62515640258789
    8. '5' → logprob: -15.62515640258789
    9. '0' → logprob: -16.18765640258789
    10. '  ' → logprob: -16.25015640258789

Token 79: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.803360495017841e-05
    2. ' )' → logprob: -9.625078201293945
    3. ')
' → logprob: -11.750078201293945
    4. ')p' → logprob: -13.750078201293945
    5. ')n' → logprob: -14.250078201293945
    6. '),' → logprob: -14.500078201293945
    7. ')

' → logprob: -15.125078201293945
    8. '}' → logprob: -15.125078201293945
    9. '<|end|>' → logprob: -15.375078201293945
    10. '))' → logprob: -16.250078201293945

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1040835902094841
    2. '<|end|>' → logprob: -3.35408353805542
    3. ' for' → logprob: -3.85408353805542
    4. ' ' → logprob: -3.85408353805542
    5. 'for' → logprob: -5.22908353805542
    6. '  ' → logprob: -5.47908353805542
    7. '    ' → logprob: -5.85408353805542
    8. '	for' → logprob: -6.47908353805542
    9. '    
' → logprob: -6.85408353805542
    10. '[' → logprob: -7.10408353805542

Token 81: ' q' (ID: 2335)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17331445217132568
    2. 'p' → logprob: -2.1733145713806152
    3. 'arr' → logprob: -4.298314571380615
    4. 'a' → logprob: -4.673314571380615
    5. 'dp' → logprob: -5.423314571380615
    6. 's' → logprob: -5.798314571380615
    7. 'd' → logprob: -6.423314571380615
    8. 'data' → logprob: -6.923314571380615
    9. 'v' → logprob: -7.048314571380615
    10. 'nums' → logprob: -7.048314571380615

Token 82: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4019005298614502
    2. ' =' → logprob: -1.2769005298614502
    3. '=[' → logprob: -3.02690052986145
    4. ' =[' → logprob: -6.026900291442871
    5. '=[]' → logprob: -7.526900291442871
    6. '[' → logprob: -7.526900291442871
    7. '=int' → logprob: -10.901900291442871
    8. '=input' → logprob: -11.151900291442871
    9. '=[[' → logprob: -11.401900291442871
    10. ',' → logprob: -11.901900291442871

Token 83: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04936173930764198
    2. '(n' → logprob: -3.1743617057800293
    3. '(' → logprob: -5.674361705780029
    4. 'n' → logprob: -6.799361705780029
    5. ']' → logprob: -7.299361705780029
    6. '1' → logprob: -7.674361705780029
    7. ' (' → logprob: -8.549362182617188
    8. '](' → logprob: -8.799362182617188
    9. '[n' → logprob: -9.049362182617188
    10. ']*(' → logprob: -9.924362182617188

Token 84: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.11459317803382874
    2. ')*(' → logprob: -2.239593267440796
    3. '*(' → logprob: -6.614593029022217
    4. ']*' → logprob: -8.239593505859375
    5. ')*' → logprob: -9.864593505859375
    6. ']' → logprob: -10.239593505859375
    7. ')' → logprob: -10.489593505859375
    8. '(n' → logprob: -10.864593505859375
    9. '](' → logprob: -10.989593505859375
    10. '][' → logprob: -12.739593505859375

Token 85: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0015259294304996729
    2. '(n' → logprob: -6.62652587890625
    3. ' n' → logprob: -9.75152587890625
    4. '   ' → logprob: -10.25152587890625
    5. '2' → logprob: -10.50152587890625
    6. '10' → logprob: -11.12652587890625
    7. '(' → logprob: -11.62652587890625
    8. '1' → logprob: -11.75152587890625
    9. '11' → logprob: -12.25152587890625
    10. ' ' → logprob: -12.37652587890625

Token 86: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0921942703134846e-05
    2. '+)' → logprob: -12.00001049041748
    3. ' +' → logprob: -12.75001049041748
    4. ')' → logprob: -13.75001049041748
    5. '1' → logprob: -14.87501049041748
    6. '+
' → logprob: -15.12501049041748
    7. '+n' → logprob: -17.500011444091797
    8. ')+' → logprob: -17.625011444091797
    9. '+')' → logprob: -18.250011444091797
    10. '＋' → logprob: -18.375011444091797

Token 87: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1041145626222715e-05
    2. ' ' → logprob: -12.125011444091797
    3. '2' → logprob: -12.375011444091797
    4. '0' → logprob: -14.000011444091797
    5. '   ' → logprob: -15.750011444091797
    6. '```' → logprob: -16.437511444091797
    7. ')' → logprob: -16.562511444091797
    8. '3' → logprob: -16.687511444091797
    9. '7' → logprob: -17.625011444091797
    10. '5' → logprob: -17.687511444091797

Token 88: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00024323153775185347
    2. ')
' → logprob: -8.375243186950684
    3. ' )' → logprob: -12.750243186950684
    4. '<|end|>' → logprob: -12.750243186950684
    5. '   ' → logprob: -12.875243186950684
    6. ')

' → logprob: -13.125243186950684
    7. ')
' → logprob: -14.375243186950684
    8. ')n' → logprob: -14.750243186950684
    9. '),' → logprob: -16.000244140625
    10. '
' → logprob: -16.000244140625

Token 89: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.543257474899292
    2. '   ' → logprob: -1.418257474899292
    3. ' for' → logprob: -1.793257474899292
    4. '<|end|>' → logprob: -4.918257713317871
    5. '	for' → logprob: -6.293257713317871
    6. '
' → logprob: -7.418257713317871
    7. '    
' → logprob: -8.418257713317871
    8. '[' → logprob: -8.668257713317871
    9. '  ' → logprob: -9.418257713317871
    10. ' ' → logprob: -9.668257713317871

Token 90: ' r' (ID: 428)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005508480593562126
    2. ' for' → logprob: -5.2555084228515625
    3. 'i' → logprob: -9.255508422851562
    4. '   ' → logprob: -9.380508422851562
    5. 'p' → logprob: -10.255508422851562
    6. '	for' → logprob: -10.255508422851562
    7. 'f' → logprob: -11.630508422851562
    8. 's' → logprob: -12.380508422851562
    9. 'q' → logprob: -13.380508422851562
    10. ')' → logprob: -14.005508422851562

Token 91: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6004327535629272
    2. '=[' → logprob: -0.9754327535629272
    3. ' =' → logprob: -3.100432872772217
    4. '=[]' → logprob: -3.725432872772217
    5. '[' → logprob: -6.600432872772217
    6. ' =[' → logprob: -6.600432872772217
    7. 'ange' → logprob: -7.225432872772217
    8. '=int' → logprob: -7.600432872772217
    9. '=[]
' → logprob: -7.975432872772217
    10. '={}' → logprob: -8.350432395935059

Token 92: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002865258604288101
    2. '(' → logprob: -6.877865314483643
    3. ']' → logprob: -7.252865314483643
    4. '(n' → logprob: -7.752865314483643
    5. 'n' → logprob: -7.877865314483643
    6. '1' → logprob: -9.252864837646484
    7. '[' → logprob: -9.877864837646484
    8. ' ' → logprob: -10.252864837646484
    9. '](' → logprob: -10.377864837646484
    10. ']*(' → logprob: -10.877864837646484

Token 93: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.004977454897016287
    2. ']' → logprob: -5.379977226257324
    3. '](' → logprob: -8.504977226257324
    4. ']*' → logprob: -9.004977226257324
    5. '(n' → logprob: -10.629977226257324
    6. '*(' → logprob: -12.379977226257324
    7. ']+' → logprob: -13.254977226257324
    8. ')*(' → logprob: -14.504977226257324
    9. '   ' → logprob: -14.629977226257324
    10. '][' → logprob: -15.129977226257324

Token 94: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0005594660760834813
    2. '1' → logprob: -8.50055980682373
    3. '(n' → logprob: -8.62555980682373
    4. ')' → logprob: -10.12555980682373
    5. '2' → logprob: -10.25055980682373
    6. '0' → logprob: -10.25055980682373
    7. '10' → logprob: -11.50055980682373
    8. '3' → logprob: -11.62555980682373
    9. ')n' → logprob: -11.87555980682373
    10. '(' → logprob: -12.12555980682373

Token 95: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.8325677703833207e-05
    2. '1' → logprob: -11.250028610229492
    3. ' +' → logprob: -11.375028610229492
    4. ')' → logprob: -12.750028610229492
    5. '+)' → logprob: -15.000028610229492
    6. ')+' → logprob: -16.000028610229492
    7. '+
' → logprob: -16.625028610229492
    8. '＋' → logprob: -16.875028610229492
    9. ')]' → logprob: -17.250028610229492
    10. '+n' → logprob: -17.250028610229492

Token 96: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.6789137084269896e-05
    2. '+' → logprob: -10.87503719329834
    3. '2' → logprob: -12.37503719329834
    4. ' ' → logprob: -12.37503719329834
    5. '   ' → logprob: -13.12503719329834
    6. ')' → logprob: -13.25003719329834
    7. '```' → logprob: -13.25003719329834
    8. 'n' → logprob: -13.75003719329834
    9. '])' → logprob: -14.81253719329834
    10. '3' → logprob: -15.37503719329834

Token 97: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004941754741594195
    2. ')
' → logprob: -7.625494003295898
    3. '   ' → logprob: -13.000494003295898
    4. ')
' → logprob: -13.875494003295898
    5. ' )' → logprob: -14.000494003295898
    6. ')n' → logprob: -14.625494003295898
    7. ')

' → logprob: -15.125494003295898
    8. '<|end|>' → logprob: -15.250494003295898
    9. '),' → logprob: -15.625494003295898
    10. ')...' → logprob: -16.6254940032959

Token 98: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6900262236595154
    2. '   ' → logprob: -1.1900262832641602
    3. ' for' → logprob: -1.6900262832641602
    4. '<|end|>' → logprob: -5.56502628326416
    5. '	for' → logprob: -5.81502628326416
    6. 'i' → logprob: -7.06502628326416
    7. '[' → logprob: -7.31502628326416
    8. '[i' → logprob: -7.81502628326416
    9. '    
' → logprob: -8.81502628326416
    10. 't' → logprob: -9.31502628326416

Token 99: ' b' (ID: 287)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001540450262837112
    2. ' for' → logprob: -7.001540660858154
    3. 'i' → logprob: -8.376540184020996
    4. 'p' → logprob: -8.501540184020996
    5. '   ' → logprob: -8.876540184020996
    6. 'r' → logprob: -11.376540184020996
    7. 's' → logprob: -11.501540184020996
    8. 'a' → logprob: -12.126540184020996
    9. '	for' → logprob: -12.376540184020996
    10. 'dp' → logprob: -12.501540184020996

Token 100: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.6055120825767517
    2. '=' → logprob: -1.1055121421813965
    3. '=[]' → logprob: -2.3555121421813965
    4. 'r' → logprob: -5.2305121421813965
    5. '[' → logprob: -5.4805121421813965
    6. ' =' → logprob: -5.6055121421813965
    7. 'e' → logprob: -5.9805121421813965
    8. 'for' → logprob: -6.2305121421813965
    9. '=int' → logprob: -6.4805121421813965
    10. 'efore' → logprob: -6.6055121421813965

Token 101: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014550806023180485
    2. '[' → logprob: -4.514550685882568
    3. 'False' → logprob: -6.389550685882568
    4. 'int' → logprob: -7.764550685882568
    5. '[int' → logprob: -7.764550685882568
    6. '[]' → logprob: -8.014551162719727
    7. ']' → logprob: -8.514551162719727
    8. '(' → logprob: -9.264551162719727
    9. '1' → logprob: -9.639551162719727
    10. '[n' → logprob: -9.764551162719727

Token 102: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.005500787403434515
    2. ']' → logprob: -5.255500793457031
    3. ']*' → logprob: -8.380500793457031
    4. '*(' → logprob: -11.380500793457031
    5. '(n' → logprob: -11.380500793457031
    6. '](' → logprob: -11.505500793457031
    7. ']+' → logprob: -12.505500793457031
    8. ' ]' → logprob: -14.630500793457031
    9. ')*(' → logprob: -15.005500793457031
    10. '   ' → logprob: -15.755500793457031

Token 103: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.028153760358691216
    2. '(n' → logprob: -3.653153657913208
    3. '10' → logprob: -7.778153896331787
    4. '3' → logprob: -8.403153419494629
    5. '100' → logprob: -8.528153419494629
    6. '11' → logprob: -8.903153419494629
    7. '(' → logprob: -9.028153419494629
    8. '101' → logprob: -9.153153419494629
    9. '1' → logprob: -9.403153419494629
    10. '7' → logprob: -9.778153419494629

Token 104: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.650518920039758e-06
    2. ' +' → logprob: -13.625003814697266
    3. '+)' → logprob: -13.875003814697266
    4. '+
' → logprob: -14.125003814697266
    5. ')' → logprob: -15.000003814697266
    6. '+n' → logprob: -15.625003814697266
    7. ')+' → logprob: -17.125003814697266
    8. '<|end|>' → logprob: -17.500003814697266
    9. '1' → logprob: -17.875003814697266
    10. '<|end|>' → logprob: -18.125003814697266

Token 105: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012833021173719317
    2. '+' → logprob: -9.000128746032715
    3. '```' → logprob: -13.375128746032715
    4. ' ' → logprob: -13.750128746032715
    5. ')' → logprob: -13.875128746032715
    6. '   ' → logprob: -14.875128746032715
    7. 'n' → logprob: -14.875128746032715
    8. '0' → logprob: -15.625128746032715
    9. '2' → logprob: -16.3751277923584
    10. '(' → logprob: -17.3751277923584

Token 106: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.253090865968261e-06
    2. ' )' → logprob: -12.000009536743164
    3. ')
' → logprob: -13.000009536743164
    4. '   ' → logprob: -15.500009536743164
    5. ')n' → logprob: -16.500009536743164
    6. ')

' → logprob: -17.375009536743164
    7. '}' → logprob: -17.375009536743164
    8. ']' → logprob: -17.625009536743164
    9. ')b' → logprob: -17.875009536743164
    10. '))' → logprob: -17.875009536743164

Token 107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1609603464603424
    2. 'for' → logprob: -2.0359604358673096
    3. ' for' → logprob: -4.0359601974487305
    4. '	for' → logprob: -8.28596019744873
    5. '<|end|>' → logprob: -8.78596019744873
    6. '    
' → logprob: -11.41096019744873
    7. 'i' → logprob: -11.78596019744873
    8. '[' → logprob: -12.03596019744873
    9. '\t' → logprob: -12.16096019744873
    10. '
' → logprob: -13.16096019744873

Token 108: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0018543887417763472
    2. 'i' → logprob: -6.876854419708252
    3. ' for' → logprob: -7.626854419708252
    4. '   ' → logprob: -8.501853942871094
    5. 's' → logprob: -10.126853942871094
    6. ')' → logprob: -11.751853942871094
    7. 'c' → logprob: -11.751853942871094
    8. 'a' → logprob: -11.876853942871094
    9. 'max' → logprob: -12.251853942871094
    10. 'sum' → logprob: -12.376853942871094

Token 109: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.01816621422767639
    2. 'i' → logprob: -4.0181660652160645
    3. ' _' → logprob: -12.268166542053223
    4. '	i' → logprob: -12.518166542053223
    5. ' ' → logprob: -12.768166542053223
    6. '_i' → logprob: -12.893166542053223
    7. '_' → logprob: -13.018166542053223
    8. ' ' → logprob: -15.893166542053223
    9. '(i' → logprob: -16.518165588378906
    10. '   ' → logprob: -17.393165588378906

Token 110: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07005481421947479
    2. 'in' → logprob: -2.695054769515991
    3. ' ' → logprob: -9.32005500793457
    4. 'range' → logprob: -10.94505500793457
    5. '  ' → logprob: -13.07005500793457
    6. 'n' → logprob: -13.07005500793457
    7. '	in' → logprob: -13.32005500793457
    8. '_' → logprob: -13.44505500793457
    9. ' range' → logprob: -13.69505500793457
    10. '1' → logprob: -14.19505500793457

Token 111: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2519293427467346
    2. ' range' → logprob: -1.5019292831420898
    3. '	range' → logprob: -15.62692928314209
    4. '(range' → logprob: -16.751930236816406
    5. ' ' → logprob: -17.626930236816406
    6. '1' → logprob: -19.251930236816406
    7. 'r' → logprob: -19.376930236816406
    8. 'rang' → logprob: -19.376930236816406
    9. 'in' → logprob: -19.751930236816406
    10. ' xrange' → logprob: -20.001930236816406

Token 112: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.1008713702030946e-06
    2. '1' → logprob: -13.500001907348633
    3. '(n' → logprob: -14.750001907348633
    4. ' (' → logprob: -15.500001907348633
    5. '   ' → logprob: -17.625001907348633
    6. '(
' → logprob: -17.750001907348633
    7. ' ' → logprob: -20.250001907348633
    8. '```' → logprob: -20.875001907348633
    9. '	' → logprob: -21.125001907348633
    10. '(i' → logprob: -21.375001907348633

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.864272967912257e-05
    2. 'n' → logprob: -9.625088691711426
    3. ' ' → logprob: -11.000088691711426
    4. '   ' → logprob: -12.125088691711426
    5. ' n' → logprob: -15.250088691711426
    6. '(' → logprob: -16.00008773803711
    7. '2' → logprob: -17.00008773803711
    8. '    ' → logprob: -17.37508773803711
    9. '(n' → logprob: -17.75008773803711
    10. '  ' → logprob: -18.12508773803711

Token 114: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09374228864908218
    2. ',n' → logprob: -2.5937423706054688
    3. ' ,' → logprob: -4.218742370605469
    4. 'n' → logprob: -11.593742370605469
    5. '(n' → logprob: -11.843742370605469
    6. ',
' → logprob: -12.968742370605469
    7. ' n' → logprob: -13.718742370605469
    8. ',num' → logprob: -13.718742370605469
    9. ',len' → logprob: -14.093742370605469
    10. '   ' → logprob: -14.343742370605469

Token 115: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00034583290107548237
    2. ' +' → logprob: -8.000346183776855
    3. '1' → logprob: -12.375346183776855
    4. '):' → logprob: -13.750346183776855
    5. '+
' → logprob: -13.875346183776855
    6. ')+' → logprob: -14.000346183776855
    7. '()+' → logprob: -14.125346183776855
    8. ')' → logprob: -14.500346183776855
    9. '):
' → logprob: -14.500346183776855
    10. '+i' → logprob: -14.750346183776855

Token 116: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.672236824873835e-05
    2. ' ' → logprob: -9.875076293945312
    3. '   ' → logprob: -11.125076293945312
    4. '2' → logprob: -12.625076293945312
    5. '```' → logprob: -12.875076293945312
    6. '):
' → logprob: -14.000076293945312
    7. '+' → logprob: -14.125076293945312
    8. '``' → logprob: -14.375076293945312
    9. ')' → logprob: -14.437576293945312
    10. '       ' → logprob: -15.312576293945312

Token 117: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009106291108764708
    2. ':' → logprob: -7.625910758972168
    3. '):
' → logprob: -8.250910758972168
    4. ')' → logprob: -9.500910758972168
    5. ' ):' → logprob: -9.500910758972168
    6. '():' → logprob: -12.125910758972168
    7. '   ' → logprob: -12.875910758972168
    8. ',' → logprob: -14.000910758972168
    9. '):
' → logprob: -14.250910758972168
    10. ']:' → logprob: -14.500910758972168

Token 118: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5292847156524658
    2. ' p' → logprob: -1.6542847156524658
    3. '   ' → logprob: -2.779284715652466
    4. ' ' → logprob: -3.529284715652466
    5. ' tokens' → logprob: -3.529284715652466
    6. ' b' → logprob: -4.029284477233887
    7. 'b' → logprob: -4.154284477233887
    8. ' parts' → logprob: -4.404284477233887
    9. 'tokens' → logprob: -4.404284477233887
    10. '    ' → logprob: -4.904284477233887

Token 119: ' pp' (ID: 25476)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4574180245399475
    2. 'x' → logprob: -1.3324179649353027
    3. 'p' → logprob: -2.5824179649353027
    4. ' x' → logprob: -4.582417964935303
    5. ' a' → logprob: -5.082417964935303
    6. ' p' → logprob: -5.457417964935303
    7. '   ' → logprob: -5.582417964935303
    8. 'b' → logprob: -7.582417964935303
    9. 's' → logprob: -7.832417964935303
    10. 'u' → logprob: -7.957417964935303

Token 120: ',' (ID: 11)
  Prédit: ',q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',q' → logprob: -0.5182285904884338
    2. ',' → logprob: -1.018228530883789
    3. '[i' → logprob: -3.643228530883789
    4. ',p' → logprob: -4.768228530883789
    5. '[' → logprob: -5.893228530883789
    6. ',input' → logprob: -6.268228530883789
    7. 'input' → logprob: -6.768228530883789
    8. '=' → logprob: -7.768228530883789
    9. '[q' → logprob: -7.768228530883789
    10. ',i' → logprob: -8.018228530883789

Token 121: 'qq' (ID: 8127)
  Prédit: 'qq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qq' → logprob: -0.00017267030489165336
    2. 'qp' → logprob: -9.50017261505127
    3. ' qq' → logprob: -9.87517261505127
    4. 'pq' → logprob: -10.25017261505127
    5. '.qq' → logprob: -12.37517261505127
    6. 'pp' → logprob: -12.37517261505127
    7. 'QQ' → logprob: -13.87517261505127
    8. 'qqu' → logprob: -14.00017261505127
    9. 'qi' → logprob: -16.375173568725586
    10. 'vq' → logprob: -16.500173568725586

Token 122: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00033308175625279546
    2. ' =' → logprob: -8.625332832336426
    3. '=input' → logprob: -9.000332832336426
    4. '=list' → logprob: -11.375332832336426
    5. '=sys' → logprob: -12.500332832336426
    6. ',' → logprob: -12.625332832336426
    7. '=line' → logprob: -13.000332832336426
    8. '=int' → logprob: -13.125332832336426
    9. 'map' → logprob: -13.375332832336426
    10. ',map' → logprob: -14.375332832336426

Token 123: 'rr' (ID: 1006)
  Prédit: 'rr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' → logprob: -3.750436007976532e-05
    2. ' rr' → logprob: -10.37503719329834
    3. 'rrrr' → logprob: -12.62503719329834
    4. '_rr' → logprob: -13.37503719329834
    5. 'RR' → logprob: -14.50003719329834
    6. '(rr' → logprob: -15.12503719329834
    7. '   ' → logprob: -16.125038146972656
    8. 'qq' → logprob: -16.500038146972656
    9. 'pp' → logprob: -16.625038146972656
    10. ',' → logprob: -16.750038146972656

Token 124: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00010664248111424968
    2. '=input' → logprob: -9.625106811523438
    3. ' =' → logprob: -10.250106811523438
    4. '=sys' → logprob: -13.125106811523438
    5. '=list' → logprob: -13.500106811523438
    6. '=line' → logprob: -14.250106811523438
    7. '=int' → logprob: -15.625106811523438
    8. '＝' → logprob: -15.875106811523438
    9. '=

' → logprob: -16.000106811523438
    10. '=i' → logprob: -16.625106811523438

Token 125: 'bb' (ID: 10029)
  Prédit: 'bb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bb' → logprob: -3.292907877039397e-06
    2. 'bbb' → logprob: -13.12500286102295
    3. ' bb' → logprob: -14.50000286102295
    4. '_bb' → logprob: -14.87500286102295
    5. 'bbbb' → logprob: -15.62500286102295
    6. 'b' → logprob: -16.000003814697266
    7. '(bb' → logprob: -17.000003814697266
    8. '.bb' → logprob: -17.250003814697266
    9. 'bbs' → logprob: -17.375003814697266
    10. 'xbb' → logprob: -17.625003814697266

Token 126: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -9.472211968386546e-05
    2. '=input' → logprob: -9.750094413757324
    3. ' =' → logprob: -11.000094413757324
    4. '=list' → logprob: -11.375094413757324
    5. '=sys' → logprob: -12.125094413757324
    6. '=int' → logprob: -13.875094413757324
    7. '=line' → logprob: -14.875094413757324
    8. '=
' → logprob: -15.000094413757324
    9. '=[' → logprob: -15.000094413757324
    10. '=_' → logprob: -15.750094413757324

Token 127: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.00043102685594931245
    2. ' map' → logprob: -7.750431060791016
    3. 'input' → logprob: -15.125431060791016
    4. 'list' → logprob: -16.500431060791016
    5. '	map' → logprob: -17.375431060791016
    6. '(map' → logprob: -18.000431060791016
    7. '.map' → logprob: -19.500431060791016
    8. 'm' → logprob: -20.500431060791016
    9. '   ' → logprob: -20.875431060791016
    10. '[' → logprob: -21.125431060791016

Token 128: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00038169484469108284
    2. 'int' → logprob: -7.8753814697265625
    3. '[int' → logprob: -14.750381469726562
    4. '(str' → logprob: -14.875381469726562
    5. '(' → logprob: -15.250381469726562
    6. ',int' → logprob: -15.375381469726562
    7. '<int' → logprob: -16.125381469726562
    8. '(input' → logprob: -16.250381469726562
    9. '=int' → logprob: -16.500381469726562
    10. ']int' → logprob: -16.750381469726562

Token 129: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.2081981599330902
    2. '(input' → logprob: -1.7081981897354126
    3. ',' → logprob: -5.208198070526123
    4. 'input' → logprob: -6.708198070526123
    5. ' input' → logprob: -10.458198547363281
    6. '(' → logprob: -11.458198547363281
    7. '=input' → logprob: -11.583198547363281
    8. ')' → logprob: -11.708198547363281
    9. '[input' → logprob: -12.083198547363281
    10. '<input' → logprob: -13.333198547363281

Token 130: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.438573680294212e-06
    2. '()' → logprob: -12.125005722045898
    3. '())' → logprob: -17.1250057220459
    4. ' ().' → logprob: -18.2500057220459
    5. '(' → logprob: -19.2500057220459
    6. '.readline' → logprob: -19.6250057220459
    7. ')' → logprob: -20.0000057220459
    8. '().__' → logprob: -20.2500057220459
    9. '()
' → logprob: -20.6250057220459
    10. '()))' → logprob: -22.0000057220459

Token 131: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.11996734328568e-05
    2. 'strip' → logprob: -10.375041007995605
    3. 'rstrip' → logprob: -11.625041007995605
    4. '(split' → logprob: -14.250041007995605
    5. 'spl' → logprob: -15.625041007995605
    6. ' split' → logprob: -16.375041961669922
    7. 's' → logprob: -19.375041961669922
    8. '().' → logprob: -19.875041961669922
    9. '.split' → logprob: -20.375041961669922
    10. 'plit' → logprob: -20.875041961669922

Token 132: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.001751103438436985
    2. ')' → logprob: -6.626750946044922
    3. '()' → logprob: -8.001750946044922
    4. '()))' → logprob: -9.501750946044922
    5. '())
' → logprob: -11.626750946044922
    6. '))' → logprob: -12.626750946044922
    7. '(' → logprob: -13.126750946044922
    8. ' ())' → logprob: -14.751750946044922
    9. '(),' → logprob: -15.126750946044922
    10. '().' → logprob: -15.626750946044922

Token 133: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 134: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.12420522421598434
    2. ' p' → logprob: -2.2492051124572754
    3. '   ' → logprob: -5.499205112457275
    4. '	p' → logprob: -5.624205112457275
    5. '<|end|>' → logprob: -5.999205112457275
    6. '       ' → logprob: -7.249205112457275
    7. ' ' → logprob: -8.374205589294434
    8. 'pp' → logprob: -9.624205589294434
    9. ')' → logprob: -10.749205589294434
    10. ',p' → logprob: -10.874205589294434

Token 135: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.043156303465366364
    2. '[' → logprob: -3.168156385421753
    3. '[p' → logprob: -9.043156623840332
    4. '[ip' → logprob: -11.168156623840332
    5. '[I' → logprob: -11.793156623840332
    6. '```' → logprob: -11.793156623840332
    7. ' [' → logprob: -13.668156623840332
    8. '[user' → logprob: -14.043156623840332
    9. '[idx' → logprob: -14.168156623840332
    10. '\[' → logprob: -14.168156623840332

Token 136: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31482595205307007
    2. ']=' → logprob: -2.189826011657715
    3. ')=' → logprob: -2.689826011657715
    4. ')' → logprob: -2.814826011657715
    5. ']' → logprob: -3.564826011657715
    6. ' =' → logprob: -6.814826011657715
    7. ',' → logprob: -7.189826011657715
    8. ' )' → logprob: -10.314826011657715
    9. '=p' → logprob: -10.439826011657715
    10. ')]' → logprob: -10.439826011657715

Token 137: 'pp' (ID: 654)
  Prédit: 'pp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pp' → logprob: -5.200166469876422e-06
    2. ' pp' → logprob: -12.500004768371582
    3. '	pp' → logprob: -13.500004768371582
    4. '(pp' → logprob: -16.7500057220459
    5. 'ppy' → logprob: -20.2500057220459
    6. '_pp' → logprob: -20.6250057220459
    7. 'pm' → logprob: -20.7500057220459
    8. '.pp' → logprob: -21.0000057220459
    9. 'pc' → logprob: -21.6250057220459
    10. 'ppi' → logprob: -21.8750057220459

Token 138: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 139: '       ' (ID: 309)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.08678700029850006
    2. '
' → logprob: -2.836786985397339
    3. ' q' → logprob: -3.836786985397339
    4. ',q' → logprob: -6.711787223815918
    5. '	q' → logprob: -7.211787223815918
    6. '<|end|>' → logprob: -7.461787223815918
    7. '   ' → logprob: -8.086787223815918
    8. ',' → logprob: -9.961787223815918
    9. '       ' → logprob: -10.961787223815918
    10. '
' → logprob: -11.086787223815918

Token 140: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.0002624086628202349
    2. ' q' → logprob: -8.250262260437012
    3. 'qq' → logprob: -14.000262260437012
    4. '
' → logprob: -16.125263214111328
    5. '	q' → logprob: -16.125263214111328
    6. ' ' → logprob: -16.750263214111328
    7. '   ' → logprob: -18.125263214111328
    8. '           ' → logprob: -18.750263214111328
    9. '  ' → logprob: -18.875263214111328
    10. '    ' → logprob: -19.000263214111328

Token 141: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0017052943585440516
    2. '[' → logprob: -6.376705169677734
    3. '[I' → logprob: -13.376705169677734
    4. '```' → logprob: -14.501705169677734
    5. ' [' → logprob: -14.876705169677734
    6. '\[' → logprob: -15.376705169677734
    7. '[
' → logprob: -16.376705169677734
    8. '<|end|>' → logprob: -16.501705169677734
    9. '[q' → logprob: -16.626705169677734
    10. 'i' → logprob: -17.001705169677734

Token 142: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002905085450038314
    2. '=i' → logprob: -6.502904891967773
    3. ']=' → logprob: -7.127904891967773
    4. '[i' → logprob: -7.752904891967773
    5. '[' → logprob: -9.502904891967773
    6. ']' → logprob: -10.502904891967773
    7. ' =' → logprob: -10.877904891967773
    8. '<|end|>' → logprob: -11.002904891967773
    9. ')=' → logprob: -11.252904891967773
    10. '=
' → logprob: -12.252904891967773

Token 143: 'qq' (ID: 8127)
  Prédit: 'qq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qq' → logprob: -4.320199877838604e-07
    2. ' qq' → logprob: -15.125
    3. 'q' → logprob: -16.875
    4. 'bb' → logprob: -17.375
    5. 'qqa' → logprob: -17.875
    6. 'qqu' → logprob: -18.0
    7. '.qq' → logprob: -18.0
    8. 'pp' → logprob: -19.875
    9. 'cc' → logprob: -20.125
    10. '@qq' → logprob: -20.375

Token 144: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08278782665729523
    2. 'r' → logprob: -2.9577877521514893
    3. '<|end|>' → logprob: -3.8327877521514893
    4. ',r' → logprob: -5.957787990570068
    5. ' r' → logprob: -6.207787990570068
    6. ',' → logprob: -7.082787990570068
    7. '
' → logprob: -8.83278751373291
    8. '   ' → logprob: -9.58278751373291
    9. '	r' → logprob: -9.58278751373291
    10. '	' → logprob: -10.20778751373291

Token 145: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2585412561893463
    2. 'r' → logprob: -1.508541226387024
    3. ' r' → logprob: -5.258541107177734
    4. '   ' → logprob: -6.633541107177734
    5. '<|end|>' → logprob: -10.133541107177734
    6. '	r' → logprob: -11.383541107177734
    7. ',r' → logprob: -12.133541107177734
    8. ' ' → logprob: -12.508541107177734
    9. '           ' → logprob: -13.258541107177734
    10. '     ' → logprob: -13.508541107177734

Token 146: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -1.7432603272027336e-06
    2. ' r' → logprob: -13.375001907348633
    3. '   ' → logprob: -16.250001907348633
    4. '       ' → logprob: -16.875001907348633
    5. 'q' → logprob: -18.500001907348633
    6. '<|end|>' → logprob: -19.000001907348633
    7. '	r' → logprob: -19.125001907348633
    8. '     ' → logprob: -19.125001907348633
    9. 'i' → logprob: -19.250001907348633
    10. ' ' → logprob: -19.500001907348633

Token 147: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3544423381972592e-05
    2. '[' → logprob: -11.37501335144043
    3. 'i' → logprob: -13.62501335144043
    4. '[I' → logprob: -14.75001335144043
    5. '<|end|>' → logprob: -15.62501335144043
    6. '```' → logprob: -16.87501335144043
    7. '(i' → logprob: -17.25001335144043
    8. '[int' → logprob: -17.50001335144043
    9. '[r' → logprob: -17.87501335144043
    10. ',i' → logprob: -17.87501335144043

Token 148: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.2977750897407532
    2. '=' → logprob: -1.5477750301361084
    3. '[i' → logprob: -4.1727752685546875
    4. '=i' → logprob: -4.1727752685546875
    5. ']' → logprob: -4.2977752685546875
    6. ')=' → logprob: -9.172775268554688
    7. '[' → logprob: -9.172775268554688
    8. '=r' → logprob: -10.297775268554688
    9. '][' → logprob: -10.547775268554688
    10. ']==' → logprob: -10.547775268554688

Token 149: 'rr' (ID: 1006)
  Prédit: 'rr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rr' → logprob: -8.65707261255011e-06
    2. 'bb' → logprob: -11.750008583068848
    3. ' rr' → logprob: -14.250008583068848
    4. 'rb' → logprob: -17.375009536743164
    5. '(rr' → logprob: -17.750009536743164
    6. 'cc' → logprob: -18.125009536743164
    7. '_rr' → logprob: -18.875009536743164
    8. 'pp' → logprob: -18.875009536743164
    9. 'RR' → logprob: -20.625009536743164
    10. 'rrrr' → logprob: -21.000009536743164

Token 150: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09290453046560287
    2. '   ' → logprob: -2.467904567718506
    3. 'b' → logprob: -6.342904567718506
    4. '<|end|>' → logprob: -6.342904567718506
    5. '
' → logprob: -8.217904090881348
    6. ' ' → logprob: -10.592904090881348
    7. '     ' → logprob: -10.717904090881348
    8. '           ' → logprob: -10.842904090881348
    9. '    
' → logprob: -11.092904090881348
    10. ' b' → logprob: -11.092904090881348

Token 151: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09529877454042435
    2. 'b' → logprob: -3.0952987670898438
    3. '   ' → logprob: -3.0952987670898438
    4. ' b' → logprob: -8.720298767089844
    5. '	b' → logprob: -9.845298767089844
    6. '           ' → logprob: -10.220298767089844
    7. '	' → logprob: -10.470298767089844
    8. '     ' → logprob: -10.720298767089844
    9. '<|end|>' → logprob: -11.095298767089844
    10. '      ' → logprob: -11.220298767089844

Token 152: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -4.320199877838604e-07
    2. ' b' → logprob: -15.0
    3. 'bb' → logprob: -16.5
    4. '   ' → logprob: -17.75
    5. '	b' → logprob: -19.25
    6. '```' → logprob: -20.5
    7. '    
' → logprob: -22.375
    8. '`' → logprob: -22.5
    9. '  ' → logprob: -22.75
    10. '    ' → logprob: -22.875

Token 153: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.125
    3. '[int' → logprob: -19.0
    4. '```' → logprob: -19.125
    5. 'i' → logprob: -19.25
    6. '[I' → logprob: -19.375
    7. '[ii' → logprob: -21.25
    8. '\[' → logprob: -21.875
    9. '[
' → logprob: -22.0
    10. ' [' → logprob: -22.0

Token 154: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.016935965046286583
    2. ']' → logprob: -4.7669358253479
    3. '=' → logprob: -4.8919358253479
    4. '[i' → logprob: -7.2669358253479
    5. '=i' → logprob: -9.891936302185059
    6. '[' → logprob: -10.641936302185059
    7. ')=' → logprob: -13.266936302185059
    8. '']=' → logprob: -13.641936302185059
    9. ']+=' → logprob: -13.766936302185059
    10. '"]=' → logprob: -14.141936302185059

Token 155: 'bb' (ID: 10029)
  Prédit: 'bb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bb' → logprob: -1.9361264946837764e-07
    2. ' bb' → logprob: -15.75
    3. '(bb' → logprob: -17.5
    4. 'b' → logprob: -19.25
    5. ' ' → logprob: -20.75
    6. 'bbb' → logprob: -21.0
    7. 'bbbb' → logprob: -21.125
    8. '.bb' → logprob: -21.25
    9. 'int' → logprob: -21.5
    10. 'bbs' → logprob: -21.625

Token 156: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.37108272314071655
    2. '   ' → logprob: -1.4960827827453613
    3. '<|end|>' → logprob: -3.2460827827453613
    4. 'for' → logprob: -3.9960827827453613
    5. ' for' → logprob: -4.996082782745361
    6. '    
' → logprob: -5.121082782745361
    7. ')' → logprob: -5.371082782745361
    8. 'def' → logprob: -6.121082782745361
    9. 'n' → logprob: -6.371082782745361
    10. '#' → logprob: -6.371082782745361

Token 157: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.173387348651886
    2. '   ' → logprob: -2.548387289047241
    3. 'visited' → logprob: -3.423387289047241
    4. 'max' → logprob: -4.92338752746582
    5. 'def' → logprob: -5.04838752746582
    6. 'for' → logprob: -5.42338752746582
    7. 'ans' → logprob: -5.54838752746582
    8. 'g' → logprob: -6.04838752746582
    9. 'used' → logprob: -6.17338752746582
    10. 'm' → logprob: -6.54838752746582

Token 158: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.16582250595092773
    2. 'ans' → logprob: -3.4158225059509277
    3. 'for' → logprob: -3.7908225059509277
    4. 'l' → logprob: -3.9158225059509277
    5. 'max' → logprob: -4.165822505950928
    6. 'g' → logprob: -4.165822505950928
    7. 'def' → logprob: -5.165822505950928
    8. 'res' → logprob: -5.290822505950928
    9. '#' (adapté à ' #') → logprob: -5.415822505950928
    10. 'visited' → logprob: -6.040822505950928

Token 159: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3310301899909973
    2. 'l' → logprob: -2.9560301303863525
    3. 'for' → logprob: -3.2060301303863525
    4. 'max' → logprob: -3.2060301303863525
    5. ' dp' → logprob: -3.7060301303863525
    6. '#' → logprob: -4.081030368804932
    7. ' l' → logprob: -4.081030368804932
    8. 'from' → logprob: -4.331030368804932
    9. 'ans' → logprob: -4.456030368804932
    10. ' for' → logprob: -4.706030368804932

Token 160: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07510165870189667
    2. '=' → logprob: -2.700101613998413
    3. 'dp' → logprob: -5.825101852416992
    4. '=[' → logprob: -6.450101852416992
    5. '=[]' → logprob: -8.700101852416992
    6. ' dp' → logprob: -9.075101852416992
    7. '=[[' → logprob: -9.200101852416992
    8. '_dp' → logprob: -9.950101852416992
    9. '   ' → logprob: -10.200101852416992
    10. '[' → logprob: -10.200101852416992

Token 161: ']:' (ID: 12433)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01989550143480301
    2. '][' → logprob: -4.394895553588867
    3. ']=' → logprob: -5.019895553588867
    4. ']={' → logprob: -7.769895553588867
    5. ']=(' → logprob: -9.019895553588867
    6. ' ]' → logprob: -9.144895553588867
    7. '=' → logprob: -10.519895553588867
    8. '][]' → logprob: -11.144895553588867
    9. ')' → logprob: -11.644895553588867
    10. ' ][' → logprob: -11.769895553588867

Token 162: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.024875231087207794
    2. '[]' → logprob: -5.024875164031982
    3. '0' → logprob: -5.274875164031982
    4. '[i' → logprob: -5.399875164031982
    5. '(' → logprob: -6.274875164031982
    6. 'dp' → logprob: -6.399875164031982
    7. ' [' → logprob: -6.524875164031982
    8. 'max' → logprob: -7.524875164031982
    9. '{}' → logprob: -7.524875164031982
    10. '[(' → logprob: -7.899875164031982

Token 163: 'weight' (ID: 8250)
  Prédit: 'numer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numer' → logprob: -1.1292026042938232
    2. 'max' → logprob: -1.6292026042938232
    3. 'p' → logprob: -1.8792026042938232
    4. 'l' → logprob: -2.2542026042938232
    5. 'g' → logprob: -3.1292026042938232
    6. 'min' → logprob: -3.5042026042938232
    7. '최' → logprob: -4.254202842712402
    8. 'num' → logprob: -4.379202842712402
    9. 'maximum' → logprob: -4.379202842712402
    10. ' numerator' → logprob: -4.504202842712402

Token 164: ' of' (ID: 328)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02249477058649063
    2. ',value' → logprob: -4.772494792938232
    3. ',sum' → logprob: -5.147494792938232
    4. ',count' → logprob: -5.397494792938232
    5. ',total' → logprob: -7.147494792938232
    6. ',length' → logprob: -8.272494316101074
    7. ',num' → logprob: -8.397494316101074
    8. ')' → logprob: -8.397494316101074
    9. ',max' → logprob: -8.397494316101074
    10. ',n' → logprob: -8.522494316101074

Token 165: ' balanced' (ID: 32879)
  Prédit: 'subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'subset' → logprob: -1.0104124546051025
    2. 'the' → logprob: -1.1354124546051025
    3. 'i' → logprob: -2.8854124546051025
    4. 'first' → logprob: -3.5104124546051025
    5. 'selected' → logprob: -3.6354124546051025
    6. 'kn' → logprob: -3.7604124546051025
    7. ' subset' → logprob: -3.8854124546051025
    8. 'a' → logprob: -4.010412216186523
    9. 'minimum' → logprob: -4.260412216186523
    10. 'best' → logprob: -4.260412216186523

Token 166: ' subtree' (ID: 126158)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08368321508169174
    2. 'parent' → logprob: -3.2086832523345947
    3. 'sub' → logprob: -5.208683013916016
    4. '_parent' → logprob: -5.583683013916016
    5. 'scale' → logprob: -5.583683013916016
    6. '())' → logprob: -5.833683013916016
    7. ' parentheses' → logprob: -6.208683013916016
    8. '')' → logprob: -6.333683013916016
    9. ' )' → logprob: -6.708683013916016
    10. 'subset' → logprob: -6.833683013916016

Token 167: ' rooted' (ID: 73759)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02230534516274929
    2. ')' → logprob: -4.022305488586426
    3. 's' → logprob: -6.022305488586426
    4. ',i' → logprob: -7.397305488586426
    5. '[i' → logprob: -8.647305488586426
    6. ' ,' → logprob: -8.897305488586426
    7. '[' → logprob: -9.022305488586426
    8. ',node' → logprob: -9.272305488586426
    9. '[],' → logprob: -9.397305488586426
    10. ',
' → logprob: -9.397305488586426

Token 168: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.02356700785458088
    2. 'i' → logprob: -4.523567199707031
    3. ' at' → logprob: -5.273567199707031
    4. ')' → logprob: -5.398567199707031
    5. ',' → logprob: -6.398567199707031
    6. '[i' → logprob: -7.523567199707031
    7. '_at' → logprob: -8.773567199707031
    8. ',i' → logprob: -8.898567199707031
    9. '_' → logprob: -9.648567199707031
    10. '_i' → logprob: -9.648567199707031

Token 169: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.6312321753939614e-05
    2. ' i' → logprob: -10.375036239624023
    3. ')' → logprob: -12.875036239624023
    4. ')i' → logprob: -13.250036239624023
    5. 'node' → logprob: -14.750036239624023
    6. '[i' → logprob: -15.875036239624023
    7. ' node' → logprob: -16.750036239624023
    8. '
' → logprob: -17.000036239624023
    9. '`' → logprob: -17.375036239624023
    10. '```' → logprob: -17.625036239624023

Token 170: ' with' (ID: 483)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04909653216600418
    2. ',' → logprob: -3.0490965843200684
    3. '[i' → logprob: -8.42409610748291
    4. ',)' → logprob: -9.17409610748291
    5. ' )' → logprob: -10.29909610748291
    6. ',i' → logprob: -10.42409610748291
    7. ',
' → logprob: -10.54909610748291
    8. '   ' → logprob: -10.67409610748291
    9. '[' → logprob: -10.79909610748291
    10. ' ,' → logprob: -11.67409610748291

Token 171: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -2.0342941284179688
    2. 'its' → logprob: -2.2842941284179688
    3. 'out' → logprob: -2.5342941284179688
    4. 'root' → logprob: -2.6592941284179688
    5. 'balanced' → logprob: -2.6592941284179688
    6. ' its' → logprob: -3.0342941284179688
    7. '0' → logprob: -3.1592941284179688
    8. 'left' → logprob: -3.2842941284179688
    9. 'i' → logprob: -3.2842941284179688
    10. 'sum' → logprob: -3.6592941284179688

Token 172: ' minimal' (ID: 19957)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.7992408275604248
    2. 'left' → logprob: -1.6742408275604248
    3. 'minimum' → logprob: -2.924240827560425
    4. 'i' → logprob: -2.924240827560425
    5. 'weight' → logprob: -3.174240827560425
    6. 'ratio' → logprob: -3.549240827560425
    7. 'color' → logprob: -3.674240827560425
    8. 'root' → logprob: -4.299241065979004
    9. 'balance' → logprob: -4.799241065979004
    10. 'given' → logprob: -4.799241065979004

Token 173: ' weights' (ID: 28460)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.1720426380634308
    2. 'total' → logprob: -3.5470426082611084
    3. 'number' → logprob: -4.0470428466796875
    4. 'l' → logprob: -4.1720428466796875
    5. 'difference' → logprob: -4.6720428466796875
    6. 'sum' → logprob: -4.7970428466796875
    7. 'value' → logprob: -4.9220428466796875
    8. 'mass' → logprob: -4.9220428466796875
    9. 'cost' → logprob: -4.9220428466796875
    10. 'height' → logprob: -5.0470428466796875

Token 174: ' assignment' (ID: 24618)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38961851596832275
    2. ',' → logprob: -1.1396185159683228
    3. ',
' → logprob: -7.139618396759033
    4. ' ,' → logprob: -7.389618396759033
    5. ',)' → logprob: -7.764618396759033
    6. ' )' → logprob: -8.514618873596191
    7. '   ' → logprob: -9.139618873596191
    8. ' of' → logprob: -9.639618873596191
    9. '),' → logprob: -9.889618873596191
    10. '[' → logprob: -10.264618873596191

Token 175: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.056248001754283905
    2. ',' → logprob: -2.9312479496002197
    3. '   ' → logprob: -6.931248188018799
    4. ' )' → logprob: -8.68124771118164
    5. ' ,' → logprob: -9.30624771118164
    6. ',
' → logprob: -10.55624771118164
    7. ',)' → logprob: -10.68124771118164
    8. ')
' → logprob: -10.93124771118164
    9. ',i' → logprob: -11.93124771118164
    10. ' for' → logprob: -12.05624771118164

Token 176: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5533716082572937
    2. '   ' → logprob: -1.3033716678619385
    3. ' dp' → logprob: -3.3033716678619385
    4. '<|end|>' → logprob: -3.3033716678619385
    5. '
' → logprob: -3.5533716678619385
    6. 'def' → logprob: -4.553371429443359
    7. ' for' → logprob: -4.803371429443359
    8. ',' → logprob: -4.928371429443359
    9. ')' → logprob: -5.553371429443359
    10. ' =' → logprob: -5.678371429443359

Token 177: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0029475127812474966
    2. ' dp' → logprob: -6.5029473304748535
    3. ' =' → logprob: -6.8779473304748535
    4. '=' → logprob: -8.877947807312012
    5. 'def' → logprob: -9.002947807312012
    6. '   ' → logprob: -10.377947807312012
    7. '_' → logprob: -10.627947807312012
    8. '_dp' → logprob: -10.752947807312012
    9. '#' (adapté à ' #') → logprob: -11.252947807312012
    10. ')' → logprob: -11.252947807312012

Token 178: ' weight' (ID: 6049)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0009761215187609196
    2. 'def' → logprob: -7.375976085662842
    3. ' dp' → logprob: -8.8759765625
    4. '#' → logprob: -9.6259765625
    5. 'for' → logprob: -10.6259765625
    6. 'd' → logprob: -10.8759765625
    7. '   ' → logprob: -11.0009765625
    8. 'from' → logprob: -11.1259765625
    9. 'weight' → logprob: -11.3759765625
    10. 'import' → logprob: -11.5009765625

Token 179: '[i' (ID: 1768)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0029515549540519714
    2. '=[]' → logprob: -6.752951622009277
    3. '=[' → logprob: -7.252951622009277
    4. ' =' → logprob: -7.627951622009277
    5. '[' → logprob: -8.002951622009277
    6. 's' → logprob: -9.002951622009277
    7. '_' → logprob: -10.377951622009277
    8. ',' → logprob: -10.502951622009277
    9. '[i' → logprob: -11.002951622009277
    10. '_=' → logprob: -11.252951622009277

Token 180: ']:' (ID: 12433)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01722213625907898
    2. ']=' → logprob: -4.142221927642822
    3. ']:' → logprob: -7.892221927642822
    4. ']==' → logprob: -8.89222240447998
    5. '[i' → logprob: -9.51722240447998
    6. '],' → logprob: -9.51722240447998
    7. ']={' → logprob: -9.64222240447998
    8. '][' → logprob: -9.64222240447998
    9. '])' → logprob: -9.64222240447998
    10. ':]' → logprob: -9.76722240447998

Token 181: ' integer' (ID: 16336)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5178909301757812
    2. ' [' → logprob: -1.3928909301757812
    3. '[p' → logprob: -3.0178909301757812
    4. '0' → logprob: -3.5178909301757812
    5. '[r' → logprob: -4.017890930175781
    6. 'p' → logprob: -4.642890930175781
    7. '[b' → logprob: -4.767890930175781
    8. '[q' → logprob: -5.017890930175781
    9. 'b' → logprob: -5.392890930175781
    10. ' p' → logprob: -5.642890930175781

Token 182: ' weight' (ID: 6049)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9026710391044617
    2. '=' → logprob: -1.2776710987091064
    3. ' =' → logprob: -1.2776710987091064
    4. 'weight' → logprob: -4.027670860290527
    5. ' dp' → logprob: -5.527670860290527
    6. '=
' → logprob: -5.527670860290527
    7. ',' → logprob: -6.152670860290527
    8. ')' → logprob: -6.402670860290527
    9. 'for' → logprob: -6.652670860290527
    10. 'def' → logprob: -7.027670860290527

Token 183: ' assigned' (ID: 21482)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9465432167053223
    2. 'weight' → logprob: -1.0715432167053223
    3. '=' → logprob: -2.1965432167053223
    4. ' =' → logprob: -2.5715432167053223
    5. '   ' → logprob: -3.5715432167053223
    6. 'def' → logprob: -4.071543216705322
    7. ')' → logprob: -4.696543216705322
    8. ' weight' → logprob: -5.446543216705322
    9. ',' → logprob: -5.821543216705322
    10. '#' → logprob: -5.821543216705322

Token 184: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.16396963596344
    2. '=' → logprob: -1.41396963596344
    3. '<|end|>' → logprob: -1.66396963596344
    4. ')' → logprob: -2.2889695167541504
    5. ' =' → logprob: -3.1639695167541504
    6. 'def' → logprob: -3.9139695167541504
    7. 's' → logprob: -3.9139695167541504
    8. 'dp' → logprob: -4.53896951675415
    9. ']' → logprob: -4.91396951675415
    10. 'weight' → logprob: -4.91396951675415

Token 185: ' the' (ID: 290)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.4221126139163971
    2. 'i' → logprob: -1.2971125841140747
    3. ' node' → logprob: -3.6721127033233643
    4. 'the' → logprob: -3.7971127033233643
    5. 'each' → logprob: -4.672112464904785
    6. 'vertex' → logprob: -5.297112464904785
    7. 'sub' → logprob: -5.547112464904785
    8. 'child' → logprob: -6.172112464904785
    9. ' i' → logprob: -6.547112464904785
    10. ' subtree' → logprob: -8.047112464904785

Token 186: ' node' (ID: 4596)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03584439679980278
    2. 'node' → logprob: -4.035844326019287
    3. 'sub' → logprob: -4.785844326019287
    4. ' i' → logprob: -5.285844326019287
    5. ' node' → logprob: -6.410844326019287
    6. ' subtree' → logprob: -6.535844326019287
    7. 'balanced' → logprob: -8.410844802856445
    8. 'root' → logprob: -8.535844802856445
    9. ' ith' → logprob: -8.660844802856445
    10. 'ith' → logprob: -8.785844802856445

Token 187: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4807462692260742
    2. 'weight' → logprob: -0.9807462692260742
    3. 'def' → logprob: -5.980746269226074
    4. '   ' → logprob: -7.230746269226074
    5. ' weight' → logprob: -7.355746269226074
    6. ' dp' → logprob: -7.605746269226074
    7. ' =' → logprob: -7.855746269226074
    8. '#' → logprob: -8.355746269226074
    9. 'weights' → logprob: -8.355746269226074
    10. 'max' → logprob: -8.480746269226074

Token 188: '   ' (ID: 271)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.35587164759635925
    2. 'dp' → logprob: -1.2308716773986816
    3. 'def' → logprob: -5.605871677398682
    4. ' weight' → logprob: -6.480871677398682
    5. '   ' → logprob: -6.605871677398682
    6. '
' → logprob: -8.355871200561523
    7. ' dp' → logprob: -8.480871200561523
    8. '#' → logprob: -8.855871200561523
    9. 'weights' → logprob: -9.730871200561523
    10. 'for' → logprob: -9.855871200561523

Token 189: ' #' (ID: 1069)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.48338302969932556
    2. 'dp' → logprob: -1.608383059501648
    3. 'def' → logprob: -1.733383059501648
    4. 'for' → logprob: -5.9833831787109375
    5. '   ' → logprob: -6.6083831787109375
    6. ' weight' → logprob: -6.9833831787109375
    7. '#' (adapté à ' #') → logprob: -7.8583831787109375
    8. 'from' → logprob: -8.733383178710938
    9. 'stack' → logprob: -8.983383178710938
    10. '
' → logprob: -8.983383178710938

Token 190: ' We'll' (ID: 46830)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.38094666600227356
    2. 'def' → logprob: -1.7559466361999512
    3. 'dp' → logprob: -2.505946636199951
    4. 'for' → logprob: -3.130946636199951
    5. 'from' → logprob: -5.005946636199951
    6. 'stack' → logprob: -5.380946636199951
    7. 'visited' → logprob: -5.755946636199951
    8. '#' → logprob: -6.380946636199951
    9. 'import' → logprob: -7.380946636199951
    10. 'parent' → logprob: -7.505946636199951

Token 191: ' do' (ID: 621)
  Prédit: 'define'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'define' → logprob: -0.209641233086586
    2. 'def' → logprob: -2.209641218185425
    3. 'continue' → logprob: -3.209641218185425
    4. 'import' → logprob: -4.459641456604004
    5. 'dfs' → logprob: -4.834641456604004
    6. 'assign' → logprob: -5.084641456604004
    7. ' define' → logprob: -5.834641456604004
    8. 'process' → logprob: -5.959641456604004
    9. 'use' → logprob: -6.084641456604004
    10. 'calculate' → logprob: -6.709641456604004

Token 192: ' post' (ID: 1926)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1716548353433609
    2. 'dfs' → logprob: -2.2966549396514893
    3. 'def' → logprob: -3.1716549396514893
    4. ' a' → logprob: -4.42165470123291
    5. 'dp' → logprob: -6.92165470123291
    6. ' dfs' → logprob: -7.42165470123291
    7. 'from' → logprob: -7.67165470123291
    8. 'the' → logprob: -7.79665470123291
    9. 'post' → logprob: -8.79665470123291
    10. '   ' → logprob: -9.04665470123291

Token 193: '-order' (ID: 41525)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.005023356061428785
    2. '_order' → logprob: -5.75502347946167
    3. '-order' → logprob: -6.38002347946167
    4. ' order' → logprob: -9.380023002624512
    5. 'dfs' → logprob: -10.755023002624512
    6. '   ' → logprob: -11.005023002624512
    7. 'Order' → logprob: -12.130023002624512
    8. '```' → logprob: -12.505023002624512
    9. '    ' → logprob: -12.880023002624512
    10. 'def' → logprob: -13.005023002624512

Token 194: ' dfs' (ID: 51252)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 195: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8155229091644287
    2. '
' → logprob: -1.1905229091644287
    3. 'def' → logprob: -1.4405229091644287
    4. '    
' → logprob: -4.815523147583008
    5. 'weight' → logprob: -5.065523147583008
    6. 'dp' → logprob: -7.815523147583008
    7. '<|end|>' → logprob: -8.065523147583008
    8. 'visited' → logprob: -8.190523147583008
    9. 'weights' → logprob: -8.690523147583008
    10. ' weight' → logprob: -8.815523147583008

Token 196: ' compute' (ID: 23864)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16424603760242462
    2. 'assign' → logprob: -3.414246082305908
    3. 'dfs' → logprob: -3.789246082305908
    4. ' def' → logprob: -3.914246082305908
    5. 'compute' → logprob: -4.039246082305908
    6. 'calculate' → logprob: -4.039246082305908
    7. 'define' → logprob: -4.039246082305908
    8. ' define' → logprob: -5.039246082305908
    9. ' compute' → logprob: -5.414246082305908
    10. ' calculate' → logprob: -6.289246082305908

Token 197: ' minimal' (ID: 19957)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2243259996175766
    2. ' def' → logprob: -1.9743260145187378
    3. 'import' → logprob: -3.7243258953094482
    4. ' from' → logprob: -4.349326133728027
    5. 'from' → logprob: -4.724326133728027
    6. '   ' → logprob: -5.599326133728027
    7. 'weight' → logprob: -5.724326133728027
    8. ' weight' → logprob: -6.099326133728027
    9. 'stack' → logprob: -6.099326133728027
    10. ' import' → logprob: -6.474326133728027

Token 198: ' weights' (ID: 28460)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weights' → logprob: -0.6968796253204346
    2. 'def' → logprob: -0.9468796253204346
    3. 'weight' → logprob: -2.3218796253204346
    4. ' weights' → logprob: -5.3218793869018555
    5. ')' → logprob: -5.8218793869018555
    6. '_weights' → logprob: -5.8218793869018555
    7. '(' → logprob: -6.9468793869018555
    8. ' weight' → logprob: -7.5718793869018555
    9. '(weights' → logprob: -7.8218793869018555
    10. '_weight' → logprob: -7.9468793869018555

Token 199: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22710980474948883
    2. '   ' → logprob: -1.9771097898483276
    3. '
' → logprob: -2.852109909057617
    4. 'visited' → logprob: -6.102109909057617
    5. 'dp' → logprob: -6.477109909057617
    6. 'stack' → logprob: -7.102109909057617
    7. 'import' → logprob: -7.352109909057617
    8. ' def' → logprob: -7.727109909057617
    9. '    
' → logprob: -8.102109909057617
    10. 'weight' → logprob: -8.227109909057617

Token 200: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4427749216556549
    2. 'weight' → logprob: -1.1927748918533325
    3. '   ' → logprob: -3.817775011062622
    4. 'dp' → logprob: -3.942775011062622
    5. ' weight' → logprob: -5.817774772644043
    6. 'stack' → logprob: -5.942774772644043
    7. 'import' → logprob: -6.317774772644043
    8. '
' → logprob: -6.317774772644043
    9. 'weights' → logprob: -7.067774772644043
    10. 'from' → logprob: -7.317774772644043

Token 201: ' weight' (ID: 6049)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6243983507156372
    2. 'weight' (adapté à ' weight') → logprob: -0.8743983507156372
    3. 'stack' → logprob: -3.3743982315063477
    4. 'import' → logprob: -5.624398231506348
    5. 'dp' → logprob: -5.624398231506348
    6. 'from' → logprob: -5.874398231506348
    7. 'visited' → logprob: -6.624398231506348
    8. 'parent' → logprob: -7.499398231506348
    9. 'weights' → logprob: -7.874398231506348
    10. '   ' → logprob: -8.249398231506348

Token 202: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.059573497623205185
    2. '=[' → logprob: -3.4345734119415283
    3. ' =' → logprob: -3.6845734119415283
    4. '=[]' → logprob: -7.934573650360107
    5. '[' → logprob: -9.55957317352295
    6. '={}' → logprob: -10.80957317352295
    7. ' =[' → logprob: -10.93457317352295
    8. '={' → logprob: -12.80957317352295
    9. '＝' → logprob: -13.05957317352295
    10. '=[[' → logprob: -13.05957317352295

Token 203: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5451681974809617e-05
    2. ' [' → logprob: -11.250015258789062
    3. '[p' → logprob: -13.625015258789062
    4. '[-' → logprob: -14.375015258789062
    5. '{}' → logprob: -14.625015258789062
    6. 'p' → logprob: -16.500015258789062
    7. '[b' → logprob: -16.875015258789062
    8. '{' → logprob: -17.500015258789062
    9. '   ' → logprob: -17.750015258789062
    10. '[a' → logprob: -18.750015258789062

Token 204: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0038671812508255243
    2. '1' → logprob: -5.628867149353027
    3. '-' → logprob: -8.378867149353027
    4. 'None' → logprob: -10.253867149353027
    5. '[' → logprob: -14.128867149353027
    6. ']' → logprob: -14.503867149353027
    7. ' ' → logprob: -14.503867149353027
    8. '   ' → logprob: -16.003868103027344
    9. '```' → logprob: -16.003868103027344
    10. ' -' → logprob: -16.503868103027344

Token 205: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.12772871553897858
    2. ']' → logprob: -2.1277287006378174
    3. ']*' → logprob: -8.002728462219238
    4. ']+' → logprob: -8.127728462219238
    5. ' for' → logprob: -9.627728462219238
    6. 'for' → logprob: -10.127728462219238
    7. '*(' → logprob: -10.502728462219238
    8. '(n' → logprob: -10.877728462219238
    9. '](' → logprob: -11.502728462219238
    10. ' ]' → logprob: -12.252728462219238

Token 206: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00011784763046307489
    2. '(n' → logprob: -9.125118255615234
    3. ' n' → logprob: -12.000118255615234
    4. '(' → logprob: -14.125118255615234
    5. '   ' → logprob: -14.250118255615234
    6. '0' → logprob: -14.625118255615234
    7. '2' → logprob: -15.250118255615234
    8. '[n' → logprob: -15.500118255615234
    9. '4' → logprob: -16.000118255615234
    10. '	n' → logprob: -16.750118255615234

Token 207: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.4849443838757e-06
    2. ' +' → logprob: -12.875004768371582
    3. '+
' → logprob: -13.375004768371582
    4. '+n' → logprob: -15.375004768371582
    5. '+[' → logprob: -17.000003814697266
    6. '+)' → logprob: -17.500003814697266
    7. '   ' → logprob: -17.500003814697266
    8. '```' → logprob: -17.750003814697266
    9. ')+' → logprob: -18.125003814697266
    10. '1' → logprob: -18.500003814697266

Token 208: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. '2' → logprob: -12.25001049041748
    3. ' ' → logprob: -12.62501049041748
    4. '+' → logprob: -13.62501049041748
    5. '(' → logprob: -14.50001049041748
    6. '   ' → logprob: -16.000009536743164
    7. '5' → logprob: -16.750009536743164
    8. '```' → logprob: -17.000009536743164
    9. ')' → logprob: -17.750009536743164
    10. '
' → logprob: -17.875009536743164

Token 209: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023296138271689415
    2. ')
' → logprob: -3.7732961177825928
    3. ')

' → logprob: -10.523296356201172
    4. '   ' → logprob: -10.898296356201172
    5. ')
' → logprob: -12.773296356201172
    6. '
' → logprob: -14.148296356201172
    7. ' )' → logprob: -14.398296356201172
    8. '```' → logprob: -15.398296356201172
    9. ')`' → logprob: -15.648296356201172
    10. 'def' → logprob: -15.898296356201172

Token 210: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005897268652915955
    2. 'stack' → logprob: -6.130897045135498
    3. 'import' → logprob: -6.505897045135498
    4. '
' → logprob: -6.880897045135498
    5. 'visited' → logprob: -7.255897045135498
    6. ' def' → logprob: -8.630897521972656
    7. '   ' → logprob: -8.755897521972656
    8. 'from' → logprob: -9.880897521972656
    9. 'parent' → logprob: -10.505897521972656
    10. '    
' → logprob: -11.130897521972656

Token 211: ' memo' (ID: 46393)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03818941116333008
    2. 'import' → logprob: -3.53818941116333
    3. 'visited' → logprob: -5.03818941116333
    4. 'from' → logprob: -6.66318941116333
    5. 'stack' → logprob: -7.78818941116333
    6. 'sys' → logprob: -9.663188934326172
    7. 'for' → logprob: -9.913188934326172
    8. 'parent' → logprob: -10.413188934326172
    9. 'adj' → logprob: -10.663188934326172
    10. 'dp' → logprob: -11.413188934326172

Token 212: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3134753704071045
    2. ' =' → logprob: -1.3134753704071045
    3. '={}' → logprob: -8.813475608825684
    4. ')' → logprob: -11.188475608825684
    5. '[' → logprob: -11.438475608825684
    6. '={' → logprob: -11.813475608825684
    7. '=[]' → logprob: -12.063475608825684
    8. ']' → logprob: -12.688475608825684
    9. '=[' → logprob: -12.813475608825684
    10. '_' → logprob: -12.813475608825684

Token 213: ' {}

' (ID: 21724)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.00033832306507974863
    2. '[' → logprob: -8.250338554382324
    3. '[-' → logprob: -9.500338554382324
    4. 'dict' → logprob: -13.750338554382324
    5. '{' → logprob: -14.000338554382324
    6. '[]' → logprob: -16.125337600708008
    7. '{}
' → logprob: -16.250337600708008
    8. ' {}' → logprob: -16.500337600708008
    9. '{})' → logprob: -16.875337600708008
    10. '{}

' → logprob: -17.000337600708008

Token 214: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.885492621222511e-05
    2. ' def' → logprob: -9.750068664550781
    3. '   ' → logprob: -11.875068664550781
    4. ')' → logprob: -13.875068664550781
    5. '
' → logprob: -13.875068664550781
    6. '	def' → logprob: -14.375068664550781
    7. '    
' → logprob: -15.000068664550781
    8. 'for' → logprob: -16.25006866455078
    9. 'dfs' → logprob: -16.25006866455078
    10. '<|end|>' → logprob: -16.25006866455078

Token 215: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.696889623621246e-06
    2. ' def' → logprob: -12.87500286102295
    3. ')' → logprob: -17.125001907348633
    4. 'from' → logprob: -17.500001907348633
    5. '   ' → logprob: -17.625001907348633
    6. 'import' → logprob: -17.750001907348633
    7. '```' → logprob: -18.750001907348633
    8. '
' → logprob: -18.875001907348633
    9. '	def' → logprob: -19.250001907348633
    10. ':def' → logprob: -19.375001907348633

Token 216: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.00012701898231171072
    2. ' dfs' → logprob: -9.000126838684082
    3. 'dp' → logprob: -12.625126838684082
    4. 'solve' → logprob: -16.0001277923584
    5. 'post' → logprob: -16.3751277923584
    6. 'df' → logprob: -17.6251277923584
    7. 'f' → logprob: -19.2501277923584
    8. 'calc' → logprob: -19.5001277923584
    9. 'weight' → logprob: -20.0001277923584
    10. 'DFS' → logprob: -20.1251277923584

Token 217: '(x' (ID: 4061)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.055097226053476334
    2. '(' → logprob: -3.0550973415374756
    3. '(node' → logprob: -5.0550971031188965
    4. '(u' → logprob: -9.430097579956055
    5. '(x' → logprob: -11.430097579956055
    6. '(n' → logprob: -11.555097579956055
    7. '(id' → logprob: -13.055097579956055
    8. ' (' → logprob: -13.430097579956055
    9. '(
' → logprob: -13.805097579956055
    10. '(root' → logprob: -14.055097579956055

Token 218: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02819593995809555
    2. ',' → logprob: -3.653195858001709
    3. '):
' → logprob: -6.778195858001709
    4. ')' → logprob: -7.653195858001709
    5. ' ):' → logprob: -8.903196334838867
    6. ',x' → logprob: -9.653196334838867
    7. '(x' → logprob: -10.528196334838867
    8. '   ' → logprob: -11.028196334838867
    9. ' ,' → logprob: -11.528196334838867
    10. ':' → logprob: -12.028196334838867

Token 219: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0061225369572639465
    2. ' if' → logprob: -5.131122589111328
    3. 'if' → logprob: -9.256122589111328
    4. '       ' → logprob: -9.756122589111328
    5. ',' → logprob: -11.256122589111328
    6. '    
' → logprob: -11.506122589111328
    7. '   ' → logprob: -12.506122589111328
    8. ' for' → logprob: -12.756122589111328
    9. '    ' → logprob: -12.756122589111328
    10. '	if' → logprob: -13.131122589111328

Token 220: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.028994137421250343
    2. ' if' → logprob: -3.653994083404541
    3. '   ' → logprob: -6.028994083404541
    4. 'left' → logprob: -9.1539945602417
    5. 'l' → logprob: -9.7789945602417
    6. 'w' → logprob: -10.9039945602417
    7. ' left' → logprob: -10.9039945602417
    8. 'weight' → logprob: -11.1539945602417
    9. 'non' → logprob: -11.1539945602417
    10. 'for' → logprob: -11.4039945602417

Token 221: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0017680044984444976
    2. 'weight' → logprob: -7.001768112182617
    3. ' x' → logprob: -7.251768112182617
    4. 'p' → logprob: -10.126768112182617
    5. 'not' → logprob: -10.251768112182617
    6. '(x' → logprob: -10.376768112182617
    7. ' weight' → logprob: -11.376768112182617
    8. 'len' → logprob: -11.501768112182617
    9. 'b' → logprob: -12.126768112182617
    10. ' not' → logprob: -12.126768112182617

Token 222: '==' (ID: 560)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.9270551800727844
    2. ' in' → logprob: -1.3020551204681396
    3. '==' → logprob: -1.6770551204681396
    4. ' ==' → logprob: -2.5520551204681396
    5. 'in' → logprob: -2.9270551204681396
    6. 'not' → logprob: -4.552055358886719
    7. ')' → logprob: -6.552055358886719
    8. '0' → logprob: -6.802055358886719
    9. ':' → logprob: -8.052055358886719
    10. ')==' → logprob: -8.677055358886719

Token 223: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0921942703134846e-05
    2. ' ' → logprob: -11.62501049041748
    3. '-' → logprob: -13.50001049041748
    4. '1' → logprob: -15.12501049041748
    5. '   ' → logprob: -15.37501049041748
    6. 'n' → logprob: -16.625011444091797
    7. '[]' → logprob: -17.875011444091797
    8. '  ' → logprob: -18.375011444091797
    9. 'None' → logprob: -18.375011444091797
    10. '
' → logprob: -18.500011444091797

Token 224: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16617965698242188
    2. ':
' → logprob: -1.9161796569824219
    3. ':return' → logprob: -5.166179656982422
    4. ' or' → logprob: -9.041179656982422
    5. '       ' → logprob: -9.666179656982422
    6. '   ' → logprob: -10.166179656982422
    7. 'return' → logprob: -12.541179656982422
    8. ':
' → logprob: -13.041179656982422
    9. '):' → logprob: -13.541179656982422
    10. '):
' → logprob: -13.666179656982422

Token 225: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48546102643013
    2. 'return' → logprob: -0.9854609966278076
    3. ' return' → logprob: -4.735461235046387
    4. '           ' → logprob: -6.235461235046387
    5. 'weight' → logprob: -7.985461235046387
    6. '   ' → logprob: -8.860461235046387
    7. '
' → logprob: -10.485461235046387
    8. ':return' → logprob: -10.985461235046387
    9. ' weight' → logprob: -11.235461235046387
    10. '	return' → logprob: -11.985461235046387

Token 226: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0967734232544899
    2. ' return' → logprob: -2.846773386001587
    3. '       ' → logprob: -3.471773386001587
    4. '   ' → logprob: -6.221773624420166
    5. '           ' → logprob: -7.596773624420166
    6. '1' → logprob: -8.221773147583008
    7. 'weight' → logprob: -8.346773147583008
    8. '
' → logprob: -10.096773147583008
    9. '0' → logprob: -10.096773147583008
    10. ' weight' → logprob: -10.471773147583008

Token 227: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005276926793158054
    2. '(' → logprob: -5.380277156829834
    3. 'True' → logprob: -7.880277156829834
    4. '(True' → logprob: -9.005276679992676
    5. '0' → logprob: -9.130276679992676
    6. '[' → logprob: -11.005276679992676
    7. ' ' → logprob: -11.130276679992676
    8. '[]' → logprob: -12.630276679992676
    9. ' (' → logprob: -13.130276679992676
    10. ' True' → logprob: -13.255276679992676

Token 228: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.027584176510572433
    2. '(' → logprob: -3.7775840759277344
    3. '0' → logprob: -5.902584075927734
    4. 'True' → logprob: -6.777584075927734
    5. '(True' → logprob: -8.152584075927734
    6. '[]' → logprob: -9.777584075927734
    7. '()' → logprob: -10.277584075927734
    8. '[' → logprob: -10.527584075927734
    9. '{}' → logprob: -10.777584075927734
    10. '{' → logprob: -11.902584075927734

Token 229: ' ' (ID: 220)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5099297761917114
    2. '
' → logprob: -1.1349297761917114
    3. '   ' → logprob: -3.259929656982422
    4. '       ' → logprob: -4.259929656982422
    5. '    
' → logprob: -4.634929656982422
    6. '<|end|>' → logprob: -5.134929656982422
    7. '  
' → logprob: -5.759929656982422
    8. ' 
' → logprob: -5.884929656982422
    9. '        
' → logprob: -7.259929656982422
    10. '\
' → logprob: -7.509929656982422

Token 230: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0028615815099328756
    2. '\n' → logprob: -6.752861499786377
    3. '   ' → logprob: -7.752861499786377
    4. '    
' → logprob: -8.127861976623535
    5. '       ' → logprob: -8.252861976623535
    6. ' 
' → logprob: -8.752861976623535
    7. '  
' → logprob: -8.877861976623535
    8. '<|end|>' → logprob: -8.877861976623535
    9. '        
' → logprob: -9.752861976623535
    10. '
' → logprob: -9.752861976623535

Token 231: ' weight' (ID: 6049)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.394135612528771e-05
    2. ' ' → logprob: -10.500043869018555
    3. 'weight' → logprob: -11.500043869018555
    4. '0' → logprob: -12.500043869018555
    5. 'return' → logprob: -14.250043869018555
    6. 'True' → logprob: -14.500043869018555
    7. '(' → logprob: -14.500043869018555
    8. '   ' → logprob: -15.125043869018555
    9. ' weight' → logprob: -15.875043869018555
    10. '[' → logprob: -16.875043869018555

Token 232: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 233: ' a' (ID: 261)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.013266702182590961
    2. '0' → logprob: -4.888266563415527
    3. 'balanced' → logprob: -6.013266563415527
    4. 'sub' → logprob: -6.638266563415527
    5. 'leaf' → logprob: -6.763266563415527
    6. 'empty' → logprob: -8.388266563415527
    7. 'node' → logprob: -8.638266563415527
    8. 'x' → logprob: -8.763266563415527
    9. ' ' → logprob: -10.013266563415527
    10. 'None' → logprob: -10.513266563415527

Token 234: ' single' (ID: 4590)
  Prédit: 'leaf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'leaf' → logprob: -0.009689034894108772
    2. 'balanced' → logprob: -5.259688854217529
    3. ' leaf' → logprob: -5.509688854217529
    4. 'null' → logprob: -8.509689331054688
    5. 'empty' → logprob: -9.759689331054688
    6. ' balanced' → logprob: -10.134689331054688
    7. 'node' → logprob: -10.384689331054688
    8. 'unit' → logprob: -11.509689331054688
    9. '0' → logprob: -11.759689331054688
    10. 'dummy' → logprob: -12.009689331054688

Token 235: ' weight' (ID: 6049)
  Prédit: 'leaf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'leaf' → logprob: -0.4949786365032196
    2. 'node' → logprob: -0.994978666305542
    3. 'unit' → logprob: -4.494978427886963
    4. ' node' → logprob: -5.744978427886963
    5. ' leaf' → logprob: -6.244978427886963
    6. '1' → logprob: -6.744978427886963
    7. 'child' → logprob: -6.744978427886963
    8. 'balanced' → logprob: -7.744978427886963
    9. 'atom' → logprob: -7.869978427886963
    10. 'ball' → logprob: -8.744978904724121

Token 236: ' is' (ID: 382)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 237: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029828163678757846
    2. ' ' → logprob: -8.125298500061035
    3. '0' → logprob: -14.000298500061035
    4. '   ' → logprob: -14.250298500061035
    5. ' ' → logprob: -15.875298500061035
    6. '  ' → logprob: -16.12529754638672
    7. '[' → logprob: -16.12529754638672
    8. '
' → logprob: -16.25029754638672
    9. 'balanced' → logprob: -16.62529754638672
    10. '(' → logprob: -16.62529754638672

Token 238: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.200166469876422e-06
    2. ' ' → logprob: -12.500004768371582
    3. '
' → logprob: -15.500004768371582
    4. 'balanced' → logprob: -15.500004768371582
    5. '   ' → logprob: -15.750004768371582
    6. '0' → logprob: -15.875004768371582
    7. 'assigned' → logprob: -16.2500057220459
    8. '[' → logprob: -16.3750057220459
    9. '```' → logprob: -17.0625057220459
    10. 'possible' → logprob: -17.1250057220459

Token 239: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4058217406272888
    2. '<|end|>' → logprob: -1.5308218002319336
    3. '       ' → logprob: -2.5308218002319336
    4. '
' → logprob: -4.030821800231934
    5. '    
' → logprob: -4.155821800231934
    6. '\n' → logprob: -6.780821800231934
    7. '<|end|>' → logprob: -7.155821800231934
    8. '        
' → logprob: -7.655821800231934
    9. '  
' → logprob: -7.655821800231934
    10. '```' → logprob: -8.405821800231934

Token 240: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001925182994455099
    2. '   ' → logprob: -7.126924991607666
    3. 'weight' → logprob: -8.876925468444824
    4. ')' → logprob: -9.126925468444824
    5. 'if' → logprob: -9.126925468444824
    6. '        
' → logprob: -9.251925468444824
    7. 's' → logprob: -9.376925468444824
    8. 'w' → logprob: -9.626925468444824
    9. 'token' → logprob: -10.001925468444824
    10. 'u' → logprob: -10.126925468444824

Token 241: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.8768350481987
    2. 'left' → logprob: -0.8768350481987
    3. 'lw' → logprob: -2.7518351078033447
    4. 'w' → logprob: -3.3768351078033447
    5. 'l' → logprob: -3.3768351078033447
    6. 'wl' → logprob: -4.626834869384766
    7. 'pl' → logprob: -4.626834869384766
    8. 'lp' → logprob: -5.626834869384766
    9. 'L' → logprob: -5.876834869384766
    10. 'W' → logprob: -6.376834869384766

Token 242: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.47407785058021545
    2. ' x' → logprob: -0.9740778207778931
    3. '(x' → logprob: -14.099078178405762
    4. '	x' → logprob: -17.599077224731445
    5. ' ' → logprob: -18.099077224731445
    6. '"x' → logprob: -18.099077224731445
    7. ' (' → logprob: -18.224077224731445
    8. ')x' → logprob: -18.349077224731445
    9. '(' → logprob: -18.849077224731445
    10. '   ' → logprob: -19.661577224731445

Token 243: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3193592429161072
    2. ' in' → logprob: -1.319359302520752
    3. ' not' → logprob: -5.819359302520752
    4. 'not' → logprob: -6.069359302520752
    5. ')' → logprob: -7.319359302520752
    6. ']' → logprob: -9.694358825683594
    7. 'x' → logprob: -10.819358825683594
    8. ' ' → logprob: -10.819358825683594
    9. '[' → logprob: -11.944358825683594
    10. 'n' → logprob: -12.694358825683594

Token 244: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.0001584850688232109
    2. ' memo' → logprob: -8.750158309936523
    3. 'm' → logprob: -17.625158309936523
    4. 'memory' → logprob: -17.750158309936523
    5. '.memo' → logprob: -18.625158309936523
    6. 'mem' → logprob: -19.250158309936523
    7. ')' → logprob: -20.125158309936523
    8. '   ' → logprob: -20.625158309936523
    9. 'mime' → logprob: -20.875158309936523
    10. '
' → logprob: -20.875158309936523

Token 245: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00021891399228479713
    2. ':
' → logprob: -9.125219345092773
    3. ':return' → logprob: -9.125219345092773
    4. ' :' → logprob: -14.500219345092773
    5. '):' → logprob: -15.125219345092773
    6. '>:' → logprob: -16.375219345092773
    7. '():' → logprob: -16.875219345092773
    8. ':**' → logprob: -16.875219345092773
    9. '<|end|>' → logprob: -17.125219345092773
    10. ':

' → logprob: -17.250219345092773

Token 246: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08547981083393097
    2. ':' → logprob: -3.085479736328125
    3. ' return' → logprob: -4.460479736328125
    4. ':return' → logprob: -4.460479736328125
    5. ':
' → logprob: -5.210479736328125
    6. 'return' → logprob: -5.210479736328125
    7. '   ' → logprob: -6.835479736328125
    8. '           ' → logprob: -7.835479736328125
    9. ' :' → logprob: -8.335479736328125
    10. ' :
' → logprob: -9.210479736328125

Token 247: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07909809052944183
    2. ' return' → logprob: -2.5790979862213135
    3. '           ' → logprob: -8.829097747802734
    4. '
' → logprob: -10.454097747802734
    5. '       ' → logprob: -10.954097747802734
    6. ':return' → logprob: -11.454097747802734
    7. '{return' → logprob: -13.454097747802734
    8. '   ' → logprob: -13.704097747802734
    9. '	return' → logprob: -14.329097747802734
    10. '```' → logprob: -14.704097747802734

Token 248: ' memo' (ID: 46393)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.000553151941858232
    2. ' memo' → logprob: -7.500553131103516
    3. 'm' → logprob: -16.375553131103516
    4. 'mem' → logprob: -18.000553131103516
    5. 'memory' → logprob: -20.125553131103516
    6. 'memor' → logprob: -20.375553131103516
    7. '.memo' → logprob: -20.625553131103516
    8. 'mime' → logprob: -20.875553131103516
    9. '   ' → logprob: -21.750553131103516
    10. '[m' → logprob: -22.625553131103516

Token 249: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.002003580564633012
    2. '(x' → logprob: -6.2520036697387695
    3. '[' → logprob: -9.87700366973877
    4. 'x' → logprob: -10.75200366973877
    5. '[
' → logprob: -14.37700366973877
    6. '```' → logprob: -14.50200366973877
    7. '{x' → logprob: -14.75200366973877
    8. ']' → logprob: -15.87700366973877
    9. '\[' → logprob: -15.87700366973877
    10. '<x' → logprob: -16.377002716064453

Token 250: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09222904592752457
    2. ')' → logprob: -2.717229127883911
    3. '])' → logprob: -3.842229127883911
    4. ']
' → logprob: -7.967228889465332
    5. ')]' → logprob: -9.467228889465332
    6. ']

' → logprob: -9.842228889465332
    7. ')
' → logprob: -10.717228889465332
    8. ')x' → logprob: -10.717228889465332
    9. 'x' → logprob: -11.092228889465332
    10. '])
' → logprob: -11.342228889465332

Token 251: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9034749269485474
    2. '       ' → logprob: -1.6534749269485474
    3. '
' → logprob: -2.278474807739258
    4. ' w' → logprob: -2.778474807739258
    5. ' l' → logprob: -3.153474807739258
    6. '        
' → logprob: -3.403474807739258
    7. ' res' → logprob: -3.528474807739258
    8. 'w' → logprob: -3.653474807739258
    9. ' weight' → logprob: -3.653474807739258
    10. '    
' → logprob: -3.903474807739258

Token 252: ' lw' (ID: 32990)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9067552089691162
    2. 'left' → logprob: -1.2817552089691162
    3. 'w' → logprob: -1.4067552089691162
    4. 'pq' → logprob: -4.156755447387695
    5. 'pl' → logprob: -5.156755447387695
    6. 'num' → logprob: -5.156755447387695
    7. 'A' → logprob: -5.281755447387695
    8. 'pp' → logprob: -5.531755447387695
    9. '#' → logprob: -5.781755447387695
    10. 'if' → logprob: -5.906755447387695

Token 253: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011216288432478905
    2. ' =' → logprob: -4.511216163635254
    3. ',' → logprob: -10.011216163635254
    4. '=l' → logprob: -10.636216163635254
    5. '   ' → logprob: -11.011216163635254
    6. '=df' → logprob: -11.261216163635254
    7. '=w' → logprob: -11.636216163635254
    8. ')=' → logprob: -12.261216163635254
    9. '=d' → logprob: -12.261216163635254
    10. '=
' → logprob: -12.261216163635254

Token 254: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.0011893989285454154
    2. ' dfs' → logprob: -6.751189231872559
    3. '0' → logprob: -12.251189231872559
    4. 'df' → logprob: -12.376189231872559
    5. '   ' → logprob: -12.376189231872559
    6. '1' → logprob: -13.251189231872559
    7. '
' → logprob: -14.126189231872559
    8. 'l' → logprob: -14.376189231872559
    9. 'dfa' → logprob: -14.751189231872559
    10. 'd' → logprob: -14.876189231872559

Token 255: '(r' (ID: 4729)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -8.268254896393046e-05
    2. '(b' → logprob: -9.625082969665527
    3. '(' → logprob: -11.500082969665527
    4. '(q' → logprob: -12.500082969665527
    5. '(r' → logprob: -13.125082969665527
    6. 'p' → logprob: -15.375082969665527
    7. '(l' → logprob: -15.875082969665527
    8. '((' → logprob: -16.12508201599121
    9. ' (' → logprob: -16.62508201599121
    10. 'b' → logprob: -16.87508201599121

Token 256: '[x' (ID: 17295)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.14479123055934906
    2. '[x' → logprob: -2.0197911262512207
    3. '(x' → logprob: -6.269791126251221
    4. ' x' → logprob: -8.769791603088379
    5. '[' → logprob: -10.394791603088379
    6. ')' → logprob: -11.769791603088379
    7. ')x' → logprob: -12.019791603088379
    8. 'r' → logprob: -12.144791603088379
    9. '[
' → logprob: -12.644791603088379
    10. ']' → logprob: -13.269791603088379

Token 257: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.003928675781935453
    2. '])
' → logprob: -6.2539286613464355
    3. '[x' → logprob: -7.1289286613464355
    4. '])+' → logprob: -7.3789286613464355
    5. ']' → logprob: -8.753929138183594
    6. '[' → logprob: -9.253929138183594
    7. ')' → logprob: -9.378929138183594
    8. '])*' → logprob: -9.753929138183594
    9. '])-' → logprob: -10.003929138183594
    10. ' ])' → logprob: -10.378929138183594

Token 258: ' ' (ID: 220)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2093595266342163
    2. '       ' → logprob: -1.9593595266342163
    3. 'l' → logprob: -3.959359645843506
    4. '*l' → logprob: -4.709359645843506
    5. 'if' → logprob: -4.959359645843506
    6. '*
' → logprob: -5.584359645843506
    7. ' *' → logprob: -6.584359645843506
    8. '   ' → logprob: -6.709359645843506
    9. '<|end|>' → logprob: -6.834359645843506
    10. '
' → logprob: -6.959359645843506

Token 259: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08246403932571411
    2. '*' → logprob: -2.9574639797210693
    3. 'if' → logprob: -4.207464218139648
    4. '
' → logprob: -4.832464218139648
    5. 'l' → logprob: -5.957464218139648
    6. '*l' → logprob: -7.582464218139648
    7. 'w' → logprob: -8.457464218139648
    8. '        
' → logprob: -9.082464218139648
    9. '**' → logprob: -9.332464218139648
    10. 'weight' → logprob: -9.332464218139648

Token 260: ' left' (ID: 3561)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6621843576431274
    2. 'weight' → logprob: -1.4121843576431274
    3. 'p' → logprob: -1.9121843576431274
    4. 'q' → logprob: -3.662184238433838
    5. 'r' → logprob: -3.912184238433838
    6. 'b' → logprob: -4.412184238433838
    7. 'dfs' → logprob: -4.412184238433838
    8. ' weight' → logprob: -4.537184238433838
    9. ' l' → logprob: -5.412184238433838
    10. ' p' → logprob: -6.162184238433838

Token 261: ' weight' (ID: 6049)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5304812788963318
    2. '_w' → logprob: -1.7804813385009766
    3. 'w' → logprob: -2.2804813385009766
    4. '_weight' → logprob: -2.9054813385009766
    5. '_child' → logprob: -3.6554813385009766
    6. 'child' → logprob: -4.155481338500977
    7. 'weight' → logprob: -4.155481338500977
    8. ' =' → logprob: -4.530481338500977
    9. '=' → logprob: -5.030481338500977
    10. '_' → logprob: -6.280481338500977

Token 262: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4555705487728119
    2. '       ' → logprob: -1.4555705785751343
    3. '*' → logprob: -2.3305704593658447
    4. '<|end|>' → logprob: -4.330570697784424
    5. '*l' → logprob: -5.455570697784424
    6. ')' → logprob: -5.455570697784424
    7. '        
' → logprob: -5.955570697784424
    8. ' *' → logprob: -6.080570697784424
    9. ')
' → logprob: -6.455570697784424
    10. '<|end|>' → logprob: -6.830570697784424

Token 263: 'red' (ID: 1291)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14308404922485352
    2. 'x' → logprob: -2.2680840492248535
    3. 'r' → logprob: -4.1430840492248535
    4. 'p' → logprob: -5.7680840492248535
    5. ')x' → logprob: -6.0180840492248535
    6. '0' → logprob: -6.3930840492248535
    7. 'weight' → logprob: -6.8930840492248535
    8. ' )' → logprob: -7.2680840492248535
    9. 'l' → logprob: -7.2680840492248535
    10. 'if' → logprob: -7.5180840492248535

Token 264: ' side' (ID: 4307)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007586156018078327
    2. ' node' → logprob: -6.0075860023498535
    3. ' child' → logprob: -6.3825860023498535
    4. ' )' → logprob: -7.1325860023498535
    5. 'child' → logprob: -7.5075860023498535
    6. ' subtree' → logprob: -7.6325860023498535
    7. 'node' → logprob: -8.132586479187012
    8. ')*' → logprob: -8.257586479187012
    9. ')
' → logprob: -8.882586479187012
    10. ' and' → logprob: -8.882586479187012

Token 265: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000897885300219059
    2. ')
' → logprob: -7.6258978843688965
    3. ' )' → logprob: -8.375898361206055
    4. ')*' → logprob: -9.625898361206055
    5. '       ' → logprob: -9.875898361206055
    6. '*' → logprob: -11.000898361206055
    7. '*)' → logprob: -11.250898361206055
    8. '   ' → logprob: -11.375898361206055
    9. ' *' → logprob: -12.500898361206055
    10. ')

' → logprob: -12.625898361206055

Token 266: '       ' (ID: 309)
  Prédit: 'rw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rw' → logprob: -0.6186159253120422
    2. '
' → logprob: -1.3686158657073975
    3. '       ' → logprob: -2.4936158657073975
    4. ' rw' → logprob: -2.8686158657073975
    5. '*' → logprob: -3.6186158657073975
    6. ')' → logprob: -4.243616104125977
    7. '```' → logprob: -5.493616104125977
    8. 'w' → logprob: -5.743616104125977
    9. '
' → logprob: -6.118616104125977
    10. '+' → logprob: -6.368616104125977

Token 267: ' rw' (ID: 37982)
  Prédit: 'rw'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rw' (adapté à ' rw') → logprob: -0.009846396744251251
    2. ' rw' → logprob: -4.634846210479736
    3. 'dw' → logprob: -9.509846687316895
    4. 'qw' → logprob: -11.634846687316895
    5. 'bw' → logprob: -12.884846687316895
    6. 'w' → logprob: -13.759846687316895
    7. '_rw' → logprob: -13.759846687316895
    8. 'gw' → logprob: -14.759846687316895
    9. 'fw' → logprob: -14.884846687316895
    10. 'lw' → logprob: -14.884846687316895

Token 268: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407984733581543
    2. ' =' → logprob: -0.9740798473358154
    3. ' ' → logprob: -13.474080085754395
    4. ')' → logprob: -14.974080085754395
    5. ' ' → logprob: -14.974080085754395
    6. '=d' → logprob: -15.599080085754395
    7. 'dfs' → logprob: -15.849080085754395
    8. '=r' → logprob: -15.974080085754395
    9. ' dfs' → logprob: -16.474079132080078
    10. '=df' → logprob: -16.599079132080078

Token 269: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.01828022487461567
    2. ' dfs' → logprob: -4.018280029296875
    3. 'df' → logprob: -9.768280029296875
    4. '   ' → logprob: -11.143280029296875
    5. '
' → logprob: -11.393280029296875
    6. 'def' → logprob: -11.643280029296875
    7. 'dq' → logprob: -11.643280029296875
    8. 'd' → logprob: -11.893280029296875
    9. 'dp' → logprob: -12.643280029296875
    10. ' ' → logprob: -13.143280029296875

Token 270: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.022140948101878166
    2. '(q' → logprob: -4.022140979766846
    3. 'b' → logprob: -5.772140979766846
    4. '(r' → logprob: -7.522140979766846
    5. '(l' → logprob: -8.897140502929688
    6. '(' → logprob: -9.272140502929688
    7. 'q' → logprob: -10.272140502929688
    8. '   ' → logprob: -10.897140502929688
    9. '(bb' → logprob: -11.022140502929688
    10. ' (' → logprob: -11.147140502929688

Token 271: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.007723502814769745
    2. 'x' → logprob: -5.007723331451416
    3. '[r' → logprob: -7.257723331451416
    4. 'r' → logprob: -8.132723808288574
    5. '[' → logprob: -11.882723808288574
    6. ' x' → logprob: -13.382723808288574
    7. '(x' → logprob: -15.132723808288574
    8. ' [' → logprob: -16.007722854614258
    9. '[
' → logprob: -16.132722854614258
    10. '[i' → logprob: -16.882722854614258

Token 272: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.03433774411678314
    2. '[x' → logprob: -3.4093377590179443
    3. ']' → logprob: -8.159337997436523
    4. 'x' → logprob: -8.284337997436523
    5. ')' → logprob: -9.159337997436523
    6. '])
' → logprob: -11.159337997436523
    7. '[' → logprob: -11.409337997436523
    8. ' ])' → logprob: -12.159337997436523
    9. '][' → logprob: -12.659337997436523
    10. '(x' → logprob: -12.909337997436523

Token 273: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00833690632134676
    2. ' ' → logprob: -5.633337020874023
    3. ')' → logprob: -6.008337020874023
    4. '   ' → logprob: -7.008337020874023
    5. '()' → logprob: -7.758337020874023
    6. '#' → logprob: -8.633337020874023
    7. ' #' → logprob: -9.258337020874023
    8. '(' → logprob: -9.258337020874023
    9. '  ' → logprob: -9.508337020874023
    10. ' (' → logprob: -9.633337020874023

Token 274: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23582850396633148
    2. '#' → logprob: -2.360828399658203
    3. '       ' → logprob: -3.485828399658203
    4. '(r' → logprob: -3.485828399658203
    5. '   ' → logprob: -3.985828399658203
    6. ' #' → logprob: -4.735828399658203
    7. 'r' → logprob: -4.985828399658203
    8. ' ' → logprob: -5.485828399658203
    9. 'w' → logprob: -6.235828399658203
    10. '(' → logprob: -6.235828399658203

Token 275: ' right' (ID: 1849)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.012722481042146683
    2. ' q' → logprob: -4.387722492218018
    3. 'p' → logprob: -8.63772201538086
    4. 'r' → logprob: -10.88772201538086
    5. '   ' → logprob: -12.88772201538086
    6. ' p' → logprob: -13.13772201538086
    7. 'l' → logprob: -13.51272201538086
    8. ' ' → logprob: -13.76272201538086
    9. '	q' → logprob: -13.76272201538086
    10. 'qb' → logprob: -13.76272201538086

Token 276: ' weight' (ID: 6049)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.649982750415802
    2. 'w' → logprob: -1.8999826908111572
    3. 'side' → logprob: -2.1499826908111572
    4. ')' → logprob: -2.7749826908111572
    5. 'weight' → logprob: -2.8999826908111572
    6. '(x' → logprob: -3.0249826908111572
    7. ' side' → logprob: -3.2749826908111572
    8. 'x' → logprob: -5.899982929229736
    9. ' weight' → logprob: -6.774982929229736
    10. '_side' → logprob: -6.774982929229736

Token 277: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05906156077980995
    2. ')' → logprob: -3.3090615272521973
    3. '()' → logprob: -4.184061527252197
    4. '<|end|>' → logprob: -6.559061527252197
    5. ' *' → logprob: -6.934061527252197
    6. '*' → logprob: -7.059061527252197
    7. '   ' → logprob: -7.559061527252197
    8. '(' → logprob: -7.934061527252197
    9. '())' → logprob: -8.684062004089355
    10. '()
' → logprob: -8.684062004089355

Token 278: 'blue' (ID: 18789)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.5877956748008728
    2. 'r' → logprob: -0.8377956748008728
    3. 'b' → logprob: -5.212795734405518
    4. 'p' → logprob: -5.837795734405518
    5. 'l' → logprob: -6.837795734405518
    6. ' q' → logprob: -7.212795734405518
    7. ' r' → logprob: -7.587795734405518
    8. 'x' → logprob: -7.712795734405518
    9. '   ' → logprob: -8.58779525756836
    10. ')' → logprob: -8.83779525756836

Token 279: ' side' (ID: 4307)
  Prédit: 'side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.5407660603523254
    2. ' side' → logprob: -1.0407660007476807
    3. ')' → logprob: -3.0407660007476807
    4. '[x' → logprob: -4.66576623916626
    5. '_side' → logprob: -5.04076623916626
    6. '-side' → logprob: -8.540765762329102
    7. '])' → logprob: -9.290765762329102
    8. ' )' → logprob: -9.415765762329102
    9. 'x' → logprob: -10.290765762329102
    10. ')
' → logprob: -10.415765762329102

Token 280: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007716412656009197
    2. '       ' → logprob: -5.507716178894043
    3. ')
' → logprob: -5.632716178894043
    4. '   ' → logprob: -11.257716178894043
    5. ')

' → logprob: -11.632716178894043
    6. '
' → logprob: -11.757716178894043
    7. ')return' → logprob: -12.132716178894043
    8. ' )' → logprob: -12.257716178894043
    9. '<|end|>' → logprob: -12.757716178894043
    10. ')
' → logprob: -13.257716178894043

Token 281: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25938543677330017
    2. 'l' → logprob: -2.759385347366333
    3. ' l' → logprob: -3.884385347366333
    4. 'w' → logprob: -3.884385347366333
    5. ' lw' → logprob: -4.009385585784912
    6. 'm' → logprob: -4.259385585784912
    7. '   ' → logprob: -4.509385585784912
    8. ',' → logprob: -4.884385585784912
    9. '        
' → logprob: -4.884385585784912
    10. 'lw' → logprob: -4.884385585784912

Token 282: ' #' (ID: 1069)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.1577926874160767
    2. 'g' → logprob: -1.7827926874160767
    3. 'w' → logprob: -1.7827926874160767
    4. 'L' → logprob: -2.532792568206787
    5. 'num' → logprob: -3.157792568206787
    6. 'lw' → logprob: -3.407792568206787
    7. '
' → logprob: -3.532792568206787
    8. 'mul' → logprob: -3.657792568206787
    9. 'm' → logprob: -4.532792568206787
    10. 'den' → logprob: -4.657792568206787

Token 283: ' We' (ID: 1416)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.4327130317687988
    2. 'w' → logprob: -1.8077130317687988
    3. 'l' → logprob: -1.8077130317687988
    4. 'num' → logprob: -2.307713031768799
    5. 'mul' → logprob: -2.807713031768799
    6. 'den' → logprob: -2.932713031768799
    7. 'mult' → logprob: -3.307713031768799
    8. 'from' → logprob: -4.182713031768799
    9. 'nw' → logprob: -4.432713031768799
    10. '#' → logprob: -4.432713031768799

Token 284: ' want' (ID: 1682)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09349185228347778
    2. '#' → logprob: -3.093491792678833
    3. '       ' → logprob: -3.718491792678833
    4. ' =' → logprob: -4.218492031097412
    5. 'need' → logprob: -6.468492031097412
    6. '   ' → logprob: -7.093492031097412
    7. '           ' → logprob: -7.968492031097412
    8. '=#' → logprob: -8.218491554260254
    9. 'ight' → logprob: -8.843491554260254
    10. ' #' → logprob: -8.843491554260254

Token 285: ' integer' (ID: 16336)
  Prédit: 'lw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lw' → logprob: -0.9685802459716797
    2. 'l' → logprob: -1.0935802459716797
    3. '       ' → logprob: -2.0935802459716797
    4. 'w' → logprob: -3.0935802459716797
    5. ' lw' → logprob: -3.2185802459716797
    6. 'to' → logprob: -3.7185802459716797
    7. ' to' → logprob: -4.84358024597168
    8. ' l' → logprob: -5.09358024597168
    9. 'mult' → logprob: -5.09358024597168
    10. 'weight' → logprob: -5.46858024597168

Token 286: ' weights' (ID: 28460)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.4566656351089478
    2. ' lw' → logprob: -1.8316656351089478
    3. 'l' → logprob: -1.9566656351089478
    4. 'mul' → logprob: -2.081665515899658
    5. 'lw' → logprob: -2.581665515899658
    6. 'mult' → logprob: -2.706665515899658
    7. ' w' → logprob: -3.206665515899658
    8. ' l' → logprob: -3.331665515899658
    9. 'g' → logprob: -3.706665515899658
    10. 'left' → logprob: -4.831665515899658

Token 287: ' a' (ID: 261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.98085618019104
    2. ' =' → logprob: -1.35585618019104
    3. '=' → logprob: -1.85585618019104
    4. ',' → logprob: -2.98085618019104
    5. '*' → logprob: -3.35585618019104
    6. ' that' → logprob: -3.60585618019104
    7. ' *' → logprob: -3.60585618019104
    8. ' ,' → logprob: -4.230855941772461
    9. ' for' → logprob: -4.355855941772461
    10. '<|end|>' → logprob: -5.105855941772461

Token 288: ',b' (ID: 17568)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25364434719085693
    2. ' =' → logprob: -2.2536444664001465
    3. ',' → logprob: -2.3786444664001465
    4. ' and' → logprob: -4.0036444664001465
    5. 'and' → logprob: -6.1286444664001465
    6. '   ' → logprob: -6.2536444664001465
    7. ' ' → logprob: -6.7536444664001465
    8. '*' → logprob: -7.7536444664001465
    9. 'x' → logprob: -7.8786444664001465
    10. ' ,' → logprob: -8.128643989562988

Token 289: ' such' (ID: 2238)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1335206925868988
    2. ' that' → logprob: -3.1335206031799316
    3. ' ,' → logprob: -3.2585206031799316
    4. '<|end|>' → logprob: -4.258520603179932
    5. ' and' → logprob: -4.883520603179932
    6. ' such' → logprob: -4.883520603179932
    7. ' for' → logprob: -6.133520603179932
    8. '       ' → logprob: -6.258520603179932
    9. '=' → logprob: -6.883520603179932
    10. ' next' → logprob: -7.133520603179932

Token 290: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.4481929838657379
    2. ' that' → logprob: -1.5731929540634155
    3. 'at' → logprob: -2.323193073272705
    4. 'hat' → logprob: -2.948193073272705
    5. '_that' → logprob: -6.823193073272705
    6. '       ' → logprob: -7.073193073272705
    7. '#' → logprob: -7.448193073272705
    8. 'That' → logprob: -8.573192596435547
    9. 't' → logprob: -9.073192596435547
    10. '<|end|>' → logprob: -9.698192596435547

Token 291: ':
' (ID: 734)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6153880953788757
    2. 'lw' → logprob: -1.1153881549835205
    3. 'p' → logprob: -2.6153881549835205
    4. ' a' → logprob: -3.4903881549835205
    5. ' p' → logprob: -4.615387916564941
    6. ' lw' → logprob: -4.740387916564941
    7. 'pp' → logprob: -4.990387916564941
    8. 'q' → logprob: -7.365387916564941
    9. 'l' → logprob: -7.490387916564941
    10. '
' → logprob: -8.115387916564941

Token 292: '       ' (ID: 309)
  Prédit: ' lw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lw' → logprob: -0.786064624786377
    2. 'lw' → logprob: -0.911064624786377
    3. ' a' → logprob: -3.036064624786377
    4. ' p' → logprob: -3.286064624786377
    5. 'a' → logprob: -3.661064624786377
    6. ' (' → logprob: -4.411064624786377
    7. '(' → logprob: -5.911064624786377
    8. 'p' → logprob: -6.161064624786377
    9. '       ' → logprob: -6.411064624786377
    10. ' pp' → logprob: -6.661064624786377

Token 293: ' #' (ID: 1069)
  Prédit: 'lw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lw' → logprob: -0.865340530872345
    2. 'a' → logprob: -1.1153404712677002
    3. ' a' → logprob: -2.2403404712677
    4. ' p' → logprob: -2.8653404712677
    5. ' lw' → logprob: -2.9903404712677
    6. 'p' → logprob: -3.3653404712677
    7. 'pp' → logprob: -7.490340709686279
    8. '       ' → logprob: -7.865340709686279
    9. 'l' → logprob: -8.240340232849121
    10. 'weight' → logprob: -8.365340232849121

Token 294: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.47082555294036865
    2. 'lw' → logprob: -1.0958255529403687
    3. ' a' → logprob: -3.595825672149658
    4. ' lw' → logprob: -4.595825672149658
    5. '       ' → logprob: -7.095825672149658
    6. 'weight' → logprob: -7.345825672149658
    7. '
' → logprob: -7.720825672149658
    8. '           ' → logprob: -8.5958251953125
    9. '#' → logprob: -8.5958251953125
    10. 'p' → logprob: -8.7208251953125

Token 295: '*p' (ID: 72579)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.41537830233573914
    2. ' =' → logprob: -1.4153783321380615
    3. ',' → logprob: -2.5403783321380615
    4. '[x' → logprob: -5.040378093719482
    5. '*' → logprob: -5.790378093719482
    6. ' *' → logprob: -5.915378093719482
    7. ' ,' → logprob: -6.415378093719482
    8. '[' → logprob: -7.165378093719482
    9. '   ' → logprob: -7.165378093719482
    10. ',x' → logprob: -7.540378093719482

Token 296: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.006169220898300409
    2. '[' → logprob: -6.006169319152832
    3. '(x' → logprob: -7.256169319152832
    4. '[i' → logprob: -7.381169319152832
    5. ')' → logprob: -7.881169319152832
    6. 'x' → logprob: -8.006169319152832
    7. '[a' → logprob: -8.381169319152832
    8. '[l' → logprob: -8.381169319152832
    9. '[p' → logprob: -8.756169319152832
    10. '[left' → logprob: -8.756169319152832

Token 297: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6197952628135681
    2. ']*' → logprob: -1.119795322418213
    3. ']==' → logprob: -2.619795322418213
    4. ']+' → logprob: -3.744795322418213
    5. '[' → logprob: -4.369795322418213
    6. ']=' → logprob: -4.994795322418213
    7. '*' → logprob: -5.369795322418213
    8. ']+=' → logprob: -5.869795322418213
    9. '],' → logprob: -6.619795322418213
    10. ' ]' → logprob: -6.619795322418213

Token 298: ' =' (ID: 314)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.707581639289856
    2. ' ==' → logprob: -1.957581639289856
    3. '==' → logprob: -2.2075815200805664
    4. ' *' → logprob: -2.3325815200805664
    5. '*p' → logprob: -2.4575815200805664
    6. '*q' → logprob: -3.7075815200805664
    7. '=' → logprob: -4.332581520080566
    8. ',' → logprob: -4.457581520080566
    9. ' =' → logprob: -5.082581520080566
    10. '*=' → logprob: -5.457581520080566

Token 299: ' b' (ID: 287)
  Prédit: 'lw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lw' → logprob: -0.09278383105993271
    2. 'b' → logprob: -2.5927839279174805
    3. ' lw' → logprob: -4.7177839279174805
    4. 'q' → logprob: -6.2177839279174805
    5. ' b' → logprob: -7.3427839279174805
    6. '   ' → logprob: -7.3427839279174805
    7. 'bw' → logprob: -8.21778392791748
    8. 'pp' → logprob: -8.46778392791748
    9. 'lb' → logprob: -8.46778392791748
    10. 'p' → logprob: -8.59278392791748

Token 300: '*q' (ID: 136288)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.668095052242279
    2. '*q' → logprob: -1.2930951118469238
    3. '*' → logprob: -2.418095111846924
    4. '[x' → logprob: -3.168095111846924
    5. '[q' → logprob: -3.168095111846924
    6. ' *' → logprob: -3.793095111846924
    7. '*[' → logprob: -5.793095111846924
    8. '<|end|>' → logprob: -5.918095111846924
    9. '*p' → logprob: -6.418095111846924
    10. ' q' → logprob: -6.418095111846924

Token 301: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.009305382147431374
    2. '<|end|>' → logprob: -5.384305477142334
    3. '[' → logprob: -6.259305477142334
    4. ')' → logprob: -6.884305477142334
    5. '
' → logprob: -7.134305477142334
    6. '```' → logprob: -8.259305000305176
    7. '   ' → logprob: -9.384305000305176
    8. '[p' → logprob: -9.509305000305176
    9. 'x' → logprob: -9.634305000305176
    10. '       ' → logprob: -9.759305000305176

Token 302: '],' (ID: 2155)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 303: ' a' (ID: 261)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8933750987052917
    2. '       ' → logprob: -1.2683751583099365
    3. ' a' → logprob: -2.7683751583099365
    4. 'a' → logprob: -2.8933751583099365
    5. ' and' → logprob: -2.8933751583099365
    6. '\' → logprob: -3.6433751583099365
    7. ' 
' → logprob: -3.8933751583099365
    8. ' p' → logprob: -4.768374919891357
    9. 'and' → logprob: -4.893374919891357
    10. ' lw' → logprob: -4.893374919891357

Token 304: ' >=' (ID: 5064)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6788081526756287
    2. ' =' → logprob: -1.5538082122802734
    3. '*' → logprob: -2.3038082122802734
    4. '*p' → logprob: -2.3038082122802734
    5. '*q' → logprob: -3.1788082122802734
    6. '=' → logprob: -3.8038082122802734
    7. '*l' → logprob: -5.678808212280273
    8. '<|end|>' → logprob: -6.053808212280273
    9. ',' → logprob: -6.178808212280273
    10. '*x' → logprob: -6.553808212280273

Token 305: ' lw' (ID: 32990)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006520564667880535
    2. 'lw' → logprob: -5.756520748138428
    3. ' ' → logprob: -6.131520748138428
    4. 'p' → logprob: -8.00652027130127
    5. '0' → logprob: -8.50652027130127
    6. '   ' → logprob: -8.63152027130127
    7. ' lw' → logprob: -9.38152027130127
    8. '       ' → logprob: -9.50652027130127
    9. ' p' → logprob: -10.13152027130127
    10. 'l' → logprob: -10.25652027130127

Token 306: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6591411232948303
    2. ' and' → logprob: -1.0341410636901855
    3. ' ,' → logprob: -2.4091410636901855
    4. 'and' → logprob: -3.4091410636901855
    5. '       ' → logprob: -6.4091410636901855
    6. ',
' → logprob: -6.6591410636901855
    7. '*' → logprob: -8.409141540527344
    8. ' *' → logprob: -9.034141540527344
    9. ' ' → logprob: -9.284141540527344
    10. '
' → logprob: -9.409141540527344

Token 307: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.2003151178359985
    2. ' b' → logprob: -1.2003151178359985
    3. 'a' → logprob: -1.5753151178359985
    4. ' a' → logprob: -1.7003151178359985
    5. ' and' → logprob: -5.450314998626709
    6. 'and' → logprob: -6.700314998626709
    7. ' rw' → logprob: -7.575314998626709
    8. ' ' → logprob: -7.700314998626709
    9. ' c' → logprob: -8.200315475463867
    10. ' lw' → logprob: -8.325315475463867

Token 308: ' >=' (ID: 5064)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.1029773950576782
    2. '>=' → logprob: -1.1029773950576782
    3. ' >=' → logprob: -1.8529773950576782
    4. '=' → logprob: -1.9779773950576782
    5. ' =' → logprob: -4.227977275848389
    6. '<=' → logprob: -5.477977275848389
    7. '[' → logprob: -5.727977275848389
    8. '   ' → logprob: -5.852977275848389
    9. '≥' → logprob: -5.852977275848389
    10. ' <=' → logprob: -6.477977275848389

Token 309: ' rw' (ID: 37982)
  Prédit: 'rw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rw' → logprob: -0.03367394208908081
    2. ' rw' → logprob: -3.4086740016937256
    3. 'qw' → logprob: -11.658674240112305
    4. '1' → logprob: -11.783674240112305
    5. '   ' → logprob: -12.658674240112305
    6. 'lw' → logprob: -12.783674240112305
    7. ' ' → logprob: -13.158674240112305
    8. '_rw' → logprob: -13.908674240112305
    9. '       ' → logprob: -14.158674240112305
    10. 'rq' → logprob: -14.533674240112305

Token 310: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02628346160054207
    2. '<|end|>' → logprob: -4.901283264160156
    3. '
' → logprob: -5.151283264160156
    4. ',' → logprob: -5.151283264160156
    5. '        
' → logprob: -5.401283264160156
    6. '\n' → logprob: -7.651283264160156
    7. ',
' → logprob: -8.151283264160156
    8. '        ' → logprob: -8.401283264160156
    9. '  
' → logprob: -8.651283264160156
    10. ')' → logprob: -8.901283264160156

Token 311: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015623589977622032
    2. ',' → logprob: -4.765623569488525
    3. '
' → logprob: -6.140623569488525
    4. '        
' → logprob: -7.265623569488525
    5. '\n' → logprob: -7.265623569488525
    6. '<|end|>' → logprob: -7.265623569488525
    7. '   ' → logprob: -7.640623569488525
    8. ',
' → logprob: -7.765623569488525
    9. ')' → logprob: -7.890623569488525
    10. '\' → logprob: -8.515624046325684

Token 312: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41920891404151917
    2. 'l' → logprob: -1.6692088842391968
    3. 'a' → logprob: -2.5442090034484863
    4. 'g' → logprob: -3.6692090034484863
    5. 'd' → logprob: -4.794209003448486
    6. 'k' → logprob: -4.919209003448486
    7. ' l' → logprob: -5.294209003448486
    8. 'w' → logprob: -5.544209003448486
    9. 'm' → logprob: -5.669209003448486
    10. 's' → logprob: -5.669209003448486

Token 313: ' minimal' (ID: 19957)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5612145066261292
    2. 'g' → logprob: -1.9362144470214844
    3. 'a' → logprob: -2.0612144470214844
    4. 'd' → logprob: -2.9362144470214844
    5. '       ' → logprob: -3.5612144470214844
    6. 'm' → logprob: -4.311214447021484
    7. 'A' → logprob: -4.436214447021484
    8. 'L' → logprob: -4.936214447021484
    9. 'k' → logprob: -5.061214447021484
    10. 'import' → logprob: -5.436214447021484

Token 314: ' total' (ID: 3609)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.52799391746521
    2. 'a' → logprob: -1.77799391746521
    3. ' lw' → logprob: -1.90299391746521
    4. ' l' → logprob: -3.90299391746521
    5. '       ' → logprob: -3.90299391746521
    6. ' weight' → logprob: -4.402994155883789
    7. 'import' → logprob: -5.027994155883789
    8. 'weight' → logprob: -5.402994155883789
    9. 'l' → logprob: -5.527994155883789
    10. ' w' → logprob: -5.652994155883789

Token 315: ' weight' (ID: 6049)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5392876267433167
    2. ' =' → logprob: -0.9142876267433167
    3. '_weight' → logprob: -4.789287567138672
    4. 'weight' → logprob: -5.539287567138672
    5. 'w' → logprob: -6.164287567138672
    6. '_w' → logprob: -7.914287567138672
    7. '_' → logprob: -8.164287567138672
    8. '=w' → logprob: -8.664287567138672
    9. ' weight' → logprob: -8.789287567138672
    10. '_=' → logprob: -9.289287567138672

Token 316: ' a' (ID: 261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1477213203907013
    2. '
' → logprob: -2.397721290588379
    3. '        
' → logprob: -4.022721290588379
    4. ' 
' → logprob: -4.897721290588379
    5. ' l' → logprob: -6.147721290588379
    6. '\' → logprob: -6.272721290588379
    7. '\n' → logprob: -6.522721290588379
    8. ',' → logprob: -6.647721290588379
    9. ' *' → logprob: -6.772721290588379
    10. '   ' → logprob: -7.022721290588379

Token 317: ' +' (ID: 659)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4460599422454834
    2. ',' → logprob: -1.3210599422454834
    3. ' =' → logprob: -2.4460599422454834
    4. ' ,' → logprob: -5.5710601806640625
    5. ',b' → logprob: -6.8210601806640625
    6. '+' → logprob: -8.071060180664062
    7. ' +' → logprob: -8.946060180664062
    8. 's' → logprob: -9.071060180664062
    9. ' ' → logprob: -9.196060180664062
    10. '[' → logprob: -9.321060180664062

Token 318: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00026169343618676066
    2. ' b' → logprob: -8.250261306762695
    3. ' ' → logprob: -16.125261306762695
    4. '       ' → logprob: -16.750261306762695
    5. '	b' → logprob: -17.000261306762695
    6. '   ' → logprob: -17.125261306762695
    7. 'bw' → logprob: -18.375261306762695
    8. '1' → logprob: -18.500261306762695
    9. '           ' → logprob: -18.875261306762695
    10. 'p' → logprob: -19.000261306762695

Token 319: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04480995982885361
    2. '
' → logprob: -3.5448100566864014
    3. '        
' → logprob: -6.044809818267822
    4. 'a' → logprob: -6.169809818267822
    5. ',' → logprob: -6.294809818267822
    6. 'def' → logprob: -6.419809818267822
    7. '<|end|>' → logprob: -7.044809818267822
    8. ' a' → logprob: -7.419809818267822
    9. '   ' → logprob: -7.544809818267822
    10. '#' → logprob: -7.544809818267822

Token 320: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002870730822905898
    2. '        
' → logprob: -7.002870559692383
    3. '
' → logprob: -7.627870559692383
    4. 'l' → logprob: -7.877870559692383
    5. 'a' → logprob: -8.002870559692383
    6. '   ' → logprob: -8.752870559692383
    7. '```' → logprob: -9.377870559692383
    8. ',' → logprob: -9.502870559692383
    9. ' l' → logprob: -9.877870559692383
    10. ' a' → logprob: -10.377870559692383

Token 321: ' #' (ID: 1069)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.1462095975875854
    2. 'g' → logprob: -1.7712095975875854
    3. 'd' → logprob: -2.021209716796875
    4. '       ' → logprob: -2.271209716796875
    5. 'a' → logprob: -2.771209716796875
    6. 'k' → logprob: -3.396209716796875
    7. 'dp' → logprob: -3.521209716796875
    8. 'm' → logprob: -3.771209716796875
    9. 'A' → logprob: -3.771209716796875
    10. 'c' → logprob: -4.146209716796875

Token 322: ' start' (ID: 1604)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.7189574241638184
    2. 'den' → logprob: -2.0939574241638184
    3. 'l' → logprob: -2.0939574241638184
    4. 'A' → logprob: -2.9689574241638184
    5. 'a' → logprob: -3.0939574241638184
    6. 'from' → logprob: -3.2189574241638184
    7. 'k' → logprob: -3.8439574241638184
    8. '#' → logprob: -3.9689574241638184
    9. 'd' → logprob: -4.093957424163818
    10. 'def' → logprob: -4.593957424163818

Token 323: ' from' (ID: 591)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0198521614074707
    2. '       ' → logprob: -1.3948521614074707
    3. 'a' → logprob: -1.8948521614074707
    4. 'from' → logprob: -2.2698521614074707
    5. 'with' → logprob: -3.0198521614074707
    6. 'w' → logprob: -4.144852161407471
    7. ' =' → logprob: -4.269852161407471
    8. 'l' → logprob: -4.519852161407471
    9. '        
' → logprob: -4.769852161407471
    10. 'p' → logprob: -5.269852161407471

Token 324: ' lw' (ID: 32990)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8721620440483093
    2. 'lw' → logprob: -1.122162103652954
    3. 'l' → logprob: -1.497162103652954
    4. '1' → logprob: -4.247161865234375
    5. 'a' → logprob: -4.622161865234375
    6. '(l' → logprob: -6.497161865234375
    7. ' max' → logprob: -6.497161865234375
    8. 'lc' → logprob: -6.747161865234375
    9. '(' → logprob: -7.122161865234375
    10. ' lw' → logprob: -7.122161865234375

Token 325: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5100870728492737
    2. ',' → logprob: -1.385087013244629
    3. '   ' → logprob: -2.760087013244629
    4. ',l' → logprob: -2.760087013244629
    5. ' and' → logprob: -5.510087013244629
    6. 'a' → logprob: -5.760087013244629
    7. 'while' → logprob: -6.260087013244629
    8. '
' → logprob: -6.385087013244629
    9. ',a' → logprob: -6.635087013244629
    10. ',
' → logprob: -6.635087013244629

Token 326: ' rw' (ID: 37982)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.13801735639572144
    2. 'a' → logprob: -2.263017416000366
    3. ' while' → logprob: -4.263017177581787
    4. 'lw' → logprob: -5.638017177581787
    5. 'import' → logprob: -5.763017177581787
    6. 'for' → logprob: -6.388017177581787
    7. ' a' → logprob: -7.263017177581787
    8. 'b' → logprob: -8.138017654418945
    9. 'l' → logprob: -8.263017654418945
    10. '
' → logprob: -8.388017654418945

Token 327: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014185599982738495
    2. 'while' → logprob: -6.014185428619385
    3. '        
' → logprob: -6.139185428619385
    4. 'a' → logprob: -6.139185428619385
    5. ',' → logprob: -6.264185428619385
    6. '   ' → logprob: -6.264185428619385
    7. '
' → logprob: -6.514185428619385
    8. ' while' → logprob: -6.639185428619385
    9. '    
' → logprob: -9.139185905456543
    10. ',
' → logprob: -9.514185905456543

Token 328: ' scale' (ID: 9318)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.2067238092422485
    2. 'a' → logprob: -1.3317238092422485
    3. '       ' → logprob: -1.8317238092422485
    4. 'm' → logprob: -2.206723690032959
    5. 'k' → logprob: -3.081723690032959
    6. 'mult' → logprob: -3.206723690032959
    7. 'l' → logprob: -3.706723690032959
    8. '   ' → logprob: -4.831723690032959
    9. 'A' → logprob: -4.831723690032959
    10. 'mul' → logprob: -4.831723690032959

Token 329: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6819391250610352
    2. '=' → logprob: -1.6819391250610352
    3. 'a' → logprob: -1.6819391250610352
    4. 'up' → logprob: -2.806939125061035
    5. ' =' → logprob: -4.181939125061035
    6. 'factor' → logprob: -4.306939125061035
    7. ' up' → logprob: -5.306939125061035
    8. '_factor' → logprob: -5.431939125061035
    9. '   ' → logprob: -5.681939125061035
    10. ' factor' → logprob: -5.806939125061035

Token 330: ' match' (ID: 3981)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.39927437901496887
    2. 'max' → logprob: -1.8992743492126465
    3. 'lw' → logprob: -2.5242743492126465
    4. '1' → logprob: -3.1492743492126465
    5. 'a' → logprob: -3.7742743492126465
    6. '(' → logprob: -4.2742743492126465
    7. '(l' → logprob: -5.6492743492126465
    8. ' max' → logprob: -5.6492743492126465
    9. ' (' → logprob: -6.5242743492126465
    10. ' l' → logprob: -6.6492743492126465

Token 331: ' ratio' (ID: 18051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04982413724064827
    2. 'a' → logprob: -3.9248242378234863
    3. 'while' → logprob: -4.049824237823486
    4. 'k' → logprob: -6.049824237823486
    5. '   ' → logprob: -6.299824237823486
    6. 'l' → logprob: -6.549824237823486
    7. 'scale' → logprob: -6.924824237823486
    8. ' while' → logprob: -7.299824237823486
    9. '```' → logprob: -7.299824237823486
    10. 'for' → logprob: -7.424824237823486

Token 332: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0983271449804306
    2. 'a' → logprob: -2.723327159881592
    3. 'while' → logprob: -4.848327159881592
    4. ' while' → logprob: -5.473327159881592
    5. '   ' → logprob: -6.223327159881592
    6. '
' → logprob: -6.223327159881592
    7. 'i' → logprob: -6.348327159881592
    8. ' a' → logprob: -6.348327159881592
    9. '        
' → logprob: -6.348327159881592
    10. 'w' → logprob: -6.598327159881592

Token 333: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18959270417690277
    2. 'a' → logprob: -2.1895925998687744
    3. 'l' → logprob: -3.0645925998687744
    4. '   ' → logprob: -6.0645928382873535
    5. 'while' → logprob: -6.0645928382873535
    6. 'i' → logprob: -6.6895928382873535
    7. 'for' → logprob: -7.0645928382873535
    8. '```' → logprob: -7.1895928382873535
    9. 'lw' → logprob: -7.1895928382873535
    10. ' a' → logprob: -7.3145928382873535

Token 334: ' #' (ID: 1069)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.4976818561553955
    2. '       ' → logprob: -1.4976818561553955
    3. 'scale' → logprob: -2.2476818561553955
    4. 'm' → logprob: -2.6226818561553955
    5. 'k' → logprob: -2.6226818561553955
    6. 'g' → logprob: -2.8726818561553955
    7. 'mul' → logprob: -2.9976818561553955
    8. 's' → logprob: -3.1226818561553955
    9. 'a' → logprob: -3.2476818561553955
    10. 'mult' → logprob: -3.3726818561553955

Token 335: ' Find' (ID: 9764)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.5110435485839844
    2. 'k' → logprob: -1.6360435485839844
    3. '       ' → logprob: -1.6360435485839844
    4. 'scale' → logprob: -2.3860435485839844
    5. 'g' → logprob: -2.6360435485839844
    6. 'm' → logprob: -2.7610435485839844
    7. 'mul' → logprob: -3.5110435485839844
    8. 'a' → logprob: -3.7610435485839844
    9. 's' → logprob: -3.8860435485839844
    10. 'mult' → logprob: -4.011043548583984

Token 336: ' minimal' (ID: 19957)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3400712013244629
    2. 'k' → logprob: -2.340071201324463
    3. 'mult' → logprob: -3.090071201324463
    4. 'g' → logprob: -3.590071201324463
    5. 'a' → logprob: -3.590071201324463
    6. 'mul' → logprob: -3.715071201324463
    7. 'scale' → logprob: -4.340071201324463
    8. 'm' → logprob: -4.465071201324463
    9. 'ratio' → logprob: -5.090071201324463
    10. '   ' → logprob: -5.340071201324463

Token 337: ' k' (ID: 372)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.016211142763495445
    2. 'k' → logprob: -4.391211032867432
    3. ' a' → logprob: -6.891211032867432
    4. 'mult' → logprob: -7.391211032867432
    5. 'l' → logprob: -7.516211032867432
    6. 'scale' → logprob: -7.641211032867432
    7. 'm' → logprob: -7.891211032867432
    8. 'A' → logprob: -8.64121150970459
    9. 'mul' → logprob: -9.64121150970459
    10. '   ' → logprob: -10.01621150970459

Token 338: ' so' (ID: 813)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11905322223901749
    2. ' =' → logprob: -2.2440531253814697
    3. '=k' → logprob: -6.619053363800049
    4. 'x' → logprob: -7.244053363800049
    5. '=l' → logprob: -7.369053363800049
    6. 'a' → logprob: -7.494053363800049
    7. '   ' → logprob: -7.869053363800049
    8. '=p' → logprob: -8.11905288696289
    9. 'k' → logprob: -8.24405288696289
    10. '1' → logprob: -8.36905288696289

Token 339: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.1671445518732071
    2. 'that' → logprob: -1.917144536972046
    3. '=' → logprob: -5.792144775390625
    4. ' k' → logprob: -6.167144775390625
    5. '   ' → logprob: -8.167144775390625
    6. 'k' → logprob: -8.167144775390625
    7. '       ' → logprob: -8.167144775390625
    8. ' =' → logprob: -8.667144775390625
    9. '=k' → logprob: -8.667144775390625
    10. ' ' → logprob: -9.042144775390625

Token 340: ':
' (ID: 734)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.021154018118977547
    2. ' k' → logprob: -4.271153926849365
    3. '(k' → logprob: -5.521153926849365
    4. 'a' → logprob: -7.146153926849365
    5. '(p' → logprob: -7.646153926849365
    6. 'max' → logprob: -7.896153926849365
    7. ' (' → logprob: -8.146154403686523
    8. 'p' → logprob: -8.271154403686523
    9. '(l' → logprob: -8.646154403686523
    10. '       ' → logprob: -8.646154403686523

Token 341: '       ' (ID: 309)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.8473777770996094
    2. ' k' → logprob: -0.8473777770996094
    3. '       ' → logprob: -1.9723777770996094
    4. '        ' → logprob: -6.347377777099609
    5. ' ' → logprob: -8.09737777709961
    6. 'l' → logprob: -8.22237777709961
    7. '   ' → logprob: -8.47237777709961
    8. '           ' → logprob: -9.09737777709961
    9. ' (' → logprob: -9.09737777709961
    10. ' l' → logprob: -9.22237777709961

Token 342: ' #' (ID: 1069)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3650127947330475
    2. ' k' → logprob: -1.240012764930725
    3. '       ' → logprob: -4.6150126457214355
    4. 'l' → logprob: -6.1150126457214355
    5. 'max' → logprob: -7.3650126457214355
    6. ' l' → logprob: -7.7400126457214355
    7. 'while' → logprob: -7.9900126457214355
    8. ' p' → logprob: -8.365013122558594
    9. 'p' → logprob: -8.490013122558594
    10. 'a' → logprob: -8.615013122558594

Token 343: ' a' (ID: 261)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.013596145436167717
    2. ' k' → logprob: -5.013596057891846
    3. 'l' → logprob: -5.638596057891846
    4. 'p' → logprob: -6.888596057891846
    5. 'a' → logprob: -6.888596057891846
    6. 'lw' → logprob: -8.013596534729004
    7. 'max' → logprob: -8.513596534729004
    8. 'while' → logprob: -9.138596534729004
    9. ' p' → logprob: -9.388596534729004
    10. '
' → logprob: -9.388596534729004

Token 344: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11622187495231628
    2. '=' → logprob: -2.2412219047546387
    3. '=p' → logprob: -6.241221904754639
    4. '*p' → logprob: -7.491221904754639
    5. 'p' → logprob: -7.741221904754639
    6. ' p' → logprob: -9.49122142791748
    7. ',' → logprob: -9.74122142791748
    8. ' *' → logprob: -9.86622142791748
    9. ',p' → logprob: -10.61622142791748
    10. 'x' → logprob: -10.61622142791748

Token 345: ' p' (ID: 275)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4041779935359955
    2. 'lw' → logprob: -1.4041780233383179
    3. 'l' → logprob: -2.5291779041290283
    4. '((' → logprob: -5.904178142547607
    5. '(l' → logprob: -6.279178142547607
    6. '(max' → logprob: -6.279178142547607
    7. 'k' → logprob: -8.90417766571045
    8. ' max' → logprob: -8.90417766571045
    9. 'weight' → logprob: -9.65417766571045
    10. '(((' → logprob: -9.77917766571045

Token 346: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -4.7994282795116305e-05
    2. 'x' → logprob: -10.00004768371582
    3. '[' → logprob: -14.00004768371582
    4. '```' → logprob: -14.75004768371582
    5. '(x' → logprob: -15.25004768371582
    6. '<|end|>' → logprob: -15.75004768371582
    7. '[l' → logprob: -15.87504768371582
    8. '[i' → logprob: -15.87504768371582
    9. '[u' → logprob: -16.37504768371582
    10. '[a' → logprob: -16.50004768371582

Token 347: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.5532039999961853
    2. ']' → logprob: -1.05320405960083
    3. '[x' → logprob: -2.67820405960083
    4. '']' → logprob: -5.17820405960083
    5. '*' → logprob: -8.428203582763672
    6. ' ]' → logprob: -8.803203582763672
    7. '"]' → logprob: -8.803203582763672
    8. '```' → logprob: -8.803203582763672
    9. '[' → logprob: -8.928203582763672
    10. '   ' → logprob: -9.053203582763672

Token 348: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.08444470912218094
    2. 'l' → logprob: -3.209444761276245
    3. '(l' → logprob: -3.959444761276245
    4. 'lw' → logprob: -4.959444522857666
    5. '(k' → logprob: -5.084444522857666
    6. 'max' → logprob: -5.709444522857666
    7. '(' → logprob: -6.584444522857666
    8. '((' → logprob: -6.709444522857666
    9. '(max' → logprob: -6.959444522857666
    10. '(r' → logprob: -7.834444522857666

Token 349: ' >=' (ID: 5064)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2147198915481567
    2. ',' → logprob: -1.8397198915481567
    3. ' and' → logprob: -1.9647198915481567
    4. '<|end|>' → logprob: -1.9647198915481567
    5. '*' → logprob: -2.589719772338867
    6. ' *' → logprob: -3.214719772338867
    7. '       ' → logprob: -3.464719772338867
    8. '=' → logprob: -3.839719772338867
    9. '>=' → logprob: -4.089719772338867
    10. '<|end|>' → logprob: -4.214719772338867

Token 350: ' lw' (ID: 32990)
  Prédit: 'lw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lw' → logprob: -0.00022308611369226128
    2. ' lw' → logprob: -8.500223159790039
    3. 'l' → logprob: -12.000223159790039
    4. 'max' → logprob: -12.625223159790039
    5. '   ' → logprob: -12.625223159790039
    6. '       ' → logprob: -13.625223159790039
    7. '           ' → logprob: -13.875223159790039
    8. '(l' → logprob: -14.125223159790039
    9. 'lu' → logprob: -14.500223159790039
    10. '(' → logprob: -14.750223159790039

Token 351: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06750546395778656
    2. '       ' → logprob: -3.442505359649658
    3. 'and' → logprob: -3.567505359649658
    4. '
' → logprob: -6.692505359649658
    5. '<|end|>' → logprob: -6.817505359649658
    6. ',' → logprob: -6.942505359649658
    7. '        
' → logprob: -7.442505359649658
    8. '<|end|>' → logprob: -8.442505836486816
    9. '        ' → logprob: -8.817505836486816
    10. ' 
' → logprob: -8.942505836486816

Token 352: '       ' (ID: 309)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1978691965341568
    2. '       ' → logprob: -2.947869300842285
    3. '<|end|>' → logprob: -3.072869300842285
    4. ' ' → logprob: -3.697869300842285
    5. 'and' → logprob: -3.947869300842285
    6. ',' → logprob: -4.572869300842285
    7. ' p' → logprob: -5.072869300842285
    8. ')' → logprob: -5.572869300842285
    9. ' x' → logprob: -5.822869300842285
    10. '*' → logprob: -6.322869300842285

Token 353: ' #' (ID: 1069)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8039385080337524
    2. '<|end|>' → logprob: -1.4289385080337524
    3. 'and' → logprob: -1.6789385080337524
    4. ' ' → logprob: -2.678938388824463
    5. ',' → logprob: -3.928938388824463
    6. '       ' → logprob: -4.553938388824463
    7. 'k' → logprob: -5.303938388824463
    8. '[' → logprob: -5.928938388824463
    9. ')' → logprob: -6.178938388824463
    10. '...' → logprob: -6.428938388824463

Token 354: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7492143511772156
    2. ' b' → logprob: -0.7492143511772156
    3. ' q' → logprob: -3.6242144107818604
    4. 'q' → logprob: -4.124214172363281
    5. ' k' → logprob: -5.499214172363281
    6. 'k' → logprob: -5.874214172363281
    7. ' ' → logprob: -5.999214172363281
    8. '   ' → logprob: -7.374214172363281
    9. 'a' → logprob: -7.874214172363281
    10. ' (' → logprob: -8.374214172363281

Token 355: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34999412298202515
    2. '=' → logprob: -1.22499418258667
    3. '[x' → logprob: -6.59999418258667
    4. '=x' → logprob: -9.224993705749512
    5. 'x' → logprob: -10.474993705749512
    6. '*' → logprob: -10.849993705749512
    7. ' x' → logprob: -12.224993705749512
    8. ' ' → logprob: -12.474993705749512
    9. ',' → logprob: -12.474993705749512
    10. ' *' → logprob: -12.724993705749512

Token 356: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.012520132586359978
    2. ' q' → logprob: -4.3875203132629395
    3. '	q' → logprob: -13.012519836425781
    4. ' ' → logprob: -13.137519836425781
    5. '   ' → logprob: -13.387519836425781
    6. '
' → logprob: -14.262519836425781
    7. '<|end|>' → logprob: -14.262519836425781
    8. '(q' → logprob: -14.512519836425781
    9. '[q' → logprob: -15.012519836425781
    10. '  ' → logprob: -15.137519836425781

Token 357: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0001552665780764073
    2. 'x' → logprob: -8.875155448913574
    3. '```' → logprob: -12.125155448913574
    4. '*x' → logprob: -12.375155448913574
    5. '[' → logprob: -13.000155448913574
    6. '*[' → logprob: -13.625155448913574
    7. '(x' → logprob: -14.375155448913574
    8. ' x' → logprob: -14.625155448913574
    9. ' [' → logprob: -15.125155448913574
    10. '*' → logprob: -15.250155448913574

Token 358: ']*' (ID: 18579)
  Prédit: '*x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*x' → logprob: -0.7268108129501343
    2. '*k' → logprob: -0.7268108129501343
    3. '*' → logprob: -3.976810932159424
    4. ']*' → logprob: -4.601810932159424
    5. '*[' → logprob: -6.226810932159424
    6. '[x' → logprob: -6.726810932159424
    7. '```' → logprob: -7.726810932159424
    8. '*q' → logprob: -9.101810455322266
    9. '**' → logprob: -9.226810455322266
    10. '[k' → logprob: -9.351810455322266

Token 359: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.1756367712223437e-05
    2. '[x' → logprob: -12.250011444091797
    3. 'x' → logprob: -12.500011444091797
    4. ' k' → logprob: -13.375011444091797
    5. '
' → logprob: -14.750011444091797
    6. '```' → logprob: -14.875011444091797
    7. 'kx' → logprob: -15.250011444091797
    8. '[k' → logprob: -15.875011444091797
    9. 'q' → logprob: -16.000011444091797
    10. '(x' → logprob: -16.000011444091797

Token 360: ' >=' (ID: 5064)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8264548778533936
    2. ' and' → logprob: -1.5764548778533936
    3. '<|end|>' → logprob: -1.9514548778533936
    4. '>=' → logprob: -2.7014548778533936
    5. '
' → logprob: -3.4514548778533936
    6. ',' → logprob: -3.7014548778533936
    7. '=' → logprob: -3.7014548778533936
    8. ' >=' → logprob: -3.9514548778533936
    9. '<|end|>' → logprob: -5.201455116271973
    10. '>' → logprob: -5.201455116271973

Token 361: ' rw' (ID: 37982)
  Prédit: 'rw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rw' → logprob: -0.0021913025993853807
    2. ' rw' → logprob: -6.127191066741943
    3. '   ' → logprob: -13.502191543579102
    4. 'r' → logprob: -13.877191543579102
    5. '_rw' → logprob: -14.002191543579102
    6. ' ' → logprob: -14.127191543579102
    7. '[r' → logprob: -14.252191543579102
    8. '       ' → logprob: -14.377191543579102
    9. '(r' → logprob: -15.627191543579102
    10. '
' → logprob: -16.0021915435791

Token 362: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8662757277488708
    2. '       ' → logprob: -0.9912757277488708
    3. '
' → logprob: -1.8662757873535156
    4. '<|end|>' → logprob: -3.3662757873535156
    5. '<|end|>' → logprob: -5.366275787353516
    6. '        
' → logprob: -5.491275787353516
    7. '\' → logprob: -6.491275787353516
    8. ')' → logprob: -6.991275787353516
    9. ',' → logprob: -6.991275787353516
    10. '   ' → logprob: -7.116275787353516

Token 363: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4133647680282593
    2. '\n' → logprob: -1.7883647680282593
    3. '
' → logprob: -2.413364887237549
    4. '<|end|>' → logprob: -3.413364887237549
    5. '\' → logprob: -4.288364887237549
    6. '        
' → logprob: -4.538364887237549
    7. '  
' → logprob: -6.038364887237549
    8. '```' → logprob: -6.163364887237549
    9. ',' → logprob: -6.288364887237549
    10. '=' → logprob: -6.413364887237549

Token 364: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.047903988510370255
    2. 'k' → logprob: -3.9229040145874023
    3. '
' → logprob: -4.922904014587402
    4. '\n' → logprob: -5.297904014587402
    5. '        
' → logprob: -5.422904014587402
    6. '<|end|>' → logprob: -5.672904014587402
    7. ' k' → logprob: -6.422904014587402
    8. '   ' → logprob: -7.172904014587402
    9. ',' → logprob: -7.422904014587402
    10. '\' → logprob: -7.547904014587402

Token 365: ' so' (ID: 813)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.29154983162879944
    2. '       ' → logprob: -1.416549801826477
    3. ' k' → logprob: -5.0415496826171875
    4. 'import' → logprob: -6.7915496826171875
    5. 'from' → logprob: -7.4165496826171875
    6. '   ' → logprob: -7.5415496826171875
    7. 'def' → logprob: -7.5415496826171875
    8. '
' → logprob: -7.6665496826171875
    9. '```' → logprob: -8.541549682617188
    10. 'l' → logprob: -9.041549682617188

Token 366: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.08908744901418686
    2. ' k' → logprob: -2.46408748626709
    3. '   ' → logprob: -9.21408748626709
    4. '	k' → logprob: -10.83908748626709
    5. '  ' → logprob: -12.33908748626709
    6. ':' → logprob: -12.71408748626709
    7. ' ' → logprob: -12.96408748626709
    8. '=' → logprob: -13.21408748626709
    9. ' ' → logprob: -13.21408748626709
    10. 'import' → logprob: -13.33908748626709

Token 367: ' >=' (ID: 5064)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03834061697125435
    2. ' =' → logprob: -3.9133405685424805
    3. '=max' → logprob: -4.0383405685424805
    4. 'max' → logprob: -12.53834056854248
    5. '=k' → logprob: -12.78834056854248
    6. '=int' → logprob: -12.91334056854248
    7. '=min' → logprob: -13.78834056854248
    8. '=lambda' → logprob: -14.28834056854248
    9. ' max' → logprob: -14.53834056854248
    10. '   ' → logprob: -14.66334056854248

Token 368: ' ceil' (ID: 35964)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0002989968634210527
    2. ' max' → logprob: -8.750299453735352
    3. '(max' → logprob: -8.875299453735352
    4. '	max' → logprob: -15.250299453735352
    5. '   ' → logprob: -15.375299453735352
    6. '
' → logprob: -16.50029945373535
    7. '[max' → logprob: -16.50029945373535
    8. '=max' → logprob: -16.75029945373535
    9. 'l' → logprob: -17.75029945373535
    10. ',max' → logprob: -18.37529945373535

Token 369: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.3219023048877716
    2. '(max' → logprob: -1.3219022750854492
    3. 'max' → logprob: -4.946902275085449
    4. '((' → logprob: -6.821902275085449
    5. 'l' → logprob: -8.57190227508545
    6. '(' → logprob: -8.94690227508545
    7. 'div' → logprob: -10.32190227508545
    8. 'lw' → logprob: -10.69690227508545
    9. '	l' → logprob: -12.19690227508545
    10. '(
' → logprob: -12.44690227508545

Token 370: 'w' (ID: 86)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8557289242744446
    2. 'w' → logprob: -1.7307288646697998
    3. '(l' → logprob: -1.7307288646697998
    4. '(max' → logprob: -1.8557288646697998
    5. '(w' → logprob: -4.480729103088379
    6. '   ' → logprob: -4.480729103088379
    7. '((' → logprob: -4.855729103088379
    8. 'b' → logprob: -4.980729103088379
    9. 'lw' → logprob: -5.230729103088379
    10. ' (' → logprob: -5.855729103088379

Token 371: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.3490014672279358
    2. '/l' → logprob: -1.849001407623291
    3. '/p' → logprob: -2.849001407623291
    4. '/' → logprob: -3.099001407623291
    5. '/(' → logprob: -4.224001407623291
    6. '(p' → logprob: -5.474001407623291
    7. '       ' → logprob: -6.099001407623291
    8. 'p' → logprob: -6.349001407623291
    9. ')' → logprob: -6.599001407623291
    10. ',' → logprob: -6.599001407623291

Token 372: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0012934509431943297
    2. ' p' → logprob: -6.751293659210205
    3. '(p' → logprob: -9.626293182373047
    4. '   ' → logprob: -10.876293182373047
    5. ' (' → logprob: -11.376293182373047
    6. '(' → logprob: -11.626293182373047
    7. ' ' → logprob: -12.626293182373047
    8. 'q' → logprob: -12.751293182373047
    9. '
' → logprob: -13.251293182373047
    10. '  ' → logprob: -13.501293182373047

Token 373: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.07130073010921478
    2. 'x' → logprob: -2.696300745010376
    3. '[' → logprob: -6.946300506591797
    4. '```' → logprob: -8.571300506591797
    5. ')' → logprob: -9.321300506591797
    6. '{x' → logprob: -10.571300506591797
    7. '[
' → logprob: -11.196300506591797
    8. '(x' → logprob: -11.446300506591797
    9. '\[' → logprob: -12.071300506591797
    10. ' x' → logprob: -12.071300506591797

Token 374: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03176802396774292
    2. '),' → logprob: -3.6567680835723877
    3. ')
' → logprob: -5.906767845153809
    4. ' )' → logprob: -6.406767845153809
    5. '])' → logprob: -8.156767845153809
    6. '))' → logprob: -8.281767845153809
    7. 'if' → logprob: -8.906767845153809
    8. ' if' → logprob: -9.531767845153809
    9. '')' → logprob: -9.781767845153809
    10. ',' → logprob: -10.031767845153809

Token 375: ' and' (ID: 326)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6889187097549438
    2. ')' → logprob: -1.1889187097549438
    3. ')
' → logprob: -2.6889185905456543
    4. 'if' → logprob: -2.9389185905456543
    5. '       ' → logprob: -3.5639185905456543
    6. ' and' → logprob: -3.9389185905456543
    7. '   ' → logprob: -4.938918590545654
    8. ',' → logprob: -5.563918590545654
    9. '),' → logprob: -5.813918590545654
    10. ' ' → logprob: -6.438918590545654

Token 376: ' k' (ID: 372)
  Prédit: 'ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -0.3509083688259125
    2. ' ceil' → logprob: -1.2259083986282349
    3. ' ' → logprob: -6.975908279418945
    4. 'k' → logprob: -7.975908279418945
    5. ' k' → logprob: -8.350908279418945
    6. '  ' → logprob: -8.975908279418945
    7. '   ' → logprob: -9.100908279418945
    8. '         ' → logprob: -9.475908279418945
    9. 'max' → logprob: -9.600908279418945
    10. '          ' → logprob: -9.725908279418945

Token 377: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.5047571659088135
    2. ' >=' → logprob: -1.0047571659088135
    3. '=' → logprob: -4.629756927490234
    4. '/' → logprob: -5.379756927490234
    5. ' /' → logprob: -5.879756927490234
    6. ' =' → logprob: -6.379756927490234
    7. ' ' → logprob: -6.754756927490234
    8. '   ' → logprob: -6.754756927490234
    9. ')>=' → logprob: -7.129756927490234
    10. '[' → logprob: -7.254756927490234

Token 378: ' ceil' (ID: 35964)
  Prédit: 'ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -0.06584279239177704
    2. '(r' → logprob: -3.065842866897583
    3. ' ceil' → logprob: -4.940842628479004
    4. '(' → logprob: -5.315842628479004
    5. ' (' → logprob: -5.690842628479004
    6. '(l' → logprob: -7.315842628479004
    7. 'ce' → logprob: -8.690842628479004
    8. '.ceil' → logprob: -9.190842628479004
    9. '((' → logprob: -9.315842628479004
    10. ' ' → logprob: -9.315842628479004

Token 379: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -15.250000953674316
    3. ' (' → logprob: -15.625000953674316
    4. '(l' → logprob: -16.25
    5. '   ' → logprob: -17.25
    6. '(rv' → logprob: -17.625
    7. '((' → logprob: -18.0
    8. '(rhs' → logprob: -18.25
    9. 'rw' → logprob: -18.5
    10. '(rb' → logprob: -18.75

Token 380: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.021022701635956764
    2. 'x' → logprob: -4.521022796630859
    3. '[x' → logprob: -5.271022796630859
    4. '[w' → logprob: -5.646022796630859
    5. '(x' → logprob: -7.396022796630859
    6. '(w' → logprob: -8.64602279663086
    7. ' w' → logprob: -8.77102279663086
    8. '[r' → logprob: -9.27102279663086
    9. '[(' → logprob: -10.14602279663086
    10. '[' → logprob: -10.89602279663086

Token 381: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.47732973098754883
    2. ' /' → logprob: -0.9773297309875488
    3. '/q' → logprob: -5.977329730987549
    4. '[q' → logprob: -7.977329730987549
    5. '[x' → logprob: -8.60232925415039
    6. '/x' → logprob: -9.35232925415039
    7. '[' → logprob: -10.22732925415039
    8. '/p' → logprob: -10.97732925415039
    9. '       ' → logprob: -11.47732925415039
    10. 'q' → logprob: -11.85232925415039

Token 382: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0029394289012998343
    2. ' q' → logprob: -5.877939224243164
    3. '   ' → logprob: -9.752939224243164
    4. '
' → logprob: -10.502939224243164
    5. '       ' → logprob: -12.002939224243164
    6. '           ' → logprob: -12.127939224243164
    7. ' ' → logprob: -12.252939224243164
    8. 'b' → logprob: -12.502939224243164
    9. '(q' → logprob: -12.502939224243164
    10. '  ' → logprob: -12.877939224243164

Token 383: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.00028624574770219624
    2. 'x' → logprob: -8.750286102294922
    3. '[' → logprob: -9.375286102294922
    4. '])' → logprob: -11.375286102294922
    5. ')' → logprob: -11.500286102294922
    6. '```' → logprob: -12.250286102294922
    7. '[
' → logprob: -12.375286102294922
    8. '(x' → logprob: -13.250286102294922
    9. '
' → logprob: -13.375286102294922
    10. '][' → logprob: -13.500286102294922

Token 384: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.015751495957374573
    2. ')' → logprob: -4.515751361846924
    3. '])
' → logprob: -5.765751361846924
    4. ']' → logprob: -7.515751361846924
    5. ''])' → logprob: -8.015751838684082
    6. '])
' → logprob: -8.640751838684082
    7. ')])' → logprob: -9.265751838684082
    8. '])+' → logprob: -9.515751838684082
    9. ' ])' → logprob: -9.890751838684082
    10. '])

' → logprob: -10.265751838684082

Token 385: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43263816833496094
    2. '   ' → logprob: -1.932638168334961
    3. ')' → logprob: -2.182638168334961
    4. '\n' → logprob: -3.432638168334961
    5. ')
' → logprob: -3.932638168334961
    6. '\t' → logprob: -5.182638168334961
    7. ' 
' → logprob: -5.432638168334961
    8. '        
' → logprob: -5.557638168334961
    9. '[
' → logprob: -6.182638168334961
    10. '    
' → logprob: -6.182638168334961

Token 386: ' #' (ID: 1069)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.9718599319458008
    2. ' k' → logprob: -1.0968599319458008
    3. '       ' → logprob: -2.346859931945801
    4. ' 
' → logprob: -2.346859931945801
    5. 'import' → logprob: -3.971859931945801
    6. '
' → logprob: -4.096859931945801
    7. '\n' → logprob: -5.096859931945801
    8. '        
' → logprob: -5.096859931945801
    9. '*' → logprob: -5.346859931945801
    10. ' if' → logprob: -5.471859931945801

Token 387: ' but' (ID: 889)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.14423443377017975
    2. 'if' → logprob: -3.0192344188690186
    3. '   ' → logprob: -3.3942344188690186
    4. ' if' → logprob: -3.8942344188690186
    5. ' k' → logprob: -4.019234657287598
    6. 'import' → logprob: -6.019234657287598
    7. 'l' → logprob: -6.019234657287598
    8. 'p' → logprob: -6.019234657287598
    9. '       ' → logprob: -6.769234657287598
    10. 'kx' → logprob: -7.144234657287598

Token 388: ' since' (ID: 3630)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.11673593521118164
    2. ' p' → logprob: -2.2417359352111816
    3. 'q' → logprob: -6.616735935211182
    4. 'if' → logprob: -6.866735935211182
    5. ' if' → logprob: -8.116735458374023
    6. ' q' → logprob: -8.366735458374023
    7. '(p' → logprob: -8.616735458374023
    8. 'continue' → logprob: -9.116735458374023
    9. 'import' → logprob: -9.491735458374023
    10. 'we' → logprob: -9.991735458374023

Token 389: ' lw' (ID: 32990)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3139326274394989
    2. ' p' → logprob: -1.3139326572418213
    3. 'q' → logprob: -8.063932418823242
    4. ' q' → logprob: -8.938932418823242
    5. ' not' → logprob: -9.688932418823242
    6. 'not' → logprob: -10.313932418823242
    7. 'import' → logprob: -10.438932418823242
    8. 'l' → logprob: -10.563932418823242
    9. '(p' → logprob: -11.063932418823242
    10. ' l' → logprob: -11.188932418823242

Token 390: ',r' (ID: 33654)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -1.1727274656295776
    2. ' and' → logprob: -1.5477274656295776
    3. ' ==' → logprob: -1.5477274656295776
    4. '>' → logprob: -2.422727584838867
    5. ' >' → logprob: -2.547727584838867
    6. ' or' → logprob: -3.422727584838867
    7. 'and' → logprob: -3.797727584838867
    8. ' /' → logprob: -4.047727584838867
    9. ' !=' → logprob: -4.797727584838867
    10. '/' → logprob: -5.672727584838867

Token 391: 'w' (ID: 86)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.7545315623283386
    2. 'w' → logprob: -0.7545315623283386
    3. 'x' → logprob: -3.7545316219329834
    4. '[x' → logprob: -4.379531383514404
    5. '==' → logprob: -4.629531383514404
    6. '[' → logprob: -5.879531383514404
    7. '[q' → logprob: -6.004531383514404
    8. 'qw' → logprob: -6.129531383514404
    9. '>' → logprob: -6.504531383514404
    10. '=' → logprob: -7.629531383514404

Token 392: ' and' (ID: 326)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6960166692733765
    2. ' and' → logprob: -1.9460166692733765
    3. ' ==' → logprob: -2.321016788482666
    4. ',' → logprob: -2.821016788482666
    5. ')' → logprob: -3.071016788482666
    6. '=' → logprob: -3.446016788482666
    7. '>' → logprob: -3.571016788482666
    8. 'and' → logprob: -4.446016788482666
    9. '),' → logprob: -4.696016788482666
    10. ' or' → logprob: -4.946016788482666

Token 393: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.043147169053554535
    2. ' p' → logprob: -3.168147087097168
    3. 'pq' → logprob: -9.168147087097168
    4. 'q' → logprob: -11.793147087097168
    5. 'px' → logprob: -11.793147087097168
    6. ' pq' → logprob: -12.293147087097168
    7. ' ' → logprob: -12.543147087097168
    8. '(p' → logprob: -13.043147087097168
    9. 'pw' → logprob: -13.168147087097168
    10. '   ' → logprob: -13.293147087097168

Token 394: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.010136391036212444
    2. ',' → logprob: -5.885136604309082
    3. '[' → logprob: -5.885136604309082
    4. 'x' → logprob: -6.510136604309082
    5. ',x' → logprob: -6.510136604309082
    6. ' ,' → logprob: -7.760136604309082
    7. '=' → logprob: -8.385136604309082
    8. ' and' → logprob: -8.885136604309082
    9. '```' → logprob: -9.010136604309082
    10. ',[' → logprob: -9.385136604309082

Token 395: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5310100317001343
    2. '],' → logprob: -1.0310100317001343
    3. '[x' → logprob: -3.656010150909424
    4. ']==' → logprob: -4.156010150909424
    5. ',' → logprob: -5.531010150909424
    6. ']!=' → logprob: -5.906010150909424
    7. ' and' → logprob: -6.031010150909424
    8. ']>' → logprob: -6.906010150909424
    9. 'x' → logprob: -7.656010150909424
    10. '   ' → logprob: -7.781010150909424

Token 396: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.2269173413515091
    2. ' q' → logprob: -1.6019173860549927
    3. '[q' → logprob: -7.601917266845703
    4. 'x' → logprob: -7.976917266845703
    5. 'qx' → logprob: -8.851917266845703
    6. '[x' → logprob: -9.101917266845703
    7. ',' → logprob: -9.851917266845703
    8. ' ' → logprob: -9.976917266845703
    9. ',q' → logprob: -9.976917266845703
    10. '   ' → logprob: -9.976917266845703

Token 397: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.011691223829984665
    2. 'x' → logprob: -5.011691093444824
    3. ']' → logprob: -5.386691093444824
    4. '[' → logprob: -8.636691093444824
    5. '```' → logprob: -9.261691093444824
    6. ']=' → logprob: -10.511691093444824
    7. '][' → logprob: -10.886691093444824
    8. ']==' → logprob: -11.636691093444824
    9. '[
' → logprob: -11.636691093444824
    10. '],' → logprob: -12.136691093444824

Token 398: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06670006364583969
    2. '])' → logprob: -3.441699981689453
    3. '],' → logprob: -4.316699981689453
    4. ']==' → logprob: -4.941699981689453
    5. '[x' → logprob: -5.066699981689453
    6. ')' → logprob: -6.441699981689453
    7. ' are' → logprob: -7.441699981689453
    8. ']!=' → logprob: -7.691699981689453
    9. ']>' → logprob: -7.691699981689453
    10. 'x' → logprob: -8.066699981689453

Token 399: ' are' (ID: 553)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7882245779037476
    2. ' are' → logprob: -0.9132245779037476
    3. ':
' → logprob: -3.288224697113037
    4. '):' → logprob: -3.663224697113037
    5. ')' → logprob: -4.038224697113037
    6. ']' → logprob: -4.288224697113037
    7. ' have' → logprob: -4.788224697113037
    8. ']:' → logprob: -5.413224697113037
    9. ' continue' → logprob: -5.663224697113037
    10. ',' → logprob: -5.663224697113037

Token 400: ' integers' (ID: 54912)
  Prédit: 'positive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positive' → logprob: -0.9546492099761963
    2. '>' → logprob: -1.7046492099761963
    3. ' positive' → logprob: -1.9546492099761963
    4. 'non' → logprob: -2.8296492099761963
    5. 'inte' → logprob: -3.0796492099761963
    6. ' integers' → logprob: -3.2046492099761963
    7. ' not' → logprob: -3.3296492099761963
    8. 'not' → logprob: -3.4546492099761963
    9. 'both' → logprob: -3.4546492099761963
    10. ' non' → logprob: -4.454648971557617

Token 401: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10823133587837219
    2. ':' → logprob: -3.23323130607605
    3. ',
' → logprob: -3.85823130607605
    4. '<|end|>' → logprob: -4.108231544494629
    5. ':
' → logprob: -5.108231544494629
    6. ')' → logprob: -5.358231544494629
    7. '[' → logprob: -5.858231544494629
    8. '\n' → logprob: -5.983231544494629
    9. '<|end|>' → logprob: -6.483231544494629
    10. '   ' → logprob: -6.483231544494629

Token 402: ' we' (ID: 581)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.13121674954891205
    2. 'k' → logprob: -2.7562167644500732
    3. ' 
' → logprob: -3.1312167644500732
    4. '
' → logprob: -5.381216526031494
    5. '<|end|>' → logprob: -5.506216526031494
    6. ' ' → logprob: -6.881216526031494
    7. ')' → logprob: -6.881216526031494
    8. '\n' → logprob: -7.381216526031494
    9. '```' → logprob: -7.381216526031494
    10. ',' → logprob: -7.881216526031494

Token 403: ' can' (ID: 665)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.8243112564086914
    2. ' continue' → logprob: -1.6993112564086914
    3. 'need' → logprob: -1.9493112564086914
    4. 'import' → logprob: -2.0743112564086914
    5. ' need' → logprob: -2.8243112564086914
    6. '=' → logprob: -3.9493112564086914
    7. 'should' → logprob: -5.449311256408691
    8. ')' → logprob: -5.574311256408691
    9. ']' → logprob: -5.824311256408691
    10. '+' → logprob: -6.074311256408691

Token 404: ' do' (ID: 621)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.09870275110006332
    2. 'calculate' → logprob: -3.0987026691436768
    3. 'compute' → logprob: -3.9737026691436768
    4. 'import' → logprob: -4.723702907562256
    5. ' continue' → logprob: -5.098702907562256
    6. 'find' → logprob: -6.098702907562256
    7. '```' → logprob: -6.098702907562256
    8. 'use' → logprob: -6.348702907562256
    9. 'consider' → logprob: -6.348702907562256
    10. '...' → logprob: -6.348702907562256

Token 405: ':
' (ID: 734)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.9503156542778015
    2. '       ' → logprob: -1.5753157138824463
    3. 'k' → logprob: -2.0753157138824463
    4. '           ' → logprob: -2.9503157138824463
    5. 'def' → logprob: -3.4503157138824463
    6. 'max' → logprob: -3.4503157138824463
    7. '
' → logprob: -3.5753157138824463
    8. ' max' → logprob: -3.8253157138824463
    9. '```' → logprob: -3.9503157138824463
    10. '        ' → logprob: -4.200315475463867

Token 406: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5856350064277649
    2. ' k' → logprob: -0.9606350064277649
    3. 'k' → logprob: -3.71063494682312
    4. ' max' → logprob: -5.085635185241699
    5. 'import' → logprob: -5.210635185241699
    6. ' 
' → logprob: -5.335635185241699
    7. '        
' → logprob: -6.460635185241699
    8. '   ' → logprob: -6.585635185241699
    9. ' if' → logprob: -6.585635185241699
    10. '
' → logprob: -6.585635185241699

Token 407: ' #' (ID: 1069)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.606326699256897
    2. ' k' → logprob: -0.856326699256897
    3. '       ' → logprob: -3.8563265800476074
    4. 'import' → logprob: -5.981326580047607
    5. ' if' → logprob: -6.856326580047607
    6. 'from' → logprob: -7.106326580047607
    7. ' import' → logprob: -7.106326580047607
    8. ' from' → logprob: -7.356326580047607
    9. ' kp' → logprob: -7.731326580047607
    10. 'def' → logprob: -7.856326580047607

Token 408: ' find' (ID: 1646)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.033271826803684235
    2. ' k' → logprob: -4.533271789550781
    3. '       ' → logprob: -4.783271789550781
    4. 'from' → logprob: -5.533271789550781
    5. 'import' → logprob: -5.908271789550781
    6. 'def' → logprob: -6.158271789550781
    7. 'max' → logprob: -6.283271789550781
    8. 'if' → logprob: -6.658271789550781
    9. 'l' → logprob: -7.408271789550781
    10. '   ' → logprob: -8.158271789550781

Token 409: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.40657585859298706
    2. ' k' → logprob: -1.1565759181976318
    3. 'max' → logprob: -4.406575679779053
    4. ' max' → logprob: -5.156575679779053
    5. 'import' → logprob: -7.531575679779053
    6. 'from' → logprob: -7.781575679779053
    7. 'def' → logprob: -8.531576156616211
    8. '   ' → logprob: -9.531576156616211
    9. 'kx' → logprob: -9.656576156616211
    10. 'l' → logprob: -9.906576156616211

Token 410: ' such' (ID: 2238)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7111123204231262
    2. '=max' → logprob: -0.7111123204231262
    3. ' =' → logprob: -4.0861124992370605
    4. 'max' → logprob: -7.5861124992370605
    5. ' max' → logprob: -8.336112022399902
    6. '=min' → logprob: -9.586112022399902
    7. '=int' → logprob: -9.961112022399902
    8. '1' → logprob: -10.336112022399902
    9. '=
' → logprob: -11.461112022399902
    10. 'import' → logprob: -11.586112022399902

Token 411: ' that' (ID: 484)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03820811212062836
    2. '=k' → logprob: -3.7882080078125
    3. '>=' → logprob: -5.6632080078125
    4. 'that' → logprob: -6.2882080078125
    5. '       ' → logprob: -6.2882080078125
    6. 'k' → logprob: -6.5382080078125
    7. 'at' → logprob: -6.6632080078125
    8. 'import' → logprob: -6.7882080078125
    9. '   ' → logprob: -7.6632080078125
    10. ' =' → logprob: -7.9132080078125

Token 412: ' max' (ID: 2999)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.01326199620962143
    2. ' k' → logprob: -4.638261795043945
    3. 'max' → logprob: -5.888261795043945
    4. ' max' → logprob: -7.263261795043945
    5. '
' → logprob: -12.263261795043945
    6. '   ' → logprob: -12.638261795043945
    7. '```' → logprob: -12.638261795043945
    8. ' ' → logprob: -13.013261795043945
    9. ' ' → logprob: -13.138261795043945
    10. '(max' → logprob: -13.263261795043945

Token 413: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.45193931460380554
    2. '(l' → logprob: -1.201939344406128
    3. '(
' → logprob: -2.826939344406128
    4. '((' → logprob: -6.326939105987549
    5. '(k' → logprob: -6.451939105987549
    6. '(math' → logprob: -8.076939582824707
    7. '(

' → logprob: -10.076939582824707
    8. '(\' → logprob: -11.451939582824707
    9. '(
' → logprob: -11.576939582824707
    10. ' (' → logprob: -11.576939582824707

Token 414: 'lw' (ID: 81750)
  Prédit: 'lw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lw' → logprob: -0.04334159195423126
    2. '(l' → logprob: -3.668341636657715
    3. ' lw' → logprob: -4.293341636657715
    4. ' (' → logprob: -6.543341636657715
    5. '   ' → logprob: -6.793341636657715
    6. 'l' → logprob: -8.293341636657715
    7. '       ' → logprob: -9.293341636657715
    8. ' ' → logprob: -9.918341636657715
    9. '  ' → logprob: -10.293341636657715
    10. '    ' → logprob: -10.293341636657715

Token 415: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.15140479803085327
    2. '+' → logprob: -2.276404857635498
    3. '+p' → logprob: -3.526404857635498
    4. '-' → logprob: -5.526404857635498
    5. ' -' → logprob: -6.901404857635498
    6. ' ' → logprob: -7.026404857635498
    7. '[p' → logprob: -7.526404857635498
    8. '+(' → logprob: -7.526404857635498
    9. '+x' → logprob: -8.02640438079834
    10. '),' → logprob: -8.40140438079834

Token 416: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0009134899592027068
    2. ' p' → logprob: -7.000913619995117
    3. '   ' → logprob: -13.750913619995117
    4. '(p' → logprob: -14.125913619995117
    5. ' (' → logprob: -15.625913619995117
    6. ' ' → logprob: -17.000913619995117
    7. '
' → logprob: -18.125913619995117
    8. '  ' → logprob: -18.500913619995117
    9. '           ' → logprob: -18.875913619995117
    10. '(' → logprob: -19.125913619995117

Token 417: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0019543254747986794
    2. 'x' → logprob: -6.251954555511475
    3. '```' → logprob: -11.751954078674316
    4. '[' → logprob: -12.126954078674316
    5. '(x' → logprob: -12.251954078674316
    6. '
' → logprob: -13.751954078674316
    7. '{x' → logprob: -13.751954078674316
    8. '[
' → logprob: -13.751954078674316
    9. '   ' → logprob: -14.376954078674316
    10. '``' → logprob: -14.751954078674316

Token 418: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07217782735824585
    2. '[x' → logprob: -3.1971778869628906
    3. ' -' → logprob: -3.5721778869628906
    4. ']-' → logprob: -7.947177886962891
    5. ']' → logprob: -8.94717788696289
    6. '[' → logprob: -8.94717788696289
    7. '[i' → logprob: -11.44717788696289
    8. 'x' → logprob: -11.44717788696289
    9. '```' → logprob: -12.44717788696289
    10. '[p' → logprob: -12.44717788696289

Token 419: '1' (ID: 16)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.09125282615423203
    2. '1' → logprob: -3.0912528038024902
    3. '-' → logprob: -3.3412528038024902
    4. ' p' → logprob: -5.46625280380249
    5. ' -' → logprob: -6.46625280380249
    6. 'x' → logprob: -8.591253280639648
    7. '   ' → logprob: -8.966253280639648
    8. ' ' → logprob: -9.466253280639648
    9. '```' → logprob: -10.091253280639648
    10. ')' → logprob: -10.341253280639648

Token 420: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.12703856825828552
    2. ')' → logprob: -2.1270384788513184
    3. ' )' → logprob: -9.252038955688477
    4. '-' → logprob: -11.752038955688477
    5. '//' → logprob: -13.252038955688477
    6. ')
' → logprob: -13.377038955688477
    7. ' -' → logprob: -13.502038955688477
    8. 'p' → logprob: -14.877038955688477
    9. '   ' → logprob: -15.127038955688477
    10. ')#' → logprob: -15.502038955688477

Token 421: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0011703446507453918
    2. ' p' → logprob: -6.7511701583862305
    3. '   ' → logprob: -15.87617015838623
    4. '(p' → logprob: -19.501171112060547
    5. ' ' → logprob: -19.626171112060547
    6. '
' → logprob: -20.251171112060547
    7. '  ' → logprob: -20.501171112060547
    8. 'pq' → logprob: -20.501171112060547
    9. '	p' → logprob: -20.626171112060547
    10. '<p' → logprob: -20.751171112060547

Token 422: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0046310266479849815
    2. 'x' → logprob: -5.379631042480469
    3. '```' → logprob: -12.379631042480469
    4. '[' → logprob: -12.879631042480469
    5. '{x' → logprob: -13.379631042480469
    6. '[
' → logprob: -14.379631042480469
    7. ' x' → logprob: -14.754631042480469
    8. '(x' → logprob: -15.129631042480469
    9. '
' → logprob: -15.379631042480469
    10. ',x' → logprob: -15.754631042480469

Token 423: '],' (ID: 2155)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.1632128208875656
    2. '),(' → logprob: -2.538212776184082
    3. ',' → logprob: -2.663212776184082
    4. ' ,' → logprob: -7.038212776184082
    5. ',k' → logprob: -7.663212776184082
    6. ')' → logprob: -8.788212776184082
    7. ' ),' → logprob: -8.788212776184082
    8. '),
' → logprob: -9.038212776184082
    9. ',
' → logprob: -10.788212776184082
    10. ',(' → logprob: -11.413212776184082

Token 424: ' (' (ID: 350)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.4014742970466614
    2. ' (' → logprob: -1.1514742374420166
    3. '(max' → logprob: -4.276474475860596
    4. '       ' → logprob: -8.526473999023438
    5. 'max' → logprob: -9.276473999023438
    6. '           ' → logprob: -9.651473999023438
    7. '   ' → logprob: -10.276473999023438
    8. '        ' → logprob: -10.526473999023438
    9. '          ' → logprob: -10.651473999023438
    10. '         ' → logprob: -10.651473999023438

Token 425: 'rw' (ID: 65719)
  Prédit: 'rw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rw' → logprob: -0.00291376537643373
    2. '(r' → logprob: -6.127913951873779
    3. ' rw' → logprob: -7.252913951873779
    4. '   ' → logprob: -11.502913475036621
    5. ' (' → logprob: -12.877913475036621
    6. 'r' → logprob: -13.502913475036621
    7. 'lw' → logprob: -13.627913475036621
    8. '_rw' → logprob: -13.877913475036621
    9. ' ' → logprob: -14.127913475036621
    10. '
' → logprob: -14.252913475036621

Token 426: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20332442224025726
    2. '+' → logprob: -2.203324317932129
    3. '[x' → logprob: -2.703324317932129
    4. '+x' → logprob: -5.078324317932129
    5. '[q' → logprob: -9.328324317932129
    6. '+[' → logprob: -9.703324317932129
    7. '+p' → logprob: -10.453324317932129
    8. '```' → logprob: -10.578324317932129
    9. '[p' → logprob: -10.703324317932129
    10. ')' → logprob: -11.078324317932129

Token 427: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00024084746837615967
    2. ' q' → logprob: -8.37524127960205
    3. '   ' → logprob: -13.00024127960205
    4. '           ' → logprob: -13.25024127960205
    5. '       ' → logprob: -13.50024127960205
    6. '
' → logprob: -13.75024127960205
    7. '    ' → logprob: -14.37524127960205
    8. '               ' → logprob: -14.50024127960205
    9. '[q' → logprob: -14.50024127960205
    10. '     ' → logprob: -14.87524127960205

Token 428: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0006340435356833041
    2. 'x' → logprob: -7.37563419342041
    3. '```' → logprob: -12.25063419342041
    4. '[' → logprob: -13.75063419342041
    5. '{x' → logprob: -15.25063419342041
    6. ' x' → logprob: -15.50063419342041
    7. '
' → logprob: -15.62563419342041
    8. '][' → logprob: -15.62563419342041
    9. '[
' → logprob: -15.75063419342041
    10. '(x' → logprob: -16.000633239746094

Token 429: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0429237075150013
    2. '[x' → logprob: -3.66792368888855
    3. ']-' → logprob: -4.292923927307129
    4. ' -' → logprob: -6.542923927307129
    5. 'x' → logprob: -6.792923927307129
    6. '[' → logprob: -9.292923927307129
    7. '1' → logprob: -9.917923927307129
    8. ']' → logprob: -10.042923927307129
    9. '-x' → logprob: -10.792923927307129
    10. '[-' → logprob: -11.292923927307129

Token 430: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.750003814697266
    3. '   ' → logprob: -14.250003814697266
    4. '
' → logprob: -16.125003814697266
    5. '-' → logprob: -16.875003814697266
    6. '```' → logprob: -17.000003814697266
    7. '  ' → logprob: -17.250003814697266
    8. '``' → logprob: -18.250003814697266
    9. '    ' → logprob: -18.437503814697266
    10. 'x' → logprob: -18.937503814697266

Token 431: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -6.670925358776003e-05
    2. ')' → logprob: -10.125066757202148
    3. ' )' → logprob: -11.000066757202148
    4. '//' → logprob: -12.500066757202148
    5. '[x' → logprob: -13.500066757202148
    6. ')#' → logprob: -13.750066757202148
    7. '   ' → logprob: -13.875066757202148
    8. '-' → logprob: -14.125066757202148
    9. '[' → logprob: -14.750066757202148
    10. ' ' → logprob: -14.875066757202148

Token 432: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00030841029365547
    2. ' q' → logprob: -8.1253080368042
    3. '[q' → logprob: -12.3753080368042
    4. '   ' → logprob: -13.1253080368042
    5. 'max' → logprob: -13.6253080368042
    6. '[x' → logprob: -13.8753080368042
    7. ' ' → logprob: -14.0003080368042
    8. '       ' → logprob: -14.2503080368042
    9. 'qx' → logprob: -14.2503080368042
    10. 'p' → logprob: -15.1253080368042

Token 433: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.3133822977542877
    2. 'x' → logprob: -1.3133822679519653
    3. '[
' → logprob: -10.063382148742676
    4. '```' → logprob: -10.688382148742676
    5. '[' → logprob: -11.188382148742676
    6. '{x' → logprob: -11.688382148742676
    7. '   ' → logprob: -11.813382148742676
    8. ' x' → logprob: -12.063382148742676
    9. ']' → logprob: -12.438382148742676
    10. '	x' → logprob: -12.813382148742676

Token 434: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.05057138204574585
    2. ')' → logprob: -3.0505714416503906
    3. '),' → logprob: -7.800571441650391
    4. ')])' → logprob: -8.17557144165039
    5. '))' → logprob: -8.42557144165039
    6. ']))' → logprob: -8.92557144165039
    7. '],' → logprob: -8.92557144165039
    8. ']' → logprob: -9.05057144165039
    9. 'x' → logprob: -9.30057144165039
    10. ' ])' → logprob: -9.42557144165039

Token 435: ' <=' (ID: 5017)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0268803834915161
    2. ' =' → logprob: -1.1518803834915161
    3. '       ' → logprob: -1.9018803834915161
    4. '
' → logprob: -2.7768802642822266
    5. '=' → logprob: -3.4018802642822266
    6. ')
' → logprob: -3.6518802642822266
    7. '   ' → logprob: -3.9018802642822266
    8. ']' → logprob: -5.026880264282227
    9. ',' → logprob: -5.526880264282227
    10. '+' → logprob: -6.151880264282227

Token 436: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.005731232464313507
    2. ' k' → logprob: -5.505731105804443
    3. 'max' → logprob: -6.505731105804443
    4. ' max' → logprob: -8.880731582641602
    5. ' ' → logprob: -12.130731582641602
    6. '(max' → logprob: -12.880731582641602
    7. '
' → logprob: -13.130731582641602
    8. ')' → logprob: -13.130731582641602
    9. '```' → logprob: -14.005731582641602
    10. 'x' → logprob: -14.380731582641602

Token 437: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49953746795654297
    2. ')' → logprob: -1.624537467956543
    3. '<|end|>' → logprob: -2.874537467956543
    4. '<|end|>' → logprob: -3.374537467956543
    5. '   ' → logprob: -3.499537467956543
    6. '
' → logprob: -3.999537467956543
    7. ' =' → logprob: -4.374537467956543
    8. ')
' → logprob: -4.374537467956543
    9. ':' → logprob: -5.124537467956543
    10. ',' → logprob: -5.749537467956543

Token 438: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026309238746762276
    2. '   ' → logprob: -5.026309013366699
    3. ',' → logprob: -5.401309013366699
    4. '<|end|>' → logprob: -5.651309013366699
    5. '        
' → logprob: -5.776309013366699
    6. '
' → logprob: -6.651309013366699
    7. '  
' → logprob: -6.776309013366699
    8. ' k' → logprob: -6.901309013366699
    9. ')' → logprob: -6.901309013366699
    10. '    
' → logprob: -7.776309013366699

Token 439: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42703959345817566
    2. 'k' → logprob: -2.052039623260498
    3. '   ' → logprob: -2.177039623260498
    4. ' k' → logprob: -3.677039623260498
    5. '
' → logprob: -4.052039623260498
    6. ')' → logprob: -4.052039623260498
    7. '\n' → logprob: -4.677039623260498
    8. ',' → logprob: -4.802039623260498
    9. '    
' → logprob: -5.302039623260498
    10. '\t' → logprob: -5.677039623260498

Token 440: ' then' (ID: 1815)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24624724686145782
    2. 'k' → logprob: -1.8712472915649414
    3. ' k' → logprob: -3.3712472915649414
    4. '
' → logprob: -3.8712472915649414
    5. '   ' → logprob: -5.121247291564941
    6. '        
' → logprob: -6.871247291564941
    7. '    
' → logprob: -7.746247291564941
    8. ',' → logprob: -8.246247291564941
    9. '```' → logprob: -8.246247291564941
    10. 'def' → logprob: -8.621247291564941

Token 441: ' a' (ID: 261)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.1480810046195984
    2. ' k' → logprob: -2.148081064224243
    3. '       ' → logprob: -4.148080825805664
    4. '   ' → logprob: -5.398080825805664
    5. '
' → logprob: -8.273080825805664
    6. 'import' → logprob: -8.898080825805664
    7. 'def' → logprob: -9.773080825805664
    8. 'for' → logprob: -10.773080825805664
    9. '	k' → logprob: -10.773080825805664
    10. ' for' → logprob: -11.023080825805664

Token 442: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3505701720714569
    2. ' =' → logprob: -1.2255702018737793
    3. '=p' → logprob: -6.725570201873779
    4. '=k' → logprob: -7.475570201873779
    5. ',' → logprob: -8.725569725036621
    6. '=x' → logprob: -8.850569725036621
    7. '=int' → logprob: -12.225569725036621
    8. ',k' → logprob: -12.350569725036621
    9. '=s' → logprob: -12.350569725036621
    10. '=a' → logprob: -12.475569725036621

Token 443: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.08894775062799454
    2. ' p' → logprob: -2.4639477729797363
    3. '   ' → logprob: -12.338947296142578
    4. ' ' → logprob: -13.213947296142578
    5. '    ' → logprob: -14.838947296142578
    6. '```' → logprob: -14.838947296142578
    7. '	p' → logprob: -15.463947296142578
    8. '(p' → logprob: -15.713947296142578
    9. ' ' → logprob: -15.963947296142578
    10. '[p' → logprob: -16.338947296142578

Token 444: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -2.8206473871250637e-05
    2. 'x' → logprob: -10.875028610229492
    3. '```' → logprob: -11.875028610229492
    4. '[' → logprob: -13.625028610229492
    5. '(x' → logprob: -14.625028610229492
    6. '\[' → logprob: -15.625028610229492
    7. '{x' → logprob: -16.250028610229492
    8. '<x' → logprob: -16.375028610229492
    9. '<|end|>' → logprob: -16.625028610229492
    10. ' [' → logprob: -16.875028610229492

Token 445: ']*' (ID: 18579)
  Prédit: '*k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*k' → logprob: -0.660673975944519
    2. ']*' → logprob: -1.035673975944519
    3. '*' → logprob: -2.5356740951538086
    4. '*x' → logprob: -4.035674095153809
    5. ']' → logprob: -4.160674095153809
    6. '[k' → logprob: -5.035674095153809
    7. '[x' → logprob: -5.410674095153809
    8. ' *' → logprob: -6.535674095153809
    9. ''*' → logprob: -6.785674095153809
    10. '][' → logprob: -8.160674095153809

Token 446: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.6240566083070007e-06
    2. ' k' → logprob: -13.375001907348633
    3. '[k' → logprob: -18.000001907348633
    4. '[' → logprob: -18.250001907348633
    5. '```' → logprob: -18.250001907348633
    6. 'x' → logprob: -19.125001907348633
    7. '{k' → logprob: -19.125001907348633
    8. '<|end|>' → logprob: -19.125001907348633
    9. '(k' → logprob: -19.750001907348633
    10. ' ' → logprob: -20.250001907348633

Token 447: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5091834664344788
    2. '<|end|>' → logprob: -1.634183406829834
    3. '
' → logprob: -2.259183406829834
    4. '<|end|>' → logprob: -2.509183406829834
    5. ',' → logprob: -4.634183406829834
    6. '   ' → logprob: -5.884183406829834
    7. ')' → logprob: -6.759183406829834
    8. '\n' → logprob: -6.884183406829834
    9. 'k' → logprob: -7.384183406829834
    10. '        
' → logprob: -7.884183406829834

Token 448: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.03963734209537506
    2. 'b' → logprob: -3.289637327194214
    3. ' k' → logprob: -6.539637565612793
    4. '       ' → logprob: -9.164637565612793
    5. 'k' → logprob: -10.539637565612793
    6. ' ' → logprob: -12.289637565612793
    7. '        ' → logprob: -12.789637565612793
    8. '```' → logprob: -13.039637565612793
    9. ' ' → logprob: -13.414637565612793
    10. '     ' → logprob: -13.414637565612793

Token 449: ' =' (ID: 314)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.45065492391586304
    2. '*' → logprob: -1.7006549835205078
    3. '=' → logprob: -1.9506549835205078
    4. ' =' → logprob: -4.200654983520508
    5. '*[' → logprob: -4.950654983520508
    6. '*x' → logprob: -5.325654983520508
    7. '<|end|>' → logprob: -5.325654983520508
    8. ' *' → logprob: -5.950654983520508
    9. 'x' → logprob: -6.950654983520508
    10. '*=' → logprob: -7.075654983520508

Token 450: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.033647771924734116
    2. ' q' → logprob: -3.4086477756500244
    3. ' ' → logprob: -13.908647537231445
    4. '	q' → logprob: -15.033647537231445
    5. '   ' → logprob: -15.408647537231445
    6. '
' → logprob: -16.283647537231445
    7. '    ' → logprob: -16.408647537231445
    8. '[q' → logprob: -16.658647537231445
    9. '```' → logprob: -16.658647537231445
    10. '  ' → logprob: -16.783647537231445

Token 451: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -9.014684110297821e-06
    2. 'x' → logprob: -11.875008583068848
    3. '[' → logprob: -14.375008583068848
    4. '```' → logprob: -14.625008583068848
    5. '<x' → logprob: -14.625008583068848
    6. '*x' → logprob: -16.250009536743164
    7. '(x' → logprob: -16.250009536743164
    8. '<|end|>' → logprob: -16.500009536743164
    9. ' [' → logprob: -16.875009536743164
    10. '\[' → logprob: -17.375009536743164

Token 452: ']*' (ID: 18579)
  Prédit: '*k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*k' → logprob: -0.005062025971710682
    2. '*x' → logprob: -5.755062103271484
    3. '*' → logprob: -6.505062103271484
    4. ']*' → logprob: -8.630062103271484
    5. '*[' → logprob: -9.255062103271484
    6. 'k' → logprob: -10.255062103271484
    7. '[k' → logprob: -10.630062103271484
    8. ')*' → logprob: -11.130062103271484
    9. '```' → logprob: -11.630062103271484
    10. ']' → logprob: -12.130062103271484

Token 453: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -5.512236498361744e-07
    2. ' k' → logprob: -15.625000953674316
    3. '
' → logprob: -16.0
    4. 'x' → logprob: -16.5
    5. '<|end|>' → logprob: -16.75
    6. '```' → logprob: -16.875
    7. '[k' → logprob: -18.125
    8. '[' → logprob: -18.375
    9. ' ' → logprob: -18.375
    10. '*k' → logprob: -19.375

Token 454: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10018229484558105
    2. '
' → logprob: -3.350182294845581
    3. '<|end|>' → logprob: -3.350182294845581
    4. '<|end|>' → logprob: -4.35018253326416
    5. '        
' → logprob: -5.47518253326416
    6. ',' → logprob: -5.97518253326416
    7. '   ' → logprob: -6.35018253326416
    8. '  
' → logprob: -7.10018253326416
    9. ')' → logprob: -7.47518253326416
    10. '    
' → logprob: -7.60018253326416

Token 455: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0351262241601944
    2. '
' → logprob: -3.785126209259033
    3. '   ' → logprob: -5.285126209259033
    4. 'k' → logprob: -6.035126209259033
    5. '<|end|>' → logprob: -6.410126209259033
    6. '        
' → logprob: -6.660126209259033
    7. '    
' → logprob: -7.785126209259033
    8. '<|end|>' → logprob: -8.660126686096191
    9. ',' → logprob: -8.910126686096191
    10. '```' → logprob: -9.285126686096191

Token 456: ' a' (ID: 261)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.01836778223514557
    2. '       ' → logprob: -4.268367767333984
    3. ' k' → logprob: -5.518367767333984
    4. '   ' → logprob: -10.143367767333984
    5. '
' → logprob: -10.268367767333984
    6. 'l' → logprob: -10.643367767333984
    7. 'max' → logprob: -11.018367767333984
    8. '```' → logprob: -11.518367767333984
    9. '        
' → logprob: -11.643367767333984
    10. 'x' → logprob: -12.143367767333984

Token 457: '_min' (ID: 15950)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11289642006158829
    2. ' =' → logprob: -2.61289644241333
    3. '_' → logprob: -3.86289644241333
    4. ',' → logprob: -4.86289644241333
    5. ' ' → logprob: -6.73789644241333
    6. '_=' → logprob: -7.36289644241333
    7. '_p' → logprob: -7.61289644241333
    8. '=p' → logprob: -7.98789644241333
    9. '=[' → logprob: -8.362895965576172
    10. 'x' → logprob: -8.737895965576172

Token 458: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1011461690068245
    2. '=' → logprob: -2.3511462211608887
    3. ' ' → logprob: -8.10114574432373
    4. '=p' → logprob: -8.60114574432373
    5. ' =[' → logprob: -9.35114574432373
    6. ',' → logprob: -9.72614574432373
    7. '=k' → logprob: -10.47614574432373
    8. '=[' → logprob: -10.85114574432373
    9. ' ' → logprob: -10.85114574432373
    10. '=max' → logprob: -10.97614574432373

Token 459: ' (' (ID: 350)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.001834633992984891
    2. ' (' → logprob: -6.501834869384766
    3. 'max' → logprob: -8.876834869384766
    4. '(' → logprob: -9.126834869384766
    5. 'lw' → logprob: -10.251834869384766
    6. '(max' → logprob: -11.001834869384766
    7. ' ' → logprob: -12.251834869384766
    8. ' lw' → logprob: -12.501834869384766
    9. '1' → logprob: -12.501834869384766
    10. '   ' → logprob: -12.626834869384766

Token 460: 'lw' (ID: 81750)
  Prédit: 'lw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lw' → logprob: -0.00014001218369230628
    2. '   ' → logprob: -9.375140190124512
    3. ' lw' → logprob: -10.375140190124512
    4. '       ' → logprob: -11.000140190124512
    5. 'l' → logprob: -13.250140190124512
    6. '           ' → logprob: -14.000140190124512
    7. '  ' → logprob: -14.125140190124512
    8. 'weight' → logprob: -14.250140190124512
    9. '    ' → logprob: -14.250140190124512
    10. '     ' → logprob: -14.375140190124512

Token 461: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.04890992119908333
    2. '+' → logprob: -3.048909902572632
    3. '+p' → logprob: -8.048910140991211
    4. '   ' → logprob: -14.173910140991211
    5. ' ' → logprob: -14.548910140991211
    6. '+(' → logprob: -14.673910140991211
    7. '+x' → logprob: -14.798910140991211
    8. '+l' → logprob: -15.548910140991211
    9. '+k' → logprob: -15.673910140991211
    10. '+r' → logprob: -16.29891014099121

Token 462: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0015034328680485487
    2. ' p' → logprob: -6.5015034675598145
    3. '   ' → logprob: -13.751502990722656
    4. ' ' → logprob: -17.001502990722656
    5. '(p' → logprob: -18.876502990722656
    6. '           ' → logprob: -19.001502990722656
    7. '  ' → logprob: -19.001502990722656
    8. '       ' → logprob: -19.376502990722656
    9. '    ' → logprob: -19.626502990722656
    10. '     ' → logprob: -19.876502990722656

Token 463: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -9.209963900502771e-05
    2. 'x' → logprob: -9.375092506408691
    3. '[' → logprob: -12.375092506408691
    4. '```' → logprob: -13.000092506408691
    5. ' [' → logprob: -15.000092506408691
    6. '(x' → logprob: -16.250091552734375
    7. '   ' → logprob: -16.625091552734375
    8. '{x' → logprob: -17.250091552734375
    9. ' x' → logprob: -17.750091552734375
    10. '\[' → logprob: -18.125091552734375

Token 464: ']-' (ID: 27107)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.020947758108377457
    2. 'x' → logprob: -4.0209479331970215
    3. '-' → logprob: -5.8959479331970215
    4. ']-' → logprob: -10.895947456359863
    5. ']' → logprob: -12.145947456359863
    6. ' -' → logprob: -12.145947456359863
    7. '1' → logprob: -12.770947456359863
    8. '[' → logprob: -12.895947456359863
    9. '```' → logprob: -13.145947456359863
    10. '   ' → logprob: -13.395947456359863

Token 465: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -17.250003814697266
    4. '   ' → logprob: -17.750003814697266
    5. '  ' → logprob: -20.875003814697266
    6. '-' → logprob: -21.500003814697266
    7. '
' → logprob: -21.875003814697266
    8. '[' → logprob: -22.312503814697266
    9. '۱' → logprob: -22.437503814697266
    10. '<|end|>' → logprob: -22.437503814697266

Token 466: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.005234594456851482
    2. ')' → logprob: -5.255234718322754
    3. ' )' → logprob: -14.505234718322754
    4. ')#' → logprob: -16.005233764648438
    5. '//' → logprob: -16.755233764648438
    6. '   ' → logprob: -17.755233764648438
    7. ')>>' → logprob: -17.755233764648438
    8. ')
' → logprob: -17.880233764648438
    9. ')p' → logprob: -18.130233764648438
    10. ')/' → logprob: -18.880233764648438

Token 467: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -5.1928003813372925e-05
    2. ' p' → logprob: -9.875051498413086
    3. '   ' → logprob: -14.875051498413086
    4. '       ' → logprob: -19.125051498413086
    5. '	p' → logprob: -19.875051498413086
    6. '           ' → logprob: -20.000051498413086
    7. '  ' → logprob: -20.375051498413086
    8. 'q' → logprob: -20.375051498413086
    9. ' ' → logprob: -20.625051498413086
    10. '    ' → logprob: -20.750051498413086

Token 468: '[x' (ID: 17295)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5759534239768982
    2. '[x' → logprob: -0.8259534239768982
    3. ' x' → logprob: -12.450953483581543
    4. '   ' → logprob: -12.450953483581543
    5. '(x' → logprob: -13.075953483581543
    6. '```' → logprob: -13.325953483581543
    7. '{x' → logprob: -13.825953483581543
    8. '[' → logprob: -14.825953483581543
    9. '	x' → logprob: -15.450953483581543
    10. '[
' → logprob: -16.325952529907227

Token 469: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011071168817579746
    2. ')
' → logprob: -4.51107120513916
    3. ')
' → logprob: -11.88607120513916
    4. ' )' → logprob: -12.51107120513916
    5. '```' → logprob: -13.01107120513916
    6. '   ' → logprob: -13.26107120513916
    7. '       ' → logprob: -13.38607120513916
    8. '<|end|>' → logprob: -13.51107120513916
    9. ')

' → logprob: -13.63607120513916
    10. ']' → logprob: -13.76107120513916

Token 470: '       ' (ID: 309)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.06967506557703018
    2. 'b' → logprob: -2.8196749687194824
    3. '       ' → logprob: -4.944674968719482
    4. ' k' → logprob: -7.944674968719482
    5. ',' → logprob: -9.31967544555664
    6. '   ' → logprob: -10.31967544555664
    7. '           ' → logprob: -11.06967544555664
    8. ',b' → logprob: -11.19467544555664
    9. '        ' → logprob: -11.56967544555664
    10. 'k' → logprob: -11.94467544555664

Token 471: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.030157944187521935
    2. ' b' → logprob: -3.530158042907715
    3. 'k' → logprob: -8.530158042907715
    4. '       ' → logprob: -9.280158042907715
    5. '   ' → logprob: -9.905158042907715
    6. ' k' → logprob: -10.655158042907715
    7. 'max' → logprob: -10.655158042907715
    8. ' max' → logprob: -11.155158042907715
    9. ' ' → logprob: -13.030158042907715
    10. '           ' → logprob: -14.155158042907715

Token 472: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.0007786541245877743
    2. 'min' → logprob: -7.750778675079346
    3. '_max' → logprob: -8.750778198242188
    4. ' =' → logprob: -9.500778198242188
    5. 'b' → logprob: -10.125778198242188
    6. '=' → logprob: -10.750778198242188
    7. '_b' → logprob: -11.000778198242188
    8. '_r' → logprob: -11.125778198242188
    9. '_' → logprob: -11.875778198242188
    10. 'r' → logprob: -12.500778198242188

Token 473: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931478977203369
    2. ' =' → logprob: -0.6931478977203369
    3. '=(' → logprob: -14.318147659301758
    4. ' =(' → logprob: -16.693147659301758
    5. ' ' → logprob: -18.568147659301758
    6. 'b' → logprob: -18.693147659301758
    7. '(' → logprob: -18.693147659301758
    8. '＝' → logprob: -18.818147659301758
    9. '   ' → logprob: -19.318147659301758
    10. ' (' → logprob: -19.443147659301758

Token 474: ' (' (ID: 350)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0015100972959771752
    2. ' (' → logprob: -6.501510143280029
    3. '   ' → logprob: -12.251509666442871
    4. ' ' → logprob: -13.001509666442871
    5. '(rv' → logprob: -15.376509666442871
    6. '  ' → logprob: -15.876509666442871
    7. '(rb' → logprob: -16.126510620117188
    8. '(rd' → logprob: -16.251510620117188
    9. '(R' → logprob: -16.876510620117188
    10. '(' → logprob: -17.001510620117188

Token 475: 'rw' (ID: 65719)
  Prédit: 'rw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rw' → logprob: -0.0006217729533091187
    2. '(r' → logprob: -7.500621795654297
    3. ' rw' → logprob: -9.625621795654297
    4. '[r' → logprob: -13.625621795654297
    5. '   ' → logprob: -14.625621795654297
    6. 'r' → logprob: -14.875621795654297
    7. ' (' → logprob: -15.625621795654297
    8. '
' → logprob: -16.000621795654297
    9. '_rw' → logprob: -16.000621795654297
    10. '	r' → logprob: -16.375621795654297

Token 476: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.0485910028219223
    2. '+' → logprob: -3.048590898513794
    3. '[q' → logprob: -13.423590660095215
    4. '[' → logprob: -14.298590660095215
    5. ')' → logprob: -14.673590660095215
    6. ' ' → logprob: -14.923590660095215
    7. '+p' → logprob: -15.923590660095215
    8. '+b' → logprob: -16.04859161376953
    9. '   ' → logprob: -16.54859161376953
    10. '       ' → logprob: -16.67359161376953

Token 477: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.6968761682510376
    2. '(q' → logprob: -0.6968761682510376
    3. ' (' → logprob: -5.696876049041748
    4. ' q' → logprob: -8.446876525878906
    5. '(r' → logprob: -10.071876525878906
    6. '(' → logprob: -10.571876525878906
    7. '[q' → logprob: -10.696876525878906
    8. '   ' → logprob: -11.071876525878906
    9. ' ' → logprob: -11.696876525878906
    10. '
' → logprob: -12.321876525878906

Token 478: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.016042932868003845
    2. 'x' → logprob: -4.141042709350586
    3. '[' → logprob: -12.516042709350586
    4. '```' → logprob: -12.891042709350586
    5. ' x' → logprob: -14.016042709350586
    6. '{x' → logprob: -14.641042709350586
    7. '(x' → logprob: -14.766042709350586
    8. '[
' → logprob: -14.891042709350586
    9. '<x' → logprob: -15.641042709350586
    10. '\[' → logprob: -16.391042709350586

Token 479: ']-' (ID: 27107)
  Prédit: ']-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']-' → logprob: -0.2999911308288574
    2. 'x' → logprob: -2.1749911308288574
    3. '[x' → logprob: -2.4249911308288574
    4. '-' → logprob: -3.0499911308288574
    5. ']' → logprob: -4.674991130828857
    6. ' -' → logprob: -9.299991607666016
    7. '(x' → logprob: -10.174991607666016
    8. '-x' → logprob: -10.174991607666016
    9. '][' → logprob: -10.424991607666016
    10. '])-' → logprob: -10.424991607666016

Token 480: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. 'x' → logprob: -13.250003814697266
    3. ' ' → logprob: -13.750003814697266
    4. 'b' → logprob: -14.000003814697266
    5. '```' → logprob: -15.875003814697266
    6. '   ' → logprob: -16.250003814697266
    7. '[' → logprob: -16.750003814697266
    8. '-' → logprob: -16.875003814697266
    9. '[x' → logprob: -17.312503814697266
    10. 'r' → logprob: -17.812503814697266

Token 481: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.0002249933750135824
    2. ')' → logprob: -8.500225067138672
    3. '//' → logprob: -11.375225067138672
    4. '[x' → logprob: -12.125225067138672
    5. ' )' → logprob: -13.000225067138672
    6. ')#' → logprob: -13.875225067138672
    7. '}//' → logprob: -15.375225067138672
    8. '[q' → logprob: -15.375225067138672
    9. ' ' → logprob: -15.500225067138672
    10. '   ' → logprob: -15.625225067138672

Token 482: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -9.491498531133402e-06
    2. ' q' → logprob: -11.875009536743164
    3. '[q' → logprob: -13.000009536743164
    4. 'qx' → logprob: -16.000009536743164
    5. '	q' → logprob: -17.125009536743164
    6. '[x' → logprob: -17.625009536743164
    7. '(q' → logprob: -19.000009536743164
    8. '   ' → logprob: -19.375009536743164
    9. ''q' → logprob: -19.875009536743164
    10. 'qw' → logprob: -20.125009536743164

Token 483: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.201437309384346
    2. 'x' → logprob: -1.7014373540878296
    3. ' x' → logprob: -11.451436996459961
    4. '```' → logprob: -12.576436996459961
    5. '(x' → logprob: -12.951436996459961
    6. '{x' → logprob: -13.201436996459961
    7. '[' → logprob: -13.576436996459961
    8. '[q' → logprob: -13.576436996459961
    9. 'q' → logprob: -13.701436996459961
    10. '   ' → logprob: -14.451436996459961

Token 484: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4747382402420044
    2. ')' → logprob: -0.9747382402420044
    3. '       ' → logprob: -7.849738121032715
    4. ']' → logprob: -9.349738121032715
    5. ']
' → logprob: -9.474738121032715
    6. ')
' → logprob: -9.474738121032715
    7. ')

' → logprob: -11.349738121032715
    8. '])' → logprob: -12.474738121032715
    9. '   ' → logprob: -12.599738121032715
    10. 'def' → logprob: -13.224738121032715

Token 485: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19900019466876984
    2. 'k' → logprob: -2.199000120162964
    3. ' k' → logprob: -2.699000120162964
    4. '```' → logprob: -7.074000358581543
    5. '<|end|>' → logprob: -7.824000358581543
    6. '   ' → logprob: -8.574000358581543
    7. 'n' → logprob: -9.199000358581543
    8. '[' → logprob: -9.324000358581543
    9. 't' → logprob: -9.449000358581543
    10. ',k' → logprob: -9.699000358581543

Token 486: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.023360198363661766
    2. ' k' → logprob: -3.773360252380371
    3. '       ' → logprob: -9.148360252380371
    4. '```' → logprob: -12.023360252380371
    5. 'c' → logprob: -14.023360252380371
    6. '   ' → logprob: -14.148360252380371
    7. '	k' → logprob: -15.148360252380371
    8. 'm' → logprob: -16.023359298706055
    9. '``' → logprob: -16.273359298706055
    10. '
' → logprob: -16.773359298706055

Token 487: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932092308998108
    2. ' =' → logprob: -0.6932092308998108
    3. '=max' → logprob: -9.693209648132324
    4. 'max' → logprob: -15.943209648132324
    5. '=k' → logprob: -16.318208694458008
    6. ' ' → logprob: -16.943208694458008
    7. '=int' → logprob: -17.818208694458008
    8. '=}' → logprob: -18.193208694458008
    9. '＝' → logprob: -18.693208694458008
    10. '=min' → logprob: -18.818208694458008

Token 488: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0031777136027812958
    2. ' max' → logprob: -5.753177642822266
    3. 'a' → logprob: -17.378177642822266
    4. '(max' → logprob: -19.128177642822266
    5. '	max' → logprob: -19.378177642822266
    6. '   ' → logprob: -19.503177642822266
    7. '[max' → logprob: -21.128177642822266
    8. '=max' → logprob: -21.378177642822266
    9. 'min' → logprob: -22.128177642822266
    10. '_max' → logprob: -22.628177642822266

Token 489: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -14.000000953674316
    3. 'a' → logprob: -16.000001907348633
    4. '(
' → logprob: -19.625001907348633
    5. '(k' → logprob: -20.750001907348633
    6. ' (' → logprob: -20.750001907348633
    7. '((' → logprob: -21.000001907348633
    8. '   ' → logprob: -21.750001907348633
    9. '```' → logprob: -22.250001907348633
    10. '([' → logprob: -23.000001907348633

Token 490: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -4.167648876318708e-05
    2. 'min' → logprob: -10.125041961669922
    3. '(min' → logprob: -13.625041961669922
    4. '(a' → logprob: -15.750041961669922
    5. 'a' → logprob: -16.750041961669922
    6. '_max' → logprob: -17.125041961669922
    7. '```' → logprob: -17.875041961669922
    8. 'b' → logprob: -18.250041961669922
    9. 'Min' → logprob: -18.250041961669922
    10. '(' → logprob: -18.250041961669922

Token 491: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10245057195425034
    2. ',b' → logprob: -2.8524506092071533
    3. ' ,' → logprob: -3.2274506092071533
    4. ',
' → logprob: -12.227450370788574
    5. ',k' → logprob: -12.227450370788574
    6. 'b' → logprob: -12.477450370788574
    7. ' b' → logprob: -14.352450370788574
    8. ' ,
' → logprob: -14.602450370788574
    9. '   ' → logprob: -15.477450370788574
    10. ')' → logprob: -15.727450370788574

Token 492: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -4.1318875446449965e-05
    2. 'min' → logprob: -10.125041007995605
    3. 'b' → logprob: -14.875041007995605
    4. '```' → logprob: -15.125041007995605
    5. ')' → logprob: -15.500041007995605
    6. '_max' → logprob: -16.750041961669922
    7. '_MIN' → logprob: -16.875041961669922
    8. 'Min' → logprob: -17.125041961669922
    9. '   ' → logprob: -17.250041961669922
    10. ' _' → logprob: -17.500041961669922

Token 493: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008457217481918633
    2. ')
' → logprob: -7.375845909118652
    3. '<|end|>' → logprob: -8.625845909118652
    4. '       ' → logprob: -10.875845909118652
    5. '<|end|>' → logprob: -12.375845909118652
    6. '   ' → logprob: -12.625845909118652
    7. '```' → logprob: -13.125845909118652
    8. ')

' → logprob: -13.500845909118652
    9. ' )' → logprob: -13.625845909118652
    10. ')+' → logprob: -13.625845909118652

Token 494: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.49493372440338135
    2. '       ' → logprob: -1.8699337244033813
    3. '<|end|>' → logprob: -2.619933605194092
    4. ')' → logprob: -2.994933605194092
    5. '   ' → logprob: -3.369933605194092
    6. '\n' → logprob: -3.494933605194092
    7. ')
' → logprob: -3.994933605194092
    8. '        
' → logprob: -4.994933605194092
    9. '```' → logprob: -5.244933605194092
    10. '    
' → logprob: -5.494933605194092

Token 495: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -1.0849717855453491
    2. 'memo' → logprob: -1.7099717855453491
    3. 'weight' → logprob: -2.0849719047546387
    4. '       ' → logprob: -2.2099719047546387
    5. ' a' → logprob: -3.2099719047546387
    6. ' memo' → logprob: -3.3349719047546387
    7. 'w' → logprob: -3.5849719047546387
    8. 'res' → logprob: -3.7099719047546387
    9. ' res' → logprob: -3.7099719047546387
    10. 'result' → logprob: -3.7099719047546387

Token 496: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22567757964134216
    2. ' =' → logprob: -1.6006776094436646
    3. '=p' → logprob: -8.850677490234375
    4. '=x' → logprob: -9.600677490234375
    5. '=k' → logprob: -10.225677490234375
    6. '=[' → logprob: -12.600677490234375
    7. ',' → logprob: -12.725677490234375
    8. ' ' → logprob: -13.475677490234375
    9. '=
' → logprob: -13.600677490234375
    10. '=a' → logprob: -13.725677490234375

Token 497: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00033593899570405483
    2. ' p' → logprob: -8.000335693359375
    3. '   ' → logprob: -14.750335693359375
    4. 'k' → logprob: -16.125335693359375
    5. ' ' → logprob: -20.125335693359375
    6. 'q' → logprob: -20.250335693359375
    7. '       ' → logprob: -20.625335693359375
    8. '	p' → logprob: -20.875335693359375
    9. '  ' → logprob: -21.250335693359375
    10. '(p' → logprob: -21.250335693359375

Token 498: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -3.857719275401905e-05
    2. 'x' → logprob: -10.250038146972656
    3. '[' → logprob: -13.375038146972656
    4. '```' → logprob: -13.750038146972656
    5. ' [' → logprob: -16.375038146972656
    6. '\[' → logprob: -16.500038146972656
    7. '<x' → logprob: -17.000038146972656
    8. '(x' → logprob: -17.125038146972656
    9. '`' → logprob: -17.125038146972656
    10. '[
' → logprob: -17.500038146972656

Token 499: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8583163022994995
    2. ']*' → logprob: -1.2333163022994995
    3. '][' → logprob: -1.7333163022994995
    4. '[x' → logprob: -2.233316421508789
    5. '*' → logprob: -7.608316421508789
    6. '*x' → logprob: -8.483316421508789
    7. '```' → logprob: -9.608316421508789
    8. '[' → logprob: -10.608316421508789
    9. 'x' → logprob: -10.608316421508789
    10. '*[' → logprob: -10.733316421508789

Token 500: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.2200749754119897e-06
    2. ' k' → logprob: -13.125001907348633
    3. '[k' → logprob: -16.000001907348633
    4. 'x' → logprob: -18.875001907348633
    5. '[' → logprob: -19.125001907348633
    6. '{k' → logprob: -19.500001907348633
    7. '```' → logprob: -19.750001907348633
    8. '	k' → logprob: -19.875001907348633
    9. '*k' → logprob: -20.125001907348633
    10. 'kx' → logprob: -20.250001907348633

Token 501: '
' (ID: 198)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.058625586330890656
    2. ' b' → logprob: -3.1836256980895996
    3. '<|end|>' → logprob: -4.4336256980896
    4. '
' → logprob: -6.5586256980896
    5. '```' → logprob: -7.3086256980896
    6. ',' → logprob: -7.4336256980896
    7. ' 
' → logprob: -7.5586256980896
    8. ')' → logprob: -8.808625221252441
    9. ',b' → logprob: -9.433625221252441
    10. 'a' → logprob: -10.558625221252441

Token 502: '       ' (ID: 309)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.31469401717185974
    2. ' b' → logprob: -1.3146940469741821
    3. '       ' → logprob: -6.564693927764893
    4. '   ' → logprob: -11.31469440460205
    5. '	b' → logprob: -12.68969440460205
    6. '        ' → logprob: -13.18969440460205
    7. '    ' → logprob: -13.31469440460205
    8. ',' → logprob: -13.68969440460205
    9. ',b' → logprob: -14.93969440460205
    10. '           ' → logprob: -15.18969440460205

Token 503: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -1.8624639324116288e-06
    2. ' b' → logprob: -13.250001907348633
    3. '   ' → logprob: -17.875001907348633
    4. '#' → logprob: -18.250001907348633
    5. '
' → logprob: -18.500001907348633
    6. 'k' → logprob: -18.625001907348633
    7. '```' → logprob: -18.625001907348633
    8. '	b' → logprob: -19.250001907348633
    9. '       ' → logprob: -19.250001907348633
    10. 'weight' → logprob: -19.500001907348633

Token 504: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009767187759280205
    2. ' =' → logprob: -4.634767055511475
    3. 'q' → logprob: -12.259767532348633
    4. 'x' → logprob: -13.384767532348633
    5. '[x' → logprob: -13.884767532348633
    6. '=q' → logprob: -14.134767532348633
    7. '[' → logprob: -14.259767532348633
    8. '[q' → logprob: -14.634767532348633
    9. '<|end|>' → logprob: -14.634767532348633
    10. '=x' → logprob: -14.884767532348633

Token 505: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.001170460251159966
    2. ' q' → logprob: -6.751170635223389
    3. '	q' → logprob: -16.376171112060547
    4. '   ' → logprob: -16.376171112060547
    5. ' ' → logprob: -17.626171112060547
    6. '[q' → logprob: -17.626171112060547
    7. 'b' → logprob: -18.251171112060547
    8. 'qx' → logprob: -18.876171112060547
    9. '(q' → logprob: -19.001171112060547
    10. 'qw' → logprob: -19.376171112060547

Token 506: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -7.302704761968926e-05
    2. 'x' → logprob: -9.750073432922363
    3. '[' → logprob: -11.375073432922363
    4. '```' → logprob: -13.250073432922363
    5. '<x' → logprob: -14.250073432922363
    6. '\[' → logprob: -15.750073432922363
    7. ' x' → logprob: -15.875073432922363
    8. '(x' → logprob: -15.875073432922363
    9. '<|end|>' → logprob: -16.000072479248047
    10. ' [' → logprob: -16.250072479248047

Token 507: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.47035112977027893
    2. '*x' → logprob: -1.0953510999679565
    3. '[x' → logprob: -3.595351219177246
    4. ']*' → logprob: -4.970351219177246
    5. '*[' → logprob: -5.970351219177246
    6. '*k' → logprob: -6.470351219177246
    7. 'x' → logprob: -6.970351219177246
    8. ']' → logprob: -7.720351219177246
    9. '```' → logprob: -7.720351219177246
    10. '[' → logprob: -8.595351219177246

Token 508: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.3902033970225602e-05
    2. 'x' → logprob: -11.750014305114746
    3. ' k' → logprob: -12.375014305114746
    4. '[x' → logprob: -14.375014305114746
    5. '[k' → logprob: -15.125014305114746
    6. '*k' → logprob: -15.125014305114746
    7. '```' → logprob: -16.12501335144043
    8. 'b' → logprob: -16.37501335144043
    9. '	k' → logprob: -16.50001335144043
    10. '[' → logprob: -16.50001335144043

Token 509: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3748445212841034
    2. '
' → logprob: -1.4998445510864258
    3. 'weight' → logprob: -3.249844551086426
    4. 'm' → logprob: -4.249844551086426
    5. '        
' → logprob: -4.874844551086426
    6. 'memo' → logprob: -4.999844551086426
    7. 'w' → logprob: -5.249844551086426
    8. ',' → logprob: -5.874844551086426
    9. ')' → logprob: -6.499844551086426
    10. '   ' → logprob: -6.624844551086426

Token 510: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007496712729334831
    2. 'weight' → logprob: -5.8824968338012695
    3. '```' → logprob: -6.7574968338012695
    4. '
' → logprob: -7.3824968338012695
    5. 'memo' → logprob: -7.5074968338012695
    6. '        
' → logprob: -8.13249683380127
    7. '#' → logprob: -8.25749683380127
    8. 'm' → logprob: -8.25749683380127
    9. ')' → logprob: -8.38249683380127
    10. ',' → logprob: -8.50749683380127

Token 511: ' memo' (ID: 46393)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.8613728284835815
    2. 'weight' → logprob: -1.2363728284835815
    3. '       ' → logprob: -2.236372947692871
    4. 'memo' (adapté à ' memo') → logprob: -2.236372947692871
    5. 'total' → logprob: -3.361372947692871
    6. 'm' → logprob: -4.486372947692871
    7. 'res' → logprob: -4.861372947692871
    8. 's' → logprob: -5.611372947692871
    9. 'val' → logprob: -5.861372947692871
    10. '   ' → logprob: -5.986372947692871

Token 512: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.00018422940047457814
    2. '[' → logprob: -8.625184059143066
    3. '[
' → logprob: -13.625184059143066
    4. '\[' → logprob: -14.000184059143066
    5. '```' → logprob: -14.250184059143066
    6. '=' → logprob: -15.125184059143066
    7. '[s' → logprob: -15.250184059143066
    8. 'x' → logprob: -15.375184059143066
    9. ' [' → logprob: -15.875184059143066
    10. '[u' → logprob: -15.875184059143066

Token 513: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03122316487133503
    2. ']=' → logprob: -3.5312230587005615
    3. '=' → logprob: -6.531223297119141
    4. ']=(' → logprob: -11.65622329711914
    5. ')' → logprob: -12.53122329711914
    6. ')=' → logprob: -13.90622329711914
    7. ' ]' → logprob: -14.65622329711914
    8. ' =' → logprob: -14.90622329711914
    9. ']={' → logprob: -15.78122329711914
    10. '']=' → logprob: -16.78122329711914

Token 514: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -5.319370302458992e-06
    2. ' =' → logprob: -12.375005722045898
    3. '=k' → logprob: -14.250005722045898
    4. '=}' → logprob: -16.5000057220459
    5. '=

' → logprob: -16.5000057220459
    6. '=
' → logprob: -17.3750057220459
    7. '=b' → logprob: -18.5000057220459
    8. '=f' → logprob: -18.8750057220459
    9. '=a' → logprob: -19.1250057220459
    10. '=int' → logprob: -19.1250057220459

Token 515: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -5.3358446166384965e-05
    2. ' a' → logprob: -9.875053405761719
    3. '(a' → logprob: -14.000053405761719
    4. '   ' → logprob: -14.125053405761719
    5. 'max' → logprob: -16.62505340576172
    6. 'weight' → logprob: -17.00005340576172
    7. '{' → logprob: -17.37505340576172
    8. ' ' → logprob: -17.50005340576172
    9. '[a' → logprob: -17.62505340576172
    10. '(' → logprob: -17.87505340576172

Token 516: ' +' (ID: 659)
  Prédit: '+b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+b' → logprob: -0.5522584915161133
    2. ' +' → logprob: -1.3022584915161133
    3. '+' → logprob: -1.9272584915161133
    4. '<|end|>' → logprob: -5.052258491516113
    5. 'b' → logprob: -8.427258491516113
    6. '+a' → logprob: -8.552258491516113
    7. '+B' → logprob: -11.302258491516113
    8. '+k' → logprob: -11.427258491516113
    9. '*' → logprob: -11.802258491516113
    10. '*b' → logprob: -11.802258491516113

Token 517: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -5.157039049663581e-05
    2. ' b' → logprob: -9.875051498413086
    3. '	b' → logprob: -19.250051498413086
    4. ')b' → logprob: -19.375051498413086
    5. '>b' → logprob: -19.375051498413086
    6. '   ' → logprob: -20.500051498413086
    7. '*b' → logprob: -20.625051498413086
    8. '       ' → logprob: -21.000051498413086
    9. '+b' → logprob: -21.125051498413086
    10. '```' → logprob: -21.375051498413086

Token 518: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01633944921195507
    2. '
' → logprob: -4.516339302062988
    3. 'return' → logprob: -5.391339302062988
    4. ' return' → logprob: -8.016339302062988
    5. '	return' → logprob: -9.016339302062988
    6. '<|end|>' → logprob: -9.266339302062988
    7. '
' → logprob: -9.891339302062988
    8. '   ' → logprob: -10.266339302062988
    9. ':return' → logprob: -10.516339302062988
    10. '        
' → logprob: -10.891339302062988

Token 519: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17900393903255463
    2. 'return' → logprob: -2.554003953933716
    3. '   ' → logprob: -3.054003953933716
    4. '	return' → logprob: -3.804003953933716
    5. ' return' → logprob: -4.304003715515137
    6. '
' → logprob: -6.929003715515137
    7. '<|end|>' → logprob: -7.429003715515137
    8. ':return' → logprob: -7.554003715515137
    9. ')return' → logprob: -8.179003715515137
    10. ',' → logprob: -9.304003715515137

Token 520: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.017041794955730438
    2. '       ' → logprob: -4.2670416831970215
    3. ' return' → logprob: -6.0170416831970215
    4. '   ' → logprob: -7.7670416831970215
    5. 'weight' → logprob: -11.39204216003418
    6. '	return' → logprob: -13.64204216003418
    7. '        
' → logprob: -14.64204216003418
    8. '
' → logprob: -15.51704216003418
    9. ':return' → logprob: -15.51704216003418
    10. ' ' → logprob: -16.01704216003418

Token 521: ' memo' (ID: 46393)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03811366483569145
    2. 'memo' → logprob: -3.288113594055176
    3. ' a' → logprob: -9.663113594055176
    4. ' memo' → logprob: -11.913113594055176
    5. 'm' → logprob: -14.538113594055176
    6. '   ' → logprob: -14.913113594055176
    7. 'memory' → logprob: -15.413113594055176
    8. 'mem' → logprob: -15.788113594055176
    9. '	a' → logprob: -15.788113594055176
    10. 'k' → logprob: -16.413114547729492

Token 522: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -15.125000953674316
    3. '```' → logprob: -15.500000953674316
    4. '(x' → logprob: -15.750000953674316
    5. 'x' → logprob: -16.0
    6. '{x' → logprob: -17.125
    7. ' [' → logprob: -17.25
    8. '[token' → logprob: -17.625
    9. '\[' → logprob: -18.25
    10. ',x' → logprob: -18.25

Token 523: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2249772995710373
    2. '[x' → logprob: -1.8499772548675537
    3. '<|end|>' → logprob: -3.4749772548675537
    4. ')' → logprob: -4.974977493286133
    5. '}' → logprob: -5.224977493286133
    6. '<|end|>' → logprob: -7.599977493286133
    7. '```' → logprob: -8.849977493286133
    8. '(x' → logprob: -9.474977493286133
    9. '[' → logprob: -9.724977493286133
    10. '   ' → logprob: -10.349977493286133

Token 524: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06744351238012314
    2. '<|end|>' → logprob: -2.817443609237671
    3. 'weight' → logprob: -7.067443370819092
    4. '()' → logprob: -7.317443370819092
    5. 'for' → logprob: -7.442443370819092
    6. '
' → logprob: -7.442443370819092
    7. ')' → logprob: -7.567443370819092
    8. '```' → logprob: -8.06744384765625
    9. '#' → logprob: -8.31744384765625
    10. '   ' → logprob: -8.44244384765625

Token 525: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00775746488943696
    2. 'res' → logprob: -5.882757663726807
    3. 'result' → logprob: -6.632757663726807
    4. 'ans' → logprob: -6.882757663726807
    5. 'total' → logprob: -6.882757663726807
    6. 'for' → logprob: -7.382757663726807
    7. 'weight' → logprob: -7.632757663726807
    8. 'w' → logprob: -8.382757186889648
    9. 'answer' → logprob: -9.007757186889648
    10. ' print' → logprob: -10.007757186889648

Token 526: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0041166311129927635
    2. '(' → logprob: -5.504116535186768
    3. '(df' → logprob: -11.254117012023926
    4. '()' → logprob: -12.129117012023926
    5. '((' → logprob: -12.254117012023926
    6. '(m' → logprob: -12.254117012023926
    7. '(dp' → logprob: -12.254117012023926
    8. 'dfs' → logprob: -13.504117012023926
    9. ' (' → logprob: -13.629117012023926
    10. '(f' → logprob: -14.379117012023926

Token 527: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -0.0001737431448418647
    2. 'f' → logprob: -8.750173568725586
    3. '(fs' → logprob: -12.125173568725586
    4. 'fsm' → logprob: -12.250173568725586
    5. 'p' → logprob: -13.375173568725586
    6. 's' → logprob: -13.875173568725586
    7. 'dfs' → logprob: -14.000173568725586
    8. 'sf' → logprob: -14.250173568725586
    9. 'ps' → logprob: -14.500173568725586
    10. ' fs' → logprob: -15.750173568725586

Token 528: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03005257248878479
    2. '1' → logprob: -4.155052661895752
    3. '(n' → logprob: -4.280052661895752
    4. ')' → logprob: -9.905052185058594
    5. '(int' → logprob: -11.655052185058594
    6. 'n' → logprob: -11.780052185058594
    7. ' (' → logprob: -12.780052185058594
    8. ')(' → logprob: -12.780052185058594
    9. '(r' → logprob: -13.405052185058594
    10. ')n' → logprob: -13.405052185058594

Token 529: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.179569077678025e-05
    2. 'n' → logprob: -10.125041961669922
    3. ' ' → logprob: -14.375041961669922
    4. '   ' → logprob: -14.375041961669922
    5. ')' → logprob: -16.000041961669922
    6. '
' → logprob: -16.250041961669922
    7. '0' → logprob: -16.250041961669922
    8. '  ' → logprob: -17.250041961669922
    9. 'root' → logprob: -17.625041961669922
    10. 'r' → logprob: -17.750041961669922

Token 530: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.10021097958087921
    2. ')' → logprob: -2.3502109050750732
    3. '))
' → logprob: -13.725211143493652
    4. ')))' → logprob: -13.725211143493652
    5. '())' → logprob: -14.350211143493652
    6. ' ))' → logprob: -14.600211143493652
    7. '()))' → logprob: -14.600211143493652
    8. ')
' → logprob: -15.350211143493652
    9. ' )' → logprob: -15.725211143493652
    10. '})' → logprob: -15.975211143493652


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 528
Tokens correctement prédits (1ère position, stricte): 182
Tokens correctement prédits (1ère position, avec adaptation): 201
Tokens correctement prédits (top 10): 395
Précision stricte (1ère position): 34.47%
Précision adaptée (1ère position): 38.07%
Précision (top 10): 74.81%
================================================================================
