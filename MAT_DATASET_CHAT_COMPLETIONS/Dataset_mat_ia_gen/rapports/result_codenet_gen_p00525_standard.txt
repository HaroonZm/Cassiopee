================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:24:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input=sys.stdin.readline
W,H,N=map(int,input().split())
vertical=set([0,W])
horizontal=set([0,H])
for _ in range(N):
    A,B,C,D=map(int,input().split())
    if A==C:
        vertical.add(A)
    else:
        horizontal.add(B)
print((len(vertical)-1)*(len(horizontal)-1))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.319917768239975
    2. '.' → logprob: -1.6949177980422974
    3. '<|end|>' → logprob: -2.944917678833008
    4. '\' → logprob: -4.444917678833008
    5. 'newline' → logprob: -5.069917678833008
    6. 'import' → logprob: -5.069917678833008
    7. '' → logprob: -5.819917678833008
    8. '<|end|>' → logprob: -5.944917678833008
    9. '\r' → logprob: -6.069917678833008
    10. '
' → logprob: -6.319917678833008

Token 4: '=sys' (ID: 149200)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006620417116209865
    2. '.' → logprob: -8.125661849975586
    3. '(
' → logprob: -8.750661849975586
    4. '()' → logprob: -9.500661849975586
    5. ')' → logprob: -10.375661849975586
    6. ' (' → logprob: -10.500661849975586
    7. '('' → logprob: -11.250661849975586
    8. ''' → logprob: -11.250661849975586
    9. '(

' → logprob: -11.500661849975586
    10. '```' → logprob: -12.000661849975586

Token 5: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0013508300762623549
    2. '.readline' → logprob: -7.6263508796691895
    3. '[' → logprob: -7.8763508796691895
    4. ' .' → logprob: -8.251350402832031
    5. '.
' → logprob: -9.376350402832031
    6. '.get' → logprob: -10.751350402832031
    7. '.setdefault' → logprob: -11.251350402832031
    8. '.[' → logprob: -11.251350402832031
    9. ''.' → logprob: -11.501350402832031
    10. '```' → logprob: -11.501350402832031

Token 6: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.07033608108758926
    2. '.readline' → logprob: -2.695336103439331
    3. '.read' → logprob: -7.945335865020752
    4. '.
' → logprob: -11.69533634185791
    5. '.​' → logprob: -11.94533634185791
    6. '.Read' → logprob: -11.94533634185791
    7. '```' → logprob: -12.32033634185791
    8. '.

' → logprob: -12.44533634185791
    9. '.\' → logprob: -12.94533634185791
    10. '.`' → logprob: -13.19533634185791

Token 7: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04714145138859749
    2. '(' → logprob: -3.2971415519714355
    3. '().' → logprob: -5.1721415519714355
    4. '()
' → logprob: -6.4221415519714355
    5. '(
' → logprob: -6.9221415519714355
    6. '()\' → logprob: -8.172141075134277
    7. '()

' → logprob: -8.797141075134277
    8. '(

' → logprob: -9.547141075134277
    9. ')' → logprob: -9.672141075134277
    10. '
' → logprob: -10.047141075134277

Token 8: 'W' (ID: 54)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05533840134739876
    2. '(' → logprob: -2.9303383827209473
    3. '()
' → logprob: -8.555338859558105
    4. '().' → logprob: -9.180338859558105
    5. '(
' → logprob: -9.555338859558105
    6. '()

' → logprob: -10.680338859558105
    7. '()\' → logprob: -10.805338859558105
    8. ')' → logprob: -11.305338859558105
    9. '())' → logprob: -12.180338859558105
    10. ' ()' → logprob: -12.430338859558105

Token 9: ',H' (ID: 94400)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8451527953147888
    2. '=' → logprob: -1.9701528549194336
    3. '.' → logprob: -2.0951528549194336
    4. 'hile' → logprob: -2.3451528549194336
    5. '(' → logprob: -2.4701528549194336
    6. '[' → logprob: -3.5951528549194336
    7. '()' → logprob: -3.8451528549194336
    8. 'h' → logprob: -3.8451528549194336
    9. ',' → logprob: -4.470152854919434
    10. '_' → logprob: -4.720152854919434

Token 10: ',N' (ID: 49539)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5055508017539978
    2. '=' → logprob: -1.2555508613586426
    3. ' =' → logprob: -2.2555508613586426
    4. ' ,' → logprob: -5.505550861358643
    5. ',W' → logprob: -6.255550861358643
    6. ' ' → logprob: -8.755550384521484
    7. ')' → logprob: -9.005550384521484
    8. ',N' → logprob: -9.255550384521484
    9. ',w' → logprob: -9.380550384521484
    10. '[' → logprob: -9.880550384521484

Token 11: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07198239862918854
    2. ' =' → logprob: -3.1969823837280273
    3. ',' → logprob: -3.5719823837280273
    4. '=input' → logprob: -8.946982383728027
    5. '=
' → logprob: -9.571982383728027
    6. ' ,' → logprob: -9.821982383728027
    7. ' =
' → logprob: -9.946982383728027
    8. '=int' → logprob: -10.071982383728027
    9. '=

' → logprob: -10.071982383728027
    10. ',W' → logprob: -10.821982383728027

Token 12: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.5760012269020081
    2. ' map' → logprob: -0.8260012269020081
    3. 'list' → logprob: -10.201001167297363
    4. ' list' → logprob: -10.826001167297363
    5. 'input' → logprob: -12.951001167297363
    6. ' input' → logprob: -14.201001167297363
    7. '[' → logprob: -14.326001167297363
    8. '	map' → logprob: -14.826001167297363
    9. ' ' → logprob: -15.826001167297363
    10. '(map' → logprob: -15.951001167297363

Token 13: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.48653241991996765
    2. '(int' → logprob: -0.98653244972229
    3. '(str' → logprob: -4.986532211303711
    4. '(lambda' → logprob: -5.361532211303711
    5. '[int' → logprob: -8.611532211303711
    6. '(len' → logprob: -9.111532211303711
    7. '(input' → logprob: -9.111532211303711
    8. 'int' → logprob: -9.111532211303711
    9. '(
' → logprob: -9.611532211303711
    10. '(tuple' → logprob: -9.986532211303711

Token 14: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.0631498396396637
    2. ',' → logprob: -2.813149929046631
    3. '(input' → logprob: -7.563149929046631
    4. 'input' → logprob: -7.938149929046631
    5. '(' → logprob: -8.813149452209473
    6. '(sys' → logprob: -9.563149452209473
    7. ',int' → logprob: -10.438149452209473
    8. ' ,' → logprob: -11.188149452209473
    9. ',W' → logprob: -11.813149452209473
    10. 'sys' → logprob: -11.813149452209473

Token 15: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00011951648048125207
    2. '())' → logprob: -9.12511920928955
    3. '()' → logprob: -11.50011920928955
    4. ' ().' → logprob: -15.87511920928955
    5. ')' → logprob: -16.500120162963867
    6. '(' → logprob: -16.500120162963867
    7. '()))' → logprob: -17.125120162963867
    8. '());' → logprob: -17.875120162963867
    9. '()[' → logprob: -18.125120162963867
    10. '();)' → logprob: -18.625120162963867

Token 16: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0001870902779046446
    2. 'strip' → logprob: -9.000186920166016
    3. 'rstrip' → logprob: -9.750186920166016
    4. ' split' → logprob: -12.375186920166016
    5. '(split' → logprob: -14.625186920166016
    6. ')' → logprob: -15.000186920166016
    7. '().' → logprob: -15.875186920166016
    8. 'spl' → logprob: -16.125186920166016
    9. '.split' → logprob: -16.500186920166016
    10. ' ' → logprob: -16.625186920166016

Token 17: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5833816528320312
    2. '())' → logprob: -0.8333816528320312
    3. '()' → logprob: -4.958381652832031
    4. '))' → logprob: -8.333381652832031
    5. '()))' → logprob: -10.083381652832031
    6. '(' → logprob: -10.083381652832031
    7. '),' → logprob: -11.458381652832031
    8. '`)' → logprob: -11.833381652832031
    9. '(),' → logprob: -11.958381652832031
    10. '('' → logprob: -12.333381652832031

Token 18: 'vertical' (ID: 29475)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5771374702453613
    2. 'for' → logprob: -2.4521374702453613
    3. 'points' → logprob: -2.5771374702453613
    4. 'rect' → logprob: -3.0771374702453613
    5. 'rectangle' → logprob: -3.2021374702453613
    6. 'field' → logprob: -3.8271374702453613
    7. 'X' → logprob: -3.9521374702453613
    8. 'area' → logprob: -4.202137470245361
    9. 'a' → logprob: -4.202137470245361
    10. 'canvas' → logprob: -4.452137470245361

Token 19: '=set' (ID: 166509)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.32216596603393555
    2. '_lines' → logprob: -1.5721659660339355
    3. '=[]' → logprob: -3.1971659660339355
    4. '_c' → logprob: -4.3221659660339355
    5. 's' → logprob: -5.9471659660339355
    6. '=line' → logprob: -5.9471659660339355
    7. '=_' → logprob: -6.0721659660339355
    8. '_' → logprob: -6.5721659660339355
    9. '=[' → logprob: -6.9471659660339355
    10. '_cut' → logprob: -7.4471659660339355

Token 20: '([' (ID: 5194)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008485790458507836
    2. '(' → logprob: -7.125848770141602
    3. '([' → logprob: -11.250848770141602
    4. '([]' → logprob: -11.250848770141602
    5. '()
' → logprob: -12.500848770141602
    6. '(range' → logprob: -12.625848770141602
    7. '()<' → logprob: -13.125848770141602
    8. '(),' → logprob: -13.125848770141602
    9. ' ()' → logprob: -13.375848770141602
    10. '((' → logprob: -14.250848770141602

Token 21: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000719818810466677
    2. ' ' → logprob: -7.500720024108887
    3. 'int' → logprob: -8.875720024108887
    4. '*' → logprob: -11.750720024108887
    5. '])' → logprob: -12.500720024108887
    6. 'i' → logprob: -12.875720024108887
    7. '(int' → logprob: -13.000720024108887
    8. 'x' → logprob: -13.250720024108887
    9. '()' → logprob: -13.625720024108887
    10. ']' → logprob: -13.750720024108887

Token 22: ',W' (ID: 117252)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2607719898223877
    2. ' ,' → logprob: -1.5107719898223877
    3. ',W' → logprob: -4.760771751403809
    4. ',H' → logprob: -9.260771751403809
    5. ' ' → logprob: -9.635771751403809
    6. ' )' → logprob: -10.760771751403809
    7. ',N' → logprob: -11.260771751403809
    8. ',V' → logprob: -12.010771751403809
    9. '<|end|>' → logprob: -12.010771751403809
    10. ')' → logprob: -12.135771751403809

Token 23: '])
' (ID: 5169)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5284982919692993
    2. '])' → logprob: -0.9034982919692993
    3. ' ])' → logprob: -5.77849817276001
    4. ' ,' → logprob: -6.15349817276001
    5. ')' → logprob: -9.653498649597168
    6. ',
' → logprob: -11.153498649597168
    7. ' )' → logprob: -11.278498649597168
    8. ']' → logprob: -11.778498649597168
    9. ' ' → logprob: -12.028498649597168
    10. ',end' → logprob: -12.653498649597168

Token 24: 'horizontal' (ID: 62473)
  Prédit: 'horizontal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'horizontal' → logprob: -0.01111950259655714
    2. 'vertical' → logprob: -5.386119365692139
    3. ' horizontal' → logprob: -5.886119365692139
    4. ',' → logprob: -6.386119365692139
    5. 'orizontal' → logprob: -6.886119365692139
    6. '_horizontal' → logprob: -8.136119842529297
    7. '.horizontal' → logprob: -8.261119842529297
    8. '<|end|>' → logprob: -8.761119842529297
    9. '(horizontal' → logprob: -9.136119842529297
    10. '(vertical' → logprob: -10.386119842529297

Token 25: '=set' (ID: 166509)
  Prédit: '=set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=set' → logprob: -0.0040838588029146194
    2. '=' → logprob: -5.504083633422852
    3. ' =' → logprob: -12.254083633422852
    4. '=int' → logprob: -15.504083633422852
    5. '=

' → logprob: -16.12908363342285
    6. '=s' → logprob: -16.37908363342285
    7. 'set' → logprob: -17.00408363342285
    8. '.set' → logprob: -17.50408363342285
    9. '=
' → logprob: -17.62908363342285
    10. '=create' → logprob: -17.75408363342285

Token 26: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.0002753981971181929
    2. '(' → logprob: -8.500275611877441
    3. ' ([' → logprob: -9.750275611877441
    4. '[' → logprob: -12.125275611877441
    5. '([
' → logprob: -12.750275611877441
    6. '({' → logprob: -13.000275611877441
    7. ' (' → logprob: -13.625275611877441
    8. '([...' → logprob: -14.250275611877441
    9. '([(' → logprob: -15.125275611877441
    10. '([{' → logprob: -15.250275611877441

Token 27: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.8961017202818766e-05
    2. ' ' → logprob: -9.750059127807617
    3. ',' → logprob: -14.250059127807617
    4. '۰' → logprob: -17.875059127807617
    5. '  ' → logprob: -18.000059127807617
    6. '   ' → logprob: -18.000059127807617
    7. ' ,' → logprob: -18.250059127807617
    8. ' ' → logprob: -18.625059127807617
    9. '０' → logprob: -19.312559127807617
    10. ')' → logprob: -19.375059127807617

Token 28: ',H' (ID: 94400)
  Prédit: ',H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',H' → logprob: -0.2014472484588623
    2. ',' → logprob: -1.7014472484588623
    3. ' ,' → logprob: -10.576447486877441
    4. ',h' → logprob: -12.826447486877441
    5. ',W' → logprob: -12.951447486877441
    6. ' ' → logprob: -13.951447486877441
    7. 'H' → logprob: -14.451447486877441
    8. ',
' → logprob: -15.076447486877441
    9. '，' → logprob: -15.576447486877441
    10. ',Y' → logprob: -15.826447486877441

Token 29: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.013253285549581051
    2. ',' → logprob: -4.388253211975098
    3. ')' → logprob: -7.638253211975098
    4. '])
' → logprob: -8.638253211975098
    5. ' ])' → logprob: -9.888253211975098
    6. ''])' → logprob: -12.138253211975098
    7. ',
' → logprob: -12.138253211975098
    8. ')])' → logprob: -12.388253211975098
    9. ',h' → logprob: -12.763253211975098
    10. '])

' → logprob: -13.138253211975098

Token 30: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0012652362929657102
    2. ' for' → logprob: -7.376265048980713
    3. 'points' → logprob: -8.126265525817871
    4. 'x' → logprob: -9.251265525817871
    5. '```' → logprob: -9.501265525817871
    6. 'vertical' → logprob: -9.751265525817871
    7. 'rect' → logprob: -11.001265525817871
    8. 'tiles' → logprob: -11.751265525817871
    9. 'positions' → logprob: -11.751265525817871
    10. 'lines' → logprob: -11.876265525817871

Token 31: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.02029871940612793
    2. ' i' → logprob: -4.395298957824707
    3. ' ' → logprob: -5.145298957824707
    4. '_' → logprob: -6.270298957824707
    5. 'i' → logprob: -10.895298957824707
    6. ' ' → logprob: -11.270298957824707
    7. '_i' → logprob: -13.145298957824707
    8. ' ‌' → logprob: -13.520298957824707
    9. ' ▁' → logprob: -13.770298957824707
    10. ' x' → logprob: -13.770298957824707

Token 32: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.030176453292369843
    2. 'in' → logprob: -3.5301764011383057
    3. ' ' → logprob: -8.030176162719727
    4. ' i' → logprob: -10.530176162719727
    5. 'n' → logprob: -10.655176162719727
    6. 'i' → logprob: -10.780176162719727
    7. '<|end|>' → logprob: -12.155176162719727
    8. '  ' → logprob: -12.405176162719727
    9. 'range' → logprob: -13.030176162719727
    10. 'import' → logprob: -13.155176162719727

Token 33: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05491602420806885
    2. ' range' → logprob: -2.9299159049987793
    3. 'input' → logprob: -11.304916381835938
    4. '(range' → logprob: -11.679916381835938
    5. '	range' → logprob: -13.179916381835938
    6. 'N' → logprob: -13.429916381835938
    7. 'in' → logprob: -13.804916381835938
    8. 'map' → logprob: -14.054916381835938
    9. 'W' → logprob: -14.054916381835938
    10. '```' → logprob: -14.179916381835938

Token 34: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.17095164954662323
    2. '(' → logprob: -2.0459516048431396
    3. ' (' → logprob: -3.6709516048431396
    4. ' N' → logprob: -6.295951843261719
    5. 'N' → logprob: -7.795951843261719
    6. '(n' → logprob: -9.670951843261719
    7. ' ' → logprob: -9.920951843261719
    8. '(int' → logprob: -10.170951843261719
    9. '(
' → logprob: -11.420951843261719
    10. '()' → logprob: -12.420951843261719

Token 35: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003650557016953826
    2. ')' → logprob: -6.753650665283203
    3. ' ):' → logprob: -6.753650665283203
    4. ':' → logprob: -7.503650665283203
    5. ',' → logprob: -7.503650665283203
    6. '):
' → logprob: -8.628650665283203
    7. ' :' → logprob: -12.753650665283203
    8. '):
' → logprob: -12.878650665283203
    9. '),' → logprob: -13.003650665283203
    10. ' )' → logprob: -13.003650665283203

Token 36: '   ' (ID: 271)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.45734453201293945
    2. ' ' → logprob: -2.4573445320129395
    3. ' input' → logprob: -2.9573445320129395
    4. '<|end|>' → logprob: -3.0823445320129395
    5. ' t' → logprob: -3.3323445320129395
    6. 'x' → logprob: -3.5823445320129395
    7. ' a' → logprob: -3.7073445320129395
    8. ' line' → logprob: -3.9573445320129395
    9. ' c' → logprob: -4.5823445320129395
    10. ' s' → logprob: -4.8323445320129395

Token 37: ' A' (ID: 355)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12376819550991058
    2. 'a' → logprob: -2.6237680912017822
    3. 'd' → logprob: -3.9987680912017822
    4. 'c' → logprob: -3.9987680912017822
    5. 'l' → logprob: -5.998768329620361
    6. 's' → logprob: -6.623768329620361
    7. '```' → logprob: -6.748768329620361
    8. 'b' → logprob: -7.498768329620361
    9. 'direction' → logprob: -8.123767852783203
    10. 'line' → logprob: -8.373767852783203

Token 38: ',B' (ID: 19853)
  Prédit: ',B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',B' → logprob: -1.0446009635925293
    2. ',x' → logprob: -1.1696009635925293
    3. ',' → logprob: -2.0446009635925293
    4. ',d' → logprob: -3.6696009635925293
    5. ',b' → logprob: -3.7946009635925293
    6. 'B' → logprob: -3.9196009635925293
    7. ',C' → logprob: -4.044600963592529
    8. 'x' → logprob: -4.544600963592529
    9. ',v' → logprob: -4.544600963592529
    10. ',D' → logprob: -4.544600963592529

Token 39: ',C' (ID: 26924)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03945927321910858
    2. '=input' → logprob: -3.289459228515625
    3. ' =' → logprob: -6.789459228515625
    4. '=int' → logprob: -8.914459228515625
    5. '=A' → logprob: -10.039459228515625
    6. '=list' → logprob: -10.539459228515625
    7. '=_' → logprob: -11.039459228515625
    8. '=W' → logprob: -11.289459228515625
    9. '=line' → logprob: -11.414459228515625
    10. '=B' → logprob: -11.539459228515625

Token 40: ',D' (ID: 61507)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03156118094921112
    2. '=input' → logprob: -3.5315611362457275
    3. '=list' → logprob: -7.281561374664307
    4. ',D' → logprob: -8.406560897827148
    5. 'D' → logprob: -8.531560897827148
    6. '=D' → logprob: -8.531560897827148
    7. ' =' → logprob: -8.656560897827148
    8. '=sys' → logprob: -8.781560897827148
    9. '=_' → logprob: -9.531560897827148
    10. '=int' → logprob: -10.531560897827148

Token 41: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03992867097258568
    2. '=input' → logprob: -3.289928674697876
    3. ' =' → logprob: -6.414928436279297
    4. '=list' → logprob: -9.914928436279297
    5. '=_' → logprob: -9.914928436279297
    6. '=line' → logprob: -10.539928436279297
    7. '=set' → logprob: -10.789928436279297
    8. '=int' → logprob: -11.164928436279297
    9. ' ' → logprob: -11.289928436279297
    10. '=sys' → logprob: -11.539928436279297

Token 42: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.08894743025302887
    2. ' map' → logprob: -2.4639475345611572
    3. '	map' → logprob: -12.338947296142578
    4. 'm' → logprob: -12.838947296142578
    5. '(map' → logprob: -15.838947296142578
    6. ' ' → logprob: -16.088947296142578
    7. ',map' → logprob: -16.088947296142578
    8. '   ' → logprob: -16.213947296142578
    9. 'list' → logprob: -16.213947296142578
    10. '.map' → logprob: -16.338947296142578

Token 43: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.023287521675229073
    2. '(' → logprob: -3.773287534713745
    3. '<int' → logprob: -10.898287773132324
    4. '(lambda' → logprob: -12.523287773132324
    5. '[int' → logprob: -12.523287773132324
    6. '<|end|>' → logprob: -12.648287773132324
    7. ' (' → logprob: -13.023287773132324
    8. '(str' → logprob: -13.273287773132324
    9. '(
' → logprob: -13.398287773132324
    10. 'int' → logprob: -13.773287773132324

Token 44: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.006196592003107071
    2. ',' → logprob: -5.50619649887085
    3. '(input' → logprob: -6.25619649887085
    4. '(' → logprob: -9.131196975708008
    5. 'input' → logprob: -10.631196975708008
    6. ',int' → logprob: -10.756196975708008
    7. ' ,' → logprob: -11.631196975708008
    8. ',(' → logprob: -11.881196975708008
    9. '=input' → logprob: -12.256196975708008
    10. '<|end|>' → logprob: -12.881196975708008

Token 45: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.0280383548888494e-06
    2. '.readline' → logprob: -14.625000953674316
    3. '()' → logprob: -15.250000953674316
    4. ' ().' → logprob: -16.375001907348633
    5. ').' → logprob: -16.625001907348633
    6. '.split' → logprob: -16.625001907348633
    7. '.' → logprob: -16.750001907348633
    8. '(' → logprob: -18.000001907348633
    9. '()).' → logprob: -18.500001907348633
    10. '().__' → logprob: -18.625001907348633

Token 46: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.173704271830502e-06
    2. ' split' → logprob: -13.37500286102295
    3. 'strip' → logprob: -13.75000286102295
    4. '(split' → logprob: -15.62500286102295
    5. 'spl' → logprob: -15.75000286102295
    6. 'rstrip' → logprob: -16.000003814697266
    7. '.split' → logprob: -16.875003814697266
    8. 'plit' → logprob: -17.375003814697266
    9. ')' → logprob: -17.500003814697266
    10. '```' → logprob: -18.625003814697266

Token 47: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.051247745752334595
    2. '())' → logprob: -3.0512478351593018
    3. '()' → logprob: -6.051247596740723
    4. ')
' → logprob: -8.551247596740723
    5. '())
' → logprob: -9.926247596740723
    6. ' )' → logprob: -10.676247596740723
    7. '))' → logprob: -11.301247596740723
    8. '`)' → logprob: -12.176247596740723
    9. ')`' → logprob: -12.676247596740723
    10. '   ' → logprob: -12.801247596740723

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0144678354263306
    2. '<|end|>' → logprob: -1.2644678354263306
    3. ' if' → logprob: -2.139467716217041
    4. 'if' → logprob: -2.639467716217041
    5. ' 
' → logprob: -3.014467716217041
    6. '
' → logprob: -3.264467716217041
    7. 'vertical' → logprob: -3.764467716217041
    8. '    
' → logprob: -4.139467716217041
    9. ' ' → logprob: -4.889467716217041
    10. 'horizontal' → logprob: -5.389467716217041

Token 49: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.047169655561447144
    2. ' if' → logprob: -3.6721696853637695
    3. 'vertical' → logprob: -4.7971696853637695
    4. 'for' → logprob: -5.4221696853637695
    5. '   ' → logprob: -5.9221696853637695
    6. 'i' → logprob: -6.5471696853637695
    7. ' ' → logprob: -6.9221696853637695
    8. 'horizontal' → logprob: -7.0471696853637695
    9. '    ' → logprob: -8.17216968536377
    10. ' for' → logprob: -8.42216968536377

Token 50: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.2810911238193512
    2. ' B' → logprob: -1.9060910940170288
    3. ' C' → logprob: -3.1560912132263184
    4. 'A' → logprob: -3.2810912132263184
    5. 'B' → logprob: -4.406091213226318
    6. 'C' → logprob: -5.656091213226318
    7. ' ' → logprob: -7.781091213226318
    8. ' D' → logprob: -10.84359073638916
    9. ' not' → logprob: -11.53109073638916
    10. '  ' → logprob: -11.84359073638916

Token 51: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.043931230902671814
    2. '>' → logprob: -4.293931007385254
    3. '<=' → logprob: -4.418931007385254
    4. ' ==' → logprob: -4.543931007385254
    5. '<' → logprob: -5.418931007385254
    6. '=' → logprob: -7.043931007385254
    7. '>=' → logprob: -8.043931007385254
    8. ' >' → logprob: -8.293931007385254
    9. '+' → logprob: -8.793931007385254
    10. ':' → logprob: -9.043931007385254

Token 52: 'C' (ID: 34)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10198014974594116
    2. '1' → logprob: -2.351980209350586
    3. ' ' → logprob: -7.101980209350586
    4. 'B' → logprob: -7.976980209350586
    5. 'C' → logprob: -8.101980209350586
    6. '2' → logprob: -8.476980209350586
    7. ''' → logprob: -10.976980209350586
    8. 'V' → logprob: -11.726980209350586
    9. 'vertical' → logprob: -11.789480209350586
    10. ''C' → logprob: -11.976980209350586

Token 53: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08755844831466675
    2. ' and' → logprob: -2.5875585079193115
    3. '==' → logprob: -5.337558269500732
    4. 'and' → logprob: -6.212558269500732
    5. ' :' → logprob: -7.837558269500732
    6. '=' → logprob: -7.837558269500732
    7. ' ==' → logprob: -8.33755874633789
    8. '>' → logprob: -8.71255874633789
    9. ' or' → logprob: -9.33755874633789
    10. '   ' → logprob: -9.33755874633789

Token 54: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8208760023117065
    2. 'vertical' → logprob: -1.1958760023117065
    3. ' vertical' → logprob: -1.6958760023117065
    4. '   ' → logprob: -3.070876121520996
    5. 'horizontal' → logprob: -4.320876121520996
    6. ' if' → logprob: -5.070876121520996
    7. ' horizontal' → logprob: -5.945876121520996
    8. '    ' → logprob: -6.695876121520996
    9. 'if' → logprob: -7.070876121520996
    10. ':' → logprob: -7.445876121520996

Token 55: ' vertical' (ID: 17679)
  Prédit: 'vertical'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertical' (adapté à ' vertical') → logprob: -0.20737753808498383
    2. ' vertical' → logprob: -2.2073774337768555
    3. 'horizontal' → logprob: -2.7073774337768555
    4. ' horizontal' → logprob: -5.0823774337768555
    5. '   ' → logprob: -6.3323774337768555
    6. 'if' → logprob: -6.5823774337768555
    7. ' if' → logprob: -7.2073774337768555
    8. 'vert' → logprob: -9.832377433776855
    9. '```' → logprob: -9.832377433776855
    10. 'for' → logprob: -9.957377433776855

Token 56: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -7.822646693966817e-06
    2. '.' → logprob: -12.125007629394531
    3. '.update' → logprob: -13.250007629394531
    4. ' .' → logprob: -15.250007629394531
    5. 'add' → logprob: -16.50000762939453
    6. '.append' → logprob: -16.50000762939453
    7. '.setdefault' → logprob: -16.50000762939453
    8. '.remove' → logprob: -17.25000762939453
    9. '.dis' → logprob: -17.75000762939453
    10. '.ad' → logprob: -18.12500762939453

Token 57: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.009801777079701424
    2. '(' → logprob: -4.634801864624023
    3. '(B' → logprob: -10.384801864624023
    4. '((' → logprob: -12.009801864624023
    5. '(C' → logprob: -12.884801864624023
    6. '(
' → logprob: -13.259801864624023
    7. '(a' → logprob: -13.759801864624023
    8. '(int' → logprob: -13.759801864624023
    9. '(abs' → logprob: -15.009801864624023
    10. '(D' → logprob: -15.134801864624023

Token 58: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007392307161353528
    2. ')
' → logprob: -7.250739097595215
    3. ' )' → logprob: -10.625739097595215
    4. ')

' → logprob: -13.750739097595215
    5. ')
' → logprob: -14.000739097595215
    6. '   ' → logprob: -14.125739097595215
    7. '<|end|>' → logprob: -14.750739097595215
    8. ')#' → logprob: -15.125739097595215
    9. '+' → logprob: -15.375739097595215
    10. ' ' → logprob: -15.625739097595215

Token 59: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2954830527305603
    2. 'else' → logprob: -1.545483112335205
    3. ' else' → logprob: -3.545483112335205
    4. 'elif' → logprob: -4.795483112335205
    5. '<|end|>' → logprob: -5.795483112335205
    6. ' elif' → logprob: -6.795483112335205
    7. '	else' → logprob: -8.045482635498047
    8. ' ' → logprob: -8.420482635498047
    9. ')' → logprob: -8.545482635498047
    10. '	elif' → logprob: -8.795482635498047

Token 60: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.3746868669986725
    2. '   ' → logprob: -1.37468683719635
    3. ' else' → logprob: -2.9996869564056396
    4. 'elif' → logprob: -4.9996867179870605
    5. ' elif' → logprob: -6.8746867179870605
    6. 'if' → logprob: -7.3746867179870605
    7. '<|end|>' → logprob: -7.7496867179870605
    8. '	else' → logprob: -8.249687194824219
    9. ' if' → logprob: -8.999687194824219
    10. ' ' → logprob: -8.999687194824219

Token 61: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007699372246861458
    2. ':
' → logprob: -5.132699489593506
    3. 'horizontal' → logprob: -7.007699489593506
    4. '   ' → logprob: -7.632699489593506
    5. ' horizontal' → logprob: -8.382699012756348
    6. '       ' → logprob: -10.882699012756348
    7. '    ' → logprob: -10.882699012756348
    8. 'orizontal' → logprob: -11.132699012756348
    9. '>' → logprob: -11.507699012756348
    10. ':

' → logprob: -11.507699012756348

Token 62: '       ' (ID: 309)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'horizontal' → logprob: -0.14135262370109558
    2. '       ' → logprob: -2.266352653503418
    3. ' horizontal' → logprob: -4.266352653503418
    4. '   ' → logprob: -4.266352653503418
    5. '.horizontal' → logprob: -11.016352653503418
    6. '(horizontal' → logprob: -11.391352653503418
    7. ' ' → logprob: -12.141352653503418
    8. '```' → logprob: -12.141352653503418
    9. '_horizontal' → logprob: -12.266352653503418
    10. '-horizontal' → logprob: -12.266352653503418

Token 63: ' horizontal' (ID: 25511)
  Prédit: 'horizontal'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'horizontal' (adapté à ' horizontal') → logprob: -0.00016277639952022582
    2. ' horizontal' → logprob: -8.750163078308105
    3. 'vertical' → logprob: -12.625163078308105
    4. '.horizontal' → logprob: -15.125163078308105
    5. '   ' → logprob: -15.250163078308105
    6. 'orizontal' → logprob: -16.00016212463379
    7. 'Horizontal' → logprob: -16.12516212463379
    8. '-horizontal' → logprob: -16.87516212463379
    9. '_horizontal' → logprob: -16.87516212463379
    10. '(horizontal' → logprob: -17.00016212463379

Token 64: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0036100437864661217
    2. '.' → logprob: -5.628610134124756
    3. '.update' → logprob: -12.378609657287598
    4. 'add' → logprob: -13.253609657287598
    5. '.setdefault' → logprob: -13.503609657287598
    6. ' .' → logprob: -13.878609657287598
    7. '<|end|>' → logprob: -14.628609657287598
    8. ').' → logprob: -14.878609657287598
    9. '`.' → logprob: -15.878609657287598
    10. '>.' → logprob: -16.128610610961914

Token 65: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.00023810577113181353
    2. '(D' → logprob: -8.375238418579102
    3. '(C' → logprob: -12.625238418579102
    4. '(' → logprob: -12.750238418579102
    5. ' (' → logprob: -14.250238418579102
    6. '(A' → logprob: -15.125238418579102
    7. '((' → logprob: -16.3752384185791
    8. 'B' → logprob: -16.6252384185791
    9. '   ' → logprob: -16.6252384185791
    10. '(int' → logprob: -17.5002384185791

Token 66: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4259644558478612e-05
    2. ' )' → logprob: -11.500014305114746
    3. ')
' → logprob: -12.625014305114746
    4. '))' → logprob: -15.125014305114746
    5. ')#' → logprob: -16.50001335144043
    6. '   ' → logprob: -16.62501335144043
    7. ')}' → logprob: -17.00001335144043
    8. ')return' → logprob: -17.00001335144043
    9. '())' → logprob: -17.12501335144043
    10. ')

' → logprob: -17.12501335144043

Token 67: 'print' (ID: 1598)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5982896089553833
    2. 'print' → logprob: -1.2232896089553833
    3. ')' → logprob: -3.3482894897460938
    4. '<|end|>' → logprob: -3.5982894897460938
    5. 'max' → logprob: -3.8482894897460938
    6. '```' → logprob: -4.348289489746094
    7. 'vertical' → logprob: -4.473289489746094
    8. 'x' → logprob: -5.098289489746094
    9. '#print' → logprob: -5.598289489746094
    10. '.' → logprob: -5.723289489746094

Token 68: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17246921360492706
    2. '(max' → logprob: -1.9224692583084106
    3. '(len' → logprob: -4.672469139099121
    4. '()' → logprob: -6.797469139099121
    5. '(min' → logprob: -7.172469139099121
    6. 'max' → logprob: -7.672469139099121
    7. '((' → logprob: -8.172469139099121
    8. '('' → logprob: -9.547469139099121
    9. 'len' → logprob: -10.547469139099121
    10. '(sum' → logprob: -10.797469139099121

Token 69: 'len' (ID: 3303)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.04670684039592743
    2. '(max' → logprob: -3.5467069149017334
    3. ' max' → logprob: -4.296706676483154
    4. 'W' → logprob: -5.921706676483154
    5. 'min' → logprob: -8.921707153320312
    6. ' W' → logprob: -9.421707153320312
    7. 'vertical' → logprob: -9.421707153320312
    8. 'len' → logprob: -10.171707153320312
    9. 'w' → logprob: -10.296707153320312
    10. ' (' → logprob: -10.546707153320312

Token 70: '(vertical' (ID: 154834)
  Prédit: '(vertical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vertical' → logprob: -0.002093399642035365
    2. '(' → logprob: -6.377093315124512
    3. '(horizontal' → logprob: -8.002093315124512
    4. ' (' → logprob: -10.377093315124512
    5. 'vertical' → logprob: -10.877093315124512
    6. ')' → logprob: -13.127093315124512
    7. ' vertical' → logprob: -13.752093315124512
    8. ')(' → logprob: -14.252093315124512
    9. ' ' → logprob: -14.627093315124512
    10. ' )' → logprob: -15.002093315124512

Token 71: ')-' (ID: 14080)
  Prédit: ')-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')-' → logprob: -0.06443479657173157
    2. ')' → logprob: -3.314434766769409
    3. '-' → logprob: -3.689434766769409
    4. ' )' → logprob: -7.689435005187988
    5. ' -' → logprob: -8.189435005187988
    6. '-)' → logprob: -8.439435005187988
    7. '))' → logprob: -10.564435005187988
    8. ' ' → logprob: -10.564435005187988
    9. ')*' → logprob: -11.439435005187988
    10. ')**' → logprob: -11.689435005187988

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.763666947837919e-05
    2. ' ' → logprob: -10.00004768371582
    3. ')' → logprob: -13.25004768371582
    4. '１' → logprob: -16.37504768371582
    5. '

' → logprob: -16.37504768371582
    6. '```' → logprob: -16.75004768371582
    7. '<|end|>' → logprob: -17.00004768371582
    8. '2' → logprob: -17.00004768371582
    9. '-' → logprob: -17.12504768371582
    10. '۱' → logprob: -17.37504768371582

Token 73: ')*(' (ID: 44406)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.42055967450141907
    2. ')*(' → logprob: -1.7955596446990967
    3. ')*' → logprob: -2.1705596446990967
    4. ')' → logprob: -2.9205596446990967
    5. '*(' → logprob: -5.045559883117676
    6. ' *' → logprob: -6.170559883117676
    7. '*)' → logprob: -7.545559883117676
    8. ' )' → logprob: -9.295559883117676
    9. '*
' → logprob: -10.295559883117676
    10. '*

' → logprob: -10.295559883117676

Token 74: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00011331788846291602
    2. '(len' → logprob: -9.250113487243652
    3. ' len' → logprob: -11.000113487243652
    4. '[len' → logprob: -16.000112533569336
    5. '=len' → logprob: -16.125112533569336
    6. '<len' → logprob: -16.750112533569336
    7. '	len' → logprob: -17.250112533569336
    8. 'length' → logprob: -17.875112533569336
    9. '   ' → logprob: -18.125112533569336
    10. ',len' → logprob: -18.500112533569336

Token 75: '(horizontal' (ID: 106641)
  Prédit: '(horizontal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(horizontal' → logprob: -0.00019328886992298067
    2. '(h' → logprob: -9.25019359588623
    3. 'horizontal' → logprob: -9.75019359588623
    4. '(' → logprob: -10.25019359588623
    5. '(vertical' → logprob: -13.12519359588623
    6. '-horizontal' → logprob: -14.37519359588623
    7. ' horizontal' → logprob: -15.00019359588623
    8. '.horizontal' → logprob: -15.75019359588623
    9. '_horizontal' → logprob: -15.75019359588623
    10. 'orizontal' → logprob: -16.000192642211914

Token 76: ')-' (ID: 14080)
  Prédit: ')-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')-' → logprob: -0.012637023814022541
    2. ')' → logprob: -4.387637138366699
    3. '-' → logprob: -9.3876371383667
    4. ')-(' → logprob: -11.5126371383667
    5. ' )' → logprob: -11.6376371383667
    6. '))' → logprob: -12.0126371383667
    7. '))-' → logprob: -12.2626371383667
    8. '-)' → logprob: -12.6376371383667
    9. '1' → logprob: -13.5126371383667
    10. ' -' → logprob: -13.5126371383667

Token 77: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.845798710244708e-05
    2. ' ' → logprob: -10.250038146972656
    3. ')' → logprob: -12.875038146972656
    4. '2' → logprob: -15.000038146972656
    5. '<|end|>' → logprob: -17.000038146972656
    6. '   ' → logprob: -18.187538146972656
    7. '```' → logprob: -18.312538146972656
    8. '  ' → logprob: -18.687538146972656
    9. '-' → logprob: -18.812538146972656
    10. '
' → logprob: -18.812538146972656

Token 78: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011689399980241433
    2. '))' → logprob: -9.250117301940918
    3. ' )' → logprob: -10.875117301940918
    4. ')
' → logprob: -14.125117301940918
    5. '`)' → logprob: -15.375117301940918
    6. '*' → logprob: -15.500117301940918
    7. ')`' → logprob: -15.625117301940918
    8. ')))' → logprob: -16.0001163482666
    9. '*)' → logprob: -16.5001163482666
    10. ')**' → logprob: -17.1251163482666


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 76
Tokens correctement prédits (1ère position, stricte): 38
Tokens correctement prédits (1ère position, avec adaptation): 42
Tokens correctement prédits (top 10): 63
Précision stricte (1ère position): 50.00%
Précision adaptée (1ère position): 55.26%
Précision (top 10): 82.89%
================================================================================
