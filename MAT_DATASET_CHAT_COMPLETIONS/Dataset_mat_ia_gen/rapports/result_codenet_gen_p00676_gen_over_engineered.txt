================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:18
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math
from abc import ABC, abstractmethod
from typing import Tuple, Iterator, List


class Triangle(ABC):
    @abstractmethod
    def area(self) -> float:
        pass


class IsoscelesTriangle(Triangle):
    def __init__(self, base: float, side: float):
        self.base = base
        self.side = side

    def area(self) -> float:
        # Using Heron's formula
        s = (self.base + 2 * self.side) / 2
        area = math.sqrt(s * (s - self.base) * (s - self.side) * (s - self.side))
        return area


class ExtendedSkinAreaOptimizer:
    """
    This class models the original triangle ABC and the problem of
    adding slack length x on the two equal sides AC=BC, creating new triangles ADC and BEC
    on the outside of ABC, maximizing the total visible area M.
    """

    def __init__(self, a: float, l: float, x: float):
        self.a = a
        self.l = l
        self.x = x

    def original_area(self) -> float:
        """Area of original isosceles triangle ABC"""
        base = self.a
        side = self.l
        return IsoscelesTriangle(base, side).area()

    def max_extended_area(self) -> float:
        """
        Compute the maximum combined area M = area(ABC) + area(ADC) + area(BEC)
        according to the problem constraints.
        """

        # By problem geometry, the maximum area is achieved when
        # the slack length x is split equally on both sides AC and BC,
        # and the new triangles ADC and BEC are "folded outwards" symmetrically
        # forming a larger isosceles figure with the total length l + x on each side
        # The known formula from analysis:
        # max area = (a/4)* sqrt(4(l+x)^2 - a^2)

        extended_side = self.l + self.x
        # Check for numerical correctness, 4(side)^2 - base^2 must be >= 0
        val = 4 * (extended_side ** 2) - (self.a ** 2)
        if val < 0:
            val = 0

        max_area = (self.a / 4) * math.sqrt(val)
        return max_area


class InputParser:
    """
    Parses input lines of format "a l x" until EOF, yielding tuples of (a, l, x)
    """

    def __init__(self, stream):
        self.stream = stream

    def parse(self) -> Iterator[Tuple[int, int, int]]:
        for line in self.stream:
            line = line.strip()
            if not line:
                continue
            parts = line.split()
            if len(parts) != 3:
                continue
            try:
                a, l, x = map(int, parts)
                yield a, l, x
            except Exception:
                continue


class AreaPrinter:
    """
    Responsible for output formatting of the area result
    """

    @staticmethod
    def print_area(area: float):
        # Print with precision such that difference <= 10^-5
        print(f"{area:.10f}")


def main():
    parser = InputParser(sys.stdin)
    printer = AreaPrinter()

    for a, l, x in parser.parse():
        optimizer = ExtendedSkinAreaOptimizer(a, l, x)
        max_area = optimizer.max_extended_area()
        printer.print_area(max_area)


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29739612340927124
    2. '\n' → logprob: -1.547396183013916
    3. '<|end|>' → logprob: -3.797396183013916
    4. '\' → logprob: -4.922396183013916
    5. 'newline' → logprob: -5.672396183013916
    6. 'import' → logprob: -5.672396183013916
    7. '<|end|>' → logprob: -6.047396183013916
    8. '
' → logprob: -6.922396183013916
    9. '```' → logprob: -6.922396183013916
    10. '' → logprob: -7.547396183013916

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -7.755678961984813e-05
    2. 'os' → logprob: -9.500077247619629
    3. ' math' → logprob: -13.625077247619629
    4. ' re' → logprob: -14.500077247619629
    5. ' json' → logprob: -15.125077247619629
    6. '"os' → logprob: -15.375077247619629
    7. '_os' → logprob: -16.125078201293945
    8. ' io' → logprob: -16.375078201293945
    9. ' ' → logprob: -16.375078201293945
    10. '	os' → logprob: -17.000078201293945

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10232575237751007
    2. '\' → logprob: -3.602325677871704
    3. '\n' → logprob: -3.977325677871704
    4. 'import' → logprob: -4.352325916290283
    5. '<|end|>' → logprob: -4.602325916290283
    6. '```' → logprob: -4.727325916290283
    7. '
' → logprob: -4.852325916290283
    8. '

' → logprob: -5.477325916290283
    9. '<|end|>' → logprob: -6.602325916290283
    10. '' → logprob: -6.602325916290283

Token 6: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.1316072940826416
    2. '\n' → logprob: -1.6316072940826416
    3. '.' → logprob: -2.0066072940826416
    4. '
' → logprob: -2.0066072940826416
    5. '```' → logprob: -2.5066072940826416
    6. '\' → logprob: -3.1316072940826416
    7. '<|end|>' → logprob: -3.3816072940826416
    8. '

' → logprob: -3.6316072940826416
    9. ',' → logprob: -4.3816070556640625
    10. '<|end|>' → logprob: -5.6316070556640625

Token 7: ' abc' (ID: 75094)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.6536146402359009
    2. ' os' → logprob: -0.7786146402359009
    3. 'collections' → logprob: -4.903614521026611
    4. 'os' → logprob: -5.278614521026611
    5. ' datetime' → logprob: -5.778614521026611
    6. ' itertools' → logprob: -6.653614521026611
    7. ' typing' → logprob: -6.778614521026611
    8. ' numpy' → logprob: -7.528614521026611
    9. ' statistics' → logprob: -7.653614521026611
    10. ' math' → logprob: -7.778614521026611

Token 8: ' import' (ID: 1588)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.40999874472618103
    2. ' import' → logprob: -1.2849987745285034
    3. 'import' → logprob: -3.159998655319214
    4. ' .' → logprob: -4.159998893737793
    5. ' ' → logprob: -7.159998893737793
    6. '	import' → logprob: -7.909998893737793
    7. '.import' → logprob: -8.284998893737793
    8. 'space' → logprob: -9.659998893737793
    9. '.abstract' → logprob: -10.159998893737793
    10. '<|end|>' → logprob: -10.284998893737793

Token 9: ' ABC' (ID: 33047)
  Prédit: ' ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.0021591836120933294
    2. 'ABC' → logprob: -6.752159118652344
    3. ' A' → logprob: -7.002159118652344
    4. ' ' → logprob: -10.002159118652344
    5. ' ' → logprob: -11.627159118652344
    6. ' abstract' → logprob: -11.627159118652344
    7. 'abstract' → logprob: -12.252159118652344
    8. ' AB' → logprob: -12.627159118652344
    9. 'abc' → logprob: -13.002159118652344
    10. '	' → logprob: -14.002159118652344

Token 10: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04356827214360237
    2. 'import' → logprob: -3.5435683727264404
    3. '<|end|>' → logprob: -5.418568134307861
    4. ' ' → logprob: -5.668568134307861
    5. ' import' → logprob: -6.168568134307861
    6. ',' → logprob: -6.168568134307861
    7. '```' → logprob: -7.918568134307861
    8. ' .' → logprob: -8.16856861114502
    9. '.A' → logprob: -8.66856861114502
    10. '.I' → logprob: -9.04356861114502

Token 11: ' abstract' (ID: 13004)
  Prédit: 'abstract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.10020699352025986
    2. ' abstract' → logprob: -2.3502070903778076
    3. ' ABC' → logprob: -15.975207328796387
    4. '.abstract' → logprob: -16.97520637512207
    5. ' ' → logprob: -17.10020637512207
    6. 'Abstract' → logprob: -17.60020637512207
    7. '```' → logprob: -17.72520637512207
    8. 'ABC' → logprob: -18.22520637512207
    9. 'abc' → logprob: -18.72520637512207
    10. ' abstr' → logprob: -19.85020637512207

Token 12: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.000824156915768981
    2. 'classmethod' → logprob: -7.250823974609375
    3. 'class' → logprob: -9.500823974609375
    4. 'staticmethod' → logprob: -11.625823974609375
    5. '_method' → logprob: -11.875823974609375
    6. 'meth' → logprob: -12.000823974609375
    7. 'm' → logprob: -12.625823974609375
    8. '	method' → logprob: -12.750823974609375
    9. 'base' → logprob: -12.750823974609375
    10. '<|end|>' → logprob: -13.000823974609375

Token 13: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.035874295979738235
    2. '
' → logprob: -3.910874366760254
    3. 'class' → logprob: -4.285874366760254
    4. '```' → logprob: -7.285874366760254
    5. '


' → logprob: -8.535874366760254
    6. '\n' → logprob: -8.910874366760254
    7. ' class' → logprob: -9.160874366760254
    8. '' → logprob: -9.160874366760254
    9. ' 

' → logprob: -10.035874366760254
    10. '

' → logprob: -10.160874366760254

Token 14: 'from' (ID: 2845)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.47515958547592163
    2. '
' → logprob: -1.7251596450805664
    3. '

' → logprob: -1.7251596450805664
    4. '```' → logprob: -4.100159645080566
    5. '' → logprob: -6.600159645080566
    6. '\n' → logprob: -6.725159645080566
    7. ' class' → logprob: -7.100159645080566
    8. '
' → logprob: -7.725159645080566
    9. '``' → logprob: -8.225159645080566
    10. 'import' → logprob: -8.350159645080566

Token 15: ' typing' (ID: 34152)
  Prédit: ' typing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.39119580388069153
    2. ' collections' → logprob: -2.016195774078369
    3. 'typing' → logprob: -2.266195774078369
    4. 'collections' → logprob: -2.516195774078369
    5. ' dat' → logprob: -6.266195774078369
    6. ' enum' → logprob: -6.641195774078369
    7. 'dat' → logprob: -8.016196250915527
    8. ' ' → logprob: -8.391196250915527
    9. ' random' → logprob: -8.516196250915527
    10. ' pathlib' → logprob: -8.516196250915527

Token 16: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.026496410369873047
    2. 'import' → logprob: -3.651496410369873
    3. ' ' → logprob: -9.526496887207031
    4. '.' → logprob: -10.026496887207031
    5. '<|end|>' → logprob: -10.401496887207031
    6. '	import' → logprob: -10.776496887207031
    7. ' as' → logprob: -12.276496887207031
    8. '_import' → logprob: -12.401496887207031
    9. ' space' → logprob: -13.151496887207031
    10. ',' → logprob: -13.276496887207031

Token 17: ' Tuple' (ID: 50841)
  Prédit: ' Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Any' → logprob: -0.7654778957366943
    2. ' List' → logprob: -1.0154778957366943
    3. ' Union' → logprob: -1.8904778957366943
    4. 'Any' → logprob: -4.765478134155273
    5. ' ' → logprob: -5.265478134155273
    6. ' Optional' → logprob: -5.890478134155273
    7. ' Iterable' → logprob: -6.265478134155273
    8. 'List' → logprob: -7.140478134155273
    9. ' Callable' → logprob: -7.265478134155273
    10. 'Union' → logprob: -8.015478134155273

Token 18: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.23583246767520905
    2. 'class' → logprob: -1.7358324527740479
    3. '
' → logprob: -3.485832452774048
    4. '```' → logprob: -6.735832691192627
    5. '\n' → logprob: -7.485832691192627
    6. '


' → logprob: -7.610832691192627
    7. ' class' → logprob: -7.735832691192627
    8. 'import' → logprob: -8.235832214355469
    9. '<class' → logprob: -10.110832214355469
    10. '<|end|>' → logprob: -10.485832214355469

Token 19: ' Iterator' (ID: 41994)
  Prédit: ' List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' List' → logprob: -1.316558599472046
    2. ' Union' → logprob: -1.566558599472046
    3. 'Any' → logprob: -2.066558599472046
    4. 'Union' → logprob: -2.066558599472046
    5. 'List' → logprob: -2.316558599472046
    6. ' Any' → logprob: -2.441558599472046
    7. ' Optional' → logprob: -2.941558599472046
    8. 'Optional' → logprob: -3.816558599472046
    9. ' Callable' → logprob: -5.441558837890625
    10. 'Callable' → logprob: -6.441558837890625

Token 20: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.19416169822216034
    2. 'class' → logprob: -1.8191616535186768
    3. '
' → logprob: -4.319161891937256
    4. '


' → logprob: -7.944161891937256
    5. '```' → logprob: -7.944161891937256
    6. ' class' → logprob: -8.569161415100098
    7. '<class' → logprob: -10.819161415100098
    8. 'import' → logprob: -11.319161415100098
    9. '\n' → logprob: -11.819161415100098
    10. '
' → logprob: -11.819161415100098

Token 21: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.5051011443138123
    2. ' Iterable' → logprob: -2.130101203918457
    3. ' Optional' → logprob: -2.255101203918457
    4. 'List' → logprob: -3.005101203918457
    5. 'Iterable' → logprob: -3.130101203918457
    6. ' Union' → logprob: -4.130101203918457
    7. ' Callable' → logprob: -4.255101203918457
    8. ' Any' → logprob: -4.380101203918457
    9. 'Optional' → logprob: -4.755101203918457
    10. ' Generator' → logprob: -5.005101203918457

Token 22: '


' (ID: 2499)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.7181975841522217
    2. '

' → logprob: -0.8431975841522217
    3. '
' → logprob: -2.8431975841522217
    4. '```' → logprob: -3.8431975841522217
    5. '\n' → logprob: -7.593197822570801
    6. '


' → logprob: -7.718197822570801
    7. '
' → logprob: -7.843197822570801
    8. ' class' → logprob: -8.2181978225708
    9. '``' → logprob: -8.2181978225708
    10. 'import' → logprob: -8.8431978225708

Token 23: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.25219452381134033
    2. 'c' → logprob: -1.5021945238113403
    3. '
' → logprob: -9.25219440460205
    4. 'C' → logprob: -10.37719440460205
    5. 'cla' → logprob: -10.50219440460205
    6. 'clas' → logprob: -10.62719440460205
    7. '@' → logprob: -11.12719440460205
    8. ' class' → logprob: -11.12719440460205
    9. '#' → logprob: -11.12719440460205
    10. 'cl' → logprob: -11.25219440460205

Token 24: ' Triangle' (ID: 68264)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.004492546431720257
    2. ' Shape' → logprob: -6.37949275970459
    3. ' Abstract' → logprob: -7.25449275970459
    4. ' Space' → logprob: -7.87949275970459
    5. ' Geometry' → logprob: -8.00449275970459
    6. ' Basic' → logprob: -8.62949275970459
    7. ' Processor' → logprob: -9.00449275970459
    8. ' Shapes' → logprob: -9.00449275970459
    9. ' Calculator' → logprob: -9.12949275970459
    10. ' Serializer' → logprob: -9.50449275970459

Token 25: '(' (ID: 7)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6345956921577454
    2. '(' → logprob: -0.7595956921577454
    3. '(Abstract' → logprob: -6.50959587097168
    4. ' :' → logprob: -8.00959587097168
    5. '):' → logprob: -10.25959587097168
    6. ' (' → logprob: -10.25959587097168
    7. '():' → logprob: -10.25959587097168
    8. ':
' → logprob: -10.75959587097168
    9. ':**' → logprob: -10.88459587097168
    10. '```' → logprob: -12.50959587097168

Token 26: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.3951120376586914
    2. ' ABC' → logprob: -1.1451120376586914
    3. '):' → logprob: -5.020112037658691
    4. ')' → logprob: -7.145112037658691
    5. ' ):' → logprob: -7.770112037658691
    6. 'Abstract' → logprob: -9.145112037658691
    7. ' )' → logprob: -9.520112037658691
    8. 'abc' → logprob: -10.270112037658691
    9. ' ' → logprob: -10.395112037658691
    10. '):
' → logprob: -10.520112037658691

Token 27: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00015419373812619597
    2. ':' → logprob: -9.125154495239258
    3. ')' → logprob: -10.375154495239258
    4. ',' → logprob: -12.125154495239258
    5. ' ):' → logprob: -12.125154495239258
    6. '):
' → logprob: -12.875154495239258
    7. '):
' → logprob: -15.750154495239258
    8. '():' → logprob: -16.125154495239258
    9. '):

' → logprob: -16.375154495239258
    10. '>:' → logprob: -16.625154495239258

Token 28: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008987982757389545
    2. '):' → logprob: -5.133987903594971
    3. '   ' → logprob: -6.008987903594971
    4. ' :' → logprob: -8.008988380432129
    5. ':
' → logprob: -9.508988380432129
    6. ')' → logprob: -9.508988380432129
    7. '(' → logprob: -10.383988380432129
    8. ',' → logprob: -10.883988380432129
    9. '):
' → logprob: -10.883988380432129
    10. '():' → logprob: -11.133988380432129

Token 29: ' @' (ID: 759)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.9948104619979858
    2. 'def' → logprob: -1.4948104619979858
    3. '   ' → logprob: -1.7448104619979858
    4. '    ' → logprob: -1.7448104619979858
    5. ' ' → logprob: -3.8698105812072754
    6. '    
' → logprob: -3.9948105812072754
    7. ' 
' → logprob: -4.244810581207275
    8. '     
' → logprob: -6.994810581207275
    9. '  ' → logprob: -8.119810104370117
    10. '   
' → logprob: -8.369810104370117

Token 30: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.0003790760529227555
    2. 'property' → logprob: -8.000378608703613
    3. 'staticmethod' → logprob: -10.500378608703613
    4. 'classmethod' → logprob: -12.125378608703613
    5. 'ab' → logprob: -12.250378608703613
    6. 'abs' → logprob: -12.500378608703613
    7. 'abc' → logprob: -13.375378608703613
    8. ' abstract' → logprob: -14.625378608703613
    9. '.abstract' → logprob: -17.62537956237793
    10. 'dat' → logprob: -17.75037956237793

Token 31: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -1.5213274309644476e-05
    2. 'classmethod' → logprob: -11.625015258789062
    3. 'meth' → logprob: -12.625015258789062
    4. '_method' → logprob: -13.000015258789062
    5. 'staticmethod' → logprob: -15.125015258789062
    6. 'property' → logprob: -15.875015258789062
    7. '.method' → logprob: -17.250015258789062
    8. 'ethod' → logprob: -17.375015258789062
    9. 'Method' → logprob: -17.500015258789062
    10. ' method' → logprob: -17.875015258789062

Token 32: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3605566620826721
    2. '(' → logprob: -1.4855566024780273
    3. '
' → logprob: -3.2355566024780273
    4. ' def' → logprob: -3.6105566024780273
    5. 'method' → logprob: -5.360556602478027
    6. ')' → logprob: -6.735556602478027
    7. ' ' → logprob: -6.735556602478027
    8. '\' → logprob: -6.985556602478027
    9. '    
' → logprob: -7.985556602478027
    10. '(
' → logprob: -8.610556602478027

Token 33: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7122496366500854
    2. ' def' → logprob: -1.4622496366500854
    3. '(' → logprob: -1.5872496366500854
    4. '
' → logprob: -2.962249755859375
    5. '    
' → logprob: -5.087249755859375
    6. '(
' → logprob: -5.462249755859375
    7. '(def' → logprob: -6.087249755859375
    8. 'method' → logprob: -6.212249755859375
    9. '   
' → logprob: -6.837249755859375
    10. '   ' → logprob: -6.962249755859375

Token 34: ' def' (ID: 1056)
  Prédit: 'method'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.526763916015625
    2. 'def' (adapté à ' def') → logprob: -0.901763916015625
    3. 'classmethod' → logprob: -6.276763916015625
    4. '
' → logprob: -7.401763916015625
    5. 'property' → logprob: -8.151763916015625
    6. 'meth' → logprob: -8.151763916015625
    7. '```' → logprob: -8.651763916015625
    8. 'abstract' → logprob: -8.901763916015625
    9. 's' → logprob: -9.526763916015625
    10. 'staticmethod' → logprob: -9.526763916015625

Token 35: ' area' (ID: 3624)
  Prédit: ' area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.21869772672653198
    2. ' calculate' → logprob: -1.7186977863311768
    3. ' get' → logprob: -4.968697547912598
    4. 'area' → logprob: -5.468697547912598
    5. ' ' → logprob: -5.968697547912598
    6. ' compute' → logprob: -6.468697547912598
    7. ' side' → logprob: -7.593697547912598
    8. ' sides' → logprob: -8.343697547912598
    9. 'calculate' → logprob: -8.593697547912598
    10. ' __' → logprob: -8.718697547912598

Token 36: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06215791776776314
    2. '(' → logprob: -2.8121578693389893
    3. '(s' → logprob: -9.31215763092041
    4. 'self' → logprob: -10.06215763092041
    5. '(
' → logprob: -10.93715763092041
    6. 's' → logprob: -11.31215763092041
    7. ' (' → logprob: -12.18715763092041
    8. ')' → logprob: -12.31215763092041
    9. '(

' → logprob: -12.31215763092041
    10. '<|end|>' → logprob: -12.81215763092041

Token 37: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03409582003951073
    2. '):' → logprob: -3.4090957641601562
    3. 'self' → logprob: -7.784095764160156
    4. ')->' → logprob: -10.534095764160156
    5. ':' → logprob: -13.409095764160156
    6. '(self' → logprob: -13.659095764160156
    7. ' )' → logprob: -13.784095764160156
    8. '),' → logprob: -14.534095764160156
    9. ' ):' → logprob: -14.534095764160156
    10. '):
' → logprob: -14.659095764160156

Token 38: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.18649126589298248
    2. '(' → logprob: -2.6864912509918213
    3. ')' → logprob: -3.1864912509918213
    4. '->' → logprob: -3.4364912509918213
    5. ' ->' → logprob: -4.1864914894104
    6. ':' → logprob: -4.9364914894104
    7. 'self' → logprob: -6.3114914894104
    8. '():' → logprob: -6.5614914894104
    9. ')->' → logprob: -6.9364914894104
    10. '()' → logprob: -7.8114914894104

Token 39: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.0012178556062281132
    2. 'float' → logprob: -6.751217842102051
    3. ' ' → logprob: -10.00121784210205
    4. ' int' → logprob: -14.00121784210205
    5. '	float' → logprob: -14.12621784210205
    6. ' ' → logprob: -15.62621784210205
    7. ' None' → logprob: -16.001218795776367
    8. '=float' → logprob: -16.126218795776367
    9. '<float' → logprob: -16.251218795776367
    10. '  ' → logprob: -16.376218795776367

Token 40: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002378023462370038
    2. '<|end|>' → logprob: -6.252377986907959
    3. ':
' → logprob: -7.877377986907959
    4. ':return' → logprob: -10.377378463745117
    5. '<|end|>' → logprob: -11.502378463745117
    6. '
' → logprob: -11.627378463745117
    7. ':def' → logprob: -11.877378463745117
    8. '):' → logprob: -12.752378463745117
    9. '():' → logprob: -13.377378463745117
    10. ' :' → logprob: -13.377378463745117

Token 41: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.07536735385656357
    2. ' pass' → logprob: -2.8253674507141113
    3. '       ' → logprob: -4.325367450714111
    4. '   ' → logprob: -10.325366973876953
    5. '...' → logprob: -10.825366973876953
    6. 'raise' → logprob: -11.450366973876953
    7. '	pass' → logprob: -11.700366973876953
    8. 'return' → logprob: -13.200366973876953
    9. '    ' → logprob: -13.200366973876953
    10. ' raise' → logprob: -13.325366973876953

Token 43: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21957191824913025
    2. '

' → logprob: -2.219571828842163
    3. '<|end|>' → logprob: -2.969571828842163
    4. '    
' → logprob: -4.469572067260742
    5. '


' → logprob: -4.844572067260742
    6. '   ' → logprob: -5.219572067260742
    7. '\n' → logprob: -5.719572067260742
    8. ' 
' → logprob: -5.844572067260742
    9. '<|end|>' → logprob: -6.094572067260742
    10. '
    
' → logprob: -7.094572067260742

Token 44: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6972723007202148
    2. 'class' → logprob: -0.6972723007202148
    3. '

' → logprob: -5.697272300720215
    4. '  
' → logprob: -8.822272300720215
    5. '    
' → logprob: -8.822272300720215
    6. ' class' → logprob: -8.947272300720215
    7. ' 
' → logprob: -8.947272300720215
    8. '


' → logprob: -9.197272300720215
    9. '<|end|>' → logprob: -10.572272300720215
    10. '   
' → logprob: -11.447272300720215

Token 45: ' Is' (ID: 2763)
  Prédit: ' Equ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Equ' → logprob: -0.02390344813466072
    2. ' Right' → logprob: -4.0239033699035645
    3. ' Triangle' → logprob: -6.0239033699035645
    4. ' Scal' → logprob: -6.2739033699035645
    5. 'Equ' → logprob: -6.6489033699035645
    6. ' Rectangle' → logprob: -10.523903846740723
    7. 'Right' → logprob: -10.648903846740723
    8. ' ' → logprob: -10.648903846740723
    9. ' Sc' → logprob: -11.523903846740723
    10. ' equ' → logprob: -11.898903846740723

Token 46: 'os' (ID: 365)
  Prédit: 'os'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.034286726266145706
    2. 'oc' → logprob: -3.4092867374420166
    3. 'o' → logprob: -7.9092864990234375
    4. 'Triangle' → logprob: -9.409286499023438
    5. 'osc' → logprob: -9.909286499023438
    6. 'ot' → logprob: -10.534286499023438
    7. 'cos' → logprob: -11.034286499023438
    8. '   ' → logprob: -11.034286499023438
    9. 'cel' → logprob: -11.034286499023438
    10. 'sc' → logprob: -11.284286499023438

Token 47: 'cel' (ID: 4610)
  Prédit: 'cel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cel' → logprob: -0.0003983760252594948
    2. 'c' → logprob: -8.375398635864258
    3. 'cele' → logprob: -9.500398635864258
    4. '```' → logprob: -11.125398635864258
    5. 'ce' → logprob: -11.375398635864258
    6. '_triangle' → logprob: -11.500398635864258
    7. '_' → logprob: -11.500398635864258
    8. 'sc' → logprob: -11.625398635864258
    9. '{' → logprob: -12.000398635864258
    10. '``' → logprob: -12.250398635864258

Token 48: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0007573349867016077
    2. 'eles' → logprob: -7.250757217407227
    3. 'eres' → logprob: -11.500757217407227
    4. 'e' → logprob: -11.625757217407227
    5. 'ele' → logprob: -12.250757217407227
    6. '{' → logprob: -12.500757217407227
    7. 'etric' → logprob: -13.000757217407227
    8. 'estr' → logprob: -13.125757217407227
    9. 'esc' → logprob: -13.500757217407227
    10. 'os' → logprob: -13.625757217407227

Token 49: 'Triangle' (ID: 62972)
  Prédit: 'Triangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Triangle' → logprob: -0.0019821643363684416
    2. '(' → logprob: -7.25198221206665
    3. ' ' → logprob: -7.25198221206665
    4. '(T' → logprob: -8.501981735229492
    5. 'Tri' → logprob: -8.876981735229492
    6. ' Triangle' → logprob: -9.626981735229492
    7. 'T' → logprob: -9.751981735229492
    8. 'Triangles' → logprob: -10.251981735229492
    9. '_triangle' → logprob: -10.501981735229492
    10. 'triangle' → logprob: -11.251981735229492

Token 50: '(T' (ID: 7014)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18168886005878448
    2. '(T' → logprob: -1.806688904762268
    3. ':' → logprob: -6.3066887855529785
    4. '```' → logprob: -10.931689262390137
    5. ' (' → logprob: -11.181689262390137
    6. ')' → logprob: -11.181689262390137
    7. '<|end|>' → logprob: -11.556689262390137
    8. '<T' → logprob: -11.806689262390137
    9. '(object' → logprob: -12.056689262390137
    10. '(Abstract' → logprob: -12.056689262390137

Token 51: 'riangle' (ID: 184880)
  Prédit: 'riangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'riangle' → logprob: -0.0023529299069195986
    2. 'ri' → logprob: -6.252352714538574
    3. 'ria' → logprob: -8.002352714538574
    4. 'rian' → logprob: -9.377352714538574
    5. 'rial' → logprob: -13.377352714538574
    6. 'riage' → logprob: -13.627352714538574
    7. 'r' → logprob: -14.502352714538574
    8. 'iangle' → logprob: -14.627352714538574
    9. ' ri' → logprob: -14.752352714538574
    10. 'rie' → logprob: -14.877352714538574

Token 52: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009771942859515548
    2. ',' → logprob: -7.750977039337158
    3. ')' → logprob: -8.250977516174316
    4. '):
' → logprob: -8.500977516174316
    5. ':' → logprob: -10.125977516174316
    6. '   ' → logprob: -10.625977516174316
    7. '<|end|>' → logprob: -11.875977516174316
    8. ' ):' → logprob: -12.375977516174316
    9. ']:' → logprob: -13.750977516174316
    10. '):

' → logprob: -13.875977516174316

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02193618193268776
    2. '    
' → logprob: -4.021936416625977
    3. ' def' → logprob: -6.771936416625977
    4. '
' → logprob: -7.146936416625977
    5. 'def' → logprob: -7.771936416625977
    6. '    ' → logprob: -8.146936416625977
    7. ':' → logprob: -8.146936416625977
    8. '  ' → logprob: -8.521936416625977
    9. '<|end|>' → logprob: -8.771936416625977
    10. '   
' → logprob: -9.021936416625977

Token 54: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.31883668899536133
    2. '   ' → logprob: -1.5688366889953613
    3. 'def' (adapté à ' def') → logprob: -3.0688366889953613
    4. '    ' → logprob: -4.443836688995361
    5. '    
' → logprob: -6.193836688995361
    6. ' ' → logprob: -6.318836688995361
    7. '(' → logprob: -7.318836688995361
    8. '  ' → logprob: -7.818836688995361
    9. ':' → logprob: -8.068836212158203
    10. '(s' → logprob: -8.568836212158203

Token 55: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0034734364598989487
    2. ' init' → logprob: -5.878473281860352
    3. ' _' → logprob: -7.878473281860352
    4. '_init' → logprob: -9.378473281860352
    5. ' ' → logprob: -9.753473281860352
    6. '__' → logprob: -10.003473281860352
    7. ' def' → logprob: -10.128473281860352
    8. '_' → logprob: -10.503473281860352
    9. 'init' → logprob: -11.128473281860352
    10. ' ' → logprob: -11.378473281860352

Token 56: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'ini' → logprob: -16.0
    3. 'in' → logprob: -18.625
    4. 'int' → logprob: -19.25
    5. ' init' → logprob: -19.25
    6. 'inite' → logprob: -19.375
    7. 'innit' → logprob: -20.75
    8. 'i' → logprob: -20.875
    9. '_init' → logprob: -21.375
    10. 'inti' → logprob: -21.375

Token 57: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.35457366704940796
    2. '(' → logprob: -1.4795737266540527
    3. '__(' → logprob: -2.8545737266540527
    4. ' (' → logprob: -4.979573726654053
    5. ')(' → logprob: -6.104573726654053
    6. '<|end|>' → logprob: -6.479573726654053
    7. 'self' → logprob: -7.229573726654053
    8. '_(' → logprob: -7.854573726654053
    9. '__(
' → logprob: -8.104573249816895
    10. ' ' → logprob: -8.604573249816895

Token 58: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.048597365617752075
    2. ' self' → logprob: -3.0485973358154297
    3. ' ' → logprob: -12.17359733581543
    4. 's' → logprob: -13.29859733581543
    5. '   ' → logprob: -13.79859733581543
    6. '	self' → logprob: -14.29859733581543
    7. 'base' → logprob: -14.79859733581543
    8. '       ' → logprob: -15.04859733581543
    9. ',' → logprob: -15.79859733581543
    10. ' base' → logprob: -15.92359733581543

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07900127023458481
    2. ' ,' → logprob: -2.5790011882781982
    3. ' ' → logprob: -9.454001426696777
    4. 'self' → logprob: -11.704001426696777
    5. ',length' → logprob: -11.954001426696777
    6. ' self' → logprob: -12.579001426696777
    7. ' )' → logprob: -12.954001426696777
    8. '_,' → logprob: -12.954001426696777
    9. '<|end|>' → logprob: -13.204001426696777
    10. ',height' → logprob: -13.579001426696777

Token 60: ' base' (ID: 3611)
  Prédit: ' side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' side' → logprob: -1.2748254537582397
    2. ' equal' → logprob: -1.2748254537582397
    3. 'self' → logprob: -1.6498254537582397
    4. ' self' → logprob: -1.7748254537582397
    5. ' base' → logprob: -3.3998255729675293
    6. ' ' → logprob: -3.6498255729675293
    7. 'equal' → logprob: -4.774825572967529
    8. ' a' → logprob: -5.149825572967529
    9. 'side' → logprob: -6.399825572967529
    10. 's' → logprob: -6.774825572967529

Token 61: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0028507597744464874
    2. ',' → logprob: -5.877850532531738
    3. ' :' → logprob: -10.502850532531738
    4. ' ,' → logprob: -11.502850532531738
    5. ':int' → logprob: -12.002850532531738
    6. '_length' → logprob: -14.377850532531738
    7. ' ' → logprob: -14.877850532531738
    8. ':length' → logprob: -15.252850532531738
    9. '   ' → logprob: -15.377850532531738
    10. ':,' → logprob: -15.752850532531738

Token 62: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.004657729994505644
    2. 'float' → logprob: -5.379657745361328
    3. ' int' → logprob: -10.379657745361328
    4. '=float' → logprob: -13.254657745361328
    5. ' ' → logprob: -13.629657745361328
    6. 'int' → logprob: -13.754657745361328
    7. ',float' → logprob: -14.129657745361328
    8. '	float' → logprob: -14.129657745361328
    9. '(float' → logprob: -15.004657745361328
    10. ')' → logprob: -15.379657745361328

Token 63: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.682846287731081e-05
    2. ' ,' → logprob: -9.625066757202148
    3. '‌,' → logprob: -15.375066757202148
    4. '   ' → logprob: -16.25006675720215
    5. '):' → logprob: -16.87506675720215
    6. ')' → logprob: -17.00006675720215
    7. ',b' → logprob: -17.00006675720215
    8. ',
' → logprob: -17.12506675720215
    9. ':' → logprob: -17.12506675720215
    10. ',length' → logprob: -17.50006675720215

Token 64: ' side' (ID: 4307)
  Prédit: ' equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' equal' → logprob: -0.21101996302604675
    2. ' side' → logprob: -2.711019992828369
    3. ' height' → logprob: -2.836019992828369
    4. ' leg' → logprob: -3.836019992828369
    5. ' sides' → logprob: -4.086019992828369
    6. ' ' → logprob: -4.211019992828369
    7. ' legs' → logprob: -4.711019992828369
    8. 'equal' → logprob: -6.211019992828369
    9. 'height' → logprob: -8.086019515991211
    10. 'side' → logprob: -8.461019515991211

Token 65: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10684455186128616
    2. '_length' → logprob: -2.356844663619995
    3. 's' → logprob: -5.231844425201416
    4. '_lengths' → logprob: -6.856844425201416
    5. 'length' → logprob: -9.731844902038574
    6. '1' → logprob: -9.981844902038574
    7. '_len' → logprob: -10.106844902038574
    8. '_:' → logprob: -10.481844902038574
    9. ' length' → logprob: -11.356844902038574
    10. ' lengths' → logprob: -11.731844902038574

Token 66: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.17703057825565338
    2. ':' → logprob: -2.427030563354492
    3. 'float' → logprob: -2.677030563354492
    4. ')' → logprob: -6.427030563354492
    5. ' ' → logprob: -6.427030563354492
    6. '=float' → logprob: -7.302030563354492
    7. '	float' → logprob: -7.802030563354492
    8. '  ' → logprob: -8.552030563354492
    9. '1' → logprob: -8.552030563354492
    10. ' )' → logprob: -9.677030563354492

Token 67: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0014576163375750184
    2. ')' → logprob: -6.626457691192627
    3. ',' → logprob: -9.126457214355469
    4. ':' → logprob: -10.876457214355469
    5. ' ):' → logprob: -13.251457214355469
    6. '):
' → logprob: -13.376457214355469
    7. '   ' → logprob: -14.626457214355469
    8. ' ' → logprob: -16.12645721435547
    9. '),' → logprob: -16.62645721435547
    10. '):
' → logprob: -17.75145721435547

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.060643117874860764
    2. ':' → logprob: -3.935643196105957
    3. '):' → logprob: -4.060643196105957
    4. ')' → logprob: -4.060643196105957
    5. '   ' → logprob: -6.310643196105957
    6. '):
' → logprob: -7.310643196105957
    7. '<|end|>' → logprob: -7.435643196105957
    8. '\n' → logprob: -7.685643196105957
    9. '        
' → logprob: -8.560643196105957
    10. ' ' → logprob: -8.685643196105957

Token 69: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6220117211341858
    2. 'self' (adapté à ' self') → logprob: -1.122011661529541
    3. ' self' → logprob: -1.997011661529541
    4. '   ' → logprob: -7.247011661529541
    5. 'super' → logprob: -7.247011661529541
    6. ' ' → logprob: -8.4970121383667
    7. ' super' → logprob: -9.2470121383667
    8. ' ' → logprob: -11.2470121383667
    9. '	self' → logprob: -11.2470121383667
    10. '     ' → logprob: -12.1220121383667

Token 70: '.base' (ID: 15523)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06214122846722603
    2. '.base' → logprob: -2.812141180038452
    3. '._' → logprob: -8.937141418457031
    4. ' .' → logprob: -11.062141418457031
    5. '_base' → logprob: -12.312141418457031
    6. '.b' → logprob: -12.562141418457031
    7. '   ' → logprob: -13.062141418457031
    8. '.s' → logprob: -13.312141418457031
    9. ' ' → logprob: -13.812141418457031
    10. '.bas' → logprob: -13.937141418457031

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016038239002227783
    2. '=' → logprob: -4.141038417816162
    3. ',' → logprob: -13.016037940979004
    4. ' ' → logprob: -14.016037940979004
    5. ')' → logprob: -14.641037940979004
    6. ' ,' → logprob: -15.641037940979004
    7. '_' → logprob: -16.01603889465332
    8. ' )' → logprob: -16.51603889465332
    9. ':' → logprob: -17.01603889465332
    10. ' ' → logprob: -17.14103889465332

Token 72: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.020544808357954025
    2. 'base' → logprob: -3.8955447673797607
    3. ' ' → logprob: -13.64554500579834
    4. '	base' → logprob: -14.02054500579834
    5. ' ' → logprob: -14.89554500579834
    6. 'bas' → logprob: -15.64554500579834
    7. ' bas' → logprob: -16.145544052124023
    8. 'b' → logprob: -16.145544052124023
    9. '(base' → logprob: -16.520544052124023
    10. '_base' → logprob: -17.020544052124023

Token 73: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0867910385131836
    2. '<|end|>' → logprob: -2.7117910385131836
    3. '
' → logprob: -4.711791038513184
    4. ' ' → logprob: -5.961791038513184
    5. ' 
' → logprob: -6.086791038513184
    6. '        ' → logprob: -6.586791038513184
    7. '        
' → logprob: -7.086791038513184
    8. 'self' → logprob: -8.711791038513184
    9. '  
' → logprob: -8.836791038513184
    10. '    
' → logprob: -9.461791038513184

Token 75: ' self' (ID: 1051)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.034642819315195084
    2. ' 
' → logprob: -3.9096429347991943
    3. ' self' → logprob: -4.909642696380615
    4. 'self' (adapté à ' self') → logprob: -5.159642696380615
    5. 's' → logprob: -8.659643173217773
    6. '  
' → logprob: -9.034643173217773
    7. ',' → logprob: -9.659643173217773
    8. ''s' → logprob: -9.659643173217773
    9. ' side' → logprob: -9.659643173217773
    10. ' ,' → logprob: -9.784643173217773

Token 76: '.side' (ID: 71993)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.09135803580284119
    2. '.side' → logprob: -2.466357946395874
    3. '.s' → logprob: -6.091358184814453
    4. ' .' → logprob: -9.841358184814453
    5. 's' → logprob: -9.966358184814453
    6. '_side' → logprob: -11.466358184814453
    7. ' side' → logprob: -12.216358184814453
    8. 'side' → logprob: -12.341358184814453
    9. '.space' → logprob: -12.716358184814453
    10. ')' → logprob: -12.841358184814453

Token 77: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.059513289481401443
    2. '<|end|>' → logprob: -3.8095133304595947
    3. '=' → logprob: -4.059513092041016
    4. ' =' → logprob: -4.434513092041016
    5. '_' → logprob: -5.184513092041016
    6. '<|end|>' → logprob: -8.184513092041016
    7. ')' → logprob: -8.934513092041016
    8. ' ' → logprob: -9.309513092041016
    9. '_space' → logprob: -9.559513092041016
    10. ' ▁' → logprob: -10.309513092041016

Token 78: ' side' (ID: 4307)
  Prédit: ' side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' side' → logprob: -0.4753687083721161
    2. ' ' → logprob: -0.9753687381744385
    3. 'side' → logprob: -6.725368499755859
    4. ' ' → logprob: -9.85036849975586
    5. '	side' → logprob: -11.22536849975586
    6. ' s' → logprob: -11.85036849975586
    7. 's' → logprob: -12.22536849975586
    8. ' space' → logprob: -12.60036849975586
    9. '(side' → logprob: -12.97536849975586
    10. '_side' → logprob: -13.35036849975586

Token 79: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07386084645986557
    2. '<|end|>' → logprob: -2.6988608837127686
    3. ' 
' → logprob: -6.6988606452941895
    4. '<|end|>' → logprob: -7.3238606452941895
    5. '

' → logprob: -7.4488606452941895
    6. '    
' → logprob: -7.5738606452941895
    7. '  
' → logprob: -8.573861122131348
    8. '
    
' → logprob: -8.698861122131348
    9. ' ' → logprob: -8.698861122131348
    10. '   ' → logprob: -9.198861122131348

Token 80: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0482877641916275
    2. ' 
' → logprob: -3.798287868499756
    3. '<|end|>' → logprob: -4.673287868499756
    4. '    
' → logprob: -5.923287868499756
    5. '  
' → logprob: -6.048287868499756
    6. '

' → logprob: -6.048287868499756
    7. ' ' → logprob: -6.173287868499756
    8. '   ' → logprob: -6.298287868499756
    9. '\n' → logprob: -7.423287868499756
    10. '' → logprob: -7.423287868499756

Token 81: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.020164836198091507
    2. ' def' → logprob: -4.145164966583252
    3. '   ' → logprob: -5.645164966583252
    4. '
' → logprob: -8.520164489746094
    5. '    
' → logprob: -9.020164489746094
    6. ' ' → logprob: -9.645164489746094
    7. 'd' → logprob: -10.395164489746094
    8. 'de' → logprob: -10.770164489746094
    9. ' 
' → logprob: -10.895164489746094
    10. '       ' → logprob: -10.895164489746094

Token 82: ' area' (ID: 3624)
  Prédit: ' area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.13924548029899597
    2. ' def' → logprob: -2.1392455101013184
    3. ' ' → logprob: -4.514245510101318
    4. 'area' → logprob: -7.639245510101318
    5. '_area' → logprob: -7.639245510101318
    6. ' space' → logprob: -8.76424503326416
    7. ' calculate' → logprob: -9.63924503326416
    8. ' ' → logprob: -10.13924503326416
    9. ' _' → logprob: -10.51424503326416
    10. '.area' → logprob: -11.76424503326416

Token 83: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1604854017496109
    2. '(' → logprob: -1.9104853868484497
    3. '(
' → logprob: -8.66048526763916
    4. '()' → logprob: -10.03548526763916
    5. '(s' → logprob: -11.03548526763916
    6. ' (' → logprob: -11.53548526763916
    7. '(

' → logprob: -11.91048526763916
    8. ')' → logprob: -12.53548526763916
    9. 'self' → logprob: -12.91048526763916
    10. 's' → logprob: -13.03548526763916

Token 84: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009744709241203964
    2. '):' → logprob: -7.000974655151367
    3. '()' → logprob: -10.250974655151367
    4. ' )' → logprob: -11.625974655151367
    5. '())' → logprob: -12.000974655151367
    6. ')->' → logprob: -12.500974655151367
    7. '():' → logprob: -12.625974655151367
    8. '   ' → logprob: -13.500974655151367
    9. '):
' → logprob: -14.000974655151367
    10. ')*' → logprob: -14.500974655151367

Token 85: ' ->' (ID: 2747)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07570580393075943
    2. ':' → logprob: -3.2007057666778564
    3. '(self' → logprob: -3.8257057666778564
    4. '(
' → logprob: -5.3257060050964355
    5. ')' → logprob: -6.2007060050964355
    6. ' ->' → logprob: -6.9507060050964355
    7. '   ' → logprob: -7.3257060050964355
    8. '       ' → logprob: -7.5757060050964355
    9. ' ' → logprob: -8.575705528259277
    10. '=' → logprob: -8.700705528259277

Token 86: ' float' (ID: 4428)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.14707644283771515
    2. ' ' → logprob: -2.272076368331909
    3. ' (' → logprob: -4.022076606750488
    4. ' float' → logprob: -4.272076606750488
    5. ' ((' → logprob: -7.397076606750488
    6. 'math' → logprob: -7.647076606750488
    7. '(math' → logprob: -7.897076606750488
    8. ' ' → logprob: -9.022076606750488
    9. ' m' → logprob: -9.397076606750488
    10. '(' → logprob: -10.272076606750488

Token 87: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00023226479243021458
    2. ':
' → logprob: -8.750232696533203
    3. '):' → logprob: -9.750232696533203
    4. '():' → logprob: -11.625232696533203
    5. ':return' → logprob: -12.625232696533203
    6. '<|end|>' → logprob: -14.250232696533203
    7. ':**' → logprob: -14.375232696533203
    8. ':

' → logprob: -14.750232696533203
    9. ' :' → logprob: -15.000232696533203
    10. ',' → logprob: -15.250232696533203

Token 88: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030993789434432983
    2. '(' → logprob: -4.530993938446045
    3. '\' → logprob: -4.905993938446045
    4. '(math' → logprob: -5.780993938446045
    5. ':' → logprob: -6.655993938446045
    6. '(
' → logprob: -6.780993938446045
    7. '\n' → logprob: -6.905993938446045
    8. '        
' → logprob: -7.280993938446045
    9. ' (' → logprob: -7.405993938446045
    10. '
' → logprob: -7.655993938446045

Token 89: ' #' (ID: 1069)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.210482120513916
    2. ' return' → logprob: -1.210482120513916
    3. '(' → logprob: -1.835482120513916
    4. ' (' → logprob: -2.210482120513916
    5. 'return' → logprob: -3.085482120513916
    6. ' math' → logprob: -3.460482120513916
    7. '       ' → logprob: -3.960482120513916
    8. 'math' → logprob: -4.460482120513916
    9. 'import' → logprob: -4.710482120513916
    10. ' ' → logprob: -4.960482120513916

Token 90: ' Using' (ID: 17511)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.2227864265441895
    2. ' import' → logprob: -1.9727864265441895
    3. ' return' → logprob: -1.9727864265441895
    4. ' height' → logprob: -1.9727864265441895
    5. 'return' → logprob: -2.7227864265441895
    6. 'h' → logprob: -2.7227864265441895
    7. 'height' → logprob: -2.8477864265441895
    8. '       ' → logprob: -3.3477864265441895
    9. ' h' → logprob: -3.5977864265441895
    10. ' (' → logprob: -4.5977864265441895

Token 91: ' Her' (ID: 6526)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.1925535947084427
    2. ' (' → logprob: -2.0675535202026367
    3. 'math' → logprob: -3.1925535202026367
    4. '(math' → logprob: -5.317553520202637
    5. ' ' → logprob: -6.942553520202637
    6. ' self' → logprob: -7.192553520202637
    7. '(' → logprob: -7.442553520202637
    8. ' ((' → logprob: -9.317553520202637
    9. '(self' → logprob: -9.567553520202637
    10. '0' → logprob: -9.817553520202637

Token 92: 'on's' (ID: 91464)
  Prédit: 'on's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on's' → logprob: -0.15318401157855988
    2. 'on' → logprob: -2.153183937072754
    3. 'ons' → logprob: -3.653183937072754
    4. 'onian' → logprob: -13.903183937072754
    5. 'onstr' → logprob: -14.528183937072754
    6. '```' → logprob: -14.528183937072754
    7. 'o' → logprob: -14.653183937072754
    8. 'onz' → logprob: -14.778183937072754
    9. 'onc' → logprob: -15.028183937072754
    10. '0' → logprob: -15.153183937072754

Token 93: ' formula' (ID: 20690)
  Prédit: ' formula'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' formula' → logprob: -0.22427311539649963
    2. ' ' → logprob: -1.7242730855941772
    3. 'formula' → logprob: -4.349273204803467
    4. '_formula' → logprob: -4.974273204803467
    5. '_' → logprob: -7.099273204803467
    6. 'Formula' → logprob: -7.724273204803467
    7. '  ' → logprob: -8.224272727966309
    8. ''' → logprob: -8.599272727966309
    9. ' 

' → logprob: -8.974272727966309
    10. ' method' → logprob: -8.974272727966309

Token 94: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2866322696208954
    2. '
' → logprob: -1.5366322994232178
    3. '<|end|>' → logprob: -4.286632061004639
    4. ':' → logprob: -4.786632061004639
    5. '        
' → logprob: -6.161632061004639
    6. 'n' → logprob: -6.536632061004639
    7. ' 
' → logprob: -6.911632061004639
    8. '        ' → logprob: -7.286632061004639
    9. '  
' → logprob: -7.286632061004639
    10. '<|end|>' → logprob: -7.286632061004639

Token 95: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05944949761033058
    2. '
' → logprob: -3.0594494342803955
    3. '<|end|>' → logprob: -5.184449672698975
    4. '        
' → logprob: -6.184449672698975
    5. '  
' → logprob: -6.934449672698975
    6. '' → logprob: -8.184449195861816
    7. ' 
' → logprob: -8.309449195861816
    8. '    
' → logprob: -8.309449195861816
    9. '        ' → logprob: -8.684449195861816
    10. '\' → logprob: -9.059449195861816

Token 96: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.3931201696395874
    2. 's' (adapté à ' s') → logprob: -1.1431201696395874
    3. '       ' → logprob: -5.768120288848877
    4. ' ' → logprob: -7.268120288848877
    5. '   ' → logprob: -7.643120288848877
    6. 'h' → logprob: -7.643120288848877
    7. ' ' → logprob: -8.143119812011719
    8. 'a' → logprob: -8.393119812011719
    9. ' half' → logprob: -8.518119812011719
    10. 'import' → logprob: -8.768119812011719

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0027075118850916624
    2. '=' → logprob: -6.502707481384277
    3. 'elf' → logprob: -7.127707481384277
    4. ' ' → logprob: -8.002707481384277
    5. ' =(' → logprob: -10.127707481384277
    6. '=(' → logprob: -11.627707481384277
    7. '	' → logprob: -12.752707481384277
    8. ' ' → logprob: -12.752707481384277
    9. '=self' → logprob: -13.377707481384277
    10. 'uper' → logprob: -13.377707481384277

Token 98: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.004683118779212236
    2. '(self' → logprob: -5.379683017730713
    3. '(' → logprob: -10.254683494567871
    4. ' ' → logprob: -10.879683494567871
    5. '(s' → logprob: -11.879683494567871
    6. ' self' → logprob: -14.379683494567871
    7. '(f' → logprob: -15.254683494567871
    8. '0' → logprob: -15.504683494567871
    9. ' ' → logprob: -15.504683494567871
    10. '(a' → logprob: -15.754683494567871

Token 99: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006192696164362133
    2. ' self' → logprob: -8.125618934631348
    3. '2' → logprob: -8.750618934631348
    4. '(self' → logprob: -8.750618934631348
    5. '3' → logprob: -12.375618934631348
    6. ' ' → logprob: -14.250618934631348
    7. ' (' → logprob: -14.750618934631348
    8. '(' → logprob: -14.750618934631348
    9. '	self' → logprob: -15.250618934631348
    10. '1' → logprob: -15.500618934631348

Token 100: '.base' (ID: 15523)
  Prédit: '.base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.base' → logprob: -0.047402746975421906
    2. 'base' → logprob: -3.672402858734131
    3. ' base' → logprob: -4.172402858734131
    4. '.' → logprob: -6.547402858734131
    5. '.side' → logprob: -6.672402858734131
    6. ' ' → logprob: -6.797402858734131
    7. '_base' → logprob: -7.672402858734131
    8. '	base' → logprob: -7.797402858734131
    9. '(base' → logprob: -9.172402381896973
    10. 'self' → logprob: -9.297402381896973

Token 101: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.0012155943550169468
    2. '+' → logprob: -6.87621545791626
    3. ' ' → logprob: -8.626215934753418
    4. ' ' → logprob: -13.501215934753418
    5. ' *' → logprob: -14.751215934753418
    6. ' +
' → logprob: -14.876215934753418
    7. '```' → logprob: -15.001215934753418
    8. '  ' → logprob: -15.251215934753418
    9. '*' → logprob: -15.751215934753418
    10. ' /' → logprob: -16.1262149810791

Token 102: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.038736119866371155
    2. ' self' → logprob: -3.41373610496521
    3. '2' → logprob: -5.538736343383789
    4. 'self' → logprob: -6.788736343383789
    5. '	self' → logprob: -11.788736343383789
    6. ' ' → logprob: -12.913736343383789
    7. '3' → logprob: -13.038736343383789
    8. '  ' → logprob: -13.038736343383789
    9. '  
' → logprob: -14.038736343383789
    10. '4' → logprob: -14.413736343383789

Token 103: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3200899362564087
    2. ' ' → logprob: -1.3200899362564087
    3. 'self' → logprob: -5.070089817047119
    4. ' self' → logprob: -7.570089817047119
    5. '   ' → logprob: -12.695090293884277
    6. '  ' → logprob: -13.320090293884277
    7. '	self' → logprob: -13.695090293884277
    8. '  
' → logprob: -14.820090293884277
    9. '```' → logprob: -14.945090293884277
    10. '
' → logprob: -15.320090293884277

Token 104: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0006763351848348975
    2. '*' → logprob: -7.375676155090332
    3. '*self' → logprob: -10.500676155090332
    4. ' ' → logprob: -10.750676155090332
    5. ' ' → logprob: -14.875676155090332
    6. '*object' → logprob: -16.00067710876465
    7. ' **' → logprob: -16.87567710876465
    8. ' *
' → logprob: -17.00067710876465
    9. '    ' → logprob: -17.12567710876465
    10. '   ' → logprob: -17.50067710876465

Token 105: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.048590436577796936
    2. 'self' → logprob: -3.0485904216766357
    3. ' ' → logprob: -12.923590660095215
    4. '	self' → logprob: -15.173590660095215
    5. '*self' → logprob: -15.798590660095215
    6. '(self' → logprob: -16.4235897064209
    7. ' 
' → logprob: -16.6735897064209
    8. 's' → logprob: -17.2985897064209
    9. '<|end|>' → logprob: -17.2985897064209
    10. '_self' → logprob: -17.5485897064209

Token 106: '.side' (ID: 71993)
  Prédit: '.side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.side' → logprob: -0.0004179217794444412
    2. '.' → logprob: -7.875417709350586
    3. ' .' → logprob: -10.250417709350586
    4. '.sid' → logprob: -14.250417709350586
    5. '.s' → logprob: -14.375417709350586
    6. '	side' → logprob: -14.500417709350586
    7. '.user' → logprob: -15.500417709350586
    8. '_SIDE' → logprob: -15.875417709350586
    9. '.sidebar' → logprob: -16.375417709350586
    10. '.Side' → logprob: -16.625417709350586

Token 107: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004907185211777687
    2. ' )' → logprob: -7.625490665435791
    3. ')/' → logprob: -13.37549114227295
    4. '   ' → logprob: -14.25049114227295
    5. '       ' → logprob: -16.125490188598633
    6. '```' → logprob: -16.250490188598633
    7. '）' → logprob: -16.625490188598633
    8. '`)' → logprob: -17.125490188598633
    9. '')' → logprob: -17.375490188598633
    10. ')
' → logprob: -17.625490188598633

Token 108: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.018232710659503937
    2. '/' → logprob: -4.643232822418213
    3. ')' → logprob: -5.018232822418213
    4. ' )' → logprob: -6.518232822418213
    5. ' ' → logprob: -8.643232345581055
    6. '   ' → logprob: -9.768232345581055
    7. ')/' → logprob: -10.018232345581055
    8. '       ' → logprob: -10.393232345581055
    9. '    ' → logprob: -11.393232345581055
    10. '```' → logprob: -11.643232345581055

Token 109: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.016039175912737846
    2. ' ' → logprob: -4.1410393714904785
    3. '   ' → logprob: -13.39103889465332
    4. ' ' → logprob: -13.89103889465332
    5. '  ' → logprob: -14.89103889465332
    6. '"' → logprob: -15.14103889465332
    7. '	' → logprob: -15.26603889465332
    8. '
' → logprob: -15.26603889465332
    9. '    ' → logprob: -15.39103889465332
    10. '3' → logprob: -15.39103889465332

Token 110: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014025058771949261
    2. ' ' → logprob: -8.875140190124512
    3. '```' → logprob: -16.000141143798828
    4. '۲' → logprob: -16.250141143798828
    5. '   ' → logprob: -16.750141143798828
    6. '２' → logprob: -17.375141143798828
    7. '{' → logprob: -17.500141143798828
    8. ' ' → logprob: -17.625141143798828
    9. '  ' → logprob: -17.812641143798828
    10. '२' → logprob: -18.312641143798828

Token 111: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.003805187763646245
    2. '       ' → logprob: -6.003805160522461
    3. '<|end|>' → logprob: -7.628805160522461
    4. '\n' → logprob: -7.753805160522461
    5. '
' → logprob: -8.128805160522461
    6. '' → logprob: -10.253805160522461
    7. '        
' → logprob: -10.503805160522461
    8. '\' → logprob: -11.378805160522461
    9. ')' → logprob: -11.628805160522461
    10. 'n' → logprob: -12.003805160522461

Token 112: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48022913932800293
    2. '       ' → logprob: -0.9802291393280029
    3. '\n' → logprob: -6.480229377746582
    4. '        
' → logprob: -6.605229377746582
    5. '<|end|>' → logprob: -6.980229377746582
    6. 'n' → logprob: -7.480229377746582
    7. '\' → logprob: -7.730229377746582
    8. '    
' → logprob: -8.105229377746582
    9. '   ' → logprob: -8.105229377746582
    10. ')' → logprob: -8.480229377746582

Token 113: ' area' (ID: 3624)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.045851174741983414
    2. '
' → logprob: -3.295851230621338
    3. ' return' → logprob: -6.045851230621338
    4. 'return' → logprob: -6.170851230621338
    5. 'import' → logprob: -7.170851230621338
    6. 'area' (adapté à ' area') → logprob: -7.170851230621338
    7. ' area' → logprob: -7.295851230621338
    8. '        
' → logprob: -7.545851230621338
    9. '
' → logprob: -9.17085075378418
    10. '        ' → logprob: -9.42085075378418

Token 114: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020801350474357605
    2. '=' → logprob: -3.895801305770874
    3. ' ' → logprob: -8.270801544189453
    4. ')' → logprob: -14.270801544189453
    5. '	' → logprob: -14.270801544189453
    6. 's' → logprob: -14.395801544189453
    7. ' ' → logprob: -14.645801544189453
    8. '_' → logprob: -14.770801544189453
    9. '.' → logprob: -16.270801544189453
    10. '```' → logprob: -16.395801544189453

Token 115: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.8653724193572998
    2. 'math' → logprob: -1.4903724193572998
    3. ' (' → logprob: -1.6153724193572998
    4. '(math' → logprob: -1.8653724193572998
    5. '(s' → logprob: -10.240372657775879
    6. ' ' → logprob: -10.615372657775879
    7. '   ' → logprob: -10.740372657775879
    8. '(' → logprob: -11.365372657775879
    9. '       ' → logprob: -11.365372657775879
    10. '(m' → logprob: -11.490372657775879

Token 116: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.02328798547387123
    2. '.' → logprob: -3.7732880115509033
    3. '.s' → logprob: -10.148287773132324
    4. '.Sqrt' → logprob: -13.648287773132324
    5. ' .' → logprob: -14.023287773132324
    6. '.pow' → logprob: -14.273287773132324
    7. '.sin' → logprob: -15.648287773132324
    8. '.pi' → logprob: -16.27328872680664
    9. '```' → logprob: -16.27328872680664
    10. '.isnan' → logprob: -16.27328872680664

Token 117: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.005313446745276451
    2. '(' → logprob: -5.255313396453857
    3. 's' → logprob: -9.880313873291016
    4. '(
' → logprob: -10.505313873291016
    5. ')s' → logprob: -15.005313873291016
    6. ' s' → logprob: -15.255313873291016
    7. ' (' → logprob: -15.380313873291016
    8. '(

' → logprob: -16.255313873291016
    9. '{s' → logprob: -16.380313873291016
    10. ')' → logprob: -16.755313873291016

Token 118: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.34962695837020874
    2. ' *' → logprob: -1.4746270179748535
    3. '*(' → logprob: -2.7246270179748535
    4. '*s' → logprob: -7.7246270179748535
    5. ')' → logprob: -9.599626541137695
    6. '(s' → logprob: -9.724626541137695
    7. ' ' → logprob: -10.724626541137695
    8. 's' → logprob: -11.474626541137695
    9. '   ' → logprob: -12.849626541137695
    10. ' *(' → logprob: -13.224626541137695

Token 119: ' (' (ID: 350)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.36018553376197815
    2. ' (' → logprob: -1.2351855039596558
    3. '(' → logprob: -4.485185623168945
    4. '(
' → logprob: -8.485185623168945
    5. ' ' → logprob: -9.610185623168945
    6. ')' → logprob: -10.860185623168945
    7. '	' → logprob: -11.110185623168945
    8. ' (
' → logprob: -11.860185623168945
    9. '   ' → logprob: -11.860185623168945
    10. '    ' → logprob: -11.985185623168945

Token 120: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.652451464906335e-05
    2. ' s' → logprob: -11.500016212463379
    3. '(s' → logprob: -12.000016212463379
    4. '   ' → logprob: -16.875017166137695
    5. ' (' → logprob: -17.250017166137695
    6. ' ' → logprob: -17.500017166137695
    7. '{s' → logprob: -18.000017166137695
    8. '_s' → logprob: -18.125017166137695
    9. '	s' → logprob: -18.250017166137695
    10. '`s' → logprob: -18.500017166137695

Token 121: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.25194334983825684
    2. ' -' → logprob: -1.5019433498382568
    3. '-s' → logprob: -12.501943588256836
    4. ' ' → logprob: -12.876943588256836
    5. '-self' → logprob: -13.251943588256836
    6. ')' → logprob: -13.501943588256836
    7. '-)' → logprob: -13.876943588256836
    8. '-token' → logprob: -14.751943588256836
    9. '<|end|>' → logprob: -14.751943588256836
    10. '-m' → logprob: -14.876943588256836

Token 122: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10022047162055969
    2. ' self' → logprob: -2.3502204418182373
    3. ' ' → logprob: -12.725220680236816
    4. '	self' → logprob: -12.725220680236816
    5. '<|end|>' → logprob: -13.100220680236816
    6. 'Self' → logprob: -14.100220680236816
    7. '(self' → logprob: -14.100220680236816
    8. '=self' → logprob: -14.350220680236816
    9. ')' → logprob: -14.600220680236816
    10. '_self' → logprob: -14.725220680236816

Token 123: '.base' (ID: 15523)
  Prédit: '.base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.base' → logprob: -0.00014811802248004824
    2. '.' → logprob: -9.375147819519043
    3. 'base' → logprob: -9.750147819519043
    4. '.bas' → logprob: -13.375147819519043
    5. ' base' → logprob: -13.500147819519043
    6. ';base' → logprob: -14.250147819519043
    7. ' .' → logprob: -14.875147819519043
    8. '.user' → logprob: -15.625147819519043
    9. '_base' → logprob: -15.750147819519043
    10. '.side' → logprob: -16.00014877319336

Token 124: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018446780450176448
    2. ' )' → logprob: -8.625184059143066
    3. '```' → logprob: -14.000184059143066
    4. ')
' → logprob: -14.375184059143066
    5. '   ' → logprob: -14.500184059143066
    6. ')*' → logprob: -14.750184059143066
    7. ' ' → logprob: -15.000184059143066
    8. '*' → logprob: -15.375184059143066
    9. ')*(' → logprob: -15.500184059143066
    10. '2' → logprob: -15.875184059143066

Token 125: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.04906044900417328
    2. '*' → logprob: -3.049060344696045
    3. ')' → logprob: -8.424060821533203
    4. ' ' → logprob: -8.549060821533203
    5. '*(' → logprob: -10.174060821533203
    6. ' *
' → logprob: -12.424060821533203
    7. ' *(' → logprob: -12.674060821533203
    8. ' )' → logprob: -13.049060821533203
    9. ')*' → logprob: -13.299060821533203
    10. '```' → logprob: -13.424060821533203

Token 126: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0008041490218602121
    2. ' ' → logprob: -8.12580394744873
    3. '(s' → logprob: -8.37580394744873
    4. '(' → logprob: -8.87580394744873
    5. ' ((' → logprob: -10.12580394744873
    6. 's' → logprob: -11.00080394744873
    7. '(self' → logprob: -11.50080394744873
    8. '2' → logprob: -11.50080394744873
    9. '
' → logprob: -11.62580394744873
    10. ' (
' → logprob: -11.62580394744873

Token 127: 's' (ID: 82)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.8904199600219727
    2. 's' → logprob: -1.1404199600219727
    3. ' (' → logprob: -2.0154199600219727
    4. ' self' → logprob: -2.8904199600219727
    5. 'self' → logprob: -3.1404199600219727
    6. '(s' → logprob: -3.6404199600219727
    7. '(self' → logprob: -4.765419960021973
    8. ' ' → logprob: -6.390419960021973
    9. '2' → logprob: -7.265419960021973
    10. '
' → logprob: -9.515419960021973

Token 128: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.05502321571111679
    2. '-' → logprob: -2.930023193359375
    3. ' ' → logprob: -8.930023193359375
    4. '<|end|>' → logprob: -13.055023193359375
    5. '   ' → logprob: -14.055023193359375
    6. ')' → logprob: -14.055023193359375
    7. '2' → logprob: -14.430023193359375
    8. '  ' → logprob: -14.805023193359375
    9. ' -
' → logprob: -14.805023193359375
    10. '<|end|>' → logprob: -14.805023193359375

Token 129: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3876670300960541
    2. 'self' → logprob: -1.1376670598983765
    3. ' ' → logprob: -7.637667179107666
    4. '2' → logprob: -8.762666702270508
    5. '<|end|>' → logprob: -9.637666702270508
    6. '	self' → logprob: -10.262666702270508
    7. '(self' → logprob: -11.700166702270508
    8. ')' → logprob: -12.075166702270508
    9. '_self' → logprob: -12.137666702270508
    10. '=self' → logprob: -12.262666702270508

Token 130: '.side' (ID: 71993)
  Prédit: '.side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.side' → logprob: -0.0018017961410805583
    2. 'side' → logprob: -6.75180196762085
    3. '_side' → logprob: -8.376801490783691
    4. ' side' → logprob: -8.376801490783691
    5. '-side' → logprob: -9.251801490783691
    6. '	side' → logprob: -10.251801490783691
    7. ')' → logprob: -11.626801490783691
    8. '.' → logprob: -11.876801490783691
    9. '_SIDE' → logprob: -11.876801490783691
    10. 'Side' → logprob: -12.001801490783691

Token 131: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001720742875477299
    2. ' )' → logprob: -8.875171661376953
    3. ')**' → logprob: -11.000171661376953
    4. ')*' → logprob: -11.375171661376953
    5. '*' → logprob: -13.875171661376953
    6. '   ' → logprob: -14.125171661376953
    7. ' ' → logprob: -14.375171661376953
    8. ' *' → logprob: -14.750171661376953
    9. '))' → logprob: -15.000171661376953
    10. '")' → logprob: -16.000171661376953

Token 132: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.09428410232067108
    2. '*' → logprob: -2.4692840576171875
    3. ')' → logprob: -5.4692840576171875
    4. ' ' → logprob: -6.8442840576171875
    5. ')*' → logprob: -11.219284057617188
    6. ' )' → logprob: -11.344284057617188
    7. '**' → logprob: -12.219284057617188
    8. '*(' → logprob: -12.719284057617188
    9. ' *(' → logprob: -12.719284057617188
    10. '   ' → logprob: -12.969284057617188

Token 133: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.014605202712118626
    2. '(s' → logprob: -4.3896050453186035
    3. '(' → logprob: -6.2646050453186035
    4. ' ' → logprob: -9.389605522155762
    5. 's' → logprob: -9.514605522155762
    6. '2' → logprob: -11.514605522155762
    7. '(self' → logprob: -11.889605522155762
    8. ' (
' → logprob: -12.014605522155762
    9. ')' → logprob: -12.889605522155762
    10. ' s' → logprob: -13.264605522155762

Token 134: 's' (ID: 82)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04399671033024788
    2. ' self' → logprob: -3.168996810913086
    3. 's' → logprob: -7.543996810913086
    4. '(self' → logprob: -7.918996810913086
    5. '	self' → logprob: -10.668996810913086
    6. '       ' → logprob: -10.668996810913086
    7. '2' → logprob: -11.168996810913086
    8. ' s' → logprob: -11.668996810913086
    9. ' (' → logprob: -11.918996810913086
    10. ' ' → logprob: -12.043996810913086

Token 135: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5861389636993408
    2. '-' → logprob: -0.8361389636993408
    3. ')' → logprob: -4.711138725280762
    4. ' ' → logprob: -7.586138725280762
    5. '))' → logprob: -7.711138725280762
    6. '-)' → logprob: -10.336138725280762
    7. '<|end|>' → logprob: -10.461138725280762
    8. ' )' → logprob: -10.461138725280762
    9. '   ' → logprob: -11.336138725280762
    10. 's' → logprob: -11.461138725280762

Token 136: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.22567740082740784
    2. ' self' → logprob: -1.6006773710250854
    3. ')' → logprob: -9.725677490234375
    4. '2' → logprob: -9.725677490234375
    5. ' ' → logprob: -10.100677490234375
    6. '	self' → logprob: -10.225677490234375
    7. '(self' → logprob: -11.350677490234375
    8. '[self' → logprob: -12.163177490234375
    9. '<|end|>' → logprob: -12.225677490234375
    10. 's' → logprob: -12.288177490234375

Token 137: '.side' (ID: 71993)
  Prédit: '.side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.side' → logprob: -0.0011408114805817604
    2. 'side' → logprob: -7.501140594482422
    3. ')' → logprob: -8.626140594482422
    4. ' side' → logprob: -9.126140594482422
    5. '	side' → logprob: -9.626140594482422
    6. 's' → logprob: -10.001140594482422
    7. '_side' → logprob: -10.251140594482422
    8. '.' → logprob: -10.376140594482422
    9. '       ' → logprob: -10.501140594482422
    10. '))' → logprob: -10.626140594482422

Token 138: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16027092933654785
    2. ')
' → logprob: -1.9102709293365479
    3. '       ' → logprob: -10.910270690917969
    4. ')
' → logprob: -11.160270690917969
    5. '))' → logprob: -12.160270690917969
    6. ')

' → logprob: -12.410270690917969
    7. ' )
' → logprob: -13.660270690917969
    8. ' )' → logprob: -13.660270690917969
    9. '))
' → logprob: -13.785270690917969
    10. '   ' → logprob: -14.285270690917969

Token 139: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004699257202446461
    2. '
' → logprob: -5.379699230194092
    3. '        
' → logprob: -10.50469970703125
    4. 'return' → logprob: -11.25469970703125
    5. ' return' → logprob: -11.75469970703125
    6. '	' → logprob: -12.00469970703125
    7. ')' → logprob: -12.37969970703125
    8. '
' → logprob: -12.50469970703125
    9. '   ' → logprob: -12.87969970703125
    10. '  
' → logprob: -13.00469970703125

Token 140: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03224876523017883
    2. 'return' (adapté à ' return') → logprob: -3.7822487354278564
    3. ' return' → logprob: -4.7822489738464355
    4. '
' → logprob: -7.6572489738464355
    5. '   ' → logprob: -9.407248497009277
    6. ' ' → logprob: -11.657248497009277
    7. '	return' → logprob: -12.157248497009277
    8. '
' → logprob: -13.032248497009277
    9. '        
' → logprob: -13.032248497009277
    10. '  
' → logprob: -13.032248497009277

Token 141: ' area' (ID: 3624)
  Prédit: ' area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.018151111900806427
    2. 'area' → logprob: -4.01815128326416
    3. ' ' → logprob: -14.14315128326416
    4. ' ' → logprob: -14.64315128326416
    5. ' área' → logprob: -17.518150329589844
    6. ' are' → logprob: -17.643150329589844
    7. 'are' → logprob: -18.018150329589844
    8. '(area' → logprob: -18.393150329589844
    9. ' math' → logprob: -18.518150329589844
    10. '_area' → logprob: -18.643150329589844

Token 142: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0387144461274147
    2. '<|end|>' → logprob: -3.2887144088745117
    3. '

' → logprob: -7.788714408874512
    4. '<|end|>' → logprob: -8.538714408874512
    5. '    
' → logprob: -10.913714408874512
    6. '
' → logprob: -11.538714408874512
    7. '```' → logprob: -11.663714408874512
    8. '


' → logprob: -11.788714408874512
    9. '   ' → logprob: -11.913714408874512
    10. '
    
' → logprob: -13.038714408874512

Token 143: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.03849560022354126
    2. '
' → logprob: -3.2884955406188965
    3. ' class' → logprob: -9.038496017456055
    4. '    
' → logprob: -9.163496017456055
    5. '   ' → logprob: -9.788496017456055
    6. '<|end|>' → logprob: -9.788496017456055
    7. '  
' → logprob: -10.288496017456055
    8. 'def' → logprob: -10.663496017456055
    9. '

' → logprob: -11.288496017456055
    10. ' ' → logprob: -12.288496017456055

Token 144: ' Extended' (ID: 63995)
  Prédit: ' Equ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Equ' → logprob: -0.17944379150867462
    2. 'Equ' → logprob: -2.304443836212158
    3. ' Scal' → logprob: -2.804443836212158
    4. ' Right' → logprob: -5.929443836212158
    5. 'Right' → logprob: -7.679443836212158
    6. 'Sc' → logprob: -8.179443359375
    7. ' ' → logprob: -9.054443359375
    8. 'equ' → logprob: -9.179443359375
    9. ' equ' → logprob: -9.304443359375
    10. ' Sc' → logprob: -9.679443359375

Token 145: 'Skin' (ID: 46562)
  Prédit: 'Triangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Triangle' → logprob: -0.2834353744983673
    2. 'Is' → logprob: -2.033435344696045
    3. 'Right' → logprob: -2.658435344696045
    4. 'Equ' → logprob: -3.283435344696045
    5. 'Sc' → logprob: -5.283435344696045
    6. 'Rectangle' → logprob: -6.783435344696045
    7. ' Triangle' → logprob: -7.783435344696045
    8. ' Is' → logprob: -8.658435821533203
    9. 'Ellipse' → logprob: -8.908435821533203
    10. 'Polygon' → logprob: -8.908435821533203

Token 146: 'Area' (ID: 10280)
  Prédit: 'Triangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Triangle' → logprob: -0.8940170407295227
    2. 'fold' → logprob: -1.394016981124878
    3. 'Fold' → logprob: -1.644016981124878
    4. 'F' → logprob: -3.769016981124878
    5. 'Les' → logprob: -4.019017219543457
    6. 'ner' → logprob: -4.144017219543457
    7. 'Fl' → logprob: -4.519017219543457
    8. 'ny' → logprob: -4.519017219543457
    9. 'Tri' → logprob: -4.644017219543457
    10. 'Surface' → logprob: -5.019017219543457

Token 147: 'Optimizer' (ID: 120293)
  Prédit: 'Calculator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Calculator' → logprob: -0.7615615725517273
    2. '(T' → logprob: -0.8865615725517273
    3. '(' → logprob: -2.636561632156372
    4. 'Estimator' → logprob: -3.761561632156372
    5. ':' → logprob: -4.636561393737793
    6. 'Triangle' → logprob: -4.761561393737793
    7. '():' → logprob: -6.136561393737793
    8. 'Calculation' → logprob: -7.386561393737793
    9. 'Optimizer' → logprob: -7.386561393737793
    10. 'Analyzer' → logprob: -7.636561393737793

Token 148: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18977801501750946
    2. '(T' → logprob: -2.1897780895233154
    3. '(' → logprob: -2.8147780895233154
    4. ':
' → logprob: -7.314777851104736
    5. '():' → logprob: -9.314778327941895
    6. '<|end|>' → logprob: -9.689778327941895
    7. ' :' → logprob: -9.814778327941895
    8. '(Abstract' → logprob: -10.439778327941895
    9. '):' → logprob: -10.939778327941895
    10. '(TR' → logprob: -11.564778327941895

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033059872686862946
    2. ':' → logprob: -4.658060073852539
    3. ' def' → logprob: -4.908060073852539
    4. '    
' → logprob: -5.033060073852539
    5. '
' → logprob: -5.783060073852539
    6. ':
' → logprob: -5.783060073852539
    7. 'def' → logprob: -6.658060073852539
    8. '<|end|>' → logprob: -7.533060073852539
    9. '   
' → logprob: -8.908060073852539
    10. ' 
' → logprob: -8.908060073852539

Token 150: ' """
' (ID: 7037)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.020793994888663292
    2. 'def' → logprob: -4.270793914794922
    3. '   ' → logprob: -5.020793914794922
    4. '	def' → logprob: -12.145793914794922
    5. '    ' → logprob: -13.520793914794922
    6. '    
' → logprob: -14.145793914794922
    7. ':' → logprob: -15.145793914794922
    8. ':def' → logprob: -15.645793914794922
    9. '   ' → logprob: -16.020793914794922
    10. ' indent' → logprob: -16.020793914794922

Token 151: '   ' (ID: 271)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.020422756671905518
    2. 'def' → logprob: -4.02042293548584
    3. '   ' → logprob: -6.14542293548584
    4. ' ' → logprob: -9.89542293548584
    5. '    ' → logprob: -11.14542293548584
    6. ' __' → logprob: -11.14542293548584
    7. '  ' → logprob: -11.27042293548584
    8. 'class' → logprob: -11.39542293548584
    9. '	def' → logprob: -11.64542293548584
    10. ')' → logprob: -12.89542293548584

Token 152: ' This' (ID: 1328)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.9435555338859558
    2. ' Optim' → logprob: -1.1935555934906006
    3. 'Optim' → logprob: -2.0685555934906006
    4. ' """
' → logprob: -2.8185555934906006
    5. 'def' → logprob: -3.6935555934906006
    6. 'Optimize' → logprob: -3.8185555934906006
    7. '   ' → logprob: -4.6935553550720215
    8. ' Optimize' → logprob: -4.8185553550720215
    9. '"""
' → logprob: -5.0685553550720215
    10. 'class' → logprob: -5.0685553550720215

Token 153: ' class' (ID: 744)
  Prédit: ' class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' class' → logprob: -0.013064468279480934
    2. 'class' → logprob: -4.763064384460449
    3. ' code' → logprob: -6.013064384460449
    4. ' optimizer' → logprob: -6.638064384460449
    5. ' is' → logprob: -8.26306438446045
    6. ' calculates' → logprob: -8.51306438446045
    7. '   ' → logprob: -9.76306438446045
    8. ' ' → logprob: -10.13806438446045
    9. ' tool' → logprob: -11.01306438446045
    10. 'optimizer' → logprob: -11.38806438446045

Token 154: ' models' (ID: 7015)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.2439287900924683
    2. ' calculates' → logprob: -1.2439287900924683
    3. ' optim' → logprob: -1.4939287900924683
    4. ' provides' → logprob: -2.618928909301758
    5. ':' → logprob: -3.118928909301758
    6. '<|end|>' → logprob: -4.118928909301758
    7. ' helps' → logprob: -4.743928909301758
    8. ' aims' → logprob: -4.993928909301758
    9. '   ' → logprob: -5.118928909301758
    10. ' designs' → logprob: -5.368928909301758

Token 155: ' the' (ID: 290)
  Prédit: ' an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.5287894606590271
    2. ' a' → logprob: -1.2787895202636719
    3. ' the' → logprob: -2.028789520263672
    4. ' optimization' → logprob: -8.903789520263672
    5. 'a' → logprob: -9.028789520263672
    6. ' ' → logprob: -9.278789520263672
    7. ' extended' → logprob: -9.778789520263672
    8. ' how' → logprob: -9.778789520263672
    9. 'the' → logprob: -9.778789520263672
    10. ' and' → logprob: -10.403789520263672

Token 156: ' original' (ID: 4756)
  Prédit: ' optimization'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' optimization' → logprob: -0.3301888406276703
    2. 'optimization' → logprob: -2.080188751220703
    3. ' problem' → logprob: -2.455188751220703
    4. ' process' → logprob: -4.205188751220703
    5. 'problem' → logprob: -4.830188751220703
    6. ' extended' → logprob: -4.830188751220703
    7. ' skin' → logprob: -4.830188751220703
    8. ' optimizer' → logprob: -6.080188751220703
    9. 'optimizer' → logprob: -6.080188751220703
    10. ' calculation' → logprob: -6.205188751220703

Token 157: ' triangle' (ID: 41487)
  Prédit: ' skin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' skin' → logprob: -1.8387657403945923
    2. ' problem' → logprob: -1.9637657403945923
    3. ' triangle' → logprob: -2.0887656211853027
    4. ' code' → logprob: -2.3387656211853027
    5. 'skin' → logprob: -3.0262656211853027
    6. ' surface' → logprob: -3.5887656211853027
    7. ' class' → logprob: -3.9637656211853027
    8. 'class' → logprob: -4.088765621185303
    9. ' and' → logprob: -4.213765621185303
    10. ' extended' → logprob: -4.338765621185303

Token 158: ' ABC' (ID: 33047)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.1368154287338257
    2. ''s' → logprob: -2.1368155479431152
    3. ' optimization' → logprob: -2.2618155479431152
    4. ' with' → logprob: -2.3868155479431152
    5. ' area' → logprob: -2.7618155479431152
    6. ' surface' → logprob: -3.3868155479431152
    7. ' as' → logprob: -3.7618155479431152
    8. ' for' → logprob: -3.7618155479431152
    9. 's' → logprob: -3.7618155479431152
    10. ' optimizer' → logprob: -3.8868155479431152

Token 159: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2421056479215622
    2. ' with' → logprob: -2.242105722427368
    3. ',' → logprob: -3.242105722427368
    4. 'and' → logprob: -3.492105722427368
    5. '   ' → logprob: -4.992105484008789
    6. ' as' → logprob: -4.992105484008789
    7. 'with' → logprob: -5.242105484008789
    8. ' that' → logprob: -5.617105484008789
    9. ' for' → logprob: -5.867105484008789
    10. ''s' → logprob: -6.117105484008789

Token 160: ' the' (ID: 290)
  Prédit: ' its'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' its' → logprob: -0.26599934697151184
    2. ' calculates' → logprob: -2.7659993171691895
    3. ' the' → logprob: -3.5159993171691895
    4. ' provides' → logprob: -3.6409993171691895
    5. ' optim' → logprob: -3.6409993171691895
    6. ' extends' → logprob: -4.5159993171691895
    7. ' computes' → logprob: -4.6409993171691895
    8. ' two' → logprob: -4.7659993171691895
    9. ' finds' → logprob: -4.8909993171691895
    10. ' attempts' → logprob: -5.0159993171691895

Token 161: ' problem' (ID: 4792)
  Prédit: ' two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' two' → logprob: -1.1693583726882935
    2. ' def' → logprob: -1.7943583726882935
    3. ' extended' → logprob: -1.7943583726882935
    4. ' extension' → logprob: -3.294358253479004
    5. ' triangle' → logprob: -3.544358253479004
    6. ' additional' → logprob: -3.606858253479004
    7. 'def' → logprob: -4.106858253479004
    8. ' three' → logprob: -4.169358253479004
    9. ' triangles' → logprob: -4.294358253479004
    10. ' other' → logprob: -4.294358253479004

Token 162: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.054192110896110535
    2. ' with' → logprob: -4.554192066192627
    3. 'of' → logprob: -4.679192066192627
    4. '<|end|>' → logprob: -4.679192066192627
    5. '   ' → logprob: -5.179192066192627
    6. '<|end|>' → logprob: -5.804192066192627
    7. ' in' → logprob: -6.679192066192627
    8. ' it' → logprob: -6.804192066192627
    9. ' that' → logprob: -7.054192066192627
    10. ' context' → logprob: -7.054192066192627

Token 163: '
' (ID: 198)
  Prédit: ' optimizing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' optimizing' → logprob: -0.9388170838356018
    2. ' maximizing' → logprob: -1.438817024230957
    3. ' minimizing' → logprob: -1.938817024230957
    4. ' finding' → logprob: -2.063817024230957
    5. ' calculating' → logprob: -3.688817024230957
    6. ' extending' → logprob: -4.438817024230957
    7. 'finding' → logprob: -4.938817024230957
    8. ' skin' → logprob: -5.063817024230957
    9. 'optim' → logprob: -5.313817024230957
    10. ' modeling' → logprob: -5.313817024230957

Token 164: '   ' (ID: 271)
  Prédit: ' optimizing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' optimizing' → logprob: -0.6849842667579651
    2. ' maximizing' → logprob: -1.5599842071533203
    3. ' finding' → logprob: -2.1849842071533203
    4. ' minimizing' → logprob: -2.5599842071533203
    5. ' calculating' → logprob: -3.8099842071533203
    6. ' extending' → logprob: -3.9349842071533203
    7. ' computing' → logprob: -5.18498420715332
    8. ' skin' → logprob: -5.18498420715332
    9. 'finding' → logprob: -5.18498420715332
    10. 'optim' → logprob: -5.30998420715332

Token 165: ' adding' (ID: 12673)
  Prédit: ' maximizing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' maximizing' → logprob: -1.1001672744750977
    2. ' optimizing' → logprob: -1.2251672744750977
    3. ' finding' → logprob: -1.6001672744750977
    4. ' minimizing' → logprob: -2.4751672744750977
    5. ' extending' → logprob: -3.2251672744750977
    6. ' calculating' → logprob: -4.225167274475098
    7. ' modeling' → logprob: -5.225167274475098
    8. ' the' → logprob: -5.600167274475098
    9. ' computing' → logprob: -6.100167274475098
    10. 'finding' → logprob: -6.225167274475098

Token 166: ' slack' (ID: 86653)
  Prédit: ' an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.578260064125061
    2. ' a' → logprob: -0.953260064125061
    3. ' two' → logprob: -4.4532599449157715
    4. ' new' → logprob: -4.5782599449157715
    5. ' another' → logprob: -5.3282599449157715
    6. ' points' → logprob: -5.7032599449157715
    7. 'a' → logprob: -5.7032599449157715
    8. ' the' → logprob: -6.0782599449157715
    9. ' ' → logprob: -6.3282599449157715
    10. ' additional' → logprob: -6.4532599449157715

Token 167: ' length' (ID: 5517)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6137885451316833
    2. ' triangles' → logprob: -1.2387886047363281
    3. ' layers' → logprob: -3.113788604736328
    4. ' space' → logprob: -3.613788604736328
    5. ' sides' → logprob: -3.988788604736328
    6. ' edges' → logprob: -3.988788604736328
    7. ' angles' → logprob: -4.988788604736328
    8. ' ' → logprob: -5.113788604736328
    9. ' segments' → logprob: -5.113788604736328
    10. ' variables' → logprob: -5.238788604736328

Token 168: ' x' (ID: 1215)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.05532250925898552
    2. 's' → logprob: -3.9303224086761475
    3. ' for' → logprob: -5.430322647094727
    4. ' L' → logprob: -5.430322647094727
    5. 'to' → logprob: -5.680322647094727
    6. '.' → logprob: -5.930322647094727
    7. ' ' → logprob: -6.055322647094727
    8. ' s' → logprob: -6.305322647094727
    9. ' constraints' → logprob: -6.305322647094727
    10. ' on' → logprob: -6.430322647094727

Token 169: ' on' (ID: 402)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.007354713510721922
    2. ' in' → logprob: -6.382354736328125
    3. '.' → logprob: -6.507354736328125
    4. ' for' → logprob: -6.757354736328125
    5. ' ' → logprob: -6.882354736328125
    6. ',' → logprob: -7.882354736328125
    7. '<|end|>' → logprob: -8.257354736328125
    8. ' between' → logprob: -8.507354736328125
    9. ' as' → logprob: -8.632354736328125
    10. ' on' → logprob: -8.632354736328125

Token 170: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.9845081567764282
    2. ' side' → logprob: -1.1095081567764282
    3. ' each' → logprob: -2.3595080375671387
    4. ' one' → logprob: -2.4845080375671387
    5. ' two' → logprob: -3.7345080375671387
    6. ' sides' → logprob: -3.7345080375671387
    7. ' both' → logprob: -4.234508037567139
    8. ' ' → logprob: -4.484508037567139
    9. ' all' → logprob: -4.734508037567139
    10. ' a' → logprob: -5.109508037567139

Token 171: ' two' (ID: 1920)
  Prédit: ' side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' side' → logprob: -0.6587066054344177
    2. ' base' → logprob: -1.9087066650390625
    3. ' sides' → logprob: -3.2212066650390625
    4. ' line' → logprob: -3.6587066650390625
    5. ' right' → logprob: -3.7837066650390625
    6. ' slack' → logprob: -3.9087066650390625
    7. ' B' → logprob: -4.0337066650390625
    8. ' edge' → logprob: -4.0962066650390625
    9. ' two' → logprob: -4.1587066650390625
    10. ' BC' → logprob: -4.2212066650390625

Token 172: ' equal' (ID: 12629)
  Prédit: ' sides'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sides' → logprob: -0.27400046586990356
    2. ' equal' → logprob: -2.399000406265259
    3. ' ' → logprob: -2.774000406265259
    4. ' legs' → logprob: -3.649000406265259
    5. 's' → logprob: -4.399000644683838
    6. ' side' → logprob: -4.524000644683838
    7. ' edges' → logprob: -4.774000644683838
    8. ' adjacent' → logprob: -4.899000644683838
    9. ' other' → logprob: -5.461500644683838
    10. ' s' → logprob: -5.461500644683838

Token 173: ' sides' (ID: 18089)
  Prédit: ' sides'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sides' → logprob: -0.02279883250594139
    2. 's' → logprob: -4.022799015045166
    3. ' legs' → logprob: -5.772799015045166
    4. 'legs' → logprob: -7.897799015045166
    5. ' side' → logprob: -8.272798538208008
    6. ' ' → logprob: -8.647798538208008
    7. '<|end|>' → logprob: -8.647798538208008
    8. ' edges' → logprob: -8.647798538208008
    9. ' arms' → logprob: -9.022798538208008
    10. 'arms' → logprob: -10.335298538208008

Token 174: ' AC' (ID: 18577)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.787641704082489
    2. '   ' → logprob: -0.912641704082489
    3. ' of' → logprob: -2.412641763687134
    4. '.' → logprob: -3.537641763687134
    5. ',' → logprob: -4.537641525268555
    6. ' for' → logprob: -5.912641525268555
    7. ' and' → logprob: -6.287641525268555
    8. 'to' → logprob: -6.287641525268555
    9. ' (' → logprob: -6.412641525268555
    10. '    ' → logprob: -6.912641525268555

Token 175: '=' (ID: 28)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03680531680583954
    2. 'and' → logprob: -3.6618053913116455
    3. '   ' → logprob: -5.411805152893066
    4. ',' → logprob: -5.536805152893066
    5. ' to' → logprob: -6.786805152893066
    6. ' ' → logprob: -8.036805152893066
    7. '<|end|>' → logprob: -9.161805152893066
    8. '.' → logprob: -9.661805152893066
    9. '  ' → logprob: -9.911805152893066
    10. ' or' → logprob: -10.286805152893066

Token 176: 'BC' (ID: 7551)
  Prédit: 'BC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BC' → logprob: -0.6428061723709106
    2. ' BC' → logprob: -0.7678061723709106
    3. 'AB' → logprob: -4.767806053161621
    4. ' ' → logprob: -7.392806053161621
    5. ' AB' → logprob: -8.392806053161621
    6. 'CB' → logprob: -8.642806053161621
    7. 'B' → logprob: -8.767806053161621
    8. '=' → logprob: -8.767806053161621
    9. ' ' → logprob: -9.767806053161621
    10. '<|end|>' → logprob: -10.142806053161621

Token 177: ',' (ID: 11)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.29349055886268616
    2. '.' → logprob: -1.6684905290603638
    3. ',' → logprob: -3.4184906482696533
    4. '   ' → logprob: -3.9184906482696533
    5. ' for' → logprob: -5.543490409851074
    6. ' of' → logprob: -5.668490409851074
    7. 'to' → logprob: -6.043490409851074
    8. ' and' → logprob: -6.543490409851074
    9. '<|end|>' → logprob: -8.043490409851074
    10. ' in' → logprob: -8.168490409851074

Token 178: ' creating' (ID: 9278)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8190777897834778
    2. ' to' → logprob: -1.319077730178833
    3. ' and' → logprob: -2.819077730178833
    4. 'to' → logprob: -2.944077730178833
    5. ' allowing' → logprob: -3.444077730178833
    6. 'and' → logprob: -3.569077730178833
    7. '#' → logprob: -3.944077730178833
    8. ' which' → logprob: -3.944077730178833
    9. ' making' → logprob: -4.694077968597412
    10. ' in' → logprob: -4.694077968597412

Token 179: ' new' (ID: 620)
  Prédit: ' an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.3417966365814209
    2. ' a' → logprob: -1.966796636581421
    3. ' two' → logprob: -2.591796636581421
    4. ' new' → logprob: -3.341796636581421
    5. ' is' → logprob: -5.091796875
    6. ' the' → logprob: -5.216796875
    7. 'a' → logprob: -5.466796875
    8. 'an' → logprob: -5.841796875
    9. ' triangles' → logprob: -5.966796875
    10. ' extended' → logprob: -6.216796875

Token 180: ' triangles' (ID: 92927)
  Prédit: ' triangles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' triangles' → logprob: -0.3643690347671509
    2. ' triangle' → logprob: -2.1143689155578613
    3. ' points' → logprob: -2.7393689155578613
    4. ' is' → logprob: -2.8643689155578613
    5. ' sides' → logprob: -4.364368915557861
    6. 'isos' → logprob: -4.489368915557861
    7. 'triangle' → logprob: -4.864368915557861
    8. 'points' → logprob: -5.239368915557861
    9. ' vertices' → logprob: -5.676868915557861
    10. ' smaller' → logprob: -5.864368915557861

Token 181: ' ADC' (ID: 49719)
  Prédit: ' ABC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -1.2993756532669067
    2. ' with' → logprob: -1.4243756532669067
    3. ' AC' → logprob: -2.049375534057617
    4. '.' → logprob: -2.549375534057617
    5. ' to' → logprob: -2.924375534057617
    6. ' and' → logprob: -3.049375534057617
    7. ' A' → logprob: -3.174375534057617
    8. ',' → logprob: -3.549375534057617
    9. ':' → logprob: -4.049375534057617
    10. ' at' → logprob: -4.174375534057617

Token 182: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.027583593502640724
    2. 'and' → logprob: -3.777583599090576
    3. ',' → logprob: -5.527583599090576
    4. 'AB' → logprob: -9.402583122253418
    5. ' ' → logprob: -9.777583122253418
    6. '   ' → logprob: -10.152583122253418
    7. 'B' → logprob: -10.652583122253418
    8. 'ABD' → logprob: -10.652583122253418
    9. ' ABD' → logprob: -11.152583122253418
    10. ' ,' → logprob: -11.277583122253418

Token 183: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.24126918613910675
    2. 'B' → logprob: -1.9912692308425903
    3. 'BDC' → logprob: -3.491269111633301
    4. 'BCD' → logprob: -4.741269111633301
    5. 'BD' → logprob: -4.991269111633301
    6. ' C' → logprob: -5.366269111633301
    7. 'ADB' → logprob: -5.366269111633301
    8. ' A' → logprob: -5.741269111633301
    9. ' ABD' → logprob: -5.991269111633301
    10. 'C' → logprob: -5.991269111633301

Token 184: 'EC' (ID: 9760)
  Prédit: 'DC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DC' → logprob: -0.019878903403878212
    2. 'D' → logprob: -4.76987886428833
    3. ' DC' → logprob: -5.01987886428833
    4. 'CD' → logprob: -6.39487886428833
    5. 'C' → logprob: -7.14487886428833
    6. 'DA' → logprob: -7.89487886428833
    7. 'AC' → logprob: -8.144879341125488
    8. ' D' → logprob: -8.519879341125488
    9. '_DC' → logprob: -8.769879341125488
    10. 'DE' → logprob: -8.769879341125488

Token 185: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.949151873588562
    2. ',' → logprob: -1.449151873588562
    3. ' to' → logprob: -1.949151873588562
    4. ' with' → logprob: -2.0741519927978516
    5. '   ' → logprob: -2.6991519927978516
    6. ' and' → logprob: -3.9491519927978516
    7. ' where' → logprob: -5.699151992797852
    8. ' that' → logprob: -5.699151992797852
    9. '.
' → logprob: -5.949151992797852
    10. '
' → logprob: -5.949151992797852

Token 186: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18858802318572998
    2. '.' → logprob: -2.0635881423950195
    3. ',' → logprob: -3.8135881423950195
    4. ' to' → logprob: -4.4385881423950195
    5. ' with' → logprob: -5.3135881423950195
    6. ' and' → logprob: -6.5635881423950195
    7. '    
' → logprob: -6.9385881423950195
    8. '
' → logprob: -7.3135881423950195
    9. '    ' → logprob: -7.6885881423950195
    10. '<|end|>' → logprob: -7.8135881423950195

Token 187: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27441295981407166
    2. ' to' → logprob: -2.3994128704071045
    3. ' with' → logprob: -2.8994128704071045
    4. ' and' → logprob: -3.7744128704071045
    5. ',' → logprob: -3.8994128704071045
    6. '
' → logprob: -4.399413108825684
    7. '.' → logprob: -4.649413108825684
    8. 'and' → logprob: -5.024413108825684
    9. 'with' → logprob: -5.149413108825684
    10. ' that' → logprob: -5.649413108825684

Token 188: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.2853068709373474
    2. ' both' → logprob: -2.535306930541992
    3. ' each' → logprob: -2.660306930541992
    4. ' a' → logprob: -3.285306930541992
    5. ' sides' → logprob: -4.035306930541992
    6. ' either' → logprob: -4.410306930541992
    7. ' ' → logprob: -4.535306930541992
    8. ' line' → logprob: -5.660306930541992
    9. 'the' → logprob: -5.785306930541992
    10. ' points' → logprob: -6.160306930541992

Token 189: ' outside' (ID: 7539)
  Prédit: ' same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' same' → logprob: -1.820158839225769
    2. ' base' → logprob: -1.820158839225769
    3. ' sides' → logprob: -1.945158839225769
    4. ' two' → logprob: -2.1951589584350586
    5. ' other' → logprob: -2.4451589584350586
    6. ' original' → logprob: -2.8201589584350586
    7. ' slack' → logprob: -3.5701589584350586
    8. ' extended' → logprob: -3.9451589584350586
    9. ' plane' → logprob: -3.9451589584350586
    10. ' sl' → logprob: -4.070158958435059

Token 190: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.08497186005115509
    2. '.' → logprob: -3.8349719047546387
    3. ',' → logprob: -4.209971904754639
    4. ' to' → logprob: -4.459971904754639
    5. ' with' → logprob: -4.459971904754639
    6. ' and' → logprob: -4.834971904754639
    7. '   ' → logprob: -5.709971904754639
    8. ' edges' → logprob: -6.084971904754639
    9. ' sides' → logprob: -6.334971904754639
    10. ' the' → logprob: -6.334971904754639

Token 191: ' ABC' (ID: 33047)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.21889665722846985
    2. 'the' → logprob: -2.5938966274261475
    3. ' ABC' → logprob: -2.7188966274261475
    4. ' triangle' → logprob: -3.4688966274261475
    5. 'ABC' → logprob: -4.218896865844727
    6. 'triangle' → logprob: -6.218896865844727
    7. ' sides' → logprob: -6.218896865844727
    8. 'AB' → logprob: -6.593896865844727
    9. ' triangles' → logprob: -6.593896865844727
    10. ' AB' → logprob: -7.093896865844727

Token 192: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.20982274413108826
    2. ',' → logprob: -2.459822654724121
    3. ' to' → logprob: -3.209822654724121
    4. '"""' → logprob: -4.209822654724121
    5. ' and' → logprob: -4.334822654724121
    6. '   ' → logprob: -4.709822654724121
    7. '."""' → logprob: -4.709822654724121
    8. '.
' → logprob: -5.084822654724121
    9. ' with' → logprob: -5.459822654724121
    10. '.

' → logprob: -6.959822654724121

Token 193: ' maximizing' (ID: 130999)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4968644380569458
    2. ' and' → logprob: -1.4968644380569458
    3. ' allowing' → logprob: -1.8718644380569458
    4. ' making' → logprob: -2.6218643188476562
    5. ' continuing' → logprob: -2.8718643188476562
    6. ' extending' → logprob: -2.9968643188476562
    7. ' which' → logprob: -3.2468643188476562
    8. ' where' → logprob: -3.6218643188476562
    9. ' with' → logprob: -3.6218643188476562
    10. '    ' → logprob: -3.9968643188476562

Token 194: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.007357086520642042
    2. 'the' → logprob: -5.007357120513916
    3. '
' → logprob: -8.257356643676758
    4. ' their' → logprob: -8.632356643676758
    5. '<|end|>' → logprob: -10.632356643676758
    6. '   ' → logprob: -10.757356643676758
    7. ' ' → logprob: -10.757356643676758
    8. '```' → logprob: -10.882356643676758
    9. ' a' → logprob: -11.007356643676758
    10. '_' → logprob: -11.132356643676758

Token 195: ' total' (ID: 3609)
  Prédit: 'skin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'skin' → logprob: -0.8512385487556458
    2. 'total' → logprob: -1.226238489151001
    3. ' total' → logprob: -2.101238489151001
    4. ' skin' → logprob: -3.101238489151001
    5. 'extended' → logprob: -3.601238489151001
    6. 'area' → logprob: -4.35123872756958
    7. 'sl' → logprob: -4.47623872756958
    8. 'surface' → logprob: -4.47623872756958
    9. 'sk' → logprob: -4.60123872756958
    10. 'combined' → logprob: -4.85123872756958

Token 196: ' visible' (ID: 15263)
  Prédit: ' skin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' skin' → logprob: -0.4371747374534607
    2. 'skin' → logprob: -1.4371747970581055
    3. ' area' → logprob: -2.9371747970581055
    4. ' extended' → logprob: -3.6871747970581055
    5. ' surface' → logprob: -4.4371747970581055
    6. 'area' → logprob: -5.5621747970581055
    7. 'extended' → logprob: -5.5621747970581055
    8. ' slack' → logprob: -5.5621747970581055
    9. 'sk' → logprob: -6.0621747970581055
    10. '_skin' → logprob: -6.0621747970581055

Token 197: ' area' (ID: 3624)
  Prédit: 'skin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'skin' → logprob: -0.7812231183052063
    2. ' skin' → logprob: -1.0312230587005615
    3. ' surface' → logprob: -2.1562230587005615
    4. ' area' → logprob: -3.4062230587005615
    5. 'surface' → logprob: -3.7812230587005615
    6. 'area' → logprob: -4.781223297119141
    7. '_skin' → logprob: -6.531223297119141
    8. ' triangle' → logprob: -7.156223297119141
    9. 'triangle' → logprob: -7.781223297119141
    10. ' extended' → logprob: -7.906223297119141

Token 198: ' M' (ID: 391)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23762625455856323
    2. '.' → logprob: -2.237626314163208
    3. '
' → logprob: -2.987626314163208
    4. '    
' → logprob: -3.112626314163208
    5. '

' → logprob: -6.362626075744629
    6. ':' → logprob: -6.612626075744629
    7. ',' → logprob: -6.862626075744629
    8. '    

' → logprob: -6.862626075744629
    9. '.
' → logprob: -6.987626075744629
    10. 'def' → logprob: -7.112626075744629

Token 199: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.33427730202674866
    2. '"""' → logprob: -2.584277391433716
    3. ')' → logprob: -3.334277391433716
    4. ',' → logprob: -3.584277391433716
    5. '"' → logprob: -4.084277153015137
    6. ' of' → logprob: -4.209277153015137
    7. 'ax' → logprob: -4.334277153015137
    8. '."""' → logprob: -4.459277153015137
    9. ':' → logprob: -4.709277153015137
    10. '"""
' → logprob: -5.084277153015137

Token 200: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04963641241192818
    2. '
' → logprob: -3.2996363639831543
    3. '    
' → logprob: -5.299636363983154
    4. '"""' → logprob: -6.049636363983154
    5. ' 
' → logprob: -6.799636363983154
    6. '    ' → logprob: -6.924636363983154
    7. '<|end|>' → logprob: -7.674636363983154
    8. ' """' → logprob: -7.924636363983154
    9. '    
    
' → logprob: -8.924636840820312
    10. '```' → logprob: -9.049636840820312

Token 201: ' """

' (ID: 28800)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12227284163236618
    2. '
' → logprob: -2.8722727298736572
    3. ' def' → logprob: -3.8722727298736572
    4. '"""' → logprob: -3.9972727298736572
    5. 'def' → logprob: -4.872272968292236
    6. ' """' → logprob: -5.372272968292236
    7. '    
' → logprob: -5.747272968292236
    8. ' 
' → logprob: -6.497272968292236
    9. '    ' → logprob: -7.122272968292236
    10. ' """
' → logprob: -7.747272968292236

Token 202: '   ' (ID: 271)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.7764729857444763
    2. 'def' → logprob: -0.7764729857444763
    3. '   ' → logprob: -2.526473045349121
    4. '    
' → logprob: -12.651473045349121
    5. ' ' → logprob: -13.401473045349121
    6. '    ' → logprob: -13.776473045349121
    7. '
' → logprob: -14.401473045349121
    8. ' indentation' → logprob: -14.401473045349121
    9. '  ' → logprob: -14.776473045349121
    10. '	def' → logprob: -15.526473045349121

Token 203: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00010819212911883369
    2. ' def' → logprob: -9.250107765197754
    3. 'class' → logprob: -12.125107765197754
    4. 'import' → logprob: -12.875107765197754
    5. '   ' → logprob: -13.125107765197754
    6. '#' → logprob: -14.500107765197754
    7. 'from' → logprob: -14.875107765197754
    8. '@' → logprob: -15.125107765197754
    9. 'MAX' → logprob: -15.500107765197754
    10. 'de' → logprob: -15.750107765197754

Token 204: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.06261475384235382
    2. ' def' → logprob: -2.812614679336548
    3. ' init' → logprob: -8.312614440917969
    4. 'def' → logprob: -8.812614440917969
    5. '_init' → logprob: -9.312614440917969
    6. ' _' → logprob: -9.562614440917969
    7. '__' → logprob: -10.187614440917969
    8. '_' → logprob: -10.937614440917969
    9. ' ' → logprob: -11.062614440917969
    10. ' ___' → logprob: -11.312614440917969

Token 205: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.00021772195759695023
    2. 'nit' → logprob: -8.87521743774414
    3. 'in' → logprob: -10.50021743774414
    4. 'def' → logprob: -11.12521743774414
    5. 'i' → logprob: -11.50021743774414
    6. 'it' → logprob: -11.62521743774414
    7. 'int' → logprob: -12.25021743774414
    8. '_init' → logprob: -12.75021743774414
    9. 'ini' → logprob: -12.75021743774414
    10. 'n' → logprob: -13.25021743774414

Token 206: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0017007682472467422
    2. '(self' → logprob: -6.5017008781433105
    3. '__(
' → logprob: -9.376700401306152
    4. '(' → logprob: -9.751700401306152
    5. '__' → logprob: -9.876700401306152
    6. '_(' → logprob: -13.251700401306152
    7. ')(' → logprob: -14.501700401306152
    8. '__('' → logprob: -14.626700401306152
    9. '<>(' → logprob: -15.126700401306152
    10. '__((' → logprob: -15.126700401306152

Token 207: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005761472275480628
    2. ' self' → logprob: -7.500576019287109
    3. '
' → logprob: -11.12557601928711
    4. ')' → logprob: -12.37557601928711
    5. '   ' → logprob: -13.37557601928711
    6. ' ' → logprob: -13.50057601928711
    7. ',' → logprob: -14.37557601928711
    8. '  ' → logprob: -15.37557601928711
    9. '0' → logprob: -15.87557601928711
    10. '(self' → logprob: -16.75057601928711

Token 208: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001940040965564549
    2. 'self' → logprob: -8.75019359588623
    3. ' ,' → logprob: -10.37519359588623
    4. ',self' → logprob: -13.00019359588623
    5. ',
' → logprob: -14.12519359588623
    6. ')' → logprob: -14.12519359588623
    7. '(self' → logprob: -15.87519359588623
    8. '   ' → logprob: -16.125194549560547
    9. '‌,' → logprob: -16.750194549560547
    10. ',

' → logprob: -16.875194549560547

Token 209: ' a' (ID: 261)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.46263131499290466
    2. ' base' → logprob: -1.712631344795227
    3. 'base' → logprob: -2.2126312255859375
    4. ' self' → logprob: -2.5876312255859375
    5. '   ' → logprob: -6.0876312255859375
    6. 'abc' → logprob: -6.8376312255859375
    7. '       ' → logprob: -7.7126312255859375
    8. ' abc' → logprob: -8.025131225585938
    9. ' ' → logprob: -8.650131225585938
    10. 'original' → logprob: -8.712631225585938

Token 210: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1284867525100708
    2. ',' → logprob: -2.1284866333007812
    3. '_base' → logprob: -6.878486633300781
    4. 'b' → logprob: -9.128486633300781
    5. '_b' → logprob: -9.378486633300781
    6. '   ' → logprob: -10.003486633300781
    7. '_length' → logprob: -10.128486633300781
    8. ' ,' → logprob: -10.128486633300781
    9. ' :' → logprob: -10.503486633300781
    10. '=' → logprob: -10.503486633300781

Token 211: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.006744269747287035
    2. ' float' → logprob: -5.006744384765625
    3. 'int' → logprob: -11.006744384765625
    4. 'Tuple' → logprob: -12.756744384765625
    5. ')' → logprob: -13.006744384765625
    6. '   ' → logprob: -13.256744384765625
    7. '	float' → logprob: -13.881744384765625
    8. '=float' → logprob: -13.881744384765625
    9. '(float' → logprob: -14.256744384765625
    10. ' ' → logprob: -14.381744384765625

Token 212: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.7755875129951164e-05
    2. '):' → logprob: -10.50004768371582
    3. ')' → logprob: -11.75004768371582
    4. ' ,' → logprob: -12.37504768371582
    5. ',b' → logprob: -12.75004768371582
    6. ',
' → logprob: -13.12504768371582
    7. ',a' → logprob: -13.37504768371582
    8. 'a' → logprob: -15.50004768371582
    9. '):
' → logprob: -15.50004768371582
    10. ' ' → logprob: -15.62504768371582

Token 213: ' l' (ID: 305)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.05024198442697525
    2. ' b' → logprob: -3.4252419471740723
    3. 'c' → logprob: -4.800241947174072
    4. 'h' → logprob: -5.675241947174072
    5. 'a' → logprob: -6.550241947174072
    6. 'x' → logprob: -7.550241947174072
    7. '   ' → logprob: -7.675241947174072
    8. ' c' → logprob: -7.800241947174072
    9. ' ' → logprob: -7.925241947174072
    10. 't' → logprob: -8.17524242401123

Token 214: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23614127933979034
    2. 'ength' → logprob: -1.611141324043274
    3. '=' → logprob: -5.861141204833984
    4. 'en' → logprob: -6.236141204833984
    5. '):' → logprob: -6.361141204833984
    6. 'eng' → logprob: -7.361141204833984
    7. '   ' → logprob: -7.361141204833984
    8. ',' → logprob: -7.736141204833984
    9. '):
' → logprob: -7.986141204833984
    10. 'a' → logprob: -8.236141204833984

Token 215: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.006380791310220957
    2. ' float' → logprob: -5.506380558013916
    3. ':' → logprob: -7.006380558013916
    4. '=float' → logprob: -7.131380558013916
    5. 'int' → logprob: -9.006381034851074
    6. ')' → logprob: -9.256381034851074
    7. '(float' → logprob: -9.256381034851074
    8. 'loat' → logprob: -10.131381034851074
    9. 'ambda' → logprob: -10.256381034851074
    10. '	float' → logprob: -10.381381034851074

Token 216: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0586647093296051
    2. ',' → logprob: -2.9336647987365723
    3. ')' → logprob: -5.808664798736572
    4. '):
' → logprob: -7.183664798736572
    5. ' ):' → logprob: -11.808664321899414
    6. '   ' → logprob: -12.933664321899414
    7. ':' → logprob: -13.308664321899414
    8. '):
' → logprob: -14.058664321899414
    9. ',
' → logprob: -14.808664321899414
    10. ' ' → logprob: -14.933664321899414

Token 217: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.6894170045852661
    2. 'b' → logprob: -2.1894168853759766
    3. 'h' → logprob: -2.1894168853759766
    4. 'c' → logprob: -2.3144168853759766
    5. 'd' → logprob: -2.5644168853759766
    6. 'm' → logprob: -2.9394168853759766
    7. 's' → logprob: -3.0644168853759766
    8. 'r' → logprob: -3.1894168853759766
    9. 'n' → logprob: -3.3144168853759766
    10. 'w' → logprob: -3.4394168853759766

Token 218: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.8550976164988242e-05
    2. '=' → logprob: -11.625018119812012
    3. ')' → logprob: -12.750018119812012
    4. ' :' → logprob: -12.750018119812012
    5. '):' → logprob: -13.125018119812012
    6. '=None' → logprob: -14.000018119812012
    7. ':int' → logprob: -15.375018119812012
    8. '_:' → logprob: -15.875018119812012
    9. ' ' → logprob: -16.500019073486328
    10. '0' → logprob: -16.750019073486328

Token 219: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.1741505265235901
    2. ' float' → logprob: -2.1741504669189453
    3. '0' → logprob: -3.6741504669189453
    4. 'None' → logprob: -4.174150466918945
    5. ' None' → logprob: -5.424150466918945
    6. ' ' → logprob: -7.674150466918945
    7. ')' → logprob: -8.424150466918945
    8. '1' → logprob: -9.424150466918945
    9. 'int' → logprob: -10.799150466918945
    10. '   ' → logprob: -10.986650466918945

Token 220: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09367401152849197
    2. ')' → logprob: -2.4686739444732666
    3. ',' → logprob: -5.593674182891846
    4. '=' → logprob: -7.468674182891846
    5. '):
' → logprob: -8.218673706054688
    6. '=None' → logprob: -9.468673706054688
    7. ':' → logprob: -9.593673706054688
    8. ' ):' → logprob: -12.093673706054688
    9. ' =' → logprob: -12.468673706054688
    10. '):
' → logprob: -13.593673706054688

Token 221: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04884521663188934
    2. ':' → logprob: -3.1738452911376953
    3. ':
' → logprob: -5.923845291137695
    4. '):
' → logprob: -6.298845291137695
    5. ',' → logprob: -7.423845291137695
    6. '):' → logprob: -7.673845291137695
    7. ')' → logprob: -9.298845291137695
    8. '<|end|>' → logprob: -9.798845291137695
    9. 'self' → logprob: -10.298845291137695
    10. '   ' → logprob: -10.673845291137695

Token 222: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.10905413329601288
    2. '       ' → logprob: -2.3590540885925293
    3. ' self' → logprob: -4.734054088592529
    4. '   ' → logprob: -11.609054565429688
    5. '	self' → logprob: -12.484054565429688
    6. 'super' → logprob: -13.234054565429688
    7. ' ' → logprob: -13.734054565429688
    8. '
' → logprob: -14.734054565429688
    9. '#' → logprob: -14.984054565429688
    10. 'import' → logprob: -15.109054565429688

Token 223: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.01905573345720768
    2. ' =' → logprob: -4.5190558433532715
    3. ' .' → logprob: -5.3940558433532715
    4. 'a' → logprob: -6.6440558433532715
    5. '.' → logprob: -7.1440558433532715
    6. '=' → logprob: -7.7690558433532715
    7. '_a' → logprob: -8.269055366516113
    8. '=a' → logprob: -8.269055366516113
    9. ' a' → logprob: -9.144055366516113
    10. '._' → logprob: -9.644055366516113

Token 224: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16042782366275787
    2. '=' → logprob: -1.9104278087615967
    3. ',' → logprob: -8.535428047180176
    4. ' ' → logprob: -12.785428047180176
    5. '=a' → logprob: -12.910428047180176
    6. ' ,' → logprob: -13.910428047180176
    7. ' =
' → logprob: -15.160428047180176
    8. 'a' → logprob: -15.285428047180176
    9. '	' → logprob: -16.03542709350586
    10. ',a' → logprob: -16.16042709350586

Token 225: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06196959316730499
    2. ' a' → logprob: -2.811969518661499
    3. '	a' → logprob: -13.436969757080078
    4. 'l' → logprob: -15.061969757080078
    5. '_a' → logprob: -16.436969757080078
    6. ' l' → logprob: -17.061969757080078
    7. 'x' → logprob: -17.311969757080078
    8. ' ' → logprob: -19.686969757080078
    9. ' ' → logprob: -19.936969757080078
    10. ' x' → logprob: -20.186969757080078

Token 226: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3086220920085907
    2. '<|end|>' → logprob: -1.683622121810913
    3. '
' → logprob: -2.683622121810913
    4. ',' → logprob: -5.308621883392334
    5. '<|end|>' → logprob: -5.558621883392334
    6. ' ' → logprob: -7.433621883392334
    7. '        
' → logprob: -7.433621883392334
    8. ' 
' → logprob: -7.558621883392334
    9. '  
' → logprob: -8.308622360229492
    10. '	' → logprob: -9.058622360229492

Token 227: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0048864660784602165
    2. 'self' → logprob: -5.504886627197266
    3. ' self' → logprob: -8.004886627197266
    4. '<|end|>' → logprob: -8.379886627197266
    5. '
' → logprob: -8.754886627197266
    6. ',' → logprob: -10.754886627197266
    7. 'import' → logprob: -10.879886627197266
    8. '   ' → logprob: -11.504886627197266
    9. '      ' → logprob: -12.004886627197266
    10. ' ' → logprob: -12.004886627197266

Token 228: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.02033854089677334
    2. ' self' → logprob: -4.020338535308838
    3. 'l' → logprob: -6.145338535308838
    4. '       ' → logprob: -10.770339012145996
    5. ' l' → logprob: -11.020339012145996
    6. 's' → logprob: -13.520339012145996
    7. '
' → logprob: -13.895339012145996
    8. '	self' → logprob: -13.895339012145996
    9. ' ' → logprob: -14.395339012145996
    10. '   ' → logprob: -14.895339012145996

Token 229: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -0.32450631260871887
    2. '.' → logprob: -1.3245062828063965
    3. 'l' → logprob: -4.9495062828063965
    4. ' .' → logprob: -7.0745062828063965
    5. '_l' → logprob: -7.1995062828063965
    6. ' =' → logprob: -7.1995062828063965
    7. '.a' → logprob: -7.9495062828063965
    8. '=' → logprob: -8.074506759643555
    9. '_' → logprob: -8.199506759643555
    10. ' l' → logprob: -8.324506759643555

Token 230: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5762070417404175
    2. '=' → logprob: -0.8262070417404175
    3. ' ' → logprob: -8.826207160949707
    4. '<|end|>' → logprob: -9.451207160949707
    5. ',' → logprob: -10.826207160949707
    6. ' =
' → logprob: -12.201207160949707
    7. '+' → logprob: -13.076207160949707
    8. 'x' → logprob: -13.201207160949707
    9. ' ' → logprob: -13.451207160949707
    10. '=
' → logprob: -13.576207160949707

Token 231: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.02979203499853611
    2. ' l' → logprob: -3.529792070388794
    3. 'x' → logprob: -10.154791831970215
    4. '	l' → logprob: -13.404791831970215
    5. ' x' → logprob: -13.904791831970215
    6. ' ' → logprob: -15.904791831970215
    7. '   ' → logprob: -16.90479278564453
    8. '_l' → logprob: -17.02979278564453
    9. '­l' → logprob: -17.77979278564453
    10. '    ' → logprob: -18.15479278564453

Token 232: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003730845171958208
    2. '
' → logprob: -6.378730773925781
    3. ',' → logprob: -7.003730773925781
    4. 'self' → logprob: -7.128730773925781
    5. '<|end|>' → logprob: -8.878730773925781
    6. '   ' → logprob: -10.253730773925781
    7. ',
' → logprob: -10.503730773925781
    8. '        
' → logprob: -11.003730773925781
    9. ' self' → logprob: -11.003730773925781
    10. '      ' → logprob: -11.253730773925781

Token 233: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0039182258769869804
    2. 'self' → logprob: -5.628918170928955
    3. ' self' → logprob: -8.878918647766113
    4. ',' → logprob: -9.003918647766113
    5. '
' → logprob: -10.878918647766113
    6. '<|end|>' → logprob: -11.503918647766113
    7. '   ' → logprob: -11.753918647766113
    8. '	' → logprob: -12.753918647766113
    9. '      ' → logprob: -12.753918647766113
    10. '	self' → logprob: -12.878918647766113

Token 234: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.005951314233243465
    2. ' self' → logprob: -5.255951404571533
    3. '       ' → logprob: -7.255951404571533
    4. '
' → logprob: -11.630950927734375
    5. '	self' → logprob: -13.755950927734375
    6. '   ' → logprob: -14.380950927734375
    7. ' ' → logprob: -15.005950927734375
    8. 'x' → logprob: -16.005950927734375
    9. '        
' → logprob: -16.380950927734375
    10. '     ' → logprob: -16.505950927734375

Token 235: '.x' (ID: 3700)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2705959975719452
    2. '.x' → logprob: -1.5205960273742676
    3. 'x' → logprob: -4.020596027374268
    4. ' .' → logprob: -8.02059555053711
    5. '_x' → logprob: -9.14559555053711
    6. ' x' → logprob: -10.27059555053711
    7. '=' → logprob: -10.89559555053711
    8. ' ' → logprob: -11.02059555053711
    9. ' =' → logprob: -11.27059555053711
    10. '_' → logprob: -11.89559555053711

Token 236: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061978328973054886
    2. ' =' → logprob: -2.811978340148926
    3. ' ' → logprob: -12.186978340148926
    4. '<|end|>' → logprob: -13.311978340148926
    5. '=
' → logprob: -13.561978340148926
    6. ')' → logprob: -14.061978340148926
    7. ' =
' → logprob: -14.061978340148926
    8. '=x' → logprob: -14.436978340148926
    9. ',' → logprob: -16.18697738647461
    10. '	' → logprob: -16.68697738647461

Token 237: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12692926824092865
    2. ' x' → logprob: -2.12692928314209
    3. '0' → logprob: -14.50192928314209
    4. '	x' → logprob: -15.25192928314209
    5. '<|end|>' → logprob: -15.25192928314209
    6. ' ' → logprob: -16.001928329467773
    7. ' ' → logprob: -17.251928329467773
    8. ')x' → logprob: -18.126928329467773
    9. '<|end|>' → logprob: -18.251928329467773
    10. '_x' → logprob: -19.126928329467773

Token 238: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 239: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 240: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.2865804433822632
    2. '   ' → logprob: -1.4115804433822632
    3. ' def' → logprob: -5.286580562591553
    4. '
' → logprob: -8.911580085754395
    5. '    
' → logprob: -9.161580085754395
    6. '<|end|>' → logprob: -10.286580085754395
    7. ')' → logprob: -10.911580085754395
    8. '       ' → logprob: -11.411580085754395
    9. ' ' → logprob: -11.411580085754395
    10. '	def' → logprob: -11.661580085754395

Token 241: ' original' (ID: 4756)
  Prédit: ' optimize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' optimize' → logprob: -0.5808161497116089
    2. ' maximize' → logprob: -1.7058161497116089
    3. ' total' → logprob: -1.8308161497116089
    4. ' compute' → logprob: -3.7058162689208984
    5. ' max' → logprob: -3.7058162689208984
    6. ' calculate' → logprob: -4.330816268920898
    7. ' area' → logprob: -4.455816268920898
    8. 'maximize' → logprob: -5.330816268920898
    9. ' visible' → logprob: -6.080816268920898
    10. '_opt' → logprob: -6.205816268920898

Token 242: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -0.23176445066928864
    2. '_triangle' → logprob: -1.6067644357681274
    3. '_side' → logprob: -5.731764316558838
    4. '_length' → logprob: -6.606764316558838
    5. '_' → logprob: -7.731764316558838
    6. '_base' → logprob: -7.856764316558838
    7. '_skin' → logprob: -8.356764793395996
    8. '_s' → logprob: -8.856764793395996
    9. '_visible' → logprob: -9.356764793395996
    10. '_height' → logprob: -9.731764793395996

Token 243: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0007189844618551433
    2. '(' → logprob: -7.25071907043457
    3. ' (' → logprob: -12.12571907043457
    4. 'self' → logprob: -13.25071907043457
    5. '(
' → logprob: -13.87571907043457
    6. '(s' → logprob: -14.75071907043457
    7. '   ' → logprob: -15.50071907043457
    8. ' ' → logprob: -16.25071907043457
    9. 's' → logprob: -16.37571907043457
    10. ' self' → logprob: -16.37571907043457

Token 244: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016472071874886751
    2. '):' → logprob: -7.251646995544434
    3. '(self' → logprob: -7.501646995544434
    4. 'self' → logprob: -8.376646995544434
    5. '()' → logprob: -9.626646995544434
    6. ' )' → logprob: -10.126646995544434
    7. '):
' → logprob: -10.501646995544434
    8. '   ' → logprob: -11.501646995544434
    9. ')->' → logprob: -12.876646995544434
    10. '():' → logprob: -13.126646995544434

Token 245: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.11251822113990784
    2. ':' → logprob: -2.737518310546875
    3. '->' → logprob: -3.612518310546875
    4. ')' → logprob: -4.487518310546875
    5. ' ' → logprob: -6.362518310546875
    6. ')->' → logprob: -7.112518310546875
    7. '   ' → logprob: -7.237518310546875
    8. ' :' → logprob: -9.862518310546875
    9. '  ' → logprob: -10.612518310546875
    10. '       ' → logprob: -10.612518310546875

Token 246: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.12693724036216736
    2. ' float' → logprob: -2.1269371509552
    3. '(float' → logprob: -11.876936912536621
    4. '	float' → logprob: -14.626936912536621
    5. '   ' → logprob: -14.751936912536621
    6. 'Float' → logprob: -15.126936912536621
    7. ' ' → logprob: -15.251936912536621
    8. 'Is' → logprob: -15.376936912536621
    9. '=float' → logprob: -15.876936912536621
    10. 'flo' → logprob: -16.751937866210938

Token 247: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006142441648989916
    2. '(self' → logprob: -5.881142616271973
    3. ':
' → logprob: -5.881142616271973
    4. '->' → logprob: -9.131142616271973
    5. '       ' → logprob: -9.256142616271973
    6. '(' → logprob: -9.381142616271973
    7. '():' → logprob: -9.631142616271973
    8. '   ' → logprob: -10.131142616271973
    9. 'self' → logprob: -10.131142616271973
    10. ' ->' → logprob: -10.256142616271973

Token 248: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015217094914987683
    2. ':' → logprob: -9.875152587890625
    3. 's' → logprob: -9.875152587890625
    4. 'a' → logprob: -10.875152587890625
    5. 'n' → logprob: -12.500152587890625
    6. 'b' → logprob: -12.625152587890625
    7. 'import' → logprob: -12.875152587890625
    8. '#' → logprob: -13.000152587890625
    9. ' s' → logprob: -13.000152587890625
    10. 'base' → logprob: -13.125152587890625

Token 249: ' """' (ID: 9280)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6546398401260376
    2. 'h' → logprob: -1.7796398401260376
    3. 'base' → logprob: -2.154639720916748
    4. '#' → logprob: -3.029639720916748
    5. '   ' → logprob: -3.404639720916748
    6. 'height' → logprob: -3.404639720916748
    7. 'half' → logprob: -3.529639720916748
    8. 's' → logprob: -3.779639720916748
    9. 'b' → logprob: -4.654639720916748
    10. 'a' → logprob: -5.029639720916748

Token 250: 'Area' (ID: 10280)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.6740432381629944
    2. 'return' → logprob: -1.6740431785583496
    3. '#' → logprob: -2.2990431785583496
    4. 'height' → logprob: -2.5490431785583496
    5. '   ' → logprob: -3.1740431785583496
    6. '       ' → logprob: -3.9240431785583496
    7. 'half' → logprob: -4.17404317855835
    8. '"""' → logprob: -4.29904317855835
    9. 'base' → logprob: -4.54904317855835
    10. 's' → logprob: -4.79904317855835

Token 251: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.10181985050439835
    2. '()' → logprob: -2.7268197536468506
    3. '       ' → logprob: -4.22681999206543
    4. ' =' → logprob: -5.22681999206543
    5. '   ' → logprob: -5.22681999206543
    6. 'of' → logprob: -6.47681999206543
    7. ')' → logprob: -6.60181999206543
    8. '(self' → logprob: -6.85181999206543
    9. '=' → logprob: -7.10181999206543
    10. ':' → logprob: -7.85181999206543

Token 252: ' original' (ID: 4756)
  Prédit: 'Is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Is' → logprob: -0.3195495009422302
    2. ' the' → logprob: -2.444549560546875
    3. 'the' → logprob: -2.444549560546875
    4. 'isos' → logprob: -2.819549560546875
    5. ' an' → logprob: -3.819549560546875
    6. 'self' → logprob: -5.069549560546875
    7. ' Is' → logprob: -5.569549560546875
    8. 'Triangle' → logprob: -6.069549560546875
    9. 'an' → logprob: -6.444549560546875
    10. ' self' → logprob: -7.194549560546875

Token 253: ' is' (ID: 382)
  Prédit: ' triangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' triangle' → logprob: -1.327976107597351
    2. 'ABC' → logprob: -1.827976107597351
    3. 'isos' → logprob: -2.0779762268066406
    4. ' equ' → logprob: -2.2029762268066406
    5. ' ABC' → logprob: -2.4529762268066406
    6. ' is' → logprob: -2.4529762268066406
    7. 'equ' → logprob: -3.0779762268066406
    8. 'triangle' → logprob: -3.2029762268066406
    9. 'abc' → logprob: -3.8279762268066406
    10. 'Triangle' → logprob: -3.9529762268066406

Token 254: 'os' (ID: 365)
  Prédit: 'os'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.0009418348199687898
    2. 'oc' → logprob: -7.625941753387451
    3. 'o' → logprob: -9.37594223022461
    4. 's' → logprob: -10.37594223022461
    5. '
' → logprob: -10.37594223022461
    6. '"""
' → logprob: -10.37594223022461
    7. 'osc' → logprob: -10.50094223022461
    8. '   ' → logprob: -10.50094223022461
    9. 'cos' → logprob: -10.93844223022461
    10. '0' → logprob: -11.00094223022461

Token 255: 'cel' (ID: 4610)
  Prédit: 'cel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cel' → logprob: -0.02443244680762291
    2. 'os' → logprob: -3.899432420730591
    3. 'sc' → logprob: -6.77443265914917
    4. 'c' → logprob: -7.27443265914917
    5. '   ' → logprob: -7.77443265914917
    6. '       ' → logprob: -7.89943265914917
    7. '```' → logprob: -8.024432182312012
    8. 'oc' → logprob: -8.399432182312012
    9. '
' → logprob: -8.399432182312012
    10. '``' → logprob: -9.024432182312012

Token 256: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -3.666993507067673e-05
    2. 'esc' → logprob: -11.125036239624023
    3. 'ces' → logprob: -11.625036239624023
    4. '   ' → logprob: -12.125036239624023
    5. 'os' → logprob: -14.000036239624023
    6. 'ec' → logprob: -14.000036239624023
    7. '#' → logprob: -14.250036239624023
    8. 'cel' → logprob: -14.250036239624023
    9. 'eles' → logprob: -14.250036239624023
    10. '

' → logprob: -14.500036239624023

Token 257: ' triangle' (ID: 41487)
  Prédit: ' triangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' triangle' → logprob: -0.11394813656806946
    2. 'triangle' → logprob: -2.238948106765747
    3. '_triangle' → logprob: -7.613948345184326
    4. 'Triangle' → logprob: -7.863948345184326
    5. 'tri' → logprob: -9.363947868347168
    6. ' Triangle' → logprob: -9.988947868347168
    7. 'trian' → logprob: -10.738947868347168
    8. ' ' → logprob: -10.988947868347168
    9. ' base' → logprob: -11.488947868347168
    10. '   ' → logprob: -11.863947868347168

Token 258: ' ABC' (ID: 33047)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0400115251541138
    2. '"""' → logprob: -1.4150115251541138
    3. ' with' → logprob: -1.7900115251541138
    4. '(' → logprob: -2.915011405944824
    5. ')' → logprob: -3.665011405944824
    6. '   ' → logprob: -3.915011405944824
    7. 'with' → logprob: -4.040011405944824
    8. 'ABC' → logprob: -4.290011405944824
    9. '"""
' → logprob: -4.415011405944824
    10. '```' → logprob: -4.415011405944824

Token 259: '"""
' (ID: 15611)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4311026632785797
    2. ')' → logprob: -1.5561026334762573
    3. '   ' → logprob: -3.181102752685547
    4. '"""' → logprob: -3.431102752685547
    5. ':' → logprob: -4.056102752685547
    6. ' with' → logprob: -4.306102752685547
    7. '"""
' → logprob: -4.306102752685547
    8. '
' → logprob: -5.931102752685547
    9. '<|end|>' → logprob: -5.931102752685547
    10. ')
' → logprob: -6.181102752685547

Token 260: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001729444949887693
    2. 's' → logprob: -6.876729488372803
    3. 'a' → logprob: -8.126729011535645
    4. 'return' → logprob: -8.251729011535645
    5. '   ' → logprob: -10.001729011535645
    6. 'import' → logprob: -10.501729011535645
    7. 'base' → logprob: -11.001729011535645
    8. 'side' → logprob: -11.626729011535645
    9. 'h' → logprob: -11.751729011535645
    10. ' s' → logprob: -11.751729011535645

Token 261: ' base' (ID: 3611)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5501366853713989
    2. 'h' → logprob: -1.425136685371399
    3. 'height' → logprob: -2.5501365661621094
    4. 's' → logprob: -3.0501365661621094
    5. 'base' (adapté à ' base') → logprob: -3.0501365661621094
    6. 'b' → logprob: -5.675136566162109
    7. '   ' → logprob: -6.175136566162109
    8. 'triangle' → logprob: -6.800136566162109
    9. 'isos' → logprob: -7.300136566162109
    10. 'half' → logprob: -7.675136566162109

Token 262: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7429991960525513
    2. '=' → logprob: -1.1179991960525513
    3. ' /' → logprob: -2.3679990768432617
    4. ' *' → logprob: -2.7429990768432617
    5. '/' → logprob: -4.492999076843262
    6. '=self' → logprob: -4.617999076843262
    7. ')' → logprob: -6.117999076843262
    8. ' ' → logprob: -6.242999076843262
    9. ' **' → logprob: -6.367999076843262
    10. ' self' → logprob: -6.492999076843262

Token 263: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001238004770129919
    2. ' self' → logprob: -9.000123977661133
    3. '       ' → logprob: -15.250123977661133
    4. '   ' → logprob: -16.875123977661133
    5. '=self' → logprob: -17.625123977661133
    6. 'a' → logprob: -17.875123977661133
    7. '(self' → logprob: -18.000123977661133
    8. '           ' → logprob: -18.250123977661133
    9. '	self' → logprob: -18.625123977661133
    10. '0' → logprob: -19.625123977661133

Token 264: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.0001290454383706674
    2. '.' → logprob: -9.000128746032715
    3. 'a' → logprob: -12.250128746032715
    4. ' .' → logprob: -14.250128746032715
    5. '#a' → logprob: -17.50012969970703
    6. '.ai' → logprob: -18.00012969970703
    7. '​.' → logprob: -18.25012969970703
    8. '.l' → logprob: -18.50012969970703
    9. '.x' → logprob: -19.25012969970703
    10. '.b' → logprob: -19.37512969970703

Token 265: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26131510734558105
    2. '       ' → logprob: -1.511315107345581
    3. ',' → logprob: -6.13631534576416
    4. '/' → logprob: -6.13631534576416
    5. ' /' → logprob: -6.13631534576416
    6. 'self' → logprob: -7.01131534576416
    7. '        
' → logprob: -7.26131534576416
    8. 'l' → logprob: -8.38631534576416
    9. ' 
' → logprob: -8.38631534576416
    10. '
' → logprob: -9.26131534576416

Token 266: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005790081340819597
    2. ',' → logprob: -8.875578880310059
    3. 'length' → logprob: -9.000578880310059
    4. 'side' → logprob: -9.250578880310059
    5. '   ' → logprob: -9.625578880310059
    6. 'l' → logprob: -10.250578880310059
    7. ' length' → logprob: -10.750578880310059
    8. ' and' → logprob: -11.000578880310059
    9. 's' → logprob: -11.125578880310059
    10. ' side' → logprob: -11.750578880310059

Token 267: ' side' (ID: 4307)
  Prédit: 'side'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' (adapté à ' side') → logprob: -0.005419211462140083
    2. 'height' → logprob: -5.3804192543029785
    3. '#' → logprob: -8.75541877746582
    4. 'leg' → logprob: -9.00541877746582
    5. 'import' → logprob: -9.13041877746582
    6. '(' → logprob: -9.50541877746582
    7. '2' → logprob: -9.88041877746582
    8. ' side' → logprob: -10.13041877746582
    9. 'half' → logprob: -10.25541877746582
    10. 's' → logprob: -10.63041877746582

Token 268: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868749439716339
    2. '=' → logprob: -1.1368749141693115
    3. '=self' → logprob: -13.38687515258789
    4. ' ' → logprob: -13.88687515258789
    5. 's' → logprob: -14.38687515258789
    6. 'self' → logprob: -14.88687515258789
    7. ':' → logprob: -16.26187515258789
    8. '   ' → logprob: -16.63687515258789
    9. '```' → logprob: -16.76187515258789
    10. '=
' → logprob: -17.13687515258789

Token 269: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2862013280391693
    2. '(self' → logprob: -2.036201238632202
    3. ' self' → logprob: -2.286201238632202
    4. ' (' → logprob: -4.161201477050781
    5. 'math' → logprob: -7.661201477050781
    6. '(' → logprob: -8.286201477050781
    7. ' math' → logprob: -8.536201477050781
    8. '(math' → logprob: -9.286201477050781
    9. '(s' → logprob: -10.286201477050781
    10. '((' → logprob: -10.661201477050781

Token 270: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -0.0001637300301808864
    2. '.' → logprob: -9.125164031982422
    3. 'l' → logprob: -9.875164031982422
    4. '.a' → logprob: -13.125164031982422
    5. ' .' → logprob: -14.250164031982422
    6. '	l' → logprob: -15.125164031982422
    7. '   ' → logprob: -15.875164031982422
    8. '_l' → logprob: -16.250164031982422
    9. '```' → logprob: -17.375164031982422
    10. ' ' → logprob: -17.375164031982422

Token 271: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00016027313540689647
    2. 'return' → logprob: -9.375160217285156
    3. '
' → logprob: -10.250160217285156
    4. ' return' → logprob: -11.750160217285156
    5. '        
' → logprob: -12.125160217285156
    6. '<|end|>' → logprob: -12.500160217285156
    7. ',' → logprob: -12.875160217285156
    8. ')' → logprob: -13.000160217285156
    9. ' =' → logprob: -13.125160217285156
    10. '   ' → logprob: -13.125160217285156

Token 272: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000568998686503619
    2. 'return' → logprob: -7.750568866729736
    3. 'import' → logprob: -10.000569343566895
    4. ' return' → logprob: -10.750569343566895
    5. '
' → logprob: -11.250569343566895
    6. '<|end|>' → logprob: -11.250569343566895
    7. ',' → logprob: -11.500569343566895
    8. ')' → logprob: -11.875569343566895
    9. 's' → logprob: -12.625569343566895
    10. '        
' → logprob: -12.875569343566895

Token 273: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8469130992889404
    2. 'return' (adapté à ' return') → logprob: -0.9719130992889404
    3. 'isos' → logprob: -2.4719130992889404
    4. 'area' → logprob: -2.8469130992889404
    5. 's' → logprob: -4.4719133377075195
    6. 'triangle' → logprob: -4.5969133377075195
    7. 'base' → logprob: -5.3469133377075195
    8. 'iso' → logprob: -5.7219133377075195
    9. 't' → logprob: -5.8469133377075195
    10. 'is' → logprob: -5.9719133377075195

Token 274: ' Is' (ID: 2763)
  Prédit: 'Is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Is' → logprob: -0.05419549718499184
    2. 'math' → logprob: -3.0541954040527344
    3. '0' → logprob: -5.804195404052734
    4. 'self' → logprob: -7.429195404052734
    5. '(' → logprob: -7.804195404052734
    6. ' Is' → logprob: -7.804195404052734
    7. ' math' → logprob: -7.929195404052734
    8. '(Is' → logprob: -8.054195404052734
    9. 'Triangle' → logprob: -8.554195404052734
    10. '   ' → logprob: -9.804195404052734

Token 275: 'os' (ID: 365)
  Prédit: 'os'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -1.4617256056226324e-05
    2. 'oc' → logprob: -11.250014305114746
    3. 's' → logprob: -14.875014305114746
    4. '0' → logprob: -15.750014305114746
    5. 'cel' → logprob: -15.875014305114746
    6. 'cos' → logprob: -15.875014305114746
    7. 'Is' → logprob: -15.875014305114746
    8. '```' → logprob: -16.250015258789062
    9. 'sc' → logprob: -16.500015258789062
    10. 'o' → logprob: -16.625015258789062

Token 276: 'cel' (ID: 4610)
  Prédit: 'cel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cel' → logprob: -5.796184723294573e-06
    2. 'c' → logprob: -13.250005722045898
    3. '```' → logprob: -13.875005722045898
    4. 'sc' → logprob: -14.125005722045898
    5. 'os' → logprob: -14.125005722045898
    6. '   ' → logprob: -14.750005722045898
    7. 'oc' → logprob: -16.1250057220459
    8. '       ' → logprob: -16.2500057220459
    9. 'cles' → logprob: -16.3750057220459
    10. '     ' → logprob: -16.5000057220459

Token 277: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.00018816311785485595
    2. 'ces' → logprob: -8.625187873840332
    3. 'esc' → logprob: -12.375187873840332
    4. 'c' → logprob: -14.000187873840332
    5. 'cles' → logprob: -14.125187873840332
    6. '   ' → logprob: -14.625187873840332
    7. 'escence' → logprob: -14.875187873840332
    8. 'ec' → logprob: -15.125187873840332
    9. '\' → logprob: -15.750187873840332
    10. 'os' → logprob: -15.750187873840332

Token 278: 'Triangle' (ID: 62972)
  Prédit: 'Triangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Triangle' → logprob: -4.320199877838604e-07
    2. 'Area' → logprob: -16.0
    3. ' Triangle' → logprob: -16.5
    4. 'Triangles' → logprob: -16.75
    5. 'triangle' → logprob: -17.0
    6. '_triangle' → logprob: -17.625
    7. '```' → logprob: -18.125
    8. '(' → logprob: -18.25
    9. 'Tri' → logprob: -18.375
    10. '
' → logprob: -19.375

Token 279: '(base' (ID: 25314)
  Prédit: '(base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(base' → logprob: -0.00023929782037157565
    2. '(side' → logprob: -8.500239372253418
    3. '(' → logprob: -10.250239372253418
    4. '(area' → logprob: -15.625239372253418
    5. '(
' → logprob: -16.5002384185791
    6. ' (' → logprob: -17.6252384185791
    7. '(b' → logprob: -17.6252384185791
    8. '(self' → logprob: -17.7502384185791
    9. '(original' → logprob: -19.7502384185791
    10. '.base' → logprob: -19.8752384185791

Token 280: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.061054359131958e-06
    2. ' ,' → logprob: -11.875007629394531
    3. '=' → logprob: -14.500007629394531
    4. ',
' → logprob: -14.625007629394531
    5. ')' → logprob: -17.25000762939453
    6. ',

' → logprob: -18.25000762939453
    7. ').' → logprob: -18.37500762939453
    8. '‌,' → logprob: -19.87500762939453
    9. ',s' → logprob: -20.00000762939453
    10. '
' → logprob: -20.50000762939453

Token 281: ' side' (ID: 4307)
  Prédit: 'side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.004078878089785576
    2. ' side' → logprob: -5.5040788650512695
    3. ')' → logprob: -15.25407886505127
    4. '	side' → logprob: -16.129079818725586
    5. '(side' → logprob: -17.629079818725586
    6. '   ' → logprob: -17.754079818725586
    7. '       ' → logprob: -18.129079818725586
    8. '.side' → logprob: -18.129079818725586
    9. ' ' → logprob: -18.629079818725586
    10. 'Side' → logprob: -18.629079818725586

Token 282: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -1.0564331205387134e-05
    2. ')' → logprob: -11.50001049041748
    3. ' ).' → logprob: -14.87501049041748
    4. '   ' → logprob: -17.125011444091797
    5. ' ' → logprob: -17.625011444091797
    6. '.' → logprob: -19.875011444091797
    7. ')
' → logprob: -20.000011444091797
    8. ')._' → logprob: -20.125011444091797
    9. '`).' → logprob: -20.375011444091797
    10. '  ' → logprob: -20.375011444091797

Token 283: 'area' (ID: 7502)
  Prédit: 'area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: 0.0
    2. ' area' → logprob: -18.25
    3. '.area' → logprob: -22.5
    4. '_area' → logprob: -24.0
    5. ' ' → logprob: -24.375
    6. 'are' → logprob: -24.75
    7. '   ' → logprob: -25.125
    8. '(area' → logprob: -25.25
    9. '-area' → logprob: -25.875
    10. 'a' → logprob: -25.875

Token 284: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05764469504356384
    2. '()
' → logprob: -3.6826446056365967
    3. '
' → logprob: -4.557644844055176
    4. '()

' → logprob: -4.557644844055176
    5. '   ' → logprob: -5.307644844055176
    6. '<|end|>' → logprob: -5.932644844055176
    7. '

' → logprob: -7.057644844055176
    8. '(' → logprob: -7.807644844055176
    9. '(
' → logprob: -8.432644844055176
    10. '()*' → logprob: -9.057644844055176

Token 285: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 286: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.2303493618965149
    2. '   ' → logprob: -1.6053493022918701
    3. ' def' → logprob: -5.480349540710449
    4. '<|end|>' → logprob: -7.855349540710449
    5. '
' → logprob: -9.10534954071045
    6. ' ' → logprob: -9.60534954071045
    7. '	def' → logprob: -9.73034954071045
    8. '<|end|>' → logprob: -9.98034954071045
    9. '    
' → logprob: -10.23034954071045
    10. '  ' → logprob: -10.85534954071045

Token 287: ' max' (ID: 2999)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.1025936603546143
    2. 'max' → logprob: -1.4775936603546143
    3. 'maximize' → logprob: -1.8525936603546143
    4. ' total' → logprob: -2.6025936603546143
    5. 'opt' → logprob: -2.9775936603546143
    6. ' max' → logprob: -3.7275936603546143
    7. ' optimize' → logprob: -3.7275936603546143
    8. 'extended' → logprob: -3.8525936603546143
    9. ' maximize' → logprob: -4.102593421936035
    10. 'optimal' → logprob: -4.227593421936035

Token 288: '_extended' (ID: 147320)
  Prédit: '_area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -0.15008032321929932
    2. '_visible' → logprob: -2.6500802040100098
    3. '_sl' → logprob: -3.2750802040100098
    4. '_total' → logprob: -4.15008020401001
    5. '_add' → logprob: -5.65008020401001
    6. '_extended' → logprob: -5.90008020401001
    7. '_possible' → logprob: -6.15008020401001
    8. 'imize' → logprob: -6.27508020401001
    9. '_visibility' → logprob: -7.15008020401001
    10. '_x' → logprob: -7.40008020401001

Token 289: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -0.00912997405976057
    2. '_skin' → logprob: -4.884130001068115
    3. '_visible' → logprob: -6.884130001068115
    4. 'area' → logprob: -8.884129524230957
    5. '_sl' → logprob: -9.009129524230957
    6. '_' → logprob: -9.759129524230957
    7. '_visibility' → logprob: -9.759129524230957
    8. '_surface' → logprob: -11.509129524230957
    9. '_length' → logprob: -11.509129524230957
    10. '_m' → logprob: -11.509129524230957

Token 290: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00011915886716451496
    2. '(' → logprob: -9.37511920928955
    3. ' (' → logprob: -10.37511920928955
    4. '   ' → logprob: -13.75011920928955
    5. '_(' → logprob: -14.25011920928955
    6. 'self' → logprob: -14.50011920928955
    7. '(
' → logprob: -16.000118255615234
    8. '       ' → logprob: -16.125118255615234
    9. '```' → logprob: -16.125118255615234
    10. 'def' → logprob: -16.625118255615234

Token 291: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004286980722099543
    2. 'self' → logprob: -6.004286766052246
    3. '(self' → logprob: -7.129286766052246
    4. ' )' → logprob: -7.254286766052246
    5. '   ' → logprob: -8.504286766052246
    6. ',' → logprob: -9.879286766052246
    7. '       ' → logprob: -11.129286766052246
    8. ' ' → logprob: -11.379286766052246
    9. ' self' → logprob: -12.254286766052246
    10. ')->' → logprob: -12.379286766052246

Token 292: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.08623171597719193
    2. '->' → logprob: -2.8362317085266113
    3. '(self' → logprob: -4.336231708526611
    4. ')' → logprob: -4.586231708526611
    5. '   ' → logprob: -8.46123218536377
    6. ':' → logprob: -8.58623218536377
    7. ')->' → logprob: -8.71123218536377
    8. '(' → logprob: -9.83623218536377
    9. ' ' → logprob: -10.46123218536377
    10. 'self' → logprob: -10.58623218536377

Token 293: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.03804344683885574
    2. ' float' → logprob: -3.28804349899292
    3. '   ' → logprob: -14.163043022155762
    4. '(float' → logprob: -15.288043022155762
    5. 'None' → logprob: -15.288043022155762
    6. ' ' → logprob: -15.413043022155762
    7. '	float' → logprob: -15.663043022155762
    8. 'f' → logprob: -16.413043975830078
    9. 'loat' → logprob: -17.288043975830078
    10. '=float' → logprob: -17.288043975830078

Token 294: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3145820200443268
    2. ':
' → logprob: -1.3145819902420044
    3. '       ' → logprob: -7.564581871032715
    4. '(self' → logprob: -8.189581871032715
    5. '   ' → logprob: -8.564581871032715
    6. ':
' → logprob: -8.564581871032715
    7. 'self' → logprob: -9.564581871032715
    8. '):
' → logprob: -11.564581871032715
    9. '->' → logprob: -11.689581871032715
    10. ')' → logprob: -11.689581871032715

Token 295: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00025788258062675595
    2. '#' → logprob: -10.12525749206543
    3. ':' → logprob: -10.37525749206543
    4. ' x' → logprob: -10.50025749206543
    5. '
' → logprob: -10.62525749206543
    6. '   ' → logprob: -11.00025749206543
    7. 'x' → logprob: -11.00025749206543
    8. '        
' → logprob: -11.00025749206543
    9. 'import' → logprob: -11.75025749206543
    10. ',' → logprob: -12.12525749206543

Token 296: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3328712284564972
    2. 'max' → logprob: -1.7078711986541748
    3. 'best' → logprob: -3.082871198654175
    4. '#' → logprob: -3.707871198654175
    5. 'x' → logprob: -4.582871437072754
    6. 'def' → logprob: -5.207871437072754
    7. 'base' → logprob: -5.582871437072754
    8. 'import' → logprob: -5.582871437072754
    9. 'raise' → logprob: -6.457871437072754
    10. 'a' → logprob: -6.582871437072754

Token 297: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.042334720492362976
    2. 'max' → logprob: -3.542334794998169
    3. 'best' → logprob: -5.54233455657959
    4. 'def' → logprob: -6.04233455657959
    5. '"""' → logprob: -6.66733455657959
    6. '#' → logprob: -6.66733455657959
    7. '   ' → logprob: -6.91733455657959
    8. ' max' → logprob: -6.91733455657959
    9. 'x' → logprob: -8.16733455657959
    10. '"""
' → logprob: -8.29233455657959

Token 298: ' Compute' (ID: 45438)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6325164437294006
    2. 'def' → logprob: -1.3825163841247559
    3. 'max' → logprob: -2.007516384124756
    4. 'best' → logprob: -3.132516384124756
    5. 'import' → logprob: -4.257516384124756
    6. '       ' → logprob: -5.257516384124756
    7. 'result' → logprob: -6.007516384124756
    8. '"""
' → logprob: -6.257516384124756
    9. ' max' → logprob: -6.382516384124756
    10. 'x' → logprob: -6.382516384124756

Token 299: ' the' (ID: 290)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.015121340751648
    2. '       ' → logprob: -1.265121340751648
    3. 'max' → logprob: -1.765121340751648
    4. ' the' → logprob: -2.1401214599609375
    5. ' best' → logprob: -3.3901214599609375
    6. 'the' → logprob: -4.5151214599609375
    7. 'best' → logprob: -5.2651214599609375
    8. ' maximum' → logprob: -5.3901214599609375
    9. 'def' → logprob: -5.5151214599609375
    10. ' maximal' → logprob: -6.6401214599609375

Token 300: ' maximum' (ID: 10562)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.0126484632492065
    2. 'def' → logprob: -1.1376484632492065
    3. 'from' → logprob: -2.012648582458496
    4. 'best' → logprob: -2.387648582458496
    5. 'import' → logprob: -3.262648582458496
    6. '       ' → logprob: -3.887648582458496
    7. ' best' → logprob: -4.512648582458496
    8. ' max' → logprob: -5.012648582458496
    9. '#' → logprob: -5.137648582458496
    10. '   ' → logprob: -6.137648582458496

Token 301: ' combined' (ID: 15890)
  Prédit: ' area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.6266899704933167
    2. ' extended' → logprob: -1.6266899108886719
    3. ' total' → logprob: -2.501689910888672
    4. 'area' → logprob: -3.126689910888672
    5. 'extended' → logprob: -3.251689910888672
    6. '_area' → logprob: -3.751689910888672
    7. ' additional' → logprob: -3.876689910888672
    8. ' possible' → logprob: -4.001689910888672
    9. '_extended' → logprob: -4.501689910888672
    10. 'total' → logprob: -4.751689910888672

Token 302: ' area' (ID: 3624)
  Prédit: ' area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.10250770300626755
    2. 'area' → logprob: -2.8525075912475586
    3. ' visible' → logprob: -3.7275075912475586
    4. ' extended' → logprob: -4.852507591247559
    5. 'visible' → logprob: -5.227507591247559
    6. 'extended' → logprob: -6.727507591247559
    7. '_area' → logprob: -7.352507591247559
    8. '_visible' → logprob: -8.477507591247559
    9. '_extended' → logprob: -9.352507591247559
    10. ' possible' → logprob: -9.602507591247559

Token 303: ' M' (ID: 391)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7051266431808472
    2. ' of' → logprob: -1.0801266431808472
    3. ' achievable' → logprob: -3.3301267623901367
    4. ' possible' → logprob: -3.4551267623901367
    5. ' with' → logprob: -3.7051267623901367
    6. ' including' → logprob: -4.080126762390137
    7. ' extended' → logprob: -4.205126762390137
    8. ' by' → logprob: -4.580126762390137
    9. ' that' → logprob: -4.830126762390137
    10. '(self' → logprob: -4.955126762390137

Token 304: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2617788314819336
    2. ' of' → logprob: -2.8867788314819336
    3. '(self' → logprob: -3.1367788314819336
    4. ' as' → logprob: -3.3867788314819336
    5. '
' → logprob: -4.136778831481934
    6. ' for' → logprob: -4.136778831481934
    7. ' that' → logprob: -4.511778831481934
    8. ' with' → logprob: -5.011778831481934
    9. ' (' → logprob: -5.261778831481934
    10. '   ' → logprob: -5.261778831481934

Token 305: ' area' (ID: 3624)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6728801131248474
    2. '0' → logprob: -1.2978801727294922
    3. ' self' → logprob: -2.422880172729492
    4. 'area' → logprob: -4.297880172729492
    5. '(self' → logprob: -4.422880172729492
    6. '...' → logprob: -4.422880172729492
    7. '(' → logprob: -4.672880172729492
    8. 'max' → logprob: -4.672880172729492
    9. ' ' → logprob: -4.797880172729492
    10. 'original' → logprob: -4.797880172729492

Token 306: '(' (ID: 7)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.3077992796897888
    2. '(' → logprob: -2.1827993392944336
    3. 'of' → logprob: -2.8077993392944336
    4. '_extended' → logprob: -4.307799339294434
    5. '()' → logprob: -4.557799339294434
    6. '(self' → logprob: -4.682799339294434
    7. '_original' → logprob: -4.932799339294434
    8. '       ' → logprob: -4.932799339294434
    9. ' +' → logprob: -5.057799339294434
    10. '(original' → logprob: -5.307799339294434

Token 307: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.22643326222896576
    2. ')' → logprob: -2.226433277130127
    3. 'original' → logprob: -4.351433277130127
    4. 'of' → logprob: -4.351433277130127
    5. ' of' → logprob: -4.601433277130127
    6. ' ABC' → logprob: -4.601433277130127
    7. 'self' → logprob: -4.726433277130127
    8. '(' → logprob: -5.101433277130127
    9. 'Original' → logprob: -5.101433277130127
    10. 'abc' → logprob: -5.476433277130127

Token 308: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008342855726368725
    2. ' +' → logprob: -7.6258344650268555
    3. '+' → logprob: -9.000834465026855
    4. ')+' → logprob: -9.250834465026855
    5. ' )' → logprob: -9.875834465026855
    6. '()' → logprob: -10.500834465026855
    7. '())' → logprob: -11.250834465026855
    8. '   ' → logprob: -11.500834465026855
    9. 'ABC' → logprob: -11.500834465026855
    10. ' ' → logprob: -12.625834465026855

Token 309: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.014314288273453712
    2. '+' → logprob: -4.3893141746521
    3. '       ' → logprob: -6.5143141746521
    4. ' plus' → logprob: -9.389314651489258
    5. '   ' → logprob: -9.889314651489258
    6. ' ' → logprob: -10.389314651489258
    7. '        ' → logprob: -10.514314651489258
    8. '()' → logprob: -10.639314651489258
    9. '           ' → logprob: -11.014314651489258
    10. ' +
' → logprob: -11.139314651489258

Token 310: ' area' (ID: 3624)
  Prédit: ' area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.6234814524650574
    2. 'area' → logprob: -1.3734815120697021
    3. '2' → logprob: -1.7484815120697021
    4. ' ' → logprob: -3.373481512069702
    5. '   ' → logprob: -7.373481273651123
    6. ' extended' → logprob: -7.998481273651123
    7. '4' → logprob: -8.498481750488281
    8. 'extended' → logprob: -8.623481750488281
    9. '0' → logprob: -9.123481750488281
    10. '
' → logprob: -9.373481750488281

Token 311: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009485000744462013
    2. 'of' → logprob: -4.884484767913818
    3. ' of' → logprob: -7.009484767913818
    4. '   ' → logprob: -8.634485244750977
    5. '((' → logprob: -8.884485244750977
    6. ' (' → logprob: -9.009485244750977
    7. '(of' → logprob: -9.259485244750977
    8. '```' → logprob: -9.634485244750977
    9. '(A' → logprob: -10.259485244750977
    10. 'for' → logprob: -10.384485244750977

Token 312: 'ADC' (ID: 59187)
  Prédit: 'ADC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ADC' → logprob: -0.1201803907752037
    2. ' ADC' → logprob: -2.370180368423462
    3. ' ' → logprob: -5.995180606842041
    4. ')' → logprob: -6.370180606842041
    5. 'ABC' → logprob: -6.495180606842041
    6. 'AD' → logprob: -6.620180606842041
    7. '   ' → logprob: -6.682680606842041
    8. 'AC' → logprob: -6.995180606842041
    9. '(' → logprob: -7.120180606842041
    10. 'D' → logprob: -7.370180606842041

Token 313: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07165853679180145
    2. ' +' → logprob: -2.8216586112976074
    3. ' )' → logprob: -5.071658611297607
    4. '       ' → logprob: -6.696658611297607
    5. '+' → logprob: -6.821658611297607
    6. ')+' → logprob: -7.571658611297607
    7. '   ' → logprob: -8.19665813446045
    8. '()' → logprob: -9.82165813446045
    9. ' ' → logprob: -9.82165813446045
    10. '())' → logprob: -10.44665813446045

Token 314: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.006050143390893936
    2. '+' → logprob: -5.131050109863281
    3. '       ' → logprob: -9.256050109863281
    4. ' ' → logprob: -11.881050109863281
    5. '()' → logprob: -12.256050109863281
    6. '   ' → logprob: -12.756050109863281
    7. 'def' → logprob: -13.131050109863281
    8. ' +
' → logprob: -13.506050109863281
    9. '(' → logprob: -13.631050109863281
    10. '()+' → logprob: -13.756050109863281

Token 315: ' area' (ID: 3624)
  Prédit: ' area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.02632271498441696
    2. 'area' → logprob: -3.651322603225708
    3. ' ' → logprob: -11.151322364807129
    4. '       ' → logprob: -13.401322364807129
    5. '   ' → logprob: -13.526322364807129
    6. ' ' → logprob: -13.901322364807129
    7. '    ' → logprob: -14.026322364807129
    8. '        ' → logprob: -14.151322364807129
    9. ' área' → logprob: -14.776322364807129
    10. '  ' → logprob: -14.776322364807129

Token 316: '(B' (ID: 8409)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6332032084465027
    2. '(B' → logprob: -0.7582032084465027
    3. '(A' → logprob: -8.008203506469727
    4. ' (' → logprob: -9.258203506469727
    5. 'of' → logprob: -10.133203506469727
    6. '```' → logprob: -10.258203506469727
    7. '(
' → logprob: -10.633203506469727
    8. '(DE' → logprob: -11.008203506469727
    9. '   ' → logprob: -11.258203506469727
    10. '(DB' → logprob: -12.008203506469727

Token 317: 'EC' (ID: 9760)
  Prédit: 'EC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EC' → logprob: -7.24310302757658e-05
    2. 'CE' → logprob: -10.625072479248047
    3. 'DEC' → logprob: -11.625072479248047
    4. ')' → logprob: -12.000072479248047
    5. ' EC' → logprob: -12.000072479248047
    6. '
' → logprob: -12.375072479248047
    7. 'AEC' → logprob: -12.625072479248047
    8. 'ED' → logprob: -13.125072479248047
    9. 'DC' → logprob: -13.250072479248047
    10. 'AC' → logprob: -13.250072479248047

Token 318: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7551347613334656
    2. ')' → logprob: -1.1301348209381104
    3. '
' → logprob: -2.5051348209381104
    4. ' that' → logprob: -3.8801348209381104
    5. ' with' → logprob: -4.130134582519531
    6. ' of' → logprob: -4.255134582519531
    7. ' as' → logprob: -4.380134582519531
    8. ' for' → logprob: -4.505134582519531
    9. ' by' → logprob: -4.880134582519531
    10. ')
' → logprob: -5.255134582519531

Token 319: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005545477848500013
    2. '
' → logprob: -7.005545616149902
    3. ',' → logprob: -7.380545616149902
    4. 'def' → logprob: -7.755545616149902
    5. '   ' → logprob: -7.880545616149902
    6. '#' → logprob: -7.880545616149902
    7. ')' → logprob: -8.005545616149902
    8. '        
' → logprob: -8.130545616149902
    9. ' for' → logprob: -8.255545616149902
    10. '<|end|>' → logprob: -8.380545616149902

Token 320: ' according' (ID: 7065)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07634471356868744
    2. '
' → logprob: -3.4513447284698486
    3. '        
' → logprob: -4.5763444900512695
    4. ' at' → logprob: -4.9513444900512695
    5. ' for' → logprob: -5.3263444900512695
    6. ',' → logprob: -5.4513444900512695
    7. ' from' → logprob: -5.5763444900512695
    8. '   ' → logprob: -6.2013444900512695
    9. 'from' → logprob: -6.9513444900512695
    10. ' that' → logprob: -7.0763444900512695

Token 321: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.07049450278282166
    2. 'to' → logprob: -2.6954944133758545
    3. '_to' → logprob: -7.695494651794434
    4. 'To' → logprob: -10.320494651794434
    5. '        ' → logprob: -10.695494651794434
    6. '<|end|>' → logprob: -11.570494651794434
    7. '    ' → logprob: -11.695494651794434
    8. 'ly' → logprob: -12.070494651794434
    9. '       ' → logprob: -12.195494651794434
    10. ' ' → logprob: -12.445494651794434

Token 322: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.08279287070035934
    2. ' mathematical' → logprob: -3.4577927589416504
    3. ' given' → logprob: -4.08279275894165
    4. ' math' → logprob: -4.95779275894165
    5. 'the' → logprob: -4.95779275894165
    6. ' self' → logprob: -5.45779275894165
    7. ' geometry' → logprob: -5.95779275894165
    8. ' your' → logprob: -6.08279275894165
    9. ' x' → logprob: -6.45779275894165
    10. ' constraints' → logprob: -6.83279275894165

Token 323: ' problem' (ID: 4792)
  Prédit: ' given'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' given' → logprob: -1.2004222869873047
    2. ' problem' → logprob: -1.8254222869873047
    3. ' math' → logprob: -1.9504222869873047
    4. ' slack' → logprob: -2.8254222869873047
    5. ' description' → logprob: -3.2004222869873047
    6. ' x' → logprob: -3.2004222869873047
    7. ' mathematical' → logprob: -3.3254222869873047
    8. ' geometry' → logprob: -3.5754222869873047
    9. 'x' → logprob: -3.5754222869873047
    10. ' constraints' → logprob: -3.7004222869873047

Token 324: ' constraints' (ID: 31060)
  Prédit: ' statement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' statement' → logprob: -0.6268014311790466
    2. '.' → logprob: -1.6268014907836914
    3. ' description' → logprob: -2.8768014907836914
    4. '   ' → logprob: -2.8768014907836914
    5. '.
' → logprob: -3.7518014907836914
    6. 'statement' → logprob: -4.001801490783691
    7. ':' → logprob: -4.126801490783691
    8. '
' → logprob: -4.126801490783691
    9. '       ' → logprob: -4.251801490783691
    10. ' constraints' → logprob: -4.376801490783691

Token 325: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7876027226448059
    2. '.' → logprob: -1.1626026630401611
    3. ',' → logprob: -1.6626026630401611
    4. ' and' → logprob: -4.53760290145874
    5. '
' → logprob: -5.03760290145874
    6. '        
' → logprob: -5.41260290145874
    7. '<|end|>' → logprob: -5.53760290145874
    8. ':' → logprob: -5.91260290145874
    9. '.
' → logprob: -6.16260290145874
    10. ' for' → logprob: -6.41260290145874

Token 326: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2847592532634735
    2. '<|end|>' → logprob: -1.409759283065796
    3. '<|end|>' → logprob: -6.659759044647217
    4. '
' → logprob: -6.784759044647217
    5. ' ' → logprob: -8.284759521484375
    6. '        
' → logprob: -8.784759521484375
    7. '...' → logprob: -8.909759521484375
    8. '   ' → logprob: -8.909759521484375
    9. ')' → logprob: -9.034759521484375
    10. '```' → logprob: -9.284759521484375

Token 327: ' """

' (ID: 28800)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01873580366373062
    2. '
' → logprob: -5.268735885620117
    3. '#' → logprob: -5.393735885620117
    4. '<|end|>' → logprob: -5.518735885620117
    5. '        
' → logprob: -6.518735885620117
    6. ' 
' → logprob: -7.518735885620117
    7. ' pass' → logprob: -7.643735885620117
    8. '```' → logprob: -7.768735885620117
    9. '        ' → logprob: -8.143735885620117
    10. '<|end|>' → logprob: -8.143735885620117

Token 328: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029673421755433083
    2. '#' → logprob: -3.9046733379364014
    3. 'pass' → logprob: -5.7796735763549805
    4. ' pass' → logprob: -5.9046735763549805
    5. 'import' → logprob: -6.1546735763549805
    6. ' #' → logprob: -7.2796735763549805
    7. 'max' → logprob: -9.65467357635498
    8. '   ' → logprob: -9.65467357635498
    9. 'def' → logprob: -9.65467357635498
    10. '...' → logprob: -9.77967357635498

Token 329: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.9571283459663391
    2. 'def' → logprob: -0.9571283459663391
    3. 'import' → logprob: -2.5821282863616943
    4. 'from' → logprob: -3.4571282863616943
    5. '       ' → logprob: -3.7071282863616943
    6. 'max' → logprob: -3.8321282863616943
    7. 'best' → logprob: -3.9571282863616943
    8. 'eps' → logprob: -4.207128524780273
    9. 'epsilon' → logprob: -4.207128524780273
    10. 'pass' → logprob: -4.332128524780273

Token 330: ' By' (ID: 4534)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10653436183929443
    2. 'import' → logprob: -2.981534481048584
    3. 'from' → logprob: -4.481534481048584
    4. '#' → logprob: -4.731534481048584
    5. 'max' → logprob: -5.106534481048584
    6. 'best' → logprob: -5.231534481048584
    7. ' def' → logprob: -5.231534481048584
    8. 'eps' → logprob: -6.356534481048584
    9. '   ' → logprob: -6.606534481048584
    10. 'a' → logprob: -6.731534481048584

Token 331: ' problem' (ID: 4792)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.7848740220069885
    2. 'import' → logprob: -1.9098739624023438
    3. 'def' → logprob: -2.1598739624023438
    4. 'math' → logprob: -2.4098739624023438
    5. ' def' → logprob: -3.7848739624023438
    6. '#' → logprob: -4.159873962402344
    7. 'using' → logprob: -4.409873962402344
    8. 'binary' → logprob: -4.534873962402344
    9. ' using' → logprob: -4.659873962402344
    10. ' iter' → logprob: -4.784873962402344

Token 332: ' geometry' (ID: 33209)
  Prédit: 'statement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'statement' → logprob: -0.3039500415325165
    2. 'description' → logprob: -2.178950071334839
    3. 'constraints' → logprob: -2.428950071334839
    4. 'context' → logprob: -3.803950071334839
    5. '#' → logprob: -3.803950071334839
    6. ' statement' → logprob: -4.67894983291626
    7. 'comment' → logprob: -6.17894983291626
    8. ' constraints' → logprob: -6.92894983291626
    9. 'definition' → logprob: -7.17894983291626
    10. ' description' → logprob: -7.17894983291626

Token 333: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5391183495521545
    2. ',' → logprob: -0.9141183495521545
    3. '        
' → logprob: -5.66411828994751
    4. '<|end|>' → logprob: -5.66411828994751
    5. '#' → logprob: -5.91411828994751
    6. '
' → logprob: -6.28911828994751
    7. ' and' → logprob: -6.78911828994751
    8. ',
' → logprob: -7.53911828994751
    9. '<|end|>' → logprob: -7.53911828994751
    10. 'import' → logprob: -7.66411828994751

Token 334: ' the' (ID: 290)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8771860599517822
    2. '#' → logprob: -1.3771860599517822
    3. 'def' → logprob: -2.2521860599517822
    4. 'max' → logprob: -3.2521860599517822
    5. 'x' → logprob: -3.7521860599517822
    6. 'from' → logprob: -4.002185821533203
    7. '       ' → logprob: -4.127185821533203
    8. ' pass' → logprob: -4.252185821533203
    9. ' max' → logprob: -4.252185821533203
    10. 'best' → logprob: -4.627185821533203

Token 335: ' maximum' (ID: 10562)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8515664935112
    2. 'import' → logprob: -1.6015665531158447
    3. '#' → logprob: -1.7265665531158447
    4. 'max' → logprob: -2.1015665531158447
    5. 'from' → logprob: -3.2265665531158447
    6. 'a' → logprob: -4.976566314697266
    7. 'base' → logprob: -5.226566314697266
    8. 'x' → logprob: -5.601566314697266
    9. 'best' → logprob: -5.601566314697266
    10. 'return' → logprob: -6.726566314697266

Token 336: ' area' (ID: 3624)
  Prédit: ' area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.4089677333831787
    2. 'area' → logprob: -2.5339677333831787
    3. ' is' → logprob: -2.7839677333831787
    4. ' extended' → logprob: -2.9089677333831787
    5. 'x' → logprob: -3.7839677333831787
    6. 'def' → logprob: -3.9089677333831787
    7. ' occurs' → logprob: -4.033967971801758
    8. ' x' → logprob: -4.408967971801758
    9. 'extended' → logprob: -4.408967971801758
    10. ' total' → logprob: -4.533967971801758

Token 337: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.13633474707603455
    2. ' occurs' → logprob: -2.2613346576690674
    3. ' can' → logprob: -4.7613348960876465
    4. ' might' → logprob: -5.7613348960876465
    5. ' may' → logprob: -6.0113348960876465
    6. ' will' → logprob: -6.0113348960876465
    7. 'is' → logprob: -6.6363348960876465
    8. 'M' → logprob: -7.0113348960876465
    9. ' corresponds' → logprob: -7.2613348960876465
    10. 'max' → logprob: -7.6363348960876465

Token 338: ' achieved' (ID: 23088)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6412962675094604
    2. ' achieved' → logprob: -1.5162962675094604
    3. 'self' → logprob: -2.89129638671875
    4. ' reached' → logprob: -2.89129638671875
    5. ' attained' → logprob: -3.01629638671875
    6. ' math' → logprob: -3.26629638671875
    7. '       ' → logprob: -4.01629638671875
    8. 'ach' → logprob: -4.51629638671875
    9. ' found' → logprob: -5.39129638671875
    10. '   ' → logprob: -5.51629638671875

Token 339: ' when' (ID: 1261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04094243794679642
    2. ' when' → logprob: -3.665942430496216
    3. 'when' → logprob: -4.915942668914795
    4. ' at' → logprob: -5.040942668914795
    5. 'at' → logprob: -8.165942192077637
    6. ' by' → logprob: -8.290942192077637
    7. '   ' → logprob: -9.165942192077637
    8. '#' → logprob: -10.290942192077637
    9. ',' → logprob: -11.290942192077637
    10. 'by' → logprob: -11.540942192077637

Token 340: '
' (ID: 198)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2902592718601227
    2. 'x' → logprob: -1.5402592420578003
    3. ' self' → logprob: -4.16525936126709
    4. 'the' → logprob: -4.29025936126709
    5. '0' → logprob: -5.41525936126709
    6. ' the' → logprob: -6.16525936126709
    7. '2' → logprob: -7.54025936126709
    8. ' x' → logprob: -7.54025936126709
    9. '...' → logprob: -8.66525936126709
    10. '(self' → logprob: -8.79025936126709

Token 341: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7463473081588745
    2. '       ' → logprob: -1.2463473081588745
    3. ' self' → logprob: -1.6213473081588745
    4. '0' → logprob: -3.871347427368164
    5. 'x' → logprob: -4.371347427368164
    6. ' x' → logprob: -5.746347427368164
    7. ' the' → logprob: -6.621347427368164
    8. 'abs' → logprob: -6.996347427368164
    9. ' abs' → logprob: -7.996347427368164
    10. ' math' → logprob: -8.621347427368164

Token 342: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5674364566802979
    2. ' self' → logprob: -1.5674364566802979
    3. 'x' → logprob: -1.6924364566802979
    4. ' x' → logprob: -3.442436456680298
    5. '0' → logprob: -6.317436218261719
    6. '       ' → logprob: -6.567436218261719
    7. ' math' → logprob: -6.692436218261719
    8. 'abs' → logprob: -6.817436218261719
    9. ' abs' → logprob: -7.192436218261719
    10. 'math' → logprob: -7.692436218261719

Token 343: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05390321835875511
    2. 'x' → logprob: -3.053903102874756
    3. '0' → logprob: -6.178903102874756
    4. ' self' → logprob: -6.303903102874756
    5. '2' → logprob: -7.303903102874756
    6. '#' → logprob: -8.803903579711914
    7. 'abs' → logprob: -9.178903579711914
    8. '...' → logprob: -9.303903579711914
    9. '(self' → logprob: -9.428903579711914
    10. 'True' → logprob: -9.428903579711914

Token 344: ' slack' (ID: 86653)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07973793894052505
    2. ' x' → logprob: -2.954737901687622
    3. 'sl' → logprob: -4.829738140106201
    4. ' slack' → logprob: -5.329738140106201
    5. 'side' → logprob: -5.829738140106201
    6. 'def' → logprob: -6.579738140106201
    7. ' side' → logprob: -6.704738140106201
    8. ' two' → logprob: -7.079738140106201
    9. 'base' → logprob: -7.204738140106201
    10. ' base' → logprob: -7.329738140106201

Token 345: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.16675031185150146
    2. 'length' → logprob: -2.416750431060791
    3. ' is' → logprob: -3.791750431060791
    4. ' =' → logprob: -4.166750431060791
    5. '_length' → logprob: -4.666750431060791
    6. ' lengths' → logprob: -4.791750431060791
    7. '=' → logprob: -5.416750431060791
    8. ' x' → logprob: -6.791750431060791
    9. 'x' → logprob: -6.791750431060791
    10. ' on' → logprob: -8.166749954223633

Token 346: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6095688343048096
    2. ' is' → logprob: -1.4845688343048096
    3. 'x' → logprob: -1.6095688343048096
    4. ' equals' → logprob: -4.4845685958862305
    5. 'is' → logprob: -5.1095685958862305
    6. ' self' → logprob: -5.4845685958862305
    7. ' =' → logprob: -5.6095685958862305
    8. 'self' → logprob: -6.3595685958862305
    9. '=' → logprob: -6.6095685958862305
    10. 'equals' → logprob: -8.10956859588623

Token 347: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.05651785060763359
    2. '=' → logprob: -3.8065178394317627
    3. 'is' → logprob: -4.431518077850342
    4. ' =' → logprob: -4.931518077850342
    5. ' maxim' → logprob: -6.056518077850342
    6. ' ' → logprob: -6.806518077850342
    7. ' equals' → logprob: -6.806518077850342
    8. ' <=' → logprob: -6.931518077850342
    9. ' can' → logprob: -6.931518077850342
    10. 'max' → logprob: -7.056518077850342

Token 348: ' split' (ID: 12648)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.1385810673236847
    2. 'self' → logprob: -2.5135810375213623
    3. ' equal' → logprob: -3.7635810375213623
    4. '0' → logprob: -4.263581275939941
    5. ' used' → logprob: -5.763581275939941
    6. ' ' → logprob: -6.388581275939941
    7. ' optimized' → logprob: -6.388581275939941
    8. ' optim' → logprob: -6.888581275939941
    9. ' exactly' → logprob: -7.138581275939941
    10. 'equal' → logprob: -7.763581275939941

Token 349: ' equally' (ID: 29293)
  Prédit: ' equally'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' equally' → logprob: -0.008045564405620098
    2. ' between' → logprob: -5.758045673370361
    3. ' evenly' → logprob: -5.883045673370361
    4. ' ' → logprob: -6.883045673370361
    5. ' exactly' → logprob: -7.383045673370361
    6. '   ' → logprob: -9.008045196533203
    7. 'between' → logprob: -10.008045196533203
    8. ' optim' → logprob: -10.008045196533203
    9. '  ' → logprob: -10.633045196533203
    10. 'exact' → logprob: -10.758045196533203

Token 350: ' on' (ID: 402)
  Prédit: ' between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' between' → logprob: -0.03692803159356117
    2. ' on' → logprob: -4.161928176879883
    3. 'between' → logprob: -4.161928176879883
    4. '   ' → logprob: -6.411928176879883
    5. '       ' → logprob: -6.536928176879883
    6. ' ' → logprob: -6.786928176879883
    7. 'on' → logprob: -8.036928176879883
    8. ' into' → logprob: -9.161928176879883
    9. '  ' → logprob: -9.911928176879883
    10. ',' → logprob: -10.036928176879883

Token 351: ' both' (ID: 2973)
  Prédit: ' both'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' both' → logprob: -0.07767171412706375
    2. 'both' → logprob: -3.327671766281128
    3. ' the' → logprob: -3.577671766281128
    4. ' each' → logprob: -4.702671527862549
    5. ' sides' → logprob: -6.952671527862549
    6. 'the' → logprob: -7.452671527862549
    7. 'each' → logprob: -8.577672004699707
    8. ' two' → logprob: -9.577672004699707
    9. ' AC' → logprob: -11.077672004699707
    10. ' either' → logprob: -11.452672004699707

Token 352: ' sides' (ID: 18089)
  Prédit: ' sides'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sides' → logprob: -0.31664779782295227
    2. 's' → logprob: -1.3166477680206299
    3. ' equal' → logprob: -7.191648006439209
    4. ' ' → logprob: -7.191648006439209
    5. 'equal' → logprob: -7.316648006439209
    6. 'extended' → logprob: -8.31664752960205
    7. 'side' → logprob: -8.31664752960205
    8. ' extended' → logprob: -8.69164752960205
    9. ' new' → logprob: -9.44164752960205
    10. 'sl' → logprob: -9.69164752960205

Token 353: ' AC' (ID: 18577)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33536016941070557
    2. '.' → logprob: -2.085360050201416
    3. ',' → logprob: -2.210360050201416
    4. ' and' → logprob: -3.460360050201416
    5. '        ' → logprob: -5.585360050201416
    6. ':' → logprob: -6.085360050201416
    7. '        
' → logprob: -6.210360050201416
    8. ' =' → logprob: -6.335360050201416
    9. '<|end|>' → logprob: -6.335360050201416
    10. ' of' → logprob: -6.460360050201416

Token 354: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03433670848608017
    2. 'and' → logprob: -4.534336566925049
    3. ' /' → logprob: -5.034336566925049
    4. '/' → logprob: -5.409336566925049
    5. '       ' → logprob: -5.534336566925049
    6. ',' → logprob: -5.784336566925049
    7. '=' → logprob: -6.409336566925049
    8. '   ' → logprob: -7.034336566925049
    9. ' +' → logprob: -7.409336566925049
    10. ' =' → logprob: -7.409336566925049

Token 355: ' BC' (ID: 28308)
  Prédit: ' BC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' BC' → logprob: -0.6349601745605469
    2. 'BC' → logprob: -0.7599601745605469
    3. ' ' → logprob: -6.384960174560547
    4. ' ' → logprob: -7.634960174560547
    5. '   ' → logprob: -10.009960174560547
    6. 'CB' → logprob: -10.134960174560547
    7. 'AB' → logprob: -11.134960174560547
    8. '  ' → logprob: -11.509960174560547
    9. ' CB' → logprob: -11.509960174560547
    10. '       ' → logprob: -11.822460174560547

Token 356: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20117636024951935
    2. '.' → logprob: -2.326176404953003
    3. ',' → logprob: -3.201176404953003
    4. '<|end|>' → logprob: -4.326176166534424
    5. '        ' → logprob: -4.576176166534424
    6. ' and' → logprob: -4.701176166534424
    7. '        
' → logprob: -5.326176166534424
    8. '
' → logprob: -6.076176166534424
    9. '<|end|>' → logprob: -6.951176166534424
    10. '        

' → logprob: -8.076176643371582

Token 357: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22859910130500793
    2. ' and' → logprob: -2.1035990715026855
    3. ' so' → logprob: -3.1035990715026855
    4. '#' → logprob: -3.6035990715026855
    5. 'and' → logprob: -5.1035990715026855
    6. ' with' → logprob: -6.9785990715026855
    7. ' but' → logprob: -7.4785990715026855
    8. '        
' → logprob: -7.7285990715026855
    9. ' #' → logprob: -7.9785990715026855
    10. '        ' → logprob: -7.9785990715026855

Token 358: ' #' (ID: 1069)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8370148539543152
    2. ' so' → logprob: -1.33701491355896
    3. '       ' → logprob: -2.33701491355896
    4. '#' (adapté à ' #') → logprob: -2.46201491355896
    5. 'and' → logprob: -2.83701491355896
    6. ' i' → logprob: -3.46201491355896
    7. 'so' → logprob: -4.587014675140381
    8. '   ' → logprob: -5.587014675140381
    9. 'i' → logprob: -5.587014675140381
    10. ' with' → logprob: -5.837014675140381

Token 359: ' and' (ID: 326)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1956875324249268
    2. ' and' → logprob: -1.5706875324249268
    3. ' so' → logprob: -1.6956875324249268
    4. 'and' → logprob: -2.1956875324249268
    5. '       ' → logprob: -2.4456875324249268
    6. 'so' → logprob: -3.3206875324249268
    7. ' i' → logprob: -3.8206875324249268
    8. 'i' → logprob: -4.945687294006348
    9. ' which' → logprob: -5.195687294006348
    10. 'x' → logprob: -5.445687294006348

Token 360: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.11953821778297424
    2. 'the' → logprob: -3.4945383071899414
    3. ' both' → logprob: -3.8695383071899414
    4. ' that' → logprob: -3.9945383071899414
    5. ' self' → logprob: -4.369538307189941
    6. ' is' → logprob: -4.994538307189941
    7. 'self' → logprob: -5.619538307189941
    8. ' all' → logprob: -5.869538307189941
    9. '       ' → logprob: -6.244538307189941
    10. ' x' → logprob: -6.369538307189941

Token 361: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.7755441069602966
    2. ' side' → logprob: -1.4005441665649414
    3. ' two' → logprob: -3.0255441665649414
    4. ' total' → logprob: -3.0255441665649414
    5. ' sides' → logprob: -3.4005441665649414
    6. 'new' → logprob: -3.5255441665649414
    7. 'side' → logprob: -3.7755441665649414
    8. 'l' → logprob: -4.275544166564941
    9. ' extended' → logprob: -4.275544166564941
    10. ' length' → logprob: -4.650544166564941

Token 362: ' triangles' (ID: 92927)
  Prédit: ' side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' side' → logprob: -0.12574973702430725
    2. 'side' → logprob: -3.0007498264312744
    3. ' sides' → logprob: -3.2507498264312744
    4. '_side' → logprob: -4.250749588012695
    5. ' length' → logprob: -4.875749588012695
    6. ' base' → logprob: -6.625749588012695
    7. 'length' → logprob: -7.000749588012695
    8. '   ' → logprob: -7.125749588012695
    9. ' lengths' → logprob: -7.375749588012695
    10. 'l' → logprob: -7.500749588012695

Token 363: ' ADC' (ID: 49719)
  Prédit: ' ADC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ADC' → logprob: -0.871460497379303
    2. ' have' → logprob: -1.3714604377746582
    3. ' are' → logprob: -1.9964604377746582
    4. ' formed' → logprob: -2.746460437774658
    5. ' created' → logprob: -3.496460437774658
    6. 'ADC' → logprob: -3.621460437774658
    7. ' on' → logprob: -3.871460437774658
    8. ' AD' → logprob: -4.746460437774658
    9. ' AC' → logprob: -5.371460437774658
    10. '   ' → logprob: -5.371460437774658

Token 364: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.05618906021118164
    2. 'and' → logprob: -2.9311890602111816
    3. ',' → logprob: -7.056189060211182
    4. ' ' → logprob: -9.056188583374023
    5. '   ' → logprob: -9.431188583374023
    6. ')' → logprob: -10.056188583374023
    7. '#' → logprob: -10.181188583374023
    8. ' ,' → logprob: -10.431188583374023
    9. ' =' → logprob: -10.681188583374023
    10. '```' → logprob: -10.806188583374023

Token 365: ' B' (ID: 418)
  Prédit: 'BEC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BEC' → logprob: -0.38773998618125916
    2. ' B' → logprob: -1.1377400159835815
    3. 'B' → logprob: -7.262740135192871
    4. ' BCE' → logprob: -8.887740135192871
    5. 'BE' → logprob: -11.012740135192871
    6. ' BE' → logprob: -11.762740135192871
    7. ' ' → logprob: -12.887740135192871
    8. 'bec' → logprob: -13.762740135192871
    9. 'BDC' → logprob: -14.387740135192871
    10. '	B' → logprob: -14.887740135192871

Token 366: 'EC' (ID: 9760)
  Prédit: 'EC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EC' → logprob: -0.00011403311509639025
    2. 'E' → logprob: -9.375114440917969
    3. 'CE' → logprob: -11.000114440917969
    4. 'ec' → logprob: -13.250114440917969
    5. ' EC' → logprob: -13.250114440917969
    6. 'ECE' → logprob: -13.250114440917969
    7. 'C' → logprob: -13.375114440917969
    8. 'ED' → logprob: -13.625114440917969
    9. '

' → logprob: -14.500114440917969
    10. 'Ec' → logprob: -15.125114440917969

Token 367: ' are' (ID: 553)
  Prédit: ' have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' have' → logprob: -0.2208574116230011
    2. ' are' → logprob: -2.2208573818206787
    3. '   ' → logprob: -3.0958573818206787
    4. 'have' → logprob: -3.8458573818206787
    5. 'are' → logprob: -4.720857620239258
    6. ' can' → logprob: -5.345857620239258
    7. '       ' → logprob: -5.720857620239258
    8. ')' → logprob: -6.970857620239258
    9. ' also' → logprob: -7.595857620239258
    10. ' will' → logprob: -7.720857620239258

Token 368: ' "' (ID: 392)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.025454044342041
    2. 'isos' → logprob: -1.150454044342041
    3. 'right' → logprob: -2.150454044342041
    4. ' right' → logprob: -2.775454044342041
    5. 'also' → logprob: -3.275454044342041
    6. 'equ' → logprob: -3.775454044342041
    7. ' also' → logprob: -3.900454044342041
    8. 'is' → logprob: -4.650454044342041
    9. 'attached' → logprob: -4.775454044342041
    10. 'similar' → logprob: -5.150454044342041

Token 369: 'fold' (ID: 32405)
  Prédit: 'isos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'isos' → logprob: -1.283764362335205
    2. 'equ' → logprob: -1.908764362335205
    3. ' is' → logprob: -2.033764362335205
    4. 'right' → logprob: -2.783764362335205
    5. 'outside' → logprob: -2.908764362335205
    6. 'added' → logprob: -3.033764362335205
    7. 'placed' → logprob: -3.158764362335205
    8. 'attached' → logprob: -3.408764362335205
    9. 'constructed' → logprob: -3.658764362335205
    10. 'extern' → logprob: -4.033764362335205

Token 370: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.00012606535165105015
    2. '
' → logprob: -10.250125885009766
    3. '"' → logprob: -10.750125885009766
    4. 'ing' → logprob: -11.375125885009766
    5. '   ' → logprob: -11.375125885009766
    6. ''ed' → logprob: -11.625125885009766
    7. ' ed' → logprob: -12.000125885009766
    8. 'edback' → logprob: -12.500125885009766
    9. 'e' → logprob: -12.750125885009766
    10. '       ' → logprob: -12.875125885009766

Token 371: ' out' (ID: 842)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7995688915252686
    2. ' out' → logprob: -1.0495688915252686
    3. 'out' → logprob: -1.7995688915252686
    4. ' outward' → logprob: -3.9245688915252686
    5. '   ' → logprob: -5.424569129943848
    6. ' "' → logprob: -6.049569129943848
    7. '_out' → logprob: -6.799569129943848
    8. ' over' → logprob: -6.924569129943848
    9. ' back' → logprob: -7.299569129943848
    10. '"
' → logprob: -7.299569129943848

Token 372: 'wards' (ID: 5323)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5802618861198425
    2. 'side' → logprob: -1.0802619457244873
    3. 'ward' → logprob: -2.7052619457244873
    4. 'wards' → logprob: -3.4552619457244873
    5. 's' → logprob: -6.205261707305908
    6. 'd' → logprob: -9.455262184143066
    7. '""' → logprob: -10.955262184143066
    8. '"""' → logprob: -11.080262184143066
    9. '",' → logprob: -11.205262184143066
    10. '".' → logprob: -11.205262184143066

Token 373: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1348845362663269
    2. '"
' → logprob: -3.2598845958709717
    3. ',"' → logprob: -3.6348845958709717
    4. '",' → logprob: -3.7598845958709717
    5. '".' → logprob: -4.509884357452393
    6. '."' → logprob: -5.259884357452393
    7. ',' → logprob: -5.259884357452393
    8. '   ' → logprob: -5.759884357452393
    9. ',"
' → logprob: -6.009884357452393
    10. '."
' → logprob: -6.384884357452393

Token 374: ' sym' (ID: 5357)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3252424895763397
    2. ',' → logprob: -2.325242519378662
    3. '.' → logprob: -2.825242519378662
    4. ' with' → logprob: -3.200242519378662
    5. ' to' → logprob: -3.575242519378662
    6. ' by' → logprob: -4.325242519378662
    7. ' from' → logprob: -4.325242519378662
    8. ' and' → logprob: -4.825242519378662
    9. ' as' → logprob: -5.450242519378662
    10. ' in' → logprob: -5.700242519378662

Token 375: 'metr' (ID: 194494)
  Prédit: 'etr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'etr' → logprob: -0.2921556234359741
    2. 'metr' → logprob: -1.4171556234359741
    3. 'metric' → logprob: -5.292155742645264
    4. 'etric' → logprob: -6.542155742645264
    5. '   ' → logprob: -6.792155742645264
    6. '```' → logprob: -7.292155742645264
    7. 'metrical' → logprob: -7.417155742645264
    8. '#' → logprob: -8.167155265808105
    9. 'tr' → logprob: -8.292155265808105
    10. 'met' → logprob: -8.542155265808105

Token 376: 'ically' (ID: 2905)
  Prédit: 'ically'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ically' → logprob: -0.1675473153591156
    2. 'c' → logprob: -2.0425472259521484
    3. 'ic' → logprob: -3.9175472259521484
    4. 'cal' → logprob: -6.167547225952148
    5. 'ical' → logprob: -6.417547225952148
    6. '   ' → logprob: -8.542547225952148
    7. '```' → logprob: -8.792547225952148
    8. 'ally' → logprob: -8.917547225952148
    9. ' ' → logprob: -8.917547225952148
    10. 'y' → logprob: -9.667547225952148

Token 377: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4759617745876312
    2. '.' → logprob: -1.1009618043899536
    3. ',' → logprob: -3.600961685180664
    4. ' and' → logprob: -5.600961685180664
    5. '        
' → logprob: -5.850961685180664
    6. '<|end|>' → logprob: -6.100961685180664
    7. '
' → logprob: -6.225961685180664
    8. '.
' → logprob: -6.225961685180664
    9. ' with' → logprob: -6.600961685180664
    10. '   ' → logprob: -6.850961685180664

Token 378: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026494083926081657
    2. '.' → logprob: -3.901494026184082
    3. ',' → logprob: -5.651494026184082
    4. '<|end|>' → logprob: -6.776494026184082
    5. '        
' → logprob: -8.026494026184082
    6. '        ' → logprob: -8.526494026184082
    7. ' and' → logprob: -9.276494026184082
    8. ')' → logprob: -9.526494026184082
    9. '#' → logprob: -9.651494026184082
    10. '   ' → logprob: -9.651494026184082

Token 379: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1994420737028122
    2. '.' → logprob: -1.9494420289993286
    3. ',' → logprob: -4.199441909790039
    4. ')' → logprob: -5.074441909790039
    5. '   ' → logprob: -5.824441909790039
    6. '
' → logprob: -6.074441909790039
    7. ':' → logprob: -6.199441909790039
    8. ' and' → logprob: -6.199441909790039
    9. '        
' → logprob: -6.199441909790039
    10. '#' (adapté à ' #') → logprob: -6.949441909790039

Token 380: ' forming' (ID: 44860)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06909050792455673
    2. 'import' → logprob: -4.069090366363525
    3. '#' → logprob: -4.319090366363525
    4. 'def' → logprob: -5.069090366363525
    5. ' new' → logprob: -5.694090366363525
    6. '
' → logprob: -5.819090366363525
    7. '   ' → logprob: -5.944090366363525
    8. ' and' → logprob: -6.194090366363525
    9. ' x' → logprob: -6.319090366363525
    10. ' if' → logprob: -6.444090366363525

Token 381: ' a' (ID: 261)
  Prédit: ' an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.02522239089012146
    2. ' a' → logprob: -4.025222301483154
    3. ' two' → logprob: -5.775222301483154
    4. 'an' → logprob: -7.025222301483154
    5. ' ' → logprob: -7.150222301483154
    6. ' is' → logprob: -7.525222301483154
    7. ' the' → logprob: -7.525222301483154
    8. '   ' → logprob: -8.025222778320312
    9. 'a' → logprob: -8.025222778320312
    10. ' equ' → logprob: -9.025222778320312

Token 382: ' larger' (ID: 12384)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.7315667867660522
    2. ' straight' → logprob: -1.7315667867660522
    3. ' new' → logprob: -2.981566905975342
    4. ' ' → logprob: -3.231566905975342
    5. ' triangle' → logprob: -3.231566905975342
    6. '   ' → logprob: -3.606566905975342
    7. 'n' → logprob: -3.731566905975342
    8. ' larger' → logprob: -3.731566905975342
    9. ' convex' → logprob: -3.981566905975342
    10. ' kite' → logprob: -4.231566905975342

Token 383: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.07458124309778214
    2. 'isos' → logprob: -2.8245811462402344
    3. ' triangle' → logprob: -4.949581146240234
    4. ' equ' → logprob: -5.824581146240234
    5. 'triangle' → logprob: -7.324581146240234
    6. 'equ' → logprob: -7.574581146240234
    7. ' base' → logprob: -7.824581146240234
    8. ' area' → logprob: -8.574581146240234
    9. '   ' → logprob: -8.824581146240234
    10. 'is' → logprob: -9.324581146240234

Token 384: 'os' (ID: 365)
  Prédit: 'os'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -8.029847231227905e-05
    2. '   ' → logprob: -10.625080108642578
    3. ' os' → logprob: -11.000080108642578
    4. '
' → logprob: -12.125080108642578
    5. '```' → logprob: -12.125080108642578
    6. '_' → logprob: -12.750080108642578
    7. '	os' → logprob: -12.750080108642578
    8. 'oc' → logprob: -13.000080108642578
    9. ' ' → logprob: -13.000080108642578
    10. '     ' → logprob: -13.125080108642578

Token 385: 'cel' (ID: 4610)
  Prédit: 'cel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cel' → logprob: -0.00029959288076497614
    2. 'sc' → logprob: -8.500299453735352
    3. 'os' → logprob: -9.750299453735352
    4. '```' → logprob: -11.250299453735352
    5. 'c' → logprob: -12.500299453735352
    6. '``' → logprob: -12.625299453735352
    7. '   ' → logprob: -12.875299453735352
    8. '       ' → logprob: -12.875299453735352
    9. 'ces' → logprob: -13.125299453735352
    10. '
' → logprob: -13.375299453735352

Token 386: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0001463299704482779
    2. 'ces' → logprob: -8.87514591217041
    3. 'eles' → logprob: -12.87514591217041
    4. 'esc' → logprob: -13.37514591217041
    5. 'cel' → logprob: -13.87514591217041
    6. 'e' → logprob: -15.25014591217041
    7. 'ес' → logprob: -15.37514591217041
    8. '   ' → logprob: -15.87514591217041
    9. 'ec' → logprob: -15.87514591217041
    10. '```' → logprob: -16.000146865844727

Token 387: ' figure' (ID: 11310)
  Prédit: ' triangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' triangle' → logprob: -0.1860049068927765
    2. 'triangle' → logprob: -1.811004877090454
    3. '_triangle' → logprob: -5.811005115509033
    4. '
' → logprob: -7.186005115509033
    5. 'Triangle' → logprob: -7.436005115509033
    6. '")' → logprob: -8.186004638671875
    7. '"' → logprob: -8.311004638671875
    8. 'tri' → logprob: -8.811004638671875
    9. ')' → logprob: -8.936004638671875
    10. ' ' → logprob: -9.061004638671875

Token 388: ' with' (ID: 483)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6442274451255798
    2. '       ' → logprob: -1.3942275047302246
    3. ',' → logprob: -2.2692275047302246
    4. ' with' → logprob: -2.3942275047302246
    5. ':' → logprob: -4.019227504730225
    6. '   ' → logprob: -5.394227504730225
    7. '        
' → logprob: -6.644227504730225
    8. 'with' → logprob: -6.644227504730225
    9. ' and' → logprob: -6.769227504730225
    10. '<|end|>' → logprob: -7.019227504730225

Token 389: ' the' (ID: 290)
  Prédit: ' sides'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sides' → logprob: -0.5142046213150024
    2. ' side' → logprob: -2.014204502105713
    3. ' base' → logprob: -2.139204502105713
    4. 'side' → logprob: -2.639204502105713
    5. 'base' → logprob: -3.014204502105713
    6. ' equal' → logprob: -4.639204502105713
    7. ' the' → logprob: -5.514204502105713
    8. 'equal' → logprob: -6.264204502105713
    9. ' new' → logprob: -6.389204502105713
    10. 'a' → logprob: -6.389204502105713

Token 390: ' total' (ID: 3609)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -1.7929449081420898
    2. ' new' → logprob: -1.9179449081420898
    3. ' base' → logprob: -2.41794490814209
    4. 'base' → logprob: -2.41794490814209
    5. 'same' → logprob: -2.41794490814209
    6. ' two' → logprob: -2.54294490814209
    7. ' sides' → logprob: -2.66794490814209
    8. ' same' → logprob: -2.66794490814209
    9. 'extended' → logprob: -3.16794490814209
    10. 'two' → logprob: -3.29294490814209

Token 391: ' length' (ID: 5517)
  Prédit: ' side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' side' → logprob: -0.5361567735671997
    2. ' length' → logprob: -1.7861567735671997
    3. 'side' → logprob: -1.9111567735671997
    4. 'length' → logprob: -3.03615665435791
    5. ' extended' → logprob: -4.28615665435791
    6. ' equal' → logprob: -4.66115665435791
    7. ' leg' → logprob: -4.91115665435791
    8. ' base' → logprob: -5.16115665435791
    9. ' sides' → logprob: -5.53615665435791
    10. 'extended' → logprob: -6.41115665435791

Token 392: ' l' (ID: 305)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3843115568161011
    2. ' of' → logprob: -1.759311556816101
    3. 'self' → logprob: -3.0093116760253906
    4. ' =' → logprob: -3.2593116760253906
    5. ' (' → logprob: -3.6343116760253906
    6. '(self' → logprob: -4.634311676025391
    7. '=' → logprob: -5.009311676025391
    8. '=self' → logprob: -5.009311676025391
    9. 'of' → logprob: -6.134311676025391
    10. ' on' → logprob: -6.134311676025391

Token 393: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.0495171919465065
    2. '+' → logprob: -3.2995171546936035
    3. ' plus' → logprob: -6.2995171546936035
    4. '   ' → logprob: -6.6745171546936035
    5. ' =' → logprob: -6.6745171546936035
    6. '_extended' → logprob: -6.7995171546936035
    7. '_plus' → logprob: -6.9245171546936035
    8. '+x' → logprob: -7.0495171546936035
    9. '=' → logprob: -7.1745171546936035
    10. '+self' → logprob: -7.4245171546936035

Token 394: ' x' (ID: 1215)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.21743083000183105
    2. 'self' → logprob: -1.967430830001831
    3. ' x' → logprob: -3.092430830001831
    4. ' ' → logprob: -5.21743106842041
    5. 'x' → logprob: -5.46743106842041
    6. '2' → logprob: -7.71743106842041
    7. '   ' → logprob: -10.84243106842041
    8. ''' → logprob: -11.09243106842041
    9. '	self' → logprob: -11.34243106842041
    10. '"' → logprob: -11.59243106842041

Token 395: ' on' (ID: 402)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.914076566696167
    2. '       ' → logprob: -1.039076566696167
    3. '   ' → logprob: -2.414076566696167
    4. ')' → logprob: -3.039076566696167
    5. ':' → logprob: -3.914076566696167
    6. ',' → logprob: -4.414076805114746
    7. '
' → logprob: -4.914076805114746
    8. '```' → logprob: -4.914076805114746
    9. 's' → logprob: -5.039076805114746
    10. ' sides' → logprob: -5.164076805114746

Token 396: ' each' (ID: 2454)
  Prédit: ' each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.7990068197250366
    2. 'each' → logprob: -0.9240068197250366
    3. ' both' → logprob: -2.424006938934326
    4. 'both' → logprob: -2.799006938934326
    5. ' the' → logprob: -6.424006938934326
    6. '   ' → logprob: -7.174006938934326
    7. 'the' → logprob: -7.424006938934326
    8. ' AC' → logprob: -8.299006462097168
    9. 'AC' → logprob: -9.049006462097168
    10. ' sides' → logprob: -9.299006462097168

Token 397: ' side' (ID: 4307)
  Prédit: ' side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' side' → logprob: -0.02315114624798298
    2. 'side' → logprob: -4.02315092086792
    3. ' ' → logprob: -5.39815092086792
    4. '	side' → logprob: -8.898151397705078
    5. '   ' → logprob: -9.773151397705078
    6. 's' → logprob: -10.023151397705078
    7. ' of' → logprob: -10.148151397705078
    8. ' equal' → logprob: -10.960651397705078
    9. ' AC' → logprob: -11.210651397705078
    10. '  ' → logprob: -11.210651397705078

Token 398: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5479066967964172
    2. '       ' → logprob: -0.9229066967964172
    3. ',' → logprob: -4.797906875610352
    4. '<|end|>' → logprob: -4.922906875610352
    5. ':' → logprob: -6.547906875610352
    6. '        ' → logprob: -6.672906875610352
    7. ')' → logprob: -6.672906875610352
    8. '        
' → logprob: -6.922906875610352
    9. '   ' → logprob: -7.047906875610352
    10. '    ' → logprob: -7.172906875610352

Token 399: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008105400949716568
    2. '<|end|>' → logprob: -5.258105278015137
    3. '.' → logprob: -6.383105278015137
    4. ',' → logprob: -7.258105278015137
    5. '<|end|>' → logprob: -9.133105278015137
    6. '        
' → logprob: -9.508105278015137
    7. ')' → logprob: -9.508105278015137
    8. '
' → logprob: -9.633105278015137
    9. 'import' → logprob: -10.758105278015137
    10. '        ' → logprob: -11.258105278015137

Token 400: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006337437778711319
    2. '.' → logprob: -5.756337642669678
    3. ',' → logprob: -6.506337642669678
    4. '
' → logprob: -7.131337642669678
    5. ' and' → logprob: -8.13133716583252
    6. '        
' → logprob: -8.88133716583252
    7. '```' → logprob: -9.75633716583252
    8. '<|end|>' → logprob: -10.00633716583252
    9. 'base' → logprob: -10.25633716583252
    10. 'def' → logprob: -10.50633716583252

Token 401: ' The' (ID: 623)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08299586921930313
    2. 'side' → logprob: -3.707995891571045
    3. 'extended' → logprob: -4.207995891571045
    4. 'new' → logprob: -4.332995891571045
    5. 'base' → logprob: -4.832995891571045
    6. ' side' → logprob: -5.332995891571045
    7. 'total' → logprob: -5.832995891571045
    8. ' new' → logprob: -6.082995891571045
    9. ' base' → logprob: -6.457995891571045
    10. ' extended' → logprob: -6.582995891571045

Token 402: ' known' (ID: 5542)
  Prédit: ' base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' base' → logprob: -1.0197670459747314
    2. 'base' → logprob: -1.6447670459747314
    3. 'total' → logprob: -2.1447670459747314
    4. ' total' → logprob: -2.3947670459747314
    5. 'def' → logprob: -2.8947670459747314
    6. ' new' → logprob: -2.8947670459747314
    7. 'new' → logprob: -3.1447670459747314
    8. ' def' → logprob: -3.6447670459747314
    9. 'side' → logprob: -4.269766807556152
    10. ' side' → logprob: -4.394766807556152

Token 403: ' formula' (ID: 20690)
  Prédit: ' base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -1.0955467224121094
    2. ' side' → logprob: -1.0955467224121094
    3. ' formula' → logprob: -2.4705467224121094
    4. ' total' → logprob: -3.2205467224121094
    5. '_base' → logprob: -3.9705467224121094
    6. ' area' → logprob: -4.095546722412109
    7. ' length' → logprob: -4.220546722412109
    8. ' max' → logprob: -4.345546722412109
    9. 'side' → logprob: -4.345546722412109
    10. 'base' → logprob: -4.345546722412109

Token 404: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7297466397285461
    2. ' for' → logprob: -0.8547466397285461
    3. ':' → logprob: -3.4797465801239014
    4. ' is' → logprob: -3.9797465801239014
    5. ' side' → logprob: -5.1047468185424805
    6. ' total' → logprob: -5.2297468185424805
    7. 'for' → logprob: -5.3547468185424805
    8. 's' → logprob: -5.7297468185424805
    9. ' return' → logprob: -5.7297468185424805
    10. 'total' → logprob: -5.8547468185424805

Token 405: ' analysis' (ID: 8450)
  Prédit: 'geometry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'geometry' → logprob: -0.32054582238197327
    2. ' geometry' → logprob: -2.3205459117889404
    3. 'Her' → logprob: -2.6955459117889404
    4. 'the' → logprob: -2.8205459117889404
    5. 'math' → logprob: -4.320545673370361
    6. 'problem' → logprob: -4.820545673370361
    7. ' math' → logprob: -5.320545673370361
    8. 'her' → logprob: -5.320545673370361
    9. ' Her' → logprob: -5.445545673370361
    10. ' the' → logprob: -5.945545673370361

Token 406: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2873426675796509
    2. ' for' → logprob: -2.1623425483703613
    3. ':' → logprob: -2.9123425483703613
    4. ' is' → logprob: -3.0373425483703613
    5. ' =' → logprob: -4.037342548370361
    6. ' side' → logprob: -5.537342548370361
    7. ' of' → logprob: -6.537342548370361
    8. '=' → logprob: -6.537342548370361
    9. ',' → logprob: -7.287342548370361
    10. ' will' → logprob: -7.412342548370361

Token 407: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002775438770186156
    2. '```' → logprob: -9.250277519226074
    3. 'import' → logprob: -9.500277519226074
    4. 'side' → logprob: -10.375277519226074
    5. 'return' → logprob: -10.750277519226074
    6. ' side' → logprob: -11.625277519226074
    7. 'n' → logprob: -11.750277519226074
    8. 'total' → logprob: -12.125277519226074
    9. 'l' → logprob: -12.375277519226074
    10. 'new' → logprob: -12.750277519226074

Token 408: ' #' (ID: 1069)
  Prédit: 'side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'side' → logprob: -1.020493984222412
    2. 'base' → logprob: -1.270493984222412
    3. '       ' → logprob: -1.770493984222412
    4. 'import' → logprob: -2.520493984222412
    5. 'def' → logprob: -3.020493984222412
    6. 'new' → logprob: -4.520493984222412
    7. 'extended' → logprob: -4.770493984222412
    8. 'b' → logprob: -5.020493984222412
    9. 'from' → logprob: -5.020493984222412
    10. 'l' → logprob: -5.395493984222412

Token 409: ' max' (ID: 2999)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9339871406555176
    2. 'base' → logprob: -1.5589871406555176
    3. 'side' → logprob: -2.4339871406555176
    4. 'def' → logprob: -2.6839871406555176
    5. '       ' → logprob: -2.8089871406555176
    6. 's' → logprob: -2.9339871406555176
    7. 'from' → logprob: -3.0589871406555176
    8. 'max' → logprob: -3.9339871406555176
    9. 'return' → logprob: -4.558987140655518
    10. 'total' → logprob: -4.933987140655518

Token 410: ' area' (ID: 3624)
  Prédit: '_area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_area' → logprob: -0.010338276624679565
    2. '_extended' → logprob: -5.260338306427002
    3. '_total' → logprob: -6.510338306427002
    4. '_length' → logprob: -6.760338306427002
    5. '_m' → logprob: -7.385338306427002
    6. '_x' → logprob: -7.510338306427002
    7. '_M' → logprob: -7.635338306427002
    8. '_side' → logprob: -8.260337829589844
    9. 'M' → logprob: -9.260337829589844
    10. '_extension' → logprob: -9.510337829589844

Token 411: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043198779225349426
    2. '=' → logprob: -3.168198823928833
    3. '_' → logprob: -9.293198585510254
    4. ':' → logprob: -9.918198585510254
    5. '_base' → logprob: -10.543198585510254
    6. ' is' → logprob: -11.793198585510254
    7. 's' → logprob: -11.793198585510254
    8. '_extended' → logprob: -12.543198585510254
    9. '_original' → logprob: -13.668198585510254
    10. ',' → logprob: -13.668198585510254

Token 412: ' (' (ID: 350)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0299575328826904
    2. '0' → logprob: -1.2799575328826904
    3. '(self' → logprob: -2.4049575328826904
    4. 'math' → logprob: -2.6549575328826904
    5. '((' → logprob: -3.0299575328826904
    6. '(' → logprob: -3.0299575328826904
    7. ' self' → logprob: -3.1549575328826904
    8. ' (' → logprob: -3.5299575328826904
    9. 'Is' → logprob: -4.4049577713012695
    10. ' math' → logprob: -5.0299577713012695

Token 413: 'a' (ID: 64)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8244022130966187
    2. '(self' → logprob: -1.1994022130966187
    3. '0' → logprob: -2.074402332305908
    4. 'math' → logprob: -2.699402332305908
    5. ' (' → logprob: -3.824402332305908
    6. '(' → logprob: -4.699402332305908
    7. '(math' → logprob: -4.699402332305908
    8. '((' → logprob: -4.824402332305908
    9. ' self' → logprob: -5.324402332305908
    10. '1' → logprob: -5.699402332305908

Token 414: '/' (ID: 14)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.22978118062019348
    2. '*' → logprob: -1.854781150817871
    3. '/' → logprob: -4.354781150817871
    4. ' +' → logprob: -4.604781150817871
    5. ')' → logprob: -4.729781150817871
    6. '+' → logprob: -5.104781150817871
    7. ' ' → logprob: -5.479781150817871
    8. ' /' → logprob: -5.854781150817871
    9. '**' → logprob: -6.229781150817871
    10. '*(' → logprob: -7.479781150817871

Token 415: '4' (ID: 19)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00026574634830467403
    2. '(' → logprob: -8.750266075134277
    3. '4' → logprob: -10.125266075134277
    4. ' ' → logprob: -10.375266075134277
    5. ')' → logprob: -11.250266075134277
    6. '6' → logprob: -12.375266075134277
    7. '1' → logprob: -12.500266075134277
    8. 'a' → logprob: -12.625266075134277
    9. '3' → logprob: -12.875266075134277
    10. 'b' → logprob: -13.250266075134277

Token 416: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021845441311597824
    2. ')*' → logprob: -4.77184534072876
    3. '**' → logprob: -4.77184534072876
    4. '*' → logprob: -5.89684534072876
    5. ')**' → logprob: -7.27184534072876
    6. ' *' → logprob: -7.52184534072876
    7. ' )' → logprob: -8.021845817565918
    8. ')*(' → logprob: -8.146845817565918
    9. '*)' → logprob: -10.396845817565918
    10. ' **' → logprob: -11.146845817565918

Token 417: ' sqrt' (ID: 44237)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.23578020930290222
    2. '(math' → logprob: -2.2357802391052246
    3. '(a' → logprob: -3.2357802391052246
    4. '(' → logprob: -3.7357802391052246
    5. '((' → logprob: -4.110780239105225
    6. ' math' → logprob: -4.235780239105225
    7. '(self' → logprob: -5.235780239105225
    8. ' (' → logprob: -6.235780239105225
    9. 'self' → logprob: -6.735780239105225
    10. '(s' → logprob: -8.735779762268066

Token 418: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01959102600812912
    2. '((' → logprob: -5.144590854644775
    3. '4' → logprob: -5.519590854644775
    4. '2' → logprob: -5.519590854644775
    5. '(a' → logprob: -6.019590854644775
    6. '16' → logprob: -6.519590854644775
    7. '1' → logprob: -7.269590854644775
    8. ' (' → logprob: -8.519591331481934
    9. 'a' → logprob: -8.644591331481934
    10. '9' → logprob: -8.644591331481934

Token 419: '4' (ID: 19)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18143317103385925
    2. '4' → logprob: -2.3064332008361816
    3. '(l' → logprob: -3.1814332008361816
    4. ' (' → logprob: -5.056433200836182
    5. '((' → logprob: -5.181433200836182
    6. ')' → logprob: -5.306433200836182
    7. '(a' → logprob: -5.806433200836182
    8. 'l' → logprob: -6.556433200836182
    9. '16' → logprob: -6.681433200836182
    10. '(x' → logprob: -7.056433200836182

Token 420: '(l' (ID: 4179)
  Prédit: '*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.5003755688667297
    2. '*' → logprob: -1.125375509262085
    3. '(self' → logprob: -3.750375509262085
    4. '(l' → logprob: -4.500375747680664
    5. ' *' → logprob: -4.625375747680664
    6. '*l' → logprob: -4.750375747680664
    7. '*self' → logprob: -4.750375747680664
    8. '(' → logprob: -5.625375747680664
    9. '*((' → logprob: -6.000375747680664
    10. '   ' → logprob: -7.875375747680664

Token 421: '+x' (ID: 91888)
  Prédit: '+x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+x' → logprob: -0.3456207513809204
    2. '+' → logprob: -1.3456207513809204
    3. ' +' → logprob: -3.595620632171631
    4. '+l' → logprob: -5.595620632171631
    5. '+a' → logprob: -8.970621109008789
    6. '**' → logprob: -9.095621109008789
    7. '+self' → logprob: -9.220621109008789
    8. 'plus' → logprob: -10.220621109008789
    9. 'x' → logprob: -10.220621109008789
    10. '*' → logprob: -10.345621109008789

Token 422: ')^' (ID: 73602)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.08385775238275528
    2. '2' → logprob: -2.958857774734497
    3. '*l' → logprob: -4.208857536315918
    4. '*' → logprob: -4.583857536315918
    5. ')**' → logprob: -6.583857536315918
    6. '*x' → logprob: -7.208857536315918
    7. ')' → logprob: -7.958857536315918
    8. 'l' → logprob: -8.333857536315918
    9. 's' → logprob: -8.458857536315918
    10. '+' → logprob: -9.583857536315918

Token 423: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.047913867980241776
    2. '**' → logprob: -3.4229137897491455
    3. '²' → logprob: -5.047914028167725
    4. '^' → logprob: -5.172914028167725
    5. '*' → logprob: -6.297914028167725
    6. ' ' → logprob: -9.047913551330566
    7. 'pow' → logprob: -10.547913551330566
    8. '
' → logprob: -11.047913551330566
    9. 'sup' → logprob: -11.297913551330566
    10. '```' → logprob: -11.922913551330566

Token 424: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.09090913087129593
    2. '-' → logprob: -2.465909242630005
    3. ')' → logprob: -7.090909004211426
    4. ' ' → logprob: -7.590909004211426
    5. '   ' → logprob: -7.965909004211426
    6. ' -
' → logprob: -9.715909004211426
    7. '    ' → logprob: -9.840909004211426
    8. '  ' → logprob: -10.215909004211426
    9. '-
' → logprob: -11.465909004211426
    10. ' )' → logprob: -11.590909004211426

Token 425: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0011720098555088043
    2. ' a' → logprob: -6.751172065734863
    3. '(a' → logprob: -14.001172065734863
    4. '	a' → logprob: -14.501172065734863
    5. '(' → logprob: -15.751172065734863
    6. ' (' → logprob: -15.876172065734863
    7. '   ' → logprob: -16.001171112060547
    8. ' ' → logprob: -16.126171112060547
    9. '{' → logprob: -17.876171112060547
    10. '2' → logprob: -18.251171112060547

Token 426: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.062131367623806
    2. '2' → logprob: -2.937131404876709
    3. '*' → logprob: -5.062131404876709
    4. ' **' → logprob: -8.31213092803955
    5. '²' → logprob: -8.43713092803955
    6. '^' → logprob: -8.56213092803955
    7. ')' → logprob: -8.93713092803955
    8. ' ' → logprob: -10.56213092803955
    9. '
' → logprob: -10.68713092803955
    10. ' *' → logprob: -11.18713092803955

Token 427: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.3676733690081164e-05
    2. ' ' → logprob: -11.50002384185791
    3. '
' → logprob: -11.50002384185791
    4. '²' → logprob: -13.87502384185791
    5. '```' → logprob: -14.12502384185791
    6. '22' → logprob: -15.37502384185791
    7. '**' → logprob: -15.56252384185791
    8. '   ' → logprob: -15.93752384185791
    9. ')' → logprob: -16.000022888183594
    10. '﻿' → logprob: -16.062522888183594

Token 428: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018233354203402996
    2. ' )' → logprob: -6.376823425292969
    3. '       ' → logprob: -10.251823425292969
    4. '   ' → logprob: -10.501823425292969
    5. ')
' → logprob: -10.751823425292969
    6. '))' → logprob: -11.126823425292969
    7. '")' → logprob: -11.626823425292969
    8. ')")' → logprob: -12.501823425292969
    9. ')`' → logprob: -13.626823425292969
    10. ' ' → logprob: -14.126823425292969

Token 429: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017016702622640878
    2. '
' → logprob: -9.37516975402832
    3. 'return' → logprob: -10.62516975402832
    4. '	' → logprob: -11.00016975402832
    5. '        
' → logprob: -11.62516975402832
    6. '   ' → logprob: -11.87516975402832
    7. ' return' → logprob: -12.12516975402832
    8. ')' → logprob: -12.37516975402832
    9. '           ' → logprob: -12.62516975402832
    10. 'n' → logprob: -12.75016975402832

Token 430: ' extended' (ID: 17290)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7777621150016785
    2. '       ' → logprob: -1.6527621746063232
    3. 'total' → logprob: -1.9027621746063232
    4. 'side' → logprob: -2.4027621746063232
    5. 'extended' (adapté à ' extended') → logprob: -3.0277621746063232
    6. 'import' → logprob: -3.5277621746063232
    7. 'new' → logprob: -4.277761936187744
    8. 'l' → logprob: -4.902761936187744
    9. 'length' → logprob: -5.902761936187744
    10. 'max' → logprob: -6.027761936187744

Token 431: '_side' (ID: 46130)
  Prédit: '_side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_side' → logprob: -0.2832985520362854
    2. '_length' → logprob: -1.4082984924316406
    3. '_len' → logprob: -6.533298492431641
    4. '_' → logprob: -7.908298492431641
    5. '_l' → logprob: -9.15829849243164
    6. '_s' → logprob: -9.28329849243164
    7. ' =' → logprob: -9.90829849243164
    8. '_leg' → logprob: -10.53329849243164
    9. '_sid' → logprob: -11.65829849243164
    10. 'side' → logprob: -11.90829849243164

Token 432: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06198213994503021
    2. '=' → logprob: -2.8119821548461914
    3. 's' → logprob: -11.436982154846191
    4. ' ' → logprob: -12.936982154846191
    5. '_length' → logprob: -14.811982154846191
    6. ')' → logprob: -15.186982154846191
    7. '_' → logprob: -15.686982154846191
    8. ',' → logprob: -15.811982154846191
    9. ' =
' → logprob: -16.436981201171875
    10. ':' → logprob: -16.436981201171875

Token 433: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06211915612220764
    2. ' self' → logprob: -2.812119245529175
    3. '(self' → logprob: -8.812119483947754
    4. '       ' → logprob: -13.437119483947754
    5. '	self' → logprob: -14.187119483947754
    6. '[self' → logprob: -15.687119483947754
    7. '=self' → logprob: -16.062118530273438
    8. '   ' → logprob: -16.437118530273438
    9. ' (' → logprob: -17.437118530273438
    10. '$self' → logprob: -17.562118530273438

Token 434: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -2.1054253011243418e-05
    2. '.' → logprob: -10.875020980834961
    3. 'l' → logprob: -13.250020980834961
    4. ' .' → logprob: -15.375020980834961
    5. '.L' → logprob: -17.62502098083496
    6. '	l' → logprob: -18.25002098083496
    7. '.a' → logprob: -18.50002098083496
    8. '.
' → logprob: -19.37502098083496
    9. '```' → logprob: -19.62502098083496
    10. '_l' → logprob: -20.00002098083496

Token 435: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931702494621277
    2. ' +' → logprob: -0.6931702494621277
    3. '+self' → logprob: -10.693170547485352
    4. '+
' → logprob: -15.443170547485352
    5. '＋' → logprob: -16.69317054748535
    6. ' ' → logprob: -17.31817054748535
    7. ' +
' → logprob: -17.31817054748535
    8. ' plus' → logprob: -17.69317054748535
    9. ' ' → logprob: -17.69317054748535
    10. '+s' → logprob: -17.94317054748535

Token 436: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018150296062231064
    2. ' self' → logprob: -4.018150329589844
    3. ' ' → logprob: -15.643150329589844
    4. '	self' → logprob: -17.018150329589844
    5. 'se' → logprob: -17.518150329589844
    6. 's' → logprob: -17.643150329589844
    7. 'x' → logprob: -18.393150329589844
    8. '   ' → logprob: -18.518150329589844
    9. ' 
' → logprob: -18.518150329589844
    10. '       ' → logprob: -18.518150329589844

Token 437: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0023606636095792055
    2. 'x' → logprob: -6.252360820770264
    3. '.' → logprob: -7.752360820770264
    4. ' .' → logprob: -13.377360343933105
    5. ' x' → logprob: -14.377360343933105
    6. '	x' → logprob: -16.002361297607422
    7. ' ' → logprob: -16.877361297607422
    8. '```' → logprob: -18.752361297607422
    9. '._' → logprob: -18.877361297607422
    10. '.
' → logprob: -19.002361297607422

Token 438: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.507665753364563
    2. '
' → logprob: -1.007665753364563
    3. '        
' → logprob: -3.6326656341552734
    4. '  
' → logprob: -6.132665634155273
    5. ' 
' → logprob: -6.757665634155273
    6. '        ' → logprob: -7.007665634155273
    7. '
' → logprob: -7.132665634155273
    8. '<|end|>' → logprob: -7.132665634155273
    9. '    
' → logprob: -8.632665634155273
    10. ' ' → logprob: -9.382665634155273

Token 439: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08552456647157669
    2. '       ' → logprob: -2.585524559020996
    3. '        
' → logprob: -6.085524559020996
    4. '
' → logprob: -6.835524559020996
    5. 'return' → logprob: -6.960524559020996
    6. ' 
' → logprob: -7.085524559020996
    7. ' return' → logprob: -7.710524559020996
    8. '<|end|>' → logprob: -7.835524559020996
    9. '  
' → logprob: -8.460524559020996
    10. '' → logprob: -9.335524559020996

Token 440: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4405554533004761
    2. 'max' → logprob: -1.190555453300476
    3. 'area' → logprob: -3.4405555725097656
    4. 'import' → logprob: -4.190555572509766
    5. 'result' → logprob: -5.565555572509766
    6. 'extended' → logprob: -7.940555572509766
    7. 'total' → logprob: -8.440555572509766
    8. 'from' → logprob: -8.440555572509766
    9. '   ' → logprob: -8.940555572509766
    10. '       ' → logprob: -9.690555572509766

Token 441: ' Check' (ID: 6208)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.9499346613883972
    2. 'max' → logprob: -0.9499346613883972
    3. 'area' → logprob: -1.574934720993042
    4. 'import' → logprob: -4.574934482574463
    5. 'term' → logprob: -6.199934482574463
    6. 'result' → logprob: -6.324934482574463
    7. 'extended' → logprob: -6.449934482574463
    8. 'total' → logprob: -7.574934482574463
    9. ' area' → logprob: -7.699934482574463
    10. 'math' → logprob: -7.824934482574463

Token 442: ' for' (ID: 395)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.04391583055257797
    2. 'if' → logprob: -3.1689157485961914
    3. '       ' → logprob: -7.293915748596191
    4. '        ' → logprob: -8.918915748596191
    5. ' for' → logprob: -10.043915748596191
    6. ' that' → logprob: -10.168915748596191
    7. ' self' → logprob: -11.793915748596191
    8. ' assert' → logprob: -12.168915748596191
    9. 'assert' → logprob: -13.293915748596191
    10. '           ' → logprob: -13.293915748596191

Token 443: ' numerical' (ID: 57979)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3134443461894989
    2. '4' → logprob: -2.1884443759918213
    3. 'extended' → logprob: -2.4384443759918213
    4. '2' → logprob: -3.4384443759918213
    5. 'if' → logprob: -4.438444137573242
    6. ' ' → logprob: -4.563444137573242
    7. ' (' → logprob: -5.063444137573242
    8. ' extended' → logprob: -5.438444137573242
    9. '   ' → logprob: -5.938444137573242
    10. '(a' → logprob: -7.438444137573242

Token 444: ' correctness' (ID: 132761)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.5256476998329163
    2. ' stability' → logprob: -0.9006476998329163
    3. ' errors' → logprob: -7.2756476402282715
    4. ' issues' → logprob: -7.4006476402282715
    5. ' st' → logprob: -7.6506476402282715
    6. 'errors' → logprob: -8.40064811706543
    7. ' instability' → logprob: -8.77564811706543
    8. '_st' → logprob: -9.02564811706543
    9. 'inst' → logprob: -9.52564811706543
    10. 'issues' → logprob: -10.15064811706543

Token 445: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16239097714424133
    2. ' if' → logprob: -2.662390947341919
    3. '
' → logprob: -2.787390947341919
    4. 'if' → logprob: -5.162391185760498
    5. '        
' → logprob: -5.412391185760498
    6. ',' → logprob: -6.037391185760498
    7. ' and' → logprob: -6.412391185760498
    8. '<|end|>' → logprob: -7.037391185760498
    9. ' 
' → logprob: -7.162391185760498
    10. '  
' → logprob: -7.287391185760498

Token 446: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10007434338331223
    2. 'if' → logprob: -2.600074291229248
    3. ' if' → logprob: -3.975074291229248
    4. '<|end|>' → logprob: -6.975074291229248
    5. 'import' → logprob: -8.225074768066406
    6. 'assert' → logprob: -8.600074768066406
    7. ' ' → logprob: -9.225074768066406
    8. 'valid' → logprob: -9.975074768066406
    9. 'return' → logprob: -9.975074768066406
    10. '        
' → logprob: -9.975074768066406

Token 447: '4' (ID: 19)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3073504567146301
    2. 'dis' → logprob: -1.5573503971099854
    3. 'assert' → logprob: -3.9323503971099854
    4. 'under' → logprob: -4.1823506355285645
    5. 'val' → logprob: -5.6823506355285645
    6. ' if' → logprob: -6.0573506355285645
    7. 'arg' → logprob: -6.1823506355285645
    8. 'sqrt' → logprob: -6.3073506355285645
    9. 'term' → logprob: -6.4323506355285645
    10. 'value' → logprob: -6.6823506355285645

Token 448: '(side' (ID: 95460)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.47486576437950134
    2. '*' → logprob: -1.0998657941818237
    3. '*(' → logprob: -3.099865674972534
    4. ' *(' → logprob: -10.724865913391113
    5. '*((' → logprob: -10.724865913391113
    6. '*object' → logprob: -12.349865913391113
    7. '(' → logprob: -12.474865913391113
    8. '   ' → logprob: -13.349865913391113
    9. '*self' → logprob: -13.849865913391113
    10. '.' → logprob: -13.974865913391113

Token 449: ')^' (ID: 73602)
  Prédit: ')**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.5079745650291443
    2. '_extended' → logprob: -2.132974624633789
    3. '**' → logprob: -2.257974624633789
    4. ')' → logprob: -2.507974624633789
    5. ' *' → logprob: -3.507974624633789
    6. '*' → logprob: -3.757974624633789
    7. 's' → logprob: -4.007974624633789
    8. '   ' → logprob: -5.507974624633789
    9. ' )' → logprob: -5.632974624633789
    10. ' **' → logprob: -5.632974624633789

Token 450: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002905334113165736
    2. ' ' → logprob: -8.375290870666504
    3. '**' → logprob: -10.000290870666504
    4. '
' → logprob: -11.625290870666504
    5. '*' → logprob: -14.125290870666504
    6. '<|end|>' → logprob: -14.250290870666504
    7. '

' → logprob: -14.375290870666504
    8. '```' → logprob: -14.500290870666504
    9. '
' → logprob: -14.875290870666504
    10. '   ' → logprob: -14.875290870666504

Token 451: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.11433281004428864
    2. ' >' → logprob: -3.364332914352417
    3. ' *' → logprob: -3.364332914352417
    4. '<|end|>' → logprob: -3.864332914352417
    5. '*' → logprob: -5.239332675933838
    6. '-' → logprob: -5.364332675933838
    7. ' ' → logprob: -5.614332675933838
    8. '>' → logprob: -6.114332675933838
    9. ' >=' → logprob: -6.864332675933838
    10. ')' → logprob: -7.864332675933838

Token 452: ' base' (ID: 3611)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3871237635612488
    2. 'self' → logprob: -1.1371238231658936
    3. '(self' → logprob: -8.887124061584473
    4. ' (' → logprob: -10.387124061584473
    5. '=self' → logprob: -10.512124061584473
    6. '   ' → logprob: -11.137124061584473
    7. ' a' → logprob: -11.512124061584473
    8. '	self' → logprob: -11.887124061584473
    9. 'a' → logprob: -12.012124061584473
    10. ' ' → logprob: -12.012124061584473

Token 453: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.17865711450576782
    2. ' **' → logprob: -2.178657054901123
    3. ')' → logprob: -4.428657054901123
    4. '<|end|>' → logprob: -4.428657054901123
    5. ' >' → logprob: -5.053657054901123
    6. ' >=' → logprob: -5.303657054901123
    7. '_squared' → logprob: -5.678657054901123
    8. ' *' → logprob: -5.678657054901123
    9. ' ' → logprob: -5.928657054901123
    10. ' <' → logprob: -6.553657054901123

Token 454: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.927930654550437e-05
    2. ' ' → logprob: -11.375029563903809
    3. '```' → logprob: -12.000029563903809
    4. '{' → logprob: -12.125029563903809
    5. '**' → logprob: -12.875029563903809
    6. '   ' → logprob: -14.125029563903809
    7. '=' → logprob: -14.125029563903809
    8. '>' → logprob: -14.500029563903809
    9. '
' → logprob: -15.250029563903809
    10. '(' → logprob: -15.312529563903809

Token 455: ' must' (ID: 2804)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9906364679336548
    2. ' >' → logprob: -1.3656364679336548
    3. '
' → logprob: -1.9906364679336548
    4. ' if' → logprob: -2.1156363487243652
    5. ' >=' → logprob: -2.9906363487243652
    6. '>' → logprob: -3.8656363487243652
    7. 'if' → logprob: -4.490636348724365
    8. '        
' → logprob: -4.865636348724365
    9. '<|end|>' → logprob: -5.240636348724365
    10. '>=' → logprob: -5.365636348724365

Token 456: ' be' (ID: 413)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.8934082984924316
    2. ' be' → logprob: -1.0184082984924316
    3. '>=' → logprob: -1.8934082984924316
    4. '>' → logprob: -3.1434082984924316
    5. ' >' → logprob: -3.3934082984924316
    6. ' ' → logprob: -6.893408298492432
    7. ')>=' → logprob: -7.768408298492432
    8. ')' → logprob: -7.893408298492432
    9. ']>=' → logprob: -9.268407821655273
    10. '<|end|>' → logprob: -9.768407821655273

Token 457: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.12171485275030136
    2. '>' → logprob: -2.3717148303985596
    3. ' >=' → logprob: -3.9967148303985596
    4. ' positive' → logprob: -6.746715068817139
    5. ' >' → logprob: -7.371715068817139
    6. 'greater' → logprob: -7.746715068817139
    7. 'positive' → logprob: -8.12171459197998
    8. ' greater' → logprob: -8.87171459197998
    9. 'non' → logprob: -9.74671459197998
    10. ' non' → logprob: -9.74671459197998

Token 458: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004915529862046242
    2. ' ' → logprob: -7.625491619110107
    3. '   ' → logprob: -12.62549114227295
    4. '       ' → logprob: -16.875492095947266
    5. '  ' → logprob: -17.250492095947266
    6. '    ' → logprob: -17.250492095947266
    7. '
' → logprob: -17.375492095947266
    8. ' ' → logprob: -17.875492095947266
    9. '```' → logprob: -18.000492095947266
    10. '     ' → logprob: -18.625492095947266

Token 459: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010986098641296849
    2. ' ' → logprob: -9.125109672546387
    3. '   ' → logprob: -14.375109672546387
    4. 'zero' → logprob: -16.000110626220703
    5. '4' → logprob: -16.937610626220703
    6. '۰' → logprob: -17.062610626220703
    7. '```' → logprob: -17.187610626220703
    8. '    ' → logprob: -17.875110626220703
    9. '  ' → logprob: -17.937610626220703
    10. '
' → logprob: -18.187610626220703

Token 460: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018735216930508614
    2. '
' → logprob: -4.893735408782959
    3. ' if' → logprob: -5.143735408782959
    4. '        
' → logprob: -6.018735408782959
    5. 'if' → logprob: -6.268735408782959
    6. '  
' → logprob: -8.0187349319458
    7. ' 
' → logprob: -8.8937349319458
    8. ',' → logprob: -8.8937349319458
    9. '\n' → logprob: -9.8937349319458
    10. '\' → logprob: -10.3937349319458

Token 461: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001987398136407137
    2. ' if' → logprob: -6.751987457275391
    3. 'if' → logprob: -8.12698745727539
    4. '        
' → logprob: -8.62698745727539
    5. '
' → logprob: -9.00198745727539
    6. '<|end|>' → logprob: -9.75198745727539
    7. ',' → logprob: -10.12698745727539
    8. '	' → logprob: -10.75198745727539
    9. 'n' → logprob: -11.12698745727539
    10. '	if' → logprob: -12.00198745727539

Token 462: ' val' (ID: 1459)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1632789522409439
    2. '       ' → logprob: -2.5382790565490723
    3. 'if' → logprob: -2.9132790565490723
    4. ' discrimin' → logprob: -4.538279056549072
    5. 'diff' → logprob: -6.288279056549072
    6. ' assert' → logprob: -7.163279056549072
    7. ' area' → logprob: -7.288279056549072
    8. ' value' → logprob: -7.538279056549072
    9. 'assert' → logprob: -7.788279056549072
    10. ' squared' → logprob: -8.038278579711914

Token 463: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47915494441986084
    2. '=' → logprob: -0.9791549444198608
    3. 'id' → logprob: -5.72915506362915
    4. 'ue' → logprob: -6.60415506362915
    5. '_' → logprob: -8.729154586791992
    6. 'alid' → logprob: -8.729154586791992
    7. '_val' → logprob: -10.979154586791992
    8. 'u' → logprob: -11.104154586791992
    9. 'uate' → logprob: -11.229154586791992
    10. 'iation' → logprob: -11.479154586791992

Token 464: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0007425647345371544
    2. ' ' → logprob: -7.250742435455322
    3. '(' → logprob: -10.50074291229248
    4. '   ' → logprob: -12.50074291229248
    5. ' (' → logprob: -13.62574291229248
    6. 'max' → logprob: -16.500741958618164
    7. '  ' → logprob: -16.750741958618164
    8. '
' → logprob: -17.125741958618164
    9. '```' → logprob: -18.000741958618164
    10. ' four' → logprob: -18.625741958618164

Token 465: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -3.404745439183898e-05
    2. ' ' → logprob: -10.87503433227539
    3. '(' → logprob: -11.12503433227539
    4. 'max' → logprob: -16.00003433227539
    5. '   ' → logprob: -16.37503433227539
    6. ' (' → logprob: -17.00003433227539
    7. '```' → logprob: -18.12503433227539
    8. 'four' → logprob: -18.25003433227539
    9. '
' → logprob: -18.50003433227539
    10. '４' → logprob: -19.25003433227539

Token 466: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3004506230354309
    2. ' *' → logprob: -1.5504505634307861
    3. '*(' → logprob: -3.050450563430786
    4. '*((' → logprob: -11.050450325012207
    5. ' *(' → logprob: -12.550450325012207
    6. '*object' → logprob: -12.675450325012207
    7. '(' → logprob: -13.800450325012207
    8. ' (' → logprob: -14.425450325012207
    9. '<|end|>' → logprob: -15.175450325012207
    10. ' ' → logprob: -15.300450325012207

Token 467: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01163303293287754
    2. ' (' → logprob: -5.136632919311523
    3. 'extended' → logprob: -5.261632919311523
    4. ' extended' → logprob: -7.636632919311523
    5. '*' → logprob: -11.636632919311523
    6. ' *' → logprob: -12.761632919311523
    7. '(extension' → logprob: -13.011632919311523
    8. '(ext' → logprob: -13.636632919311523
    9. '_extended' → logprob: -13.761632919311523
    10. '   ' → logprob: -14.011632919311523

Token 468: 'extended' (ID: 83604)
  Prédit: 'extended'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'extended' → logprob: -0.0002036595979006961
    2. ' extended' → logprob: -8.500204086303711
    3. '   ' → logprob: -16.00020408630371
    4. '(' → logprob: -17.12520408630371
    5. '_extended' → logprob: -17.62520408630371
    6. '           ' → logprob: -19.62520408630371
    7. 'Extended' → logprob: -20.00020408630371
    8. 'extends' → logprob: -20.12520408630371
    9. 'expanded' → logprob: -20.12520408630371
    10. '       ' → logprob: -21.00020408630371

Token 469: '_side' (ID: 46130)
  Prédit: '_side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_side' → logprob: -1.8312570318812504e-05
    2. 'side' → logprob: -11.125018119812012
    3. '_SIDE' → logprob: -13.750018119812012
    4. '   ' → logprob: -14.250018119812012
    5. '_' → logprob: -14.500018119812012
    6. ' side' → logprob: -15.250018119812012
    7. '	side' → logprob: -15.250018119812012
    8. 's' → logprob: -15.625018119812012
    9. '_extended' → logprob: -16.000019073486328
    10. ' _' → logprob: -16.125019073486328

Token 470: ' **' (ID: 6240)
  Prédit: ')**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.6075727939605713
    2. '**' → logprob: -0.9825727939605713
    3. ' **' → logprob: -3.1075727939605713
    4. ')' → logprob: -3.3575727939605713
    5. ' )' → logprob: -6.607572555541992
    6. '**)' → logprob: -9.982572555541992
    7. ' **)' → logprob: -10.732572555541992
    8. '*' → logprob: -11.357572555541992
    9. ' ' → logprob: -11.482572555541992
    10. ' *' → logprob: -11.982572555541992

Token 471: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.383526149671525e-05
    2. ' ' → logprob: -9.875053405761719
    3. '   ' → logprob: -13.750053405761719
    4. ')' → logprob: -15.062553405761719
    5. '  ' → logprob: -15.437553405761719
    6. '```' → logprob: -15.812553405761719
    7. '۲' → logprob: -16.50005340576172
    8. '     ' → logprob: -16.87505340576172
    9. '       ' → logprob: -17.00005340576172
    10. '    ' → logprob: -17.00005340576172

Token 472: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.727905979962088e-05
    2. ' ' → logprob: -10.00004768371582
    3. ')' → logprob: -14.37504768371582
    4. '   ' → logprob: -14.62504768371582
    5. '  ' → logprob: -16.18754768371582
    6. '
' → logprob: -16.43754768371582
    7. '۲' → logprob: -16.50004768371582
    8. '```' → logprob: -16.56254768371582
    9. '       ' → logprob: -16.93754768371582
    10. '{' → logprob: -17.06254768371582

Token 473: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008129627676680684
    2. ' )' → logprob: -7.125813007354736
    3. ' -' → logprob: -12.250812530517578
    4. '<|end|>' → logprob: -14.000812530517578
    5. ' ' → logprob: -14.750812530517578
    6. ')-' → logprob: -14.875812530517578
    7. '       ' → logprob: -14.875812530517578
    8. '   ' → logprob: -15.125812530517578
    9. '-)' → logprob: -15.250812530517578
    10. '`)' → logprob: -15.250812530517578

Token 474: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.010101808235049248
    2. '-' → logprob: -4.635101795196533
    3. ' ' → logprob: -8.885102272033691
    4. '        ' → logprob: -9.635102272033691
    5. ')' → logprob: -9.760102272033691
    6. '       ' → logprob: -10.510102272033691
    7. ' ' → logprob: -11.135102272033691
    8. '<|end|>' → logprob: -11.385102272033691
    9. '>' → logprob: -11.885102272033691
    10. ',' → logprob: -12.260102272033691

Token 475: ' (' (ID: 350)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.033768679946660995
    2. ' self' → logprob: -3.533768653869629
    3. '(self' → logprob: -5.533768653869629
    4. ' (' → logprob: -9.783768653869629
    5. '	self' → logprob: -13.658768653869629
    6. '   ' → logprob: -14.033768653869629
    7. '(' → logprob: -15.158768653869629
    8. ' ' → logprob: -15.158768653869629
    9. '[self' → logprob: -15.908768653869629
    10. '
' → logprob: -17.158769607543945

Token 476: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009136092266999185
    2. ' self' → logprob: -7.000913619995117
    3. '       ' → logprob: -13.875913619995117
    4. '(self' → logprob: -14.000913619995117
    5. '   ' → logprob: -15.250913619995117
    6. '	self' → logprob: -16.250913619995117
    7. '           ' → logprob: -17.000913619995117
    8. ' ' → logprob: -18.250913619995117
    9. '[self' → logprob: -18.375913619995117
    10. '
' → logprob: -18.625913619995117

Token 477: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.001943395473062992
    2. 'a' → logprob: -6.251943588256836
    3. '.' → logprob: -11.126943588256836
    4. ' .' → logprob: -17.001943588256836
    5. ' a' → logprob: -17.251943588256836
    6. '	a' → logprob: -19.251943588256836
    7. '#a' → logprob: -19.376943588256836
    8. ')a' → logprob: -19.626943588256836
    9. ').' → logprob: -20.126943588256836
    10. '   ' → logprob: -20.251943588256836

Token 478: ' **' (ID: 6240)
  Prédit: ' **'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.5583624839782715
    2. '**' → logprob: -0.9333624839782715
    3. ')' → logprob: -3.6833624839782715
    4. ')**' → logprob: -4.6833624839782715
    5. ' )' → logprob: -8.68336296081543
    6. ' **)' → logprob: -10.80836296081543
    7. '**)' → logprob: -11.30836296081543
    8. ' ' → logprob: -11.43336296081543
    9. '*' → logprob: -11.43336296081543
    10. '2' → logprob: -12.68336296081543

Token 479: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014036978245712817
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -14.750140190124512
    4. '```' → logprob: -17.500141143798828
    5. '  ' → logprob: -17.625141143798828
    6. '    ' → logprob: -18.625141143798828
    7. ')' → logprob: -18.875141143798828
    8. '       ' → logprob: -19.250141143798828
    9. '{' → logprob: -19.500141143798828
    10. '     ' → logprob: -19.625141143798828

Token 480: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001242772996192798
    2. ' ' → logprob: -9.000123977661133
    3. '   ' → logprob: -14.250123977661133
    4. '  ' → logprob: -16.625123977661133
    5. '```' → logprob: -17.562623977661133
    6. '    ' → logprob: -17.625123977661133
    7. ')' → logprob: -17.750123977661133
    8. '{' → logprob: -17.937623977661133
    9. '۲' → logprob: -18.000123977661133
    10. '       ' → logprob: -18.812623977661133

Token 481: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018210114911198616
    2. ')
' → logprob: -4.018209934234619
    3. '       ' → logprob: -10.518210411071777
    4. ' )' → logprob: -11.018210411071777
    5. ')

' → logprob: -12.268210411071777
    6. ')
' → logprob: -12.518210411071777
    7. ' )
' → logprob: -13.393210411071777
    8. '   ' → logprob: -13.768210411071777
    9. ')>' → logprob: -13.893210411071777
    10. '<|end|>' → logprob: -14.018210411071777

Token 482: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009529291652143002
    2. '
' → logprob: -4.884529113769531
    3. '<|end|>' → logprob: -7.259529113769531
    4. ' if' → logprob: -7.884529113769531
    5. '        
' → logprob: -8.384529113769531
    6. 'if' → logprob: -8.759529113769531
    7. ',' → logprob: -8.884529113769531
    8. ')' → logprob: -9.134529113769531
    9. '  
' → logprob: -9.634529113769531
    10. '   ' → logprob: -10.259529113769531

Token 483: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7056130766868591
    2. '       ' → logprob: -1.080613136291504
    3. 'if' (adapté à ' if') → logprob: -2.080613136291504
    4. '
' → logprob: -3.330613136291504
    5. ' 
' → logprob: -6.080613136291504
    6. ' ' → logprob: -6.205613136291504
    7. ',' → logprob: -8.080613136291504
    8. '        
' → logprob: -8.205613136291504
    9. '   ' → logprob: -8.455613136291504
    10. ')' → logprob: -8.580613136291504

Token 484: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.12693126499652863
    2. 'val' → logprob: -2.1269311904907227
    3. '	val' → logprob: -13.001931190490723
    4. '   ' → logprob: -14.876931190490723
    5. '(val' → logprob: -15.001931190490723
    6. ' ' → logprob: -16.12693214416504
    7. '[val' → logprob: -16.87693214416504
    8. '_val' → logprob: -17.50193214416504
    9. 'v' → logprob: -17.50193214416504
    10. '    ' → logprob: -18.25193214416504

Token 485: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.14273488521575928
    2. '<' → logprob: -2.017735004425049
    3. ' >=' → logprob: -10.26773452758789
    4. '>=' → logprob: -11.39273452758789
    5. ' ' → logprob: -11.89273452758789
    6. ' <=' → logprob: -13.64273452758789
    7. '<=' → logprob: -13.76773452758789
    8. '   ' → logprob: -13.76773452758789
    9. '<m' → logprob: -14.64273452758789
    10. '<n' → logprob: -14.76773452758789

Token 486: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.694766489090398e-05
    2. ' ' → logprob: -9.625066757202148
    3. '   ' → logprob: -14.500066757202148
    4. '-' → logprob: -15.375066757202148
    5. '  ' → logprob: -17.75006675720215
    6. ' -' → logprob: -17.87506675720215
    7. '=' → logprob: -18.37506675720215
    8. '۰' → logprob: -18.37506675720215
    9. '	' → logprob: -18.87506675720215
    10. '1' → logprob: -18.87506675720215

Token 487: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.225939872208983e-05
    2. ' ' → logprob: -11.000032424926758
    3. '-' → logprob: -11.125032424926758
    4. ' -' → logprob: -14.500032424926758
    5. '   ' → logprob: -15.375032424926758
    6. '1' → logprob: -17.500032424926758
    7. '  ' → logprob: -17.875032424926758
    8. '=' → logprob: -17.875032424926758
    9. '۰' → logprob: -18.250032424926758
    10. '```' → logprob: -18.250032424926758

Token 488: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.655630350112915
    2. ':' → logprob: -0.780630350112915
    3. '       ' → logprob: -4.280630111694336
    4. '           ' → logprob: -4.780630111694336
    5. ' or' → logprob: -8.780630111694336
    6. ' :
' → logprob: -9.280630111694336
    7. '0' → logprob: -9.655630111694336
    8. ',' → logprob: -9.655630111694336
    9. ':return' → logprob: -9.905630111694336
    10. '):
' → logprob: -10.655630111694336

Token 489: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030064716935157776
    2. '0' → logprob: -3.530064821243286
    3. 'return' → logprob: -8.905064582824707
    4. ' return' → logprob: -9.780064582824707
    5. ' raise' → logprob: -10.280064582824707
    6. 'raise' → logprob: -10.280064582824707
    7. '1' → logprob: -10.905064582824707
    8. '       ' → logprob: -11.155064582824707
    9. ' ' → logprob: -11.655064582824707
    10. '            
' → logprob: -12.780064582824707

Token 490: ' val' (ID: 1459)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5464556813240051
    2. '           ' → logprob: -1.0464556217193604
    3. 'val' (adapté à ' val') → logprob: -3.0464556217193604
    4. ' return' → logprob: -4.0464558601379395
    5. 'raise' → logprob: -5.6714558601379395
    6. ' val' → logprob: -7.4214558601379395
    7. '0' → logprob: -7.7964558601379395
    8. ' raise' → logprob: -8.171455383300781
    9. '       ' → logprob: -10.421455383300781
    10. '[val' → logprob: -11.421455383300781

Token 491: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741208553314209
    2. '=' → logprob: -0.9741208553314209
    3. '           ' → logprob: -11.72412109375
    4. ' ' → logprob: -11.84912109375
    5. ')' → logprob: -12.09912109375
    6. 'return' → logprob: -12.22412109375
    7. 'raise' → logprob: -12.84912109375
    8. '       ' → logprob: -13.09912109375
    9. '=None' → logprob: -13.47412109375
    10. ' +=' → logprob: -13.72412109375

Token 492: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.596781946020201e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -14.750045776367188
    4. '  ' → logprob: -17.875045776367188
    5. '=' → logprob: -18.375045776367188
    6. '۰' → logprob: -18.875045776367188
    7. ' ' → logprob: -19.000045776367188
    8. '    ' → logprob: -19.375045776367188
    9. '﻿' → logprob: -20.250045776367188
    10. '000' → logprob: -20.875045776367188

Token 493: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -15.750009536743164
    4. '۰' → logprob: -17.625009536743164
    5. ' ' → logprob: -18.562509536743164
    6. '000' → logprob: -18.625009536743164
    7. '  ' → logprob: -18.625009536743164
    8. 'math' → logprob: -18.812509536743164
    9. '00' → logprob: -19.250009536743164
    10. '=' → logprob: -19.312509536743164

Token 494: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.049028780311346054
    2. '
' → logprob: -3.0490288734436035
    3. '        
' → logprob: -7.9240288734436035
    4. 'return' → logprob: -10.299028396606445
    5. '
' → logprob: -11.174028396606445
    6. ' return' → logprob: -11.549028396606445
    7. '<|end|>' → logprob: -11.924028396606445
    8. '            
' → logprob: -13.174028396606445
    9. '  
' → logprob: -13.299028396606445
    10. '           ' → logprob: -13.549028396606445

Token 495: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001108543947339058
    2. 'return' → logprob: -7.376108646392822
    3. ' return' → logprob: -7.876108646392822
    4. '        
' → logprob: -9.876108169555664
    5. '
' → logprob: -10.126108169555664
    6. '   ' → logprob: -13.001108169555664
    7. '	return' → logprob: -13.376108169555664
    8. '           ' → logprob: -13.626108169555664
    9. ',' → logprob: -14.251108169555664
    10. '    
' → logprob: -14.251108169555664

Token 496: ' max' (ID: 2999)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6445179581642151
    2. '       ' → logprob: -0.8945179581642151
    3. ' return' → logprob: -2.7695178985595703
    4. 'result' → logprob: -6.14451789855957
    5. 'import' → logprob: -7.64451789855957
    6. '        
' → logprob: -8.39451789855957
    7. 'max' (adapté à ' max') → logprob: -8.64451789855957
    8. 'area' → logprob: -8.64451789855957
    9. ' result' → logprob: -9.14451789855957
    10. '
' → logprob: -9.51951789855957

Token 497: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -6.630610641877865e-06
    2. 'area' → logprob: -13.125006675720215
    3. '_' → logprob: -13.250006675720215
    4. '_side' → logprob: -13.875006675720215
    5. ' area' → logprob: -14.000006675720215
    6. '_are' → logprob: -15.875006675720215
    7. '_extended' → logprob: -16.0000057220459
    8. '_angle' → logprob: -16.1250057220459
    9. '_val' → logprob: -16.2500057220459
    10. '_value' → logprob: -16.5000057220459

Token 498: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197015196084976
    2. '=' → logprob: -2.8119702339172363
    3. ' ' → logprob: -13.311969757080078
    4. ':' → logprob: -15.061969757080078
    5. '       ' → logprob: -16.061969757080078
    6. '    ' → logprob: -16.061969757080078
    7. '   ' → logprob: -16.311969757080078
    8. ')' → logprob: -16.561969757080078
    9. '	' → logprob: -16.561969757080078
    10. 'return' → logprob: -17.436969757080078

Token 499: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6931721568107605
    2. '(self' → logprob: -0.6931721568107605
    3. ' self' → logprob: -10.818172454833984
    4. 'self' → logprob: -12.693172454833984
    5. '       ' → logprob: -13.318172454833984
    6. '   ' → logprob: -16.193172454833984
    7. ' ' → logprob: -17.318172454833984
    8. '           ' → logprob: -18.193172454833984
    9. '=self' → logprob: -18.443172454833984
    10. '(s' → logprob: -18.568172454833984

Token 500: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.429896944202483e-05
    2. '(self' → logprob: -10.500043869018555
    3. ' self' → logprob: -11.000043869018555
    4. '   ' → logprob: -17.500043869018555
    5. '	self' → logprob: -19.125043869018555
    6. '       ' → logprob: -19.250043869018555
    7. '0' → logprob: -19.500043869018555
    8. '[self' → logprob: -20.250043869018555
    9. '1' → logprob: -20.875043869018555
    10. ':self' → logprob: -21.000043869018555

Token 501: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -2.339278580620885e-06
    2. '.' → logprob: -13.750001907348633
    3. 'a' → logprob: -13.750001907348633
    4. ' .' → logprob: -16.375001907348633
    5. '#a' → logprob: -19.750001907348633
    6. '   ' → logprob: -20.500001907348633
    7. '```' → logprob: -20.750001907348633
    8. '_a' → logprob: -20.875001907348633
    9. ' a' → logprob: -21.375001907348633
    10. '`.' → logprob: -21.750001907348633

Token 502: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.632796049118042
    2. '/' → logprob: -0.757796049118042
    3. ' ' → logprob: -9.507796287536621
    4. '   ' → logprob: -10.132796287536621
    5. ')' → logprob: -10.507796287536621
    6. ' *' → logprob: -10.882796287536621
    7. '/
' → logprob: -11.132796287536621
    8. '*' → logprob: -11.882796287536621
    9. ' /
' → logprob: -12.257796287536621
    10. '
' → logprob: -12.382796287536621

Token 503: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -16.625001907348633
    4. ')' → logprob: -17.750001907348633
    5. '```' → logprob: -17.875001907348633
    6. '۴' → logprob: -18.500001907348633
    7. '４' → logprob: -19.250001907348633
    8. '٤' → logprob: -19.625001907348633
    9. '       ' → logprob: -19.875001907348633
    10. '' → logprob: -20.125001907348633

Token 504: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. '۴' → logprob: -20.5
    4. '４' → logprob: -21.125
    5. '```' → logprob: -21.125
    6. '٤' → logprob: -21.25
    7. '   ' → logprob: -22.125
    8. '' → logprob: -22.125
    9. '৪' → logprob: -22.625
    10. '४' → logprob: -22.875

Token 505: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.1080467781284824e-05
    2. ')*' → logprob: -10.250041007995605
    3. ' )' → logprob: -12.500041007995605
    4. '*)' → logprob: -14.000041007995605
    5. '*' → logprob: -14.375041007995605
    6. ' *' → logprob: -15.375041007995605
    7. '   ' → logprob: -16.250041961669922
    8. '）' → logprob: -16.250041961669922
    9. '       ' → logprob: -17.750041961669922
    10. ']' → logprob: -17.875041961669922

Token 506: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1269301027059555
    2. '*' → logprob: -2.126929998397827
    3. ' ' → logprob: -14.126930236816406
    4. ')' → logprob: -14.501930236816406
    5. ' ' → logprob: -14.876930236816406
    6. '**' → logprob: -16.126930236816406
    7. '   ' → logprob: -16.376930236816406
    8. ')*' → logprob: -16.751930236816406
    9. '*Math' → logprob: -16.876930236816406
    10. ' *
' → logprob: -17.751930236816406

Token 507: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.03804745525121689
    2. ' math' → logprob: -3.2880475521087646
    3. '(math' → logprob: -12.038047790527344
    4. '.math' → logprob: -17.538047790527344
    5. 'Math' → logprob: -17.538047790527344
    6. '_math' → logprob: -18.788047790527344
    7. '/math' → logprob: -19.663047790527344
    8. 'mat' → logprob: -20.163047790527344
    9. ' ' → logprob: -21.788047790527344
    10. 'cmath' → logprob: -22.038047790527344

Token 508: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.001293927663937211
    2. 'sqrt' → logprob: -6.751294136047363
    3. '.' → logprob: -9.001294136047363
    4. ' sqrt' → logprob: -15.251294136047363
    5. '.Sqrt' → logprob: -15.501294136047363
    6. '.s' → logprob: -17.501293182373047
    7. '√' → logprob: -17.626293182373047
    8. 's' → logprob: -17.876293182373047
    9. ' .' → logprob: -18.501293182373047
    10. 'qrt' → logprob: -18.751293182373047

Token 509: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.00043472214019857347
    2. 'val' → logprob: -7.750434875488281
    3. '(' → logprob: -12.875434875488281
    4. '[val' → logprob: -13.750434875488281
    5. ' val' → logprob: -15.500434875488281
    6. ',val' → logprob: -16.00043487548828
    7. '(
' → logprob: -16.75043487548828
    8. ' (' → logprob: -17.75043487548828
    9. '	val' → logprob: -18.25043487548828
    10. '{' → logprob: -18.87543487548828

Token 510: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.6895233531831764e-05
    2. ')
' → logprob: -11.12502670288086
    3. '       ' → logprob: -11.62502670288086
    4. ' )' → logprob: -12.75002670288086
    5. '   ' → logprob: -15.87502670288086
    6. '))' → logprob: -16.12502670288086
    7. ')
' → logprob: -17.50002670288086
    8. '())' → logprob: -17.75002670288086
    9. ')

' → logprob: -17.75002670288086
    10. ')return' → logprob: -18.37502670288086

Token 511: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013377433642745018
    2. 'return' → logprob: -6.87633752822876
    3. ' return' → logprob: -8.876338005065918
    4. '
' → logprob: -9.251338005065918
    5. '	return' → logprob: -10.751338005065918
    6. '	' → logprob: -11.126338005065918
    7. '<|end|>' → logprob: -11.251338005065918
    8. '        
' → logprob: -11.751338005065918
    9. '   ' → logprob: -12.001338005065918
    10. ',' → logprob: -13.501338005065918

Token 512: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010075378231704235
    2. 'return' (adapté à ' return') → logprob: -4.635075569152832
    3. ' return' → logprob: -8.260075569152832
    4. '	return' → logprob: -10.385075569152832
    5. '	' → logprob: -10.885075569152832
    6. '
' → logprob: -12.010075569152832
    7. '   ' → logprob: -13.760075569152832
    8. '<|end|>' → logprob: -13.760075569152832
    9. '        
' → logprob: -14.010075569152832
    10. ':return' → logprob: -15.010075569152832

Token 513: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0001234428636962548
    2. ' max' → logprob: -9.000123023986816
    3. '(max' → logprob: -20.875123977661133
    4. '	max' → logprob: -23.000123977661133
    5. '
' → logprob: -23.875123977661133
    6. 'm' → logprob: -24.000123977661133
    7. '_max' → logprob: -24.625123977661133
    8. 'ma' → logprob: -25.125123977661133
    9. '   ' → logprob: -25.375123977661133
    10. '[max' → logprob: -25.625123977661133

Token 514: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: 0.0
    2. '_' → logprob: -17.125
    3. '_are' → logprob: -19.75
    4. '_AREA' → logprob: -19.875
    5. 'area' → logprob: -21.25
    6. 'Area' → logprob: -22.375
    7. ' _' → logprob: -22.625
    8. '_space' → logprob: -23.0
    9. '_angle' → logprob: -23.375
    10. '_ar' → logprob: -23.375

Token 515: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 516: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 517: ' Input' (ID: 10090)
  Prédit: ' Extended'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Extended' → logprob: -0.6560170650482178
    2. ' Triangle' → logprob: -2.4060170650482178
    3. ' Skin' → logprob: -3.0310170650482178
    4. ' Slack' → logprob: -3.2810170650482178
    5. ' Rectangle' → logprob: -3.4060170650482178
    6. ' Main' → logprob: -3.4060170650482178
    7. ' Solution' → logprob: -3.6560170650482178
    8. 'Extended' → logprob: -3.7810170650482178
    9. ' Area' → logprob: -3.7810170650482178
    10. ' Optim' → logprob: -4.031017303466797

Token 518: 'Parser' (ID: 9231)
  Prédit: 'Reader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -0.539822518825531
    2. 'Handler' → logprob: -1.1648225784301758
    3. 'Processor' → logprob: -2.664822578430176
    4. 'Parser' → logprob: -3.789822578430176
    5. 'Generator' → logprob: -5.789822578430176
    6. 'Data' → logprob: -5.914822578430176
    7. ':' → logprob: -5.914822578430176
    8. 'Iterator' → logprob: -6.414822578430176
    9. 'Provider' → logprob: -7.039822578430176
    10. '():' → logprob: -7.164822578430176

Token 519: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002908910100813955
    2. ':
' → logprob: -8.250290870666504
    3. '(' → logprob: -10.625290870666504
    4. '():' → logprob: -13.125290870666504
    5. ':

' → logprob: -14.125290870666504
    6. ':def' → logprob: -14.500290870666504
    7. '(object' → logprob: -14.750290870666504
    8. '):' → logprob: -15.125290870666504
    9. '(Parser' → logprob: -15.250290870666504
    10. ' :' → logprob: -15.250290870666504

Token 520: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015425959136337042
    2. ' def' → logprob: -7.376542568206787
    3. 'def' → logprob: -8.001543045043945
    4. '    
' → logprob: -8.501543045043945
    5. ':' → logprob: -8.876543045043945
    6. '	def' → logprob: -9.251543045043945
    7. '<|end|>' → logprob: -10.001543045043945
    8. '
' → logprob: -10.376543045043945
    9. '```' → logprob: -11.251543045043945
    10. '  ' → logprob: -11.251543045043945

Token 521: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001967531396076083
    2. ' def' → logprob: -6.376967430114746
    3. 'def' → logprob: -8.251967430114746
    4. ' @' → logprob: -13.876967430114746
    5. '    
' → logprob: -14.001967430114746
    6. 'class' → logprob: -14.126967430114746
    7. '	def' → logprob: -14.251967430114746
    8. '@' → logprob: -14.876967430114746
    9. 'staticmethod' → logprob: -15.126967430114746
    10. '
' → logprob: -15.876967430114746

Token 522: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.062009137123823166
    2. 'def' → logprob: -3.31200909614563
    3. ' def' → logprob: -3.93700909614563
    4. 'staticmethod' → logprob: -5.562009334564209
    5. 'class' → logprob: -9.43700885772705
    6. '    ' → logprob: -9.81200885772705
    7. '"""' → logprob: -9.93700885772705
    8. 'classmethod' → logprob: -10.43700885772705
    9. 'object' → logprob: -10.68700885772705
    10. '
' → logprob: -10.81200885772705

Token 523: ' Parses' (ID: 179117)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.20262815058231354
    2. 'def' → logprob: -1.7026281356811523
    3. 'class' → logprob: -7.327628135681152
    4. '   ' → logprob: -7.702628135681152
    5. ' @' → logprob: -9.952628135681152
    6. '@' → logprob: -10.327628135681152
    7. ' class' → logprob: -10.827628135681152
    8. '
' → logprob: -12.702628135681152
    9. ' """
' → logprob: -14.577628135681152
    10. '```' → logprob: -15.077628135681152

Token 524: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.3255615234375
    2. ' the' → logprob: -1.5755615234375
    3. ' lines' → logprob: -1.8255615234375
    4. ' input' → logprob: -1.9505615234375
    5. '<|end|>' → logprob: -3.2005615234375
    6. ')' → logprob: -3.3255615234375
    7. '   ' → logprob: -3.4505615234375
    8. 'the' → logprob: -3.4505615234375
    9. 'lines' → logprob: -4.2005615234375
    10. 'from' → logprob: -4.3255615234375

Token 525: ' lines' (ID: 8698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0671769380569458
    2. ':' → logprob: -1.4421769380569458
    3. ' data' → logprob: -1.6921769380569458
    4. 'data' → logprob: -2.6921768188476562
    5. ' lines' → logprob: -3.1921768188476562
    6. 's' → logprob: -3.4421768188476562
    7. 'from' → logprob: -4.567176818847656
    8. ' line' → logprob: -4.567176818847656
    9. '<|end|>' → logprob: -4.567176818847656
    10. ')' → logprob: -4.817176818847656

Token 526: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029877064749598503
    2. ':' → logprob: -4.029877185821533
    3. 'from' → logprob: -5.904877185821533
    4. ' and' → logprob: -6.279877185821533
    5. '.' → logprob: -6.529877185821533
    6. ',' → logprob: -6.654877185821533
    7. '
' → logprob: -7.404877185821533
    8. ')' → logprob: -7.529877185821533
    9. '<|end|>' → logprob: -7.654877185821533
    10. ' from' → logprob: -7.779877185821533

Token 527: ' format' (ID: 6011)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.12454251199960709
    2. ' code' → logprob: -2.249542474746704
    3. 'text' → logprob: -4.874542713165283
    4. 'python' → logprob: -5.999542713165283
    5. 'def' → logprob: -7.874542713165283
    6. ' text' → logprob: -8.374542236328125
    7. 'the' → logprob: -8.624542236328125
    8. 'input' → logprob: -9.249542236328125
    9. 'codes' → logprob: -9.374542236328125
    10. 'sys' → logprob: -9.499542236328125

Token 528: ' "' (ID: 392)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -1.2773587703704834
    2. 'a' → logprob: -1.7773587703704834
    3. ' str' → logprob: -2.1523587703704834
    4. '"""
' → logprob: -2.6523587703704834
    5. '   ' → logprob: -2.7773587703704834
    6. '"' → logprob: -3.0273587703704834
    7. 'Triangle' → logprob: -3.1523587703704834
    8. ' a' → logprob: -3.1523587703704834
    9. 'triangle' → logprob: -4.1523590087890625
    10. ' triangle' → logprob: -4.2773590087890625

Token 529: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3705679476261139
    2. 'float' → logprob: -1.2455679178237915
    3. 'n' → logprob: -5.120567798614502
    4. ' a' → logprob: -5.495567798614502
    5. ' float' → logprob: -5.745567798614502
    6. 'x' → logprob: -5.995567798614502
    7. 'l' → logprob: -7.120567798614502
    8. 'int' → logprob: -7.370567798614502
    9. 'Extended' → logprob: -7.870567798614502
    10. 'length' → logprob: -7.995567798614502

Token 530: ' l' (ID: 305)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.48279985785484314
    2. ' l' → logprob: -1.1077998876571655
    3. ',' → logprob: -3.732799768447876
    4. ' ' → logprob: -4.607800006866455
    5. 'x' → logprob: -5.232800006866455
    6. ' L' → logprob: -5.607800006866455
    7. ' b' → logprob: -6.357800006866455
    8. 'l' → logprob: -6.857800006866455
    9. '   ' → logprob: -6.982800006866455
    10. ' n' → logprob: -7.295300006866455

Token 531: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.02341865748167038
    2. 'x' → logprob: -3.773418664932251
    3. ' ' → logprob: -9.773418426513672
    4. '"' → logprob: -10.023418426513672
    5. '_x' → logprob: -10.523418426513672
    6. '   ' → logprob: -12.273418426513672
    7. '
' → logprob: -12.773418426513672
    8. '"x' → logprob: -12.773418426513672
    9. '  ' → logprob: -12.898418426513672
    10. ',' → logprob: -13.085918426513672

Token 532: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.08150976151227951
    2. '\n' → logprob: -2.956509828567505
    3. '"
' → logprob: -4.206509590148926
    4. ':' → logprob: -4.831509590148926
    5. ' "' → logprob: -6.831509590148926
    6. '":' → logprob: -7.956509590148926
    7. ' =' → logprob: -8.081509590148926
    8. '",' → logprob: -8.206509590148926
    9. '=' → logprob: -8.331509590148926
    10. ')' → logprob: -8.581509590148926

Token 533: ' until' (ID: 4609)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.694395124912262
    2. '   ' → logprob: -0.944395124912262
    3. ' and' → logprob: -2.944395065307617
    4. ' for' → logprob: -3.819395065307617
    5. ' to' → logprob: -4.819395065307617
    6. ' into' → logprob: -4.819395065307617
    7. 'and' → logprob: -4.944395065307617
    8. ':' → logprob: -5.444395065307617
    9. 'from' → logprob: -5.944395065307617
    10. ' from' → logprob: -6.194395065307617

Token 534: ' EOF' (ID: 72412)
  Prédit: 'EOF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EOF' → logprob: -0.42914119362831116
    2. ' EOF' → logprob: -1.0541411638259888
    3. ' an' → logprob: -8.4291410446167
    4. ' eof' → logprob: -9.3041410446167
    5. ' end' → logprob: -9.8041410446167
    6. 'e' → logprob: -10.1791410446167
    7. 'end' → logprob: -11.6791410446167
    8. '```' → logprob: -12.1791410446167
    9. 'End' → logprob: -12.6791410446167
    10. '''' → logprob: -12.8041410446167

Token 535: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6774764657020569
    2. ':' → logprob: -0.8024764657020569
    3. '
' → logprob: -3.677476406097412
    4. '.' → logprob: -4.427476406097412
    5. ':
' → logprob: -5.552476406097412
    6. ',' → logprob: -6.927476406097412
    7. ' and' → logprob: -7.302476406097412
    8. '<|end|>' → logprob: -8.42747688293457
    9. 'and' → logprob: -9.05247688293457
    10. ' or' → logprob: -9.17747688293457

Token 536: ' yielding' (ID: 149341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.057522810995578766
    2. ' and' → logprob: -3.182522773742676
    3. 'and' → logprob: -4.932522773742676
    4. 'def' → logprob: -6.932522773742676
    5. 'provid' → logprob: -7.057522773742676
    6. ' storing' → logprob: -7.432522773742676
    7. '
' → logprob: -7.557522773742676
    8. ' providing' → logprob: -7.807522773742676
    9. ' processes' → logprob: -7.932522773742676
    10. ' converting' → logprob: -7.932522773742676

Token 537: ' tuples' (ID: 112464)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.03956136852502823
    2. 'float' → logprob: -3.5395612716674805
    3. ' Tuple' → logprob: -5.2895612716674805
    4. 'Tu' → logprob: -6.6645612716674805
    5. 'from' → logprob: -6.7895612716674805
    6. '   ' → logprob: -7.2895612716674805
    7. ' tuples' → logprob: -7.4145612716674805
    8. '(float' → logprob: -7.7895612716674805
    9. 'tuple' → logprob: -9.03956127166748
    10. 'a' → logprob: -9.03956127166748

Token 538: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.2767528295516968
    2. '   ' → logprob: -1.7767528295516968
    3. ':' → logprob: -2.9017529487609863
    4. '[int' → logprob: -4.776752948760986
    5. 'of' → logprob: -5.776752948760986
    6. '(float' → logprob: -6.526752948760986
    7. '[' → logprob: -6.651752948760986
    8. '[str' → logprob: -7.151752948760986
    9. '
' → logprob: -7.401752948760986
    10. ':
' → logprob: -7.651752948760986

Token 539: ' (' (ID: 350)
  Prédit: '(float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(float' → logprob: -0.06204330921173096
    2. 'float' → logprob: -2.8120431900024414
    3. ' float' → logprob: -10.812043190002441
    4. 'flo' → logprob: -10.812043190002441
    5. ' floats' → logprob: -11.062043190002441
    6. '(' → logprob: -11.562043190002441
    7. ' (' → logprob: -12.437043190002441
    8. 'Tuple' → logprob: -12.687043190002441
    9. '```' → logprob: -13.937043190002441
    10. '   ' → logprob: -14.437043190002441

Token 540: 'a' (ID: 64)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -5.240481914370321e-05
    2. 'a' → logprob: -10.625052452087402
    3. ' float' → logprob: -10.875052452087402
    4. '(float' → logprob: -12.250052452087402
    5. '   ' → logprob: -13.375052452087402
    6. ')' → logprob: -13.500052452087402
    7. 'Tuple' → logprob: -14.750052452087402
    8. 'flo' → logprob: -14.750052452087402
    9. '```' → logprob: -15.125052452087402
    10. ',float' → logprob: -15.625052452087402

Token 541: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004179217794444412
    2. ',float' → logprob: -8.000417709350586
    3. ' ,' → logprob: -9.500417709350586
    4. ',
' → logprob: -12.875417709350586
    5. ')' → logprob: -13.000417709350586
    6. ':' → logprob: -14.000417709350586
    7. 'float' → logprob: -14.125417709350586
    8. '   ' → logprob: -15.625417709350586
    9. '<|end|>' → logprob: -16.000417709350586
    10. ',a' → logprob: -16.125417709350586

Token 542: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.03814959153532982
    2. ' l' → logprob: -3.28814959526062
    3. 'x' → logprob: -9.4131498336792
    4. ',' → logprob: -12.0381498336792
    5. 'float' → logprob: -12.0381498336792
    6. ' x' → logprob: -12.2881498336792
    7. ',l' → logprob: -12.6631498336792
    8. ')' → logprob: -13.0381498336792
    9. ' float' → logprob: -13.6631498336792
    10. '	l' → logprob: -13.9131498336792

Token 543: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.166338137816638e-05
    2. ',x' → logprob: -11.375031471252441
    3. ' ,' → logprob: -11.625031471252441
    4. ',float' → logprob: -11.625031471252441
    5. ',
' → logprob: -13.625031471252441
    6. ')' → logprob: -15.125031471252441
    7. '<|end|>' → logprob: -15.875031471252441
    8. 'x' → logprob: -16.125032424926758
    9. ',l' → logprob: -16.500032424926758
    10. ' ' → logprob: -17.000032424926758

Token 544: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0013269031187519431
    2. ' x' → logprob: -6.626327037811279
    3. ',' → logprob: -14.376326560974121
    4. ',x' → logprob: -16.251327514648438
    5. '
' → logprob: -16.626327514648438
    6. '	x' → logprob: -16.876327514648438
    7. ' ' → logprob: -16.876327514648438
    8. '   ' → logprob: -17.751327514648438
    9. ')x' → logprob: -18.001327514648438
    10. '<|end|>' → logprob: -18.876327514648438

Token 545: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009404043667018414
    2. '):' → logprob: -7.750940322875977
    3. ')
' → logprob: -8.000940322875977
    4. ').' → logprob: -9.375940322875977
    5. '):
' → logprob: -9.375940322875977
    6. '   ' → logprob: -13.625940322875977
    7. '),' → logprob: -13.750940322875977
    8. ':' → logprob: -14.750940322875977
    9. ')

' → logprob: -14.750940322875977
    10. '):

' → logprob: -14.875940322875977

Token 546: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037006959319114685
    2. ':' → logprob: -3.7870068550109863
    3. ')' → logprob: -4.537006855010986
    4. '):' → logprob: -6.162006855010986
    5. '
' → logprob: -7.537006855010986
    6. '):
' → logprob: -9.287007331848145
    7. '.' → logprob: -9.662007331848145
    8. ':
' → logprob: -9.912007331848145
    9. '"' → logprob: -10.412007331848145
    10. ',' → logprob: -11.162007331848145

Token 547: ' """

' (ID: 28800)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03493571653962135
    2. '
' → logprob: -3.409935712814331
    3. ':' → logprob: -7.15993595123291
    4. '<|end|>' → logprob: -8.78493595123291
    5. ')' → logprob: -8.90993595123291
    6. ':
' → logprob: -9.78493595123291
    7. '    
' → logprob: -10.28493595123291
    8. '<|end|>' → logprob: -10.40993595123291
    9. '):
' → logprob: -10.90993595123291
    10. '

' → logprob: -10.90993595123291

Token 548: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17233948409557343
    2. '   ' → logprob: -1.9223394393920898
    3. ' def' → logprob: -4.42233943939209
    4. '
' → logprob: -10.29733943939209
    5. ' ' → logprob: -14.04733943939209
    6. '	def' → logprob: -14.29733943939209
    7. '    
' → logprob: -14.79733943939209
    8. '  ' → logprob: -14.92233943939209
    9. 'indent' → logprob: -16.172340393066406
    10. 'ind' → logprob: -16.922340393066406

Token 549: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0001234428636962548
    2. ' def' → logprob: -9.000123023986816
    3. '   ' → logprob: -18.750123977661133
    4. '@' → logprob: -19.250123977661133
    5. '
' → logprob: -20.250123977661133
    6. 'de' → logprob: -21.375123977661133
    7. '	def' → logprob: -22.625123977661133
    8. ' ' → logprob: -24.125123977661133
    9. ' @' → logprob: -25.375123977661133
    10. '    
' → logprob: -25.750123977661133

Token 550: ' __' (ID: 2516)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.5683433413505554
    2. 'def' → logprob: -0.9433433413505554
    3. 'staticmethod' → logprob: -3.5683434009552
    4. 'Iterator' → logprob: -4.943343162536621
    5. '_iter' → logprob: -5.568343162536621
    6. ' Iterator' → logprob: -6.568343162536621
    7. '__' → logprob: -6.693343162536621
    8. 'iterator' → logprob: -6.943343162536621
    9. 'classmethod' → logprob: -7.693343162536621
    10. '_iterator' → logprob: -8.443343162536621

Token 551: 'init' (ID: 3287)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.012808750383555889
    2. 'init' → logprob: -4.387808799743652
    3. 'Iterator' → logprob: -9.012808799743652
    4. 'staticmethod' → logprob: -9.887808799743652
    5. 'nit' → logprob: -10.512808799743652
    6. 'ter' → logprob: -10.512808799743652
    7. 'iterator' → logprob: -11.012808799743652
    8. '_iter' → logprob: -11.512808799743652
    9. 'ait' → logprob: -11.887808799743652
    10. 'it' → logprob: -11.887808799743652

Token 552: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.14400996267795563
    2. '(self' → logprob: -2.019010066986084
    3. '__(
' → logprob: -7.269010066986084
    4. '(' → logprob: -8.394009590148926
    5. 'self' → logprob: -8.769009590148926
    6. ' (' → logprob: -9.019009590148926
    7. '__' → logprob: -9.769009590148926
    8. '   ' → logprob: -10.394009590148926
    9. '_(' → logprob: -11.019009590148926
    10. '
' → logprob: -11.644009590148926

Token 553: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001415618316968903
    2. ')' → logprob: -9.000141143798828
    3. '   ' → logprob: -11.750141143798828
    4. ' self' → logprob: -12.125141143798828
    5. '):
' → logprob: -12.750141143798828
    6. '
' → logprob: -13.875141143798828
    7. '(self' → logprob: -14.875141143798828
    8. '       ' → logprob: -15.750141143798828
    9. ')
' → logprob: -16.000141143798828
    10. '	self' → logprob: -16.250141143798828

Token 554: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1414525955915451
    2. ',' → logprob: -2.7664525508880615
    3. '):' → logprob: -3.0164525508880615
    4. '):
' → logprob: -4.141452789306641
    5. ')' → logprob: -6.516452789306641
    6. '   ' → logprob: -6.766452789306641
    7. ' self' → logprob: -7.266452789306641
    8. '(self' → logprob: -7.766452789306641
    9. ',self' → logprob: -9.01645278930664
    10. '       ' → logprob: -9.26645278930664

Token 555: ' stream' (ID: 6855)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.010552759282290936
    2. 'lines' → logprob: -5.135552883148193
    3. 'input' → logprob: -6.010552883148193
    4. ')' → logprob: -6.510552883148193
    5. 'stream' → logprob: -7.760552883148193
    6. 'source' → logprob: -9.385552406311035
    7. ' self' → logprob: -10.010552406311035
    8. '):
' → logprob: -10.385552406311035
    9. '):' → logprob: -10.760552406311035
    10. 'file' → logprob: -11.260552406311035

Token 556: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5307565331459045
    2. ':' → logprob: -1.6557564735412598
    3. '):
' → logprob: -1.9057564735412598
    4. '=sys' → logprob: -2.6557564735412598
    5. '   ' → logprob: -6.90575647354126
    6. ')' → logprob: -7.78075647354126
    7. '=' → logprob: -8.405756950378418
    8. '(sys' → logprob: -9.155756950378418
    9. '):
' → logprob: -10.405756950378418
    10. ' ):' → logprob: -10.405756950378418

Token 557: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005457649822346866
    2. 'self' → logprob: -7.875545978546143
    3. ':' → logprob: -9.250545501708984
    4. ' self' → logprob: -10.625545501708984
    5. '   ' → logprob: -11.250545501708984
    6. '):
' → logprob: -11.625545501708984
    7. ',' → logprob: -11.875545501708984
    8. ':
' → logprob: -12.375545501708984
    9. 'def' → logprob: -12.875545501708984
    10. '	' → logprob: -13.250545501708984

Token 558: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -8.756989700486884e-05
    2. '       ' → logprob: -9.87508773803711
    3. ' self' → logprob: -10.25008773803711
    4. '
' → logprob: -15.00008773803711
    5. 'import' → logprob: -15.75008773803711
    6. '	self' → logprob: -16.12508773803711
    7. '   ' → logprob: -16.37508773803711
    8. '        
' → logprob: -18.50008773803711
    9. 's' → logprob: -18.75008773803711
    10. 'def' → logprob: -18.75008773803711

Token 559: '.stream' (ID: 22760)
  Prédit: '.stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stream' → logprob: -7.226628895296017e-06
    2. '.' → logprob: -12.250007629394531
    3. 'stream' → logprob: -13.750007629394531
    4. '.source' → logprob: -14.625007629394531
    5. '.streaming' → logprob: -15.000007629394531
    6. '	stream' → logprob: -15.250007629394531
    7. ' .' → logprob: -16.12500762939453
    8. '._' → logprob: -16.25000762939453
    9. '_stream' → logprob: -18.00000762939453
    10. '.reader' → logprob: -18.00000762939453

Token 560: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00317783304490149
    2. ' =' → logprob: -5.753177642822266
    3. '=
' → logprob: -17.003177642822266
    4. ' ' → logprob: -17.128177642822266
    5. '=self' → logprob: -18.003177642822266
    6. '=

' → logprob: -18.003177642822266
    7. '	' → logprob: -18.503177642822266
    8. '=sys' → logprob: -18.753177642822266
    9. '   ' → logprob: -19.253177642822266
    10. '  ' → logprob: -19.628177642822266

Token 561: ' stream' (ID: 6855)
  Prédit: 'stream'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stream' → logprob: -5.967624019831419e-05
    2. ' stream' → logprob: -9.750060081481934
    3. 'iter' → logprob: -14.125060081481934
    4. '	stream' → logprob: -14.625060081481934
    5. '(stream' → logprob: -16.250059127807617
    6. 'steam' → logprob: -17.125059127807617
    7. 'sys' → logprob: -17.375059127807617
    8. '   ' → logprob: -17.750059127807617
    9. 'self' → logprob: -18.625059127807617
    10. 'istream' → logprob: -18.875059127807617

Token 562: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.014257176779210567
    2. '   ' → logprob: -4.389256954193115
    3. '

' → logprob: -6.889256954193115
    4. '    
' → logprob: -7.389256954193115
    5. 'def' → logprob: -10.139257431030273
    6. '<|end|>' → logprob: -10.139257431030273
    7. '  
' → logprob: -11.514257431030273
    8. '        
' → logprob: -11.889257431030273
    9. ' 
' → logprob: -12.389257431030273
    10. ' def' → logprob: -13.139257431030273

Token 563: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6565252542495728
    2. 'def' → logprob: -1.0315252542495728
    3. '
' → logprob: -2.156525135040283
    4. ' def' → logprob: -5.281525135040283
    5. '    
' → logprob: -6.406525135040283
    6. '<|end|>' → logprob: -6.906525135040283
    7. '

' → logprob: -7.406525135040283
    8. '	def' → logprob: -8.031525611877441
    9. '```' → logprob: -9.156525611877441
    10. '<|end|>' → logprob: -9.156525611877441

Token 564: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -3.404745439183898e-05
    2. ' def' → logprob: -10.50003433227539
    3. '
' → logprob: -12.00003433227539
    4. '   ' → logprob: -15.25003433227539
    5. '	def' → logprob: -18.87503433227539
    6. 'de' → logprob: -19.12503433227539
    7. '```' → logprob: -19.25003433227539
    8. '    
' → logprob: -19.62503433227539
    9. '

' → logprob: -19.75003433227539
    10. ':def' → logprob: -21.37503433227539

Token 565: ' parse' (ID: 8420)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -3.2855416066013277e-05
    2. ' __' → logprob: -10.500032424926758
    3. 'def' → logprob: -13.125032424926758
    4. 'parse' → logprob: -13.250032424926758
    5. '_iter' → logprob: -14.125032424926758
    6. 'read' → logprob: -14.250032424926758
    7. '.__' → logprob: -16.500032424926758
    8. '_iterator' → logprob: -16.875032424926758
    9. '___' → logprob: -17.125032424926758
    10. '_parse' → logprob: -17.375032424926758

Token 566: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009332557674497366
    2. '_lines' → logprob: -7.8759331703186035
    3. '(' → logprob: -8.500933647155762
    4. '()' → logprob: -8.625933647155762
    5. '_line' → logprob: -8.875933647155762
    6. 'lines' → logprob: -11.625933647155762
    7. '_input' → logprob: -12.250933647155762
    8. 'self' → logprob: -12.500933647155762
    9. 's' → logprob: -12.875933647155762
    10. '_' → logprob: -13.375933647155762

Token 567: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006340283900499344
    2. 'self' → logprob: -5.631340503692627
    3. '(self' → logprob: -6.631340503692627
    4. '):' → logprob: -7.631340503692627
    5. '):
' → logprob: -8.006340026855469
    6. '_lines' → logprob: -8.131340026855469
    7. '_line' → logprob: -8.631340026855469
    8. 'lines' → logprob: -10.631340026855469
    9. ')->' → logprob: -10.881340026855469
    10. '_iter' → logprob: -11.131340026855469

Token 568: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.009546645916998386
    2. 'self' → logprob: -5.259546756744385
    3. ' ->' → logprob: -6.759546756744385
    4. '(' → logprob: -7.134546756744385
    5. '   ' → logprob: -7.134546756744385
    6. '->' → logprob: -7.884546756744385
    7. '       ' → logprob: -8.009546279907227
    8. ' self' → logprob: -8.384546279907227
    9. ' ' → logprob: -8.634546279907227
    10. ')' → logprob: -9.384546279907227

Token 569: ' Iterator' (ID: 41994)
  Prédit: 'Iterator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iterator' → logprob: -0.0002614550176076591
    2. ' Iterator' → logprob: -8.250261306762695
    3. '	Iterator' → logprob: -16.125261306762695
    4. 'Iterable' → logprob: -17.500261306762695
    5. '   ' → logprob: -19.875261306762695
    6. 'Generator' → logprob: -20.625261306762695
    7. 'List' → logprob: -21.250261306762695
    8. 'iterator' → logprob: -21.375261306762695
    9. '.Iterator' → logprob: -21.375261306762695
    10. 'Tuple' → logprob: -21.500261306762695

Token 570: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. '[
' → logprob: -14.750000953674316
    3. '[List' → logprob: -16.25
    4. '```' → logprob: -17.0
    5. '[[' → logprob: -17.625
    6. '[(' → logprob: -18.25
    7. '   ' → logprob: -18.25
    8. ':
' → logprob: -18.375
    9. ' [' → logprob: -18.375
    10. '<Tuple' → logprob: -19.25

Token 571: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -9.088346359931165e-07
    2. ' Tuple' → logprob: -14.000000953674316
    3. '[' → logprob: -19.375
    4. 'float' → logprob: -20.375
    5. 'tuple' → logprob: -21.0
    6. '   ' → logprob: -21.375
    7. ' ' → logprob: -22.25
    8. 'Tu' → logprob: -22.875
    9. '<Tuple' → logprob: -22.875
    10. '```' → logprob: -23.125

Token 572: '[int' (ID: 40124)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.292907877039397e-06
    2. 'float' → logprob: -13.37500286102295
    3. '[int' → logprob: -13.62500286102295
    4. ',float' → logprob: -15.62500286102295
    5. ']' → logprob: -16.000003814697266
    6. '[str' → logprob: -16.875003814697266
    7. '[
' → logprob: -16.875003814697266
    8. '```' → logprob: -17.875003814697266
    9. '(float' → logprob: -18.750003814697266
    10. '3' → logprob: -19.000003814697266

Token 573: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020607752725481987
    2. ',float' → logprob: -4.020607948303223
    3. ',int' → logprob: -6.020607948303223
    4. 'int' → logprob: -11.270607948303223
    5. '[int' → logprob: -11.645607948303223
    6. ' ,' → logprob: -13.395607948303223
    7. '[' → logprob: -13.395607948303223
    8. 'float' → logprob: -13.645607948303223
    9. ',double' → logprob: -15.145607948303223
    10. ',
' → logprob: -15.395607948303223

Token 574: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.22549082338809967
    2. 'float' → logprob: -1.6004908084869385
    3. ' int' → logprob: -10.35049057006836
    4. ' float' → logprob: -10.60049057006836
    5. '...' → logprob: -11.60049057006836
    6. '[int' → logprob: -12.10049057006836
    7. 'List' → logprob: -13.35049057006836
    8. '```' → logprob: -14.35049057006836
    9. '   ' → logprob: -14.47549057006836
    10. '...]' → logprob: -14.72549057006836

Token 575: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000644764571916312
    2. ',float' → logprob: -7.500644683837891
    3. ',int' → logprob: -9.37564468383789
    4. ' ,' → logprob: -12.12564468383789
    5. ',
' → logprob: -14.75064468383789
    6. '3' → logprob: -15.00064468383789
    7. 'int' → logprob: -15.12564468383789
    8. ',double' → logprob: -15.25064468383789
    9. '<|end|>' → logprob: -16.87564468383789
    10. 'float' → logprob: -17.12564468383789

Token 576: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.14275534451007843
    2. 'float' → logprob: -2.0177552700042725
    3. ' int' → logprob: -10.392755508422852
    4. ' float' → logprob: -10.642755508422852
    5. '   ' → logprob: -11.892755508422852
    6. '[int' → logprob: -12.142755508422852
    7. 'flo' → logprob: -12.392755508422852
    8. '```' → logprob: -13.017755508422852
    9. '	int' → logprob: -13.892755508422852
    10. '
' → logprob: -14.142755508422852

Token 577: ']]:
' (ID: 183340)
  Prédit: ']]:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]:
' → logprob: -0.2519514262676239
    2. ']]' → logprob: -1.5019514560699463
    3. ']' → logprob: -11.126951217651367
    4. ']>' → logprob: -12.751951217651367
    5. ']:' → logprob: -13.126951217651367
    6. ']]]' → logprob: -14.501951217651367
    7. ']]
' → logprob: -14.626951217651367
    8. '[' → logprob: -14.876951217651367
    9. '>' → logprob: -15.376951217651367
    10. ']):' → logprob: -15.626951217651367

Token 578: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010878815373871475
    2. ' for' → logprob: -10.75010871887207
    3. '        
' → logprob: -10.87510871887207
    4. '
' → logprob: -11.12510871887207
    5. '```' → logprob: -11.12510871887207
    6. ',' → logprob: -12.00010871887207
    7. ':' → logprob: -12.00010871887207
    8. '   ' → logprob: -12.12510871887207
    9. 'for' → logprob: -12.37510871887207
    10. '	' → logprob: -12.62510871887207

Token 579: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5530533790588379
    2. '       ' → logprob: -1.553053379058838
    3. ' for' → logprob: -1.553053379058838
    4. '   ' → logprob: -6.678053379058838
    5. 'while' → logprob: -8.67805290222168
    6. ' ' → logprob: -8.80305290222168
    7. ' while' → logprob: -11.05305290222168
    8. '  ' → logprob: -12.92805290222168
    9. '           ' → logprob: -13.17805290222168
    10. '    ' → logprob: -13.30305290222168

Token 580: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.20141461491584778
    2. ' line' → logprob: -1.7014145851135254
    3. '	line' → logprob: -13.826415061950684
    4. 'self' → logprob: -15.951415061950684
    5. '=line' → logprob: -16.326414108276367
    6. '_line' → logprob: -16.701414108276367
    7. '(line' → logprob: -17.076414108276367
    8. '   ' → logprob: -17.576414108276367
    9. ',line' → logprob: -17.951414108276367
    10. 'lin' → logprob: -18.076414108276367

Token 581: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.000712074339389801
    2. 'in' → logprob: -7.250711917877197
    3. '	in' → logprob: -14.625712394714355
    4. '_in' → logprob: -14.750712394714355
    5. 's' → logprob: -14.750712394714355
    6. ' ' → logprob: -15.000712394714355
    7. 'import' → logprob: -15.625712394714355
    8. 'line' → logprob: -16.62571144104004
    9. '_' → logprob: -17.00071144104004
    10. '        ' → logprob: -17.37571144104004

Token 582: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07889077812433243
    2. ' self' → logprob: -2.578890800476074
    3. '(self' → logprob: -14.578890800476074
    4. '	self' → logprob: -15.203890800476074
    5. '=self' → logprob: -16.453889846801758
    6. 's' → logprob: -16.828889846801758
    7. 'sel' → logprob: -17.453889846801758
    8. 'elf' → logprob: -17.703889846801758
    9. ':self' → logprob: -18.078889846801758
    10. 'sys' → logprob: -18.203889846801758

Token 583: '.stream' (ID: 22760)
  Prédit: '.stream'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stream' → logprob: -0.0017545493319630623
    2. '.' → logprob: -7.0017547607421875
    3. 'stream' → logprob: -7.3767547607421875
    4. ':' → logprob: -8.876754760742188
    5. '	stream' → logprob: -11.001754760742188
    6. '.stdin' → logprob: -11.251754760742188
    7. '.readline' → logprob: -11.376754760742188
    8. ' in' → logprob: -11.751754760742188
    9. ':
' → logprob: -12.251754760742188
    10. 'in' → logprob: -12.376754760742188

Token 584: ':
' (ID: 734)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.12145041674375534
    2. '.rstrip' → logprob: -3.371450424194336
    3. ':' → logprob: -3.746450424194336
    4. '.readline' → logprob: -3.996450424194336
    5. ' in' → logprob: -4.121450424194336
    6. ':
' → logprob: -4.246450424194336
    7. 'strip' → logprob: -5.996450424194336
    8. ' strip' → logprob: -6.621450424194336
    9. ' readline' → logprob: -7.121450424194336
    10. '.readlines' → logprob: -7.496450424194336

Token 585: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012979733292013407
    2. '.strip' → logprob: -7.251297950744629
    3. '.rstrip' → logprob: -8.501297950744629
    4. ':' → logprob: -9.251297950744629
    5. 'rstrip' → logprob: -9.751297950744629
    6. '       ' → logprob: -10.126297950744629
    7. ' =' → logprob: -10.251297950744629
    8. '            
' → logprob: -10.876297950744629
    9. 'strip' → logprob: -11.001297950744629
    10. ' if' → logprob: -11.251297950744629

Token 586: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.2810074985027313
    2. ' stripped' → logprob: -1.7810075283050537
    3. '           ' → logprob: -2.7810075283050537
    4. ' if' → logprob: -4.656007289886475
    5. 'line' (adapté à ' line') → logprob: -6.031007289886475
    6. '               ' → logprob: -7.031007289886475
    7. '=line' → logprob: -7.531007289886475
    8. 'strip' → logprob: -7.656007289886475
    9. ' strip' → logprob: -7.781007289886475
    10. '.strip' → logprob: -9.406007766723633

Token 587: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0235380157828331
    2. ' =' → logprob: -3.773538112640381
    3. '.strip' → logprob: -8.273537635803223
    4. '=line' → logprob: -10.648537635803223
    5. '_strip' → logprob: -11.523537635803223
    6. 'strip' → logprob: -13.273537635803223
    7. '.=' → logprob: -14.273537635803223
    8. '.' → logprob: -14.398537635803223
    9. '.rstrip' → logprob: -14.773537635803223
    10. 's' → logprob: -16.02353858947754

Token 588: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.01815006136894226
    2. ' line' → logprob: -4.0181498527526855
    3. '(line' → logprob: -16.643150329589844
    4. '=line' → logprob: -16.768150329589844
    5. '	line' → logprob: -17.268150329589844
    6. 'lin' → logprob: -17.518150329589844
    7. '#line' → logprob: -18.768150329589844
    8. '[line' → logprob: -20.018150329589844
    9. 'li' → logprob: -20.268150329589844
    10. ' lin' → logprob: -20.518150329589844

Token 589: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.00015633940347470343
    2. '.' → logprob: -9.25015640258789
    3. '.rstrip' → logprob: -9.75015640258789
    4. 'strip' → logprob: -13.25015640258789
    5. '.trim' → logprob: -16.50015640258789
    6. ' .' → logprob: -17.00015640258789
    7. '.str' → logprob: -18.37515640258789
    8. ' strip' → logprob: -18.87515640258789
    9. '.replace' → logprob: -19.25015640258789
    10. '.split' → logprob: -19.25015640258789

Token 590: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17396610975265503
    2. '()
' → logprob: -2.2989661693573
    3. '
' → logprob: -3.6739661693573
    4. '()' → logprob: -3.9239661693573
    5. 'if' → logprob: -5.548965930938721
    6. '            
' → logprob: -5.798965930938721
    7. '<|end|>' → logprob: -6.423965930938721
    8. '               ' → logprob: -7.048965930938721
    9. '<|end|>' → logprob: -7.048965930938721
    10. ':
' → logprob: -7.548965930938721

Token 591: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026453562080860138
    2. 'if' → logprob: -4.026453495025635
    3. ' if' → logprob: -4.901453495025635
    4. '            
' → logprob: -8.401453971862793
    5. '<|end|>' → logprob: -8.776453971862793
    6. ':' → logprob: -9.151453971862793
    7. ':
' → logprob: -9.651453971862793
    8. '<|end|>' → logprob: -10.151453971862793
    9. '               ' → logprob: -10.401453971862793
    10. '
' → logprob: -10.401453971862793

Token 592: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0004587903094943613
    2. ' if' → logprob: -8.000458717346191
    3. '           ' → logprob: -9.000458717346191
    4. 'If' → logprob: -17.625459671020508
    5. '	if' → logprob: -18.500459671020508
    6. '
' → logprob: -19.125459671020508
    7. '            
' → logprob: -19.250459671020508
    8. '```' → logprob: -19.250459671020508
    9. ';if' → logprob: -19.875459671020508
    10. '	       ' → logprob: -20.625459671020508

Token 593: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.029769696295261383
    2. 'not' → logprob: -3.5297696590423584
    3. ' line' → logprob: -11.029769897460938
    4. 'line' → logprob: -12.779769897460938
    5. ' no' → logprob: -17.154769897460938
    6. '	not' → logprob: -17.904769897460938
    7. 'no' → logprob: -18.654769897460938
    8. 'len' → logprob: -18.654769897460938
    9. 'n' → logprob: -18.654769897460938
    10. 'n't' → logprob: -18.779769897460938

Token 594: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.4740770161151886
    2. ' line' → logprob: -0.9740769863128662
    3. '	line' → logprob: -17.849077224731445
    4. '(line' → logprob: -18.099077224731445
    5. '
' → logprob: -19.224077224731445
    6. '=line' → logprob: -19.349077224731445
    7. '_line' → logprob: -19.474077224731445
    8. '#line' → logprob: -19.724077224731445
    9. '[line' → logprob: -19.849077224731445
    10. 'Line' → logprob: -19.974077224731445

Token 595: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23835961520671844
    2. ':
' → logprob: -1.6133595705032349
    3. ' or' → logprob: -4.363359451293945
    4. '<|end|>' → logprob: -9.488359451293945
    5. ':return' → logprob: -10.613359451293945
    6. ':

' → logprob: -12.113359451293945
    7. 'or' → logprob: -12.363359451293945
    8. ':
' → logprob: -12.613359451293945
    9. '.startswith' → logprob: -13.238359451293945
    10. 'continue' → logprob: -13.238359451293945

Token 596: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08566036820411682
    2. '               ' → logprob: -3.085660457611084
    3. ':
' → logprob: -3.335660457611084
    4. 'continue' → logprob: -7.960660457611084
    5. '           ' → logprob: -8.085659980773926
    6. ' continue' → logprob: -9.710659980773926
    7. ' or' → logprob: -10.710659980773926
    8. ':return' → logprob: -10.710659980773926
    9. '              ' → logprob: -11.960659980773926
    10. ',' → logprob: -12.085659980773926

Token 597: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.07584139704704285
    2. 'continue' (adapté à ' continue') → logprob: -3.3258414268493652
    3. ' break' → logprob: -3.3258414268493652
    4. ' continue' → logprob: -7.075841426849365
    5. '               ' → logprob: -8.825840950012207
    6. 'return' → logprob: -8.950840950012207
    7. '	break' → logprob: -10.950840950012207
    8. '           ' → logprob: -12.325840950012207
    9. '                   ' → logprob: -12.325840950012207
    10. '	continue' → logprob: -13.450840950012207

Token 598: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0022557605989277363
    2. '            
' → logprob: -6.252255916595459
    3. '          ' → logprob: -9.1272554397583
    4. 'yield' → logprob: -9.6272554397583
    5. '
' → logprob: -10.0022554397583
    6. '            ' → logprob: -10.1272554397583
    7. '<|end|>' → logprob: -11.3772554397583
    8. ' yield' → logprob: -11.5022554397583
    9. '           
' → logprob: -11.8772554397583
    10. '       ' → logprob: -12.2522554397583

Token 599: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00035357745946384966
    2. 'yield' → logprob: -8.625353813171387
    3. '            
' → logprob: -9.500353813171387
    4. ' yield' → logprob: -9.750353813171387
    5. '          ' → logprob: -11.500353813171387
    6. '       ' → logprob: -12.125353813171387
    7. 'tokens' → logprob: -12.500353813171387
    8. '               ' → logprob: -12.875353813171387
    9. '<|end|>' → logprob: -13.000353813171387
    10. ',' → logprob: -13.000353813171387

Token 600: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' (adapté à ' parts') → logprob: -0.6208369731903076
    2. 'try' → logprob: -1.6208369731903076
    3. 'yield' → logprob: -1.9958369731903076
    4. 'a' → logprob: -3.2458369731903076
    5. 'tokens' → logprob: -3.2458369731903076
    6. 'values' → logprob: -3.6208369731903076
    7. '           ' → logprob: -3.9958369731903076
    8. ' parts' → logprob: -5.995837211608887
    9. 't' → logprob: -6.370837211608887
    10. 'vals' → logprob: -7.495837211608887

Token 601: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07890543341636658
    2. ' =' → logprob: -2.5789053440093994
    3. '=line' → logprob: -11.07890510559082
    4. '＝' → logprob: -15.70390510559082
    5. '.=' → logprob: -17.95390510559082
    6. '=
' → logprob: -18.45390510559082
    7. '	' → logprob: -18.70390510559082
    8. ' =
' → logprob: -19.57890510559082
    9. 'line' → logprob: -19.70390510559082
    10. '[line' → logprob: -19.95390510559082

Token 602: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.011047814972698689
    2. ' line' → logprob: -4.511047840118408
    3. '[line' → logprob: -17.76104736328125
    4. 'list' → logprob: -19.51104736328125
    5. '=line' → logprob: -20.26104736328125
    6. '	line' → logprob: -20.63604736328125
    7. '(line' → logprob: -20.88604736328125
    8. '[' → logprob: -23.01104736328125
    9. '_line' → logprob: -23.38604736328125
    10. '#line' → logprob: -23.63604736328125

Token 603: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.01150293555110693
    2. '.' → logprob: -4.511502742767334
    3. '.strip' → logprob: -7.761502742767334
    4. ' .' → logprob: -10.761503219604492
    5. '.rstrip' → logprob: -12.761503219604492
    6. 'split' → logprob: -13.136503219604492
    7. '().' → logprob: -14.136503219604492
    8. '.Split' → logprob: -14.636503219604492
    9. '.s' → logprob: -14.886503219604492
    10. '=' → logprob: -15.011503219604492

Token 604: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00015335931675508618
    2. '('' → logprob: -8.875153541564941
    3. '(' → logprob: -11.500153541564941
    4. '("' → logprob: -13.375153541564941
    5. '()]' → logprob: -14.375153541564941
    6. '())' → logprob: -14.500153541564941
    7. '()
' → logprob: -15.000153541564941
    8. '()"' → logprob: -16.375152587890625
    9. ' ()' → logprob: -16.875152587890625
    10. '()>' → logprob: -17.000152587890625

Token 605: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010597254149615765
    2. 'yield' → logprob: -7.126059532165527
    3. ' if' → logprob: -9.501059532165527
    4. '            
' → logprob: -9.501059532165527
    5. '[' → logprob: -10.251059532165527
    6. 'if' → logprob: -10.626059532165527
    7. ' yield' → logprob: -11.126059532165527
    8. '          ' → logprob: -11.126059532165527
    9. ',' → logprob: -12.251059532165527
    10. '		' → logprob: -13.626059532165527

Token 606: ' if' (ID: 538)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' → logprob: -0.1381974071264267
    2. 'if' (adapté à ' if') → logprob: -2.388197422027588
    3. 'a' → logprob: -3.638197422027588
    4. '           ' → logprob: -4.638197422027588
    5. ' yield' → logprob: -6.763197422027588
    6. ' if' → logprob: -9.26319694519043
    7. 'try' → logprob: -10.38819694519043
    8. '	yield' → logprob: -11.13819694519043
    9. ' a' → logprob: -13.01319694519043
    10. '            
' → logprob: -13.01319694519043

Token 607: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.07888978719711304
    2. 'len' → logprob: -2.578889846801758
    3. '(len' → logprob: -18.328889846801758
    4. '	len' → logprob: -18.328889846801758
    5. ' ' → logprob: -20.578889846801758
    6. ' not' → logprob: -20.703889846801758
    7. '=len' → logprob: -20.828889846801758
    8. '   ' → logprob: -20.828889846801758
    9. '
' → logprob: -21.578889846801758
    10. '           ' → logprob: -21.703889846801758

Token 608: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -4.751746746478602e-05
    2. ' parts' → logprob: -10.62504768371582
    3. 'parts' → logprob: -10.75004768371582
    4. '(' → logprob: -13.37504768371582
    5. ' (' → logprob: -16.87504768371582
    6. '_parts' → logprob: -18.12504768371582
    7. '<|end|>' → logprob: -18.12504768371582
    8. ' <' → logprob: -19.50004768371582
    9. '(points' → logprob: -19.75004768371582
    10. ')' → logprob: -19.87504768371582

Token 609: ')' (ID: 8)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5510365962982178
    2. '!=' → logprob: -0.9260365962982178
    3. '<' → logprob: -4.051036834716797
    4. '==' → logprob: -5.801036834716797
    5. ' <' → logprob: -5.926036834716797
    6. ')' → logprob: -6.176036834716797
    7. ')!=' → logprob: -6.926036834716797
    8. ' ==' → logprob: -7.176036834716797
    9. '<|end|>' → logprob: -8.301036834716797
    10. '<int' → logprob: -9.426036834716797

Token 610: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.6115579605102539
    2. ' !=' → logprob: -0.8615579605102539
    3. '<' → logprob: -3.486557960510254
    4. '==' → logprob: -6.111557960510254
    5. ' <' → logprob: -6.486557960510254
    6. ' ==' → logprob: -7.611557960510254
    7. '<len' → logprob: -10.111557960510254
    8. '<int' → logprob: -10.611557960510254
    9. '>=' → logprob: -11.361557960510254
    10. '!==' → logprob: -11.611557960510254

Token 611: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0006266565760597587
    2. ' ' → logprob: -7.375626564025879
    3. '```' → logprob: -16.875627517700195
    4. '۳' → logprob: -17.000627517700195
    5. '   ' → logprob: -18.188127517700195
    6. '  ' → logprob: -18.250627517700195
    7. '৩' → logprob: -18.313127517700195
    8. '٣' → logprob: -18.750627517700195
    9. '३' → logprob: -18.813127517700195
    10. '<|end|>' → logprob: -18.813127517700195

Token 612: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '۳' → logprob: -18.500001907348633
    4. '৩' → logprob: -19.500001907348633
    5. '３' → logprob: -20.375001907348633
    6. '३' → logprob: -20.375001907348633
    7. '٣' → logprob: -20.812501907348633
    8. '   ' → logprob: -21.062501907348633
    9. '```' → logprob: -21.250001907348633
    10. '=' → logprob: -21.937501907348633

Token 613: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12937703728675842
    2. ':
' → logprob: -2.1293771266937256
    3. ' or' → logprob: -6.6293768882751465
    4. '               ' → logprob: -7.3793768882751465
    5. '           ' → logprob: -8.004377365112305
    6. ':return' → logprob: -9.129377365112305
    7. ' and' → logprob: -11.254377365112305
    8. ')' → logprob: -11.754377365112305
    9. ',' → logprob: -11.879377365112305
    10. '                   ' → logprob: -12.129377365112305

Token 614: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0029721148312091827
    2. '           ' → logprob: -6.00297212600708
    3. ' continue' → logprob: -8.002971649169922
    4. 'continue' → logprob: -8.877971649169922
    5. '	           ' → logprob: -12.377971649169922
    6. '              ' → logprob: -12.752971649169922
    7. '```' → logprob: -13.002971649169922
    8. 'return' → logprob: -13.252971649169922
    9. '                   ' → logprob: -13.252971649169922
    10. 'yield' → logprob: -13.502971649169922

Token 615: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.40879738330841064
    2. '               ' → logprob: -1.4087973833084106
    3. 'break' → logprob: -2.408797264099121
    4. ' continue' → logprob: -7.658797264099121
    5. 'raise' → logprob: -8.033797264099121
    6. 'return' → logprob: -8.283797264099121
    7. ' break' → logprob: -9.283797264099121
    8. '           ' → logprob: -10.908797264099121
    9. '                   ' → logprob: -11.158797264099121
    10. '	continue' → logprob: -11.658797264099121

Token 616: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00824552122503519
    2. 'yield' → logprob: -5.508245468139648
    3. ' yield' → logprob: -5.758245468139648
    4. '            
' → logprob: -7.633245468139648
    5. '
' → logprob: -7.758245468139648
    6. ',' → logprob: -10.633245468139648
    7. '	yield' → logprob: -10.758245468139648
    8. '               ' → logprob: -11.633245468139648
    9. '          ' → logprob: -11.758245468139648
    10. ' yields' → logprob: -12.133245468139648

Token 617: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011246586218476295
    2. ' yield' → logprob: -5.011246681213379
    3. 'yield' → logprob: -5.636246681213379
    4. '            
' → logprob: -7.136246681213379
    5. ',' → logprob: -10.386246681213379
    6. '	yield' → logprob: -10.511246681213379
    7. '
' → logprob: -10.636246681213379
    8. ' try' → logprob: -11.136246681213379
    9. ' yields' → logprob: -11.386246681213379
    10. '       ' → logprob: -11.761246681213379

Token 618: ' try' (ID: 2075)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06260624527931213
    2. 'try' (adapté à ' try') → logprob: -3.4376063346862793
    3. '           ' → logprob: -3.6876063346862793
    4. 'yield' → logprob: -5.812606334686279
    5. ' a' → logprob: -8.062605857849121
    6. ' try' → logprob: -8.687605857849121
    7. ' yield' → logprob: -10.937605857849121
    8. '            
' → logprob: -11.562605857849121
    9. '       ' → logprob: -12.312605857849121
    10. '               ' → logprob: -12.937605857849121

Token 619: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.040367498993873596
    2. ':
' → logprob: -3.415367603302002
    3. '               ' → logprob: -5.040367603302002
    4. '           ' → logprob: -8.540367126464844
    5. '):
' → logprob: -12.040367126464844
    6. '):' → logprob: -12.165367126464844
    7. '       ' → logprob: -12.915367126464844
    8. '<|end|>' → logprob: -13.040367126464844
    9. ':return' → logprob: -13.040367126464844
    10. '                   ' → logprob: -13.165367126464844

Token 620: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00021915239631198347
    2. 'a' → logprob: -9.000219345092773
    3. 'int' → logprob: -10.875219345092773
    4. '	           ' → logprob: -10.875219345092773
    5. '           ' → logprob: -11.125219345092773
    6. '<|end|>' → logprob: -11.750219345092773
    7. '              ' → logprob: -12.750219345092773
    8. '                
' → logprob: -13.000219345092773
    9. 'return' → logprob: -13.000219345092773
    10. '   ' → logprob: -13.250219345092773

Token 621: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.0004624855937436223
    2. ' a' → logprob: -8.000462532043457
    3. '               ' → logprob: -9.000462532043457
    4. '                   ' → logprob: -13.250462532043457
    5. 'yield' → logprob: -13.875462532043457
    6. '	a' → logprob: -14.750462532043457
    7. '           ' → logprob: -16.00046157836914
    8. 'int' → logprob: -16.50046157836914
    9. 'values' → logprob: -16.87546157836914
    10. 'ints' → logprob: -16.87546157836914

Token 622: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023085770662873983
    2. '=' → logprob: -6.252308368682861
    3. ' =' → logprob: -8.75230884552002
    4. ',int' → logprob: -9.00230884552002
    5. ' ,' → logprob: -10.00230884552002
    6. ',a' → logprob: -10.87730884552002
    7. '=int' → logprob: -11.12730884552002
    8. 'int' → logprob: -12.00230884552002
    9. ',i' → logprob: -13.37730884552002
    10. ',b' → logprob: -13.75230884552002

Token 623: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.01105159055441618
    2. ' l' → logprob: -4.511051654815674
    3. 'int' → logprob: -12.511051177978516
    4. '	l' → logprob: -17.011051177978516
    5. '_l' → logprob: -17.761051177978516
    6. ',l' → logprob: -17.886051177978516
    7. '   ' → logprob: -18.136051177978516
    8. ' ' → logprob: -18.761051177978516
    9. ' int' → logprob: -18.761051177978516
    10. '           ' → logprob: -19.011051177978516

Token 624: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.927930654550437e-05
    2. ' ,' → logprob: -11.000029563903809
    3. '=' → logprob: -11.750029563903809
    4. ',x' → logprob: -12.750029563903809
    5. ' =' → logprob: -13.875029563903809
    6. 'x' → logprob: -14.250029563903809
    7. ',int' → logprob: -16.625028610229492
    8. '_,' → logprob: -16.625028610229492
    9. 'int' → logprob: -16.875028610229492
    10. '<|end|>' → logprob: -17.250028610229492

Token 625: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0005530327325686812
    2. ' x' → logprob: -7.500553131103516
    3. '	x' → logprob: -19.875553131103516
    4. ' ' → logprob: -20.375553131103516
    5. '           ' → logprob: -20.625553131103516
    6. '_x' → logprob: -20.750553131103516
    7. '               ' → logprob: -21.000553131103516
    8. '
' → logprob: -21.125553131103516
    9. '   ' → logprob: -21.125553131103516
    10. ',x' → logprob: -21.625553131103516

Token 626: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029750952497124672
    2. ' =' → logprob: -3.5297510623931885
    3. ')' → logprob: -16.02975082397461
    4. '=int' → logprob: -16.15475082397461
    5. ' ' → logprob: -16.27975082397461
    6. '=
' → logprob: -16.27975082397461
    7. '=

' → logprob: -17.02975082397461
    8. ')=' → logprob: -17.65475082397461
    9. ',' → logprob: -17.77975082397461
    10. '<|end|>' → logprob: -17.90475082397461

Token 627: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.1019178256392479
    2. ' map' → logprob: -2.3519177436828613
    3. 'int' → logprob: -6.601917743682861
    4. '(map' → logprob: -8.35191822052002
    5. '[int' → logprob: -9.10191822052002
    6. '(int' → logprob: -13.22691822052002
    7. ' int' → logprob: -13.47691822052002
    8. '[' → logprob: -13.85191822052002
    9. 'tuple' → logprob: -15.10191822052002
    10. '	map' → logprob: -16.476917266845703

Token 628: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.008616345934569836
    2. 'int' → logprob: -4.7586164474487305
    3. '(float' → logprob: -14.00861644744873
    4. '[int' → logprob: -15.00861644744873
    5. ' int' → logprob: -15.38361644744873
    6. '=int' → logprob: -15.63361644744873
    7. '   ' → logprob: -16.508615493774414
    8. '<int' → logprob: -16.508615493774414
    9. '	int' → logprob: -16.883615493774414
    10. '```' → logprob: -17.133615493774414

Token 629: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5763681530952454
    2. '(parts' → logprob: -0.8263681530952454
    3. 'parts' → logprob: -7.82636833190918
    4. ' parts' → logprob: -11.45136833190918
    5. '(' → logprob: -11.82636833190918
    6. ' ,' → logprob: -12.20136833190918
    7. 'Parts' → logprob: -13.45136833190918
    8. ',line' → logprob: -13.70136833190918
    9. ')' → logprob: -13.95136833190918
    10. ',(' → logprob: -14.07636833190918

Token 630: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.00016396844875998795
    2. ' parts' → logprob: -8.750164031982422
    3. '(parts' → logprob: -12.125164031982422
    4. '   ' → logprob: -18.000164031982422
    5. 'part' → logprob: -18.250164031982422
    6. '
' → logprob: -18.625164031982422
    7. '.parts' → logprob: -18.875164031982422
    8. '           ' → logprob: -19.250164031982422
    9. '_parts' → logprob: -19.500164031982422
    10. ')' → logprob: -19.625164031982422

Token 631: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003385614836588502
    2. ')
' → logprob: -8.000338554382324
    3. ' )' → logprob: -13.125338554382324
    4. ')return' → logprob: -15.250338554382324
    5. ')`' → logprob: -15.250338554382324
    6. ')}' → logprob: -15.875338554382324
    7. ')
' → logprob: -16.12533950805664
    8. ')#' → logprob: -16.12533950805664
    9. '),' → logprob: -16.25033950805664
    10. ')

' → logprob: -16.87533950805664

Token 632: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0200515054166317
    2. ')' → logprob: -4.2700514793396
    3. '                
' → logprob: -6.0200514793396
    4. '           ' → logprob: -6.6450514793396
    5. '<|end|>' → logprob: -6.6450514793396
    6. '                   ' → logprob: -8.395051956176758
    7. '              ' → logprob: -9.145051956176758
    8. '                ' → logprob: -9.270051956176758
    9. ',' → logprob: -9.395051956176758
    10. '            
' → logprob: -9.770051956176758

Token 633: ' yield' (ID: 14376)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.456468403339386
    2. 'yield' (adapté à ' yield') → logprob: -1.2064683437347412
    3. ' yield' → logprob: -2.706468343734741
    4. '           ' → logprob: -7.95646858215332
    5. '	yield' → logprob: -9.95646858215332
    6. '
' → logprob: -9.95646858215332
    7. '              ' → logprob: -12.08146858215332
    8. 'Yield' → logprob: -13.20646858215332
    9. '       ' → logprob: -13.33146858215332
    10. '                   ' → logprob: -14.08146858215332

Token 634: ' a' (ID: 261)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.58831387758255
    2. 'a' → logprob: -0.83831387758255
    3. ' (' → logprob: -4.713314056396484
    4. ' a' → logprob: -5.713314056396484
    5. '(' → logprob: -11.088314056396484
    6. '   ' → logprob: -12.713314056396484
    7. '(
' → logprob: -13.713314056396484
    8. '	a' → logprob: -13.838314056396484
    9. ' ' → logprob: -14.213314056396484
    10. '  ' → logprob: -16.213314056396484

Token 635: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002827342599630356
    2. ',l' → logprob: -5.877827167510986
    3. ' ,' → logprob: -10.877827644348145
    4. ',ll' → logprob: -14.502827644348145
    5. ',
' → logprob: -14.627827644348145
    6. ',x' → logprob: -15.002827644348145
    7. ',line' → logprob: -15.377827644348145
    8. ',a' → logprob: -15.502827644348145
    9. ',b' → logprob: -15.502827644348145
    10. ',n' → logprob: -15.502827644348145

Token 636: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.002475777640938759
    2. ' l' → logprob: -6.002475738525391
    3. '	l' → logprob: -16.75247573852539
    4. '<|end|>' → logprob: -17.75247573852539
    5. ' ' → logprob: -18.12747573852539
    6. '
' → logprob: -18.87747573852539
    7. ',l' → logprob: -19.37747573852539
    8. '   ' → logprob: -19.37747573852539
    9. '    ' → logprob: -19.75247573852539
    10. '       ' → logprob: -20.75247573852539

Token 637: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009875539690256119
    2. ',x' → logprob: -7.500987529754639
    3. ' ,' → logprob: -8.375988006591797
    4. 'x' → logprob: -8.625988006591797
    5. ' x' → logprob: -10.625988006591797
    6. ',
' → logprob: -14.500988006591797
    7. ' ' → logprob: -17.000988006591797
    8. '               ' → logprob: -17.125988006591797
    9. '```' → logprob: -17.625988006591797
    10. ',\
' → logprob: -17.875988006591797

Token 638: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0024756586644798517
    2. ' x' → logprob: -6.002475738525391
    3. '	x' → logprob: -18.37747573852539
    4. ' ' → logprob: -19.00247573852539
    5. '
' → logprob: -20.75247573852539
    6. '(x' → logprob: -20.75247573852539
    7. '   ' → logprob: -21.25247573852539
    8. '$x' → logprob: -21.37747573852539
    9. '"x' → logprob: -21.87747573852539
    10. '{x' → logprob: -22.12747573852539

Token 639: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 640: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006309965625405312
    2. 'except' → logprob: -5.756309986114502
    3. ' except' → logprob: -5.881309986114502
    4. '<|end|>' → logprob: -8.631309509277344
    5. '	except' → logprob: -9.881309509277344
    6. '            
' → logprob: -10.881309509277344
    7. '<|end|>' → logprob: -11.006309509277344
    8. '
' → logprob: -11.006309509277344
    9. '       ' → logprob: -11.381309509277344
    10. '	       ' → logprob: -11.756309509277344

Token 641: ' except' (ID: 6384)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21621081233024597
    2. ' except' → logprob: -2.2162108421325684
    3. 'except' (adapté à ' except') → logprob: -2.4662108421325684
    4. '	except' → logprob: -8.34121036529541
    5. '<|end|>' → logprob: -9.34121036529541
    6. '               ' → logprob: -10.09121036529541
    7. '       ' → logprob: -10.21621036529541
    8. '	       ' → logprob: -10.34121036529541
    9. '          ' → logprob: -11.59121036529541
    10. '
' → logprob: -11.71621036529541

Token 642: ' Exception' (ID: 6851)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.006751135922968388
    2. ' Value' → logprob: -5.00675106048584
    3. '(Value' → logprob: -10.38175106048584
    4. '	Value' → logprob: -12.88175106048584
    5. '_value' → logprob: -13.88175106048584
    6. '.Value' → logprob: -14.38175106048584
    7. '<Value' → logprob: -15.00675106048584
    8. '_Value' → logprob: -15.25675106048584
    9. 'Exception' → logprob: -16.631752014160156
    10. 'Stop' → logprob: -18.006752014160156

Token 643: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0034865085035562515
    2. ' as' → logprob: -6.128486633300781
    3. ':
' → logprob: -6.753486633300781
    4. '<|end|>' → logprob: -9.253486633300781
    5. '):' → logprob: -11.253486633300781
    6. ' :' → logprob: -11.253486633300781
    7. '[' → logprob: -12.753486633300781
    8. 'as' → logprob: -13.253486633300781
    9. ',' → logprob: -13.378486633300781
    10. '<|end|>' → logprob: -13.628486633300781

Token 644: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008141118101775646
    2. ':' → logprob: -5.258141040802002
    3. ' as' → logprob: -6.508141040802002
    4. ':
' → logprob: -6.758141040802002
    5. '   ' → logprob: -10.38314151763916
    6. '           ' → logprob: -10.38314151763916
    7. '                ' → logprob: -10.63314151763916
    8. ' continue' → logprob: -10.75814151763916
    9. '	           ' → logprob: -11.00814151763916
    10. '			' → logprob: -11.13314151763916

Token 645: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.5063219666481018
    2. '               ' → logprob: -1.506321907043457
    3. ' continue' → logprob: -1.756321907043457
    4. ' pass' → logprob: -6.756321907043457
    5. 'pass' → logprob: -6.881321907043457
    6. '                   ' → logprob: -7.881321907043457
    7. 'break' → logprob: -8.631321907043457
    8. '           ' → logprob: -9.881321907043457
    9. 'return' → logprob: -10.006321907043457
    10. ' break' → logprob: -10.756321907043457

Token 646: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 647: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.48302939534187317
    2. 'if' → logprob: -0.9830293655395508
    3. 'class' → logprob: -4.733029365539551
    4. '```' → logprob: -9.60802936553955
    5. ' if' → logprob: -10.98302936553955
    6. '    
' → logprob: -12.23302936553955
    7. 'import' → logprob: -12.35802936553955
    8. '  
' → logprob: -12.35802936553955
    9. '<|end|>' → logprob: -12.35802936553955
    10. '
' → logprob: -12.48302936553955

Token 648: ' Area' (ID: 17049)
  Prédit: 'Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Solution' → logprob: -1.1954989433288574
    2. 'Output' → logprob: -2.1954989433288574
    3. 'Extended' → logprob: -2.1954989433288574
    4. 'Solver' → logprob: -2.3204989433288574
    5. ' Solver' → logprob: -2.4454989433288574
    6. 'Main' → logprob: -2.4454989433288574
    7. ' Extended' → logprob: -2.6954989433288574
    8. ' Solution' → logprob: -3.0704989433288574
    9. 'Result' → logprob: -3.1954989433288574
    10. 'main' → logprob: -4.070498943328857

Token 649: 'Printer' (ID: 54325)
  Prédit: 'Calculator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Calculator' → logprob: -0.44240981340408325
    2. 'Optimizer' → logprob: -1.0674097537994385
    3. 'Computer' → logprob: -5.567409992218018
    4. 'Max' → logprob: -5.567409992218018
    5. 'Comparator' → logprob: -6.567409992218018
    6. 'Printer' → logprob: -6.567409992218018
    7. 'Comparer' → logprob: -7.317409992218018
    8. 'Solver' → logprob: -7.442409992218018
    9. 'Analyzer' → logprob: -7.692409992218018
    10. 'Estimator' → logprob: -8.19240951538086

Token 650: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.158350151963532e-05
    2. ':
' → logprob: -10.375061988830566
    3. '(' → logprob: -10.750061988830566
    4. ':def' → logprob: -13.000061988830566
    5. ' :' → logprob: -13.250061988830566
    6. '):' → logprob: -13.500061988830566
    7. '(T' → logprob: -14.125061988830566
    8. '():' → logprob: -14.375061988830566
    9. ':

' → logprob: -15.000061988830566
    10. '(object' → logprob: -15.125061988830566

Token 651: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.3199920178740285e-05
    2. 'class' → logprob: -11.750022888183594
    3. ':' → logprob: -12.375022888183594
    4. 'def' → logprob: -12.500022888183594
    5. ' def' → logprob: -13.250022888183594
    6. '<|end|>' → logprob: -13.500022888183594
    7. '```' → logprob: -13.750022888183594
    8. '    
' → logprob: -13.750022888183594
    9. '
' → logprob: -14.500022888183594
    10. ' class' → logprob: -15.000022888183594

Token 652: ' """
' (ID: 7037)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.697505533695221
    2. '   ' → logprob: -0.947505533695221
    3. 'class' → logprob: -2.197505474090576
    4. ' def' → logprob: -5.697505474090576
    5. '
' → logprob: -10.697505950927734
    6. ' class' → logprob: -12.322505950927734
    7. '```' → logprob: -12.697505950927734
    8. '@' → logprob: -13.197505950927734
    9. '	def' → logprob: -14.447505950927734
    10. '    
' → logprob: -15.197505950927734

Token 653: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1336749643087387
    2. 'def' → logprob: -2.1336748600006104
    3. 'class' → logprob: -5.3836750984191895
    4. '"""
' → logprob: -6.6336750984191895
    5. ' def' → logprob: -7.1336750984191895
    6. ' """
' → logprob: -11.883674621582031
    7. '"""' → logprob: -12.258674621582031
    8. '@' → logprob: -12.633674621582031
    9. '
' → logprob: -12.758674621582031
    10. '	def' → logprob: -13.758674621582031

Token 654: ' Responsible' (ID: 101250)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003221325809136033
    2. '   ' → logprob: -6.00322151184082
    3. ' def' → logprob: -7.25322151184082
    4. 'class' → logprob: -10.37822151184082
    5. '
' → logprob: -12.62822151184082
    6. '"""
' → logprob: -13.37822151184082
    7. '	def' → logprob: -14.00322151184082
    8. '@' → logprob: -14.50322151184082
    9. '"""' → logprob: -16.25322151184082
    10. 'staticmethod' → logprob: -17.25322151184082

Token 655: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.49684709310531616
    2. ' for' → logprob: -0.9968470931053162
    3. '   ' → logprob: -3.871847152709961
    4. 'def' → logprob: -6.496847152709961
    5. ':' → logprob: -9.371847152709961
    6. '  ' → logprob: -10.871847152709961
    7. '```' → logprob: -11.496847152709961
    8. '	for' → logprob: -11.871847152709961
    9. '_for' → logprob: -11.871847152709961
    10. '=' → logprob: -12.246847152709961

Token 656: ' output' (ID: 4733)
  Prédit: 'printing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'printing' → logprob: -0.004488038830459118
    2. ' printing' → logprob: -6.129487991333008
    3. 'calcul' → logprob: -6.629487991333008
    4. 'writing' → logprob: -7.629487991333008
    5. 'def' → logprob: -8.504487991333008
    6. 'display' → logprob: -9.254487991333008
    7. 'print' → logprob: -10.004487991333008
    8. 'comput' → logprob: -10.129487991333008
    9. 'output' → logprob: -10.254487991333008
    10. 'staticmethod' → logprob: -10.379487991333008

Token 657: ' formatting' (ID: 61348)
  Prédit: 'ting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ting' → logprob: -0.08890718966722488
    2. 'class' → logprob: -3.213907241821289
    3. '   ' → logprob: -3.713907241821289
    4. 'ing' → logprob: -4.838907241821289
    5. '
' → logprob: -5.963907241821289
    6. 'import' → logprob: -6.213907241821289
    7. '<|end|>' → logprob: -6.338907241821289
    8. 'def' → logprob: -6.713907241821289
    9. '  ' → logprob: -7.213907241821289
    10. ' class' → logprob: -7.338907241821289

Token 658: ' of' (ID: 328)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.059510260820388794
    2. '   ' → logprob: -4.059510231018066
    3. '<|end|>' → logprob: -4.059510231018066
    4. 'and' → logprob: -4.184510231018066
    5. '
' → logprob: -5.559510231018066
    6. '<|end|>' → logprob: -6.434510231018066
    7. '.' → logprob: -6.934510231018066
    8. ',' → logprob: -7.809510231018066
    9. ':' → logprob: -8.309510231018066
    10. ':
' → logprob: -8.559510231018066

Token 659: ' the' (ID: 290)
  Prédit: 'areas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'areas' → logprob: -1.1222374439239502
    2. 'the' → logprob: -1.4972374439239502
    3. 'results' → logprob: -1.7472374439239502
    4. 'float' → logprob: -2.12223744392395
    5. 'area' → logprob: -2.87223744392395
    6. 'def' → logprob: -3.24723744392395
    7. ' the' → logprob: -3.99723744392395
    8. 'max' → logprob: -4.497237205505371
    9. 'computed' → logprob: -4.497237205505371
    10. ' results' → logprob: -5.622237205505371

Token 660: ' area' (ID: 3624)
  Prédit: 'areas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'areas' → logprob: -1.0505040884017944
    2. 'area' → logprob: -1.5505040884017944
    3. 'computed' → logprob: -1.9255040884017944
    4. 'results' → logprob: -2.175504207611084
    5. 'max' → logprob: -2.550504207611084
    6. 'result' → logprob: -2.675504207611084
    7. 'cal' → logprob: -4.425504207611084
    8. 'maximum' → logprob: -5.175504207611084
    9. ' computed' → logprob: -5.675504207611084
    10. ' areas' → logprob: -6.175504207611084

Token 661: ' result' (ID: 1534)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2362687587738037
    2. ' calculations' → logprob: -1.6112687587738037
    3. '
' → logprob: -1.8612687587738037
    4. '   ' → logprob: -1.9862687587738037
    5. ' and' → logprob: -3.2362687587738037
    6. ' results' → logprob: -3.4862687587738037
    7. 'results' → logprob: -3.4862687587738037
    8. '(s' → logprob: -3.7362687587738037
    9. 'calcul' → logprob: -3.9862687587738037
    10. 'def' → logprob: -4.111268997192383

Token 662: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.058141160756349564
    2. '
' → logprob: -4.058141231536865
    3. ':' → logprob: -4.183141231536865
    4. ':
' → logprob: -4.433141231536865
    5. '.' → logprob: -5.558141231536865
    6. ' and' → logprob: -5.933141231536865
    7. '<|end|>' → logprob: -5.933141231536865
    8. '.
' → logprob: -7.433141231536865
    9. '<|end|>' → logprob: -7.433141231536865
    10. ',' → logprob: -7.808141231536865

Token 663: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01899958774447441
    2. ':' → logprob: -4.1439995765686035
    3. ':
' → logprob: -6.5189995765686035
    4. '
' → logprob: -8.019000053405762
    5. '<|end|>' → logprob: -8.269000053405762
    6. '):
' → logprob: -8.394000053405762
    7. '```' → logprob: -8.769000053405762
    8. '.' → logprob: -9.019000053405762
    9. '<|end|>' → logprob: -9.519000053405762
    10. ')' → logprob: -9.894000053405762

Token 664: ' """

' (ID: 28800)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1058136448264122
    2. '
' → logprob: -3.10581374168396
    3. ':' → logprob: -3.60581374168396
    4. ':
' → logprob: -3.85581374168396
    5. '):
' → logprob: -6.355813503265381
    6. ')' → logprob: -6.730813503265381
    7. 'def' → logprob: -6.980813503265381
    8. 'class' → logprob: -7.230813503265381
    9. '```' → logprob: -7.230813503265381
    10. '    
' → logprob: -7.355813503265381

Token 665: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2916676700115204
    2. 'class' → logprob: -1.5416676998138428
    3. 'def' → logprob: -3.2916676998138428
    4. ' def' → logprob: -6.541667461395264
    5. ' class' → logprob: -8.041667938232422
    6. '```' → logprob: -13.916667938232422
    7. 'indent' → logprob: -14.166667938232422
    8. '
' → logprob: -14.541667938232422
    9. '@' → logprob: -15.041667938232422
    10. '@dat' → logprob: -15.541667938232422

Token 666: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12718963623046875
    2. '@' (adapté à ' @') → logprob: -2.1271896362304688
    3. ' def' → logprob: -8.377189636230469
    4. '   ' → logprob: -10.627189636230469
    5. ' @' → logprob: -11.877189636230469
    6. 'class' → logprob: -15.877189636230469
    7. 'staticmethod' → logprob: -16.50218963623047
    8. '
' → logprob: -17.75218963623047
    9. '	def' → logprob: -18.37718963623047
    10. 'DEFAULT' → logprob: -18.37718963623047

Token 667: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -4.4418171455617994e-05
    2. 'dat' → logprob: -10.375044822692871
    3. 'classmethod' → logprob: -11.500044822692871
    4. 'abstract' → logprob: -13.375044822692871
    5. 'static' → logprob: -13.500044822692871
    6. 'property' → logprob: -17.125043869018555
    7. 'abc' → logprob: -18.375043869018555
    8. ' static' → logprob: -19.250043869018555
    9. '
' → logprob: -21.875043869018555
    10. 'Static' → logprob: -21.875043869018555

Token 668: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1034010574221611
    2. '   ' → logprob: -2.478400945663452
    3. ' def' → logprob: -4.728401184082031
    4. '
' → logprob: -5.228401184082031
    5. '	def' → logprob: -9.603401184082031
    6. '(def' → logprob: -9.728401184082031
    7. '(' → logprob: -11.728401184082031
    8. ' ' → logprob: -12.603401184082031
    9. ':def' → logprob: -12.728401184082031
    10. '  ' → logprob: -12.853401184082031

Token 669: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01701483502984047
    2. ' def' → logprob: -4.267014980316162
    3. '
' → logprob: -5.892014980316162
    4. '   ' → logprob: -9.392014503479004
    5. '	def' → logprob: -13.642014503479004
    6. '(def' → logprob: -14.642014503479004
    7. '    
' → logprob: -15.392014503479004
    8. ':def' → logprob: -15.517014503479004
    9. '_def' → logprob: -15.892014503479004
    10. ' ' → logprob: -16.01701545715332

Token 670: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.320199877838604e-07
    2. ' def' → logprob: -15.0
    3. '   ' → logprob: -21.125
    4. '
' → logprob: -22.0
    5. '	def' → logprob: -22.75
    6. 'f' → logprob: -23.25
    7. 'class' → logprob: -23.375
    8. 'de' → logprob: -23.625
    9. '```' → logprob: -23.875
    10. 'from' → logprob: -24.0

Token 671: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.038042180240154266
    2. 'format' → logprob: -3.2880420684814453
    3. ' print' → logprob: -14.288042068481445
    4. ' format' → logprob: -16.413042068481445
    5. 'display' → logprob: -17.288042068481445
    6. 'formatted' → logprob: -17.538042068481445
    7. 'println' → logprob: -18.538042068481445
    8. 'write' → logprob: -18.788042068481445
    9. 'output' → logprob: -19.038042068481445
    10. 'show' → logprob: -19.538042068481445

Token 672: '_area' (ID: 34097)
  Prédit: '(area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(area' → logprob: -0.8888724446296692
    2. '(' → logprob: -1.1388723850250244
    3. '_area' → logprob: -1.3888723850250244
    4. '(f' → logprob: -5.2638726234436035
    5. '_result' → logprob: -5.5138726234436035
    6. 'area' → logprob: -5.7638726234436035
    7. '(result' → logprob: -5.8888726234436035
    8. '(line' → logprob: -7.2638726234436035
    9. '(_' → logprob: -7.2638726234436035
    10. '("_' → logprob: -7.2638726234436035

Token 673: '(area' (ID: 115185)
  Prédit: '(area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(area' → logprob: -0.0029642691370099783
    2. '(value' → logprob: -6.252964496612549
    3. '(result' → logprob: -7.002964496612549
    4. '(' → logprob: -9.12796401977539
    5. '(amount' → logprob: -12.75296401977539
    6. '(output' → logprob: -13.12796401977539
    7. '(total' → logprob: -13.25296401977539
    8. '(max' → logprob: -13.37796401977539
    9. ' (' → logprob: -13.50296401977539
    10. '(round' → logprob: -13.87796401977539

Token 674: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7751694321632385
    2. '):' → logprob: -0.9001694321632385
    3. '(area' → logprob: -2.1501693725585938
    4. ')' → logprob: -4.275169372558594
    5. '):
' → logprob: -6.525169372558594
    6. 'area' → logprob: -8.400169372558594
    7. '(' → logprob: -8.525169372558594
    8. ',' → logprob: -8.650169372558594
    9. '(value' → logprob: -9.400169372558594
    10. '   ' → logprob: -9.400169372558594

Token 675: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.018687713891267776
    2. ' float' → logprob: -4.018687725067139
    3. ')' → logprob: -7.643687725067139
    4. '(float' → logprob: -10.76868724822998
    5. '   ' → logprob: -12.01868724822998
    6. 'f' → logprob: -12.14368724822998
    7. '):' → logprob: -12.14368724822998
    8. '2' → logprob: -12.76868724822998
    9. ' ' → logprob: -13.26868724822998
    10. '{' → logprob: -13.26868724822998

Token 676: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05180174484848976
    2. '):' → logprob: -3.1768016815185547
    3. ',' → logprob: -4.801801681518555
    4. '):
' → logprob: -7.676801681518555
    5. ')->' → logprob: -10.426801681518555
    6. '   ' → logprob: -10.926801681518555
    7. ' )' → logprob: -11.051801681518555
    8. '):
' → logprob: -11.176801681518555
    9. ':' → logprob: -12.551801681518555
    10. ',)' → logprob: -13.926801681518555

Token 677: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.034592388459714e-06
    2. 'print' → logprob: -12.500005722045898
    3. ' print' → logprob: -14.250005722045898
    4. '    ' → logprob: -15.000005722045898
    5. ',' → logprob: -15.250005722045898
    6. '           ' → logprob: -15.375005722045898
    7. ':' → logprob: -15.875005722045898
    8. '(' → logprob: -15.875005722045898
    9. '      ' → logprob: -16.1250057220459
    10. '```' → logprob: -16.3750057220459

Token 678: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.396513968706131
    2. '       ' → logprob: -1.1465139389038086
    3. ' print' → logprob: -4.646513938903809
    4. '   ' → logprob: -14.021513938903809
    5. '```' → logprob: -15.271513938903809
    6. '           ' → logprob: -15.521513938903809
    7. '
' → logprob: -15.771513938903809
    8. '	print' → logprob: -16.271514892578125
    9. 'if' → logprob: -16.771514892578125
    10. 'printf' → logprob: -17.021514892578125

Token 679: ' Print' (ID: 13103)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006775272195227444
    2. ' print' → logprob: -7.500677585601807
    3. '       ' → logprob: -9.000677108764648
    4. '   ' → logprob: -13.750677108764648
    5. '           ' → logprob: -18.00067710876465
    6. '```' → logprob: -18.37567710876465
    7. 'formatted' → logprob: -18.62567710876465
    8. 'import' → logprob: -19.50067710876465
    9. 'if' → logprob: -19.50067710876465
    10. '	print' → logprob: -19.62567710876465

Token 680: ' with' (ID: 483)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.00018530222587287426
    2. '("{' → logprob: -8.750185012817383
    3. 'f' → logprob: -10.750185012817383
    4. '{' → logprob: -13.250185012817383
    5. '("%.' → logprob: -13.250185012817383
    6. '(format' → logprob: -13.750185012817383
    7. '"{' → logprob: -14.625185012817383
    8. '(' → logprob: -15.625185012817383
    9. 'format' → logprob: -15.875185012817383
    10. '('{' → logprob: -17.000185012817383

Token 681: ' precision' (ID: 27303)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.33163511753082275
    2. 'f' → logprob: -2.331634998321533
    3. '7' → logprob: -2.581634998321533
    4. '"{' → logprob: -3.456634998321533
    5. '9' → logprob: -3.706634998321533
    6. '12' → logprob: -4.081634998321533
    7. '8' → logprob: -4.706634998321533
    8. '4' → logprob: -4.956634998321533
    9. ' ' → logprob: -5.831634998321533
    10. 'print' → logprob: -5.956634998321533

Token 682: ' such' (ID: 2238)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.7916042804718018
    2. '.' → logprob: -1.2916042804718018
    3. ':' → logprob: -2.5416042804718018
    4. '(' → logprob: -2.6666042804718018
    5. '("%.' → logprob: -3.5416042804718018
    6. ':.' → logprob: -4.041604042053223
    7. '(.' → logprob: -4.416604042053223
    8. '(".' → logprob: -4.666604042053223
    9. '4' → logprob: -4.791604042053223
    10. '8' → logprob: -4.916604042053223

Token 683: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.31406357884407043
    2. ' that' → logprob: -1.564063549041748
    3. 'as' → logprob: -3.689063549041748
    4. 'f' → logprob: -4.314063549041748
    5. '=' → logprob: -4.814063549041748
    6. '.' → logprob: -5.064063549041748
    7. ' as' → logprob: -6.064063549041748
    8. '           ' → logprob: -6.314063549041748
    9. ' =' → logprob: -7.439063549041748
    10. ':' → logprob: -7.939063549041748

Token 684: ' difference' (ID: 9809)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.140836238861084
    2. '6' → logprob: -1.265836238861084
    3. '12' → logprob: -2.515836238861084
    4. '10' → logprob: -2.640836238861084
    5. '7' → logprob: -2.765836238861084
    6. '       ' → logprob: -3.640836238861084
    7. '8' → logprob: -3.765836238861084
    8. 'the' → logprob: -3.890836238861084
    9. '{' → logprob: -4.015836238861084
    10. '9' → logprob: -4.015836238861084

Token 685: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5624613761901855
    2. ' is' → logprob: -1.0624613761901855
    3. 's' → logprob: -3.6874613761901855
    4. ' <' → logprob: -3.8124613761901855
    5. '<=' → logprob: -3.9374613761901855
    6. '=' → logprob: -5.3124613761901855
    7. ' =' → logprob: -5.6874613761901855
    8. '<|end|>' → logprob: -6.1874613761901855
    9. ' ' → logprob: -6.4374613761901855
    10. '<' → logprob: -7.3124613761901855

Token 686: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5184462070465088
    2. '1' → logprob: -1.0184462070465088
    3. '0' → logprob: -3.143446207046509
    4. '10' → logprob: -8.51844596862793
    5. '5' → logprob: -10.64344596862793
    6. '9' → logprob: -10.76844596862793
    7. '2' → logprob: -12.26844596862793
    8. '4' → logprob: -12.76844596862793
    9. '7' → logprob: -13.14344596862793
    10. '6' → logprob: -13.39344596862793

Token 687: '10' (ID: 702)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0896930992603302
    2. '0' → logprob: -2.464693069458008
    3. '10' → logprob: -7.714693069458008
    4. ' ' → logprob: -9.464693069458008
    5. '5' → logprob: -9.589693069458008
    6. '2' → logprob: -9.714693069458008
    7. '9' → logprob: -10.214693069458008
    8. '7' → logprob: -10.714693069458008
    9. '3' → logprob: -10.839693069458008
    10. '4' → logprob: -11.339693069458008

Token 688: '^-' (ID: 85848)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -1.1282603740692139
    2. '^-' → logprob: -1.1282603740692139
    3. '-' → logprob: -1.2532603740692139
    4. ' -' → logprob: -3.378260374069214
    5. '^{-' → logprob: -3.878260374069214
    6. '^' → logprob: -4.878260612487793
    7. '```' → logprob: -6.628260612487793
    8. '.' → logprob: -6.753260612487793
    9. 'e' → logprob: -7.503260612487793
    10. '\xe2\x81' → logprob: -8.003260612487793

Token 689: '5' (ID: 20)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.325786828994751
    2. '7' → logprob: -2.075786828994751
    3. '4' → logprob: -2.450786828994751
    4. '9' → logprob: -3.700786828994751
    5. '5' → logprob: -3.825786828994751
    6. '8' → logprob: -4.200786590576172
    7. '3' → logprob: -5.700786590576172
    8. '10' → logprob: -6.825786590576172
    9. '12' → logprob: -8.575786590576172
    10. '2' → logprob: -8.700786590576172

Token 690: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004479731433093548
    2. 'print' → logprob: -6.254479885101318
    3. ' print' → logprob: -6.504479885101318
    4. '{' → logprob: -7.129479885101318
    5. '("{' → logprob: -9.25447940826416
    6. '(f' → logprob: -10.87947940826416
    7. ',' → logprob: -10.87947940826416
    8. 'f' → logprob: -10.87947940826416
    9. ' {' → logprob: -11.37947940826416
    10. '"{' → logprob: -11.37947940826416

Token 691: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021374132484197617
    2. 'print' → logprob: -6.377137184143066
    3. ' print' → logprob: -8.002137184143066
    4. '(' → logprob: -9.877137184143066
    5. '{' → logprob: -10.752137184143066
    6. ',' → logprob: -11.502137184143066
    7. '   ' → logprob: -11.877137184143066
    8. '           ' → logprob: -13.002137184143066
    9. ':' → logprob: -13.127137184143066
    10. '      ' → logprob: -13.627137184143066

Token 692: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0007848527166061103
    2. ' print' → logprob: -7.250784873962402
    3. '       ' → logprob: -9.500784873962402
    4. '   ' → logprob: -16.625783920288086
    5. '
' → logprob: -18.375783920288086
    6. '```' → logprob: -18.375783920288086
    7. 'printf' → logprob: -19.875783920288086
    8. '        
' → logprob: -20.125783920288086
    9. '           ' → logprob: -20.250783920288086
    10. '	print' → logprob: -20.500783920288086

Token 693: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -2.093505099765025e-05
    2. '(' → logprob: -11.375020980834961
    3. 'f' → logprob: -12.250020980834961
    4. '("{' → logprob: -12.375020980834961
    5. '(round' → logprob: -15.875020980834961
    6. '{' → logprob: -16.00002098083496
    7. '(format' → logprob: -16.25002098083496
    8. '("%.' → logprob: -16.37502098083496
    9. '('{' → logprob: -18.37502098083496
    10. ' f' → logprob: -19.25002098083496

Token 694: '"{' (ID: 27510)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.03812549263238907
    2. '"{' → logprob: -3.288125514984131
    3. '("{' → logprob: -9.538125038146973
    4. '{"' → logprob: -11.413125038146973
    5. ''{' → logprob: -14.413125038146973
    6. '{{' → logprob: -15.663125038146973
    7. '0' → logprob: -16.78812599182129
    8. ' {' → logprob: -17.16312599182129
    9. '("%.' → logprob: -17.16312599182129
    10. '({' → logprob: -17.66312599182129

Token 695: 'area' (ID: 7502)
  Prédit: 'area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: 0.0
    2. ' area' → logprob: -17.875
    3. '{' → logprob: -18.25
    4. '(area' → logprob: -19.875
    5. 'round' → logprob: -20.375
    6. '.area' → logprob: -20.875
    7. '0' → logprob: -21.0
    8. '-area' → logprob: -22.0
    9. 'angle' → logprob: -22.375
    10. 'float' → logprob: -22.5

Token 696: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -5.676981345459353e-06
    2. '.' → logprob: -12.125005722045898
    3. ' :.' → logprob: -15.750005722045898
    4. '{' → logprob: -17.5000057220459
    5. ':' → logprob: -17.5000057220459
    6. ' .' → logprob: -18.8750057220459
    7. '0' → logprob: -20.5000057220459
    8. '(.' → logprob: -20.8750057220459
    9. ' {:.' → logprob: -22.0000057220459
    10. '}' → logprob: -22.6250057220459

Token 697: '10' (ID: 702)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.6875757575035095
    2. '5' → logprob: -1.0625758171081543
    3. '7' → logprob: -2.0625758171081543
    4. '9' → logprob: -4.312575817108154
    5. '8' → logprob: -4.937575817108154
    6. '10' → logprob: -5.562575817108154
    7. '12' → logprob: -10.062575340270996
    8. '11' → logprob: -10.687575340270996
    9. '{' → logprob: -10.937575340270996
    10. '15' → logprob: -11.187575340270996

Token 698: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -6.754368223482743e-05
    2. '6' → logprob: -9.750067710876465
    3. 'g' → logprob: -11.750067710876465
    4. '5' → logprob: -14.625067710876465
    5. '7' → logprob: -14.875067710876465
    6. 'lf' → logprob: -15.750067710876465
    7. '4' → logprob: -16.50006675720215
    8. '}' → logprob: -16.50006675720215
    9. '```' → logprob: -17.12506675720215
    10. '9' → logprob: -18.00006675720215

Token 699: '}"' (ID: 21503)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -4.842555426876061e-06
    2. '")' → logprob: -13.125004768371582
    3. '}")
' → logprob: -13.500004768371582
    4. '}' → logprob: -14.250004768371582
    5. ' }' → logprob: -14.750004768371582
    6. ')")' → logprob: -16.1250057220459
    7. '}")

' → logprob: -16.3750057220459
    8. '}"' → logprob: -16.7500057220459
    9. '}")
' → logprob: -17.1250057220459
    10. '})' → logprob: -17.5000057220459

Token 700: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.537868779967539e-06
    2. '")' → logprob: -12.125008583068848
    3. '}' → logprob: -13.500008583068848
    4. ')
' → logprob: -14.750008583068848
    5. ' )' → logprob: -14.875008583068848
    6. ')}' → logprob: -15.125008583068848
    7. ')")' → logprob: -15.375008583068848
    8. '       ' → logprob: -15.625008583068848
    9. '})' → logprob: -16.50000762939453
    10. '}")' → logprob: -17.00000762939453

Token 701: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12707215547561646
    2. 'if' → logprob: -2.1270720958709717
    3. 'class' → logprob: -9.50207233428955
    4. '```' → logprob: -10.12707233428955
    5. 'import' → logprob: -10.50207233428955
    6. ' if' → logprob: -14.00207233428955
    7. '
' → logprob: -14.62707233428955
    8. '<|end|>' → logprob: -15.12707233428955
    9. 'for' → logprob: -16.627071380615234
    10. ' def' → logprob: -16.752071380615234

Token 702: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0009117019944824278
    2. 'main' → logprob: -7.000911712646484
    3. ' solve' → logprob: -16.375911712646484
    4. ' process' → logprob: -16.625911712646484
    5. ' run' → logprob: -16.750911712646484
    6. '	main' → logprob: -17.125911712646484
    7. '_main' → logprob: -18.125911712646484
    8. ' parse' → logprob: -18.375911712646484
    9. 'process' → logprob: -19.625911712646484
    10. 'solve' → logprob: -19.750911712646484

Token 703: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -7.398067828034982e-05
    2. ' ():' → logprob: -9.75007438659668
    3. '():
' → logprob: -11.50007438659668
    4. '()' → logprob: -12.12507438659668
    5. '():
' → logprob: -17.12507438659668
    6. ' ()' → logprob: -18.62507438659668
    7. '(' → logprob: -18.62507438659668
    8. '()>' → logprob: -18.87507438659668
    9. '_' → logprob: -19.12507438659668
    10. '().' → logprob: -19.50007438659668

Token 704: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21651412546634674
    2. 'parser' → logprob: -1.7165141105651855
    3. ' parser' → logprob: -4.2165141105651855
    4. 'input' → logprob: -9.591514587402344
    5. 'for' → logprob: -9.966514587402344
    6. '	parser' → logprob: -9.966514587402344
    7. 'stream' → logprob: -10.216514587402344
    8. 'import' → logprob: -11.216514587402344
    9. 'parse' → logprob: -11.716514587402344
    10. ' for' → logprob: -12.216514587402344

Token 705: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' (adapté à ' parser') → logprob: -0.010350672528147697
    2. 'import' → logprob: -5.010350704193115
    3. ' parser' → logprob: -5.760350704193115
    4. '   ' → logprob: -8.010350227355957
    5. 'input' → logprob: -9.010350227355957
    6. 'for' → logprob: -10.760350227355957
    7. ' import' → logprob: -13.010350227355957
    8. '	parser' → logprob: -14.760350227355957
    9. ' for' → logprob: -15.760350227355957
    10. '_parser' → logprob: -15.885350227355957

Token 706: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196891888976097
    2. '=' → logprob: -2.8119688034057617
    3. '   ' → logprob: -14.436968803405762
    4. ' ' → logprob: -15.686968803405762
    5. ' =
' → logprob: -16.061969757080078
    6. '(' → logprob: -16.936969757080078
    7. ' ' → logprob: -17.061969757080078
    8. '=parse' → logprob: -17.061969757080078
    9. '  ' → logprob: -17.186969757080078
    10. 'import' → logprob: -17.311969757080078

Token 707: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -2.339278580620885e-06
    2. ' Input' → logprob: -13.000001907348633
    3. 'sys' → logprob: -24.500001907348633
    4. '	Input' → logprob: -24.875001907348633
    5. 'input' → logprob: -25.250001907348633
    6. '_input' → logprob: -25.875001907348633
    7. '_Input' → logprob: -26.125001907348633
    8. ' ' → logprob: -26.500001907348633
    9. '<Input' → logprob: -27.375001907348633
    10. 'Inputs' → logprob: -27.750001907348633

Token 708: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: 0.0
    2. 'parser' → logprob: -20.375
    3. 'Parse' → logprob: -22.5
    4. 'Processor' → logprob: -22.5
    5. '_parser' → logprob: -22.75
    6. '(Parser' → logprob: -23.125
    7. 'Handler' → logprob: -23.25
    8. ' Parser' → logprob: -23.875
    9. 'Printer' → logprob: -24.25
    10. '.Parser' → logprob: -24.375

Token 709: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -1.0206720617134124e-05
    2. 'sys' → logprob: -11.50001049041748
    3. ' sys' → logprob: -17.500009536743164
    4. '=sys' → logprob: -18.625009536743164
    5. '	sys' → logprob: -19.000009536743164
    6. '(system' → logprob: -20.375009536743164
    7. '(Sys' → logprob: -21.250009536743164
    8. '(' → logprob: -21.375009536743164
    9. '(System' → logprob: -21.625009536743164
    10. '((' → logprob: -21.625009536743164

Token 710: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.3856492842023727e-06
    2. '.' → logprob: -13.625000953674316
    3. '.argv' → logprob: -16.250001907348633
    4. '.std' → logprob: -17.000001907348633
    5. 'stdin' → logprob: -18.000001907348633
    6. '.stdout' → logprob: -19.125001907348633
    7. '.__' → logprob: -19.875001907348633
    8. ' .' → logprob: -20.625001907348633
    9. ').' → logprob: -21.500001907348633
    10. '.st' → logprob: -21.625001907348633

Token 711: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2520410120487213
    2. ')
' → logprob: -1.502040982246399
    3. ')
' → logprob: -9.25204086303711
    4. '   ' → logprob: -11.50204086303711
    5. ' )' → logprob: -13.12704086303711
    6. ')

' → logprob: -13.62704086303711
    7. ' )
' → logprob: -13.62704086303711
    8. ' ' → logprob: -14.00204086303711
    9. ').' → logprob: -14.75204086303711
    10. '  ' → logprob: -16.62704086303711

Token 712: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04918971285223961
    2. 'for' → logprob: -3.049189805984497
    3. ' for' → logprob: -7.549189567565918
    4. '    
' → logprob: -9.924189567565918
    5. '
' → logprob: -10.674189567565918
    6. 'area' → logprob: -13.924189567565918
    7. '	for' → logprob: -14.799189567565918
    8. '   ' → logprob: -14.799189567565918
    9. '  ' → logprob: -15.049189567565918
    10. '```' → logprob: -15.174189567565918

Token 713: ' printer' (ID: 28923)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009250336326658726
    2. '   ' → logprob: -5.009250164031982
    3. 'printer' (adapté à ' printer') → logprob: -6.009250164031982
    4. ' for' → logprob: -9.75925064086914
    5. 'area' → logprob: -11.13425064086914
    6. '    
' → logprob: -13.25925064086914
    7. '
' → logprob: -14.75925064086914
    8. 'print' → logprob: -14.88425064086914
    9. 'output' → logprob: -15.38425064086914
    10. 'processor' → logprob: -15.63425064086914

Token 714: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6374061107635498
    2. ' =' → logprob: -0.7624061107635498
    3. '.print' → logprob: -5.762406349182129
    4. '.' → logprob: -6.512406349182129
    5. ' ' → logprob: -9.387406349182129
    6. '   ' → logprob: -10.137406349182129
    7. '.=' → logprob: -11.762406349182129
    8. '.py' → logprob: -12.262406349182129
    9. 'print' → logprob: -12.512406349182129
    10. ')' → logprob: -12.512406349182129

Token 715: ' Area' (ID: 17049)
  Prédit: 'Area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Area' → logprob: -0.00020354038861114532
    2. ' Area' → logprob: -8.500203132629395
    3. ' ' → logprob: -22.50020408630371
    4. '   ' → logprob: -22.62520408630371
    5. 'area' → logprob: -23.87520408630371
    6. '
' → logprob: -24.25020408630371
    7. 'Output' → logprob: -24.37520408630371
    8. 'Areas' → logprob: -24.50020408630371
    9. '  ' → logprob: -24.62520408630371
    10. 'A' → logprob: -25.00020408630371

Token 716: 'Printer' (ID: 54325)
  Prédit: 'Printer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Printer' → logprob: -1.9361264946837764e-07
    2. 'Painter' → logprob: -16.0
    3. ' Printer' → logprob: -17.75
    4. 'Parser' → logprob: -18.25
    5. 'Pr' → logprob: -18.5
    6. 'Picker' → logprob: -19.0
    7. 'Print' → logprob: -19.75
    8. 'Primer' → logprob: -19.875
    9. 'Processor' → logprob: -20.25
    10. 'Prin' → logprob: -20.75

Token 717: '()

' (ID: 5874)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02372918836772442
    2. '
' → logprob: -3.898729085922241
    3. 'for' → logprob: -6.39872932434082
    4. '    
' → logprob: -7.02372932434082
    5. ' for' → logprob: -7.39872932434082
    6. '
' → logprob: -11.64872932434082
    7. '  
' → logprob: -12.89872932434082
    8. ' 
' → logprob: -13.39872932434082
    9. '<|end|>' → logprob: -14.27372932434082
    10. '   
' → logprob: -14.52372932434082

Token 718: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000967083964496851
    2. 'for' → logprob: -7.000967025756836
    3. ' for' → logprob: -9.875967025756836
    4. '    
' → logprob: -12.500967025756836
    5. '
' → logprob: -14.750967025756836
    6. '	for' → logprob: -16.250967025756836
    7. '  ' → logprob: -17.375967025756836
    8. '```' → logprob: -17.500967025756836
    9. '       ' → logprob: -17.875967025756836
    10. '<|end|>' → logprob: -18.500967025756836

Token 719: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -2.2200749754119897e-06
    2. '   ' → logprob: -13.750001907348633
    3. ' for' → logprob: -13.750001907348633
    4. '
' → logprob: -17.625001907348633
    5. 'try' → logprob: -20.875001907348633
    6. '  ' → logprob: -21.875001907348633
    7. '	for' → logprob: -22.000001907348633
    8. '```' → logprob: -22.375001907348633
    9. 'fo' → logprob: -22.625001907348633
    10. '    
' → logprob: -22.875001907348633

Token 720: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0012393947690725327
    2. ' a' → logprob: -6.87623929977417
    3. '(a' → logprob: -8.501239776611328
    4. '   ' → logprob: -13.501239776611328
    5. ' (' → logprob: -13.751239776611328
    6. 'params' → logprob: -15.001239776611328
    7. '	a' → logprob: -15.126239776611328
    8. '(' → logprob: -16.626239776611328
    9. '_a' → logprob: -16.876239776611328
    10. 'args' → logprob: -17.751239776611328

Token 721: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019197762594558299
    2. ',l' → logprob: -8.625191688537598
    3. ' ,' → logprob: -11.375191688537598
    4. ',
' → logprob: -15.500191688537598
    5. ',,' → logprob: -15.625191688537598
    6. ',line' → logprob: -16.000192642211914
    7. ',",' → logprob: -16.500192642211914
    8. 'comma' → logprob: -16.625192642211914
    9. '_,' → logprob: -16.625192642211914
    10. ',ll' → logprob: -17.000192642211914

Token 722: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00861456897109747
    2. ' l' → logprob: -4.758614540100098
    3. '	l' → logprob: -18.133615493774414
    4. '   ' → logprob: -18.258615493774414
    5. ',l' → logprob: -19.508615493774414
    6. ' ' → logprob: -19.633615493774414
    7. '  ' → logprob: -20.008615493774414
    8. '_l' → logprob: -20.758615493774414
    9. '    ' → logprob: -21.508615493774414
    10. '     ' → logprob: -23.133615493774414

Token 723: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8670179997570813e-05
    2. ' ,' → logprob: -11.375019073486328
    3. ',x' → logprob: -11.875019073486328
    4. '_,' → logprob: -15.500019073486328
    5. ',l' → logprob: -18.375019073486328
    6. 'x' → logprob: -18.500019073486328
    7. '   ' → logprob: -18.875019073486328
    8. ',
' → logprob: -19.125019073486328
    9. ',user' → logprob: -19.250019073486328
    10. ',input' → logprob: -19.500019073486328

Token 724: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0019286326132714748
    2. ' x' → logprob: -6.251928806304932
    3. ' ' → logprob: -17.376928329467773
    4. '	x' → logprob: -17.876928329467773
    5. '<|end|>' → logprob: -18.751928329467773
    6. '   ' → logprob: -19.376928329467773
    7. '  ' → logprob: -20.501928329467773
    8. '    ' → logprob: -20.876928329467773
    9. ',x' → logprob: -21.001928329467773
    10. '_x' → logprob: -21.126928329467773

Token 725: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03364858031272888
    2. 'in' → logprob: -3.4086484909057617
    3. '	in' → logprob: -13.158648490905762
    4. ' ' → logprob: -15.283648490905762
    5. '   ' → logprob: -15.533648490905762
    6. '_in' → logprob: -16.158649444580078
    7. '  ' → logprob: -16.283649444580078
    8. ',' → logprob: -16.658649444580078
    9. '    ' → logprob: -16.783649444580078
    10. 's' → logprob: -16.908649444580078

Token 726: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' → logprob: -0.0004306692280806601
    2. ' parser' → logprob: -7.750430583953857
    3. '(parser' → logprob: -17.500431060791016
    4. '	parser' → logprob: -18.875431060791016
    5. 'parse' → logprob: -19.500431060791016
    6. 'Parser' → logprob: -20.000431060791016
    7. '.parser' → logprob: -20.500431060791016
    8. '_parser' → logprob: -21.375431060791016
    9. 'parsed' → logprob: -21.750431060791016
    10. '   ' → logprob: -22.625431060791016

Token 727: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -3.2020991056924686e-05
    2. '.' → logprob: -10.375032424926758
    3. 'parse' → logprob: -14.750032424926758
    4. ' .' → logprob: -14.875032424926758
    5. '.par' → logprob: -18.000032424926758
    6. '=parse' → logprob: -19.000032424926758
    7. ' parse' → logprob: -19.125032424926758
    8. '.p' → logprob: -19.500032424926758
    9. '_parse' → logprob: -19.750032424926758
    10. '	parse' → logprob: -20.125032424926758

Token 728: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00010533124441280961
    2. ' ():' → logprob: -9.375104904174805
    3. '():
' → logprob: -11.000104904174805
    4. ':' → logprob: -12.750104904174805
    5. '()' → logprob: -14.250104904174805
    6. '():
' → logprob: -15.750104904174805
    7. '(' → logprob: -17.625104904174805
    8. '):' → logprob: -18.250104904174805
    9. ' :' → logprob: -19.375104904174805
    10. ' ()' → logprob: -19.500104904174805

Token 729: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4021237802808173e-05
    2. 'area' → logprob: -12.250014305114746
    3. '        
' → logprob: -12.375014305114746
    4. ' area' → logprob: -13.875014305114746
    5. '
' → logprob: -14.125014305114746
    6. '   ' → logprob: -14.500014305114746
    7. 'print' → logprob: -14.750014305114746
    8. ',' → logprob: -14.750014305114746
    9. '           ' → logprob: -14.875014305114746
    10. '```' → logprob: -14.875014305114746

Token 730: ' optimizer' (ID: 56610)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5834252834320068
    2. 'optimizer' (adapté à ' optimizer') → logprob: -0.8334252834320068
    3. ' optimizer' → logprob: -4.958425521850586
    4. 'opt' → logprob: -7.958425521850586
    5. 'optim' → logprob: -10.583425521850586
    6. '   ' → logprob: -10.958425521850586
    7. 'extended' → logprob: -11.833425521850586
    8. 'solver' → logprob: -11.958425521850586
    9. 'ext' → logprob: -12.083425521850586
    10. ' opt' → logprob: -12.583425521850586

Token 731: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008618000894784927
    2. '=' → logprob: -4.758617877960205
    3. '.' → logprob: -13.008618354797363
    4. '   ' → logprob: -14.758618354797363
    5. ' ' → logprob: -15.008618354797363
    6. '    ' → logprob: -15.383618354797363
    7. '	' → logprob: -16.508617401123047
    8. '  ' → logprob: -16.633617401123047
    9. ' ' → logprob: -16.758617401123047
    10. ' =
' → logprob: -16.758617401123047

Token 732: ' Extended' (ID: 63995)
  Prédit: 'Extended'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Extended' → logprob: -0.0031777136027812958
    2. ' Extended' → logprob: -5.753177642822266
    3. 'Expanded' → logprob: -18.503177642822266
    4. '   ' → logprob: -19.628177642822266
    5. '_extended' → logprob: -21.503177642822266
    6. ' extended' → logprob: -22.003177642822266
    7. 'extended' → logprob: -22.128177642822266
    8. 'Ext' → logprob: -22.503177642822266
    9. 'Enhanced' → logprob: -22.753177642822266
    10. 'Extension' → logprob: -22.753177642822266

Token 733: 'Skin' (ID: 46562)
  Prédit: 'Skin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Skin' → logprob: 0.0
    2. ' Skin' → logprob: -17.875
    3. '_skin' → logprob: -18.625
    4. 'Sky' → logprob: -21.25
    5. '```' → logprob: -21.25
    6. '
' → logprob: -22.0
    7. ' skin' → logprob: -22.0
    8. 'Sk' → logprob: -22.25
    9. 'skin' → logprob: -22.375
    10. 'Skill' → logprob: -22.375

Token 734: 'Area' (ID: 10280)
  Prédit: 'Area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Area' → logprob: -6.704273118884885e-07
    2. ' Area' → logprob: -14.375000953674316
    3. '_area' → logprob: -17.875
    4. 'area' → logprob: -18.625
    5. 'Optimizer' → logprob: -18.75
    6. ' area' → logprob: -19.375
    7. '_AREA' → logprob: -19.75
    8. 'Length' → logprob: -20.125
    9. 'Are' → logprob: -20.25
    10. 'Areas' → logprob: -20.5

Token 735: 'Optimizer' (ID: 120293)
  Prédit: 'Optimizer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optimizer' → logprob: -1.1472419600977446e-06
    2. '_optimizer' → logprob: -14.250000953674316
    3. 'optimizer' → logprob: -15.250000953674316
    4. ' optimizer' → logprob: -16.500001907348633
    5. 'Optim' → logprob: -16.500001907348633
    6. 'Opt' → logprob: -18.625001907348633
    7. 'Optimize' → logprob: -18.875001907348633
    8. '.optimizer' → logprob: -20.250001907348633
    9. 'o' → logprob: -20.875001907348633
    10. 'O' → logprob: -20.875001907348633

Token 736: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.6240566083070007e-06
    2. '   ' → logprob: -14.125001907348633
    3. '(' → logprob: -14.375001907348633
    4. '(
' → logprob: -16.500001907348633
    5. '       ' → logprob: -17.000001907348633
    6. ' (' → logprob: -17.750001907348633
    7. '(A' → logprob: -20.250001907348633
    8. 'a' → logprob: -20.250001907348633
    9. '((' → logprob: -21.000001907348633
    10. '  ' → logprob: -21.625001907348633

Token 737: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007871139096096158
    2. ',l' → logprob: -7.250787258148193
    3. ' ,' → logprob: -9.500786781311035
    4. '   ' → logprob: -13.875786781311035
    5. ',
' → logprob: -14.375786781311035
    6. '       ' → logprob: -14.875786781311035
    7. '=' → logprob: -15.125786781311035
    8. '```' → logprob: -16.12578773498535
    9. ',ll' → logprob: -16.75078773498535
    10. 'l' → logprob: -17.62578773498535

Token 738: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.002475777640938759
    2. ' l' → logprob: -6.002475738525391
    3. '   ' → logprob: -16.75247573852539
    4. '       ' → logprob: -16.87747573852539
    5. '	l' → logprob: -17.12747573852539
    6. '     ' → logprob: -19.75247573852539
    7. ' ' → logprob: -20.12747573852539
    8. '    ' → logprob: -20.62747573852539
    9. '           ' → logprob: -20.62747573852539
    10. ' ' → logprob: -20.75247573852539

Token 739: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007333897519856691
    2. ',x' → logprob: -7.375733375549316
    3. ' ,' → logprob: -9.250733375549316
    4. 'x' → logprob: -11.625733375549316
    5. ' x' → logprob: -13.750733375549316
    6. '   ' → logprob: -14.875733375549316
    7. ',
' → logprob: -15.500733375549316
    8. ' ' → logprob: -16.000734329223633
    9. '       ' → logprob: -17.000734329223633
    10. '	' → logprob: -17.625734329223633

Token 740: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0004306692280806601
    2. ' x' → logprob: -7.750430583953857
    3. '	x' → logprob: -20.500431060791016
    4. '   ' → logprob: -21.250431060791016
    5. '       ' → logprob: -22.000431060791016
    6. ')x' → logprob: -22.625431060791016
    7. '
' → logprob: -23.000431060791016
    8. '(x' → logprob: -23.250431060791016
    9. '    ' → logprob: -23.750431060791016
    10. ' ' → logprob: -24.000431060791016

Token 741: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7700993418693542
    2. '       ' → logprob: -1.145099401473999
    3. ')
' → logprob: -1.520099401473999
    4. ')
' → logprob: -9.145099639892578
    5. ').' → logprob: -10.770099639892578
    6. '   ' → logprob: -12.270099639892578
    7. '<|end|>' → logprob: -12.270099639892578
    8. '
' → logprob: -12.770099639892578
    9. '           ' → logprob: -13.520099639892578
    10. '),' → logprob: -13.895099639892578

Token 742: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.138441237155348e-05
    2. 'area' → logprob: -9.375091552734375
    3. 'result' → logprob: -12.375091552734375
    4. ' area' → logprob: -13.750091552734375
    5. '
' → logprob: -15.125091552734375
    6. 'total' → logprob: -15.500091552734375
    7. '   ' → logprob: -15.500091552734375
    8. '```' → logprob: -15.625091552734375
    9. '        
' → logprob: -15.750091552734375
    10. 'print' → logprob: -15.875091552734375

Token 743: ' max' (ID: 2999)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.3294530212879181
    2. 'max' (adapté à ' max') → logprob: -1.4544529914855957
    3. 'result' → logprob: -3.4544529914855957
    4. '       ' → logprob: -4.954452991485596
    5. 'total' → logprob: -5.204452991485596
    6. ' area' → logprob: -6.829452991485596
    7. ' max' → logprob: -7.079452991485596
    8. 'print' → logprob: -7.954452991485596
    9. 'extended' → logprob: -7.954452991485596
    10. 'res' → logprob: -8.954453468322754

Token 744: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -0.005247395019978285
    2. '_extended' → logprob: -5.255247592926025
    3. '_' → logprob: -11.505247116088867
    4. 'extended' → logprob: -13.380247116088867
    5. '_ext' → logprob: -14.130247116088867
    6. '_extent' → logprob: -15.005247116088867
    7. 'area' → logprob: -15.255247116088867
    8. '_extension' → logprob: -15.755247116088867
    9. '   ' → logprob: -16.380247116088867
    10. '```' → logprob: -16.755247116088867

Token 745: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132660686969757
    2. '=' → logprob: -1.3132660388946533
    3. '   ' → logprob: -13.188265800476074
    4. '       ' → logprob: -13.438265800476074
    5. ')' → logprob: -14.813265800476074
    6. '    ' → logprob: -15.938265800476074
    7. '=max' → logprob: -16.18826675415039
    8. ' ' → logprob: -16.56326675415039
    9. '	' → logprob: -16.68826675415039
    10. '        ' → logprob: -16.68826675415039

Token 746: ' optimizer' (ID: 56610)
  Prédit: 'optimizer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'optimizer' → logprob: -0.001170225441455841
    2. ' optimizer' → logprob: -6.7511701583862305
    3. '       ' → logprob: -17.751171112060547
    4. '_optimizer' → logprob: -18.751171112060547
    5. '.optimizer' → logprob: -18.876171112060547
    6. 'optim' → logprob: -19.126171112060547
    7. 'opt' → logprob: -19.251171112060547
    8. '           ' → logprob: -21.251171112060547
    9. 'optimized' → logprob: -21.251171112060547
    10. 'optimization' → logprob: -21.376171112060547

Token 747: '.max' (ID: 11883)
  Prédit: '.max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.max' → logprob: -0.00870463252067566
    2. 'max' → logprob: -4.758704662322998
    3. '.' → logprob: -9.38370418548584
    4. ' .' → logprob: -12.75870418548584
    5. ' max' → logprob: -13.50870418548584
    6. '_max' → logprob: -14.88370418548584
    7. '   ' → logprob: -14.88370418548584
    8. '       ' → logprob: -15.13370418548584
    9. '=max' → logprob: -15.38370418548584
    10. ',max' → logprob: -15.63370418548584

Token 748: '_extended' (ID: 147320)
  Prédit: '_extended'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_extended' → logprob: 0.0
    2. '_ext' → logprob: -18.125
    3. '_extend' → logprob: -18.875
    4. 'extended' → logprob: -19.125
    5. '_extension' → logprob: -20.0
    6. 'Extended' → logprob: -21.125
    7. '```' → logprob: -22.75
    8. '_external' → logprob: -22.875
    9. '_area' → logprob: -23.0
    10. '_extent' → logprob: -23.0

Token 749: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -6.2729995988775045e-06
    2. 'area' → logprob: -12.000006675720215
    3. '_AREA' → logprob: -18.3750057220459
    4. 'Area' → logprob: -19.1250057220459
    5. ' area' → logprob: -20.1250057220459
    6. ' _' → logprob: -20.5000057220459
    7. '_are' → logprob: -21.1250057220459
    8. '```' → logprob: -21.1250057220459
    9. '_' → logprob: -21.2500057220459
    10. '.area' → logprob: -21.2500057220459

Token 750: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004409466870129108
    2. '()
' → logprob: -6.129409313201904
    3. '()' → logprob: -6.754409313201904
    4. '
' → logprob: -6.879409313201904
    5. '        
' → logprob: -11.129409790039062
    6. '(' → logprob: -12.504409790039062
    7. '<|end|>' → logprob: -13.004409790039062
    8. ')' → logprob: -13.629409790039062
    9. '
' → logprob: -13.754409790039062
    10. '(pr' → logprob: -14.004409790039062

Token 751: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.704273118884885e-07
    2. '   ' → logprob: -16.0
    3. '
' → logprob: -16.25
    4. '<|end|>' → logprob: -16.25
    5. '```' → logprob: -16.5
    6. 'pr' → logprob: -16.5
    7. '        
' → logprob: -16.75
    8. '	' → logprob: -17.875
    9. '(pr' → logprob: -18.0
    10. '	pr' → logprob: -18.5

Token 752: ' printer' (ID: 28923)
  Prédit: 'printer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'printer' (adapté à ' printer') → logprob: -0.0026596009265631437
    2. '       ' → logprob: -6.002659797668457
    3. 'pr' → logprob: -8.877659797668457
    4. ' printer' → logprob: -10.127659797668457
    5. '   ' → logprob: -13.252659797668457
    6. '        
' → logprob: -13.752659797668457
    7. 'print' → logprob: -13.877659797668457
    8. '
' → logprob: -14.252659797668457
    9. '	pr' → logprob: -17.37765884399414
    10. '(pr' → logprob: -18.12765884399414

Token 753: '.print' (ID: 2853)
  Prédit: '.print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.print' → logprob: -0.00033760786755010486
    2. '.' → logprob: -8.000337600708008
    3. 'print' → logprob: -13.750337600708008
    4. '.println' → logprob: -14.250337600708008
    5. '.pr' → logprob: -15.250337600708008
    6. ').' → logprob: -16.750337600708008
    7. '.p' → logprob: -17.125337600708008
    8. '.
' → logprob: -17.375337600708008
    9. ' .' → logprob: -17.625337600708008
    10. '.show' → logprob: -17.875337600708008

Token 754: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: 0.0
    2. 'area' → logprob: -18.375
    3. 'Area' → logprob: -19.625
    4. '(area' → logprob: -19.75
    5. '_' → logprob: -20.0
    6. '_AREA' → logprob: -20.5
    7. 'f' → logprob: -21.375
    8. 's' → logprob: -21.5
    9. '(_' → logprob: -21.875
    10. '_max' → logprob: -22.125

Token 755: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -3.054500666621607e-06
    2. '(' → logprob: -12.75000286102295
    3. 'max' → logprob: -17.500003814697266
    4. '(
' → logprob: -18.750003814697266
    5. '(ma' → logprob: -20.125003814697266
    6. '(min' → logprob: -20.500003814697266
    7. '((' → logprob: -20.750003814697266
    8. ' (' → logprob: -20.875003814697266
    9. ' max' → logprob: -20.875003814697266
    10. '[max' → logprob: -21.625003814697266

Token 756: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: 0.0
    2. '_AREA' → logprob: -19.0
    3. '(max' → logprob: -20.25
    4. '_axis' → logprob: -20.875
    5. '_are' → logprob: -21.0
    6. 'area' → logprob: -21.0
    7. '(area' → logprob: -21.75
    8. '_ar' → logprob: -22.125
    9. 'Area' → logprob: -22.125
    10. '_a' → logprob: -22.375

Token 757: ')


' (ID: 7861)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4681713283061981
    2. ')' → logprob: -1.0931713581085205
    3. '())' → logprob: -3.3431713581085205
    4. '()
' → logprob: -5.843171119689941
    5. '<|end|>' → logprob: -8.218171119689941
    6. ' )' → logprob: -9.343171119689941
    7. '(' → logprob: -9.968171119689941
    8. '
' → logprob: -10.968171119689941
    9. ')
' → logprob: -11.343171119689941
    10. '```' → logprob: -11.843171119689941

Token 758: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0280383548888494e-06
    2. ' if' → logprob: -14.250000953674316
    3. '
' → logprob: -15.625000953674316
    4. '```' → logprob: -16.375001907348633
    5. '#' → logprob: -19.750001907348633
    6. '	if' → logprob: -21.625001907348633
    7. 'If' → logprob: -22.125001907348633
    8. '#if' → logprob: -22.125001907348633
    9. '    
' → logprob: -22.250001907348633
    10. '  
' → logprob: -22.500001907348633

Token 759: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.18084587156772614
    2. '__' → logprob: -1.805845856666565
    3. '_' → logprob: -7.180845737457275
    4. '_name' → logprob: -8.555846214294434
    5. ' ' → logprob: -9.680846214294434
    6. 'name' → logprob: -10.180846214294434
    7. '___' → logprob: -10.305846214294434
    8. ' ' → logprob: -12.555846214294434
    9. ' ' → logprob: -13.055846214294434
    10. ' _' → logprob: -13.555846214294434

Token 760: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.022977089509367943
    2. '==' → logprob: -4.022976875305176
    3. ' ==' → logprob: -5.397976875305176
    4. '=="' → logprob: -9.147976875305176
    5. '.__' → logprob: -9.772976875305176
    6. '__.__' → logprob: -10.272976875305176
    7. 'name' → logprob: -10.647976875305176
    8. ' __' → logprob: -10.772976875305176
    9. '=='' → logprob: -11.272976875305176
    10. 'main' → logprob: -11.897976875305176

Token 761: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.1472419600977446e-06
    2. '==' → logprob: -14.375000953674316
    3. '____' → logprob: -15.875000953674316
    4. '___' → logprob: -15.875000953674316
    5. '__.__' → logprob: -16.125001907348633
    6. ' ==' → logprob: -16.750001907348633
    7. '__
' → logprob: -16.875001907348633
    8. '__.' → logprob: -17.000001907348633
    9. '_' → logprob: -17.375001907348633
    10. ' __' → logprob: -18.750001907348633

Token 762: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06256604939699173
    2. '==' → logprob: -2.812566041946411
    3. ' ==' → logprob: -7.81256628036499
    4. '=="' → logprob: -8.687565803527832
    5. '=='' → logprob: -10.937565803527832
    6. '=' → logprob: -12.812565803527832
    7. '==
' → logprob: -13.187565803527832
    8. '___' → logprob: -14.437565803527832
    9. '__
' → logprob: -14.687565803527832
    10. '===' → logprob: -14.937565803527832

Token 763: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.004101673606783152
    2. ''' → logprob: -5.504101753234863
    3. ' "__' → logprob: -10.879101753234863
    4. '__' → logprob: -12.379101753234863
    5. ' '__' → logprob: -16.254100799560547
    6. '"user' → logprob: -16.754100799560547
    7. '"name' → logprob: -17.379100799560547
    8. '("__' → logprob: -18.504100799560547
    9. 'main' → logprob: -18.879100799560547
    10. '"http' → logprob: -18.879100799560547

Token 764: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.20166581869125366
    2. '__' → logprob: -1.7016658782958984
    3. ''' → logprob: -8.701665878295898
    4. '_main' → logprob: -9.576665878295898
    5. '"' → logprob: -12.201665878295898
    6. '__
' → logprob: -12.826665878295898
    7. '__":
' → logprob: -13.076665878295898
    8. '_MAIN' → logprob: -13.326665878295898
    9. 'name' → logprob: -13.576665878295898
    10. ' main' → logprob: -13.701665878295898

Token 765: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.31376510858535767
    2. '__' → logprob: -1.313765048980713
    3. '__.' → logprob: -8.188765525817871
    4. '__':
' → logprob: -8.688765525817871
    5. '__.__' → logprob: -9.938765525817871
    6. '__["' → logprob: -12.063765525817871
    7. '__
' → logprob: -13.938765525817871
    8. '__
' → logprob: -14.313765525817871
    9. '__",' → logprob: -14.563765525817871
    10. '__("' → logprob: -15.188765525817871

Token 766: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31006544828414917
    2. '"' → logprob: -1.685065507888794
    3. 'main' → logprob: -2.935065507888794
    4. ''' → logprob: -3.935065507888794
    5. ' main' → logprob: -5.560065269470215
    6. '__' → logprob: -5.810065269470215
    7. ' "__' → logprob: -7.310065269470215
    8. '    
' → logprob: -8.435065269470215
    9. '	main' → logprob: -8.935065269470215
    10. '_main' → logprob: -9.310065269470215

Token 767: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.5
    3. '	main' → logprob: -19.5
    4. '   ' → logprob: -21.0
    5. 'sys' → logprob: -23.125
    6. 'import' → logprob: -23.125
    7. '_main' → logprob: -23.25
    8. '.main' → logprob: -24.375
    9. '(main' → logprob: -26.25
    10. 'ma' → logprob: -27.625

Token 768: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 766
Tokens correctement prédits (1ère position, stricte): 335
Tokens correctement prédits (1ère position, avec adaptation): 360
Tokens correctement prédits (top 10): 621
Précision stricte (1ère position): 43.73%
Précision adaptée (1ère position): 47.00%
Précision (top 10): 81.07%
================================================================================
